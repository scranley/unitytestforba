Ç@
-C:\code\ispclone\Assets\Scripts\EnemyAgent.cs
public 
class 

EnemyAgent 
: 
NetworkBehaviour *
{ 
private		 
const		 
float		 %
k_ShootingRandomThreshold		 1
=		2 3
$num		4 :
;		: ;
private

 
const

 
float

 
k_ShootTimer

 $
=

% &
$num

' ,
;

, -
[ 
Header 
( 
$str 
) 
] 
public 

int 
score 
= 
$num 
; 
public 


GameObject 
bulletPrefab "
;" #
public 

float 
GraceShootingPeriod $
=% &
$num' +
;+ ,
public 

bool 
canShoot 
{ 
get 
; 
set  #
;# $
}% &
public 

float 
column 
{ 
get 
; 
private &
set' *
;* +
}, -
public 

float 
row 
{ 
get 
; 
private #
set$ '
;' (
}) *
private 
float 
m_ShootTimer 
=  
$num! %
;% &
private 
float &
m_FirstShootTimeAfterSpawn ,
=- .
$num/ 3
;3 4
public 

void 
Awake 
( 
) 
{ 
canShoot 
= 
false 
; &
m_FirstShootTimeAfterSpawn "
=# $
Single% +
.+ ,
PositiveInfinity, <
;< =
} 
public 

override 
void 
OnNetworkSpawn '
(' (
)( )
{ 
base 
. 
OnNetworkSpawn 
( 
) 
; 
if!! 

(!! 
IsServer!! 
)!! 
{"" 	
canShoot## 
=## 
false## 
;## 
if$$ 
($$ 
score$$ 
==$$ 
$num$$ 
)$$ 
return%% 
;%% &
m_FirstShootTimeAfterSpawn'' &
=''' (
Time(( 
.(( 
time(( 
+(( 
Random(( "
.((" #
Range((# (
(((( )
GraceShootingPeriod(() <
-((= >
$num((? C
,((C D
GraceShootingPeriod((E X
+((Y Z
$num(([ `
)((` a
;((a b
Assert** 
.** 
	IsNotNull** 
(** 
InvadersGame** )
.**) *
	Singleton*** 3
)**3 4
;**4 5
InvadersGame++ 
.++ 
	Singleton++ "
.++" ##
RegisterSpawnableObject++# :
(++: ;
InvadersObjectType++; M
.++M N
Enemy++N S
,++S T

gameObject++U _
)++_ `
;++` a
InvadersGame,, 
.,, 
	Singleton,, "
.,," #

isGameOver,,# -
.,,- .
OnValueChanged,,. <
+=,,= ?

OnGameOver,,@ J
;,,J K
}-- 	
}.. 
public00 

override00 
void00 
OnNetworkDespawn00 )
(00) *
)00* +
{11 
base22 
.22 
OnNetworkDespawn22 
(22 
)22 
;22  
if33 

(33 
!33 
InvadersGame33 
.33 
	Singleton33 #
)33# $
return33% +
;33+ ,
if55 

(55 
IsServer55 
)55 
InvadersGame55 "
.55" #
	Singleton55# ,
.55, -%
UnregisterSpawnableObject55- F
(55F G
InvadersObjectType55G Y
.55Y Z
Enemy55Z _
,55_ `

gameObject55a k
)55k l
;55l m
InvadersGame66 
.66 
	Singleton66 
.66 

isGameOver66 )
.66) *
OnValueChanged66* 8
-=669 ;

OnGameOver66< F
;66F G
}77 
private99 
void99 
Update99 
(99 
)99 
{:: 
if;; 

(;; 
Time;; 
.;; 
time;; 
<=;; &
m_FirstShootTimeAfterSpawn;; 3
);;3 4
{<< 	
return>> 
;>> 
}?? 	
boolAA 
bCanShootThisFrameAA 
=AA  !
falseAA" '
;AA' (
ifBB 

(BB 
IsServerBB 
&&BB 
canShootBB  
)BB  !
ifCC 
(CC 
RandomCC 
.CC 
RangeCC 
(CC 
$numCC 
,CC 
$numCC  $
)CC$ %
>CC& '%
k_ShootingRandomThresholdCC( A
)CCA B
bCanShootThisFrameDD "
=DD# $
trueDD% )
;DD) *
ifFF 

(FF 
m_ShootTimerFF 
>FF 
$numFF 
)FF 
m_ShootTimerGG 
-=GG 
TimeGG  
.GG  !
	deltaTimeGG! *
;GG* +
elseHH 
{II 	
ifJJ 
(JJ 
!JJ 
bCanShootThisFrameJJ #
)JJ# $
returnJJ% +
;JJ+ ,
m_ShootTimerKK 
=KK 
RandomKK !
.KK! "
RangeKK" '
(KK' (
k_ShootTimerKK( 4
-KK5 6
$numKK7 <
,KK< =
k_ShootTimerKK> J
+KKK L
$numKKM R
)KKR S
;KKS T
SpawnBulletLL 
(LL 
)LL 
;LL 
returnMM 
;MM 
}NN 	
}OO 
privateQQ 
voidQQ 
SpawnBulletQQ 
(QQ 
)QQ 
{RR 
varSS 
myBulletSS 
=SS 
InstantiateSS "
(SS" #
bulletPrefabSS# /
,SS/ 0
	transformSS1 :
.SS: ;
positionSS; C
-SSD E
Vector3SSF M
.SSM N
upSSN P
,SSP Q

QuaternionSSR \
.SS\ ]
identitySS] e
)SSe f
;SSf g
myBulletTT 
.TT 
GetComponentTT 
<TT 
NetworkObjectTT +
>TT+ ,
(TT, -
)TT- .
.TT. /
SpawnTT/ 4
(TT4 5
)TT5 6
;TT6 7
}UU 
privateWW 
voidWW 
OnTriggerEnter2DWW !
(WW! "

Collider2DWW" ,
colliderWW- 5
)WW5 6
{XX 
ifYY 

(YY 
!YY 
IsServerYY 
)YY 
returnYY 
;YY 
var[[ 
	hitShield[[ 
=[[ 
collider[[  
.[[  !

gameObject[[! +
.[[+ ,
GetComponent[[, 8
<[[8 9
Shield[[9 ?
>[[? @
([[@ A
)[[A B
;[[B C
if\\ 

(\\ 
	hitShield\\ 
!=\\ 
null\\ 
)\\ 
Destroy\\ &
(\\& '
	hitShield\\' 0
.\\0 1

gameObject\\1 ;
)\\; <
;\\< =
}]] 
private__ 
void__ 

OnGameOver__ 
(__ 
bool__  
oldValue__! )
,__) *
bool__+ /
newValue__0 8
)__8 9
{`` 
enabledbb 
=bb 
falsebb 
;bb 
}cc 
publicee 

voidee 
Setupee 
(ee 
floatee 
columnee "
,ee" #
floatee$ )
rowee* -
)ee- .
{ff 
thisgg 
.gg 
columngg 
=gg 
columngg 
;gg 
thishh 
.hh 
rowhh 
=hh 
rowhh 
;hh 
}ii 
}jj ±
/C:\code\ispclone\Assets\Scripts\PlayerBullet.cs
public 
class 
PlayerBullet 
: 
MonoBehaviour )
{ 
private 
const 
float 
k_YBoundary #
=$ %
$num& +
;+ ,
public 

PlayerControl 
owner 
; 
[

 
Header

 
(

 
$str

 
)

  
]

  !
[ 
SerializeField 
] 
[ 
Tooltip 
( 
$str =
)= >
]> ?
private 
float 
m_TravelSpeed 
=  !
$num" &
;& '
[ 
SerializeField 
] 
ParticleSystem $
m_EnemyExplosionParticle +
;+ ,
private 
void 
Update 
( 
) 
{ 
if 

( 
! 
NetworkManager 
. 
	Singleton %
.% &
IsServer& .
). /
return0 6
;6 7
	transform 
. 
	Translate 
( 
$num 
, 
m_TravelSpeed ,
*- .
Time/ 3
.3 4
	deltaTime4 =
,= >
$num? @
)@ A
;A B
if 

( 
	transform 
. 
position 
. 
y  
>! "
k_YBoundary# .
). /
if 
( 
NetworkManager 
. 
	Singleton (
.( )
IsServer) 1
)1 2
Destroy 
( 

gameObject "
)" #
;# $
} 
private 
void 
OnTriggerEnter2D !
(! "

Collider2D" ,
collider- 5
)5 6
{ 
if 

( 
! 
NetworkManager 
. 
	Singleton %
.% &
IsServer& .
). /
return   
;   
var"" 
hitEnemy"" 
="" 
collider"" 
.""  

gameObject""  *
.""* +
GetComponent""+ 7
<""7 8

EnemyAgent""8 B
>""B C
(""C D
)""D E
;""E F
if## 

(## 
hitEnemy## 
!=## 
null## 
&&## 
owner##  %
!=##& (
null##) -
)##- .
{$$ 	
owner%% 
.%% 
IncreasePlayerScore%% %
(%%% &
hitEnemy%%& .
.%%. /
score%%/ 4
)%%4 5
;%%5 6
Destroy'' 
('' 
hitEnemy'' 
.'' 

gameObject'' '
)''' (
;''( )
Destroy(( 
((( 

gameObject(( 
)(( 
;((  
Instantiate,, 
(,, $
m_EnemyExplosionParticle,, 0
,,,0 1
	transform,,2 ;
.,,; <
position,,< D
,,,D E

quaternion,,F P
.,,P Q
identity,,Q Y
),,Y Z
;,,Z [
return-- 
;-- 
}.. 	
var00 
	hitShield00 
=00 
collider00  
.00  !

gameObject00! +
.00+ ,
GetComponent00, 8
<008 9
Shield009 ?
>00? @
(00@ A
)00A B
;00B C
if11 

(11 
	hitShield11 
!=11 
null11 
)11 
{22 	
Destroy33 
(33 
	hitShield33 
.33 

gameObject33 (
)33( )
;33) *
Destroy44 
(44 

gameObject44 
)44 
;44  
}55 	
}66 
}77 Ì
.C:\code\ispclone\Assets\Scripts\MenuControl.cs
public 
class 
MenuControl 
: 
MonoBehaviour (
{		 
[

 
SerializeField

 
]

 
private 
TMP_Text 
m_HostIpInput "
;" #
[ 
SerializeField 
] 
private 
string 
m_LobbySceneName #
=$ %
$str& 5
;5 6
public 

void 
StartLocalGame 
( 
)  
{ 
var 
utpTransport 
= 
( 
UnityTransport *
)* +
NetworkManager+ 9
.9 :
	Singleton: C
.C D
NetworkConfigD Q
.Q R
NetworkTransportR b
;b c
if 

( 
utpTransport 
) 
m_HostIpInput '
.' (
text( ,
=- .
$str/ :
;: ;
if 

( 
NetworkManager 
. 
	Singleton $
.$ %
	StartHost% .
(. /
)/ 0
)0 1
{ 	"
SceneTransitionHandler "
." #"
sceneTransitionHandler# 9
.9 :
RegisterCallbacks: K
(K L
)L M
;M N"
SceneTransitionHandler "
." #"
sceneTransitionHandler# 9
.9 :
SwitchScene: E
(E F
m_LobbySceneNameF V
)V W
;W X
} 	
else 
{ 	
Debug 
. 
LogError 
( 
$str 2
)2 3
;3 4
} 	
} 
public   

void   
JoinLocalGame   
(   
)   
{!! 
if"" 

("" 
m_HostIpInput"" 
."" 
text"" 
!="" !
$str""" ,
)"", -
{## 	
var$$ 
utpTransport$$ 
=$$ 
($$  
UnityTransport$$  .
)$$. /
NetworkManager$$/ =
.$$= >
	Singleton$$> G
.$$G H
NetworkConfig$$H U
.$$U V
NetworkTransport$$V f
;$$f g
if%% 
(%% 
utpTransport%% 
)%% 
{&& 
utpTransport'' 
.'' 
SetConnectionData'' .
(''. /
Sanitize''/ 7
(''7 8
m_HostIpInput''8 E
.''E F
text''F J
)''J K
,''K L
$num''M Q
)''Q R
;''R S
}(( 
if)) 
()) 
!)) 
NetworkManager)) 
.))  
	Singleton))  )
.))) *
StartClient))* 5
())5 6
)))6 7
)))7 8
{** 
Debug++ 
.++ 
LogError++ 
(++ 
$str++ 8
)++8 9
;++9 :
},, 
}-- 	
}.. 
public00 

static00 
string00 
Sanitize00 !
(00! "
string00" (
dirtyString00) 4
)004 5
{11 
return33 
Regex33 
.33 
Replace33 
(33 
dirtyString33 (
,33( )
$str33* 9
,339 :
$str33; =
)33= >
;33> ?
}44 
}55 ¥)
.C:\code\ispclone\Assets\Scripts\EnemyBullet.cs
public 
class 
EnemyBullet 
: 
MonoBehaviour (
{ 
private 
const 
float 
k_YBoundary #
=$ %
-& '
$num' +
;+ ,
[ 
Header 
( 
$str 
)  
]  !
[ 
SerializeField 
] 
[ 
Tooltip 
( 
$str =
)= >
]> ?
private 
float 
m_TravelSpeed 
=  !
$num" &
;& '
[ 
SerializeField 
] 
ParticleSystem %
m_ShieldExplosionParticle ,
;, -
private 
void 
Start 
( 
) 
{ 
Assert 
. 
IsTrue 
( 
InvadersGame "
." #
	Singleton# ,
), -
;- .
Assert 
. 
IsTrue 
( 
NetworkManager $
.$ %
	Singleton% .
). /
;/ 0
if 

(
 
InvadersGame 
. 
	Singleton !
)! "
InvadersGame 
. 
	Singleton "
." #

isGameOver# -
.- .
OnValueChanged. <
+== ?

OnGameOver@ J
;J K
} 
private 
void 
Update 
( 
) 
{ 
if 

( 
! 
NetworkManager 
. 
	Singleton %
.% &
IsServer& .
). /
return0 6
;6 7
	transform 
. 
	Translate 
( 
$num 
, 
-  
m_TravelSpeed  -
*. /
Time0 4
.4 5
	deltaTime5 >
,> ?
$num@ A
)A B
;B C
if!! 

(!! 
	transform!! 
.!! 
position!! 
.!! 
y!!  
<!!! "
k_YBoundary!!# .
)!!. /
Destroy!!0 7
(!!7 8

gameObject!!8 B
)!!B C
;!!C D
}"" 
private$$ 
void$$ 
	OnDestroy$$ 
($$ 
)$$ 
{%% 
if&& 

(&& 
InvadersGame&& 
.&& 
	Singleton&& "
)&&" #
InvadersGame&&$ 0
.&&0 1
	Singleton&&1 :
.&&: ;

isGameOver&&; E
.&&E F
OnValueChanged&&F T
-=&&U W

OnGameOver&&X b
;&&b c
}'' 
private)) 
void)) 
OnTriggerEnter2D)) !
())! "

Collider2D))" ,
collider))- 5
)))5 6
{** 
if++ 

(++ 
!++ 
NetworkManager++ 
.++ 
	Singleton++ %
.++% &
IsServer++& .
)++. /
return,, 
;,, 
var.. 
	hitPlayer.. 
=.. 
collider..  
...  !

gameObject..! +
...+ ,
GetComponent.., 8
<..8 9
PlayerControl..9 F
>..F G
(..G H
)..H I
;..I J
if// 

(// 
	hitPlayer// 
!=// 
null// 
)// 
{00 	
	hitPlayer11 
.11 
HitByBullet11 !
(11! "
)11" #
;11# $
Destroy22 
(22 

gameObject22 
)22 
;22  
return33 
;33 
}44 	
var66 
	hitShield66 
=66 
collider66  
.66  !

gameObject66! +
.66+ ,
GetComponent66, 8
<668 9
Shield669 ?
>66? @
(66@ A
)66A B
;66B C
if77 

(77 
	hitShield77 
!=77 
null77 
)77 
{88 	
Destroy99 
(99 
	hitShield99 
.99 

gameObject99 (
)99( )
;99) *
Destroy:: 
(:: 

gameObject:: 
):: 
;::  
Instantiate;; 
(;; %
m_ShieldExplosionParticle;; 1
,;;1 2
	transform;;3 <
.;;< =
position;;= E
,;;E F

quaternion;;G Q
.;;Q R
identity;;R Z
);;Z [
;;;[ \
}<< 	
}== 
private?? 
void?? 

OnGameOver?? 
(?? 
bool??  
oldValue??! )
,??) *
bool??+ /
newValue??0 8
)??8 9
{@@ 
enabledAA 
=AA 
falseAA 
;AA 
ifDD 

(DD 
NetworkManagerDD 
.DD 
	SingletonDD $
.DD$ %
IsServerDD% -
)DD- .
DestroyDD/ 6
(DD6 7

gameObjectDD7 A
)DDA B
;DDB C
}EE 
}FF îU
/C:\code\ispclone\Assets\Scripts\LobbyControl.cs
public 
class 
LobbyControl 
: 
NetworkBehaviour ,
{		 
[

 
SerializeField

 
]

 
private 
string 
m_InGameSceneName $
=% &
$str' /
;/ 0
[ 
SerializeField 
] 
private 
int  
m_MinimumPlayerCount $
=% &
$num' (
;( )
public 

TMP_Text 
	LobbyText 
; 
private 
bool 
m_AllPlayersInLobby $
;$ %
private 

Dictionary 
< 
ulong 
, 
bool "
>" #
m_ClientsInLobby$ 4
;4 5
private 
string !
m_UserLobbyStatusText (
;( )
public 

override 
void 
OnNetworkSpawn '
(' (
)( )
{ 
m_ClientsInLobby 
= 
new 

Dictionary )
<) *
ulong* /
,/ 0
bool1 5
>5 6
(6 7
)7 8
;8 9
m_ClientsInLobby 
. 
Add 
( 
NetworkManager +
.+ ,
LocalClientId, 9
,9 :
false; @
)@ A
;A B
if   

(   
IsServer   
)   
{!! 	
m_AllPlayersInLobby"" 
=""  !
false""" '
;""' (
NetworkManager%% 
.%% %
OnClientConnectedCallback%% 4
+=%%5 7%
OnClientConnectedCallback%%8 Q
;%%Q R"
SceneTransitionHandler&& "
.&&" #"
sceneTransitionHandler&&# 9
.&&9 :
OnClientLoadedScene&&: M
+=&&N P
ClientLoadedScene&&Q b
;&&b c
}'' 	%
GenerateUserStatsForLobby** !
(**! "
)**" #
;**# $"
SceneTransitionHandler,, 
.,, "
sceneTransitionHandler,, 5
.,,5 6
SetSceneState,,6 C
(,,C D"
SceneTransitionHandler,,D Z
.,,Z [
SceneStates,,[ f
.,,f g
Lobby,,g l
),,l m
;,,m n
}-- 
private// 
void// 
OnGUI// 
(// 
)// 
{00 
if11 

(11 
	LobbyText11 
!=11 
null11 
)11 
	LobbyText11 (
.11( )
text11) -
=11. /!
m_UserLobbyStatusText110 E
;11E F
}22 
private99 
void99 %
GenerateUserStatsForLobby99 *
(99* +
)99+ ,
{:: !
m_UserLobbyStatusText;; 
=;; 
string;;  &
.;;& '
Empty;;' ,
;;;, -
foreach<< 
(<< 
var<< 
clientLobbyStatus<< &
in<<' )
m_ClientsInLobby<<* :
)<<: ;
{== 	!
m_UserLobbyStatusText>> !
+=>>" $
$str>>% .
+>>/ 0
clientLobbyStatus>>1 B
.>>B C
Key>>C F
+>>G H
$str>>I U
;>>U V
if?? 
(?? 
clientLobbyStatus?? !
.??! "
Value??" '
)??' (!
m_UserLobbyStatusText@@ %
+=@@& (
$str@@) 4
;@@4 5
elseAA !
m_UserLobbyStatusTextBB %
+=BB& (
$strBB) 8
;BB8 9
}CC 	
}DD 
privateJJ 
voidJJ (
UpdateAndCheckPlayersInLobbyJJ -
(JJ- .
)JJ. /
{KK 
m_AllPlayersInLobbyLL 
=LL 
m_ClientsInLobbyLL .
.LL. /
CountLL/ 4
>=LL5 7 
m_MinimumPlayerCountLL8 L
;LLL M
foreachNN 
(NN 
varNN 
clientLobbyStatusNN &
inNN' )
m_ClientsInLobbyNN* :
)NN: ;
{OO 	1
%SendClientReadyStatusUpdatesClientRpcPP 1
(PP1 2
clientLobbyStatusPP2 C
.PPC D
KeyPPD G
,PPG H
clientLobbyStatusPPI Z
.PPZ [
ValuePP[ `
)PP` a
;PPa b
ifQQ 
(QQ 
!QQ 
NetworkManagerQQ 
.QQ  
	SingletonQQ  )
.QQ) *
ConnectedClientsQQ* :
.QQ: ;
ContainsKeyQQ; F
(QQF G
clientLobbyStatusQQG X
.QQX Y
KeyQQY \
)QQ\ ]
)QQ] ^
m_AllPlayersInLobbyTT #
=TT$ %
falseTT& +
;TT+ ,
}UU 	#
CheckForAllPlayersReadyWW 
(WW  
)WW  !
;WW! "
}XX 
private__ 
void__ 
ClientLoadedScene__ "
(__" #
ulong__# (
clientId__) 1
)__1 2
{`` 
ifaa 

(aa 
IsServeraa 
)aa 
{bb 	
ifcc 
(cc 
!cc 
m_ClientsInLobbycc !
.cc! "
ContainsKeycc" -
(cc- .
clientIdcc. 6
)cc6 7
)cc7 8
{dd 
m_ClientsInLobbyee  
.ee  !
Addee! $
(ee$ %
clientIdee% -
,ee- .
falseee/ 4
)ee4 5
;ee5 6%
GenerateUserStatsForLobbyff )
(ff) *
)ff* +
;ff+ ,
}gg (
UpdateAndCheckPlayersInLobbyii (
(ii( )
)ii) *
;ii* +
}jj 	
}kk 
privatess 
voidss %
OnClientConnectedCallbackss *
(ss* +
ulongss+ 0
clientIdss1 9
)ss9 :
{tt 
ifuu 

(uu 
IsServeruu 
)uu 
{vv 	
ifww 
(ww 
!ww 
m_ClientsInLobbyww !
.ww! "
ContainsKeyww" -
(ww- .
clientIdww. 6
)ww6 7
)ww7 8
m_ClientsInLobbyww9 I
.wwI J
AddwwJ M
(wwM N
clientIdwwN V
,wwV W
falsewwX ]
)ww] ^
;ww^ _%
GenerateUserStatsForLobbyxx %
(xx% &
)xx& '
;xx' ((
UpdateAndCheckPlayersInLobbyzz (
(zz( )
)zz) *
;zz* +
}{{ 	
}|| 
[
 
	ClientRpc
 
]
 
private
 
void
 3
%SendClientReadyStatusUpdatesClientRpc
 6
(
6 7
ulong
7 <
clientId
= E
,
E F
bool
G K
isReady
L S
)
S T
{
 
if
 

(
 
!
 
IsServer
 
)
 
{
 	
if
 
(
 
!
 
m_ClientsInLobby
 !
.
! "
ContainsKey
" -
(
- .
clientId
. 6
)
6 7
)
7 8
m_ClientsInLobby
  
.
  !
Add
! $
(
$ %
clientId
% -
,
- .
isReady
/ 6
)
6 7
;
7 8
else
 
m_ClientsInLobby
  
[
  !
clientId
! )
]
) *
=
+ ,
isReady
- 4
;
4 5'
GenerateUserStatsForLobby
 %
(
% &
)
& '
;
' (
}
 	
}
 
private
 
void
 %
CheckForAllPlayersReady
 (
(
( )
)
) *
{
 
if
 

(
 !
m_AllPlayersInLobby
 
)
  
{
 	
var
  
allPlayersAreReady
 "
=
# $
true
% )
;
) *
foreach
 
(
 
var
 
clientLobbyStatus
 *
in
+ -
m_ClientsInLobby
. >
)
> ?
if
 
(
 
!
 
clientLobbyStatus
 &
.
& '
Value
' ,
)
, - 
allPlayersAreReady
 &
=
' (
false
) .
;
. /
if
¢¢ 
(
¢¢  
allPlayersAreReady
¢¢ "
)
¢¢" #
{
££ 
NetworkManager
¥¥ 
.
¥¥ 
	Singleton
¥¥ (
.
¥¥( )'
OnClientConnectedCallback
¥¥) B
-=
¥¥C E'
OnClientConnectedCallback
¥¥F _
;
¥¥_ `$
SceneTransitionHandler
¨¨ &
.
¨¨& '$
sceneTransitionHandler
¨¨' =
.
¨¨= >!
OnClientLoadedScene
¨¨> Q
-=
¨¨R T
ClientLoadedScene
¨¨U f
;
¨¨f g$
SceneTransitionHandler
«« &
.
««& '$
sceneTransitionHandler
««' =
.
««= >
SwitchScene
««> I
(
««I J
m_InGameSceneName
««J [
)
««[ \
;
««\ ]
}
¬¬ 
}
­­ 	
}
®® 
public
´´ 

void
´´ 
PlayerIsReady
´´ 
(
´´ 
)
´´ 
{
µµ 
m_ClientsInLobby
¶¶ 
[
¶¶ 
NetworkManager
¶¶ '
.
¶¶' (
	Singleton
¶¶( 1
.
¶¶1 2
LocalClientId
¶¶2 ?
]
¶¶? @
=
¶¶A B
true
¶¶C G
;
¶¶G H
if
·· 

(
·· 
IsServer
·· 
)
·· 
{
¸¸ 	*
UpdateAndCheckPlayersInLobby
¹¹ (
(
¹¹( )
)
¹¹) *
;
¹¹* +
}
ºº 	
else
»» 
{
¼¼ 	&
OnClientIsReadyServerRpc
½½ $
(
½½$ %
NetworkManager
½½% 3
.
½½3 4
	Singleton
½½4 =
.
½½= >
LocalClientId
½½> K
)
½½K L
;
½½L M
}
¾¾ 	'
GenerateUserStatsForLobby
ÀÀ !
(
ÀÀ! "
)
ÀÀ" #
;
ÀÀ# $
}
ÁÁ 
[
ÈÈ 
	ServerRpc
ÈÈ 
(
ÈÈ 
RequireOwnership
ÈÈ 
=
ÈÈ  !
false
ÈÈ" '
)
ÈÈ' (
]
ÈÈ( )
private
ÉÉ 
void
ÉÉ &
OnClientIsReadyServerRpc
ÉÉ )
(
ÉÉ) *
ulong
ÉÉ* /
clientid
ÉÉ0 8
)
ÉÉ8 9
{
ÊÊ 
if
ËË 

(
ËË 
m_ClientsInLobby
ËË 
.
ËË 
ContainsKey
ËË (
(
ËË( )
clientid
ËË) 1
)
ËË1 2
)
ËË2 3
{
ÌÌ 	
m_ClientsInLobby
ÍÍ 
[
ÍÍ 
clientid
ÍÍ %
]
ÍÍ% &
=
ÍÍ' (
true
ÍÍ) -
;
ÍÍ- .*
UpdateAndCheckPlayersInLobby
ÎÎ (
(
ÎÎ( )
)
ÎÎ) *
;
ÎÎ* +'
GenerateUserStatsForLobby
ÏÏ %
(
ÏÏ% &
)
ÏÏ& '
;
ÏÏ' (
}
ÐÐ 	
}
ÑÑ 
}ÒÒ ¬
)C:\code\ispclone\Assets\Scripts\Shield.cs
public 
class 
Shield 
: 
MonoBehaviour #
{ 
	protected 
void 
Start 
( 
) 
{ 
var		 
networkingManager		 
=		 
NetworkManager		  .
.		. /
	Singleton		/ 8
;		8 9
if

 

(

 
networkingManager

 
&&

  
networkingManager

! 2
.

2 3
IsServer

3 ;
)

; <
InvadersGame

= I
.

I J
	Singleton

J S
.

S T#
RegisterSpawnableObject

T k
(

k l
InvadersObjectType

l ~
.

~ 
Shield	

 
,


 

gameObject


 
)


 
;


 
} 
	protected 
void 
	OnDestroy 
( 
) 
{ 
var 
networkingManager 
= 
NetworkManager  .
.. /
	Singleton/ 8
;8 9
if 

( 
networkingManager 
&&  
networkingManager! 2
.2 3
IsServer3 ;
); <
InvadersGame= I
.I J
	SingletonJ S
.S T%
UnregisterSpawnableObjectT m
(m n
InvadersObjectType	n 
.
 
Shield
 
,
 

gameObject
 
)
 
;
 
} 
} 5
9C:\code\ispclone\Assets\Scripts\SceneTransitionHandler.cs
public 
class "
SceneTransitionHandler #
:$ %
NetworkBehaviour& 6
{ 
static 

public "
SceneTransitionHandler ("
sceneTransitionHandler) ?
{@ A
getB E
;E F
internalG O
setP S
;S T
}U V
[

 
SerializeField

 
]

 
public 

string 
DefaultMainMenu !
=" #
$str$ /
;/ 0
[ 
HideInInspector 
] 
public 

delegate 
void ,
 ClientLoadedSceneDelegateHandler 9
(9 :
ulong: ?
clientId@ H
)H I
;I J
[ 
HideInInspector 
] 
public 

event ,
 ClientLoadedSceneDelegateHandler 1
OnClientLoadedScene2 E
;E F
[ 
HideInInspector 
] 
public 

delegate 
void ,
 SceneStateChangedDelegateHandler 9
(9 :
SceneStates: E
newStateF N
)N O
;O P
[ 
HideInInspector 
] 
public 

event ,
 SceneStateChangedDelegateHandler 1
OnSceneStateChanged2 E
;E F
private 
int "
m_numberOfClientLoaded &
;& '
public 

enum 
SceneStates 
{ 
Init 
, 
Start 
, 
Lobby   
,   
Ingame!! 
}"" 
private$$ 
SceneStates$$ 
m_SceneState$$ $
;$$$ %
private++ 
void++ 
Awake++ 
(++ 
)++ 
{,, 
if-- 

(--
 "
sceneTransitionHandler-- !
!=--" $
this--% )
&&--* ,"
sceneTransitionHandler--- C
!=--D F
null--G K
)--K L
{.. 	

GameObject// 
.// 
Destroy// 
(// "
sceneTransitionHandler// 5
.//5 6

gameObject//6 @
)//@ A
;//A B
}00 	"
sceneTransitionHandler11 
=11  
this11! %
;11% &
SetSceneState22 
(22 
SceneStates22 !
.22! "
Init22" &
)22& '
;22' (
DontDestroyOnLoad33 
(33 
this33 
)33 
;33  
}44 
public;; 

void;; 
SetSceneState;; 
(;; 
SceneStates;; )

sceneState;;* 4
);;4 5
{<< 
m_SceneState== 
=== 

sceneState== !
;==! "
if>> 

(>>
 
OnSceneStateChanged>> 
!=>> !
null>>" &
)>>& '
{?? 	
OnSceneStateChanged@@ 
.@@  
Invoke@@  &
(@@& '
m_SceneState@@' 3
)@@3 4
;@@4 5
}AA 	
}BB 
publicII 

SceneStatesII  
GetCurrentSceneStateII +
(II+ ,
)II, -
{JJ 
returnKK 
m_SceneStateKK 
;KK 
}LL 
privateRR 
voidRR 
StartRR 
(RR 
)RR 
{SS 
ifTT 

(TT
 
m_SceneStateTT 
==TT 
SceneStatesTT &
.TT& '
InitTT' +
)TT+ ,
{UU 	
SceneManagerVV 
.VV 
	LoadSceneVV "
(VV" #
DefaultMainMenuVV# 2
)VV2 3
;VV3 4
}WW 	
}XX 
public]] 

void]] 
RegisterCallbacks]] !
(]]! "
)]]" #
{^^ 
NetworkManager__ 
.__ 
	Singleton__  
.__  !
SceneManager__! -
.__- .
OnLoadComplete__. <
+=__= ?
OnLoadComplete__@ N
;__N O
}aa 
publicgg 

voidgg 
SwitchScenegg 
(gg 
stringgg "
	scenenamegg# ,
)gg, -
{hh 
ifii 

(ii
 
NetworkManagerii 
.ii 
	Singletonii #
.ii# $
IsListeningii$ /
)ii/ 0
{jj 	"
m_numberOfClientLoadedkk "
=kk# $
$numkk% &
;kk& '
NetworkManagerll 
.ll 
	Singletonll $
.ll$ %
SceneManagerll% 1
.ll1 2
	LoadScenell2 ;
(ll; <
	scenenamell< E
,llE F
LoadSceneModellG T
.llT U
SinglellU [
)ll[ \
;ll\ ]
}mm 	
elsenn 
{oo 	
SceneManagerpp 
.pp 
LoadSceneAsyncpp '
(pp' (
	scenenamepp( 1
)pp1 2
;pp2 3
}qq 	
}rr 
privatett 
voidtt 
OnLoadCompletett 
(tt  
ulongtt  %
clientIdtt& .
,tt. /
stringtt0 6
	sceneNamett7 @
,tt@ A
LoadSceneModettB O
loadSceneModettP ]
)tt] ^
{uu "
m_numberOfClientLoadedvv 
+=vv !
$numvv" #
;vv# $
OnClientLoadedSceneww 
?ww 
.ww 
Invokeww #
(ww# $
clientIdww$ ,
)ww, -
;ww- .
}xx 
publiczz 

boolzz 
AllClientsAreLoadedzz #
(zz# $
)zz$ %
{{{ 
return|| "
m_numberOfClientLoaded|| %
==||& (
NetworkManager||) 7
.||7 8
	Singleton||8 A
.||A B
ConnectedClients||B R
.||R S
Count||S X
;||X Y
}}} 
public
 

void
 "
ExitAndLoadStartMenu
 $
(
$ %
)
% &
{
 
NetworkManager
 
.
 
	Singleton
  
.
  !
SceneManager
! -
.
- .
OnLoadComplete
. <
-=
= ?
OnLoadComplete
@ N
;
N O!
OnClientLoadedScene
 
=
 
null
 "
;
" #
SetSceneState
 
(
 
SceneStates
 !
.
! "
Start
" '
)
' (
;
( )
SceneManager
 
.
 
	LoadScene
 
(
 
$num
  
)
  !
;
! "
}
 
} Þê
/C:\code\ispclone\Assets\Scripts\InvadersGame.cs
public		 
enum		 
InvadersObjectType		 
{

 
Enemy 	
=
 
$num 
, 
Shield 

,
 
Max 
} 
[ 
Flags 
] 
public 
enum $
UpdateEnemiesResultFlags $
:% &
byte' +
{ 
None 
=	 

$num 
, 

FoundEnemy 
= 
$num 
, %
ReachedHorizontalBoundary 
= 
$num  &
,& '
ReachedBottom 
= 
$num 
, 
Max 
} 
public 
enum 
GameOverReason 
: 
byte !
{ 
None 
=	 

$num 
,  
EnemiesReachedBottom 
= 
$num 
, 
Death 	
=
 
$num 
, 
Max 
, 
}   
public"" 
class"" 
InvadersGame"" 
:"" 
NetworkBehaviour"" ,
{## 
private%% 
const%% 
float%% )
k_EnemyVerticalMovementOffset%% 5
=%%6 7
-%%8 9
$num%%9 =
;%%= >
private&& 
const&& 
float&& '
k_LeftOrRightBoundaryOffset&& 3
=&&4 5
$num&&6 ;
;&&; <
private'' 
const'' 
float'' "
k_BottomBoundaryOffset'' .
=''/ 0
$num''1 6
;''6 7
[)) 
Header)) 
()) 
$str)) 
))) 
])) 
public** 


GameObject** 
enemy1Prefab** "
;**" #
public++ 


GameObject++ 
enemy2Prefab++ "
;++" #
public,, 


GameObject,, 
enemy3Prefab,, "
;,," #
public-- 


GameObject-- 
superEnemyPrefab-- &
;--& '
public.. 


GameObject.. 
shieldPrefab.. "
;.." #
[00 
Header00 
(00 
$str00 
)00 
]00 
public11 

TMP_Text11 
gameTimerText11 !
;11! "
public22 

TMP_Text22 
	scoreText22 
;22 
public33 

TMP_Text33 
	livesText33 
;33 
public44 

TMP_Text44 
gameOverText44  
;44  !
[66 
Header66 
(66 
$str66 
)66  
]66  !
public77 

	Transform77 
saucerSpawnPoint77 %
;77% &
[99 
SerializeField99 
]99 
[:: 
Tooltip:: 
(:: 
$str:: 3
)::3 4
]::4 5
private;; 
float;; 
m_DelayedStartTime;; $
=;;% &
$num;;' +
;;;+ ,
[== 
SerializeField== 
]== 
private>> 
NetworkVariable>> 
<>> 
float>> !
>>>! "
m_TickPeriodic>># 1
=>>2 3
new>>4 7
NetworkVariable>>8 G
<>>G H
float>>H M
>>>M N
(>>N O
$num>>O S
)>>S T
;>>T U
[@@ 
SerializeField@@ 
]@@ 
privateAA 
NetworkVariableAA 
<AA 
floatAA !
>AA! ""
m_EnemyMovingDirectionAA# 9
=AA: ;
newAA< ?
NetworkVariableAA@ O
<AAO P
floatAAP U
>AAU V
(AAV W
$numAAW [
)AA[ \
;AA\ ]
[CC 
SerializeFieldCC 
]CC 
privateDD 
floatDD .
"m_RandomThresholdForSaucerCreationDD 4
=DD5 6
$numDD7 <
;DD< =
privateFF 
ListFF 
<FF 

EnemyAgentFF 
>FF 
	m_EnemiesFF &
=FF' (
newFF) ,
ListFF- 1
<FF1 2

EnemyAgentFF2 <
>FF< =
(FF= >
)FF> ?
;FF? @
privateJJ 
boolJJ 
m_ClientGameOverJJ !
;JJ! "
privateKK 
boolKK 
m_ClientGameStartedKK $
;KK$ %
privateLL 
boolLL "
m_ClientStartCountdownLL '
;LL' (
privateNN 
NetworkVariableNN 
<NN 
boolNN  
>NN  !
m_CountdownStartedNN" 4
=NN5 6
newNN7 :
NetworkVariableNN; J
<NNJ K
boolNNK O
>NNO P
(NNP Q
falseNNQ V
)NNV W
;NNW X
privatePP 
floatPP 

m_NextTickPP 
;PP 
privateTT 
boolTT  
m_ReplicatedTimeSentTT %
=TT& '
falseTT( -
;TT- .
privateUU 

GameObjectUU 
m_SaucerUU 
;UU  
privateVV 
ListVV 
<VV 
ShieldVV 
>VV 
	m_ShieldsVV "
=VV# $
newVV% (
ListVV) -
<VV- .
ShieldVV. 4
>VV4 5
(VV5 6
)VV6 7
;VV7 8
privateWW 
floatWW 
m_TimeRemainingWW !
;WW! "
publicYY 

staticYY 
InvadersGameYY 
	SingletonYY (
{YY) *
getYY+ .
;YY. /
privateYY0 7
setYY8 ;
;YY; <
}YY= >
public[[ 

NetworkVariable[[ 
<[[ 
bool[[ 
>[[  
hasGameStarted[[! /
{[[0 1
get[[2 5
;[[5 6
}[[7 8
=[[9 :
new[[; >
NetworkVariable[[? N
<[[N O
bool[[O S
>[[S T
([[T U
false[[U Z
)[[Z [
;[[[ \
public]] 

NetworkVariable]] 
<]] 
bool]] 
>]]  

isGameOver]]! +
{]], -
get]]. 1
;]]1 2
}]]3 4
=]]5 6
new]]7 :
NetworkVariable]]; J
<]]J K
bool]]K O
>]]O P
(]]P Q
false]]Q V
)]]V W
;]]W X
privatecc 
voidcc 
Awakecc 
(cc 
)cc 
{dd 
Assertee 
.ee 
IsNullee 
(ee 
	Singletonee 
,ee  
$"ee! #
$stree# 9
{ee9 :
nameofee: @
(ee@ A
InvadersGameeeA M
)eeM N
}eeN O
$streeO q
"eeq r
)eer s
;ees t
	Singletonff 
=ff 
thisff 
;ff 
OnSingletonReadyhh 
?hh 
.hh 
Invokehh  
(hh  !
)hh! "
;hh" #
ifjj 

(jj 
IsServerjj 
)jj 
{kk 	
hasGameStartedll 
.ll 
Valuell  
=ll! "
falsell# (
;ll( )
m_TimeRemainingoo 
=oo 
m_DelayedStartTimeoo 0
;oo0 1 
m_ReplicatedTimeSentrr  
=rr! "
falserr# (
;rr( )
}ss 	
elsett 
{uu 	
Debugww 
.ww 
	LogFormatww 
(ww 
$strww N
,wwN O
m_TimeRemainingwwP _
)ww_ `
;ww` a
}xx 	
}yy 
private 
void 
Update 
( 
) 
{
 
if
 

(
 
IsCurrentGameOver
 
(
 
)
 
)
  
return
! '
;
' (
UpdateGameTimer
 
(
 
)
 
;
 
if
 

(
 
!
 
IsServer
 
)
 
return
 
;
 
if
 

(
 
HasGameStarted
 
(
 
)
 
)
 
UpdateEnemies
 +
(
+ ,
)
, -
;
- .
}
 
public
 

override
 
void
 
OnNetworkDespawn
 )
(
) *
)
* +
{
 
base
 
.
 
OnNetworkDespawn
 
(
 
)
 
;
  
if
 

(
 
IsServer
 
)
 
{
 	
	m_Enemies
 
.
 
Clear
 
(
 
)
 
;
 
	m_Shields
 
.
 
Clear
 
(
 
)
 
;
 
}
 	
NetworkManager
 
.
 
	Singleton
  
.
  !'
OnClientConnectedCallback
! :
-=
; =
OnClientConnected
> O
;
O P
}
 
internal
 
static
 
event
 
Action
  
OnSingletonReady
! 1
;
1 2
public
 

override
 
void
 
OnNetworkSpawn
 '
(
' (
)
( )
{
 
if
 

(
 
IsClient
 
&&
 
!
 
IsServer
 !
)
! "
{
 	
m_ClientGameOver
   
=
   
false
   $
;
  $ %$
m_ClientStartCountdown
¡¡ "
=
¡¡# $
false
¡¡% *
;
¡¡* +!
m_ClientGameStarted
¢¢ 
=
¢¢  !
false
¢¢" '
;
¢¢' ( 
m_CountdownStarted
¤¤ 
.
¤¤ 
OnValueChanged
¤¤ -
+=
¤¤. 0
(
¤¤1 2
oldValue
¤¤2 :
,
¤¤: ;
newValue
¤¤< D
)
¤¤D E
=>
¤¤F H
{
¥¥ $
m_ClientStartCountdown
¦¦ &
=
¦¦' (
newValue
¦¦) 1
;
¦¦1 2
Debug
§§ 
.
§§ 
	LogFormat
§§ 
(
§§  
$str
§§  a
,
§§a b
newValue
§§c k
)
§§k l
;
§§l m
}
¨¨ 
;
¨¨ 
hasGameStarted
ªª 
.
ªª 
OnValueChanged
ªª )
+=
ªª* ,
(
ªª- .
oldValue
ªª. 6
,
ªª6 7
newValue
ªª8 @
)
ªª@ A
=>
ªªB D
{
«« !
m_ClientGameStarted
¬¬ #
=
¬¬$ %
newValue
¬¬& .
;
¬¬. /
gameTimerText
­­ 
.
­­ 

gameObject
­­ (
.
­­( )
	SetActive
­­) 2
(
­­2 3
!
­­3 4!
m_ClientGameStarted
­­4 G
)
­­G H
;
­­H I
Debug
®® 
.
®® 
	LogFormat
®® 
(
®®  
$str
®®  ]
,
®®] ^
newValue
®®_ g
)
®®g h
;
®®h i
}
¯¯ 
;
¯¯ 

isGameOver
±± 
.
±± 
OnValueChanged
±± %
+=
±±& (
(
±±) *
oldValue
±±* 2
,
±±2 3
newValue
±±4 <
)
±±< =
=>
±±> @
{
²² 
m_ClientGameOver
³³  
=
³³! "
newValue
³³# +
;
³³+ ,
Debug
´´ 
.
´´ 
	LogFormat
´´ 
(
´´  
$str
´´  Z
,
´´Z [
newValue
´´\ d
)
´´d e
;
´´e f
}
µµ 
;
µµ 
}
¶¶ 	$
SceneTransitionHandler
ºº 
.
ºº $
sceneTransitionHandler
ºº 5
.
ºº5 6
SetSceneState
ºº6 C
(
ººC D$
SceneTransitionHandler
ººD Z
.
ººZ [
SceneStates
ºº[ f
.
ººf g
Ingame
ººg m
)
ººm n
;
ººn o
if
¼¼ 

(
¼¼ 
IsServer
¼¼ 
)
¼¼ 
{
½½ 	
NetworkManager
¾¾ 
.
¾¾ 
	Singleton
¾¾ $
.
¾¾$ %'
OnClientConnectedCallback
¾¾% >
+=
¾¾? A
OnClientConnected
¾¾B S
;
¾¾S T
}
¿¿ 	
base
ÁÁ 
.
ÁÁ 
OnNetworkSpawn
ÁÁ 
(
ÁÁ 
)
ÁÁ 
;
ÁÁ 
}
ÂÂ 
private
ÄÄ 
void
ÄÄ 
OnClientConnected
ÄÄ "
(
ÄÄ" #
ulong
ÄÄ# (
clientId
ÄÄ) 1
)
ÄÄ1 2
{
ÅÅ 
if
ÆÆ 

(
ÆÆ "
m_ReplicatedTimeSent
ÆÆ  
)
ÆÆ  !
{
ÇÇ 	1
#SetReplicatedTimeRemainingClientRPC
ÉÉ /
(
ÉÉ/ 0
m_TimeRemaining
ÉÉ0 ?
,
ÉÉ? @
new
ÉÉA D
ClientRpcParams
ÉÉE T
{
ÉÉU V
Send
ÉÉV Z
=
ÉÉ[ \
new
ÉÉ] `!
ClientRpcSendParams
ÉÉa t
{
ÉÉt u
TargetClientIdsÉÉu 
=ÉÉ 
newÉÉ 
ListÉÉ 
<ÉÉ 
ulongÉÉ 
>ÉÉ 
(ÉÉ 
)ÉÉ 
{ÉÉ 
clientIdÉÉ ¢
}ÉÉ¢ £
}ÉÉ£ ¤
}ÉÉ¤ ¥
)ÉÉ¥ ¦
;ÉÉ¦ §
}
ÊÊ 	
}
ËË 
private
ÒÒ 
bool
ÒÒ "
ShouldStartCountDown
ÒÒ %
(
ÒÒ% &
)
ÒÒ& '
{
ÓÓ 
if
ÕÕ 

(
ÕÕ 
HasGameStarted
ÕÕ 
(
ÕÕ 
)
ÕÕ 
)
ÕÕ 
return
ÕÕ $
false
ÕÕ% *
;
ÕÕ* +
if
ÖÖ 

(
ÖÖ 
IsServer
ÖÖ 
)
ÖÖ 
{
×× 	 
m_CountdownStarted
ØØ 
.
ØØ 
Value
ØØ $
=
ØØ% &$
SceneTransitionHandler
ØØ' =
.
ØØ= >$
sceneTransitionHandler
ØØ> T
.
ØØT U!
AllClientsAreLoaded
ØØU h
(
ØØh i
)
ØØi j
;
ØØj k
if
ÛÛ 
(
ÛÛ  
m_CountdownStarted
ÛÛ "
.
ÛÛ" #
Value
ÛÛ# (
&&
ÛÛ) +
!
ÛÛ, -"
m_ReplicatedTimeSent
ÛÛ- A
)
ÛÛA B
{
ÜÜ 1
#SetReplicatedTimeRemainingClientRPC
ÝÝ 3
(
ÝÝ3 4 
m_DelayedStartTime
ÝÝ4 F
)
ÝÝF G
;
ÝÝG H"
m_ReplicatedTimeSent
ÞÞ $
=
ÞÞ% &
true
ÞÞ' +
;
ÞÞ+ ,
}
ßß 
return
áá  
m_CountdownStarted
áá %
.
áá% &
Value
áá& +
;
áá+ ,
}
ââ 	
return
ää $
m_ClientStartCountdown
ää %
;
ää% &
}
åå 
[
íí 
	ClientRpc
íí 
]
íí 
private
îî 
void
îî 1
#SetReplicatedTimeRemainingClientRPC
îî 4
(
îî4 5
float
îî5 :
delayedStartTime
îî; K
,
îîK L
ClientRpcParams
îîM \
clientRpcParams
îî] l
=
îîm n
new
îîo r
ClientRpcParamsîîs 
(îî 
)îî 
)îî 
{
ïï 
if
ññ 

(
ññ 
m_TimeRemaining
ññ 
==
ññ 
$num
ññ  
)
ññ  !
{
òò 	
Debug
óó 
.
óó 
	LogFormat
óó 
(
óó 
$str
óó M
,
óóM N
delayedStartTime
óóO _
)
óó_ `
;
óó` a
m_TimeRemaining
ôô 
=
ôô 
delayedStartTime
ôô .
;
ôô. /
}
õõ 	
else
öö 
{
÷÷ 	
Debug
øø 
.
øø 
	LogFormat
øø 
(
øø 
$str
øø e
,
øøe f
delayedStartTime
øøg w
)
øøw x
;
øøx y
}
ùù 	
}
úú 
private
 
bool
 
IsCurrentGameOver
 "
(
" #
)
# $
{
 
if
 

(
 
IsServer
 
)
 
return
 

isGameOver
 
.
 
Value
 #
;
# $
return
 
m_ClientGameOver
 
;
  
}
 
private
 
bool
 
HasGameStarted
 
(
  
)
  !
{
 
if
 

(
 
IsServer
 
)
 
return
 
hasGameStarted
 !
.
! "
Value
" '
;
' (
return
 !
m_ClientGameStarted
 "
;
" #
}
 
private
 
void
 
UpdateGameTimer
  
(
  !
)
! "
{
 
if
 

(
 
!
 "
ShouldStartCountDown
 !
(
! "
)
" #
)
# $
return
% +
;
+ ,
if
 

(
 
!
 
HasGameStarted
 
(
 
)
 
&&
  
m_TimeRemaining
! 0
>
1 2
$num
3 7
)
7 8
{
 	
m_TimeRemaining
 
-=
 
Time
 #
.
# $
	deltaTime
$ -
;
- .
if
¡¡ 
(
¡¡ 
IsServer
¡¡ 
&&
¡¡ 
m_TimeRemaining
¡¡ +
<=
¡¡, .
$num
¡¡/ 3
)
¡¡3 4
{
¢¢ 
m_TimeRemaining
££ 
=
££  !
$num
££" &
;
££& '
hasGameStarted
¤¤ 
.
¤¤ 
Value
¤¤ $
=
¤¤% &
true
¤¤' +
;
¤¤+ ,
OnGameStarted
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥  
}
¦¦ 
if
¨¨ 
(
¨¨ 
m_TimeRemaining
¨¨ 
>
¨¨  !
$num
¨¨" &
)
¨¨& '
gameTimerText
©© 
.
©© 
SetText
©© %
(
©©% &
$str
©©& +
,
©©+ ,
Mathf
©©- 2
.
©©2 3

FloorToInt
©©3 =
(
©©= >
m_TimeRemaining
©©> M
)
©©M N
)
©©N O
;
©©O P
}
ªª 	
}
«« 
private
±± 
void
±± 
OnGameStarted
±± 
(
±± 
)
±±  
{
²² 
gameTimerText
³³ 
.
³³ 

gameObject
³³  
.
³³  !
	SetActive
³³! *
(
³³* +
false
³³+ 0
)
³³0 1
;
³³1 2
CreateEnemies
´´ 
(
´´ 
)
´´ 
;
´´ 
CreateShields
µµ 
(
µµ 
)
µµ 
;
µµ 
CreateSuperEnemy
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
·· 
private
¹¹ 
void
¹¹ 
UpdateEnemies
¹¹ 
(
¹¹ 
)
¹¹  
{
ºº 
if
¼¼ 

(
¼¼ 
Time
¼¼ 
.
¼¼ 
time
¼¼ 
>=
¼¼ 

m_NextTick
¼¼ #
)
¼¼# $
{
½½ 	

m_NextTick
¾¾ 
=
¾¾ 
Time
¾¾ 
.
¾¾ 
time
¾¾ "
+
¾¾# $
m_TickPeriodic
¾¾% 3
.
¾¾3 4
Value
¾¾4 9
;
¾¾9 :&
UpdateEnemiesResultFlags
ÀÀ $ 
enemiesResultFlags
ÀÀ% 7
=
ÀÀ8 9&
UpdateEnemiesResultFlags
ÀÀ: R
.
ÀÀR S
None
ÀÀS W
;
ÀÀW X#
UpdateShootingEnemies
ÁÁ !
(
ÁÁ! "
ref
ÁÁ" % 
enemiesResultFlags
ÁÁ& 8
)
ÁÁ8 9
;
ÁÁ9 :
if
ÃÃ 
(
ÃÃ 
(
ÃÃ  
enemiesResultFlags
ÃÃ "
&
ÃÃ# $&
UpdateEnemiesResultFlags
ÃÃ% =
.
ÃÃ= >
ReachedBottom
ÃÃ> K
)
ÃÃK L
!=
ÃÃM O
$num
ÃÃP Q
)
ÃÃQ R
{
ÄÄ 

SetGameEnd
ÆÆ 
(
ÆÆ 
GameOverReason
ÆÆ )
.
ÆÆ) *"
EnemiesReachedBottom
ÆÆ* >
)
ÆÆ> ?
;
ÆÆ? @
return
ÇÇ 
;
ÇÇ 
}
ÈÈ 
if
ËË 
(
ËË 
(
ËË  
enemiesResultFlags
ËË #
&
ËË$ %&
UpdateEnemiesResultFlags
ËË& >
.
ËË> ?

FoundEnemy
ËË? I
)
ËËI J
==
ËËK M
$num
ËËN O
)
ËËO P
{
ÌÌ 
CreateEnemies
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ  
m_TickPeriodic
ÎÎ 
.
ÎÎ 
Value
ÎÎ $
=
ÎÎ% &
$num
ÎÎ' +
;
ÎÎ+ ,
}
ÏÏ 
if
ÓÓ 
(
ÓÓ 
(
ÓÓ  
enemiesResultFlags
ÓÓ #
&
ÓÓ$ %&
UpdateEnemiesResultFlags
ÓÓ& >
.
ÓÓ> ?'
ReachedHorizontalBoundary
ÓÓ? X
)
ÓÓX Y
!=
ÓÓZ \
$num
ÓÓ] ^
)
ÓÓ^ _
{
ÔÔ $
m_EnemyMovingDirection
ÕÕ &
.
ÕÕ& '
Value
ÕÕ' ,
=
ÕÕ- .
-
ÕÕ/ 0$
m_EnemyMovingDirection
ÕÕ0 F
.
ÕÕF G
Value
ÕÕG L
;
ÕÕL M
m_TickPeriodic
ÖÖ 
.
ÖÖ 
Value
ÖÖ $
*=
ÖÖ% '
$num
ÖÖ( -
;
ÖÖ- .
var
ØØ 
enemiesCount
ØØ  
=
ØØ! "
	m_Enemies
ØØ# ,
.
ØØ, -
Count
ØØ- 2
;
ØØ2 3
for
ÙÙ 
(
ÙÙ 
var
ÙÙ 
index
ÙÙ 
=
ÙÙ  
$num
ÙÙ! "
;
ÙÙ" #
index
ÙÙ$ )
<
ÙÙ* +
enemiesCount
ÙÙ, 8
;
ÙÙ8 9
index
ÙÙ: ?
++
ÙÙ? A
)
ÙÙA B
{
ÚÚ 
var
ÛÛ 
enemy
ÛÛ 
=
ÛÛ 
	m_Enemies
ÛÛ  )
[
ÛÛ) *
index
ÛÛ* /
]
ÛÛ/ 0
;
ÛÛ0 1
enemy
ÜÜ 
.
ÜÜ 
	transform
ÜÜ #
.
ÜÜ# $
	Translate
ÜÜ$ -
(
ÜÜ- .
$num
ÜÜ. /
,
ÜÜ/ 0+
k_EnemyVerticalMovementOffset
ÜÜ1 N
,
ÜÜN O
$num
ÜÜP Q
)
ÜÜQ R
;
ÜÜR S
}
ÝÝ 
}
ÞÞ 
if
àà 
(
àà 
m_Saucer
àà 
==
àà 
null
àà  
)
àà  !
if
áá 
(
áá 
Random
áá 
.
áá 
Range
áá  
(
áá  !
$num
áá! "
,
áá" #
$num
áá$ (
)
áá( )
>
áá* +0
"m_RandomThresholdForSaucerCreation
áá, N
)
ááN O
CreateSuperEnemy
ââ $
(
ââ$ %
)
ââ% &
;
ââ& '
}
ãã 	
}
ää 
private
ææ 
void
ææ #
UpdateShootingEnemies
ææ &
(
ææ& '
ref
ææ' *&
UpdateEnemiesResultFlags
ææ+ C
flags
ææD I
)
ææI J
{
çç 
flags
èè 
=
èè &
UpdateEnemiesResultFlags
èè (
.
èè( )
None
èè) -
;
èè- .
var
éé 
enemiesCount
éé 
=
éé 
	m_Enemies
éé $
.
éé$ %
Count
éé% *
;
éé* +
for
êê 
(
êê 
var
êê 
index
êê 
=
êê 
$num
êê 
;
êê 
index
êê !
<
êê" #
enemiesCount
êê$ 0
;
êê0 1
index
êê2 7
++
êê7 9
)
êê9 :
{
ëë 	
var
ìì 
enemy
ìì 
=
ìì 
	m_Enemies
ìì !
[
ìì! "
index
ìì" '
]
ìì' (
;
ìì( )
Assert
íí 
.
íí 
	IsNotNull
íí 
(
íí 
enemy
íí "
)
íí" #
;
íí# $
if
îî 
(
îî 
	m_Enemies
îî 
==
îî 
null
îî !
)
îî! "
{
ïï 
continue
ðð 
;
ðð 
}
ññ 
if
ôô 
(
ôô 
enemy
ôô 
.
ôô 
	transform
ôô 
.
ôô  
position
ôô  (
.
ôô( )
y
ôô) *
<=
ôô+ -$
k_BottomBoundaryOffset
ôô. D
)
ôôD E
{
õõ 
flags
öö 
|=
öö &
UpdateEnemiesResultFlags
öö 1
.
öö1 2
ReachedBottom
öö2 ?
;
öö? @
return
÷÷ 
;
÷÷ 
}
øø 
if
úú 
(
úú 
enemy
úú 
.
úú 
score
úú 
>
úú 
$num
úú !
)
úú! "
continue
ûû 
;
ûû 
flags
ýý 
|=
ýý &
UpdateEnemiesResultFlags
ýý -
.
ýý- .

FoundEnemy
ýý. 8
;
ýý8 9
enemy
þþ 
.
þþ 
	transform
þþ 
.
þþ 
position
þþ $
+=
þþ% '
new
þþ( +
Vector3
þþ, 3
(
þþ3 4$
m_EnemyMovingDirection
þþ4 J
.
þþJ K
Value
þþK P
,
þþP Q
$num
þþR S
,
þþS T
$num
þþU V
)
þþV W
;
þþW X
if
 
(
 
enemy
 
.
 
	transform
 
.
  
position
  (
.
( )
x
) *
>
+ ,)
k_LeftOrRightBoundaryOffset
- H
||
I K
enemy
L Q
.
Q R
	transform
R [
.
[ \
position
\ d
.
d e
x
e f
<
g h
-
i j*
k_LeftOrRightBoundaryOffsetj 
) 
flags
 
|=
 &
UpdateEnemiesResultFlags
 1
.
1 2'
ReachedHorizontalBoundary
2 K
;
K L
var
 
canShoot
 
=
 
true
 
;
  
var
 
column
 
=
 
enemy
 
.
 
column
 %
;
% &
var
 
row
 
=
 
enemy
 
.
 
row
 
;
  
for
 
(
 
var
 

otherIndex
 
=
  !
$num
" #
;
# $

otherIndex
% /
<
0 1
enemiesCount
2 >
;
> ?

otherIndex
@ J
++
J L
)
L M
{
 
var
 

otherEnemy
 
=
  
	m_Enemies
! *
[
* +

otherIndex
+ 5
]
5 6
;
6 7
Assert
 
.
 
IsTrue
 
(
 

otherEnemy
 (
!=
) +
null
, 0
)
0 1
;
1 2
if
 
(
 
Math
 
.
 
Abs
 
(
 

otherEnemy
 '
.
' (
column
( .
-
/ 0
column
1 7
)
7 8
<
9 :
$num
; A
)
A B
if
 
(
 

otherEnemy
 "
.
" #
row
# &
<
' (
row
) ,
)
, -
{
 
canShoot
  
=
! "
false
# (
;
( )
break
 
;
 
}
 
}
 
enemy
 
.
 
canShoot
 
=
 
canShoot
 %
;
% &
}
 	
}
 
public
 

void
 
SetScore
 
(
 
int
 
score
 "
)
" #
{
 
	scoreText
 
.
 
SetText
 
(
 
$str
  
,
  !
score
" '
)
' (
;
( )
}
 
public
 

void
 
SetLives
 
(
 
int
 
lives
 "
)
" #
{
 
	livesText
 
.
 
SetText
 
(
 
$str
  
,
  !
lives
" '
)
' (
;
( )
}
   
public
¢¢ 

void
¢¢ !
DisplayGameOverText
¢¢ #
(
¢¢# $
string
¢¢$ *
message
¢¢+ 2
)
¢¢2 3
{
££ 
if
¤¤ 

(
¤¤ 
gameOverText
¤¤ 
)
¤¤ 
{
¥¥ 	
gameOverText
¦¦ 
.
¦¦ 
SetText
¦¦  
(
¦¦  !
message
¦¦! (
)
¦¦( )
;
¦¦) *
gameOverText
§§ 
.
§§ 

gameObject
§§ #
.
§§# $
	SetActive
§§$ -
(
§§- .
true
§§. 2
)
§§2 3
;
§§3 4
}
¨¨ 	
}
©© 
public
«« 

void
«« 

SetGameEnd
«« 
(
«« 
GameOverReason
«« )
reason
««* 0
)
««0 1
{
¬¬ 
Assert
­­ 
.
­­ 
IsTrue
­­ 
(
­­ 
IsServer
­­ 
,
­­ 
$str
­­  O
)
­­O P
;
­­P Q
if
°° 

(
°° 
reason
°° 
!=
°° 
GameOverReason
°° $
.
°°$ %
Death
°°% *
)
°°* +
{
±± 	
this
²² 
.
²² 

isGameOver
²² 
.
²² 
Value
²² !
=
²²" #
true
²²$ (
;
²²( )(
BroadcastGameOverClientRpc
³³ &
(
³³& '
reason
³³' -
)
³³- .
;
³³. /
return
´´ 
;
´´ 
}
µµ 	
foreach
·· 
(
·· 
NetworkClient
·· 
networkedClient
·· .
in
··/ 1
NetworkManager
··2 @
.
··@ A
	Singleton
··A J
.
··J K"
ConnectedClientsList
··K _
)
··_ `
{
¸¸ 	
var
¹¹ 
playerObject
¹¹ 
=
¹¹ 
networkedClient
¹¹ .
.
¹¹. /
PlayerObject
¹¹/ ;
;
¹¹; <
if
ºº 
(
ºº 
playerObject
ºº 
==
ºº 
null
ºº #
)
ºº# $
continue
ºº% -
;
ºº- .
if
½½ 
(
½½ 
playerObject
½½ 
.
½½ 
GetComponent
½½ )
<
½½) *
PlayerControl
½½* 7
>
½½7 8
(
½½8 9
)
½½9 :
.
½½: ;
IsAlive
½½; B
)
½½B C
return
¾¾ 
;
¾¾ 
}
¿¿ 	
this
ÁÁ 
.
ÁÁ 

isGameOver
ÁÁ 
.
ÁÁ 
Value
ÁÁ 
=
ÁÁ 
true
ÁÁ  $
;
ÁÁ$ %
}
ÂÂ 
[
ÄÄ 
	ClientRpc
ÄÄ 
]
ÄÄ 
public
ÅÅ 

void
ÅÅ (
BroadcastGameOverClientRpc
ÅÅ *
(
ÅÅ* +
GameOverReason
ÅÅ+ 9
reason
ÅÅ: @
)
ÅÅ@ A
{
ÆÆ 
var
ÇÇ 
localPlayerObject
ÇÇ 
=
ÇÇ 
NetworkManager
ÇÇ  .
.
ÇÇ. /
	Singleton
ÇÇ/ 8
.
ÇÇ8 9
ConnectedClients
ÇÇ9 I
[
ÇÇI J
NetworkManager
ÇÇJ X
.
ÇÇX Y
	Singleton
ÇÇY b
.
ÇÇb c
LocalClientId
ÇÇc p
]
ÇÇp q
.
ÇÇq r
PlayerObject
ÇÇr ~
;
ÇÇ~ 
Assert
ÈÈ 
.
ÈÈ 
	IsNotNull
ÈÈ 
(
ÈÈ 
localPlayerObject
ÈÈ *
)
ÈÈ* +
;
ÈÈ+ ,
if
ÊÊ 

(
ÊÊ 
localPlayerObject
ÊÊ 
.
ÊÊ 
TryGetComponent
ÊÊ -
<
ÊÊ- .
PlayerControl
ÊÊ. ;
>
ÊÊ; <
(
ÊÊ< =
out
ÊÊ= @
var
ÊÊA D
playerControl
ÊÊE R
)
ÊÊR S
)
ÊÊS T
playerControl
ËË 
.
ËË 
NotifyGameOver
ËË (
(
ËË( )
reason
ËË) /
)
ËË/ 0
;
ËË0 1
}
ÌÌ 
public
ÎÎ 

void
ÎÎ %
RegisterSpawnableObject
ÎÎ '
(
ÎÎ' ( 
InvadersObjectType
ÎÎ( : 
invadersObjectType
ÎÎ; M
,
ÎÎM N

GameObject
ÎÎO Y

gameObject
ÎÎZ d
)
ÎÎd e
{
ÏÏ 
Assert
ÐÐ 
.
ÐÐ 
IsTrue
ÐÐ 
(
ÐÐ 
IsClient
ÐÐ 
)
ÐÐ 
;
ÐÐ  
switch
ÒÒ 
(
ÒÒ  
invadersObjectType
ÒÒ "
)
ÒÒ" #
{
ÓÓ 	
case
ÔÔ  
InvadersObjectType
ÔÔ #
.
ÔÔ# $
Enemy
ÔÔ$ )
:
ÔÔ) *
{
ÕÕ 
if
×× 
(
×× 

gameObject
×× 
.
×× 
TryGetComponent
×× .
<
××. / 
SuperEnemyMovement
××/ A
>
××A B
(
××B C
out
××C F
var
××G J
saucer
××K Q
)
××Q R
)
××R S
return
ØØ 
;
ØØ 

gameObject
ÚÚ 
.
ÚÚ 
TryGetComponent
ÚÚ *
<
ÚÚ* +

EnemyAgent
ÚÚ+ 5
>
ÚÚ5 6
(
ÚÚ6 7
out
ÚÚ7 :
var
ÚÚ; >

enemyAgent
ÚÚ? I
)
ÚÚI J
;
ÚÚJ K
Assert
ÛÛ 
.
ÛÛ 
IsTrue
ÛÛ 
(
ÛÛ 

enemyAgent
ÛÛ (
!=
ÛÛ) +
null
ÛÛ, 0
)
ÛÛ0 1
;
ÛÛ1 2
if
ÜÜ 
(
ÜÜ 
!
ÜÜ 
	m_Enemies
ÜÜ 
.
ÜÜ 
Contains
ÜÜ '
(
ÜÜ' (

enemyAgent
ÜÜ( 2
)
ÜÜ2 3
)
ÜÜ3 4
	m_Enemies
ÝÝ 
.
ÝÝ 
Add
ÝÝ !
(
ÝÝ! "

enemyAgent
ÝÝ" ,
)
ÝÝ, -
;
ÝÝ- .
break
ÞÞ 
;
ÞÞ 
}
ßß 
case
àà  
InvadersObjectType
àà #
.
àà# $
Shield
àà$ *
:
àà* +
{
áá 

gameObject
ââ 
.
ââ 
TryGetComponent
ââ *
<
ââ* +
Shield
ââ+ 1
>
ââ1 2
(
ââ2 3
out
ââ3 6
var
ââ7 :
shield
ââ; A
)
ââA B
;
ââB C
Assert
ãã 
.
ãã 
IsTrue
ãã 
(
ãã 
shield
ãã $
!=
ãã% '
null
ãã( ,
)
ãã, -
;
ãã- .
	m_Shields
ää 
.
ää 
Add
ää 
(
ää 
shield
ää $
)
ää$ %
;
ää% &
break
åå 
;
åå 
}
ææ 
default
çç 
:
çç 
Assert
èè 
.
èè 
IsTrue
èè 
(
èè 
false
èè #
)
èè# $
;
èè$ %
break
éé 
;
éé 
}
êê 	
}
ëë 
public
íí 

void
íí '
UnregisterSpawnableObject
íí )
(
íí) * 
InvadersObjectType
íí* < 
invadersObjectType
íí= O
,
ííO P

GameObject
ííQ [

gameObject
íí\ f
)
ííf g
{
îî 
Assert
ïï 
.
ïï 
IsTrue
ïï 
(
ïï 
IsServer
ïï 
)
ïï 
;
ïï  
switch
ññ 
(
ññ  
invadersObjectType
ññ "
)
ññ" #
{
òò 	
case
óó  
InvadersObjectType
óó #
.
óó# $
Enemy
óó$ )
:
óó) *
{
ôô 
if
öö 
(
öö 

gameObject
öö 
.
öö 
TryGetComponent
öö .
<
öö. / 
SuperEnemyMovement
öö/ A
>
ööA B
(
ööB C
out
ööC F
var
ööG J
saucer
ööK Q
)
ööQ R
)
ööR S
return
÷÷ 
;
÷÷ 

gameObject
ùù 
.
ùù 
TryGetComponent
ùù *
<
ùù* +

EnemyAgent
ùù+ 5
>
ùù5 6
(
ùù6 7
out
ùù7 :
var
ùù; >

enemyAgent
ùù? I
)
ùùI J
;
ùùJ K
Assert
úú 
.
úú 
IsTrue
úú 
(
úú 

enemyAgent
úú (
!=
úú) +
null
úú, 0
)
úú0 1
;
úú1 2
if
ûû 
(
ûû 
	m_Enemies
ûû 
.
ûû 
Contains
ûû &
(
ûû& '

enemyAgent
ûû' 1
)
ûû1 2
)
ûû2 3
	m_Enemies
üü 
.
üü 
Remove
üü $
(
üü$ %

enemyAgent
üü% /
)
üü/ 0
;
üü0 1
break
ýý 
;
ýý 
}
þþ 
case
ÿÿ  
InvadersObjectType
ÿÿ #
.
ÿÿ# $
Shield
ÿÿ$ *
:
ÿÿ* +
{
 

gameObject
 
.
 
TryGetComponent
 *
<
* +
Shield
+ 1
>
1 2
(
2 3
out
3 6
var
7 :
shield
; A
)
A B
;
B C
Assert
 
.
 
IsTrue
 
(
 
shield
 $
!=
% '
null
( ,
)
, -
;
- .
if
 
(
 
	m_Shields
 
.
 
Contains
 &
(
& '
shield
' -
)
- .
)
. /
	m_Shields
 
.
 
Remove
 $
(
$ %
shield
% +
)
+ ,
;
, -
break
 
;
 
}
 
default
 
:
 
Assert
 
.
 
IsTrue
 
(
 
false
 #
)
# $
;
$ %
break
 
;
 
}
 	
}
 
public
 

void
 
ExitGame
 
(
 
)
 
{
 
NetworkManager
 
.
 
	Singleton
  
.
  !
Shutdown
! )
(
) *
)
* +
;
+ ,$
SceneTransitionHandler
 
.
 $
sceneTransitionHandler
 5
.
5 6"
ExitAndLoadStartMenu
6 J
(
J K
)
K L
;
L M
}
 
private
 
void
 
CreateShield
 
(
 

GameObject
 (
prefab
) /
,
/ 0
int
1 4
posX
5 9
,
9 :
int
; >
posY
? C
)
C D
{
 
Assert
 
.
 
IsTrue
 
(
 
IsServer
 
,
 
$str
  R
)
R S
;
S T
const
 
float
 
dy
 
=
 
$num
 
;
 
const
 
float
 
dx
 
=
 
$num
 
;
 
var
 
ycount
 
=
 
$num
 
;
 
for
 
(
 
float
 
y
 
=
 
posY
 
;
 
y
 
<
  
posY
! %
+
& '
$num
( )
;
) *
y
+ ,
+=
- /
dy
0 2
)
2 3
{
 	
var
 
xcount
 
=
 
$num
 
;
 
for
 
(
 
float
 
x
 
=
 
posX
 
;
  
x
! "
<
# $
posX
% )
+
* +
$num
, -
;
- .
x
/ 0
+=
1 3
dx
4 6
)
6 7
{
 
if
   
(
   
ycount
   
==
   
$num
   
&&
    "
(
  # $
xcount
  $ *
==
  + -
$num
  . /
||
  0 2
xcount
  3 9
==
  : <
$num
  = >
)
  > ?
)
  ? @
{
¡¡ 
xcount
¢¢ 
+=
¢¢ 
$num
¢¢ 
;
¢¢  
continue
££ 
;
££ 
}
¤¤ 
var
¦¦ 
shield
¦¦ 
=
¦¦ 
Instantiate
¦¦ (
(
¦¦( )
prefab
¦¦) /
,
¦¦/ 0
new
¦¦1 4
Vector3
¦¦5 <
(
¦¦< =
x
¦¦= >
-
¦¦? @
$num
¦¦A B
,
¦¦B C
y
¦¦D E
,
¦¦E F
$num
¦¦G H
)
¦¦H I
,
¦¦I J

Quaternion
¦¦K U
.
¦¦U V
identity
¦¦V ^
)
¦¦^ _
;
¦¦_ `
shield
©© 
.
©© 
GetComponent
©© #
<
©©# $
NetworkObject
©©$ 1
>
©©1 2
(
©©2 3
)
©©3 4
.
©©4 5
Spawn
©©5 :
(
©©: ;
)
©©; <
;
©©< =
xcount
ªª 
+=
ªª 
$num
ªª 
;
ªª 
}
«« 
ycount
­­ 
+=
­­ 
$num
­­ 
;
­­ 
}
®® 	
}
¯¯ 
private
±± 
void
±± 
CreateShields
±± 
(
±± 
)
±±  
{
²² 
CreateShield
´´ 
(
´´ 
shieldPrefab
´´ !
,
´´! "
-
´´# $
$num
´´$ %
,
´´% &
-
´´' (
$num
´´( )
)
´´) *
;
´´* +
CreateShield
µµ 
(
µµ 
shieldPrefab
µµ !
,
µµ! "
$num
µµ# $
,
µµ$ %
-
µµ& '
$num
µµ' (
)
µµ( )
;
µµ) *
CreateShield
¶¶ 
(
¶¶ 
shieldPrefab
¶¶ !
,
¶¶! "
$num
¶¶# $
,
¶¶$ %
-
¶¶& '
$num
¶¶' (
)
¶¶( )
;
¶¶) *
}
·· 
private
¹¹ 
void
¹¹ 
CreateSuperEnemy
¹¹ !
(
¹¹! "
)
¹¹" #
{
ºº 
Assert
»» 
.
»» 
IsTrue
»» 
(
»» 
IsServer
»» 
,
»» 
$str
»»  R
)
»»R S
;
»»S T
m_Saucer
½½ 
=
½½ 
Instantiate
½½ 
(
½½ 
superEnemyPrefab
½½ /
,
½½/ 0
saucerSpawnPoint
½½1 A
.
½½A B
position
½½B J
,
½½J K

Quaternion
½½L V
.
½½V W
identity
½½W _
)
½½_ `
;
½½` a
m_Saucer
ÀÀ 
.
ÀÀ 
GetComponent
ÀÀ 
<
ÀÀ 
NetworkObject
ÀÀ +
>
ÀÀ+ ,
(
ÀÀ, -
)
ÀÀ- .
.
ÀÀ. /
Spawn
ÀÀ/ 4
(
ÀÀ4 5
)
ÀÀ5 6
;
ÀÀ6 7
}
ÁÁ 
private
ÃÃ 
void
ÃÃ 
CreateEnemy
ÃÃ 
(
ÃÃ 

GameObject
ÃÃ '
prefab
ÃÃ( .
,
ÃÃ. /
float
ÃÃ0 5
posX
ÃÃ6 :
,
ÃÃ: ;
float
ÃÃ< A
posY
ÃÃB F
)
ÃÃF G
{
ÄÄ 
Assert
ÅÅ 
.
ÅÅ 
IsTrue
ÅÅ 
(
ÅÅ 
IsServer
ÅÅ 
,
ÅÅ 
$str
ÅÅ  Q
)
ÅÅQ R
;
ÅÅR S
var
ÇÇ 
enemy
ÇÇ 
=
ÇÇ 
Instantiate
ÇÇ 
(
ÇÇ  
prefab
ÇÇ  &
)
ÇÇ& '
;
ÇÇ' (
enemy
ÈÈ 
.
ÈÈ 
	transform
ÈÈ 
.
ÈÈ 
position
ÈÈ  
=
ÈÈ! "
new
ÈÈ# &
Vector3
ÈÈ' .
(
ÈÈ. /
posX
ÈÈ/ 3
,
ÈÈ3 4
posY
ÈÈ5 9
,
ÈÈ9 :
$num
ÈÈ; ?
)
ÈÈ? @
;
ÈÈ@ A
enemy
ÉÉ 
.
ÉÉ 
GetComponent
ÉÉ 
<
ÉÉ 

EnemyAgent
ÉÉ %
>
ÉÉ% &
(
ÉÉ& '
)
ÉÉ' (
.
ÉÉ( )
Setup
ÉÉ) .
(
ÉÉ. /
Mathf
ÉÉ/ 4
.
ÉÉ4 5

RoundToInt
ÉÉ5 ?
(
ÉÉ? @
posX
ÉÉ@ D
)
ÉÉD E
,
ÉÉE F
Mathf
ÉÉG L
.
ÉÉL M

RoundToInt
ÉÉM W
(
ÉÉW X
posY
ÉÉX \
)
ÉÉ\ ]
)
ÉÉ] ^
;
ÉÉ^ _
enemy
ÌÌ 
.
ÌÌ 
GetComponent
ÌÌ 
<
ÌÌ 
NetworkObject
ÌÌ (
>
ÌÌ( )
(
ÌÌ) *
)
ÌÌ* +
.
ÌÌ+ ,
Spawn
ÌÌ, 1
(
ÌÌ1 2
)
ÌÌ2 3
;
ÌÌ3 4
}
ÍÍ 
public
ÏÏ 

void
ÏÏ 
CreateEnemies
ÏÏ 
(
ÏÏ 
)
ÏÏ 
{
ÐÐ 
float
ÑÑ 
startx
ÑÑ 
=
ÑÑ 
-
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
for
ÒÒ 
(
ÒÒ 
var
ÒÒ 
i
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ 
<
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ  !
++
ÒÒ! #
)
ÒÒ# $
{
ÓÓ 	
CreateEnemy
ÔÔ 
(
ÔÔ 
enemy1Prefab
ÔÔ $
,
ÔÔ$ %
startx
ÔÔ& ,
,
ÔÔ, -
$num
ÔÔ. 0
)
ÔÔ0 1
;
ÔÔ1 2
startx
ÕÕ 
+=
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
}
ÖÖ 	
startx
ØØ 
=
ØØ 
-
ØØ 
$num
ØØ 
;
ØØ 
for
ÙÙ 
(
ÙÙ 
var
ÙÙ 
i
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
i
ÙÙ 
<
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
i
ÙÙ  !
++
ÙÙ! #
)
ÙÙ# $
{
ÚÚ 	
CreateEnemy
ÛÛ 
(
ÛÛ 
enemy2Prefab
ÛÛ $
,
ÛÛ$ %
startx
ÛÛ& ,
,
ÛÛ, -
$num
ÛÛ. 0
)
ÛÛ0 1
;
ÛÛ1 2
startx
ÜÜ 
+=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
ÝÝ 	
startx
ßß 
=
ßß 
-
ßß 
$num
ßß 
;
ßß 
for
àà 
(
àà 
var
àà 
i
àà 
=
àà 
$num
àà 
;
àà 
i
àà 
<
àà 
$num
àà 
;
àà 
i
àà  !
++
àà! #
)
àà# $
{
áá 	
CreateEnemy
ââ 
(
ââ 
enemy3Prefab
ââ $
,
ââ$ %
startx
ââ& ,
,
ââ, -
$num
ââ. /
)
ââ/ 0
;
ââ0 1
startx
ãã 
+=
ãã 
$num
ãã 
;
ãã 
}
ää 	
}
åå 
}ææ Þ
5C:\code\ispclone\Assets\Scripts\SuperEnemyMovement.cs
public 
class 
SuperEnemyMovement 
:  !
MonoBehaviour" /
{ 
private 
const 
float 
k_YBoundary #
=$ %
$num& +
;+ ,
[		 
Header		 
(		 
$str		 
)		  
]		  !
[

 
SerializeField

 
]

 
[ 
Tooltip 
( 
$str :
): ;
]; <
private 
float 
m_MoveSpeed 
= 
$num  $
;$ %
private 
void 
Update 
( 
) 
{ 
if 

( 
! 
NetworkManager 
. 
	Singleton %
.% &
IsServer& .
). /
return0 6
;6 7
if 

( 
	transform 
. 
position 
. 
x  
>! "
k_YBoundary# .
). /
{ 	
if 
( 
NetworkManager 
. 
	Singleton (
.( )
IsServer) 1
)1 2
Destroy3 :
(: ;

gameObject; E
)E F
;F G
return 
; 
} 	
	transform 
. 
	Translate 
( 
m_MoveSpeed '
*( )
Time* .
.. /
	deltaTime/ 8
,8 9
$num: ;
,; <
$num= >
)> ?
;? @
} 
} ä«
0C:\code\ispclone\Assets\Scripts\PlayerControl.cs
public 
class 
PlayerControl 
: 
NetworkBehaviour -
{		 
[

 
Header

 
(

 
$str

 
)

 
]

 
public 


GameObject 
bulletPrefab "
;" #
[ 
Header 
( 
$str 
)  
]  !
[ 
SerializeField 
] 
private 
float 
m_MoveSpeed 
= 
$num  $
;$ %
[ 
Header 
( 
$str 
) 
] 
[ 
SerializeField 
] 
private 
NetworkVariable 
< 
int 
>  
m_Lives! (
=) *
new+ .
NetworkVariable/ >
<> ?
int? B
>B C
(C D
$numD E
)E F
;F G
[ 
SerializeField 
] 
ParticleSystem %
m_ExplosionParticleSystem ,
;, -
[ 
SerializeField 
] 
ParticleSystem 
m_HitParticleSystem &
;& '
[ 
SerializeField 
] 
Color 	
m_PlayerColorInGame
 
; 
private 
bool 
m_HasGameStarted !
;! "
private 
bool 
	m_IsAlive 
= 
true !
;! "
private!! 
NetworkVariable!! 
<!! 
int!! 
>!!  
m_MoveX!!! (
=!!) *
new!!+ .
NetworkVariable!!/ >
<!!> ?
int!!? B
>!!B C
(!!C D
$num!!D E
)!!E F
;!!F G
private## 

GameObject## 

m_MyBullet## !
;##! "
private$$ 
ClientRpcParams$$ 
m_OwnerRPCParams$$ ,
;$$, -
[&& 
SerializeField&& 
]&& 
private'' 
SpriteRenderer'' 
m_PlayerVisual'' )
;'') *
private(( 
NetworkVariable(( 
<(( 
int(( 
>((  
m_Score((! (
=(() *
new((+ .
NetworkVariable((/ >
<((> ?
int((? B
>((B C
(((C D
$num((D E
)((E F
;((F G
public** 

bool** 
IsAlive** 
=>** 
m_Lives** "
.**" #
Value**# (
>**) *
$num**+ ,
;**, -
private,, 
void,, 
Awake,, 
(,, 
),, 
{-- 
m_HasGameStarted.. 
=.. 
false..  
;..  !
}// 
private11 
void11 
Update11 
(11 
)11 
{22 
switch33 
(33 "
SceneTransitionHandler33 &
.33& '"
sceneTransitionHandler33' =
.33= > 
GetCurrentSceneState33> R
(33R S
)33S T
)33T U
{44 	
case55 "
SceneTransitionHandler55 '
.55' (
SceneStates55( 3
.553 4
Ingame554 :
:55: ;
{66 
InGameUpdate77 
(77 
)77 
;77 
break88 
;88 
}99 
}:: 	
};; 
private== 
void== 

LateUpdate== 
(== 
)== 
{>>  
HandleCameraMovement?? 
(?? 
)?? 
;?? 
}@@ 
privateBB 
voidBB  
HandleCameraMovementBB %
(BB% &
)BB& '
{CC 
Vector3DD 
cameraPositionDD 
=DD  
	transformDD! *
.DD* +
positionDD+ 3
;DD3 4
cameraPositionEE 
.EE 
xEE 
*=EE 
$numEE !
;EE! "
cameraPositionFF 
.FF 
yFF 
=FF 
$numFF 
;FF  
cameraPositionGG 
.GG 
zGG 
=GG 
-GG 
$numGG 
;GG  
CameraHH 
.HH 
mainHH 
.HH 
	transformHH 
.HH 
positionHH &
=HH' (
cameraPositionHH) 7
;HH7 8
}II 
publicKK 

overrideKK 
voidKK 
OnNetworkDespawnKK )
(KK) *
)KK* +
{LL 
baseMM 
.MM 
OnNetworkDespawnMM 
(MM 
)MM 
;MM  
ifNN 

(NN 
IsClientNN 
)NN 
{OO 	
m_LivesPP 
.PP 
OnValueChangedPP "
-=PP# %
OnLivesChangedPP& 4
;PP4 5
m_ScoreQQ 
.QQ 
OnValueChangedQQ "
-=QQ# %
OnScoreChangedQQ& 4
;QQ4 5
}RR 	
ifTT 

(TT 
InvadersGameTT 
.TT 
	SingletonTT "
)TT" #
{UU 	
InvadersGameVV 
.VV 
	SingletonVV "
.VV" #

isGameOverVV# -
.VV- .
OnValueChangedVV. <
-=VV= ? 
OnGameStartedChangedVV@ T
;VVT U
InvadersGameWW 
.WW 
	SingletonWW "
.WW" #
hasGameStartedWW# 1
.WW1 2
OnValueChangedWW2 @
-=WWA C 
OnGameStartedChangedWWD X
;WWX Y
}XX 	
}YY 
private[[ 
void[[ 4
(SceneTransitionHandler_sceneStateChanged[[ 9
([[9 :"
SceneTransitionHandler[[: P
.[[P Q
SceneStates[[Q \
newState[[] e
)[[e f
{\\ 
UpdateColor]] 
(]] 
)]] 
;]] 
}^^ 
private`` 
void`` 
UpdateColor`` 
(`` 
)`` 
{aa 
ifbb 

(bb "
SceneTransitionHandlerbb "
.bb" #"
sceneTransitionHandlerbb# 9
.bb9 : 
GetCurrentSceneStatebb: N
(bbN O
)bbO P
==bbQ S"
SceneTransitionHandlerbbT j
.bbj k
SceneStatesbbk v
.bbv w
Ingamebbw }
)bb} ~
{cc 	
ifdd 
(dd 
m_PlayerVisualdd 
!=dd !
nulldd" &
)dd& '
m_PlayerVisualdd( 6
.dd6 7
colordd7 <
=dd= >
m_PlayerColorInGamedd? R
;ddR S
}ee 	
elseff 
{gg 	
ifhh 
(hh 
m_PlayerVisualhh 
!=hh !
nullhh" &
)hh& '
m_PlayerVisualhh( 6
.hh6 7
colorhh7 <
=hh= >
Colorhh? D
.hhD E
clearhhE J
;hhJ K
}ii 	
}jj 
publicll 

overridell 
voidll 
OnNetworkSpawnll '
(ll' (
)ll( )
{mm 
basenn 
.nn 
OnNetworkSpawnnn 
(nn 
)nn 
;nn 
m_Livesrr 
.rr 
OnValueChangedrr 
+=rr !
OnLivesChangedrr" 0
;rr0 1
m_Scoress 
.ss 
OnValueChangedss 
+=ss !
OnScoreChangedss" 0
;ss0 1
ifuu 

(uu 
IsServeruu 
)uu 
m_OwnerRPCParamsuu &
=uu' (
newuu) ,
ClientRpcParamsuu- <
{uu= >
Senduu? C
=uuD E
newuuF I
ClientRpcSendParamsuuJ ]
{uu^ _
TargetClientIdsuu` o
=uup q
newuur u
[uuu v
]uuv w
{uux y
OwnerClientId	uuz 
}
uu 
}
uu 
}
uu 
;
uu 
ifww 

(ww 
!ww 
InvadersGameww 
.ww 
	Singletonww #
)ww# $
InvadersGamexx 
.xx 
OnSingletonReadyxx )
+=xx* ,/
#SubscribeToDelegatesAndUpdateValuesxx- P
;xxP Q
elseyy /
#SubscribeToDelegatesAndUpdateValueszz /
(zz/ 0
)zz0 1
;zz1 2"
SceneTransitionHandler|| 
.|| "
sceneTransitionHandler|| 5
.||5 6
OnSceneStateChanged||6 I
+=||J L4
(SceneTransitionHandler_sceneStateChanged||M u
;||u v
UpdateColor}} 
(}} 
)}} 
;}} 
}~~ 
private
 
void
 1
#SubscribeToDelegatesAndUpdateValues
 4
(
4 5
)
5 6
{
 
InvadersGame
 
.
 
	Singleton
 
.
 
hasGameStarted
 -
.
- .
OnValueChanged
. <
+=
= ?"
OnGameStartedChanged
@ T
;
T U
InvadersGame
 
.
 
	Singleton
 
.
 

isGameOver
 )
.
) *
OnValueChanged
* 8
+=
9 ;"
OnGameStartedChanged
< P
;
P Q
if
 

(
 
IsClient
 
&&
 
IsOwner
 
)
  
{
 	
InvadersGame
 
.
 
	Singleton
 "
.
" #
SetScore
# +
(
+ ,
m_Score
, 3
.
3 4
Value
4 9
)
9 :
;
: ;
InvadersGame
 
.
 
	Singleton
 "
.
" #
SetLives
# +
(
+ ,
m_Lives
, 3
.
3 4
Value
4 9
)
9 :
;
: ;
}
 	
m_HasGameStarted
 
=
 
InvadersGame
 '
.
' (
	Singleton
( 1
.
1 2
hasGameStarted
2 @
.
@ A
Value
A F
;
F G
}
 
public
 

void
 !
IncreasePlayerScore
 #
(
# $
int
$ '
amount
( .
)
. /
{
 
Assert
 
.
 
IsTrue
 
(
 
IsServer
 
,
 
$str
  W
)
W X
;
X Y
m_Score
 
.
 
Value
 
+=
 
amount
 
;
  
}
 
private
 
void
 "
OnGameStartedChanged
 %
(
% &
bool
& *
previousValue
+ 8
,
8 9
bool
: >
newValue
? G
)
G H
{
 
m_HasGameStarted
 
=
 
newValue
 #
;
# $
}
 
private
 
void
 
OnLivesChanged
 
(
  
int
  #
previousAmount
$ 2
,
2 3
int
4 7
currentAmount
8 E
)
E F
{
 
if
 

(
 
currentAmount
 
<=
 
$num
 
&&
 !
IsClient
" *
)
* +
m_PlayerVisual
 
.
 
enabled
 "
=
# $
false
% *
;
* +
if
 

(
 
!
 
IsOwner
 
)
 
return
 
;
 
Debug
   
.
   
	LogFormat
   
(
   
$str
   $
,
  $ %
currentAmount
  & 3
)
  3 4
;
  4 5
if
¡¡ 

(
¡¡ 
InvadersGame
¡¡ 
.
¡¡ 
	Singleton
¡¡ "
!=
¡¡# %
null
¡¡& *
)
¡¡* +
InvadersGame
¡¡, 8
.
¡¡8 9
	Singleton
¡¡9 B
.
¡¡B C
SetLives
¡¡C K
(
¡¡K L
m_Lives
¡¡L S
.
¡¡S T
Value
¡¡T Y
)
¡¡Y Z
;
¡¡Z [
if
££ 

(
££ 
m_Lives
££ 
.
££ 
Value
££ 
<=
££ 
$num
££ 
)
££ 
{
¤¤ 	
	m_IsAlive
¥¥ 
=
¥¥ 
false
¥¥ 
;
¥¥ 
}
¦¦ 	
}
§§ 
private
©© 
void
©© 
OnScoreChanged
©© 
(
©©  
int
©©  #
previousAmount
©©$ 2
,
©©2 3
int
©©4 7
currentAmount
©©8 E
)
©©E F
{
ªª 
if
«« 

(
«« 
!
«« 
IsOwner
«« 
)
«« 
return
«« 
;
«« 
Debug
¬¬ 
.
¬¬ 
	LogFormat
¬¬ 
(
¬¬ 
$str
¬¬ $
,
¬¬$ %
currentAmount
¬¬& 3
)
¬¬3 4
;
¬¬4 5
if
­­ 

(
­­ 
InvadersGame
­­ 
.
­­ 
	Singleton
­­ "
!=
­­# %
null
­­& *
)
­­* +
InvadersGame
­­, 8
.
­­8 9
	Singleton
­­9 B
.
­­B C
SetScore
­­C K
(
­­K L
m_Score
­­L S
.
­­S T
Value
­­T Y
)
­­Y Z
;
­­Z [
}
®® 
private
°° 
void
°° 
InGameUpdate
°° 
(
°° 
)
°° 
{
±± 
if
²² 

(
²² 
!
²² 
IsLocalPlayer
²² 
||
²² 
!
²² 
IsOwner
²² &
||
²²' )
!
²²* +
m_HasGameStarted
²²+ ;
)
²²; <
return
²²= C
;
²²C D
if
³³ 

(
³³ 
!
³³ 
	m_IsAlive
³³ 
)
³³ 
return
³³ 
;
³³ 
var
µµ 
deltaX
µµ 
=
µµ 
$num
µµ 
;
µµ 
if
¶¶ 

(
¶¶ 
Input
¶¶ 
.
¶¶ 
GetKey
¶¶ 
(
¶¶ 
KeyCode
¶¶  
.
¶¶  !
	LeftArrow
¶¶! *
)
¶¶* +
)
¶¶+ ,
deltaX
¶¶- 3
-=
¶¶4 6
$num
¶¶7 8
;
¶¶8 9
if
·· 

(
·· 
Input
·· 
.
·· 
GetKey
·· 
(
·· 
KeyCode
··  
.
··  !

RightArrow
··! +
)
··+ ,
)
··, -
deltaX
··. 4
+=
··5 7
$num
··8 9
;
··9 :
if
¹¹ 

(
¹¹ 
deltaX
¹¹ 
!=
¹¹ 
$num
¹¹ 
)
¹¹ 
{
ºº 	
var
»» 
newMovement
»» 
=
»» 
new
»» !
Vector3
»»" )
(
»») *
deltaX
»»* 0
,
»»0 1
$num
»»2 3
,
»»3 4
$num
»»5 6
)
»»6 7
;
»»7 8
	transform
¼¼ 
.
¼¼ 
position
¼¼ 
=
¼¼  
Vector3
¼¼! (
.
¼¼( )
MoveTowards
¼¼) 4
(
¼¼4 5
	transform
¼¼5 >
.
¼¼> ?
position
¼¼? G
,
¼¼G H
	transform
½½ 
.
½½ 
position
½½ "
+
½½# $
newMovement
½½% 0
,
½½0 1
m_MoveSpeed
½½2 =
*
½½> ?
Time
½½@ D
.
½½D E
	deltaTime
½½E N
)
½½N O
;
½½O P
}
¾¾ 	
if
ÀÀ 

(
ÀÀ 
Input
ÀÀ 
.
ÀÀ 

GetKeyDown
ÀÀ 
(
ÀÀ 
KeyCode
ÀÀ $
.
ÀÀ$ %
Space
ÀÀ% *
)
ÀÀ* +
)
ÀÀ+ ,
ShootServerRPC
ÀÀ- ;
(
ÀÀ; <
)
ÀÀ< =
;
ÀÀ= >
}
ÁÁ 
[
ÃÃ 
	ServerRpc
ÃÃ 
]
ÃÃ 
private
ÄÄ 
void
ÄÄ 
ShootServerRPC
ÄÄ 
(
ÄÄ  
)
ÄÄ  !
{
ÅÅ 
if
ÆÆ 

(
ÆÆ 
!
ÆÆ 
	m_IsAlive
ÆÆ 
)
ÆÆ 
return
ÇÇ 
;
ÇÇ 
if
ÉÉ 

(
ÉÉ 

m_MyBullet
ÉÉ 
==
ÉÉ 
null
ÉÉ 
)
ÉÉ 
{
ÊÊ 	

m_MyBullet
ËË 
=
ËË 
Instantiate
ËË $
(
ËË$ %
bulletPrefab
ËË% 1
,
ËË1 2
	transform
ËË3 <
.
ËË< =
position
ËË= E
+
ËËF G
Vector3
ËËH O
.
ËËO P
up
ËËP R
,
ËËR S

Quaternion
ËËT ^
.
ËË^ _
identity
ËË_ g
)
ËËg h
;
ËËh i

m_MyBullet
ÌÌ 
.
ÌÌ 
GetComponent
ÌÌ #
<
ÌÌ# $
PlayerBullet
ÌÌ$ 0
>
ÌÌ0 1
(
ÌÌ1 2
)
ÌÌ2 3
.
ÌÌ3 4
owner
ÌÌ4 9
=
ÌÌ: ;
this
ÌÌ< @
;
ÌÌ@ A

m_MyBullet
ÍÍ 
.
ÍÍ 
GetComponent
ÍÍ #
<
ÍÍ# $
NetworkObject
ÍÍ$ 1
>
ÍÍ1 2
(
ÍÍ2 3
)
ÍÍ3 4
.
ÍÍ4 5
Spawn
ÍÍ5 :
(
ÍÍ: ;
)
ÍÍ; <
;
ÍÍ< =
}
ÎÎ 	
}
ÏÏ 
public
ÑÑ 

void
ÑÑ 
HitByBullet
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÒÒ 
Assert
ÓÓ 
.
ÓÓ 
IsTrue
ÓÓ 
(
ÓÓ 
IsServer
ÓÓ 
,
ÓÓ 
$str
ÓÓ  N
)
ÓÓN O
;
ÓÓO P
if
ÔÔ 

(
ÔÔ 
!
ÔÔ 
	m_IsAlive
ÔÔ 
)
ÔÔ 
return
ÔÔ 
;
ÔÔ 
m_Lives
ÖÖ 
.
ÖÖ 
Value
ÖÖ 
-=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
if
ØØ 

(
ØØ 
m_Lives
ØØ 
.
ØØ 
Value
ØØ 
<=
ØØ 
$num
ØØ 
)
ØØ 
{
ÙÙ 	
	m_IsAlive
ÛÛ 
=
ÛÛ 
false
ÛÛ 
;
ÛÛ 
m_MoveX
ÜÜ 
.
ÜÜ 
Value
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
m_Lives
ÝÝ 
.
ÝÝ 
Value
ÝÝ 
=
ÝÝ 
$num
ÝÝ 
;
ÝÝ 
InvadersGame
ÞÞ 
.
ÞÞ 
	Singleton
ÞÞ "
.
ÞÞ" #

SetGameEnd
ÞÞ# -
(
ÞÞ- .
GameOverReason
ÞÞ. <
.
ÞÞ< =
Death
ÞÞ= B
)
ÞÞB C
;
ÞÞC D%
NotifyGameOverClientRpc
ßß #
(
ßß# $
GameOverReason
ßß$ 2
.
ßß2 3
Death
ßß3 8
,
ßß8 9
m_OwnerRPCParams
ßß: J
)
ßßJ K
;
ßßK L
Instantiate
àà 
(
àà '
m_ExplosionParticleSystem
àà 1
,
àà1 2
	transform
àà3 <
.
àà< =
position
àà= E
,
ààE F

quaternion
ààG Q
.
ààQ R
identity
ààR Z
)
ààZ [
;
àà[ \
m_PlayerVisual
ää 
.
ää 
enabled
ää "
=
ää# $
false
ää% *
;
ää* +
}
åå 	
else
ææ 
{
çç 	
Instantiate
èè 
(
èè !
m_HitParticleSystem
èè +
,
èè+ ,
	transform
èè- 6
.
èè6 7
position
èè7 ?
,
èè? @

quaternion
èèA K
.
èèK L
identity
èèL T
)
èèT U
;
èèU V
}
éé 	
}
êê 
[
ìì 
	ClientRpc
ìì 
]
ìì 
private
íí 
void
íí %
NotifyGameOverClientRpc
íí (
(
íí( )
GameOverReason
íí) 7
reason
íí8 >
,
íí> ?
ClientRpcParams
íí@ O
clientParams
ííP \
)
íí\ ]
{
îî 
NotifyGameOver
ïï 
(
ïï 
reason
ïï 
)
ïï 
;
ïï 
}
ðð 
public
÷÷ 

void
÷÷ 
NotifyGameOver
÷÷ 
(
÷÷ 
GameOverReason
÷÷ -
reason
÷÷. 4
)
÷÷4 5
{
øø 
Assert
ùù 
.
ùù 
IsTrue
ùù 
(
ùù 
IsLocalPlayer
ùù #
)
ùù# $
;
ùù$ %
m_HasGameStarted
úú 
=
úú 
false
úú  
;
úú  !
switch
ûû 
(
ûû 
reason
ûû 
)
ûû 
{
üü 	
case
ýý 
GameOverReason
ýý 
.
ýý  
None
ýý  $
:
ýý$ %
InvadersGame
þþ 
.
þþ 
	Singleton
þþ &
.
þþ& '!
DisplayGameOverText
þþ' :
(
þþ: ;
$str
þþ; [
)
þþ[ \
;
þþ\ ]
break
ÿÿ 
;
ÿÿ 
case
 
GameOverReason
 
.
  "
EnemiesReachedBottom
  4
:
4 5
InvadersGame
 
.
 
	Singleton
 &
.
& '!
DisplayGameOverText
' :
(
: ;
$str
; i
)
i j
;
j k
break
 
;
 
case
 
GameOverReason
 
.
  
Death
  %
:
% &
InvadersGame
 
.
 
	Singleton
 &
.
& '!
DisplayGameOverText
' :
(
: ;
$str
; e
)
e f
;
f g
break
 
;
 
case
 
GameOverReason
 
.
  
Max
  #
:
# $
break
 
;
 
default
 
:
 
throw
 
new
 )
ArgumentOutOfRangeException
 5
(
5 6
nameof
6 <
(
< =
reason
= C
)
C D
,
D E
reason
F L
,
L M
null
N R
)
R S
;
S T
}
 	
}
 
} 