}
{C:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\ChangedOrRemovedLobbyValue.cso
mC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\ILobbyEvents.cs…Ì
gC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\WrappedLobbyService.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
.  !
Internal! )
{ 
internal 
class 
WrappedLobbyService &
:' (
ILobbyService) 6
,6 7
ILobbyServiceSDK8 H
,H I)
ILobbyServiceSDKConfigurationJ g
,g h!
ILobbyServiceInternali ~
{ 
internal 
ILobbyServiceSdk !
m_LobbyService" 0
;0 1
internal 
const 
int !
LOBBY_ERROR_MIN_RANGE 0
=1 2
$num3 8
;8 9
internal 
WrappedLobbyService $
($ %
ILobbyServiceSdk% 5
lobbyService6 B
)B C
{ 	
m_LobbyService 
= 
lobbyService )
;) *
} 	
public** 
async** 
Task** 
<** 
Models**  
.**  !
Lobby**! &
>**& '
CreateLobbyAsync**( 8
(**8 9
string**9 ?
	lobbyName**@ I
,**I J
int**K N

maxPlayers**O Y
,**Y Z
CreateLobbyOptions**[ m
options**n u
=**v w
default**x 
)	** Ä
{++ 	
if,, 
(,, 
string,, 
.,, 
IsNullOrWhiteSpace,, )
(,,) *
	lobbyName,,* 3
),,3 4
),,4 5
{-- 
throw.. 
new.. !
ArgumentNullException.. /
(../ 0
$str..0 ;
,..; <
$str..= }
)..} ~
;..~ 
}// 
if00 
(00 

maxPlayers00 
<00 
$num00 
)00 
{11 
throw22 
new22 %
InvalidOperationException22 3
(223 4
$str224 d
)22d e
;22e f
}33 
var55 
createRequest55 
=55 
new55  #
CreateRequest55$ 1
(551 2
name66 
:66 
	lobbyName66 
,66  

maxPlayers77 
:77 

maxPlayers77 &
,77& '
	isPrivate88 
:88 
options88 "
?88" #
.88# $
	IsPrivate88$ -
,88- .
player99 
:99 
options99  
?99  !
.99! "
Player99" (
,99( )
data:: 
::: 
options:: 
?:: 
.:: 
Data:: #
);; 
;;; 
var== 
response== 
=== 
await==  
TryCatchRequest==! 0
(==0 1
m_LobbyService==1 ?
.==? @
LobbyApi==@ H
.==H I
CreateLobbyAsync==I Y
,==Y Z
new==[ ^
CreateLobbyRequest==_ q
(==q r
createRequest==r 
)	== Ä
)
==Ä Å
;
==Å Ç
var>> 
lobby>> 
=>> 
response>>  
.>>  !
Result>>! '
;>>' (
return?? 
lobby?? 
;?? 
}@@ 	
publicRR 
asyncRR 
TaskRR 
DeleteLobbyAsyncRR *
(RR* +
stringRR+ 1
lobbyIdRR2 9
)RR9 :
{SS 	
ifTT 
(TT 
stringTT 
.TT 
IsNullOrWhiteSpaceTT )
(TT) *
lobbyIdTT* 1
)TT1 2
)TT2 3
{UU 
throwVV 
newVV !
ArgumentNullExceptionVV /
(VV/ 0
$strVV0 9
,VV9 :
$strVV; {
)VV{ |
;VV| }
}WW 
awaitXX 
TryCatchRequestXX !
(XX! "
m_LobbyServiceXX" 0
.XX0 1
LobbyApiXX1 9
.XX9 :
DeleteLobbyAsyncXX: J
,XXJ K
newXXL O
DeleteLobbyRequestXXP b
(XXb c
lobbyIdXXc j
)XXj k
)XXk l
;XXl m
}YY 	
public\\ 
async\\ 
Task\\ 
<\\ 
List\\ 
<\\ 
string\\ %
>\\% &
>\\& '!
GetJoinedLobbiesAsync\\( =
(\\= >
)\\> ?
{]] 	
var^^ 
request^^ 
=^^ 
new^^ #
GetJoinedLobbiesRequest^^ 5
(^^5 6
)^^6 7
;^^7 8
var__ 
response__ 
=__ 
await__  
TryCatchRequest__! 0
(__0 1
m_LobbyService__1 ?
.__? @
LobbyApi__@ H
.__H I!
GetJoinedLobbiesAsync__I ^
,__^ _
request__` g
)__g h
;__h i
return`` 
response`` 
.`` 
Result`` "
;``" #
}aa 	
publicdd 
asyncdd 
Taskdd 
<dd 
Modelsdd  
.dd  !
Lobbydd! &
>dd& '
GetLobbyAsyncdd( 5
(dd5 6
stringdd6 <
lobbyIddd= D
)ddD E
{ee 	
ifff 
(ff 
stringff 
.ff 
IsNullOrWhiteSpaceff )
(ff) *
lobbyIdff* 1
)ff1 2
)ff2 3
{gg 
throwhh 
newhh !
ArgumentNullExceptionhh /
(hh/ 0
$strhh0 9
,hh9 :
$strhh; {
)hh{ |
;hh| }
}ii 
varkk 
responsekk 
=kk 
awaitkk  
TryCatchRequestkk! 0
(kk0 1
m_LobbyServicekk1 ?
.kk? @
LobbyApikk@ H
.kkH I
GetLobbyAsynckkI V
,kkV W
newkkX [
GetLobbyRequestkk\ k
(kkk l
lobbyIdkkl s
)kks t
)kkt u
;kku v
returnll 
responsell 
.ll 
Resultll "
;ll" #
}mm 	
publicpp 
asyncpp 
Taskpp "
SendHeartbeatPingAsyncpp 0
(pp0 1
stringpp1 7
lobbyIdpp8 ?
)pp? @
{qq 	
ifrr 
(rr 
stringrr 
.rr 
IsNullOrWhiteSpacerr )
(rr) *
lobbyIdrr* 1
)rr1 2
)rr2 3
{ss 
throwtt 
newtt !
ArgumentNullExceptiontt /
(tt/ 0
$strtt0 9
,tt9 :
$strtt; {
)tt{ |
;tt| }
}uu 
awaitww 
TryCatchRequestww !
(ww! "
m_LobbyServiceww" 0
.ww0 1
LobbyApiww1 9
.ww9 :
HeartbeatAsyncww: H
,wwH I
newwwJ M
HeartbeatRequestwwN ^
(ww^ _
lobbyIdww_ f
)wwf g
)wwg h
;wwh i
}xx 	
public{{ 
async{{ 
Task{{ 
<{{ 
Models{{  
.{{  !
Lobby{{! &
>{{& ' 
JoinLobbyByCodeAsync{{( <
({{< =
string{{= C
	lobbyCode{{D M
,{{M N"
JoinLobbyByCodeOptions{{O e
options{{f m
={{n o
default{{p w
){{w x
{|| 	
if}} 
(}} 
string}} 
.}} 
IsNullOrWhiteSpace}} )
(}}) *
	lobbyCode}}* 3
)}}3 4
)}}4 5
{~~ 
throw 
new !
ArgumentNullException /
(/ 0
$str0 ;
,; <
$str= }
)} ~
;~ 
}
ÄÄ 
try
ÇÇ 
{
ÉÉ 
var
ÑÑ 
joinRequest
ÑÑ 
=
ÑÑ  !
new
ÑÑ" %$
JoinLobbyByCodeRequest
ÑÑ& <
(
ÑÑ< =
new
ÑÑ= @
JoinByCodeRequest
ÑÑA R
(
ÑÑR S
	lobbyCode
ÑÑS \
,
ÑÑ\ ]
options
ÑÑ^ e
?
ÑÑe f
.
ÑÑf g
Player
ÑÑg m
)
ÑÑm n
)
ÑÑn o
;
ÑÑo p
var
ÖÖ 
response
ÖÖ 
=
ÖÖ 
await
ÖÖ $
TryCatchRequest
ÖÖ% 4
(
ÖÖ4 5
m_LobbyService
ÖÖ5 C
.
ÖÖC D
LobbyApi
ÖÖD L
.
ÖÖL M"
JoinLobbyByCodeAsync
ÖÖM a
,
ÖÖa b
joinRequest
ÖÖc n
)
ÖÖn o
;
ÖÖo p
return
ÜÜ 
response
ÜÜ 
.
ÜÜ  
Result
ÜÜ  &
;
ÜÜ& '
}
áá 
catch
àà 
(
àà #
LobbyServiceException
àà (
e
àà) *
)
àà* +
{
ââ 
if
ãã 
(
ãã 
e
ãã 
.
ãã 
Reason
ãã 
==
ãã "
LobbyExceptionReason
ãã  4
.
ãã4 5
LobbyConflict
ãã5 B
)
ããB C
{
åå 
var
çç 
lobby
çç 
=
çç 
await
çç  %#
LobbyConflictResolver
çç& ;
(
çç; <
options
çç< C
?
ççC D
.
ççD E
Player
ççE K
,
ççK L
null
ççM Q
,
ççQ R
e
ççS T
)
ççT U
;
ççU V
if
éé 
(
éé 
lobby
éé 
!=
éé  
null
éé! %
)
éé% &
{
èè 
return
êê 
lobby
êê $
;
êê$ %
}
ëë 
}
íí 
throw
ìì 
;
ìì 
}
îî 
}
ïï 	
public
òò 
async
òò 
Task
òò 
<
òò 
Models
òò  
.
òò  !
Lobby
òò! &
>
òò& ' 
JoinLobbyByIdAsync
òò( :
(
òò: ;
string
òò; A
lobbyId
òòB I
,
òòI J"
JoinLobbyByIdOptions
òòK _
options
òò` g
=
òòh i
default
òòj q
)
òòq r
{
ôô 	
if
öö 
(
öö 
string
öö 
.
öö  
IsNullOrWhiteSpace
öö )
(
öö) *
lobbyId
öö* 1
)
öö1 2
)
öö2 3
{
õõ 
throw
úú 
new
úú #
ArgumentNullException
úú /
(
úú/ 0
$str
úú0 9
,
úú9 :
$str
úú; {
)
úú{ |
;
úú| }
}
ùù 
try
üü 
{
†† 
var
°° 
joinRequest
°° 
=
°°  !
new
°°" %"
JoinLobbyByIdRequest
°°& :
(
°°: ;
lobbyId
°°; B
,
°°B C
options
°°D K
?
°°K L
.
°°L M
Player
°°M S
)
°°S T
;
°°T U
var
¢¢ 
response
¢¢ 
=
¢¢ 
await
¢¢ $
TryCatchRequest
¢¢% 4
(
¢¢4 5
m_LobbyService
¢¢5 C
.
¢¢C D
LobbyApi
¢¢D L
.
¢¢L M 
JoinLobbyByIdAsync
¢¢M _
,
¢¢_ `
joinRequest
¢¢a l
)
¢¢l m
;
¢¢m n
return
££ 
response
££ 
.
££  
Result
££  &
;
££& '
}
§§ 
catch
•• 
(
•• #
LobbyServiceException
•• (
e
••) *
)
••* +
{
¶¶ 
if
®® 
(
®® 
e
®® 
.
®® 
Reason
®® 
==
®® "
LobbyExceptionReason
®®  4
.
®®4 5
LobbyConflict
®®5 B
)
®®B C
{
©© 
var
™™ 
lobby
™™ 
=
™™ 
await
™™  %#
LobbyConflictResolver
™™& ;
(
™™; <
options
™™< C
?
™™C D
.
™™D E
Player
™™E K
,
™™K L
lobbyId
™™M T
,
™™T U
e
™™V W
)
™™W X
;
™™X Y
if
´´ 
(
´´ 
lobby
´´ 
!=
´´  
null
´´! %
)
´´% &
{
¨¨ 
return
≠≠ 
lobby
≠≠ $
;
≠≠$ %
}
ÆÆ 
}
ØØ 
throw
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 	
public
µµ 
async
µµ 
Task
µµ 
<
µµ 
QueryResponse
µµ '
>
µµ' (
QueryLobbiesAsync
µµ) :
(
µµ: ;!
QueryLobbiesOptions
µµ; N
options
µµO V
=
µµW X
default
µµY `
)
µµ` a
{
∂∂ 	
var
∑∑ 
queryRequest
∑∑ 
=
∑∑ 
options
∑∑ &
==
∑∑' )
null
∑∑* .
?
∑∑/ 0
null
∑∑1 5
:
∑∑6 7
new
∑∑8 ;
QueryRequest
∑∑< H
(
∑∑H I
options
∑∑I P
.
∑∑P Q
Count
∑∑Q V
,
∑∑V W
options
∑∑X _
.
∑∑_ `
Skip
∑∑` d
,
∑∑d e
options
∑∑f m
.
∑∑m n
SampleResults
∑∑n {
,
∑∑{ |
options∑∑} Ñ
.∑∑Ñ Ö
Filters∑∑Ö å
,∑∑å ç
options∑∑é ï
.∑∑ï ñ
Order∑∑ñ õ
,∑∑õ ú
options∑∑ù §
.∑∑§ •!
ContinuationToken∑∑• ∂
)∑∑∂ ∑
;∑∑∑ ∏
var
∏∏ !
queryLobbiesRequest
∏∏ #
=
∏∏$ %
new
∏∏& )!
QueryLobbiesRequest
∏∏* =
(
∏∏= >
queryRequest
∏∏> J
)
∏∏J K
;
∏∏K L
var
ππ 
response
ππ 
=
ππ 
await
ππ  
TryCatchRequest
ππ! 0
(
ππ0 1
m_LobbyService
ππ1 ?
.
ππ? @
LobbyApi
ππ@ H
.
ππH I
QueryLobbiesAsync
ππI Z
,
ππZ [!
queryLobbiesRequest
ππ\ o
)
ππo p
;
ππp q
return
∫∫ 
response
∫∫ 
.
∫∫ 
Result
∫∫ "
;
∫∫" #
}
ªª 	
public
ææ 
async
ææ 
Task
ææ 
<
ææ 
Models
ææ  
.
ææ  !
Lobby
ææ! &
>
ææ& '!
QuickJoinLobbyAsync
ææ( ;
(
ææ; <#
QuickJoinLobbyOptions
ææ< Q
options
ææR Y
=
ææZ [
default
ææ\ c
)
ææc d
{
øø 	
try
¿¿ 
{
¡¡ 
var
¬¬ 
quickJoinRequest
¬¬ $
=
¬¬% &
options
¬¬' .
==
¬¬/ 1
null
¬¬2 6
?
¬¬7 8
null
¬¬9 =
:
¬¬> ?
new
¬¬@ C
QuickJoinRequest
¬¬D T
(
¬¬T U
options
¬¬U \
.
¬¬\ ]
Filter
¬¬] c
,
¬¬c d
options
¬¬e l
.
¬¬l m
Player
¬¬m s
)
¬¬s t
;
¬¬t u
var
√√ #
quickJoinLobbyRequest
√√ )
=
√√* +
new
√√, /#
QuickJoinLobbyRequest
√√0 E
(
√√E F
quickJoinRequest
√√F V
)
√√V W
;
√√W X
var
ƒƒ 
response
ƒƒ 
=
ƒƒ 
await
ƒƒ $
TryCatchRequest
ƒƒ% 4
(
ƒƒ4 5
m_LobbyService
ƒƒ5 C
.
ƒƒC D
LobbyApi
ƒƒD L
.
ƒƒL M!
QuickJoinLobbyAsync
ƒƒM `
,
ƒƒ` a#
quickJoinLobbyRequest
ƒƒb w
)
ƒƒw x
;
ƒƒx y
return
≈≈ 
response
≈≈ 
.
≈≈  
Result
≈≈  &
;
≈≈& '
}
∆∆ 
catch
«« 
(
«« #
LobbyServiceException
«« (
e
««) *
)
««* +
{
»» 
if
   
(
   
e
   
.
   
Reason
   
==
   "
LobbyExceptionReason
    4
.
  4 5
LobbyConflict
  5 B
)
  B C
{
ÀÀ 
var
ÃÃ 
lobby
ÃÃ 
=
ÃÃ 
await
ÃÃ  %#
LobbyConflictResolver
ÃÃ& ;
(
ÃÃ; <
options
ÃÃ< C
?
ÃÃC D
.
ÃÃD E
Player
ÃÃE K
,
ÃÃK L
null
ÃÃM Q
,
ÃÃQ R
e
ÃÃS T
)
ÃÃT U
;
ÃÃU V
if
ÕÕ 
(
ÕÕ 
lobby
ÕÕ 
!=
ÕÕ  
null
ÕÕ! %
)
ÕÕ% &
{
ŒŒ 
return
œœ 
lobby
œœ $
;
œœ$ %
}
–– 
}
—— 
throw
““ 
;
““ 
}
”” 
}
‘‘ 	
public
◊◊ 
async
◊◊ 
Task
◊◊ 
RemovePlayerAsync
◊◊ +
(
◊◊+ ,
string
◊◊, 2
lobbyId
◊◊3 :
,
◊◊: ;
string
◊◊< B
playerId
◊◊C K
)
◊◊K L
{
ÿÿ 	
if
ŸŸ 
(
ŸŸ 
string
ŸŸ 
.
ŸŸ  
IsNullOrWhiteSpace
ŸŸ )
(
ŸŸ) *
lobbyId
ŸŸ* 1
)
ŸŸ1 2
)
ŸŸ2 3
{
⁄⁄ 
throw
€€ 
new
€€ #
ArgumentNullException
€€ /
(
€€/ 0
$str
€€0 9
,
€€9 :
$str
€€; {
)
€€{ |
;
€€| }
}
‹‹ 
if
›› 
(
›› 
string
›› 
.
››  
IsNullOrWhiteSpace
›› )
(
››) *
playerId
››* 2
)
››2 3
)
››3 4
{
ﬁﬁ 
throw
ﬂﬂ 
new
ﬂﬂ #
ArgumentNullException
ﬂﬂ /
(
ﬂﬂ/ 0
$str
ﬂﬂ0 :
,
ﬂﬂ: ;
$str
ﬂﬂ< |
)
ﬂﬂ| }
;
ﬂﬂ} ~
}
‡‡ 
var
·· !
removePlayerRequest
·· #
=
··$ %
new
··& )!
RemovePlayerRequest
··* =
(
··= >
lobbyId
··> E
,
··E F
playerId
··G O
)
··O P
;
··P Q
await
‚‚ 
TryCatchRequest
‚‚ !
(
‚‚! "
m_LobbyService
‚‚" 0
.
‚‚0 1
LobbyApi
‚‚1 9
.
‚‚9 :
RemovePlayerAsync
‚‚: K
,
‚‚K L!
removePlayerRequest
‚‚M `
)
‚‚` a
;
‚‚a b
}
„„ 	
public
ÊÊ 
async
ÊÊ 
Task
ÊÊ 
<
ÊÊ 
Models
ÊÊ  
.
ÊÊ  !
Lobby
ÊÊ! &
>
ÊÊ& '
UpdateLobbyAsync
ÊÊ( 8
(
ÊÊ8 9
string
ÊÊ9 ?
lobbyId
ÊÊ@ G
,
ÊÊG H 
UpdateLobbyOptions
ÊÊI [
options
ÊÊ\ c
)
ÊÊc d
{
ÁÁ 	
if
ËË 
(
ËË 
string
ËË 
.
ËË  
IsNullOrWhiteSpace
ËË )
(
ËË) *
lobbyId
ËË* 1
)
ËË1 2
)
ËË2 3
{
ÈÈ 
throw
ÍÍ 
new
ÍÍ #
ArgumentNullException
ÍÍ /
(
ÍÍ/ 0
$str
ÍÍ0 9
,
ÍÍ9 :
$str
ÍÍ; {
)
ÍÍ{ |
;
ÍÍ| }
}
ÎÎ 
if
ÏÏ 
(
ÏÏ 
options
ÏÏ 
==
ÏÏ 
null
ÏÏ 
)
ÏÏ  
{
ÌÌ 
throw
ÓÓ 
new
ÓÓ #
ArgumentNullException
ÓÓ /
(
ÓÓ/ 0
nameof
ÓÓ0 6
(
ÓÓ6 7
options
ÓÓ7 >
)
ÓÓ> ?
,
ÓÓ? @
$str
ÓÓA p
)
ÓÓp q
;
ÓÓq r
}
ÔÔ 
var
 
updateRequest
 
=
 
options
  '
==
( *
null
+ /
?
0 1
null
2 6
:
7 8
new
9 <
UpdateRequest
= J
(
J K
options
K R
.
R S
Name
S W
,
W X
options
Y `
.
` a

MaxPlayers
a k
,
k l
options
m t
.
t u
	IsPrivate
u ~
,
~ 
optionsÄ á
.á à
IsLockedà ê
,ê ë
optionsí ô
.ô ö
Dataö û
,û ü
options† ß
.ß ®
HostId® Æ
)Æ Ø
;Ø ∞
var
ÒÒ  
updateLobbyRequest
ÒÒ "
=
ÒÒ# $
new
ÒÒ% ( 
UpdateLobbyRequest
ÒÒ) ;
(
ÒÒ; <
lobbyId
ÒÒ< C
,
ÒÒC D
updateRequest
ÒÒE R
)
ÒÒR S
;
ÒÒS T
var
ÚÚ 
response
ÚÚ 
=
ÚÚ 
await
ÚÚ  
TryCatchRequest
ÚÚ! 0
(
ÚÚ0 1
m_LobbyService
ÚÚ1 ?
.
ÚÚ? @
LobbyApi
ÚÚ@ H
.
ÚÚH I
UpdateLobbyAsync
ÚÚI Y
,
ÚÚY Z 
updateLobbyRequest
ÚÚ[ m
)
ÚÚm n
;
ÚÚn o
return
ÛÛ 
response
ÛÛ 
.
ÛÛ 
Result
ÛÛ "
;
ÛÛ" #
}
ÙÙ 	
public
˜˜ 
async
˜˜ 
Task
˜˜ 
<
˜˜ 
Models
˜˜  
.
˜˜  !
Lobby
˜˜! &
>
˜˜& '
UpdatePlayerAsync
˜˜( 9
(
˜˜9 :
string
˜˜: @
lobbyId
˜˜A H
,
˜˜H I
string
˜˜J P
playerId
˜˜Q Y
,
˜˜Y Z!
UpdatePlayerOptions
˜˜[ n
options
˜˜o v
)
˜˜v w
{
¯¯ 	
if
˘˘ 
(
˘˘ 
string
˘˘ 
.
˘˘  
IsNullOrWhiteSpace
˘˘ )
(
˘˘) *
lobbyId
˘˘* 1
)
˘˘1 2
)
˘˘2 3
{
˙˙ 
throw
˚˚ 
new
˚˚ #
ArgumentNullException
˚˚ /
(
˚˚/ 0
$str
˚˚0 9
,
˚˚9 :
$str
˚˚; {
)
˚˚{ |
;
˚˚| }
}
¸¸ 
if
˝˝ 
(
˝˝ 
string
˝˝ 
.
˝˝  
IsNullOrWhiteSpace
˝˝ )
(
˝˝) *
playerId
˝˝* 2
)
˝˝2 3
)
˝˝3 4
{
˛˛ 
throw
ˇˇ 
new
ˇˇ #
ArgumentNullException
ˇˇ /
(
ˇˇ/ 0
$str
ˇˇ0 :
,
ˇˇ: ;
$str
ˇˇ< |
)
ˇˇ| }
;
ˇˇ} ~
}
ÄÄ 
if
ÅÅ 
(
ÅÅ 
options
ÅÅ 
==
ÅÅ 
null
ÅÅ 
)
ÅÅ  
{
ÇÇ 
throw
ÉÉ 
new
ÉÉ #
ArgumentNullException
ÉÉ /
(
ÉÉ/ 0
nameof
ÉÉ0 6
(
ÉÉ6 7
options
ÉÉ7 >
)
ÉÉ> ?
,
ÉÉ? @
$str
ÉÉA q
)
ÉÉq r
;
ÉÉr s
}
ÑÑ 
var
ÖÖ !
playerUpdateRequest
ÖÖ #
=
ÖÖ$ %
options
ÖÖ& -
==
ÖÖ. 0
null
ÖÖ1 5
?
ÖÖ6 7
null
ÖÖ8 <
:
ÖÖ= >
new
ÖÖ? B!
PlayerUpdateRequest
ÖÖC V
(
ÖÖV W
options
ÖÖW ^
.
ÖÖ^ _
ConnectionInfo
ÖÖ_ m
,
ÖÖm n
options
ÖÖo v
.
ÖÖv w
Data
ÖÖw {
,
ÖÖ{ |
optionsÖÖ} Ñ
.ÖÖÑ Ö
AllocationIdÖÖÖ ë
)ÖÖë í
;ÖÖí ì
var
ÜÜ !
updatePlayerRequest
ÜÜ #
=
ÜÜ$ %
new
ÜÜ& )!
UpdatePlayerRequest
ÜÜ* =
(
ÜÜ= >
lobbyId
ÜÜ> E
,
ÜÜE F
playerId
ÜÜG O
,
ÜÜO P!
playerUpdateRequest
ÜÜQ d
)
ÜÜd e
;
ÜÜe f
var
áá 
response
áá 
=
áá 
await
áá  
TryCatchRequest
áá! 0
(
áá0 1
m_LobbyService
áá1 ?
.
áá? @
LobbyApi
áá@ H
.
ááH I
UpdatePlayerAsync
ááI Z
,
ááZ [!
updatePlayerRequest
áá\ o
)
ááo p
;
ááp q
return
àà 
response
àà 
.
àà 
Result
àà "
;
àà" #
}
ââ 	
public
åå 
async
åå 
Task
åå 
<
åå 
Models
åå  
.
åå  !
Lobby
åå! &
>
åå& '#
ReconnectToLobbyAsync
åå( =
(
åå= >
string
åå> D
lobbyId
ååE L
)
ååL M
{
çç 	
if
éé 
(
éé 
string
éé 
.
éé  
IsNullOrWhiteSpace
éé )
(
éé) *
lobbyId
éé* 1
)
éé1 2
)
éé2 3
{
èè 
throw
êê 
new
êê #
ArgumentNullException
êê /
(
êê/ 0
$str
êê0 9
,
êê9 :
$str
êê; {
)
êê{ |
;
êê| }
}
ëë 
var
íí 
reconnectRequest
íí  
=
íí! "
new
íí# &
ReconnectRequest
íí' 7
(
íí7 8
lobbyId
íí8 ?
)
íí? @
;
íí@ A
var
ìì 
response
ìì 
=
ìì 
await
ìì  
TryCatchRequest
ìì! 0
(
ìì0 1
m_LobbyService
ìì1 ?
.
ìì? @
LobbyApi
ìì@ H
.
ììH I
ReconnectAsync
ììI W
,
ììW X
reconnectRequest
ììY i
)
ììi j
;
ììj k
return
îî 
response
îî 
.
îî 
Result
îî "
;
îî" #
}
ïï 	
public
òò 
async
òò 
Task
òò 
<
òò 

Dictionary
òò $
<
òò$ %
string
òò% +
,
òò+ ,
Models
òò- 3
.
òò3 4
	TokenData
òò4 =
>
òò= >
>
òò> ? 
RequestTokensAsync
òò@ R
(
òòR S
string
òòS Y
lobbyId
òòZ a
,
òòa b
params
òòc i
TokenRequest
òòj v
.
òòv w
TokenTypeOptionsòòw á
[òòá à
]òòà â
tokenOptionsòòä ñ
)òòñ ó
{
ôô 	
if
öö 
(
öö 
tokenOptions
öö 
==
öö 
null
öö  $
||
öö% '
tokenOptions
öö( 4
.
öö4 5
Length
öö5 ;
<
öö< =
$num
öö> ?
)
öö? @
{
õõ 
throw
úú 
new
úú #
ArgumentNullException
úú /
(
úú/ 0
$strúú0 â
)úúâ ä
;úúä ã
}
ùù 
var
ûû !
tokenRequestOptions
ûû #
=
ûû$ %
new
ûû& )
List
ûû* .
<
ûû. /
TokenRequest
ûû/ ;
>
ûû; <
(
ûû< =
tokenOptions
ûû= I
.
ûûI J
Length
ûûJ P
)
ûûP Q
;
ûûQ R
foreach
üü 
(
üü 
var
üü 
tokenOption
üü $
in
üü% '
tokenOptions
üü( 4
)
üü4 5
{
†† !
tokenRequestOptions
°° #
.
°°# $
Add
°°$ '
(
°°' (
new
°°( +
TokenRequest
°°, 8
(
°°8 9
tokenOption
°°9 D
)
°°D E
)
°°E F
;
°°F G
}
¢¢ 
var
££ "
requestTokensRequest
££ $
=
££% &
new
££' *"
RequestTokensRequest
££+ ?
(
££? @
lobbyId
££@ G
,
££G H!
tokenRequestOptions
££I \
)
££\ ]
;
££] ^
var
§§ 
response
§§ 
=
§§ 
await
§§  
TryCatchRequest
§§! 0
(
§§0 1
m_LobbyService
§§1 ?
.
§§? @
LobbyApi
§§@ H
.
§§H I 
RequestTokensAsync
§§I [
,
§§[ \"
requestTokensRequest
§§] q
)
§§q r
;
§§r s
return
•• 
response
•• 
.
•• 
Result
•• "
;
••" #
}
¶¶ 	
public
®® 
void
®® 
SetBasePath
®® 
(
®®  
string
®®  &
basePath
®®' /
)
®®/ 0
{
©© 	
m_LobbyService
™™ 
.
™™ 
Configuration
™™ (
.
™™( )
BasePath
™™) 1
=
™™2 3
basePath
™™4 <
;
™™< =
}
´´ 	
private
∞∞ 
async
∞∞ 
Task
∞∞ 
<
∞∞ 
Response
∞∞ #
>
∞∞# $
TryCatchRequest
∞∞% 4
<
∞∞4 5
TRequest
∞∞5 =
>
∞∞= >
(
∞∞> ?
Func
∞∞? C
<
∞∞C D
TRequest
∞∞D L
,
∞∞L M
Configuration
∞∞N [
,
∞∞[ \
Task
∞∞] a
<
∞∞a b
Response
∞∞b j
>
∞∞j k
>
∞∞k l
func
∞∞m q
,
∞∞q r
TRequest
∞∞s {
request∞∞| É
)∞∞É Ñ
{
±± 	
Response
≤≤ 
response
≤≤ 
=
≤≤ 
null
≤≤  $
;
≤≤$ %
try
≥≥ 
{
¥¥ 
response
µµ 
=
µµ 
await
µµ  
func
µµ! %
(
µµ% &
request
µµ& -
,
µµ- .
m_LobbyService
µµ/ =
.
µµ= >
Configuration
µµ> K
)
µµK L
;
µµL M
}
∂∂ 
catch
∑∑ 
(
∑∑ 
HttpException
∑∑  
<
∑∑  !
ErrorStatus
∑∑! ,
>
∑∑, -
he
∑∑. 0
)
∑∑0 1
{
∏∏ "
ResolveErrorWrapping
ππ $
(
ππ$ %
(
ππ% &"
LobbyExceptionReason
ππ& :
)
ππ: ;
he
ππ; =
.
ππ= >
ActualError
ππ> I
.
ππI J
Code
ππJ N
,
ππN O
he
ππP R
)
ππR S
;
ππS T
}
∫∫ 
catch
ªª 
(
ªª 
HttpException
ªª  
he
ªª! #
)
ªª# $
{
ºº 
int
ΩΩ !
httpErrorStatusCode
ΩΩ '
=
ΩΩ( )
(
ΩΩ* +
int
ΩΩ+ .
)
ΩΩ. /
he
ΩΩ/ 1
.
ΩΩ1 2
Response
ΩΩ2 :
.
ΩΩ: ;

StatusCode
ΩΩ; E
;
ΩΩE F"
LobbyExceptionReason
ææ $
reason
ææ% +
=
ææ, -"
LobbyExceptionReason
ææ. B
.
ææB C
Unknown
ææC J
;
ææJ K
if
øø 
(
øø 
he
øø 
.
øø 
Response
øø 
.
øø  
IsNetworkError
øø  .
)
øø. /
{
¿¿ 
reason
¡¡ 
=
¡¡ "
LobbyExceptionReason
¡¡ 1
.
¡¡1 2
NetworkError
¡¡2 >
;
¡¡> ?
}
¬¬ 
else
√√ 
if
√√ 
(
√√ 
he
√√ 
.
√√ 
Response
√√ $
.
√√$ %
IsHttpError
√√% 0
)
√√0 1
{
ƒƒ 
if
∆∆ 
(
∆∆ !
httpErrorStatusCode
∆∆ +
<
∆∆, -
$num
∆∆. 2
)
∆∆2 3
{
«« !
httpErrorStatusCode
»» +
+=
»», .#
LOBBY_ERROR_MIN_RANGE
»»/ D
;
»»D E
if
…… 
(
…… 
Enum
……  
.
……  !
	IsDefined
……! *
(
……* +
typeof
……+ 1
(
……1 2"
LobbyExceptionReason
……2 F
)
……F G
,
……G H!
httpErrorStatusCode
……I \
)
……\ ]
)
……] ^
{
   
reason
ÀÀ "
=
ÀÀ# $
(
ÀÀ% &"
LobbyExceptionReason
ÀÀ& :
)
ÀÀ: ;!
httpErrorStatusCode
ÀÀ; N
;
ÀÀN O
}
ÃÃ 
}
ÕÕ 
}
ŒŒ "
ResolveErrorWrapping
–– $
(
––$ %
reason
––% +
,
––+ ,
he
––- /
)
––/ 0
;
––0 1
}
—— 
catch
““ 
(
““ 
	Exception
““ 
e
““ 
)
““ 
{
”” "
ResolveErrorWrapping
’’ $
(
’’$ %"
LobbyExceptionReason
’’% 9
.
’’9 :
Unknown
’’: A
,
’’A B
e
’’C D
)
’’D E
;
’’E F
}
÷÷ 
return
◊◊ 
response
◊◊ 
;
◊◊ 
}
ÿÿ 	
private
€€ 
async
€€ 
Task
€€ 
<
€€ 
Response
€€ #
<
€€# $
TReturn
€€$ +
>
€€+ ,
>
€€, -
TryCatchRequest
€€. =
<
€€= >
TRequest
€€> F
,
€€F G
TReturn
€€H O
>
€€O P
(
€€P Q
Func
€€Q U
<
€€U V
TRequest
€€V ^
,
€€^ _
Configuration
€€` m
,
€€m n
Task
€€o s
<
€€s t
Response
€€t |
<
€€| }
TReturn€€} Ñ
>€€Ñ Ö
>€€Ö Ü
>€€Ü á
func€€à å
,€€å ç
TRequest€€é ñ
request€€ó û
)€€û ü
{
‹‹ 	
Response
›› 
<
›› 
TReturn
›› 
>
›› 
response
›› &
=
››' (
null
››) -
;
››- .
try
ﬁﬁ 
{
ﬂﬂ 
response
‡‡ 
=
‡‡ 
await
‡‡  
func
‡‡! %
(
‡‡% &
request
‡‡& -
,
‡‡- .
m_LobbyService
‡‡/ =
.
‡‡= >
Configuration
‡‡> K
)
‡‡K L
;
‡‡L M
}
·· 
catch
‚‚ 
(
‚‚ 
HttpException
‚‚  
<
‚‚  !
ErrorStatus
‚‚! ,
>
‚‚, -
he
‚‚. 0
)
‚‚0 1
{
„„ "
ResolveErrorWrapping
‰‰ $
(
‰‰$ %
(
‰‰% &"
LobbyExceptionReason
‰‰& :
)
‰‰: ;
he
‰‰< >
.
‰‰> ?
ActualError
‰‰? J
.
‰‰J K
Code
‰‰K O
,
‰‰O P
he
‰‰Q S
)
‰‰S T
;
‰‰T U
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
HttpException
ÊÊ  
he
ÊÊ! #
)
ÊÊ# $
{
ÁÁ 
int
ËË !
httpErrorStatusCode
ËË '
=
ËË( )
(
ËË* +
int
ËË+ .
)
ËË. /
he
ËË0 2
.
ËË2 3
Response
ËË3 ;
.
ËË; <

StatusCode
ËË< F
;
ËËF G"
LobbyExceptionReason
ÈÈ $
reason
ÈÈ% +
=
ÈÈ, -"
LobbyExceptionReason
ÈÈ. B
.
ÈÈB C
Unknown
ÈÈC J
;
ÈÈJ K
if
ÍÍ 
(
ÍÍ 
he
ÍÍ 
.
ÍÍ 
Response
ÍÍ 
.
ÍÍ  
IsNetworkError
ÍÍ  .
)
ÍÍ. /
{
ÎÎ 
reason
ÏÏ 
=
ÏÏ "
LobbyExceptionReason
ÏÏ 1
.
ÏÏ1 2
NetworkError
ÏÏ2 >
;
ÏÏ> ?
}
ÌÌ 
else
ÓÓ 
if
ÓÓ 
(
ÓÓ 
he
ÓÓ 
.
ÓÓ 
Response
ÓÓ $
.
ÓÓ$ %
IsHttpError
ÓÓ% 0
)
ÓÓ0 1
{
ÔÔ 
if
ÒÒ 
(
ÒÒ !
httpErrorStatusCode
ÒÒ +
<
ÒÒ, -
$num
ÒÒ. 2
)
ÒÒ2 3
{
ÚÚ !
httpErrorStatusCode
ÛÛ +
+=
ÛÛ, .#
LOBBY_ERROR_MIN_RANGE
ÛÛ/ D
;
ÛÛD E
if
ÙÙ 
(
ÙÙ 
Enum
ÙÙ  
.
ÙÙ  !
	IsDefined
ÙÙ! *
(
ÙÙ* +
typeof
ÙÙ+ 1
(
ÙÙ1 2"
LobbyExceptionReason
ÙÙ2 F
)
ÙÙF G
,
ÙÙG H!
httpErrorStatusCode
ÙÙI \
)
ÙÙ\ ]
)
ÙÙ] ^
{
ıı 
reason
ˆˆ "
=
ˆˆ# $
(
ˆˆ% &"
LobbyExceptionReason
ˆˆ& :
)
ˆˆ: ;!
httpErrorStatusCode
ˆˆ< O
;
ˆˆO P
}
˜˜ 
}
¯¯ 
}
˘˘ "
ResolveErrorWrapping
˚˚ $
(
˚˚$ %
reason
˚˚% +
,
˚˚+ ,
he
˚˚- /
)
˚˚/ 0
;
˚˚0 1
}
¸¸ 
catch
˝˝ 
(
˝˝ 
	Exception
˝˝ 
e
˝˝ 
)
˝˝ 
{
˛˛ "
ResolveErrorWrapping
ÄÄ $
(
ÄÄ$ %"
LobbyExceptionReason
ÄÄ% 9
.
ÄÄ9 :
Unknown
ÄÄ: A
,
ÄÄA B
e
ÄÄC D
)
ÄÄD E
;
ÄÄE F
}
ÅÅ 
return
ÇÇ 
response
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
private
ÜÜ 
void
ÜÜ "
ResolveErrorWrapping
ÜÜ )
(
ÜÜ) *"
LobbyExceptionReason
ÜÜ* >
reason
ÜÜ? E
,
ÜÜE F
	Exception
ÜÜG P
	exception
ÜÜQ Z
=
ÜÜ[ \
null
ÜÜ] a
)
ÜÜa b
{
áá 	
if
àà 
(
àà 
reason
àà 
==
àà "
LobbyExceptionReason
àà .
.
àà. /
Unknown
àà/ 6
)
àà6 7
{
ââ 
Debug
ää 
.
ää 
LogError
ää 
(
ää 
$"
ää !
{
ää! "
Enum
ää" &
.
ää& '
GetName
ää' .
(
ää. /
typeof
ää/ 5
(
ää5 6"
LobbyExceptionReason
ää6 J
)
ääJ K
,
ääK L
reason
ääM S
)
ääS T
}
ääT U
$str
ääU X
{
ääX Y
(
ääY Z
int
ääZ ]
)
ää] ^
reason
ää^ d
}
ääd e
$strääe Ü
"ääÜ á
)ääá à
;ääà â
throw
ãã 
new
ãã #
LobbyServiceException
ãã /
(
ãã/ 0
reason
ãã0 6
,
ãã6 7
$str
ãã8 O
,
ããO P
	exception
ããQ Z
)
ããZ [
;
ãã[ \
}
åå 
else
çç 
{
éé 
HttpException
êê 
<
êê 
ErrorStatus
êê )
>
êê) *
apiException
êê+ 7
=
êê8 9
	exception
êê: C
as
êêD F
HttpException
êêG T
<
êêT U
ErrorStatus
êêU `
>
êê` a
;
êêa b
if
ëë 
(
ëë 
apiException
ëë  
!=
ëë! #
null
ëë$ (
)
ëë( )
{
íí 
Debug
ìì 
.
ìì 
LogError
ìì "
(
ìì" #
$"
ìì# %
{
ìì% &
Enum
ìì& *
.
ìì* +
GetName
ìì+ 2
(
ìì2 3
typeof
ìì3 9
(
ìì9 :"
LobbyExceptionReason
ìì: N
)
ììN O
,
ììO P
reason
ììQ W
)
ììW X
}
ììX Y
$str
ììY \
{
ìì\ ]
(
ìì] ^
int
ìì^ a
)
ììa b
reason
ììc i
}
ììi j
$str
ììj v
{
ììv w
apiExceptionììw É
.ììÉ Ñ
ActualErrorììÑ è
.ììè ê
Detailììê ñ
}ììñ ó
"ììó ò
)ììò ô
;ììô ö
throw
îî 
new
îî #
LobbyServiceException
îî 3
(
îî3 4
reason
îî4 :
,
îî: ;
apiException
îî< H
.
îîH I
ActualError
îîI T
.
îîT U
Detail
îîU [
,
îî[ \
apiException
îî] i
)
îîi j
;
îîj k
}
ïï 
else
ññ 
{
óó 
Debug
ôô 
.
ôô 
LogError
ôô "
(
ôô" #
$"
ôô# %
{
ôô% &
Enum
ôô& *
.
ôô* +
GetName
ôô+ 2
(
ôô2 3
typeof
ôô3 9
(
ôô9 :"
LobbyExceptionReason
ôô: N
)
ôôN O
,
ôôO P
reason
ôôQ W
)
ôôW X
}
ôôX Y
$str
ôôY \
{
ôô\ ]
(
ôô] ^
int
ôô^ a
)
ôôa b
reason
ôôb h
}
ôôh i
$str
ôôi u
{
ôôu v
	exception
ôôv 
.ôô Ä
MessageôôÄ á
}ôôá à
"ôôà â
)ôôâ ä
;ôôä ã
throw
öö 
new
öö #
LobbyServiceException
öö 3
(
öö3 4
reason
öö4 :
,
öö: ;
	exception
öö< E
.
ööE F
Message
ööF M
,
ööM N
	exception
ööO X
)
ööX Y
;
ööY Z
}
õõ 
}
úú 
}
ùù 	
private
ßß 
async
ßß 
Task
ßß 
<
ßß 
Models
ßß !
.
ßß! "
Lobby
ßß" '
>
ßß' (#
LobbyConflictResolver
ßß) >
(
ßß> ?
Player
ßß? E
player
ßßF L
,
ßßL M
string
ßßN T
lobbyId
ßßU \
=
ßß] ^
default
ßß_ f
,
ßßf g#
LobbyServiceException
ßßh }
e
ßß~ 
=ßßÄ Å
nullßßÇ Ü
)ßßÜ á
{
®® 	
List
©© 
<
©© 
string
©© 
>
©© 
joinedLobbies
©© &
;
©©& '
if
™™ 
(
™™ 
!
™™ 
string
™™ 
.
™™  
IsNullOrWhiteSpace
™™ *
(
™™* +
lobbyId
™™+ 2
)
™™2 3
)
™™3 4
{
´´ 
joinedLobbies
¨¨ 
=
¨¨ 
await
¨¨  %#
GetJoinedLobbiesAsync
¨¨& ;
(
¨¨; <
)
¨¨< =
;
¨¨= >
if
≠≠ 
(
≠≠ 
joinedLobbies
≠≠ !
.
≠≠! "
Count
≠≠" '
!=
≠≠( *
$num
≠≠+ ,
)
≠≠, -
{
ÆÆ 
return
ØØ 
null
ØØ 
;
ØØ  
}
∞∞ 
lobbyId
≤≤ 
=
≤≤ 
joinedLobbies
≤≤ '
[
≤≤' (
$num
≤≤( )
]
≤≤) *
;
≤≤* +
}
≥≥ 
Models
∂∂ 
.
∂∂ 
Lobby
∂∂ 
getLobbyResult
∂∂ '
=
∂∂( )
await
∂∂* /
GetLobbyAsync
∂∂0 =
(
∂∂= >
lobbyId
∂∂> E
)
∂∂E F
;
∂∂F G
if
∫∫ 
(
∫∫ 
getLobbyResult
∫∫ 
==
∫∫ !
null
∫∫" &
||
∫∫' )
player
∫∫* 0
?
∫∫0 1
.
∫∫1 2
Id
∫∫2 4
==
∫∫5 7
null
∫∫8 <
)
∫∫< =
{
ªª 
return
ºº 
getLobbyResult
ºº %
;
ºº% &
}
ΩΩ 
var
øø 
lobbyPlayers
øø 
=
øø 
getLobbyResult
øø -
.
øø- .
Players
øø. 5
;
øø5 6
var
¿¿ !
playerObjectInLobby
¿¿ #
=
¿¿$ %
lobbyPlayers
¿¿& 2
.
¿¿2 3
FirstOrDefault
¿¿3 A
(
¿¿A B
x
¿¿B C
=>
¿¿D F
x
¿¿G H
.
¿¿H I
Id
¿¿I K
==
¿¿L N
player
¿¿O U
.
¿¿U V
Id
¿¿V X
)
¿¿X Y
;
¿¿Y Z
if
¡¡ 
(
¡¡ !
playerObjectInLobby
¡¡ #
==
¡¡$ &
null
¡¡' +
)
¡¡+ ,
{
¬¬ 
throw
√√ 
new
√√ #
LobbyServiceException
√√ /
(
√√/ 0"
LobbyExceptionReason
√√0 D
.
√√D E
PlayerNotFound
√√E S
,
√√S T
$str√√U ´
,√√´ ¨
e√√≠ Æ
)√√Æ Ø
;√√Ø ∞
}
ƒƒ 
if
«« 
(
«« 
IsPlayerDataEqual
«« !
(
««! "
player
««" (
,
««( )!
playerObjectInLobby
««* =
)
««= >
)
««> ?
{
»» 
return
…… 
getLobbyResult
…… %
;
……% &
}
   !
UpdatePlayerOptions
ÕÕ 
options
ÕÕ  '
=
ÕÕ( )
new
ÕÕ* -!
UpdatePlayerOptions
ÕÕ. A
{
ŒŒ 
ConnectionInfo
œœ 
=
œœ  
player
œœ! '
.
œœ' (
ConnectionInfo
œœ( 6
,
œœ6 7
Data
–– 
=
–– 
player
–– 
.
–– 
Data
–– "
,
––" #
AllocationId
—— 
=
—— 
player
—— %
.
——% &
AllocationId
——& 2
}
““ 
;
““ 
return
‘‘ 
await
‘‘ 
UpdatePlayerAsync
‘‘ *
(
‘‘* +
lobbyId
‘‘+ 2
,
‘‘2 3
player
‘‘4 :
.
‘‘: ;
Id
‘‘; =
,
‘‘= >
options
‘‘? F
)
‘‘F G
;
‘‘G H
}
’’ 	
private
ŸŸ 
bool
ŸŸ 
IsPlayerDataEqual
ŸŸ &
(
ŸŸ& '
Player
ŸŸ' -
a
ŸŸ. /
,
ŸŸ/ 0
Player
ŸŸ1 7
b
ŸŸ8 9
)
ŸŸ9 :
{
⁄⁄ 	
bool
€€ 
result
€€ 
=
€€ 
(
€€ 
a
€€ 
.
€€ 
Id
€€ 
==
€€  "
b
€€# $
.
€€$ %
Id
€€% '
)
€€' (
;
€€( )
result
‹‹ 
&=
‹‹ 
(
‹‹ 
a
‹‹ 
.
‹‹ 
ConnectionInfo
‹‹ '
==
‹‹( *
b
‹‹+ ,
.
‹‹, -
ConnectionInfo
‹‹- ;
)
‹‹; <
;
‹‹< =
result
›› 
&=
›› 
(
›› 
a
›› 
.
›› 
AllocationId
›› %
==
››& (
b
››) *
.
››* +
AllocationId
››+ 7
)
››7 8
;
››8 9
result
ﬁﬁ 
&=
ﬁﬁ 
(
ﬁﬁ 
a
ﬁﬁ 
.
ﬁﬁ 
Joined
ﬁﬁ 
==
ﬁﬁ  "
b
ﬁﬁ# $
.
ﬁﬁ$ %
Joined
ﬁﬁ% +
)
ﬁﬁ+ ,
;
ﬁﬁ, -
result
ﬂﬂ 
&=
ﬂﬂ 
(
ﬂﬂ 
a
ﬂﬂ 
.
ﬂﬂ 
LastUpdated
ﬂﬂ $
==
ﬂﬂ% '
b
ﬂﬂ( )
.
ﬂﬂ) *
LastUpdated
ﬂﬂ* 5
)
ﬂﬂ5 6
;
ﬂﬂ6 7
var
·· 
aKeys
·· 
=
·· 
a
·· 
.
·· 
Data
·· 
.
·· 
Keys
·· #
;
··# $
var
‚‚ 
bKeys
‚‚ 
=
‚‚ 
b
‚‚ 
.
‚‚ 
Data
‚‚ 
.
‚‚ 
Keys
‚‚ #
;
‚‚# $
bool
„„ 
areDictKeysEqual
„„ !
=
„„" #
aKeys
‰‰ 
.
‰‰ 
All
‰‰ 
(
‰‰ 
bKeys
‰‰ 
.
‰‰  
Contains
‰‰  (
)
‰‰( )
&&
‰‰* ,
aKeys
‰‰- 2
.
‰‰2 3
Count
‰‰3 8
==
‰‰9 ;
bKeys
‰‰< A
.
‰‰A B
Count
‰‰B G
;
‰‰G H
result
ÂÂ 
&=
ÂÂ 
areDictKeysEqual
ÂÂ &
;
ÂÂ& '
if
ËË 
(
ËË 
!
ËË 
result
ËË 
)
ËË 
{
ÈÈ 
return
ÍÍ 
false
ÍÍ 
;
ÍÍ 
}
ÎÎ 
foreach
ÌÌ 
(
ÌÌ 
string
ÌÌ 
key
ÌÌ 
in
ÌÌ  "
aKeys
ÌÌ# (
)
ÌÌ( )
{
ÓÓ 
var
ÔÔ 
aPlayerDataObject
ÔÔ %
=
ÔÔ& '
a
ÔÔ( )
.
ÔÔ) *
Data
ÔÔ* .
[
ÔÔ. /
key
ÔÔ/ 2
]
ÔÔ2 3
;
ÔÔ3 4
var
 
bPlayerDataObject
 %
=
& '
b
( )
.
) *
Data
* .
[
. /
key
/ 2
]
2 3
;
3 4
result
ÒÒ 
&=
ÒÒ 
(
ÒÒ 
aPlayerDataObject
ÒÒ ,
.
ÒÒ, -
Value
ÒÒ- 2
==
ÒÒ3 5
bPlayerDataObject
ÒÒ6 G
.
ÒÒG H
Value
ÒÒH M
)
ÒÒM N
;
ÒÒN O
result
ÚÚ 
&=
ÚÚ 
(
ÚÚ 
aPlayerDataObject
ÚÚ ,
.
ÚÚ, -

Visibility
ÚÚ- 7
==
ÚÚ8 :
bPlayerDataObject
ÚÚ; L
.
ÚÚL M

Visibility
ÚÚM W
)
ÚÚW X
;
ÚÚX Y
}
ÛÛ 
return
ıı 
result
ıı 
;
ıı 
}
ˆˆ 	
}
¯¯ 
}˘˘ p
nC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\ILobbyChanges.csÈ
iC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\ILobbyServiceInternal.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
.  !
Internal! )
{ 
internal		 
	interface		 !
ILobbyServiceInternal		 ,
{

 
Task 
< 

Dictionary 
< 
string 
, 
Models  &
.& '
	TokenData' 0
>0 1
>1 2
RequestTokensAsync3 E
(E F
stringF L
lobbyIdM T
,T U
paramsV \
TokenRequest] i
.i j
TokenTypeOptionsj z
[z {
]{ |
tokenOptions	} â
)
â ä
;
ä ã
} 
} ˆ
hC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\JoinLobbyByIdOptions.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public		 

class		  
JoinLobbyByIdOptions		 %
{

 
public 
Player 
Player 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} u
sC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\LobbyPlayerChanges.cs
}C:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\Internal\LobbyPatcherChanges.csë
\C:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\AssemblyInfo.cs
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str <
)< =
]= >
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str B
)B C
]C D
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str 8
)8 9
]9 :Í
[C:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\Http\IError.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
.  !
Http! %
{ 
internal 
	interface 
IError 
{ 
string 
Type 
{ 
get 
; 
} 
string 
Title 
{ 
get 
; 
} 
int 
? 
Status 
{ 
get 
; 
} 
int 
Code 
{ 
get 
; 
} 
string		 
Detail		 
{		 
get		 
;		 
}		 
}

 
} ‰%
sC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\Exceptions\LobbyExceptionReason.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public 

enum  
LobbyExceptionReason $
{ 
UnknownErrorCode 
= 
$num 
, 
ValidationError 
= 
$num 
,  
LobbyNotFound 
= 
$num 
, 
PlayerNotFound 
= 
$num 
, 
LobbyConflict"" 
="" 
$num"" 
,"" 
	LobbyFull(( 
=(( 
$num(( 
,(( 
NoOpenLobbies-- 
=-- 
$num-- 
,-- 
InvalidArgument55 
=55 
$num55 
,55  

BadRequest;; 
=;; 
$num;; 
,;; 
UnauthorizedAA 
=AA 
$numAA 
,AA 
PaymentRequiredGG 
=GG 
$numGG 
,GG  
	ForbiddenMM 
=MM 
$numMM 
,MM 
EntityNotFoundSS 
=SS 
$numSS 
,SS 
MethodNotAllowedYY 
=YY 
$numYY  
,YY  !
NotAcceptable__ 
=__ 
$num__ 
,__ '
ProxyAuthenticationRequiredee #
=ee$ %
$numee& +
,ee+ ,
RequestTimeOutkk 
=kk 
$numkk 
,kk 
Conflictqq 
=qq 
$numqq 
,qq 
Goneww 
=ww 
$numww 
,ww 
LengthRequired}} 
=}} 
$num}} 
,}}  
PreconditionFailed
ÉÉ 
=
ÉÉ 
$num
ÉÉ "
,
ÉÉ" ##
RequestEntityTooLarge
ââ 
=
ââ 
$num
ââ  %
,
ââ% &
RequestUriTooLong
èè 
=
èè 
$num
èè !
,
èè! ""
UnsupportedMediaType
ïï 
=
ïï 
$num
ïï $
,
ïï$ %!
RangeNotSatisfiable
õõ 
=
õõ 
$num
õõ #
,
õõ# $
ExpectationFailed
°° 
=
°° 
$num
°° !
,
°°! "
Teapot
ßß 
=
ßß 
$num
ßß 
,
ßß 
Misdirected
≠≠ 
=
≠≠ 
$num
≠≠ 
,
≠≠ &
UnprocessableTransaction
≥≥  
=
≥≥! "
$num
≥≥# (
,
≥≥( )
Locked
ππ 
=
ππ 
$num
ππ 
,
ππ 
FailedDependency
øø 
=
øø 
$num
øø  
,
øø  !
TooEarly
≈≈ 
=
≈≈ 
$num
≈≈ 
,
≈≈ 
UpgradeRequired
ÀÀ 
=
ÀÀ 
$num
ÀÀ 
,
ÀÀ  "
PreconditionRequired
—— 
=
—— 
$num
—— $
,
——$ %
RateLimited
◊◊ 
=
◊◊ 
$num
◊◊ 
,
◊◊ )
RequestHeaderFieldsTooLarge
›› #
=
››$ %
$num
››& +
,
››+ ,(
UnavailableForLegalReasons
„„ "
=
„„# $
$num
„„% *
,
„„* +!
InternalServerError
ÈÈ 
=
ÈÈ 
$num
ÈÈ #
,
ÈÈ# $
NotImplemented
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
,
ÔÔ 

BadGateway
ıı 
=
ıı 
$num
ıı 
,
ıı  
ServiceUnavailable
˚˚ 
=
˚˚ 
$num
˚˚ "
,
˚˚" #
GatewayTimeout
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
,
ÅÅ %
HttpVersionNotSupported
áá 
=
áá  !
$num
áá" '
,
áá' (#
VariantAlsoNegotiates
çç 
=
çç 
$num
çç  %
,
çç% &!
InsufficientStorage
ìì 
=
ìì 
$num
ìì #
,
ìì# $
LoopDetected
ôô 
=
ôô 
$num
ôô 
,
ôô 
NotExtended
üü 
=
üü 
$num
üü 
,
üü +
NetworkAuthenticationRequired
•• %
=
••& '
$num
••( -
,
••- .&
AlreadySubscribedToLobby
´´  
=
´´! "
$num
´´# (
,
´´( )*
AlreadyUnsubscribedFromLobby
±± $
=
±±% &
$num
±±' ,
,
±±, -.
 SubscriptionToLobbyLostWhileBusy
∑∑ (
=
∑∑) *
$num
∑∑+ 0
,
∑∑0 1.
 LobbyEventServiceConnectionError
ΩΩ (
=
ΩΩ) *
$num
ΩΩ+ 0
,
ΩΩ0 1
NetworkError
ƒƒ 
=
ƒƒ 
$num
ƒƒ 
,
ƒƒ 
Unknown
…… 
=
…… 
$num
…… 
}
   
}ÀÀ Õ
_C:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\Http\BasicError.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
.  !
Http! %
{ 
[ 
Preserve 
] 
internal 
class 

BasicError 
: 
IError %
{ 
[		 	
Preserve			 
]		 
public

 
string

 
Type

 
{

 
get

  
;

  !
}

" #
[ 	
Preserve	 
] 
public 
string 
Title 
{ 
get !
;! "
}# $
[ 	
Preserve	 
] 
public 
int 
? 
Status 
{ 
get  
;  !
}" #
[ 	
Preserve	 
] 
public 
int 
Code 
{ 
get 
; 
}  
[ 	
Preserve	 
] 
public 
string 
Detail 
{ 
get "
;" #
}$ %
[ 	
Preserve	 
] 
public 

BasicError 
( 
string  
type! %
,% &
string' -
title. 3
,3 4
int5 8
?8 9
status: @
,@ A
intB E
codeF J
,J K
stringL R
detailS Y
)Y Z
{ 	
Type 
= 
type 
; 
Title 
= 
title 
; 
Status 
= 
status 
; 
Code 
= 
code 
; 
Detail 
= 
detail 
; 
} 	
public 
override 
string 
ToString '
(' (
)( )
{ 	
return   
JsonConvert   
.   
SerializeObject   .
(  . /
this  / 3
)  3 4
;  4 5
}!! 	
}"" 
}## ﬁ
gC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\Scheduler\TaskScheduler.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
.  !
	Scheduler! *
{		 
public 
abstract 
class 
TaskScheduler $
:% &
MonoBehaviour' 4
{ 
public 
abstract	 
void "
ScheduleBackgroundTask -
(- .
Action. 4
task5 9
)9 :
;: ;
public   
abstract  	 
bool   
IsMainThread   #
(  # $
)  $ %
;  % &
public(( 
abstract((	 
void(( "
ScheduleMainThreadTask(( -
(((- .
Action((. 4
task((5 9
)((9 :
;((: ;
public// 
void//	 #
ScheduleOrExecuteOnMain// %
(//% &
Action//& ,
action//- 3
)//3 4
{00 
if11 
(11 
IsMainThread11 
(11 
)11 
)11 
{22 
action33 

?33
 
.33 
Invoke33 
(33 
)33 
;33 
}44 
else55 
{66 "
ScheduleMainThreadTask77 
(77 
action77 !
)77! "
;77" #
}88 
}99 
}:: 
};; x
vC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\Internal\LobbyChannel.csv
tC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\LobbyEventCallbacks.cs˙
jC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\JoinLobbyByCodeOptions.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public		 

class		 "
JoinLobbyByCodeOptions		 '
{

 
public 
Player 
Player 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} m
kC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\LobbyValue.csﬂ
tC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\Exceptions\LobbyServiceException.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public		 

class		 !
LobbyServiceException		 &
:		' ("
RequestFailedException		) ?
{

 
public  
LobbyExceptionReason #
Reason$ *
{+ ,
get- 0
;0 1
private2 9
set: =
;= >
}? @
public !
LobbyServiceException $
($ % 
LobbyExceptionReason% 9
reason: @
,@ A
stringB H
messageI P
,P Q
	ExceptionR [
innerException\ j
)j k
:l m
basen r
(r s
(s t
intt w
)w x
reasonx ~
,~ 
message
Ä á
,
á à
innerException
â ó
)
ó ò
{ 	
Reason 
= 
reason 
; 
} 	
public   !
LobbyServiceException   $
(  $ % 
LobbyExceptionReason  % 9
reason  : @
,  @ A
string  B H
message  I P
)  P Q
:  R S
base  T X
(  X Y
(  Y Z
int  Z ]
)  ] ^
reason  ^ d
,  d e
message  f m
)  m n
{!! 	
Reason"" 
="" 
reason"" 
;"" 
}## 	
public** !
LobbyServiceException** $
(**$ %
long**% )
	errorCode*** 3
,**3 4
string**5 ;
message**< C
)**C D
:**E F
base**G K
(**K L
(**L M
int**M P
)**P Q
	errorCode**Q Z
,**Z [
message**\ c
)**c d
{++ 	
if,, 
(,, 
Enum,, 
.,, 
	IsDefined,, 
(,, 
typeof,, %
(,,% & 
LobbyExceptionReason,,& :
),,: ;
,,,; <
	errorCode,,= F
),,F G
),,G H
{-- 
Reason.. 
=.. 
(..  
LobbyExceptionReason.. .
)... /
	errorCode../ 8
;..8 9
}// 
else00 
{11 
Reason22 
=22  
LobbyExceptionReason22 -
.22- .
Unknown22. 5
;225 6
}33 
}44 	
public:: !
LobbyServiceException:: $
(::$ %
	Exception::% .
innerException::/ =
)::= >
:::? @
base::A E
(::E F
(::F G
int::G J
)::J K 
LobbyExceptionReason::K _
.::_ `
Unknown::` g
,::g h
$str	::i ä
,
::ä ã
innerException
::å ö
)
::ö õ
{;; 	
}<< 	
}== 
}>> ◊"
dC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\LobbyServiceProvider.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
internal 
class  
LobbyServiceProvider '
:( )!
IInitializablePackage* ?
{ 
[ 	)
RuntimeInitializeOnLoadMethod	 &
(& '%
RuntimeInitializeLoadType' @
.@ A
BeforeSceneLoadA P
)P Q
]Q R
static 
void 
Register 
( 
) 
{ 	
var $
generatedPackageRegistry (
=) *
CoreRegistry 
. 
Instance !
.! "
RegisterPackage" 1
(1 2
new2 5 
LobbyServiceProvider6 J
(J K
)K L
)L M
. 
	DependsOn 
< 
IAccessToken '
>' (
(( )
)) *
. 
OptionallyDependsOn $
<$ %
IWire% *
>* +
(+ ,
), -
. 
OptionallyDependsOn $
<$ %
IEnvironmentId% 3
>3 4
(4 5
)5 6
. 
OptionallyDependsOn $
<$ %
IVivox% +
>+ ,
(, -
)- .
;. /
} 	
public 
Task 

Initialize 
( 
CoreRegistry +
registry, 4
)4 5
{ 	
var 

httpClient 
= 
new  

HttpClient! +
(+ ,
), -
;- .
var!! 
accessTokenLobby!!  
=!!! "
registry!!# +
.!!+ ,
GetServiceComponent!!, ?
<!!? @
IAccessToken!!@ L
>!!L M
(!!M N
)!!N O
;!!O P
var"" 
wire"" 
="" 
registry"" 
.""  
GetServiceComponent""  3
<""3 4
IWire""4 9
>""9 :
("": ;
)""; <
;""< =
if)) 
()) 
accessTokenLobby))  
!=))! #
null))$ (
)))( )
{** 
LobbyServiceSdk++ 
.++  
Instance++  (
=++) *
new+++ . 
InternalLobbyService++/ C
(++C D

httpClient++D N
,++N O
registry++P X
.++X Y
GetServiceComponent++Y l
<++l m
IAccessToken++m y
>++y z
(++z {
)++{ |
,++| }
wire	++~ Ç
)
++Ç É
;
++É Ñ
}77 
return99 
Task99 
.99 
CompletedTask99 %
;99% &
}:: 	
};; 
internal@@ 
class@@  
InternalLobbyService@@ '
:@@( )
ILobbyServiceSdk@@* :
{AA 
publicGG  
InternalLobbyServiceGG #
(GG# $

HttpClientGG$ .

httpClientGG/ 9
,GG9 :
IAccessTokenGG; G
accessTokenGGH S
=GGT U
nullGGV Z
,GGZ [
IWireGG\ a
subscriptionFactoryGGb u
=GGv w
nullGGx |
)GG| }
{HH 	
LobbyApiJJ 
=JJ 
newJJ 
LobbyApiClientJJ )
(JJ) *

httpClientJJ* 4
,JJ4 5
accessTokenJJ6 A
)JJA B
;JJB C
ConfigurationLL 
=LL 
newLL 
ConfigurationLL  -
(LL- .
$strLL. W
,LLW X
$numLLY [
,LL[ \
$numLL] ^
,LL^ _
nullLL` d
)LLd e
;LLe f
WireNN 
=NN 
subscriptionFactoryNN &
;NN& '
}OO 	
publicRR 
ILobbyApiClientRR 
LobbyApiRR '
{RR( )
getRR* -
;RR- .
setRR/ 2
;RR2 3
}RR4 5
publicUU 
ConfigurationUU 
ConfigurationUU *
{UU+ ,
getUU- 0
;UU0 1
setUU2 5
;UU5 6
}UU7 8
publicXX 
IWireXX 
WireXX 
{XX 
getXX 
;XX  
setXX! $
;XX$ %
}XX& '
}YY 
}ZZ ô
lC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\Scheduler\TaskSchedulerWebGL.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
.  !
	Scheduler! *
{		 
public 
sealed 
class 
TaskSchedulerWebGL '
:( )
TaskScheduler* 7
{ 
private 	
Queue
 
< 
Action 
> !
m_mainThreadTaskQueue -
=. /
new0 3
Queue4 9
<9 :
Action: @
>@ A
(A B
)B C
;C D
public 
override	 
void "
ScheduleBackgroundTask -
(- .
Action. 4
task5 9
)9 :
{ "
ScheduleMainThreadTask 
( 
task 
) 
;  
} 
public'' 
override''	 
bool'' 
IsMainThread'' #
(''# $
)''$ %
{(( 
return)) 	
false))
 
;)) 
}** 
public22 
override22	 
void22 "
ScheduleMainThreadTask22 -
(22- .
Action22. 4
task225 9
)229 :
{33 !
m_mainThreadTaskQueue44 
.44 
Enqueue44  
(44  !
task44! %
)44% &
;44& '
}55 
void;; 
Update;; 
(;; 
);; 
{<< 	
var== 
action== 
=== !
m_mainThreadTaskQueue== .
.==. /
Count==/ 4
>==5 6
$num==7 8
?==9 :!
m_mainThreadTaskQueue==; P
.==P Q
Dequeue==Q X
(==X Y
)==Y Z
:==[ \
null==] a
;==a b
action>> 	
?>>	 

.>>
 
Invoke>> 
(>> 
)>> 
;>> 
}?? 	
}@@ 
}AA ∂
kC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\Scheduler\GameObjectFactory.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
.  !
	Scheduler! *
{ 
public 

static 
class 
GameObjectFactory )
{ 
public 
static 

GameObject  #
CreateCoreSdkGameObject! 8
(8 9
)9 :
{ 	
var 
random 
= 
new 
System #
.# $
Random$ *
(* +
)+ ,
;, -
string 

objectName 
= 
$str  +
+, -
random. 4
.4 5
Next5 9
(9 :
$num: ;
,; <
Int32= B
.B C
MaxValueC K
)K L
;L M
var 

gameObject 
= 
new  

GameObject! +
(+ ,

objectName, 6
)6 7
;7 8

gameObject 
. 
AddComponent 
< !
TaskSchedulerThreaded 0
>0 1
(1 2
)2 3
;3 4
UnityEngine   
.   
Object   
.   
DontDestroyOnLoad   0
(  0 1

gameObject  1 ;
)  ; <
;  < =
return"" 

gameObject"" 
;"" 
}## 	
}$$ 
}%% ¸

fC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\UpdateLobbyOptions.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public		 

class		 
UpdateLobbyOptions		 #
{

 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
? 

MaxPlayers 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
? 
	IsPrivate 
{  
get! $
;$ %
set& )
;) *
}+ ,
public   
bool   
?   
IsLocked   
{   
get    #
;  # $
set  % (
;  ( )
}  * +
public&& 

Dictionary&& 
<&& 
string&&  
,&&  !

DataObject&&" ,
>&&, -
Data&&. 2
{&&3 4
get&&5 8
;&&8 9
set&&: =
;&&= >
}&&? @
public++ 
string++ 
HostId++ 
{++ 
get++ "
;++" #
set++$ '
;++' (
}++) *
},, 
}-- á
aC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\Http\CommonErrors.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
.  !
Http! %
{ 
static 

internal 
class 
CommonErrors &
{ 
private 
const 
string 
ErrorPrefix (
=) *
$str+ E
;E F
public 
static 
IError &
CreateUnspecifiedHttpError 7
(7 8
string8 >
details? F
)F G
{ 	
return		 
new		 

BasicError		 !
(		! "
$"

 
{

 
ErrorPrefix

 
}

 
$str

 -
"

- .
,

. /
$str (
,( )
null 
, 
$num 
, 
details 
) 
; 
} 	
public 
static 
IError  
RequestOnSuccessNull 1
=>2 4
new5 8

BasicError9 C
(C D
$" 
{ 
ErrorPrefix 
} 
$str -
"- .
,. /
$str 5
,5 6
null 
, 
$num 
, 
$str 
) 
; 
public 
static 
IError 
HttpNetworkError -
=>. 0
new1 4

BasicError5 ?
(? @
$" 
{ 
ErrorPrefix 
} 
$str 2
"2 3
,3 4
$str 
, 
null 
, 
$num 
, 
$str 
)   	
;  	 

}"" 
}## ó
gC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\UpdatePlayerOptions.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public		 

class		 
UpdatePlayerOptions		 $
{

 
public 
string 
ConnectionInfo $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

Dictionary 
< 
string  
,  !
PlayerDataObject" 2
>2 3
Data4 8
{9 :
get; >
;> ?
set@ C
;C D
}E F
public 
string 
AllocationId "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} t
rC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\ChangedLobbyValue.cs∆
`C:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyService.cs
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str <
)< =
]= >
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str 8
)8 9
]9 :
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{		 
public 

static 
class 
LobbyService $
{ 
private 
static 
ILobbyService $
service% ,
;, -
private 
static 
readonly 
Configuration  -
configuration. ;
;; <
static 
LobbyService 
( 
) 
{ 	
configuration 
= 
new 
Configuration  -
(- .
$str. W
,W X
$numY [
,[ \
$num] ^
,^ _
null` d
)d e
;e f
} 	
public 
static 
ILobbyService #
Instance$ ,
{ 	
get 
{ 
if   
(   
service   
==   
null   #
)  # $
{!! )
InitializeWrappedLobbyService"" 1
(""1 2
)""2 3
;""3 4
}## 
return$$ 
service$$ 
;$$ 
}%% 
}&& 	
private(( 
static(( 
void(( )
InitializeWrappedLobbyService(( 9
(((9 :
)((: ;
{)) 	
var** 
lobbyService** 
=** 
LobbyServiceSdk** .
.**. /
Instance**/ 7
;**7 8
if++ 
(++ 
lobbyService++ 
==++ 
null++  $
)++$ %
{,, 
throw-- 
new-- %
InvalidOperationException-- 3
(--3 4
$"--4 6
$str--6 D
{--D E
nameof--E K
(--K L
ILobbyServiceSdk--L \
)--\ ]
}--] ^
$str	--^ ∏
"
--∏ π
)
--π ∫
;
--∫ ª
}.. 
service// 
=// 
new// 
WrappedLobbyService// -
(//- .
lobbyService//. :
)//: ;
;//; <
}00 	
}11 
public66 

static66 
class66 
Lobbies66 
{77 
public<< 
static<< 
void<< 
SetBasePath<< &
(<<& '
string<<' -
basePath<<. 6
)<<6 7
{== 	
var>> (
lobbyServiceSdkConfiguration>> ,
=>>- .
(>>/ 0)
ILobbyServiceSDKConfiguration>>0 M
)>>M N
Instance>>N V
;>>V W(
lobbyServiceSdkConfiguration?? (
.??( )
SetBasePath??) 4
(??4 5
basePath??5 =
)??= >
;??> ?
}@@ 	
publicEE 
staticEE 
ILobbyServiceSDKEE &
InstanceEE' /
{FF 	
getGG 
{HH 
returnII 
(II 
ILobbyServiceSDKII (
)II( )
LobbyServiceII* 6
.II6 7
InstanceII7 ?
;II? @
}JJ 
}KK 	
}LL 
}MM x
vC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\Internal\LobbyPatcher.cs°
aC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\ILobbyService.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public 

	interface 
ILobbyService "
{ 
Task 
< 
Models 
. 
Lobby 
> 
CreateLobbyAsync +
(+ ,
string, 2
	lobbyName3 <
,< =
int> A

maxPlayersB L
,L M
CreateLobbyOptionsN `
optionsa h
=i j
defaultk r
)r s
;s t
Task00 
DeleteLobbyAsync00 
(00 
string00 $
lobbyId00% ,
)00, -
;00- .
Task88 
<88 
List88 
<88 
string88 
>88 
>88 !
GetJoinedLobbiesAsync88 0
(880 1
)881 2
;882 3
TaskBB 
<BB 
ModelsBB 
.BB 
LobbyBB 
>BB 
GetLobbyAsyncBB (
(BB( )
stringBB) /
lobbyIdBB0 7
)BB7 8
;BB8 9
TaskLL "
SendHeartbeatPingAsyncLL #
(LL# $
stringLL$ *
lobbyIdLL+ 2
)LL2 3
;LL3 4
TaskWW 
<WW 
ModelsWW 
.WW 
LobbyWW 
>WW  
JoinLobbyByCodeAsyncWW /
(WW/ 0
stringWW0 6
	lobbyCodeWW7 @
,WW@ A"
JoinLobbyByCodeOptionsWWB X
optionsWWY `
=WWa b
defaultWWc j
)WWj k
;WWk l
Taskbb 
<bb 
Modelsbb 
.bb 
Lobbybb 
>bb 
JoinLobbyByIdAsyncbb -
(bb- .
stringbb. 4
lobbyIdbb5 <
,bb< = 
JoinLobbyByIdOptionsbb> R
optionsbbS Z
=bb[ \
defaultbb] d
)bbd e
;bbe f
Taskkk 
<kk 
QueryResponsekk 
>kk 
QueryLobbiesAsynckk -
(kk- .
QueryLobbiesOptionskk. A
optionskkB I
=kkJ K
defaultkkL S
)kkS T
;kkT U
Tasktt 
<tt 
Modelstt 
.tt 
Lobbytt 
>tt 
QuickJoinLobbyAsynctt .
(tt. /!
QuickJoinLobbyOptionstt/ D
optionsttE L
=ttM N
defaultttO V
)ttV W
;ttW X
Task 
RemovePlayerAsync 
( 
string %
lobbyId& -
,- .
string/ 5
playerId6 >
)> ?
;? @
Task
ää 
<
ää 
Models
ää 
.
ää 
Lobby
ää 
>
ää 
UpdateLobbyAsync
ää +
(
ää+ ,
string
ää, 2
lobbyId
ää3 :
,
ää: ; 
UpdateLobbyOptions
ää< N
options
ääO V
)
ääV W
;
ääW X
Task
ññ 
<
ññ 
Models
ññ 
.
ññ 
Lobby
ññ 
>
ññ 
UpdatePlayerAsync
ññ ,
(
ññ, -
string
ññ- 3
lobbyId
ññ4 ;
,
ññ; <
string
ññ= C
playerId
ññD L
,
ññL M!
UpdatePlayerOptions
ññN a
options
ññb i
)
ññi j
;
ññj k
Task
ùù 
<
ùù 
Models
ùù 
.
ùù 
Lobby
ùù 
>
ùù #
ReconnectToLobbyAsync
ùù 0
(
ùù0 1
string
ùù1 7
lobbyId
ùù8 ?
)
ùù? @
;
ùù@ A
}
ûû 
public
££ 

	interface
££ 
ILobbyServiceSDK
££ %
:
££& '
ILobbyService
££( 5
{
§§ 
}
¶¶ 
}ßß å
oC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\Scheduler\TaskSchedulerThreaded.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
.  !
	Scheduler! *
{		 
public 
sealed 
class !
TaskSchedulerThreaded *
:+ ,
TaskScheduler- :
{ 
private 
Queue 
< 
Action 
> !
m_mainThreadTaskQueue 3
=4 5
new6 9
Queue: ?
<? @
Action@ F
>F G
(G H
)H I
;I J
private 
object 
m_lock 
= 
new  #
object$ *
(* +
)+ ,
;, -
private 
Thread 
m_mainThread #
=$ %
null& *
;* +
void 
Start 
( 
) 
{ 	
m_mainThread 
= 
System !
.! "
	Threading" +
.+ ,
Thread, 2
.2 3
CurrentThread3 @
;@ A
}   	
public'' 
override'' 
bool'' 
IsMainThread'' )
('') *
)''* +
{(( 	
return)) 	
())
 
m_mainThread)) 
==)) 
System)) !
.))! "
	Threading))" +
.))+ ,
Thread)), 2
.))2 3
CurrentThread))3 @
)))@ A
;))A B
}** 	
public11 
override11	 
void11 "
ScheduleBackgroundTask11 -
(11- .
Action11. 4
task115 9
)119 :
{22 	

ThreadPool33 
.33 
QueueUserWorkItem33 (
(33( )
(33) *
object33* 0
state331 6
)336 7
=>338 :
{44 
task55 
(55 
)55 
;55 
}66 
)66 
;66 
}77 	
public?? 
override??	 
void?? "
ScheduleMainThreadTask?? -
(??- .
Action??. 4
task??5 9
)??9 :
{@@ 	
lockAA 
(AA 
m_lockAA 
)AA 
{BB !
m_mainThreadTaskQueueCC %
.CC% &
EnqueueCC& -
(CC- .
taskCC. 2
)CC2 3
;CC3 4
}DD 
}EE 	
voidKK 
UpdateKK 
(KK 
)KK 
{LL 	
QueueMM 
<MM 	
ActionMM	 
>MM 
	taskQueueMM 
=MM 
nullMM !
;MM! "
lockNN 
(NN 
m_lockNN 
)NN 
{OO 
	taskQueuePP 
=PP 
newPP 
QueuePP 
<PP 
ActionPP  
>PP  !
(PP! "!
m_mainThreadTaskQueuePP" 7
)PP7 8
;PP8 9!
m_mainThreadTaskQueueQQ 
.QQ 
ClearQQ 
(QQ  
)QQ  !
;QQ! "
}RR 
foreachTT 
(TT 
ActionTT 
actionTT "
inTT# %
	taskQueueTT& /
)TT/ 0
{UU 
actionVV 
(VV 
)VV 
;VV 
}WW 
}XX 	
}YY 
}ZZ ˜
gC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\QueryLobbiesOptions.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public		 

class		 
QueryLobbiesOptions		 $
{

 
public 
int 
Count 
{ 
get 
; 
set  #
;# $
}% &
=' (
$num) +
;+ ,
public 
int 
Skip 
{ 
get 
; 
set "
;" #
}$ %
=& '
$num( )
;) *
public 
bool 
SampleResults !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
false2 7
;7 8
public 
List 
< 
QueryFilter 
>  
Filters! (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public"" 
List"" 
<"" 

QueryOrder"" 
>"" 
Order""  %
{""& '
get""( +
;""+ ,
set""- 0
;""0 1
}""2 3
public'' 
string'' 
ContinuationToken'' '
{''( )
get''* -
;''- .
set''/ 2
;''2 3
}''4 5
}(( 
})) x
vC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyVivox\LobbyVivoxTokenProvider.csë
fC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\CreateLobbyOptions.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public		 

class		 
CreateLobbyOptions		 #
{

 
public 
bool 
? 
	IsPrivate 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Player 
Player 
{ 
get "
;" #
set$ '
;' (
}) *
public 

Dictionary 
< 
string  
,  !

DataObject" ,
>, -
Data. 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
} 
} |
zC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\LobbyEventConnectionState.csÙ
qC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\ILobbyServiceSDKConfiguration.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public

 

	interface

 )
ILobbyServiceSDKConfiguration

 2
{ 
void 
SetBasePath 
( 
string 
basePath  (
)( )
;) *
} 
} «
iC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\QuickJoinLobbyOptions.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
public

 

class

 !
QuickJoinLobbyOptions

 &
{ 
public 
Player 
Player 
{ 
get "
;" #
set$ '
;' (
}) *
public 
List 
< 
QueryFilter 
>  
Filter! '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} t
rC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\LobbyPlayerJoined.csÉ
ÄC:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\SDK\LobbyUpdates\Internal\LobbyWireTokenProvider.csò
\C:\code\ispclone\Library\PackageCache\com.unity.services.lobby@1.0.1\Runtime\Utils\Logger.cs
	namespace 	
Unity
 
. 
Services 
. 
Lobbies  
{ 
internal 
class 
Logger 
{		 
const 
string 
k_Tag 
= 
$str &
;& '
const 
string "
k_VerboseLoggingDefine +
=, -
$str. R
;R S
public 
static 
void 
Log 
( 
object %
message& -
)- .
=>/ 1
Debug2 7
.7 8
unityLogger8 C
.C D
LogD G
(G H
k_TagH M
,M N
messageO V
)V W
;W X
public 
static 
void 

LogWarning %
(% &
object& ,
message- 4
)4 5
=>6 8
Debug9 >
.> ?
unityLogger? J
.J K

LogWarningK U
(U V
k_TagV [
,[ \
message] d
)d e
;e f
public 
static 
void 
LogError #
(# $
object$ *
message+ 2
)2 3
=>4 6
Debug7 <
.< =
unityLogger= H
.H I
LogErrorI Q
(Q R
k_TagR W
,W X
messageY `
)` a
;a b
public 
static 
void 
LogException '
(' (
	Exception( 1
	exception2 ;
); <
=>= ?
Debug@ E
.E F
unityLoggerF Q
.Q R
LogR U
(U V
LogTypeV ]
.] ^
	Exception^ g
,g h
k_Tagi n
,n o
	exceptionp y
)y z
;z {
[ 	
Conditional	 
( 
$str '
)' (
]( )
public 
static 
void 
LogAssertion '
(' (
object( .
message/ 6
)6 7
=>8 :
Debug; @
.@ A
unityLoggerA L
.L M
LogM P
(P Q
LogTypeQ X
.X Y
AssertY _
,_ `
k_Taga f
,f g
messageh o
)o p
;p q
[ 	
Conditional	 
( "
k_VerboseLoggingDefine +
)+ ,
], -
public 
static 
void 

LogVerbose %
(% &
object& ,
message- 4
)4 5
=>6 8
Debug9 >
.> ?
unityLogger? J
.J K
LogK N
(N O
k_TagO T
,T U
messageV ]
)] ^
;^ _
} 
} 