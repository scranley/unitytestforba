Î†
lC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_TextProcessingStack.cs
	namespace 	
TMPro
 
{ 
public

 

struct

 
TMP_FontStyleStack

 $
{ 
public 
byte 
bold 
; 
public 
byte 
italic 
; 
public 
byte 
	underline 
; 
public 
byte 
strikethrough !
;! "
public 
byte 
	highlight 
; 
public 
byte 
superscript 
;  
public 
byte 
	subscript 
; 
public 
byte 
	uppercase 
; 
public 
byte 
	lowercase 
; 
public 
byte 
	smallcaps 
; 
public 
void 
Clear 
( 
) 
{ 	
bold 
= 
$num 
; 
italic 
= 
$num 
; 
	underline 
= 
$num 
; 
strikethrough 
= 
$num 
; 
	highlight   
=   
$num   
;   
superscript!! 
=!! 
$num!! 
;!! 
	subscript"" 
="" 
$num"" 
;"" 
	uppercase## 
=## 
$num## 
;## 
	lowercase$$ 
=$$ 
$num$$ 
;$$ 
	smallcaps%% 
=%% 
$num%% 
;%% 
}&& 	
public(( 
byte(( 
Add(( 
((( 

FontStyles(( "
style((# (
)((( )
{)) 	
switch** 
(** 
style** 
)** 
{++ 
case,, 

FontStyles,, 
.,,  
Bold,,  $
:,,$ %
bold-- 
++-- 
;-- 
return.. 
bold.. 
;..  
case// 

FontStyles// 
.//  
Italic//  &
://& '
italic00 
++00 
;00 
return11 
italic11 !
;11! "
case22 

FontStyles22 
.22  
	Underline22  )
:22) *
	underline33 
++33 
;33  
return44 
	underline44 $
;44$ %
case55 

FontStyles55 
.55  
	UpperCase55  )
:55) *
	uppercase66 
++66 
;66  
return77 
	uppercase77 $
;77$ %
case88 

FontStyles88 
.88  
	LowerCase88  )
:88) *
	lowercase99 
++99 
;99  
return:: 
	lowercase:: $
;::$ %
case;; 

FontStyles;; 
.;;  
Strikethrough;;  -
:;;- .
strikethrough<< !
++<<! #
;<<# $
return== 
strikethrough== (
;==( )
case>> 

FontStyles>> 
.>>  
Superscript>>  +
:>>+ ,
superscript?? 
++?? !
;??! "
return@@ 
superscript@@ &
;@@& '
caseAA 

FontStylesAA 
.AA  
	SubscriptAA  )
:AA) *
	subscriptBB 
++BB 
;BB  
returnCC 
	subscriptCC $
;CC$ %
caseDD 

FontStylesDD 
.DD  
	HighlightDD  )
:DD) *
	highlightEE 
++EE 
;EE  
returnFF 
	highlightFF $
;FF$ %
}GG 
returnII 
$numII 
;II 
}JJ 	
publicLL 
byteLL 
RemoveLL 
(LL 

FontStylesLL %
styleLL& +
)LL+ ,
{MM 	
switchNN 
(NN 
styleNN 
)NN 
{OO 
casePP 

FontStylesPP 
.PP  
BoldPP  $
:PP$ %
ifQQ 
(QQ 
boldQQ 
>QQ 
$numQQ  
)QQ  !
boldRR 
--RR 
;RR 
elseSS 
boldTT 
=TT 
$numTT  
;TT  !
returnUU 
boldUU 
;UU  
caseVV 

FontStylesVV 
.VV  
ItalicVV  &
:VV& '
ifWW 
(WW 
italicWW 
>WW  
$numWW! "
)WW" #
italicXX 
--XX  
;XX  !
elseYY 
italicZZ 
=ZZ  
$numZZ! "
;ZZ" #
return[[ 
italic[[ !
;[[! "
case\\ 

FontStyles\\ 
.\\  
	Underline\\  )
:\\) *
if]] 
(]] 
	underline]] !
>]]" #
$num]]$ %
)]]% &
	underline^^ !
--^^! #
;^^# $
else__ 
	underline`` !
=``" #
$num``$ %
;``% &
returnaa 
	underlineaa $
;aa$ %
casebb 

FontStylesbb 
.bb  
	UpperCasebb  )
:bb) *
ifcc 
(cc 
	uppercasecc !
>cc" #
$numcc$ %
)cc% &
	uppercasedd !
--dd! #
;dd# $
elseee 
	uppercaseff !
=ff" #
$numff$ %
;ff% &
returngg 
	uppercasegg $
;gg$ %
casehh 

FontStyleshh 
.hh  
	LowerCasehh  )
:hh) *
ifii 
(ii 
	lowercaseii !
>ii" #
$numii$ %
)ii% &
	lowercasejj !
--jj! #
;jj# $
elsekk 
	lowercasell !
=ll" #
$numll$ %
;ll% &
returnmm 
	lowercasemm $
;mm$ %
casenn 

FontStylesnn 
.nn  
Strikethroughnn  -
:nn- .
ifoo 
(oo 
strikethroughoo %
>oo& '
$numoo( )
)oo) *
strikethroughpp %
--pp% '
;pp' (
elseqq 
strikethroughrr %
=rr& '
$numrr( )
;rr) *
returnss 
strikethroughss (
;ss( )
casett 

FontStylestt 
.tt  
	Highlighttt  )
:tt) *
ifuu 
(uu 
	highlightuu !
>uu" #
$numuu$ %
)uu% &
	highlightvv !
--vv! #
;vv# $
elseww 
	highlightxx !
=xx" #
$numxx$ %
;xx% &
returnyy 
	highlightyy $
;yy$ %
casezz 

FontStyleszz 
.zz  
Superscriptzz  +
:zz+ ,
if{{ 
({{ 
superscript{{ #
>{{$ %
$num{{& '
){{' (
superscript|| #
--||# %
;||% &
else}} 
superscript~~ #
=~~$ %
$num~~& '
;~~' (
return 
superscript &
;& '
case
ÄÄ 

FontStyles
ÄÄ 
.
ÄÄ  
	Subscript
ÄÄ  )
:
ÄÄ) *
if
ÅÅ 
(
ÅÅ 
	subscript
ÅÅ !
>
ÅÅ" #
$num
ÅÅ$ %
)
ÅÅ% &
	subscript
ÇÇ !
--
ÇÇ! #
;
ÇÇ# $
else
ÉÉ 
	subscript
ÑÑ !
=
ÑÑ" #
$num
ÑÑ$ %
;
ÑÑ% &
return
ÖÖ 
	subscript
ÖÖ $
;
ÖÖ$ %
}
ÜÜ 
return
àà 
$num
àà 
;
àà 
}
ââ 	
}
ää 
[
ëë 
DebuggerDisplay
ëë 
(
ëë 
$str
ëë -
)
ëë- .
]
ëë. /
public
íí 

struct
íí %
TMP_TextProcessingStack
íí )
<
íí) *
T
íí* +
>
íí+ ,
{
ìì 
public
îî 
T
îî 
[
îî 
]
îî 
	itemStack
îî 
;
îî 
public
ïï 
int
ïï 
index
ïï 
;
ïï 
T
óó 	
m_DefaultItem
óó
 
;
óó 
int
òò 

m_Capacity
òò 
;
òò 
int
ôô 
m_RolloverSize
ôô 
;
ôô 
int
öö 
m_Count
öö 
;
öö 
const
úú 
int
úú 
k_DefaultCapacity
úú #
=
úú$ %
$num
úú& '
;
úú' (
public
££ %
TMP_TextProcessingStack
££ &
(
££& '
T
££' (
[
££( )
]
££) *
stack
££+ 0
)
££0 1
{
§§ 	
	itemStack
•• 
=
•• 
stack
•• 
;
•• 

m_Capacity
¶¶ 
=
¶¶ 
stack
¶¶ 
.
¶¶ 
Length
¶¶ %
;
¶¶% &
index
ßß 
=
ßß 
$num
ßß 
;
ßß 
m_RolloverSize
®® 
=
®® 
$num
®® 
;
®® 
m_DefaultItem
™™ 
=
™™ 
default
™™ #
(
™™# $
T
™™$ %
)
™™% &
;
™™& '
m_Count
´´ 
=
´´ 
$num
´´ 
;
´´ 
}
¨¨ 	
public
≥≥ %
TMP_TextProcessingStack
≥≥ &
(
≥≥& '
int
≥≥' *
capacity
≥≥+ 3
)
≥≥3 4
{
¥¥ 	
	itemStack
µµ 
=
µµ 
new
µµ 
T
µµ 
[
µµ 
capacity
µµ &
]
µµ& '
;
µµ' (

m_Capacity
∂∂ 
=
∂∂ 
capacity
∂∂ !
;
∂∂! "
index
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
m_RolloverSize
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
m_DefaultItem
∫∫ 
=
∫∫ 
default
∫∫ #
(
∫∫# $
T
∫∫$ %
)
∫∫% &
;
∫∫& '
m_Count
ªª 
=
ªª 
$num
ªª 
;
ªª 
}
ºº 	
public
øø %
TMP_TextProcessingStack
øø &
(
øø& '
int
øø' *
capacity
øø+ 3
,
øø3 4
int
øø5 8
rolloverSize
øø9 E
)
øøE F
{
¿¿ 	
	itemStack
¡¡ 
=
¡¡ 
new
¡¡ 
T
¡¡ 
[
¡¡ 
capacity
¡¡ &
]
¡¡& '
;
¡¡' (

m_Capacity
¬¬ 
=
¬¬ 
capacity
¬¬ !
;
¬¬! "
index
√√ 
=
√√ 
$num
√√ 
;
√√ 
m_RolloverSize
ƒƒ 
=
ƒƒ 
rolloverSize
ƒƒ )
;
ƒƒ) *
m_DefaultItem
∆∆ 
=
∆∆ 
default
∆∆ #
(
∆∆# $
T
∆∆$ %
)
∆∆% &
;
∆∆& '
m_Count
«« 
=
«« 
$num
«« 
;
«« 
}
»» 	
public
ŒŒ 
int
ŒŒ 
Count
ŒŒ 
{
œœ 	
get
–– 
{
–– 
return
–– 
m_Count
––  
;
––  !
}
––" #
}
—— 	
public
◊◊ 
T
◊◊ 
current
◊◊ 
{
ÿÿ 	
get
ŸŸ 
{
⁄⁄ 
if
€€ 
(
€€ 
index
€€ 
>
€€ 
$num
€€ 
)
€€ 
return
‹‹ 
	itemStack
‹‹ $
[
‹‹$ %
index
‹‹% *
-
‹‹+ ,
$num
‹‹- .
]
‹‹. /
;
‹‹/ 0
return
ﬁﬁ 
	itemStack
ﬁﬁ  
[
ﬁﬁ  !
$num
ﬁﬁ! "
]
ﬁﬁ" #
;
ﬁﬁ# $
}
ﬂﬂ 
}
‡‡ 	
public
ÊÊ 
int
ÊÊ 
rolloverSize
ÊÊ 
{
ÁÁ 	
get
ËË 
{
ËË 
return
ËË 
m_RolloverSize
ËË '
;
ËË' (
}
ËË) *
set
ÈÈ 
{
ÍÍ 
m_RolloverSize
ÎÎ 
=
ÎÎ  
value
ÎÎ! &
;
ÎÎ& '
}
ÔÔ 
}
 	
internal
¯¯ 
static
¯¯ 
void
¯¯ 

SetDefault
¯¯ '
(
¯¯' (%
TMP_TextProcessingStack
¯¯( ?
<
¯¯? @
T
¯¯@ A
>
¯¯A B
[
¯¯B C
]
¯¯C D
stack
¯¯E J
,
¯¯J K
T
¯¯L M
item
¯¯N R
)
¯¯R S
{
˘˘ 	
for
˙˙ 
(
˙˙ 
int
˙˙ 
i
˙˙ 
=
˙˙ 
$num
˙˙ 
;
˙˙ 
i
˙˙ 
<
˙˙ 
stack
˙˙  %
.
˙˙% &
Length
˙˙& ,
;
˙˙, -
i
˙˙. /
++
˙˙/ 1
)
˙˙1 2
stack
˚˚ 
[
˚˚ 
i
˚˚ 
]
˚˚ 
.
˚˚ 

SetDefault
˚˚ #
(
˚˚# $
item
˚˚$ (
)
˚˚( )
;
˚˚) *
}
¸¸ 	
public
ÇÇ 
void
ÇÇ 
Clear
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
index
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
m_Count
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
public
çç 
void
çç 

SetDefault
çç 
(
çç 
T
çç  
item
çç! %
)
çç% &
{
éé 	
if
èè 
(
èè 
	itemStack
èè 
==
èè 
null
èè !
)
èè! "
{
êê 

m_Capacity
ëë 
=
ëë 
k_DefaultCapacity
ëë .
;
ëë. /
	itemStack
íí 
=
íí 
new
íí 
T
íí  !
[
íí! "

m_Capacity
íí" ,
]
íí, -
;
íí- .
m_DefaultItem
ìì 
=
ìì 
default
ìì  '
(
ìì' (
T
ìì( )
)
ìì) *
;
ìì* +
}
îî 
	itemStack
ññ 
[
ññ 
$num
ññ 
]
ññ 
=
ññ 
item
ññ 
;
ññ  
index
óó 
=
óó 
$num
óó 
;
óó 
}
òò 	
public
üü 
void
üü 
Add
üü 
(
üü 
T
üü 
item
üü 
)
üü 
{
†† 	
if
°° 
(
°° 
index
°° 
<
°° 
	itemStack
°° !
.
°°! "
Length
°°" (
)
°°( )
{
¢¢ 
	itemStack
££ 
[
££ 
index
££ 
]
££  
=
££! "
item
££# '
;
££' (
index
§§ 
+=
§§ 
$num
§§ 
;
§§ 
}
•• 
}
¶¶ 	
public
≠≠ 
T
≠≠ 
Remove
≠≠ 
(
≠≠ 
)
≠≠ 
{
ÆÆ 	
index
ØØ 
-=
ØØ 
$num
ØØ 
;
ØØ 
if
±± 
(
±± 
index
±± 
<=
±± 
$num
±± 
)
±± 
{
≤≤ 
index
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
return
¥¥ 
	itemStack
¥¥  
[
¥¥  !
$num
¥¥! "
]
¥¥" #
;
¥¥# $
}
∂∂ 
return
∏∏ 
	itemStack
∏∏ 
[
∏∏ 
index
∏∏ "
-
∏∏# $
$num
∏∏% &
]
∏∏& '
;
∏∏' (
}
ππ 	
public
ªª 
void
ªª 
Push
ªª 
(
ªª 
T
ªª 
item
ªª 
)
ªª  
{
ºº 	
if
ΩΩ 
(
ΩΩ 
index
ΩΩ 
==
ΩΩ 

m_Capacity
ΩΩ #
)
ΩΩ# $
{
ææ 

m_Capacity
øø 
*=
øø 
$num
øø 
;
øø  
if
¿¿ 
(
¿¿ 

m_Capacity
¿¿ 
==
¿¿ !
$num
¿¿" #
)
¿¿# $

m_Capacity
¡¡ 
=
¡¡  
k_DefaultCapacity
¡¡! 2
;
¡¡2 3
Array
√√ 
.
√√ 
Resize
√√ 
(
√√ 
ref
√√  
	itemStack
√√! *
,
√√* +

m_Capacity
√√, 6
)
√√6 7
;
√√7 8
}
ƒƒ 
	itemStack
∆∆ 
[
∆∆ 
index
∆∆ 
]
∆∆ 
=
∆∆ 
item
∆∆ #
;
∆∆# $
if
»» 
(
»» 
m_RolloverSize
»» 
==
»» !
$num
»»" #
)
»»# $
{
…… 
index
   
+=
   
$num
   
;
   
m_Count
ÀÀ 
+=
ÀÀ 
$num
ÀÀ 
;
ÀÀ 
}
ÃÃ 
else
ÕÕ 
{
ŒŒ 
index
œœ 
=
œœ 
(
œœ 
index
œœ 
+
œœ  
$num
œœ! "
)
œœ" #
%
œœ$ %
m_RolloverSize
œœ& 4
;
œœ4 5
m_Count
–– 
=
–– 
m_Count
–– !
<
––" #
m_RolloverSize
––$ 2
?
––3 4
m_Count
––5 <
+
––= >
$num
––? @
:
––A B
m_RolloverSize
––C Q
;
––Q R
}
—— 
}
”” 	
public
’’ 
T
’’ 
Pop
’’ 
(
’’ 
)
’’ 
{
÷÷ 	
if
◊◊ 
(
◊◊ 
index
◊◊ 
==
◊◊ 
$num
◊◊ 
&&
◊◊ 
m_RolloverSize
◊◊ ,
==
◊◊- /
$num
◊◊0 1
)
◊◊1 2
return
ÿÿ 
default
ÿÿ 
(
ÿÿ 
T
ÿÿ  
)
ÿÿ  !
;
ÿÿ! "
if
⁄⁄ 
(
⁄⁄ 
m_RolloverSize
⁄⁄ 
==
⁄⁄ !
$num
⁄⁄" #
)
⁄⁄# $
index
€€ 
-=
€€ 
$num
€€ 
;
€€ 
else
‹‹ 
{
›› 
index
ﬁﬁ 
=
ﬁﬁ 
(
ﬁﬁ 
index
ﬁﬁ 
-
ﬁﬁ  
$num
ﬁﬁ! "
)
ﬁﬁ" #
%
ﬁﬁ$ %
m_RolloverSize
ﬁﬁ& 4
;
ﬁﬁ4 5
index
ﬂﬂ 
=
ﬂﬂ 
index
ﬂﬂ 
<
ﬂﬂ 
$num
ﬂﬂ  !
?
ﬂﬂ" #
index
ﬂﬂ$ )
+
ﬂﬂ* +
m_RolloverSize
ﬂﬂ, :
:
ﬂﬂ; <
index
ﬂﬂ= B
;
ﬂﬂB C
}
‡‡ 
T
‚‚ 
item
‚‚ 
=
‚‚ 
	itemStack
‚‚ 
[
‚‚ 
index
‚‚ $
]
‚‚$ %
;
‚‚% &
	itemStack
„„ 
[
„„ 
index
„„ 
]
„„ 
=
„„ 
m_DefaultItem
„„ ,
;
„„, -
m_Count
ÂÂ 
=
ÂÂ 
m_Count
ÂÂ 
>
ÂÂ 
$num
ÂÂ  !
?
ÂÂ" #
m_Count
ÂÂ$ +
-
ÂÂ, -
$num
ÂÂ. /
:
ÂÂ0 1
$num
ÂÂ2 3
;
ÂÂ3 4
return
ÁÁ 
item
ÁÁ 
;
ÁÁ 
}
ËË 	
public
ÓÓ 
T
ÓÓ 
Peek
ÓÓ 
(
ÓÓ 
)
ÓÓ 
{
ÔÔ 	
if
 
(
 
index
 
==
 
$num
 
)
 
return
ÒÒ 
m_DefaultItem
ÒÒ $
;
ÒÒ$ %
return
ÛÛ 
	itemStack
ÛÛ 
[
ÛÛ 
index
ÛÛ "
-
ÛÛ# $
$num
ÛÛ% &
]
ÛÛ& '
;
ÛÛ' (
}
ÙÙ 	
public
˚˚ 
T
˚˚ 
CurrentItem
˚˚ 
(
˚˚ 
)
˚˚ 
{
¸¸ 	
if
˝˝ 
(
˝˝ 
index
˝˝ 
>
˝˝ 
$num
˝˝ 
)
˝˝ 
return
˛˛ 
	itemStack
˛˛  
[
˛˛  !
index
˛˛! &
-
˛˛' (
$num
˛˛) *
]
˛˛* +
;
˛˛+ ,
return
ÄÄ 
	itemStack
ÄÄ 
[
ÄÄ 
$num
ÄÄ 
]
ÄÄ 
;
ÄÄ  
}
ÅÅ 	
public
àà 
T
àà 
PreviousItem
àà 
(
àà 
)
àà 
{
ââ 	
if
ää 
(
ää 
index
ää 
>
ää 
$num
ää 
)
ää 
return
ãã 
	itemStack
ãã  
[
ãã  !
index
ãã! &
-
ãã' (
$num
ãã) *
]
ãã* +
;
ãã+ ,
return
çç 
	itemStack
çç 
[
çç 
$num
çç 
]
çç 
;
çç  
}
éé 	
}
èè 
}êê Í©
fC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_TextUtilities.cs
	namespace 	
TMPro
 
{ 
public 

enum 
CaretPosition 
{ 
None  $
,$ %
Left& *
,* +
Right, 1
}2 3
public 

struct 
	CaretInfo 
{ 
public 
int 
index 
; 
public 
CaretPosition 
position %
;% &
public 
	CaretInfo 
( 
int 
index "
," #
CaretPosition$ 1
position2 :
): ;
{ 	
this 
. 
index 
= 
index 
; 
this 
. 
position 
= 
position $
;$ %
} 	
} 
public 

static 
class 
TMP_TextUtilities )
{ 
private 
static 
Vector3 
[ 
]  
m_rectWorldCorners! 3
=4 5
new6 9
Vector3: A
[A B
$numB C
]C D
;D E
publicGG 
staticGG 
intGG &
GetCursorIndexFromPositionGG 4
(GG4 5
TMP_TextGG5 =
textComponentGG> K
,GGK L
Vector3GGM T
positionGGU ]
,GG] ^
CameraGG_ e
cameraGGf l
)GGl m
{HH 	
intII 
indexII 
=II 
TMP_TextUtilitiesII )
.II) * 
FindNearestCharacterII* >
(II> ?
textComponentII? L
,IIL M
positionIIN V
,IIV W
cameraIIX ^
,II^ _
falseII` e
)IIe f
;IIf g
RectTransformKK 
rectTransformKK '
=KK( )
textComponentKK* 7
.KK7 8
rectTransformKK8 E
;KKE F.
"ScreenPointToWorldPointInRectangleNN .
(NN. /
rectTransformNN/ <
,NN< =
positionNN> F
,NNF G
cameraNNH N
,NNN O
outNNP S
positionNNT \
)NN\ ]
;NN] ^
TMP_CharacterInfoPP 
cInfoPP #
=PP$ %
textComponentPP& 3
.PP3 4
textInfoPP4 <
.PP< =
characterInfoPP= J
[PPJ K
indexPPK P
]PPP Q
;PPQ R
Vector3SS 
blSS 
=SS 
rectTransformSS &
.SS& '
TransformPointSS' 5
(SS5 6
cInfoSS6 ;
.SS; <

bottomLeftSS< F
)SSF G
;SSG H
Vector3TT 
trTT 
=TT 
rectTransformTT &
.TT& '
TransformPointTT' 5
(TT5 6
cInfoTT6 ;
.TT; <
topRightTT< D
)TTD E
;TTE F
floatVV 
insertPositionVV  
=VV! "
(VV# $
positionVV$ ,
.VV, -
xVV- .
-VV/ 0
blVV1 3
.VV3 4
xVV4 5
)VV5 6
/VV7 8
(VV9 :
trVV: <
.VV< =
xVV= >
-VV? @
blVVA C
.VVC D
xVVD E
)VVE F
;VVF G
ifXX 
(XX 
insertPositionXX 
<XX  
$numXX! %
)XX% &
returnYY 
indexYY 
;YY 
elseZZ 
return[[ 
index[[ 
+[[ 
$num[[  
;[[  !
}]] 	
public
éé 
static
éé 
int
éé (
GetCursorIndexFromPosition
éé 4
(
éé4 5
TMP_Text
éé5 =
textComponent
éé> K
,
ééK L
Vector3
ééM T
position
ééU ]
,
éé] ^
Camera
éé_ e
camera
ééf l
,
éél m
out
één q
CaretPosition
éér 
cursorééÄ Ü
)ééÜ á
{
èè 	
int
êê 
line
êê 
=
êê 
TMP_TextUtilities
êê (
.
êê( )
FindNearestLine
êê) 8
(
êê8 9
textComponent
êê9 F
,
êêF G
position
êêH P
,
êêP Q
camera
êêR X
)
êêX Y
;
êêY Z
int
íí 
index
íí 
=
íí (
FindNearestCharacterOnLine
íí 2
(
íí2 3
textComponent
íí3 @
,
íí@ A
position
ííB J
,
ííJ K
line
ííL P
,
ííP Q
camera
ííR X
,
ííX Y
false
ííZ _
)
íí_ `
;
íí` a
if
ïï 
(
ïï 
textComponent
ïï 
.
ïï 
textInfo
ïï &
.
ïï& '
lineInfo
ïï' /
[
ïï/ 0
line
ïï0 4
]
ïï4 5
.
ïï5 6
characterCount
ïï6 D
==
ïïE G
$num
ïïH I
)
ïïI J
{
ññ 
cursor
óó 
=
óó 
CaretPosition
óó &
.
óó& '
Left
óó' +
;
óó+ ,
return
òò 
index
òò 
;
òò 
}
ôô 
RectTransform
õõ 
rectTransform
õõ '
=
õõ( )
textComponent
õõ* 7
.
õõ7 8
rectTransform
õõ8 E
;
õõE F0
"ScreenPointToWorldPointInRectangle
ûû .
(
ûû. /
rectTransform
ûû/ <
,
ûû< =
position
ûû> F
,
ûûF G
camera
ûûH N
,
ûûN O
out
ûûP S
position
ûûT \
)
ûû\ ]
;
ûû] ^
TMP_CharacterInfo
†† 
cInfo
†† #
=
††$ %
textComponent
††& 3
.
††3 4
textInfo
††4 <
.
††< =
characterInfo
††= J
[
††J K
index
††K P
]
††P Q
;
††Q R
Vector3
££ 
bl
££ 
=
££ 
rectTransform
££ &
.
££& '
TransformPoint
££' 5
(
££5 6
cInfo
££6 ;
.
££; <

bottomLeft
££< F
)
££F G
;
££G H
Vector3
§§ 
tr
§§ 
=
§§ 
rectTransform
§§ &
.
§§& '
TransformPoint
§§' 5
(
§§5 6
cInfo
§§6 ;
.
§§; <
topRight
§§< D
)
§§D E
;
§§E F
float
¶¶ 
insertPosition
¶¶  
=
¶¶! "
(
¶¶# $
position
¶¶$ ,
.
¶¶, -
x
¶¶- .
-
¶¶/ 0
bl
¶¶1 3
.
¶¶3 4
x
¶¶4 5
)
¶¶5 6
/
¶¶7 8
(
¶¶9 :
tr
¶¶: <
.
¶¶< =
x
¶¶= >
-
¶¶? @
bl
¶¶A C
.
¶¶C D
x
¶¶D E
)
¶¶E F
;
¶¶F G
if
®® 
(
®® 
insertPosition
®® 
<
®®  
$num
®®! %
)
®®% &
{
©© 
cursor
™™ 
=
™™ 
CaretPosition
™™ &
.
™™& '
Left
™™' +
;
™™+ ,
return
´´ 
index
´´ 
;
´´ 
}
¨¨ 
else
≠≠ 
{
ÆÆ 
cursor
ØØ 
=
ØØ 
CaretPosition
ØØ &
.
ØØ& '
Right
ØØ' ,
;
ØØ, -
return
∞∞ 
index
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 	
public
ºº 
static
ºº 
int
ºº 
FindNearestLine
ºº )
(
ºº) *
TMP_Text
ºº* 2
text
ºº3 7
,
ºº7 8
Vector3
ºº9 @
position
ººA I
,
ººI J
Camera
ººK Q
camera
ººR X
)
ººX Y
{
ΩΩ 	
RectTransform
ææ 
rectTransform
ææ '
=
ææ( )
text
ææ* .
.
ææ. /
rectTransform
ææ/ <
;
ææ< =
float
¿¿ 
distance
¿¿ 
=
¿¿ 
Mathf
¿¿ "
.
¿¿" #
Infinity
¿¿# +
;
¿¿+ ,
int
¡¡ 
closest
¡¡ 
=
¡¡ 
-
¡¡ 
$num
¡¡ 
;
¡¡ 0
"ScreenPointToWorldPointInRectangle
ƒƒ .
(
ƒƒ. /
rectTransform
ƒƒ/ <
,
ƒƒ< =
position
ƒƒ> F
,
ƒƒF G
camera
ƒƒH N
,
ƒƒN O
out
ƒƒP S
position
ƒƒT \
)
ƒƒ\ ]
;
ƒƒ] ^
for
∆∆ 
(
∆∆ 
int
∆∆ 
i
∆∆ 
=
∆∆ 
$num
∆∆ 
;
∆∆ 
i
∆∆ 
<
∆∆ 
text
∆∆  $
.
∆∆$ %
textInfo
∆∆% -
.
∆∆- .
	lineCount
∆∆. 7
;
∆∆7 8
i
∆∆9 :
++
∆∆: <
)
∆∆< =
{
«« 
TMP_LineInfo
»» 
lineInfo
»» %
=
»»& '
text
»»( ,
.
»», -
textInfo
»»- 5
.
»»5 6
lineInfo
»»6 >
[
»»> ?
i
»»? @
]
»»@ A
;
»»A B
float
   
ascender
   
=
    
rectTransform
  ! .
.
  . /
TransformPoint
  / =
(
  = >
new
  > A
Vector3
  B I
(
  I J
$num
  J K
,
  K L
lineInfo
  M U
.
  U V
ascender
  V ^
,
  ^ _
$num
  ` a
)
  a b
)
  b c
.
  c d
y
  d e
;
  e f
float
ÀÀ 
	descender
ÀÀ 
=
ÀÀ  !
rectTransform
ÀÀ" /
.
ÀÀ/ 0
TransformPoint
ÀÀ0 >
(
ÀÀ> ?
new
ÀÀ? B
Vector3
ÀÀC J
(
ÀÀJ K
$num
ÀÀK L
,
ÀÀL M
lineInfo
ÀÀN V
.
ÀÀV W
	descender
ÀÀW `
,
ÀÀ` a
$num
ÀÀb c
)
ÀÀc d
)
ÀÀd e
.
ÀÀe f
y
ÀÀf g
;
ÀÀg h
if
ÕÕ 
(
ÕÕ 
ascender
ÕÕ 
>
ÕÕ 
position
ÕÕ '
.
ÕÕ' (
y
ÕÕ( )
&&
ÕÕ* ,
	descender
ÕÕ- 6
<
ÕÕ7 8
position
ÕÕ9 A
.
ÕÕA B
y
ÕÕB C
)
ÕÕC D
{
ŒŒ 
return
–– 
i
–– 
;
–– 
}
—— 
float
”” 
d0
”” 
=
”” 
Mathf
””  
.
””  !
Abs
””! $
(
””$ %
ascender
””% -
-
””. /
position
””0 8
.
””8 9
y
””9 :
)
””: ;
;
””; <
float
‘‘ 
d1
‘‘ 
=
‘‘ 
Mathf
‘‘  
.
‘‘  !
Abs
‘‘! $
(
‘‘$ %
	descender
‘‘% .
-
‘‘/ 0
position
‘‘1 9
.
‘‘9 :
y
‘‘: ;
)
‘‘; <
;
‘‘< =
float
÷÷ 
d
÷÷ 
=
÷÷ 
Mathf
÷÷ 
.
÷÷  
Min
÷÷  #
(
÷÷# $
d0
÷÷$ &
,
÷÷& '
d1
÷÷( *
)
÷÷* +
;
÷÷+ ,
if
◊◊ 
(
◊◊ 
d
◊◊ 
<
◊◊ 
distance
◊◊  
)
◊◊  !
{
ÿÿ 
distance
ŸŸ 
=
ŸŸ 
d
ŸŸ  
;
ŸŸ  !
closest
⁄⁄ 
=
⁄⁄ 
i
⁄⁄ 
;
⁄⁄  
}
€€ 
}
‹‹ 
return
ﬂﬂ 
closest
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
public
ÎÎ 
static
ÎÎ 
int
ÎÎ (
FindNearestCharacterOnLine
ÎÎ 4
(
ÎÎ4 5
TMP_Text
ÎÎ5 =
text
ÎÎ> B
,
ÎÎB C
Vector3
ÎÎD K
position
ÎÎL T
,
ÎÎT U
int
ÎÎV Y
line
ÎÎZ ^
,
ÎÎ^ _
Camera
ÎÎ` f
camera
ÎÎg m
,
ÎÎm n
bool
ÎÎo s
visibleOnly
ÎÎt 
)ÎÎ Ä
{
ÏÏ 	
RectTransform
ÌÌ 
rectTransform
ÌÌ '
=
ÌÌ( )
text
ÌÌ* .
.
ÌÌ. /
rectTransform
ÌÌ/ <
;
ÌÌ< =0
"ScreenPointToWorldPointInRectangle
 .
(
. /
rectTransform
/ <
,
< =
position
> F
,
F G
camera
H N
,
N O
out
P S
position
T \
)
\ ]
;
] ^
int
ÚÚ 
firstCharacter
ÚÚ 
=
ÚÚ  
text
ÚÚ! %
.
ÚÚ% &
textInfo
ÚÚ& .
.
ÚÚ. /
lineInfo
ÚÚ/ 7
[
ÚÚ7 8
line
ÚÚ8 <
]
ÚÚ< =
.
ÚÚ= >!
firstCharacterIndex
ÚÚ> Q
;
ÚÚQ R
int
ÛÛ 
lastCharacter
ÛÛ 
=
ÛÛ 
text
ÛÛ  $
.
ÛÛ$ %
textInfo
ÛÛ% -
.
ÛÛ- .
lineInfo
ÛÛ. 6
[
ÛÛ6 7
line
ÛÛ7 ;
]
ÛÛ; <
.
ÛÛ< = 
lastCharacterIndex
ÛÛ= O
;
ÛÛO P
float
ıı 
distanceSqr
ıı 
=
ıı 
Mathf
ıı  %
.
ıı% &
Infinity
ıı& .
;
ıı. /
int
ˆˆ 
closest
ˆˆ 
=
ˆˆ 
lastCharacter
ˆˆ '
;
ˆˆ' (
for
¯¯ 
(
¯¯ 
int
¯¯ 
i
¯¯ 
=
¯¯ 
firstCharacter
¯¯ '
;
¯¯' (
i
¯¯) *
<
¯¯+ ,
lastCharacter
¯¯- :
;
¯¯: ;
i
¯¯< =
++
¯¯= ?
)
¯¯? @
{
˘˘ 
TMP_CharacterInfo
˚˚ !
cInfo
˚˚" '
=
˚˚( )
text
˚˚* .
.
˚˚. /
textInfo
˚˚/ 7
.
˚˚7 8
characterInfo
˚˚8 E
[
˚˚E F
i
˚˚F G
]
˚˚G H
;
˚˚H I
if
¸¸ 
(
¸¸ 
visibleOnly
¸¸ 
&&
¸¸  "
!
¸¸# $
cInfo
¸¸$ )
.
¸¸) *
	isVisible
¸¸* 3
)
¸¸3 4
continue
¸¸5 =
;
¸¸= >
Vector3
ˇˇ 
bl
ˇˇ 
=
ˇˇ 
rectTransform
ˇˇ *
.
ˇˇ* +
TransformPoint
ˇˇ+ 9
(
ˇˇ9 :
cInfo
ˇˇ: ?
.
ˇˇ? @

bottomLeft
ˇˇ@ J
)
ˇˇJ K
;
ˇˇK L
Vector3
ÄÄ 
tl
ÄÄ 
=
ÄÄ 
rectTransform
ÄÄ *
.
ÄÄ* +
TransformPoint
ÄÄ+ 9
(
ÄÄ9 :
new
ÄÄ: =
Vector3
ÄÄ> E
(
ÄÄE F
cInfo
ÄÄF K
.
ÄÄK L

bottomLeft
ÄÄL V
.
ÄÄV W
x
ÄÄW X
,
ÄÄX Y
cInfo
ÄÄZ _
.
ÄÄ_ `
topRight
ÄÄ` h
.
ÄÄh i
y
ÄÄi j
,
ÄÄj k
$num
ÄÄl m
)
ÄÄm n
)
ÄÄn o
;
ÄÄo p
Vector3
ÅÅ 
tr
ÅÅ 
=
ÅÅ 
rectTransform
ÅÅ *
.
ÅÅ* +
TransformPoint
ÅÅ+ 9
(
ÅÅ9 :
cInfo
ÅÅ: ?
.
ÅÅ? @
topRight
ÅÅ@ H
)
ÅÅH I
;
ÅÅI J
Vector3
ÇÇ 
br
ÇÇ 
=
ÇÇ 
rectTransform
ÇÇ *
.
ÇÇ* +
TransformPoint
ÇÇ+ 9
(
ÇÇ9 :
new
ÇÇ: =
Vector3
ÇÇ> E
(
ÇÇE F
cInfo
ÇÇF K
.
ÇÇK L
topRight
ÇÇL T
.
ÇÇT U
x
ÇÇU V
,
ÇÇV W
cInfo
ÇÇX ]
.
ÇÇ] ^

bottomLeft
ÇÇ^ h
.
ÇÇh i
y
ÇÇi j
,
ÇÇj k
$num
ÇÇl m
)
ÇÇm n
)
ÇÇn o
;
ÇÇo p
if
ÑÑ 
(
ÑÑ %
PointIntersectRectangle
ÑÑ +
(
ÑÑ+ ,
position
ÑÑ, 4
,
ÑÑ4 5
bl
ÑÑ6 8
,
ÑÑ8 9
tl
ÑÑ: <
,
ÑÑ< =
tr
ÑÑ> @
,
ÑÑ@ A
br
ÑÑB D
)
ÑÑD E
)
ÑÑE F
{
ÖÖ 
closest
ÜÜ 
=
ÜÜ 
i
ÜÜ 
;
ÜÜ  
break
áá 
;
áá 
}
àà 
float
ãã 
dbl
ãã 
=
ãã 
DistanceToLine
ãã *
(
ãã* +
bl
ãã+ -
,
ãã- .
tl
ãã/ 1
,
ãã1 2
position
ãã3 ;
)
ãã; <
;
ãã< =
float
åå 
dtl
åå 
=
åå 
DistanceToLine
åå *
(
åå* +
tl
åå+ -
,
åå- .
tr
åå/ 1
,
åå1 2
position
åå3 ;
)
åå; <
;
åå< =
float
çç 
dtr
çç 
=
çç 
DistanceToLine
çç *
(
çç* +
tr
çç+ -
,
çç- .
br
çç/ 1
,
çç1 2
position
çç3 ;
)
çç; <
;
çç< =
float
éé 
dbr
éé 
=
éé 
DistanceToLine
éé *
(
éé* +
br
éé+ -
,
éé- .
bl
éé/ 1
,
éé1 2
position
éé3 ;
)
éé; <
;
éé< =
float
êê 
d
êê 
=
êê 
dbl
êê 
<
êê 
dtl
êê  #
?
êê$ %
dbl
êê& )
:
êê* +
dtl
êê, /
;
êê/ 0
d
ëë 
=
ëë 
d
ëë 
<
ëë 
dtr
ëë 
?
ëë 
d
ëë 
:
ëë  !
dtr
ëë" %
;
ëë% &
d
íí 
=
íí 
d
íí 
<
íí 
dbr
íí 
?
íí 
d
íí 
:
íí  !
dbr
íí" %
;
íí% &
if
îî 
(
îî 
distanceSqr
îî 
>
îî  !
d
îî" #
)
îî# $
{
ïï 
distanceSqr
ññ 
=
ññ  !
d
ññ" #
;
ññ# $
closest
óó 
=
óó 
i
óó 
;
óó  
}
òò 
}
ôô 
return
öö 
closest
öö 
;
öö 
}
õõ 	
public
•• 
static
•• 
bool
•• )
IsIntersectingRectTransform
•• 6
(
••6 7
RectTransform
••7 D
rectTransform
••E R
,
••R S
Vector3
••T [
position
••\ d
,
••d e
Camera
••f l
camera
••m s
)
••s t
{
¶¶ 	0
"ScreenPointToWorldPointInRectangle
®® .
(
®®. /
rectTransform
®®/ <
,
®®< =
position
®®> F
,
®®F G
camera
®®H N
,
®®N O
out
®®P S
position
®®T \
)
®®\ ]
;
®®] ^
rectTransform
™™ 
.
™™ 
GetWorldCorners
™™ )
(
™™) * 
m_rectWorldCorners
™™* <
)
™™< =
;
™™= >
if
¨¨ 
(
¨¨ %
PointIntersectRectangle
¨¨ '
(
¨¨' (
position
¨¨( 0
,
¨¨0 1 
m_rectWorldCorners
¨¨2 D
[
¨¨D E
$num
¨¨E F
]
¨¨F G
,
¨¨G H 
m_rectWorldCorners
¨¨I [
[
¨¨[ \
$num
¨¨\ ]
]
¨¨] ^
,
¨¨^ _ 
m_rectWorldCorners
¨¨` r
[
¨¨r s
$num
¨¨s t
]
¨¨t u
,
¨¨u v!
m_rectWorldCorners¨¨w â
[¨¨â ä
$num¨¨ä ã
]¨¨ã å
)¨¨å ç
)¨¨ç é
{
≠≠ 
return
ÆÆ 
true
ÆÆ 
;
ÆÆ 
}
ØØ 
return
±± 
false
±± 
;
±± 
}
≤≤ 	
public
øø 
static
øø 
int
øø '
FindIntersectingCharacter
øø 3
(
øø3 4
TMP_Text
øø4 <
text
øø= A
,
øøA B
Vector3
øøC J
position
øøK S
,
øøS T
Camera
øøU [
camera
øø\ b
,
øøb c
bool
øød h
visibleOnly
øøi t
)
øøt u
{
¿¿ 	
RectTransform
¡¡ 
rectTransform
¡¡ '
=
¡¡( )
text
¡¡* .
.
¡¡. /
rectTransform
¡¡/ <
;
¡¡< =0
"ScreenPointToWorldPointInRectangle
ƒƒ .
(
ƒƒ. /
rectTransform
ƒƒ/ <
,
ƒƒ< =
position
ƒƒ> F
,
ƒƒF G
camera
ƒƒH N
,
ƒƒN O
out
ƒƒP S
position
ƒƒT \
)
ƒƒ\ ]
;
ƒƒ] ^
for
∆∆ 
(
∆∆ 
int
∆∆ 
i
∆∆ 
=
∆∆ 
$num
∆∆ 
;
∆∆ 
i
∆∆ 
<
∆∆ 
text
∆∆  $
.
∆∆$ %
textInfo
∆∆% -
.
∆∆- .
characterCount
∆∆. <
;
∆∆< =
i
∆∆> ?
++
∆∆? A
)
∆∆A B
{
«« 
TMP_CharacterInfo
…… !
cInfo
……" '
=
……( )
text
……* .
.
……. /
textInfo
……/ 7
.
……7 8
characterInfo
……8 E
[
……E F
i
……F G
]
……G H
;
……H I
if
   
(
   
visibleOnly
   
&&
    "
!
  # $
cInfo
  $ )
.
  ) *
	isVisible
  * 3
)
  3 4
continue
  5 =
;
  = >
Vector3
ÕÕ 
bl
ÕÕ 
=
ÕÕ 
rectTransform
ÕÕ *
.
ÕÕ* +
TransformPoint
ÕÕ+ 9
(
ÕÕ9 :
cInfo
ÕÕ: ?
.
ÕÕ? @

bottomLeft
ÕÕ@ J
)
ÕÕJ K
;
ÕÕK L
Vector3
ŒŒ 
tl
ŒŒ 
=
ŒŒ 
rectTransform
ŒŒ *
.
ŒŒ* +
TransformPoint
ŒŒ+ 9
(
ŒŒ9 :
new
ŒŒ: =
Vector3
ŒŒ> E
(
ŒŒE F
cInfo
ŒŒF K
.
ŒŒK L

bottomLeft
ŒŒL V
.
ŒŒV W
x
ŒŒW X
,
ŒŒX Y
cInfo
ŒŒZ _
.
ŒŒ_ `
topRight
ŒŒ` h
.
ŒŒh i
y
ŒŒi j
,
ŒŒj k
$num
ŒŒl m
)
ŒŒm n
)
ŒŒn o
;
ŒŒo p
Vector3
œœ 
tr
œœ 
=
œœ 
rectTransform
œœ *
.
œœ* +
TransformPoint
œœ+ 9
(
œœ9 :
cInfo
œœ: ?
.
œœ? @
topRight
œœ@ H
)
œœH I
;
œœI J
Vector3
–– 
br
–– 
=
–– 
rectTransform
–– *
.
––* +
TransformPoint
––+ 9
(
––9 :
new
––: =
Vector3
––> E
(
––E F
cInfo
––F K
.
––K L
topRight
––L T
.
––T U
x
––U V
,
––V W
cInfo
––X ]
.
––] ^

bottomLeft
––^ h
.
––h i
y
––i j
,
––j k
$num
––l m
)
––m n
)
––n o
;
––o p
if
““ 
(
““ %
PointIntersectRectangle
““ +
(
““+ ,
position
““, 4
,
““4 5
bl
““6 8
,
““8 9
tl
““: <
,
““< =
tr
““> @
,
““@ A
br
““B D
)
““D E
)
““E F
return
”” 
i
”” 
;
”” 
}
’’ 
return
÷÷ 
-
÷÷ 
$num
÷÷ 
;
÷÷ 
}
◊◊ 	
public
áá 
static
áá 
int
áá "
FindNearestCharacter
áá .
(
áá. /
TMP_Text
áá/ 7
text
áá8 <
,
áá< =
Vector3
áá> E
position
ááF N
,
ááN O
Camera
ááP V
camera
ááW ]
,
áá] ^
bool
áá_ c
visibleOnly
áád o
)
ááo p
{
àà 	
RectTransform
ââ 
rectTransform
ââ '
=
ââ( )
text
ââ* .
.
ââ. /
rectTransform
ââ/ <
;
ââ< =
float
ãã 
distanceSqr
ãã 
=
ãã 
Mathf
ãã  %
.
ãã% &
Infinity
ãã& .
;
ãã. /
int
åå 
closest
åå 
=
åå 
$num
åå 
;
åå 0
"ScreenPointToWorldPointInRectangle
èè .
(
èè. /
rectTransform
èè/ <
,
èè< =
position
èè> F
,
èèF G
camera
èèH N
,
èèN O
out
èèP S
position
èèT \
)
èè\ ]
;
èè] ^
for
ëë 
(
ëë 
int
ëë 
i
ëë 
=
ëë 
$num
ëë 
;
ëë 
i
ëë 
<
ëë 
text
ëë  $
.
ëë$ %
textInfo
ëë% -
.
ëë- .
characterCount
ëë. <
;
ëë< =
i
ëë> ?
++
ëë? A
)
ëëA B
{
íí 
TMP_CharacterInfo
îî !
cInfo
îî" '
=
îî( )
text
îî* .
.
îî. /
textInfo
îî/ 7
.
îî7 8
characterInfo
îî8 E
[
îîE F
i
îîF G
]
îîG H
;
îîH I
if
ïï 
(
ïï 
visibleOnly
ïï 
&&
ïï  "
!
ïï# $
cInfo
ïï$ )
.
ïï) *
	isVisible
ïï* 3
)
ïï3 4
continue
ïï5 =
;
ïï= >
Vector3
òò 
bl
òò 
=
òò 
rectTransform
òò *
.
òò* +
TransformPoint
òò+ 9
(
òò9 :
cInfo
òò: ?
.
òò? @

bottomLeft
òò@ J
)
òòJ K
;
òòK L
Vector3
ôô 
tl
ôô 
=
ôô 
rectTransform
ôô *
.
ôô* +
TransformPoint
ôô+ 9
(
ôô9 :
new
ôô: =
Vector3
ôô> E
(
ôôE F
cInfo
ôôF K
.
ôôK L

bottomLeft
ôôL V
.
ôôV W
x
ôôW X
,
ôôX Y
cInfo
ôôZ _
.
ôô_ `
topRight
ôô` h
.
ôôh i
y
ôôi j
,
ôôj k
$num
ôôl m
)
ôôm n
)
ôôn o
;
ôôo p
Vector3
öö 
tr
öö 
=
öö 
rectTransform
öö *
.
öö* +
TransformPoint
öö+ 9
(
öö9 :
cInfo
öö: ?
.
öö? @
topRight
öö@ H
)
ööH I
;
ööI J
Vector3
õõ 
br
õõ 
=
õõ 
rectTransform
õõ *
.
õõ* +
TransformPoint
õõ+ 9
(
õõ9 :
new
õõ: =
Vector3
õõ> E
(
õõE F
cInfo
õõF K
.
õõK L
topRight
õõL T
.
õõT U
x
õõU V
,
õõV W
cInfo
õõX ]
.
õõ] ^

bottomLeft
õõ^ h
.
õõh i
y
õõi j
,
õõj k
$num
õõl m
)
õõm n
)
õõn o
;
õõo p
if
ùù 
(
ùù %
PointIntersectRectangle
ùù +
(
ùù+ ,
position
ùù, 4
,
ùù4 5
bl
ùù6 8
,
ùù8 9
tl
ùù: <
,
ùù< =
tr
ùù> @
,
ùù@ A
br
ùùB D
)
ùùD E
)
ùùE F
return
ûû 
i
ûû 
;
ûû 
float
°° 
dbl
°° 
=
°° 
DistanceToLine
°° *
(
°°* +
bl
°°+ -
,
°°- .
tl
°°/ 1
,
°°1 2
position
°°3 ;
)
°°; <
;
°°< =
float
¢¢ 
dtl
¢¢ 
=
¢¢ 
DistanceToLine
¢¢ *
(
¢¢* +
tl
¢¢+ -
,
¢¢- .
tr
¢¢/ 1
,
¢¢1 2
position
¢¢3 ;
)
¢¢; <
;
¢¢< =
float
££ 
dtr
££ 
=
££ 
DistanceToLine
££ *
(
££* +
tr
££+ -
,
££- .
br
££/ 1
,
££1 2
position
££3 ;
)
££; <
;
££< =
float
§§ 
dbr
§§ 
=
§§ 
DistanceToLine
§§ *
(
§§* +
br
§§+ -
,
§§- .
bl
§§/ 1
,
§§1 2
position
§§3 ;
)
§§; <
;
§§< =
float
¶¶ 
d
¶¶ 
=
¶¶ 
dbl
¶¶ 
<
¶¶ 
dtl
¶¶  #
?
¶¶$ %
dbl
¶¶& )
:
¶¶* +
dtl
¶¶, /
;
¶¶/ 0
d
ßß 
=
ßß 
d
ßß 
<
ßß 
dtr
ßß 
?
ßß 
d
ßß 
:
ßß  !
dtr
ßß" %
;
ßß% &
d
®® 
=
®® 
d
®® 
<
®® 
dbr
®® 
?
®® 
d
®® 
:
®®  !
dbr
®®" %
;
®®% &
if
™™ 
(
™™ 
distanceSqr
™™ 
>
™™  !
d
™™" #
)
™™# $
{
´´ 
distanceSqr
¨¨ 
=
¨¨  !
d
¨¨" #
;
¨¨# $
closest
≠≠ 
=
≠≠ 
i
≠≠ 
;
≠≠  
}
ÆÆ 
}
ØØ 
return
±± 
closest
±± 
;
±± 
}
≤≤ 	
public
ØØ 
static
ØØ 
int
ØØ "
FindIntersectingWord
ØØ .
(
ØØ. /
TMP_Text
ØØ/ 7
text
ØØ8 <
,
ØØ< =
Vector3
ØØ> E
position
ØØF N
,
ØØN O
Camera
ØØP V
camera
ØØW ]
)
ØØ] ^
{
∞∞ 	
RectTransform
±± 
rectTransform
±± '
=
±±( )
text
±±* .
.
±±. /
rectTransform
±±/ <
;
±±< =0
"ScreenPointToWorldPointInRectangle
¥¥ .
(
¥¥. /
rectTransform
¥¥/ <
,
¥¥< =
position
¥¥> F
,
¥¥F G
camera
¥¥H N
,
¥¥N O
out
¥¥P S
position
¥¥T \
)
¥¥\ ]
;
¥¥] ^
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
i
∂∂ 
<
∂∂ 
text
∂∂  $
.
∂∂$ %
textInfo
∂∂% -
.
∂∂- .
	wordCount
∂∂. 7
;
∂∂7 8
i
∂∂9 :
++
∂∂: <
)
∂∂< =
{
∑∑ 
TMP_WordInfo
∏∏ 
wInfo
∏∏ "
=
∏∏# $
text
∏∏% )
.
∏∏) *
textInfo
∏∏* 2
.
∏∏2 3
wordInfo
∏∏3 ;
[
∏∏; <
i
∏∏< =
]
∏∏= >
;
∏∏> ?
bool
∫∫ 
isBeginRegion
∫∫ "
=
∫∫# $
false
∫∫% *
;
∫∫* +
Vector3
ºº 
bl
ºº 
=
ºº 
Vector3
ºº $
.
ºº$ %
zero
ºº% )
;
ºº) *
Vector3
ΩΩ 
tl
ΩΩ 
=
ΩΩ 
Vector3
ΩΩ $
.
ΩΩ$ %
zero
ΩΩ% )
;
ΩΩ) *
Vector3
ææ 
br
ææ 
=
ææ 
Vector3
ææ $
.
ææ$ %
zero
ææ% )
;
ææ) *
Vector3
øø 
tr
øø 
=
øø 
Vector3
øø $
.
øø$ %
zero
øø% )
;
øø) *
float
¡¡ 
maxAscender
¡¡ !
=
¡¡" #
-
¡¡$ %
Mathf
¡¡% *
.
¡¡* +
Infinity
¡¡+ 3
;
¡¡3 4
float
¬¬ 
minDescender
¬¬ "
=
¬¬# $
Mathf
¬¬% *
.
¬¬* +
Infinity
¬¬+ 3
;
¬¬3 4
for
≈≈ 
(
≈≈ 
int
≈≈ 
j
≈≈ 
=
≈≈ 
$num
≈≈ 
;
≈≈ 
j
≈≈  !
<
≈≈" #
wInfo
≈≈$ )
.
≈≈) *
characterCount
≈≈* 8
;
≈≈8 9
j
≈≈: ;
++
≈≈; =
)
≈≈= >
{
∆∆ 
int
«« 
characterIndex
«« &
=
««' (
wInfo
««) .
.
««. /!
firstCharacterIndex
««/ B
+
««C D
j
««E F
;
««F G
TMP_CharacterInfo
»» %
currentCharInfo
»»& 5
=
»»6 7
text
»»8 <
.
»»< =
textInfo
»»= E
.
»»E F
characterInfo
»»F S
[
»»S T
characterIndex
»»T b
]
»»b c
;
»»c d
int
…… 
currentLine
…… #
=
……$ %
currentCharInfo
……& 5
.
……5 6

lineNumber
……6 @
;
……@ A
bool
ÀÀ  
isCharacterVisible
ÀÀ +
=
ÀÀ, -
currentCharInfo
ÀÀ. =
.
ÀÀ= >
	isVisible
ÀÀ> G
;
ÀÀG H
maxAscender
ŒŒ 
=
ŒŒ  !
Mathf
ŒŒ" '
.
ŒŒ' (
Max
ŒŒ( +
(
ŒŒ+ ,
maxAscender
ŒŒ, 7
,
ŒŒ7 8
currentCharInfo
ŒŒ9 H
.
ŒŒH I
ascender
ŒŒI Q
)
ŒŒQ R
;
ŒŒR S
minDescender
œœ  
=
œœ! "
Mathf
œœ# (
.
œœ( )
Min
œœ) ,
(
œœ, -
minDescender
œœ- 9
,
œœ9 :
currentCharInfo
œœ; J
.
œœJ K
	descender
œœK T
)
œœT U
;
œœU V
if
—— 
(
—— 
isBeginRegion
—— %
==
——& (
false
——) .
&&
——/ 1 
isCharacterVisible
——2 D
)
——D E
{
““ 
isBeginRegion
”” %
=
””& '
true
””( ,
;
””, -
bl
’’ 
=
’’ 
new
’’  
Vector3
’’! (
(
’’( )
currentCharInfo
’’) 8
.
’’8 9

bottomLeft
’’9 C
.
’’C D
x
’’D E
,
’’E F
currentCharInfo
’’G V
.
’’V W
	descender
’’W `
,
’’` a
$num
’’b c
)
’’c d
;
’’d e
tl
÷÷ 
=
÷÷ 
new
÷÷  
Vector3
÷÷! (
(
÷÷( )
currentCharInfo
÷÷) 8
.
÷÷8 9

bottomLeft
÷÷9 C
.
÷÷C D
x
÷÷D E
,
÷÷E F
currentCharInfo
÷÷G V
.
÷÷V W
ascender
÷÷W _
,
÷÷_ `
$num
÷÷a b
)
÷÷b c
;
÷÷c d
if
€€ 
(
€€ 
wInfo
€€ !
.
€€! "
characterCount
€€" 0
==
€€1 3
$num
€€4 5
)
€€5 6
{
‹‹ 
isBeginRegion
›› )
=
››* +
false
››, 1
;
››1 2
br
ﬂﬂ 
=
ﬂﬂ  
new
ﬂﬂ! $
Vector3
ﬂﬂ% ,
(
ﬂﬂ, -
currentCharInfo
ﬂﬂ- <
.
ﬂﬂ< =
topRight
ﬂﬂ= E
.
ﬂﬂE F
x
ﬂﬂF G
,
ﬂﬂG H
currentCharInfo
ﬂﬂI X
.
ﬂﬂX Y
	descender
ﬂﬂY b
,
ﬂﬂb c
$num
ﬂﬂd e
)
ﬂﬂe f
;
ﬂﬂf g
tr
‡‡ 
=
‡‡  
new
‡‡! $
Vector3
‡‡% ,
(
‡‡, -
currentCharInfo
‡‡- <
.
‡‡< =
topRight
‡‡= E
.
‡‡E F
x
‡‡F G
,
‡‡G H
currentCharInfo
‡‡I X
.
‡‡X Y
ascender
‡‡Y a
,
‡‡a b
$num
‡‡c d
)
‡‡d e
;
‡‡e f
bl
„„ 
=
„„  
rectTransform
„„! .
.
„„. /
TransformPoint
„„/ =
(
„„= >
new
„„> A
Vector3
„„B I
(
„„I J
bl
„„J L
.
„„L M
x
„„M N
,
„„N O
minDescender
„„P \
,
„„\ ]
$num
„„^ _
)
„„_ `
)
„„` a
;
„„a b
tl
‰‰ 
=
‰‰  
rectTransform
‰‰! .
.
‰‰. /
TransformPoint
‰‰/ =
(
‰‰= >
new
‰‰> A
Vector3
‰‰B I
(
‰‰I J
tl
‰‰J L
.
‰‰L M
x
‰‰M N
,
‰‰N O
maxAscender
‰‰P [
,
‰‰[ \
$num
‰‰] ^
)
‰‰^ _
)
‰‰_ `
;
‰‰` a
tr
ÂÂ 
=
ÂÂ  
rectTransform
ÂÂ! .
.
ÂÂ. /
TransformPoint
ÂÂ/ =
(
ÂÂ= >
new
ÂÂ> A
Vector3
ÂÂB I
(
ÂÂI J
tr
ÂÂJ L
.
ÂÂL M
x
ÂÂM N
,
ÂÂN O
maxAscender
ÂÂP [
,
ÂÂ[ \
$num
ÂÂ] ^
)
ÂÂ^ _
)
ÂÂ_ `
;
ÂÂ` a
br
ÊÊ 
=
ÊÊ  
rectTransform
ÊÊ! .
.
ÊÊ. /
TransformPoint
ÊÊ/ =
(
ÊÊ= >
new
ÊÊ> A
Vector3
ÊÊB I
(
ÊÊI J
br
ÊÊJ L
.
ÊÊL M
x
ÊÊM N
,
ÊÊN O
minDescender
ÊÊP \
,
ÊÊ\ ]
$num
ÊÊ^ _
)
ÊÊ_ `
)
ÊÊ` a
;
ÊÊa b
if
ÈÈ 
(
ÈÈ  %
PointIntersectRectangle
ÈÈ  7
(
ÈÈ7 8
position
ÈÈ8 @
,
ÈÈ@ A
bl
ÈÈB D
,
ÈÈD E
tl
ÈÈF H
,
ÈÈH I
tr
ÈÈJ L
,
ÈÈL M
br
ÈÈN P
)
ÈÈP Q
)
ÈÈQ R
return
ÍÍ  &
i
ÍÍ' (
;
ÍÍ( )
}
ÌÌ 
}
ÓÓ 
if
ÒÒ 
(
ÒÒ 
isBeginRegion
ÒÒ %
&&
ÒÒ& (
j
ÒÒ) *
==
ÒÒ+ -
wInfo
ÒÒ. 3
.
ÒÒ3 4
characterCount
ÒÒ4 B
-
ÒÒC D
$num
ÒÒE F
)
ÒÒF G
{
ÚÚ 
isBeginRegion
ÛÛ %
=
ÛÛ& '
false
ÛÛ( -
;
ÛÛ- .
br
ıı 
=
ıı 
new
ıı  
Vector3
ıı! (
(
ıı( )
currentCharInfo
ıı) 8
.
ıı8 9
topRight
ıı9 A
.
ııA B
x
ııB C
,
ııC D
currentCharInfo
ııE T
.
ııT U
	descender
ııU ^
,
ıı^ _
$num
ıı` a
)
ııa b
;
ııb c
tr
ˆˆ 
=
ˆˆ 
new
ˆˆ  
Vector3
ˆˆ! (
(
ˆˆ( )
currentCharInfo
ˆˆ) 8
.
ˆˆ8 9
topRight
ˆˆ9 A
.
ˆˆA B
x
ˆˆB C
,
ˆˆC D
currentCharInfo
ˆˆE T
.
ˆˆT U
ascender
ˆˆU ]
,
ˆˆ] ^
$num
ˆˆ_ `
)
ˆˆ` a
;
ˆˆa b
bl
˘˘ 
=
˘˘ 
rectTransform
˘˘ *
.
˘˘* +
TransformPoint
˘˘+ 9
(
˘˘9 :
new
˘˘: =
Vector3
˘˘> E
(
˘˘E F
bl
˘˘F H
.
˘˘H I
x
˘˘I J
,
˘˘J K
minDescender
˘˘L X
,
˘˘X Y
$num
˘˘Z [
)
˘˘[ \
)
˘˘\ ]
;
˘˘] ^
tl
˙˙ 
=
˙˙ 
rectTransform
˙˙ *
.
˙˙* +
TransformPoint
˙˙+ 9
(
˙˙9 :
new
˙˙: =
Vector3
˙˙> E
(
˙˙E F
tl
˙˙F H
.
˙˙H I
x
˙˙I J
,
˙˙J K
maxAscender
˙˙L W
,
˙˙W X
$num
˙˙Y Z
)
˙˙Z [
)
˙˙[ \
;
˙˙\ ]
tr
˚˚ 
=
˚˚ 
rectTransform
˚˚ *
.
˚˚* +
TransformPoint
˚˚+ 9
(
˚˚9 :
new
˚˚: =
Vector3
˚˚> E
(
˚˚E F
tr
˚˚F H
.
˚˚H I
x
˚˚I J
,
˚˚J K
maxAscender
˚˚L W
,
˚˚W X
$num
˚˚Y Z
)
˚˚Z [
)
˚˚[ \
;
˚˚\ ]
br
¸¸ 
=
¸¸ 
rectTransform
¸¸ *
.
¸¸* +
TransformPoint
¸¸+ 9
(
¸¸9 :
new
¸¸: =
Vector3
¸¸> E
(
¸¸E F
br
¸¸F H
.
¸¸H I
x
¸¸I J
,
¸¸J K
minDescender
¸¸L X
,
¸¸X Y
$num
¸¸Z [
)
¸¸[ \
)
¸¸\ ]
;
¸¸] ^
if
ˇˇ 
(
ˇˇ %
PointIntersectRectangle
ˇˇ 3
(
ˇˇ3 4
position
ˇˇ4 <
,
ˇˇ< =
bl
ˇˇ> @
,
ˇˇ@ A
tl
ˇˇB D
,
ˇˇD E
tr
ˇˇF H
,
ˇˇH I
br
ˇˇJ L
)
ˇˇL M
)
ˇˇM N
return
ÄÄ "
i
ÄÄ# $
;
ÄÄ$ %
}
ÉÉ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
isBeginRegion
ÖÖ *
&&
ÖÖ+ -
currentLine
ÖÖ. 9
!=
ÖÖ: <
text
ÖÖ= A
.
ÖÖA B
textInfo
ÖÖB J
.
ÖÖJ K
characterInfo
ÖÖK X
[
ÖÖX Y
characterIndex
ÖÖY g
+
ÖÖh i
$num
ÖÖj k
]
ÖÖk l
.
ÖÖl m

lineNumber
ÖÖm w
)
ÖÖw x
{
ÜÜ 
isBeginRegion
áá %
=
áá& '
false
áá( -
;
áá- .
br
ââ 
=
ââ 
new
ââ  
Vector3
ââ! (
(
ââ( )
currentCharInfo
ââ) 8
.
ââ8 9
topRight
ââ9 A
.
ââA B
x
ââB C
,
ââC D
currentCharInfo
ââE T
.
ââT U
	descender
ââU ^
,
ââ^ _
$num
ââ` a
)
ââa b
;
ââb c
tr
ää 
=
ää 
new
ää  
Vector3
ää! (
(
ää( )
currentCharInfo
ää) 8
.
ää8 9
topRight
ää9 A
.
ääA B
x
ääB C
,
ääC D
currentCharInfo
ääE T
.
ääT U
ascender
ääU ]
,
ää] ^
$num
ää_ `
)
ää` a
;
ääa b
bl
çç 
=
çç 
rectTransform
çç *
.
çç* +
TransformPoint
çç+ 9
(
çç9 :
new
çç: =
Vector3
çç> E
(
ççE F
bl
ççF H
.
ççH I
x
ççI J
,
ççJ K
minDescender
ççL X
,
ççX Y
$num
ççZ [
)
çç[ \
)
çç\ ]
;
çç] ^
tl
éé 
=
éé 
rectTransform
éé *
.
éé* +
TransformPoint
éé+ 9
(
éé9 :
new
éé: =
Vector3
éé> E
(
ééE F
tl
ééF H
.
ééH I
x
ééI J
,
ééJ K
maxAscender
ééL W
,
ééW X
$num
ééY Z
)
ééZ [
)
éé[ \
;
éé\ ]
tr
èè 
=
èè 
rectTransform
èè *
.
èè* +
TransformPoint
èè+ 9
(
èè9 :
new
èè: =
Vector3
èè> E
(
èèE F
tr
èèF H
.
èèH I
x
èèI J
,
èèJ K
maxAscender
èèL W
,
èèW X
$num
èèY Z
)
èèZ [
)
èè[ \
;
èè\ ]
br
êê 
=
êê 
rectTransform
êê *
.
êê* +
TransformPoint
êê+ 9
(
êê9 :
new
êê: =
Vector3
êê> E
(
êêE F
br
êêF H
.
êêH I
x
êêI J
,
êêJ K
minDescender
êêL X
,
êêX Y
$num
êêZ [
)
êê[ \
)
êê\ ]
;
êê] ^
maxAscender
íí #
=
íí$ %
-
íí& '
Mathf
íí' ,
.
íí, -
Infinity
íí- 5
;
íí5 6
minDescender
ìì $
=
ìì% &
Mathf
ìì' ,
.
ìì, -
Infinity
ìì- 5
;
ìì5 6
if
ññ 
(
ññ %
PointIntersectRectangle
ññ 3
(
ññ3 4
position
ññ4 <
,
ññ< =
bl
ññ> @
,
ññ@ A
tl
ññB D
,
ññD E
tr
ññF H
,
ññH I
br
ññJ L
)
ññL M
)
ññM N
return
óó "
i
óó# $
;
óó$ %
}
öö 
}
õõ 
}
üü 
return
°° 
-
°° 
$num
°° 
;
°° 
}
¢¢ 	
public
®® 
static
®® 
int
®® 
FindNearestWord
®® )
(
®®) *
TMP_Text
®®* 2
text
®®3 7
,
®®7 8
Vector3
®®9 @
position
®®A I
,
®®I J
Camera
®®K Q
camera
®®R X
)
®®X Y
{
©© 	
RectTransform
™™ 
rectTransform
™™ '
=
™™( )
text
™™* .
.
™™. /
rectTransform
™™/ <
;
™™< =
float
¨¨ 
distanceSqr
¨¨ 
=
¨¨ 
Mathf
¨¨  %
.
¨¨% &
Infinity
¨¨& .
;
¨¨. /
int
≠≠ 
closest
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 0
"ScreenPointToWorldPointInRectangle
∞∞ .
(
∞∞. /
rectTransform
∞∞/ <
,
∞∞< =
position
∞∞> F
,
∞∞F G
camera
∞∞H N
,
∞∞N O
out
∞∞P S
position
∞∞T \
)
∞∞\ ]
;
∞∞] ^
for
≤≤ 
(
≤≤ 
int
≤≤ 
i
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
i
≤≤ 
<
≤≤ 
text
≤≤  $
.
≤≤$ %
textInfo
≤≤% -
.
≤≤- .
	wordCount
≤≤. 7
;
≤≤7 8
i
≤≤9 :
++
≤≤: <
)
≤≤< =
{
≥≥ 
TMP_WordInfo
¥¥ 
wInfo
¥¥ "
=
¥¥# $
text
¥¥% )
.
¥¥) *
textInfo
¥¥* 2
.
¥¥2 3
wordInfo
¥¥3 ;
[
¥¥; <
i
¥¥< =
]
¥¥= >
;
¥¥> ?
bool
∂∂ 
isBeginRegion
∂∂ "
=
∂∂# $
false
∂∂% *
;
∂∂* +
Vector3
∏∏ 
bl
∏∏ 
=
∏∏ 
Vector3
∏∏ $
.
∏∏$ %
zero
∏∏% )
;
∏∏) *
Vector3
ππ 
tl
ππ 
=
ππ 
Vector3
ππ $
.
ππ$ %
zero
ππ% )
;
ππ) *
Vector3
∫∫ 
br
∫∫ 
=
∫∫ 
Vector3
∫∫ $
.
∫∫$ %
zero
∫∫% )
;
∫∫) *
Vector3
ªª 
tr
ªª 
=
ªª 
Vector3
ªª $
.
ªª$ %
zero
ªª% )
;
ªª) *
for
ææ 
(
ææ 
int
ææ 
j
ææ 
=
ææ 
$num
ææ 
;
ææ 
j
ææ  !
<
ææ" #
wInfo
ææ$ )
.
ææ) *
characterCount
ææ* 8
;
ææ8 9
j
ææ: ;
++
ææ; =
)
ææ= >
{
øø 
int
¿¿ 
characterIndex
¿¿ &
=
¿¿' (
wInfo
¿¿) .
.
¿¿. /!
firstCharacterIndex
¿¿/ B
+
¿¿C D
j
¿¿E F
;
¿¿F G
TMP_CharacterInfo
¡¡ %
currentCharInfo
¡¡& 5
=
¡¡6 7
text
¡¡8 <
.
¡¡< =
textInfo
¡¡= E
.
¡¡E F
characterInfo
¡¡F S
[
¡¡S T
characterIndex
¡¡T b
]
¡¡b c
;
¡¡c d
int
¬¬ 
currentLine
¬¬ #
=
¬¬$ %
currentCharInfo
¬¬& 5
.
¬¬5 6

lineNumber
¬¬6 @
;
¬¬@ A
bool
ƒƒ  
isCharacterVisible
ƒƒ +
=
ƒƒ, -
currentCharInfo
ƒƒ. =
.
ƒƒ= >
	isVisible
ƒƒ> G
;
ƒƒG H
if
∆∆ 
(
∆∆ 
isBeginRegion
∆∆ %
==
∆∆& (
false
∆∆) .
&&
∆∆/ 1 
isCharacterVisible
∆∆2 D
)
∆∆D E
{
«« 
isBeginRegion
»» %
=
»»& '
true
»»( ,
;
»», -
bl
   
=
   
rectTransform
   *
.
  * +
TransformPoint
  + 9
(
  9 :
new
  : =
Vector3
  > E
(
  E F
currentCharInfo
  F U
.
  U V

bottomLeft
  V `
.
  ` a
x
  a b
,
  b c
currentCharInfo
  d s
.
  s t
	descender
  t }
,
  } ~
$num   Ä
)  Ä Å
)  Å Ç
;  Ç É
tl
ÀÀ 
=
ÀÀ 
rectTransform
ÀÀ *
.
ÀÀ* +
TransformPoint
ÀÀ+ 9
(
ÀÀ9 :
new
ÀÀ: =
Vector3
ÀÀ> E
(
ÀÀE F
currentCharInfo
ÀÀF U
.
ÀÀU V

bottomLeft
ÀÀV `
.
ÀÀ` a
x
ÀÀa b
,
ÀÀb c
currentCharInfo
ÀÀd s
.
ÀÀs t
ascender
ÀÀt |
,
ÀÀ| }
$num
ÀÀ~ 
)ÀÀ Ä
)ÀÀÄ Å
;ÀÀÅ Ç
if
–– 
(
–– 
wInfo
–– !
.
––! "
characterCount
––" 0
==
––1 3
$num
––4 5
)
––5 6
{
—— 
isBeginRegion
““ )
=
““* +
false
““, 1
;
““1 2
br
‘‘ 
=
‘‘  
rectTransform
‘‘! .
.
‘‘. /
TransformPoint
‘‘/ =
(
‘‘= >
new
‘‘> A
Vector3
‘‘B I
(
‘‘I J
currentCharInfo
‘‘J Y
.
‘‘Y Z
topRight
‘‘Z b
.
‘‘b c
x
‘‘c d
,
‘‘d e
currentCharInfo
‘‘f u
.
‘‘u v
	descender
‘‘v 
,‘‘ Ä
$num‘‘Å Ç
)‘‘Ç É
)‘‘É Ñ
;‘‘Ñ Ö
tr
’’ 
=
’’  
rectTransform
’’! .
.
’’. /
TransformPoint
’’/ =
(
’’= >
new
’’> A
Vector3
’’B I
(
’’I J
currentCharInfo
’’J Y
.
’’Y Z
topRight
’’Z b
.
’’b c
x
’’c d
,
’’d e
currentCharInfo
’’f u
.
’’u v
ascender
’’v ~
,
’’~ 
$num’’Ä Å
)’’Å Ç
)’’Ç É
;’’É Ñ
if
ÿÿ 
(
ÿÿ  %
PointIntersectRectangle
ÿÿ  7
(
ÿÿ7 8
position
ÿÿ8 @
,
ÿÿ@ A
bl
ÿÿB D
,
ÿÿD E
tl
ÿÿF H
,
ÿÿH I
tr
ÿÿJ L
,
ÿÿL M
br
ÿÿN P
)
ÿÿP Q
)
ÿÿQ R
return
ŸŸ  &
i
ŸŸ' (
;
ŸŸ( )
float
‹‹ !
dbl
‹‹" %
=
‹‹& '
DistanceToLine
‹‹( 6
(
‹‹6 7
bl
‹‹7 9
,
‹‹9 :
tl
‹‹; =
,
‹‹= >
position
‹‹? G
)
‹‹G H
;
‹‹H I
float
›› !
dtl
››" %
=
››& '
DistanceToLine
››( 6
(
››6 7
tl
››7 9
,
››9 :
tr
››; =
,
››= >
position
››? G
)
››G H
;
››H I
float
ﬁﬁ !
dtr
ﬁﬁ" %
=
ﬁﬁ& '
DistanceToLine
ﬁﬁ( 6
(
ﬁﬁ6 7
tr
ﬁﬁ7 9
,
ﬁﬁ9 :
br
ﬁﬁ; =
,
ﬁﬁ= >
position
ﬁﬁ? G
)
ﬁﬁG H
;
ﬁﬁH I
float
ﬂﬂ !
dbr
ﬂﬂ" %
=
ﬂﬂ& '
DistanceToLine
ﬂﬂ( 6
(
ﬂﬂ6 7
br
ﬂﬂ7 9
,
ﬂﬂ9 :
bl
ﬂﬂ; =
,
ﬂﬂ= >
position
ﬂﬂ? G
)
ﬂﬂG H
;
ﬂﬂH I
float
·· !
d
··" #
=
··$ %
dbl
··& )
<
··* +
dtl
··, /
?
··0 1
dbl
··2 5
:
··6 7
dtl
··8 ;
;
··; <
d
‚‚ 
=
‚‚ 
d
‚‚  !
<
‚‚" #
dtr
‚‚$ '
?
‚‚( )
d
‚‚* +
:
‚‚, -
dtr
‚‚. 1
;
‚‚1 2
d
„„ 
=
„„ 
d
„„  !
<
„„" #
dbr
„„$ '
?
„„( )
d
„„* +
:
„„, -
dbr
„„. 1
;
„„1 2
if
ÂÂ 
(
ÂÂ  
distanceSqr
ÂÂ  +
>
ÂÂ, -
d
ÂÂ. /
)
ÂÂ/ 0
{
ÊÊ 
distanceSqr
ÁÁ  +
=
ÁÁ, -
d
ÁÁ. /
;
ÁÁ/ 0
closest
ËË  '
=
ËË( )
i
ËË* +
;
ËË+ ,
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
if
ÓÓ 
(
ÓÓ 
isBeginRegion
ÓÓ %
&&
ÓÓ& (
j
ÓÓ) *
==
ÓÓ+ -
wInfo
ÓÓ. 3
.
ÓÓ3 4
characterCount
ÓÓ4 B
-
ÓÓC D
$num
ÓÓE F
)
ÓÓF G
{
ÔÔ 
isBeginRegion
 %
=
& '
false
( -
;
- .
br
ÚÚ 
=
ÚÚ 
rectTransform
ÚÚ *
.
ÚÚ* +
TransformPoint
ÚÚ+ 9
(
ÚÚ9 :
new
ÚÚ: =
Vector3
ÚÚ> E
(
ÚÚE F
currentCharInfo
ÚÚF U
.
ÚÚU V
topRight
ÚÚV ^
.
ÚÚ^ _
x
ÚÚ_ `
,
ÚÚ` a
currentCharInfo
ÚÚb q
.
ÚÚq r
	descender
ÚÚr {
,
ÚÚ{ |
$num
ÚÚ} ~
)
ÚÚ~ 
)ÚÚ Ä
;ÚÚÄ Å
tr
ÛÛ 
=
ÛÛ 
rectTransform
ÛÛ *
.
ÛÛ* +
TransformPoint
ÛÛ+ 9
(
ÛÛ9 :
new
ÛÛ: =
Vector3
ÛÛ> E
(
ÛÛE F
currentCharInfo
ÛÛF U
.
ÛÛU V
topRight
ÛÛV ^
.
ÛÛ^ _
x
ÛÛ_ `
,
ÛÛ` a
currentCharInfo
ÛÛb q
.
ÛÛq r
ascender
ÛÛr z
,
ÛÛz {
$num
ÛÛ| }
)
ÛÛ} ~
)
ÛÛ~ 
;ÛÛ Ä
if
ˆˆ 
(
ˆˆ %
PointIntersectRectangle
ˆˆ 3
(
ˆˆ3 4
position
ˆˆ4 <
,
ˆˆ< =
bl
ˆˆ> @
,
ˆˆ@ A
tl
ˆˆB D
,
ˆˆD E
tr
ˆˆF H
,
ˆˆH I
br
ˆˆJ L
)
ˆˆL M
)
ˆˆM N
return
˜˜ "
i
˜˜# $
;
˜˜$ %
float
˙˙ 
dbl
˙˙ !
=
˙˙" #
DistanceToLine
˙˙$ 2
(
˙˙2 3
bl
˙˙3 5
,
˙˙5 6
tl
˙˙7 9
,
˙˙9 :
position
˙˙; C
)
˙˙C D
;
˙˙D E
float
˚˚ 
dtl
˚˚ !
=
˚˚" #
DistanceToLine
˚˚$ 2
(
˚˚2 3
tl
˚˚3 5
,
˚˚5 6
tr
˚˚7 9
,
˚˚9 :
position
˚˚; C
)
˚˚C D
;
˚˚D E
float
¸¸ 
dtr
¸¸ !
=
¸¸" #
DistanceToLine
¸¸$ 2
(
¸¸2 3
tr
¸¸3 5
,
¸¸5 6
br
¸¸7 9
,
¸¸9 :
position
¸¸; C
)
¸¸C D
;
¸¸D E
float
˝˝ 
dbr
˝˝ !
=
˝˝" #
DistanceToLine
˝˝$ 2
(
˝˝2 3
br
˝˝3 5
,
˝˝5 6
bl
˝˝7 9
,
˝˝9 :
position
˝˝; C
)
˝˝C D
;
˝˝D E
float
ˇˇ 
d
ˇˇ 
=
ˇˇ  !
dbl
ˇˇ" %
<
ˇˇ& '
dtl
ˇˇ( +
?
ˇˇ, -
dbl
ˇˇ. 1
:
ˇˇ2 3
dtl
ˇˇ4 7
;
ˇˇ7 8
d
ÄÄ 
=
ÄÄ 
d
ÄÄ 
<
ÄÄ 
dtr
ÄÄ  #
?
ÄÄ$ %
d
ÄÄ& '
:
ÄÄ( )
dtr
ÄÄ* -
;
ÄÄ- .
d
ÅÅ 
=
ÅÅ 
d
ÅÅ 
<
ÅÅ 
dbr
ÅÅ  #
?
ÅÅ$ %
d
ÅÅ& '
:
ÅÅ( )
dbr
ÅÅ* -
;
ÅÅ- .
if
ÉÉ 
(
ÉÉ 
distanceSqr
ÉÉ '
>
ÉÉ( )
d
ÉÉ* +
)
ÉÉ+ ,
{
ÑÑ 
distanceSqr
ÖÖ '
=
ÖÖ( )
d
ÖÖ* +
;
ÖÖ+ ,
closest
ÜÜ #
=
ÜÜ$ %
i
ÜÜ& '
;
ÜÜ' (
}
áá 
}
àà 
else
ää 
if
ää 
(
ää 
isBeginRegion
ää *
&&
ää+ -
currentLine
ää. 9
!=
ää: <
text
ää= A
.
ääA B
textInfo
ääB J
.
ääJ K
characterInfo
ääK X
[
ääX Y
characterIndex
ääY g
+
ääh i
$num
ääj k
]
ääk l
.
ääl m

lineNumber
ääm w
)
ääw x
{
ãã 
isBeginRegion
åå %
=
åå& '
false
åå( -
;
åå- .
br
éé 
=
éé 
rectTransform
éé *
.
éé* +
TransformPoint
éé+ 9
(
éé9 :
new
éé: =
Vector3
éé> E
(
ééE F
currentCharInfo
ééF U
.
ééU V
topRight
ééV ^
.
éé^ _
x
éé_ `
,
éé` a
currentCharInfo
ééb q
.
ééq r
	descender
éér {
,
éé{ |
$num
éé} ~
)
éé~ 
)éé Ä
;ééÄ Å
tr
èè 
=
èè 
rectTransform
èè *
.
èè* +
TransformPoint
èè+ 9
(
èè9 :
new
èè: =
Vector3
èè> E
(
èèE F
currentCharInfo
èèF U
.
èèU V
topRight
èèV ^
.
èè^ _
x
èè_ `
,
èè` a
currentCharInfo
èèb q
.
èèq r
ascender
èèr z
,
èèz {
$num
èè| }
)
èè} ~
)
èè~ 
;èè Ä
if
íí 
(
íí %
PointIntersectRectangle
íí 3
(
íí3 4
position
íí4 <
,
íí< =
bl
íí> @
,
íí@ A
tl
ííB D
,
ííD E
tr
ííF H
,
ííH I
br
ííJ L
)
ííL M
)
ííM N
return
ìì "
i
ìì# $
;
ìì$ %
float
ññ 
dbl
ññ !
=
ññ" #
DistanceToLine
ññ$ 2
(
ññ2 3
bl
ññ3 5
,
ññ5 6
tl
ññ7 9
,
ññ9 :
position
ññ; C
)
ññC D
;
ññD E
float
óó 
dtl
óó !
=
óó" #
DistanceToLine
óó$ 2
(
óó2 3
tl
óó3 5
,
óó5 6
tr
óó7 9
,
óó9 :
position
óó; C
)
óóC D
;
óóD E
float
òò 
dtr
òò !
=
òò" #
DistanceToLine
òò$ 2
(
òò2 3
tr
òò3 5
,
òò5 6
br
òò7 9
,
òò9 :
position
òò; C
)
òòC D
;
òòD E
float
ôô 
dbr
ôô !
=
ôô" #
DistanceToLine
ôô$ 2
(
ôô2 3
br
ôô3 5
,
ôô5 6
bl
ôô7 9
,
ôô9 :
position
ôô; C
)
ôôC D
;
ôôD E
float
õõ 
d
õõ 
=
õõ  !
dbl
õõ" %
<
õõ& '
dtl
õõ( +
?
õõ, -
dbl
õõ. 1
:
õõ2 3
dtl
õõ4 7
;
õõ7 8
d
úú 
=
úú 
d
úú 
<
úú 
dtr
úú  #
?
úú$ %
d
úú& '
:
úú( )
dtr
úú* -
;
úú- .
d
ùù 
=
ùù 
d
ùù 
<
ùù 
dbr
ùù  #
?
ùù$ %
d
ùù& '
:
ùù( )
dbr
ùù* -
;
ùù- .
if
üü 
(
üü 
distanceSqr
üü '
>
üü( )
d
üü* +
)
üü+ ,
{
†† 
distanceSqr
°° '
=
°°( )
d
°°* +
;
°°+ ,
closest
¢¢ #
=
¢¢$ %
i
¢¢& '
;
¢¢' (
}
££ 
}
§§ 
}
•• 
}
®® 
return
™™ 
closest
™™ 
;
™™ 
}
´´ 	
public
ü
ü
 
static
ü
ü
 
int
ü
ü
 "
FindIntersectingLine
ü
ü
 .
(
ü
ü
. /
TMP_Text
ü
ü
/ 7
text
ü
ü
8 <
,
ü
ü
< =
Vector3
ü
ü
> E
position
ü
ü
F N
,
ü
ü
N O
Camera
ü
ü
P V
camera
ü
ü
W ]
)
ü
ü
] ^
{
†
†
 	
RectTransform
°
°
 
rectTransform
°
°
 '
=
°
°
( )
text
°
°
* .
.
°
°
. /
rectTransform
°
°
/ <
;
°
°
< =
int
£
£
 
closest
£
£
 
=
£
£
 
-
£
£
 
$num
£
£
 
;
£
£
 0
"ScreenPointToWorldPointInRectangle
¶
¶
 .
(
¶
¶
. /
rectTransform
¶
¶
/ <
,
¶
¶
< =
position
¶
¶
> F
,
¶
¶
F G
camera
¶
¶
H N
,
¶
¶
N O
out
¶
¶
P S
position
¶
¶
T \
)
¶
¶
\ ]
;
¶
¶
] ^
for
®
®
 
(
®
®
 
int
®
®
 
i
®
®
 
=
®
®
 
$num
®
®
 
;
®
®
 
i
®
®
 
<
®
®
 
text
®
®
  $
.
®
®
$ %
textInfo
®
®
% -
.
®
®
- .
	lineCount
®
®
. 7
;
®
®
7 8
i
®
®
9 :
++
®
®
: <
)
®
®
< =
{
©
©
 
TMP_LineInfo
™
™
 
lineInfo
™
™
 %
=
™
™
& '
text
™
™
( ,
.
™
™
, -
textInfo
™
™
- 5
.
™
™
5 6
lineInfo
™
™
6 >
[
™
™
> ?
i
™
™
? @
]
™
™
@ A
;
™
™
A B
float
¨
¨
 
ascender
¨
¨
 
=
¨
¨
  
rectTransform
¨
¨
! .
.
¨
¨
. /
TransformPoint
¨
¨
/ =
(
¨
¨
= >
new
¨
¨
> A
Vector3
¨
¨
B I
(
¨
¨
I J
$num
¨
¨
J K
,
¨
¨
K L
lineInfo
¨
¨
M U
.
¨
¨
U V
ascender
¨
¨
V ^
,
¨
¨
^ _
$num
¨
¨
` a
)
¨
¨
a b
)
¨
¨
b c
.
¨
¨
c d
y
¨
¨
d e
;
¨
¨
e f
float
≠
≠
 
	descender
≠
≠
 
=
≠
≠
  !
rectTransform
≠
≠
" /
.
≠
≠
/ 0
TransformPoint
≠
≠
0 >
(
≠
≠
> ?
new
≠
≠
? B
Vector3
≠
≠
C J
(
≠
≠
J K
$num
≠
≠
K L
,
≠
≠
L M
lineInfo
≠
≠
N V
.
≠
≠
V W
	descender
≠
≠
W `
,
≠
≠
` a
$num
≠
≠
b c
)
≠
≠
c d
)
≠
≠
d e
.
≠
≠
e f
y
≠
≠
f g
;
≠
≠
g h
if
Ø
Ø
 
(
Ø
Ø
 
ascender
Ø
Ø
 
>
Ø
Ø
 
position
Ø
Ø
 '
.
Ø
Ø
' (
y
Ø
Ø
( )
&&
Ø
Ø
* ,
	descender
Ø
Ø
- 6
<
Ø
Ø
7 8
position
Ø
Ø
9 A
.
Ø
Ø
A B
y
Ø
Ø
B C
)
Ø
Ø
C D
{
∞
∞
 
return
≤
≤
 
i
≤
≤
 
;
≤
≤
 
}
≥
≥
 
}
¥
¥
 
return
∑
∑
 
closest
∑
∑
 
;
∑
∑
 
}
∏
∏
 	
public
¬
¬
 
static
¬
¬
 
int
¬
¬
 "
FindIntersectingLink
¬
¬
 .
(
¬
¬
. /
TMP_Text
¬
¬
/ 7
text
¬
¬
8 <
,
¬
¬
< =
Vector3
¬
¬
> E
position
¬
¬
F N
,
¬
¬
N O
Camera
¬
¬
P V
camera
¬
¬
W ]
)
¬
¬
] ^
{
√
√
 	
	Transform
ƒ
ƒ
 
rectTransform
ƒ
ƒ
 #
=
ƒ
ƒ
$ %
text
ƒ
ƒ
& *
.
ƒ
ƒ
* +
	transform
ƒ
ƒ
+ 4
;
ƒ
ƒ
4 50
"ScreenPointToWorldPointInRectangle
«
«
 .
(
«
«
. /
rectTransform
«
«
/ <
,
«
«
< =
position
«
«
> F
,
«
«
F G
camera
«
«
H N
,
«
«
N O
out
«
«
P S
position
«
«
T \
)
«
«
\ ]
;
«
«
] ^
for
…
…
 
(
…
…
 
int
…
…
 
i
…
…
 
=
…
…
 
$num
…
…
 
;
…
…
 
i
…
…
 
<
…
…
 
text
…
…
  $
.
…
…
$ %
textInfo
…
…
% -
.
…
…
- .
	linkCount
…
…
. 7
;
…
…
7 8
i
…
…
9 :
++
…
…
: <
)
…
…
< =
{
 
 
 
TMP_LinkInfo
À
À
 
linkInfo
À
À
 %
=
À
À
& '
text
À
À
( ,
.
À
À
, -
textInfo
À
À
- 5
.
À
À
5 6
linkInfo
À
À
6 >
[
À
À
> ?
i
À
À
? @
]
À
À
@ A
;
À
À
A B
bool
Õ
Õ
 
isBeginRegion
Õ
Õ
 "
=
Õ
Õ
# $
false
Õ
Õ
% *
;
Õ
Õ
* +
Vector3
œ
œ
 
bl
œ
œ
 
=
œ
œ
 
Vector3
œ
œ
 $
.
œ
œ
$ %
zero
œ
œ
% )
;
œ
œ
) *
Vector3
–
–
 
tl
–
–
 
=
–
–
 
Vector3
–
–
 $
.
–
–
$ %
zero
–
–
% )
;
–
–
) *
Vector3
—
—
 
br
—
—
 
=
—
—
 
Vector3
—
—
 $
.
—
—
$ %
zero
—
—
% )
;
—
—
) *
Vector3
“
“
 
tr
“
“
 
=
“
“
 
Vector3
“
“
 $
.
“
“
$ %
zero
“
“
% )
;
“
“
) *
for
’
’
 
(
’
’
 
int
’
’
 
j
’
’
 
=
’
’
 
$num
’
’
 
;
’
’
 
j
’
’
  !
<
’
’
" #
linkInfo
’
’
$ ,
.
’
’
, -
linkTextLength
’
’
- ;
;
’
’
; <
j
’
’
= >
++
’
’
> @
)
’
’
@ A
{
÷
÷
 
int
◊
◊
 
characterIndex
◊
◊
 &
=
◊
◊
' (
linkInfo
◊
◊
) 1
.
◊
◊
1 2)
linkTextfirstCharacterIndex
◊
◊
2 M
+
◊
◊
N O
j
◊
◊
P Q
;
◊
◊
Q R
TMP_CharacterInfo
ÿ
ÿ
 %
currentCharInfo
ÿ
ÿ
& 5
=
ÿ
ÿ
6 7
text
ÿ
ÿ
8 <
.
ÿ
ÿ
< =
textInfo
ÿ
ÿ
= E
.
ÿ
ÿ
E F
characterInfo
ÿ
ÿ
F S
[
ÿ
ÿ
S T
characterIndex
ÿ
ÿ
T b
]
ÿ
ÿ
b c
;
ÿ
ÿ
c d
int
Ÿ
Ÿ
 
currentLine
Ÿ
Ÿ
 #
=
Ÿ
Ÿ
$ %
currentCharInfo
Ÿ
Ÿ
& 5
.
Ÿ
Ÿ
5 6

lineNumber
Ÿ
Ÿ
6 @
;
Ÿ
Ÿ
@ A
if
‹
‹
 
(
‹
‹
 
text
‹
‹
 
.
‹
‹
 
overflowMode
‹
‹
 )
==
‹
‹
* ,
TextOverflowModes
‹
‹
- >
.
‹
‹
> ?
Page
‹
‹
? C
&&
‹
‹
D F
currentCharInfo
‹
‹
G V
.
‹
‹
V W

pageNumber
‹
‹
W a
+
‹
‹
b c
$num
‹
‹
d e
!=
‹
‹
f h
text
‹
‹
i m
.
‹
‹
m n
pageToDisplay
‹
‹
n {
)
‹
‹
{ |
continue‹
‹
} Ö
;‹
‹
Ö Ü
if
ﬁ
ﬁ
 
(
ﬁ
ﬁ
 
isBeginRegion
ﬁ
ﬁ
 %
==
ﬁ
ﬁ
& (
false
ﬁ
ﬁ
) .
)
ﬁ
ﬁ
. /
{
ﬂ
ﬂ
 
isBeginRegion
‡
‡
 %
=
‡
‡
& '
true
‡
‡
( ,
;
‡
‡
, -
bl
‚
‚
 
=
‚
‚
 
rectTransform
‚
‚
 *
.
‚
‚
* +
TransformPoint
‚
‚
+ 9
(
‚
‚
9 :
new
‚
‚
: =
Vector3
‚
‚
> E
(
‚
‚
E F
currentCharInfo
‚
‚
F U
.
‚
‚
U V

bottomLeft
‚
‚
V `
.
‚
‚
` a
x
‚
‚
a b
,
‚
‚
b c
currentCharInfo
‚
‚
d s
.
‚
‚
s t
	descender
‚
‚
t }
,
‚
‚
} ~
$num‚
‚
 Ä
)‚
‚
Ä Å
)‚
‚
Å Ç
;‚
‚
Ç É
tl
„
„
 
=
„
„
 
rectTransform
„
„
 *
.
„
„
* +
TransformPoint
„
„
+ 9
(
„
„
9 :
new
„
„
: =
Vector3
„
„
> E
(
„
„
E F
currentCharInfo
„
„
F U
.
„
„
U V

bottomLeft
„
„
V `
.
„
„
` a
x
„
„
a b
,
„
„
b c
currentCharInfo
„
„
d s
.
„
„
s t
ascender
„
„
t |
,
„
„
| }
$num
„
„
~ 
)„
„
 Ä
)„
„
Ä Å
;„
„
Å Ç
if
Ë
Ë
 
(
Ë
Ë
 
linkInfo
Ë
Ë
 $
.
Ë
Ë
$ %
linkTextLength
Ë
Ë
% 3
==
Ë
Ë
4 6
$num
Ë
Ë
7 8
)
Ë
Ë
8 9
{
È
È
 
isBeginRegion
Í
Í
 )
=
Í
Í
* +
false
Í
Í
, 1
;
Í
Í
1 2
br
Ï
Ï
 
=
Ï
Ï
  
rectTransform
Ï
Ï
! .
.
Ï
Ï
. /
TransformPoint
Ï
Ï
/ =
(
Ï
Ï
= >
new
Ï
Ï
> A
Vector3
Ï
Ï
B I
(
Ï
Ï
I J
currentCharInfo
Ï
Ï
J Y
.
Ï
Ï
Y Z
topRight
Ï
Ï
Z b
.
Ï
Ï
b c
x
Ï
Ï
c d
,
Ï
Ï
d e
currentCharInfo
Ï
Ï
f u
.
Ï
Ï
u v
	descender
Ï
Ï
v 
,Ï
Ï
 Ä
$numÏ
Ï
Å Ç
)Ï
Ï
Ç É
)Ï
Ï
É Ñ
;Ï
Ï
Ñ Ö
tr
Ì
Ì
 
=
Ì
Ì
  
rectTransform
Ì
Ì
! .
.
Ì
Ì
. /
TransformPoint
Ì
Ì
/ =
(
Ì
Ì
= >
new
Ì
Ì
> A
Vector3
Ì
Ì
B I
(
Ì
Ì
I J
currentCharInfo
Ì
Ì
J Y
.
Ì
Ì
Y Z
topRight
Ì
Ì
Z b
.
Ì
Ì
b c
x
Ì
Ì
c d
,
Ì
Ì
d e
currentCharInfo
Ì
Ì
f u
.
Ì
Ì
u v
ascender
Ì
Ì
v ~
,
Ì
Ì
~ 
$numÌ
Ì
Ä Å
)Ì
Ì
Å Ç
)Ì
Ì
Ç É
;Ì
Ì
É Ñ
if


 
(


  %
PointIntersectRectangle


  7
(


7 8
position


8 @
,


@ A
bl


B D
,


D E
tl


F H
,


H I
tr


J L
,


L M
br


N P
)


P Q
)


Q R
return
Ò
Ò
  &
i
Ò
Ò
' (
;
Ò
Ò
( )
}
Ù
Ù
 
}
ı
ı
 
if
¯
¯
 
(
¯
¯
 
isBeginRegion
¯
¯
 %
&&
¯
¯
& (
j
¯
¯
) *
==
¯
¯
+ -
linkInfo
¯
¯
. 6
.
¯
¯
6 7
linkTextLength
¯
¯
7 E
-
¯
¯
F G
$num
¯
¯
H I
)
¯
¯
I J
{
˘
˘
 
isBeginRegion
˙
˙
 %
=
˙
˙
& '
false
˙
˙
( -
;
˙
˙
- .
br
¸
¸
 
=
¸
¸
 
rectTransform
¸
¸
 *
.
¸
¸
* +
TransformPoint
¸
¸
+ 9
(
¸
¸
9 :
new
¸
¸
: =
Vector3
¸
¸
> E
(
¸
¸
E F
currentCharInfo
¸
¸
F U
.
¸
¸
U V
topRight
¸
¸
V ^
.
¸
¸
^ _
x
¸
¸
_ `
,
¸
¸
` a
currentCharInfo
¸
¸
b q
.
¸
¸
q r
	descender
¸
¸
r {
,
¸
¸
{ |
$num
¸
¸
} ~
)
¸
¸
~ 
)¸
¸
 Ä
;¸
¸
Ä Å
tr
˝
˝
 
=
˝
˝
 
rectTransform
˝
˝
 *
.
˝
˝
* +
TransformPoint
˝
˝
+ 9
(
˝
˝
9 :
new
˝
˝
: =
Vector3
˝
˝
> E
(
˝
˝
E F
currentCharInfo
˝
˝
F U
.
˝
˝
U V
topRight
˝
˝
V ^
.
˝
˝
^ _
x
˝
˝
_ `
,
˝
˝
` a
currentCharInfo
˝
˝
b q
.
˝
˝
q r
ascender
˝
˝
r z
,
˝
˝
z {
$num
˝
˝
| }
)
˝
˝
} ~
)
˝
˝
~ 
;˝
˝
 Ä
if
ÄÄ 
(
ÄÄ %
PointIntersectRectangle
ÄÄ 3
(
ÄÄ3 4
position
ÄÄ4 <
,
ÄÄ< =
bl
ÄÄ> @
,
ÄÄ@ A
tl
ÄÄB D
,
ÄÄD E
tr
ÄÄF H
,
ÄÄH I
br
ÄÄJ L
)
ÄÄL M
)
ÄÄM N
return
ÅÅ "
i
ÅÅ# $
;
ÅÅ$ %
}
ÑÑ 
else
ÜÜ 
if
ÜÜ 
(
ÜÜ 
isBeginRegion
ÜÜ *
&&
ÜÜ+ -
currentLine
ÜÜ. 9
!=
ÜÜ: <
text
ÜÜ= A
.
ÜÜA B
textInfo
ÜÜB J
.
ÜÜJ K
characterInfo
ÜÜK X
[
ÜÜX Y
characterIndex
ÜÜY g
+
ÜÜh i
$num
ÜÜj k
]
ÜÜk l
.
ÜÜl m

lineNumber
ÜÜm w
)
ÜÜw x
{
áá 
isBeginRegion
àà %
=
àà& '
false
àà( -
;
àà- .
br
ää 
=
ää 
rectTransform
ää *
.
ää* +
TransformPoint
ää+ 9
(
ää9 :
new
ää: =
Vector3
ää> E
(
ääE F
currentCharInfo
ääF U
.
ääU V
topRight
ääV ^
.
ää^ _
x
ää_ `
,
ää` a
currentCharInfo
ääb q
.
ääq r
	descender
äär {
,
ää{ |
$num
ää} ~
)
ää~ 
)ää Ä
;ääÄ Å
tr
ãã 
=
ãã 
rectTransform
ãã *
.
ãã* +
TransformPoint
ãã+ 9
(
ãã9 :
new
ãã: =
Vector3
ãã> E
(
ããE F
currentCharInfo
ããF U
.
ããU V
topRight
ããV ^
.
ãã^ _
x
ãã_ `
,
ãã` a
currentCharInfo
ããb q
.
ããq r
ascender
ããr z
,
ããz {
$num
ãã| }
)
ãã} ~
)
ãã~ 
;ãã Ä
if
éé 
(
éé %
PointIntersectRectangle
éé 3
(
éé3 4
position
éé4 <
,
éé< =
bl
éé> @
,
éé@ A
tl
ééB D
,
ééD E
tr
ééF H
,
ééH I
br
ééJ L
)
ééL M
)
ééM N
return
èè "
i
èè# $
;
èè$ %
}
íí 
}
ìì 
}
óó 
return
ôô 
-
ôô 
$num
ôô 
;
ôô 
}
öö 	
public
ÁÁ 
static
ÁÁ 
int
ÁÁ 
FindNearestLink
ÁÁ )
(
ÁÁ) *
TMP_Text
ÁÁ* 2
text
ÁÁ3 7
,
ÁÁ7 8
Vector3
ÁÁ9 @
position
ÁÁA I
,
ÁÁI J
Camera
ÁÁK Q
camera
ÁÁR X
)
ÁÁX Y
{
ËË 	
RectTransform
ÈÈ 
rectTransform
ÈÈ '
=
ÈÈ( )
text
ÈÈ* .
.
ÈÈ. /
rectTransform
ÈÈ/ <
;
ÈÈ< =0
"ScreenPointToWorldPointInRectangle
ÏÏ .
(
ÏÏ. /
rectTransform
ÏÏ/ <
,
ÏÏ< =
position
ÏÏ> F
,
ÏÏF G
camera
ÏÏH N
,
ÏÏN O
out
ÏÏP S
position
ÏÏT \
)
ÏÏ\ ]
;
ÏÏ] ^
float
ÓÓ 
distanceSqr
ÓÓ 
=
ÓÓ 
Mathf
ÓÓ  %
.
ÓÓ% &
Infinity
ÓÓ& .
;
ÓÓ. /
int
ÔÔ 
closest
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ 
for
ÒÒ 
(
ÒÒ 
int
ÒÒ 
i
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ 
<
ÒÒ 
text
ÒÒ  $
.
ÒÒ$ %
textInfo
ÒÒ% -
.
ÒÒ- .
	linkCount
ÒÒ. 7
;
ÒÒ7 8
i
ÒÒ9 :
++
ÒÒ: <
)
ÒÒ< =
{
ÚÚ 
TMP_LinkInfo
ÛÛ 
linkInfo
ÛÛ %
=
ÛÛ& '
text
ÛÛ( ,
.
ÛÛ, -
textInfo
ÛÛ- 5
.
ÛÛ5 6
linkInfo
ÛÛ6 >
[
ÛÛ> ?
i
ÛÛ? @
]
ÛÛ@ A
;
ÛÛA B
bool
ıı 
isBeginRegion
ıı "
=
ıı# $
false
ıı% *
;
ıı* +
Vector3
˜˜ 
bl
˜˜ 
=
˜˜ 
Vector3
˜˜ $
.
˜˜$ %
zero
˜˜% )
;
˜˜) *
Vector3
¯¯ 
tl
¯¯ 
=
¯¯ 
Vector3
¯¯ $
.
¯¯$ %
zero
¯¯% )
;
¯¯) *
Vector3
˘˘ 
br
˘˘ 
=
˘˘ 
Vector3
˘˘ $
.
˘˘$ %
zero
˘˘% )
;
˘˘) *
Vector3
˙˙ 
tr
˙˙ 
=
˙˙ 
Vector3
˙˙ $
.
˙˙$ %
zero
˙˙% )
;
˙˙) *
for
˝˝ 
(
˝˝ 
int
˝˝ 
j
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ 
j
˝˝  !
<
˝˝" #
linkInfo
˝˝$ ,
.
˝˝, -
linkTextLength
˝˝- ;
;
˝˝; <
j
˝˝= >
++
˝˝> @
)
˝˝@ A
{
˛˛ 
int
ˇˇ 
characterIndex
ˇˇ &
=
ˇˇ' (
linkInfo
ˇˇ) 1
.
ˇˇ1 2)
linkTextfirstCharacterIndex
ˇˇ2 M
+
ˇˇN O
j
ˇˇP Q
;
ˇˇQ R
TMP_CharacterInfo
ÄÄ %
currentCharInfo
ÄÄ& 5
=
ÄÄ6 7
text
ÄÄ8 <
.
ÄÄ< =
textInfo
ÄÄ= E
.
ÄÄE F
characterInfo
ÄÄF S
[
ÄÄS T
characterIndex
ÄÄT b
]
ÄÄb c
;
ÄÄc d
int
ÅÅ 
currentLine
ÅÅ #
=
ÅÅ$ %
currentCharInfo
ÅÅ& 5
.
ÅÅ5 6

lineNumber
ÅÅ6 @
;
ÅÅ@ A
if
ÑÑ 
(
ÑÑ 
text
ÑÑ 
.
ÑÑ 
overflowMode
ÑÑ )
==
ÑÑ* ,
TextOverflowModes
ÑÑ- >
.
ÑÑ> ?
Page
ÑÑ? C
&&
ÑÑD F
currentCharInfo
ÑÑG V
.
ÑÑV W

pageNumber
ÑÑW a
+
ÑÑb c
$num
ÑÑd e
!=
ÑÑf h
text
ÑÑi m
.
ÑÑm n
pageToDisplay
ÑÑn {
)
ÑÑ{ |
continueÑÑ} Ö
;ÑÑÖ Ü
if
ÜÜ 
(
ÜÜ 
isBeginRegion
ÜÜ %
==
ÜÜ& (
false
ÜÜ) .
)
ÜÜ. /
{
áá 
isBeginRegion
àà %
=
àà& '
true
àà( ,
;
àà, -
bl
åå 
=
åå 
rectTransform
åå *
.
åå* +
TransformPoint
åå+ 9
(
åå9 :
new
åå: =
Vector3
åå> E
(
ååE F
currentCharInfo
ååF U
.
ååU V

bottomLeft
ååV `
.
åå` a
x
ååa b
,
ååb c
currentCharInfo
ååd s
.
åås t
	descender
ååt }
,
åå} ~
$numåå Ä
)ååÄ Å
)ååÅ Ç
;ååÇ É
tl
çç 
=
çç 
rectTransform
çç *
.
çç* +
TransformPoint
çç+ 9
(
çç9 :
new
çç: =
Vector3
çç> E
(
ççE F
currentCharInfo
ççF U
.
ççU V

bottomLeft
ççV `
.
çç` a
x
çça b
,
ççb c
currentCharInfo
ççd s
.
ççs t
ascender
ççt |
,
çç| }
$num
çç~ 
)çç Ä
)ççÄ Å
;ççÅ Ç
if
êê 
(
êê 
linkInfo
êê $
.
êê$ %
linkTextLength
êê% 3
==
êê4 6
$num
êê7 8
)
êê8 9
{
ëë 
isBeginRegion
íí )
=
íí* +
false
íí, 1
;
íí1 2
br
îî 
=
îî  
rectTransform
îî! .
.
îî. /
TransformPoint
îî/ =
(
îî= >
new
îî> A
Vector3
îîB I
(
îîI J
currentCharInfo
îîJ Y
.
îîY Z
topRight
îîZ b
.
îîb c
x
îîc d
,
îîd e
currentCharInfo
îîf u
.
îîu v
	descender
îîv 
,îî Ä
$numîîÅ Ç
)îîÇ É
)îîÉ Ñ
;îîÑ Ö
tr
ïï 
=
ïï  
rectTransform
ïï! .
.
ïï. /
TransformPoint
ïï/ =
(
ïï= >
new
ïï> A
Vector3
ïïB I
(
ïïI J
currentCharInfo
ïïJ Y
.
ïïY Z
topRight
ïïZ b
.
ïïb c
x
ïïc d
,
ïïd e
currentCharInfo
ïïf u
.
ïïu v
ascender
ïïv ~
,
ïï~ 
$numïïÄ Å
)ïïÅ Ç
)ïïÇ É
;ïïÉ Ñ
if
òò 
(
òò  %
PointIntersectRectangle
òò  7
(
òò7 8
position
òò8 @
,
òò@ A
bl
òòB D
,
òòD E
tl
òòF H
,
òòH I
tr
òòJ L
,
òòL M
br
òòN P
)
òòP Q
)
òòQ R
return
ôô  &
i
ôô' (
;
ôô( )
float
úú !
dbl
úú" %
=
úú& '
DistanceToLine
úú( 6
(
úú6 7
bl
úú7 9
,
úú9 :
tl
úú; =
,
úú= >
position
úú? G
)
úúG H
;
úúH I
float
ùù !
dtl
ùù" %
=
ùù& '
DistanceToLine
ùù( 6
(
ùù6 7
tl
ùù7 9
,
ùù9 :
tr
ùù; =
,
ùù= >
position
ùù? G
)
ùùG H
;
ùùH I
float
ûû !
dtr
ûû" %
=
ûû& '
DistanceToLine
ûû( 6
(
ûû6 7
tr
ûû7 9
,
ûû9 :
br
ûû; =
,
ûû= >
position
ûû? G
)
ûûG H
;
ûûH I
float
üü !
dbr
üü" %
=
üü& '
DistanceToLine
üü( 6
(
üü6 7
br
üü7 9
,
üü9 :
bl
üü; =
,
üü= >
position
üü? G
)
üüG H
;
üüH I
float
°° !
d
°°" #
=
°°$ %
dbl
°°& )
<
°°* +
dtl
°°, /
?
°°0 1
dbl
°°2 5
:
°°6 7
dtl
°°8 ;
;
°°; <
d
¢¢ 
=
¢¢ 
d
¢¢  !
<
¢¢" #
dtr
¢¢$ '
?
¢¢( )
d
¢¢* +
:
¢¢, -
dtr
¢¢. 1
;
¢¢1 2
d
££ 
=
££ 
d
££  !
<
££" #
dbr
££$ '
?
££( )
d
££* +
:
££, -
dbr
££. 1
;
££1 2
if
•• 
(
••  
distanceSqr
••  +
>
••, -
d
••. /
)
••/ 0
{
¶¶ 
distanceSqr
ßß  +
=
ßß, -
d
ßß. /
;
ßß/ 0
closest
®®  '
=
®®( )
i
®®* +
;
®®+ ,
}
©© 
}
´´ 
}
¨¨ 
if
ØØ 
(
ØØ 
isBeginRegion
ØØ %
&&
ØØ& (
j
ØØ) *
==
ØØ+ -
linkInfo
ØØ. 6
.
ØØ6 7
linkTextLength
ØØ7 E
-
ØØF G
$num
ØØH I
)
ØØI J
{
∞∞ 
isBeginRegion
±± %
=
±±& '
false
±±( -
;
±±- .
br
≥≥ 
=
≥≥ 
rectTransform
≥≥ *
.
≥≥* +
TransformPoint
≥≥+ 9
(
≥≥9 :
new
≥≥: =
Vector3
≥≥> E
(
≥≥E F
currentCharInfo
≥≥F U
.
≥≥U V
topRight
≥≥V ^
.
≥≥^ _
x
≥≥_ `
,
≥≥` a
currentCharInfo
≥≥b q
.
≥≥q r
	descender
≥≥r {
,
≥≥{ |
$num
≥≥} ~
)
≥≥~ 
)≥≥ Ä
;≥≥Ä Å
tr
¥¥ 
=
¥¥ 
rectTransform
¥¥ *
.
¥¥* +
TransformPoint
¥¥+ 9
(
¥¥9 :
new
¥¥: =
Vector3
¥¥> E
(
¥¥E F
currentCharInfo
¥¥F U
.
¥¥U V
topRight
¥¥V ^
.
¥¥^ _
x
¥¥_ `
,
¥¥` a
currentCharInfo
¥¥b q
.
¥¥q r
ascender
¥¥r z
,
¥¥z {
$num
¥¥| }
)
¥¥} ~
)
¥¥~ 
;¥¥ Ä
if
∑∑ 
(
∑∑ %
PointIntersectRectangle
∑∑ 3
(
∑∑3 4
position
∑∑4 <
,
∑∑< =
bl
∑∑> @
,
∑∑@ A
tl
∑∑B D
,
∑∑D E
tr
∑∑F H
,
∑∑H I
br
∑∑J L
)
∑∑L M
)
∑∑M N
return
∏∏ "
i
∏∏# $
;
∏∏$ %
float
ªª 
dbl
ªª !
=
ªª" #
DistanceToLine
ªª$ 2
(
ªª2 3
bl
ªª3 5
,
ªª5 6
tl
ªª7 9
,
ªª9 :
position
ªª; C
)
ªªC D
;
ªªD E
float
ºº 
dtl
ºº !
=
ºº" #
DistanceToLine
ºº$ 2
(
ºº2 3
tl
ºº3 5
,
ºº5 6
tr
ºº7 9
,
ºº9 :
position
ºº; C
)
ººC D
;
ººD E
float
ΩΩ 
dtr
ΩΩ !
=
ΩΩ" #
DistanceToLine
ΩΩ$ 2
(
ΩΩ2 3
tr
ΩΩ3 5
,
ΩΩ5 6
br
ΩΩ7 9
,
ΩΩ9 :
position
ΩΩ; C
)
ΩΩC D
;
ΩΩD E
float
ææ 
dbr
ææ !
=
ææ" #
DistanceToLine
ææ$ 2
(
ææ2 3
br
ææ3 5
,
ææ5 6
bl
ææ7 9
,
ææ9 :
position
ææ; C
)
ææC D
;
ææD E
float
¿¿ 
d
¿¿ 
=
¿¿  !
dbl
¿¿" %
<
¿¿& '
dtl
¿¿( +
?
¿¿, -
dbl
¿¿. 1
:
¿¿2 3
dtl
¿¿4 7
;
¿¿7 8
d
¡¡ 
=
¡¡ 
d
¡¡ 
<
¡¡ 
dtr
¡¡  #
?
¡¡$ %
d
¡¡& '
:
¡¡( )
dtr
¡¡* -
;
¡¡- .
d
¬¬ 
=
¬¬ 
d
¬¬ 
<
¬¬ 
dbr
¬¬  #
?
¬¬$ %
d
¬¬& '
:
¬¬( )
dbr
¬¬* -
;
¬¬- .
if
ƒƒ 
(
ƒƒ 
distanceSqr
ƒƒ '
>
ƒƒ( )
d
ƒƒ* +
)
ƒƒ+ ,
{
≈≈ 
distanceSqr
∆∆ '
=
∆∆( )
d
∆∆* +
;
∆∆+ ,
closest
«« #
=
««$ %
i
««& '
;
««' (
}
»» 
}
   
else
ÃÃ 
if
ÃÃ 
(
ÃÃ 
isBeginRegion
ÃÃ *
&&
ÃÃ+ -
currentLine
ÃÃ. 9
!=
ÃÃ: <
text
ÃÃ= A
.
ÃÃA B
textInfo
ÃÃB J
.
ÃÃJ K
characterInfo
ÃÃK X
[
ÃÃX Y
characterIndex
ÃÃY g
+
ÃÃh i
$num
ÃÃj k
]
ÃÃk l
.
ÃÃl m

lineNumber
ÃÃm w
)
ÃÃw x
{
ÕÕ 
isBeginRegion
ŒŒ %
=
ŒŒ& '
false
ŒŒ( -
;
ŒŒ- .
br
–– 
=
–– 
rectTransform
–– *
.
––* +
TransformPoint
––+ 9
(
––9 :
new
––: =
Vector3
––> E
(
––E F
currentCharInfo
––F U
.
––U V
topRight
––V ^
.
––^ _
x
––_ `
,
––` a
currentCharInfo
––b q
.
––q r
	descender
––r {
,
––{ |
$num
––} ~
)
––~ 
)–– Ä
;––Ä Å
tr
—— 
=
—— 
rectTransform
—— *
.
——* +
TransformPoint
——+ 9
(
——9 :
new
——: =
Vector3
——> E
(
——E F
currentCharInfo
——F U
.
——U V
topRight
——V ^
.
——^ _
x
——_ `
,
——` a
currentCharInfo
——b q
.
——q r
ascender
——r z
,
——z {
$num
——| }
)
——} ~
)
——~ 
;—— Ä
if
‘‘ 
(
‘‘ %
PointIntersectRectangle
‘‘ 3
(
‘‘3 4
position
‘‘4 <
,
‘‘< =
bl
‘‘> @
,
‘‘@ A
tl
‘‘B D
,
‘‘D E
tr
‘‘F H
,
‘‘H I
br
‘‘J L
)
‘‘L M
)
‘‘M N
return
’’ "
i
’’# $
;
’’$ %
float
ÿÿ 
dbl
ÿÿ !
=
ÿÿ" #
DistanceToLine
ÿÿ$ 2
(
ÿÿ2 3
bl
ÿÿ3 5
,
ÿÿ5 6
tl
ÿÿ7 9
,
ÿÿ9 :
position
ÿÿ; C
)
ÿÿC D
;
ÿÿD E
float
ŸŸ 
dtl
ŸŸ !
=
ŸŸ" #
DistanceToLine
ŸŸ$ 2
(
ŸŸ2 3
tl
ŸŸ3 5
,
ŸŸ5 6
tr
ŸŸ7 9
,
ŸŸ9 :
position
ŸŸ; C
)
ŸŸC D
;
ŸŸD E
float
⁄⁄ 
dtr
⁄⁄ !
=
⁄⁄" #
DistanceToLine
⁄⁄$ 2
(
⁄⁄2 3
tr
⁄⁄3 5
,
⁄⁄5 6
br
⁄⁄7 9
,
⁄⁄9 :
position
⁄⁄; C
)
⁄⁄C D
;
⁄⁄D E
float
€€ 
dbr
€€ !
=
€€" #
DistanceToLine
€€$ 2
(
€€2 3
br
€€3 5
,
€€5 6
bl
€€7 9
,
€€9 :
position
€€; C
)
€€C D
;
€€D E
float
›› 
d
›› 
=
››  !
dbl
››" %
<
››& '
dtl
››( +
?
››, -
dbl
››. 1
:
››2 3
dtl
››4 7
;
››7 8
d
ﬁﬁ 
=
ﬁﬁ 
d
ﬁﬁ 
<
ﬁﬁ 
dtr
ﬁﬁ  #
?
ﬁﬁ$ %
d
ﬁﬁ& '
:
ﬁﬁ( )
dtr
ﬁﬁ* -
;
ﬁﬁ- .
d
ﬂﬂ 
=
ﬂﬂ 
d
ﬂﬂ 
<
ﬂﬂ 
dbr
ﬂﬂ  #
?
ﬂﬂ$ %
d
ﬂﬂ& '
:
ﬂﬂ( )
dbr
ﬂﬂ* -
;
ﬂﬂ- .
if
·· 
(
·· 
distanceSqr
·· '
>
··( )
d
··* +
)
··+ ,
{
‚‚ 
distanceSqr
„„ '
=
„„( )
d
„„* +
;
„„+ ,
closest
‰‰ #
=
‰‰$ %
i
‰‰& '
;
‰‰' (
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
}
ÎÎ 
return
ÌÌ 
closest
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
private
‹‹ 
static
‹‹ 
bool
‹‹ %
PointIntersectRectangle
‹‹ 3
(
‹‹3 4
Vector3
‹‹4 ;
m
‹‹< =
,
‹‹= >
Vector3
‹‹? F
a
‹‹G H
,
‹‹H I
Vector3
‹‹J Q
b
‹‹R S
,
‹‹S T
Vector3
‹‹U \
c
‹‹] ^
,
‹‹^ _
Vector3
‹‹` g
d
‹‹h i
)
‹‹i j
{
›› 	
Vector3
ﬁﬁ 
ab
ﬁﬁ 
=
ﬁﬁ 
b
ﬁﬁ 
-
ﬁﬁ 
a
ﬁﬁ 
;
ﬁﬁ 
Vector3
ﬂﬂ 
am
ﬂﬂ 
=
ﬂﬂ 
m
ﬂﬂ 
-
ﬂﬂ 
a
ﬂﬂ 
;
ﬂﬂ 
Vector3
‡‡ 
bc
‡‡ 
=
‡‡ 
c
‡‡ 
-
‡‡ 
b
‡‡ 
;
‡‡ 
Vector3
·· 
bm
·· 
=
·· 
m
·· 
-
·· 
b
·· 
;
·· 
float
„„ 
abamDot
„„ 
=
„„ 
Vector3
„„ #
.
„„# $
Dot
„„$ '
(
„„' (
ab
„„( *
,
„„* +
am
„„, .
)
„„. /
;
„„/ 0
float
‰‰ 
bcbmDot
‰‰ 
=
‰‰ 
Vector3
‰‰ #
.
‰‰# $
Dot
‰‰$ '
(
‰‰' (
bc
‰‰( *
,
‰‰* +
bm
‰‰, .
)
‰‰. /
;
‰‰/ 0
return
ÊÊ 
$num
ÊÊ 
<=
ÊÊ 
abamDot
ÊÊ 
&&
ÊÊ  "
abamDot
ÊÊ# *
<=
ÊÊ+ -
Vector3
ÊÊ. 5
.
ÊÊ5 6
Dot
ÊÊ6 9
(
ÊÊ9 :
ab
ÊÊ: <
,
ÊÊ< =
ab
ÊÊ> @
)
ÊÊ@ A
&&
ÊÊB D
$num
ÊÊE F
<=
ÊÊG I
bcbmDot
ÊÊJ Q
&&
ÊÊR T
bcbmDot
ÊÊU \
<=
ÊÊ] _
Vector3
ÊÊ` g
.
ÊÊg h
Dot
ÊÊh k
(
ÊÊk l
bc
ÊÊl n
,
ÊÊn o
bc
ÊÊp r
)
ÊÊr s
;
ÊÊs t
}
ÁÁ 	
public
ÚÚ 
static
ÚÚ 
bool
ÚÚ 0
"ScreenPointToWorldPointInRectangle
ÚÚ =
(
ÚÚ= >
	Transform
ÚÚ> G
	transform
ÚÚH Q
,
ÚÚQ R
Vector2
ÚÚS Z
screenPoint
ÚÚ[ f
,
ÚÚf g
Camera
ÚÚh n
cam
ÚÚo r
,
ÚÚr s
out
ÚÚt w
Vector3
ÚÚx 

worldPointÚÚÄ ä
)ÚÚä ã
{
ÛÛ 	

worldPoint
ÙÙ 
=
ÙÙ 
(
ÙÙ 
Vector3
ÙÙ !
)
ÙÙ! "
Vector2
ÙÙ" )
.
ÙÙ) *
zero
ÙÙ* .
;
ÙÙ. /
Ray
ıı 
ray
ıı 
=
ıı "
RectTransformUtility
ıı *
.
ıı* +
ScreenPointToRay
ıı+ ;
(
ıı; <
cam
ıı< ?
,
ıı? @
screenPoint
ııA L
)
ııL M
;
ııM N
float
˜˜ 
enter
˜˜ 
;
˜˜ 
if
¯¯ 
(
¯¯ 
!
¯¯ 
new
¯¯ 
Plane
¯¯ 
(
¯¯ 
	transform
¯¯ $
.
¯¯$ %
rotation
¯¯% -
*
¯¯. /
Vector3
¯¯0 7
.
¯¯7 8
back
¯¯8 <
,
¯¯< =
	transform
¯¯> G
.
¯¯G H
position
¯¯H P
)
¯¯P Q
.
¯¯Q R
Raycast
¯¯R Y
(
¯¯Y Z
ray
¯¯Z ]
,
¯¯] ^
out
¯¯_ b
enter
¯¯c h
)
¯¯h i
)
¯¯i j
return
˘˘ 
false
˘˘ 
;
˘˘ 

worldPoint
˚˚ 
=
˚˚ 
ray
˚˚ 
.
˚˚ 
GetPoint
˚˚ %
(
˚˚% &
enter
˚˚& +
)
˚˚+ ,
;
˚˚, -
return
˝˝ 
true
˝˝ 
;
˝˝ 
}
˛˛ 	
private
ÅÅ 
struct
ÅÅ 
LineSegment
ÅÅ "
{
ÇÇ 	
public
ÉÉ 
Vector3
ÉÉ 
Point1
ÉÉ !
;
ÉÉ! "
public
ÑÑ 
Vector3
ÑÑ 
Point2
ÑÑ !
;
ÑÑ! "
public
ÜÜ 
LineSegment
ÜÜ 
(
ÜÜ 
Vector3
ÜÜ &
p1
ÜÜ' )
,
ÜÜ) *
Vector3
ÜÜ+ 2
p2
ÜÜ3 5
)
ÜÜ5 6
{
áá 
Point1
àà 
=
àà 
p1
àà 
;
àà 
Point2
ââ 
=
ââ 
p2
ââ 
;
ââ 
}
ää 
}
ãã 	
private
ññ 
static
ññ 
bool
ññ  
IntersectLinePlane
ññ .
(
ññ. /
LineSegment
ññ/ :
line
ññ; ?
,
ññ? @
Vector3
ññA H
point
ññI N
,
ññN O
Vector3
ññP W
normal
ññX ^
,
ññ^ _
out
ññ` c
Vector3
ññd k
intersectingPoint
ññl }
)
ññ} ~
{
óó 	
intersectingPoint
òò 
=
òò 
Vector3
òò  '
.
òò' (
zero
òò( ,
;
òò, -
Vector3
ôô 
u
ôô 
=
ôô 
line
ôô 
.
ôô 
Point2
ôô #
-
ôô$ %
line
ôô& *
.
ôô* +
Point1
ôô+ 1
;
ôô1 2
Vector3
öö 
w
öö 
=
öö 
line
öö 
.
öö 
Point1
öö #
-
öö$ %
point
öö& +
;
öö+ ,
float
úú 
D
úú 
=
úú 
Vector3
úú 
.
úú 
Dot
úú !
(
úú! "
normal
úú" (
,
úú( )
u
úú* +
)
úú+ ,
;
úú, -
float
ùù 
N
ùù 
=
ùù 
-
ùù 
Vector3
ùù 
.
ùù 
Dot
ùù "
(
ùù" #
normal
ùù# )
,
ùù) *
w
ùù+ ,
)
ùù, -
;
ùù- .
if
üü 
(
üü 
Mathf
üü 
.
üü 
Abs
üü 
(
üü 
D
üü 
)
üü 
<
üü 
Mathf
üü $
.
üü$ %
Epsilon
üü% ,
)
üü, -
{
†† 
if
°° 
(
°° 
N
°° 
==
°° 
$num
°° 
)
°° 
return
¢¢ 
true
¢¢ 
;
¢¢  
else
££ 
return
§§ 
false
§§  
;
§§  !
}
•• 
float
ßß 
sI
ßß 
=
ßß 
N
ßß 
/
ßß 
D
ßß 
;
ßß 
if
©© 
(
©© 
sI
©© 
<
©© 
$num
©© 
||
©© 
sI
©© 
>
©© 
$num
©©  
)
©©  !
return
™™ 
false
™™ 
;
™™ 
intersectingPoint
¨¨ 
=
¨¨ 
line
¨¨  $
.
¨¨$ %
Point1
¨¨% +
+
¨¨, -
sI
¨¨. 0
*
¨¨1 2
u
¨¨3 4
;
¨¨4 5
return
ÆÆ 
true
ÆÆ 
;
ÆÆ 
}
ØØ 	
public
ππ 
static
ππ 
float
ππ 
DistanceToLine
ππ *
(
ππ* +
Vector3
ππ+ 2
a
ππ3 4
,
ππ4 5
Vector3
ππ6 =
b
ππ> ?
,
ππ? @
Vector3
ππA H
point
ππI N
)
ππN O
{
∫∫ 	
Vector3
ªª 
n
ªª 
=
ªª 
b
ªª 
-
ªª 
a
ªª 
;
ªª 
Vector3
ºº 
pa
ºº 
=
ºº 
a
ºº 
-
ºº 
point
ºº "
;
ºº" #
float
ææ 
c
ææ 
=
ææ 
Vector3
ææ 
.
ææ 
Dot
ææ !
(
ææ! "
n
ææ# $
,
ææ$ %
pa
ææ& (
)
ææ) *
;
ææ* +
if
¡¡ 
(
¡¡ 
c
¡¡ 
>
¡¡ 
$num
¡¡ 
)
¡¡ 
return
¬¬ 
Vector3
¬¬ 
.
¬¬ 
Dot
¬¬ "
(
¬¬" #
pa
¬¬$ &
,
¬¬& '
pa
¬¬( *
)
¬¬+ ,
;
¬¬, -
Vector3
ƒƒ 
bp
ƒƒ 
=
ƒƒ 
point
ƒƒ 
-
ƒƒ  
b
ƒƒ! "
;
ƒƒ" #
if
«« 
(
«« 
Vector3
«« 
.
«« 
Dot
«« 
(
«« 
n
«« 
,
«« 
bp
««  "
)
««# $
>
««% &
$num
««' +
)
««, -
return
»» 
Vector3
»» 
.
»» 
Dot
»» "
(
»»" #
bp
»»$ &
,
»»& '
bp
»»( *
)
»»+ ,
;
»», -
Vector3
ÀÀ 
e
ÀÀ 
=
ÀÀ 
pa
ÀÀ 
-
ÀÀ 
n
ÀÀ 
*
ÀÀ  
(
ÀÀ! "
c
ÀÀ" #
/
ÀÀ$ %
Vector3
ÀÀ& -
.
ÀÀ- .
Dot
ÀÀ. 1
(
ÀÀ1 2
n
ÀÀ3 4
,
ÀÀ4 5
n
ÀÀ6 7
)
ÀÀ8 9
)
ÀÀ9 :
;
ÀÀ: ;
return
ÕÕ 
Vector3
ÕÕ 
.
ÕÕ 
Dot
ÕÕ 
(
ÕÕ 
e
ÕÕ  !
,
ÕÕ! "
e
ÕÕ# $
)
ÕÕ% &
;
ÕÕ& '
}
ŒŒ 	
const
˜˜ 
string
˜˜ 
k_lookupStringL
˜˜ $
=
˜˜% &
$str˜˜' ©
;˜˜© ™
const
¸¸ 
string
¸¸ 
k_lookupStringU
¸¸ $
=
¸¸% &
$str¸¸' ©
;¸¸© ™
public
ÇÇ 
static
ÇÇ 
char
ÇÇ 
ToLowerFast
ÇÇ &
(
ÇÇ& '
char
ÇÇ' +
c
ÇÇ, -
)
ÇÇ- .
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
c
ÑÑ 
>
ÑÑ 
k_lookupStringL
ÑÑ #
.
ÑÑ# $
Length
ÑÑ$ *
-
ÑÑ+ ,
$num
ÑÑ- .
)
ÑÑ. /
return
ÖÖ 
c
ÖÖ 
;
ÖÖ 
return
áá 
k_lookupStringL
áá "
[
áá" #
c
áá# $
]
áá$ %
;
áá% &
}
àà 	
public
çç 
static
çç 
char
çç 
ToUpperFast
çç &
(
çç& '
char
çç' +
c
çç, -
)
çç- .
{
éé 	
if
èè 
(
èè 
c
èè 
>
èè 
k_lookupStringU
èè #
.
èè# $
Length
èè$ *
-
èè+ ,
$num
èè- .
)
èè. /
return
êê 
c
êê 
;
êê 
return
íí 
k_lookupStringU
íí "
[
íí" #
c
íí# $
]
íí$ %
;
íí% &
}
ìì 	
internal
òò 
static
òò 
uint
òò 
ToUpperASCIIFast
òò -
(
òò- .
uint
òò. 2
c
òò3 4
)
òò4 5
{
ôô 	
if
öö 
(
öö 
c
öö 
>
öö 
k_lookupStringU
öö #
.
öö# $
Length
öö$ *
-
öö+ ,
$num
öö- .
)
öö. /
return
õõ 
c
õõ 
;
õõ 
return
ùù 
k_lookupStringU
ùù "
[
ùù" #
(
ùù# $
int
ùù$ '
)
ùù' (
c
ùù( )
]
ùù) *
;
ùù* +
}
ûû 	
public
•• 
static
•• 
int
•• 
GetHashCode
•• %
(
••% &
string
••& ,
s
••- .
)
••. /
{
¶¶ 	
int
ßß 
hashCode
ßß 
=
ßß 
$num
ßß 
;
ßß 
for
©© 
(
©© 
int
©© 
i
©© 
=
©© 
$num
©© 
;
©© 
i
©© 
<
©© 
s
©©  !
.
©©! "
Length
©©" (
;
©©( )
i
©©* +
++
©©+ -
)
©©- .
hashCode
™™ 
=
™™ 
(
™™ 
(
™™ 
hashCode
™™ %
<<
™™& (
$num
™™) *
)
™™* +
+
™™, -
hashCode
™™. 6
)
™™6 7
^
™™8 9
ToUpperFast
™™: E
(
™™E F
s
™™F G
[
™™G H
i
™™H I
]
™™I J
)
™™J K
;
™™K L
return
¨¨ 
hashCode
¨¨ 
;
¨¨ 
}
≠≠ 	
public
≥≥ 
static
≥≥ 
int
≥≥ 
GetSimpleHashCode
≥≥ +
(
≥≥+ ,
string
≥≥, 2
s
≥≥3 4
)
≥≥4 5
{
¥¥ 	
int
µµ 
hashCode
µµ 
=
µµ 
$num
µµ 
;
µµ 
for
∑∑ 
(
∑∑ 
int
∑∑ 
i
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
i
∑∑ 
<
∑∑ 
s
∑∑  !
.
∑∑! "
Length
∑∑" (
;
∑∑( )
i
∑∑* +
++
∑∑+ -
)
∑∑- .
hashCode
∏∏ 
=
∏∏ 
(
∏∏ 
(
∏∏ 
hashCode
∏∏ %
<<
∏∏& (
$num
∏∏) *
)
∏∏* +
+
∏∏, -
hashCode
∏∏. 6
)
∏∏6 7
^
∏∏8 9
s
∏∏: ;
[
∏∏; <
i
∏∏< =
]
∏∏= >
;
∏∏> ?
return
∫∫ 
hashCode
∫∫ 
;
∫∫ 
}
ªª 	
public
¡¡ 
static
¡¡ 
uint
¡¡ (
GetSimpleHashCodeLowercase
¡¡ 5
(
¡¡5 6
string
¡¡6 <
s
¡¡= >
)
¡¡> ?
{
¬¬ 	
uint
√√ 
hashCode
√√ 
=
√√ 
$num
√√  
;
√√  !
for
≈≈ 
(
≈≈ 
int
≈≈ 
i
≈≈ 
=
≈≈ 
$num
≈≈ 
;
≈≈ 
i
≈≈ 
<
≈≈ 
s
≈≈  !
.
≈≈! "
Length
≈≈" (
;
≈≈( )
i
≈≈* +
++
≈≈+ -
)
≈≈- .
hashCode
∆∆ 
=
∆∆ 
(
∆∆ 
hashCode
∆∆ $
<<
∆∆% '
$num
∆∆( )
)
∆∆) *
+
∆∆+ ,
hashCode
∆∆- 5
^
∆∆6 7
ToLowerFast
∆∆8 C
(
∆∆C D
s
∆∆D E
[
∆∆E F
i
∆∆F G
]
∆∆G H
)
∆∆H I
;
∆∆I J
return
»» 
hashCode
»» 
;
»» 
}
…… 	
public
—— 
static
—— 
int
—— 
HexToInt
—— "
(
——" #
char
——# '
hex
——( +
)
——+ ,
{
““ 	
switch
”” 
(
”” 
hex
”” 
)
”” 
{
‘‘ 
case
’’ 
$char
’’ 
:
’’ 
return
’’  
$num
’’! "
;
’’" #
case
÷÷ 
$char
÷÷ 
:
÷÷ 
return
÷÷  
$num
÷÷! "
;
÷÷" #
case
◊◊ 
$char
◊◊ 
:
◊◊ 
return
◊◊  
$num
◊◊! "
;
◊◊" #
case
ÿÿ 
$char
ÿÿ 
:
ÿÿ 
return
ÿÿ  
$num
ÿÿ! "
;
ÿÿ" #
case
ŸŸ 
$char
ŸŸ 
:
ŸŸ 
return
ŸŸ  
$num
ŸŸ! "
;
ŸŸ" #
case
⁄⁄ 
$char
⁄⁄ 
:
⁄⁄ 
return
⁄⁄  
$num
⁄⁄! "
;
⁄⁄" #
case
€€ 
$char
€€ 
:
€€ 
return
€€  
$num
€€! "
;
€€" #
case
‹‹ 
$char
‹‹ 
:
‹‹ 
return
‹‹  
$num
‹‹! "
;
‹‹" #
case
›› 
$char
›› 
:
›› 
return
››  
$num
››! "
;
››" #
case
ﬁﬁ 
$char
ﬁﬁ 
:
ﬁﬁ 
return
ﬁﬁ  
$num
ﬁﬁ! "
;
ﬁﬁ" #
case
ﬂﬂ 
$char
ﬂﬂ 
:
ﬂﬂ 
return
ﬂﬂ  
$num
ﬂﬂ! #
;
ﬂﬂ# $
case
‡‡ 
$char
‡‡ 
:
‡‡ 
return
‡‡  
$num
‡‡! #
;
‡‡# $
case
·· 
$char
·· 
:
·· 
return
··  
$num
··! #
;
··# $
case
‚‚ 
$char
‚‚ 
:
‚‚ 
return
‚‚  
$num
‚‚! #
;
‚‚# $
case
„„ 
$char
„„ 
:
„„ 
return
„„  
$num
„„! #
;
„„# $
case
‰‰ 
$char
‰‰ 
:
‰‰ 
return
‰‰  
$num
‰‰! #
;
‰‰# $
case
ÂÂ 
$char
ÂÂ 
:
ÂÂ 
return
ÂÂ  
$num
ÂÂ! #
;
ÂÂ# $
case
ÊÊ 
$char
ÊÊ 
:
ÊÊ 
return
ÊÊ  
$num
ÊÊ! #
;
ÊÊ# $
case
ÁÁ 
$char
ÁÁ 
:
ÁÁ 
return
ÁÁ  
$num
ÁÁ! #
;
ÁÁ# $
case
ËË 
$char
ËË 
:
ËË 
return
ËË  
$num
ËË! #
;
ËË# $
case
ÈÈ 
$char
ÈÈ 
:
ÈÈ 
return
ÈÈ  
$num
ÈÈ! #
;
ÈÈ# $
case
ÍÍ 
$char
ÍÍ 
:
ÍÍ 
return
ÍÍ  
$num
ÍÍ! #
;
ÍÍ# $
}
ÎÎ 
return
ÏÏ 
$num
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
public
ıı 
static
ıı 
int
ıı 
StringHexToInt
ıı (
(
ıı( )
string
ıı) /
s
ıı0 1
)
ıı1 2
{
ˆˆ 	
int
˜˜ 
value
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
for
˘˘ 
(
˘˘ 
int
˘˘ 
i
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
i
˘˘ 
<
˘˘ 
s
˘˘  !
.
˘˘! "
Length
˘˘" (
;
˘˘( )
i
˘˘* +
++
˘˘+ -
)
˘˘- .
{
˙˙ 
value
˚˚ 
+=
˚˚ 
HexToInt
˚˚ !
(
˚˚! "
s
˚˚" #
[
˚˚# $
i
˚˚$ %
]
˚˚% &
)
˚˚& '
*
˚˚( )
(
˚˚* +
int
˚˚+ .
)
˚˚. /
Mathf
˚˚/ 4
.
˚˚4 5
Pow
˚˚5 8
(
˚˚8 9
$num
˚˚9 ;
,
˚˚; <
(
˚˚= >
s
˚˚> ?
.
˚˚? @
Length
˚˚@ F
-
˚˚G H
$num
˚˚I J
)
˚˚J K
-
˚˚L M
i
˚˚N O
)
˚˚O P
;
˚˚P Q
}
¸¸ 
return
˛˛ 
value
˛˛ 
;
˛˛ 
}
ˇˇ 	
}
ÅÅ 
}ÇÇ œ
dC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_SpriteGlyph.cs
	namespace 	
TMPro
 
{ 
[

 
Serializable

 
]

 
public 

class 
TMP_SpriteGlyph  
:! "
Glyph# (
{ 
public 
Sprite 
sprite 
; 
public 
TMP_SpriteGlyph 
( 
)  
{! "
}# $
public!! 
TMP_SpriteGlyph!! 
(!! 
uint!! #
index!!$ )
,!!) *
GlyphMetrics!!+ 7
metrics!!8 ?
,!!? @
	GlyphRect!!A J
	glyphRect!!K T
,!!T U
float!!V [
scale!!\ a
,!!a b
int!!c f

atlasIndex!!g q
)!!q r
{"" 	
this## 
.## 
index## 
=## 
index## 
;## 
this$$ 
.$$ 
metrics$$ 
=$$ 
metrics$$ "
;$$" #
this%% 
.%% 
	glyphRect%% 
=%% 
	glyphRect%% &
;%%& '
this&& 
.&& 
scale&& 
=&& 
scale&& 
;&& 
this'' 
.'' 

atlasIndex'' 
='' 

atlasIndex'' (
;''( )
}(( 	
public33 
TMP_SpriteGlyph33 
(33 
uint33 #
index33$ )
,33) *
GlyphMetrics33+ 7
metrics338 ?
,33? @
	GlyphRect33A J
	glyphRect33K T
,33T U
float33V [
scale33\ a
,33a b
int33c f

atlasIndex33g q
,33q r
Sprite33s y
sprite	33z Ä
)
33Ä Å
{44 	
this55 
.55 
index55 
=55 
index55 
;55 
this66 
.66 
metrics66 
=66 
metrics66 "
;66" #
this77 
.77 
	glyphRect77 
=77 
	glyphRect77 &
;77& '
this88 
.88 
scale88 
=88 
scale88 
;88 
this99 
.99 

atlasIndex99 
=99 

atlasIndex99 (
;99( )
this:: 
.:: 
sprite:: 
=:: 
sprite::  
;::  !
};; 	
}<< 
}== ï
fC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\ITextPreProcessor.cs
	namespace 	
TMPro
 
{ 
public 

	interface 
ITextPreprocessor &
{		 
string 
PreprocessText 
( 
string $
text% )
)) *
;* +
} 
} ´¶
hC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMPro_MeshUtilities.cs
	namespace 	
TMPro
 
{ 
public 

enum %
TMP_VertexDataUpdateFlags )
{ 
None 
= 
$num 
, 
Vertices 
= 
$num 
, 
Uv0 
= 
$num 
, 
Uv2 
= 
$num 
, 
Uv4 
= 
$num 
, 
Colors32 
= 
$num 
, 
All 
= 
$num 
} 
; 
[GG 
SerializableGG 
]GG 
publicHH 

structHH 
VertexGradientHH  
{II 
publicJJ 
ColorJJ 
topLeftJJ 
;JJ 
publicKK 
ColorKK 
topRightKK 
;KK 
publicLL 
ColorLL 

bottomLeftLL 
;LL  
publicMM 
ColorMM 
bottomRightMM  
;MM  !
publicOO 
VertexGradientOO 
(OO 
ColorOO $
colorOO% *
)OO* +
{PP 	
thisQQ 
.QQ 
topLeftQQ 
=QQ 
colorQQ  
;QQ  !
thisRR 
.RR 
topRightRR 
=RR 
colorRR !
;RR! "
thisSS 
.SS 

bottomLeftSS 
=SS 
colorSS #
;SS# $
thisTT 
.TT 
bottomRightTT 
=TT 
colorTT $
;TT$ %
}UU 	
public^^ 
VertexGradient^^ 
(^^ 
Color^^ #
color0^^$ *
,^^* +
Color^^, 1
color1^^2 8
,^^8 9
Color^^: ?
color2^^@ F
,^^F G
Color^^H M
color3^^N T
)^^T U
{__ 	
this`` 
.`` 
topLeft`` 
=`` 
color0`` !
;``! "
thisaa 
.aa 
topRightaa 
=aa 
color1aa "
;aa" #
thisbb 
.bb 

bottomLeftbb 
=bb 
color2bb $
;bb$ %
thiscc 
.cc 
bottomRightcc 
=cc 
color3cc %
;cc% &
}dd 	
}ee 
publichh 

structhh 
TMP_PageInfohh 
{ii 
publicjj 
intjj 
firstCharacterIndexjj &
;jj& '
publickk 
intkk 
lastCharacterIndexkk %
;kk% &
publicll 
floatll 
ascenderll 
;ll 
publicmm 
floatmm 
baseLinemm 
;mm 
publicnn 
floatnn 
	descendernn 
;nn 
}pp 
publicvv 

structvv 
TMP_LinkInfovv 
{ww 
publicxx 
TMP_Textxx 
textComponentxx %
;xx% &
publiczz 
intzz 
hashCodezz 
;zz 
public|| 
int|| %
linkIdFirstCharacterIndex|| ,
;||, -
public}} 
int}} 
linkIdLength}} 
;}}  
public~~ 
int~~ '
linkTextfirstCharacterIndex~~ .
;~~. /
public 
int 
linkTextLength !
;! "
internal
ÅÅ 
char
ÅÅ 
[
ÅÅ 
]
ÅÅ 
linkID
ÅÅ 
;
ÅÅ 
internal
ÑÑ 
void
ÑÑ 
	SetLinkID
ÑÑ 
(
ÑÑ  
char
ÑÑ  $
[
ÑÑ$ %
]
ÑÑ% &
text
ÑÑ' +
,
ÑÑ+ ,
int
ÑÑ- 0

startIndex
ÑÑ1 ;
,
ÑÑ; <
int
ÑÑ= @
length
ÑÑA G
)
ÑÑG H
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
linkID
ÜÜ 
==
ÜÜ 
null
ÜÜ 
||
ÜÜ !
linkID
ÜÜ" (
.
ÜÜ( )
Length
ÜÜ) /
<
ÜÜ0 1
length
ÜÜ2 8
)
ÜÜ8 9
linkID
ÜÜ: @
=
ÜÜA B
new
ÜÜC F
char
ÜÜG K
[
ÜÜK L
length
ÜÜL R
]
ÜÜR S
;
ÜÜS T
for
àà 
(
àà 
int
àà 
i
àà 
=
àà 
$num
àà 
;
àà 
i
àà 
<
àà 
length
àà  &
;
àà& '
i
àà( )
++
àà) +
)
àà+ ,
linkID
ââ 
[
ââ 
i
ââ 
]
ââ 
=
ââ 
text
ââ  
[
ââ  !

startIndex
ââ! +
+
ââ, -
i
ââ. /
]
ââ/ 0
;
ââ0 1
}
ää 	
public
ëë 
string
ëë 
GetLinkText
ëë !
(
ëë! "
)
ëë" #
{
íí 	
string
ìì 
text
ìì 
=
ìì 
string
ìì  
.
ìì  !
Empty
ìì! &
;
ìì& '
TMP_TextInfo
îî 
textInfo
îî !
=
îî" #
textComponent
îî$ 1
.
îî1 2
textInfo
îî2 :
;
îî: ;
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ )
linkTextfirstCharacterIndex
ññ 4
;
ññ4 5
i
ññ6 7
<
ññ8 9)
linkTextfirstCharacterIndex
ññ: U
+
ññV W
linkTextLength
ññX f
;
ññf g
i
ññh i
++
ññi k
)
ññk l
text
óó 
+=
óó 
textInfo
óó  
.
óó  !
characterInfo
óó! .
[
óó. /
i
óó/ 0
]
óó0 1
.
óó1 2
	character
óó2 ;
;
óó; <
return
ôô 
text
ôô 
;
ôô 
}
öö 	
public
¢¢ 
string
¢¢ 
	GetLinkID
¢¢ 
(
¢¢  
)
¢¢  !
{
££ 	
if
§§ 
(
§§ 
textComponent
§§ 
==
§§  
null
§§! %
)
§§% &
return
•• 
string
•• 
.
•• 
Empty
•• #
;
••# $
return
ßß 
new
ßß 
string
ßß 
(
ßß 
linkID
ßß $
,
ßß$ %
$num
ßß& '
,
ßß' (
linkIdLength
ßß) 5
)
ßß5 6
;
ßß6 7
}
™™ 	
}
´´ 
public
±± 

struct
±± 
TMP_WordInfo
±± 
{
≤≤ 
public
µµ 
TMP_Text
µµ 
textComponent
µµ %
;
µµ% &
public
∑∑ 
int
∑∑ !
firstCharacterIndex
∑∑ &
;
∑∑& '
public
∏∏ 
int
∏∏  
lastCharacterIndex
∏∏ %
;
∏∏% &
public
ππ 
int
ππ 
characterCount
ππ !
;
ππ! "
public
¿¿ 
string
¿¿ 
GetWord
¿¿ 
(
¿¿ 
)
¿¿ 
{
¡¡ 	
string
¬¬ 
word
¬¬ 
=
¬¬ 
string
¬¬  
.
¬¬  !
Empty
¬¬! &
;
¬¬& '
TMP_CharacterInfo
√√ 
[
√√ 
]
√√ 
charInfo
√√  (
=
√√) *
textComponent
√√+ 8
.
√√8 9
textInfo
√√9 A
.
√√A B
characterInfo
√√B O
;
√√O P
for
≈≈ 
(
≈≈ 
int
≈≈ 
i
≈≈ 
=
≈≈ !
firstCharacterIndex
≈≈ ,
;
≈≈, -
i
≈≈. /
<
≈≈0 1 
lastCharacterIndex
≈≈2 D
+
≈≈E F
$num
≈≈G H
;
≈≈H I
i
≈≈J K
++
≈≈K M
)
≈≈M N
{
∆∆ 
word
«« 
+=
«« 
charInfo
««  
[
««  !
i
««! "
]
««" #
.
««# $
	character
««$ -
;
««- .
}
»» 
return
   
word
   
;
   
}
ÀÀ 	
}
ÃÃ 
public
œœ 

struct
œœ 
TMP_SpriteInfo
œœ  
{
–– 
public
—— 
int
—— 
spriteIndex
—— 
;
—— 
public
““ 
int
““ 
characterIndex
““ !
;
““! "
public
”” 
int
”” 
vertexIndex
”” 
;
”” 
}
‘‘ 
public
›› 

struct
›› 
Extents
›› 
{
ﬁﬁ 
internal
ﬂﬂ 
static
ﬂﬂ 
Extents
ﬂﬂ 
zero
ﬂﬂ  $
=
ﬂﬂ% &
new
ﬂﬂ' *
Extents
ﬂﬂ+ 2
(
ﬂﬂ2 3
Vector2
ﬂﬂ3 :
.
ﬂﬂ: ;
zero
ﬂﬂ; ?
,
ﬂﬂ? @
Vector2
ﬂﬂA H
.
ﬂﬂH I
zero
ﬂﬂI M
)
ﬂﬂM N
;
ﬂﬂN O
internal
‡‡ 
static
‡‡ 
Extents
‡‡ 
uninitialized
‡‡  -
=
‡‡. /
new
‡‡0 3
Extents
‡‡4 ;
(
‡‡; <
new
‡‡< ?
Vector2
‡‡@ G
(
‡‡G H
$num
‡‡H M
,
‡‡M N
$num
‡‡O T
)
‡‡T U
,
‡‡U V
new
‡‡W Z
Vector2
‡‡[ b
(
‡‡b c
-
‡‡c d
$num
‡‡d i
,
‡‡i j
-
‡‡k l
$num
‡‡l q
)
‡‡q r
)
‡‡r s
;
‡‡s t
public
‚‚ 
Vector2
‚‚ 
min
‚‚ 
;
‚‚ 
public
„„ 
Vector2
„„ 
max
„„ 
;
„„ 
public
ÂÂ 
Extents
ÂÂ 
(
ÂÂ 
Vector2
ÂÂ 
min
ÂÂ "
,
ÂÂ" #
Vector2
ÂÂ$ +
max
ÂÂ, /
)
ÂÂ/ 0
{
ÊÊ 	
this
ÁÁ 
.
ÁÁ 
min
ÁÁ 
=
ÁÁ 
min
ÁÁ 
;
ÁÁ 
this
ËË 
.
ËË 
max
ËË 
=
ËË 
max
ËË 
;
ËË 
}
ÈÈ 	
public
ÎÎ 
override
ÎÎ 
string
ÎÎ 
ToString
ÎÎ '
(
ÎÎ' (
)
ÎÎ( )
{
ÏÏ 	
string
ÌÌ 
s
ÌÌ 
=
ÌÌ 
$str
ÌÌ 
+
ÌÌ  
min
ÌÌ! $
.
ÌÌ$ %
x
ÌÌ% &
.
ÌÌ& '
ToString
ÌÌ' /
(
ÌÌ/ 0
$str
ÌÌ0 4
)
ÌÌ4 5
+
ÌÌ6 7
$str
ÌÌ8 <
+
ÌÌ= >
min
ÌÌ? B
.
ÌÌB C
y
ÌÌC D
.
ÌÌD E
ToString
ÌÌE M
(
ÌÌM N
$str
ÌÌN R
)
ÌÌR S
+
ÌÌT U
$str
ÌÌV a
+
ÌÌb c
max
ÌÌd g
.
ÌÌg h
x
ÌÌh i
.
ÌÌi j
ToString
ÌÌj r
(
ÌÌr s
$str
ÌÌs w
)
ÌÌw x
+
ÌÌy z
$str
ÌÌ{ 
+ÌÌÄ Å
maxÌÌÇ Ö
.ÌÌÖ Ü
yÌÌÜ á
.ÌÌá à
ToStringÌÌà ê
(ÌÌê ë
$strÌÌë ï
)ÌÌï ñ
+ÌÌó ò
$strÌÌô ú
;ÌÌú ù
return
ÓÓ 
s
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
}
 
[
ÛÛ 
Serializable
ÛÛ 
]
ÛÛ 
public
ÙÙ 

struct
ÙÙ 
Mesh_Extents
ÙÙ 
{
ıı 
public
ˆˆ 
Vector2
ˆˆ 
min
ˆˆ 
;
ˆˆ 
public
˜˜ 
Vector2
˜˜ 
max
˜˜ 
;
˜˜ 
public
˙˙ 
Mesh_Extents
˙˙ 
(
˙˙ 
Vector2
˙˙ #
min
˙˙$ '
,
˙˙' (
Vector2
˙˙) 0
max
˙˙1 4
)
˙˙4 5
{
˚˚ 	
this
¸¸ 
.
¸¸ 
min
¸¸ 
=
¸¸ 
min
¸¸ 
;
¸¸ 
this
˝˝ 
.
˝˝ 
max
˝˝ 
=
˝˝ 
max
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÄÄ 
override
ÄÄ 
string
ÄÄ 
ToString
ÄÄ '
(
ÄÄ' (
)
ÄÄ( )
{
ÅÅ 	
string
ÇÇ 
s
ÇÇ 
=
ÇÇ 
$str
ÇÇ 
+
ÇÇ  
min
ÇÇ! $
.
ÇÇ$ %
x
ÇÇ% &
.
ÇÇ& '
ToString
ÇÇ' /
(
ÇÇ/ 0
$str
ÇÇ0 4
)
ÇÇ4 5
+
ÇÇ6 7
$str
ÇÇ8 <
+
ÇÇ= >
min
ÇÇ? B
.
ÇÇB C
y
ÇÇC D
.
ÇÇD E
ToString
ÇÇE M
(
ÇÇM N
$str
ÇÇN R
)
ÇÇR S
+
ÇÇT U
$str
ÇÇV a
+
ÇÇb c
max
ÇÇd g
.
ÇÇg h
x
ÇÇh i
.
ÇÇi j
ToString
ÇÇj r
(
ÇÇr s
$str
ÇÇs w
)
ÇÇw x
+
ÇÇy z
$str
ÇÇ{ 
+ÇÇÄ Å
maxÇÇÇ Ö
.ÇÇÖ Ü
yÇÇÜ á
.ÇÇá à
ToStringÇÇà ê
(ÇÇê ë
$strÇÇë ï
)ÇÇï ñ
+ÇÇó ò
$strÇÇô ú
;ÇÇú ù
return
ÑÑ 
s
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
}
ÜÜ 
public
⁄⁄ 

struct
⁄⁄ 
WordWrapState
⁄⁄ 
{
€€ 
public
‹‹ 
int
‹‹  
previous_WordBreak
‹‹ %
;
‹‹% &
public
›› 
int
›› "
total_CharacterCount
›› '
;
››' (
public
ﬁﬁ 
int
ﬁﬁ $
visible_CharacterCount
ﬁﬁ )
;
ﬁﬁ) *
public
ﬂﬂ 
int
ﬂﬂ !
visible_SpriteCount
ﬂﬂ &
;
ﬂﬂ& '
public
‡‡ 
int
‡‡ 
visible_LinkCount
‡‡ $
;
‡‡$ %
public
·· 
int
·· !
firstCharacterIndex
·· &
;
··& '
public
‚‚ 
int
‚‚ (
firstVisibleCharacterIndex
‚‚ -
;
‚‚- .
public
„„ 
int
„„  
lastCharacterIndex
„„ %
;
„„% &
public
‰‰ 
int
‰‰ "
lastVisibleCharIndex
‰‰ '
;
‰‰' (
public
ÂÂ 
int
ÂÂ 

lineNumber
ÂÂ 
;
ÂÂ 
public
ÁÁ 
float
ÁÁ 
maxCapHeight
ÁÁ !
;
ÁÁ! "
public
ËË 
float
ËË 
maxAscender
ËË  
;
ËË  !
public
ÈÈ 
float
ÈÈ 
maxDescender
ÈÈ !
;
ÈÈ! "
public
ÍÍ 
float
ÍÍ !
startOfLineAscender
ÍÍ (
;
ÍÍ( )
public
ÎÎ 
float
ÎÎ 
maxLineAscender
ÎÎ $
;
ÎÎ$ %
public
ÏÏ 
float
ÏÏ 
maxLineDescender
ÏÏ %
;
ÏÏ% &
public
ÌÌ 
float
ÌÌ 
pageAscender
ÌÌ !
;
ÌÌ! "
public
ÔÔ (
HorizontalAlignmentOptions
ÔÔ )!
horizontalAlignment
ÔÔ* =
;
ÔÔ= >
public
 
float
 

marginLeft
 
;
  
public
ÒÒ 
float
ÒÒ 
marginRight
ÒÒ  
;
ÒÒ  !
public
ÛÛ 
float
ÛÛ 
xAdvance
ÛÛ 
;
ÛÛ 
public
ÙÙ 
float
ÙÙ 
preferredWidth
ÙÙ #
;
ÙÙ# $
public
ıı 
float
ıı 
preferredHeight
ıı $
;
ıı$ %
public
˜˜ 
float
˜˜ 
previousLineScale
˜˜ &
;
˜˜& '
public
˘˘ 
int
˘˘ 
	wordCount
˘˘ 
;
˘˘ 
public
˙˙ 

FontStyles
˙˙ 
	fontStyle
˙˙ #
;
˙˙# $
public
˚˚ 
int
˚˚ 
italicAngle
˚˚ 
;
˚˚ 
public
¸¸ 
float
¸¸ !
fontScaleMultiplier
¸¸ (
;
¸¸( )
public
˛˛ 
float
˛˛ 
currentFontSize
˛˛ $
;
˛˛$ %
public
ˇˇ 
float
ˇˇ 
baselineOffset
ˇˇ #
;
ˇˇ# $
public
ÄÄ 
float
ÄÄ 

lineOffset
ÄÄ 
;
ÄÄ  
public
ÅÅ 
bool
ÅÅ !
isDrivenLineSpacing
ÅÅ '
;
ÅÅ' (
public
ÇÇ 
float
ÇÇ .
 glyphHorizontalAdvanceAdjustment
ÇÇ 5
;
ÇÇ5 6
public
ÑÑ 
float
ÑÑ 
cSpace
ÑÑ 
;
ÑÑ 
public
ÖÖ 
float
ÖÖ 
mSpace
ÖÖ 
;
ÖÖ 
public
áá 
TMP_TextInfo
áá 
textInfo
áá $
;
áá$ %
public
àà 
TMP_LineInfo
àà 
lineInfo
àà $
;
àà$ %
public
ää 
Color32
ää 
vertexColor
ää "
;
ää" #
public
ãã 
Color32
ãã 
underlineColor
ãã %
;
ãã% &
public
åå 
Color32
åå  
strikethroughColor
åå )
;
åå) *
public
çç 
Color32
çç 
highlightColor
çç %
;
çç% &
public
éé  
TMP_FontStyleStack
éé !
basicStyleStack
éé" 1
;
éé1 2
public
èè %
TMP_TextProcessingStack
èè &
<
èè& '
int
èè' *
>
èè* +
italicAngleStack
èè, <
;
èè< =
public
êê %
TMP_TextProcessingStack
êê &
<
êê& '
Color32
êê' .
>
êê. /

colorStack
êê0 :
;
êê: ;
public
ëë %
TMP_TextProcessingStack
ëë &
<
ëë& '
Color32
ëë' .
>
ëë. /!
underlineColorStack
ëë0 C
;
ëëC D
public
íí %
TMP_TextProcessingStack
íí &
<
íí& '
Color32
íí' .
>
íí. /%
strikethroughColorStack
íí0 G
;
ííG H
public
ìì %
TMP_TextProcessingStack
ìì &
<
ìì& '
Color32
ìì' .
>
ìì. /!
highlightColorStack
ìì0 C
;
ììC D
public
îî %
TMP_TextProcessingStack
îî &
<
îî& '
HighlightState
îî' 5
>
îî5 6!
highlightStateStack
îî7 J
;
îîJ K
public
ïï %
TMP_TextProcessingStack
ïï &
<
ïï& '
TMP_ColorGradient
ïï' 8
>
ïï8 9 
colorGradientStack
ïï: L
;
ïïL M
public
ññ %
TMP_TextProcessingStack
ññ &
<
ññ& '
float
ññ' ,
>
ññ, -
	sizeStack
ññ. 7
;
ññ7 8
public
óó %
TMP_TextProcessingStack
óó &
<
óó& '
float
óó' ,
>
óó, -
indentStack
óó. 9
;
óó9 :
public
òò %
TMP_TextProcessingStack
òò &
<
òò& '

FontWeight
òò' 1
>
òò1 2
fontWeightStack
òò3 B
;
òòB C
public
ôô %
TMP_TextProcessingStack
ôô &
<
ôô& '
int
ôô' *
>
ôô* +

styleStack
ôô, 6
;
ôô6 7
public
öö %
TMP_TextProcessingStack
öö &
<
öö& '
float
öö' ,
>
öö, -
baselineStack
öö. ;
;
öö; <
public
õõ %
TMP_TextProcessingStack
õõ &
<
õõ& '
int
õõ' *
>
õõ* +
actionStack
õõ, 7
;
õõ7 8
public
úú %
TMP_TextProcessingStack
úú &
<
úú& '
MaterialReference
úú' 8
>
úú8 9$
materialReferenceStack
úú: P
;
úúP Q
public
ùù %
TMP_TextProcessingStack
ùù &
<
ùù& '(
HorizontalAlignmentOptions
ùù' A
>
ùùA B$
lineJustificationStack
ùùC Y
;
ùùY Z
public
ûû 
int
ûû 
spriteAnimationID
ûû $
;
ûû$ %
public
†† 
TMP_FontAsset
†† 
currentFontAsset
†† -
;
††- .
public
°° 
TMP_SpriteAsset
°°  
currentSpriteAsset
°° 1
;
°°1 2
public
¢¢ 
Material
¢¢ 
currentMaterial
¢¢ '
;
¢¢' (
public
££ 
int
££ "
currentMaterialIndex
££ '
;
££' (
public
•• 
Extents
•• 
meshExtents
•• "
;
••" #
public
ßß 
bool
ßß 
tagNoParsing
ßß  
;
ßß  !
public
®® 
bool
®®  
isNonBreakingSpace
®® &
;
®®& '
}
©© 
public
ØØ 

struct
ØØ 
TagAttribute
ØØ 
{
∞∞ 
public
±± 
int
±± 

startIndex
±± 
;
±± 
public
≤≤ 
int
≤≤ 
length
≤≤ 
;
≤≤ 
public
≥≥ 
int
≥≥ 
hashCode
≥≥ 
;
≥≥ 
}
¥¥ 
public
∑∑ 

struct
∑∑ "
RichTextTagAttribute
∑∑ &
{
∏∏ 
public
ππ 
int
ππ 
nameHashCode
ππ 
;
ππ  
public
∫∫ 
int
∫∫ 
valueHashCode
∫∫  
;
∫∫  !
public
ªª 
TagValueType
ªª 
	valueType
ªª %
;
ªª% &
public
ºº 
int
ºº 
valueStartIndex
ºº "
;
ºº" #
public
ΩΩ 
int
ΩΩ 
valueLength
ΩΩ 
;
ΩΩ 
public
ææ 
TagUnitType
ææ 
unitType
ææ #
;
ææ# $
}
øø 
}¡¡ ¬p
fC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_CharacterInfo.cs
	namespace 	
TMPro
 
{ 
public 

struct 

TMP_Vertex 
{ 
public		 
Vector3		 
position		 
;		  
public

 
Vector2

 
uv

 
;

 
public 
Vector2 
uv2 
; 
public 
Vector2 
uv4 
; 
public 
Color32 
color 
; 
public 
static 

TMP_Vertex  
zero! %
{& '
get( +
{, -
return. 4
k_Zero5 ;
;; <
}= >
}? @
static 
readonly 

TMP_Vertex "
k_Zero# )
=* +
new, /

TMP_Vertex0 :
(: ;
); <
;< =
} 
public 

struct 

TMP_Offset 
{ 
public 
float 
left 
{ 
get 
{  !
return" (
m_Left) /
;/ 0
}1 2
set3 6
{7 8
m_Left9 ?
=@ A
valueB G
;G H
}I J
}K L
public 
float 
right 
{ 
get  
{! "
return# )
m_Right* 1
;1 2
}3 4
set5 8
{9 :
m_Right; B
=C D
valueE J
;J K
}L M
}N O
public   
float   
top   
{   
get   
{    
return  ! '
m_Top  ( -
;  - .
}  / 0
set  1 4
{  5 6
m_Top  7 <
=  = >
value  ? D
;  D E
}  F G
}  H I
public"" 
float"" 
bottom"" 
{"" 
get"" !
{""" #
return""$ *
m_Bottom""+ 3
;""3 4
}""5 6
set""7 :
{""; <
m_Bottom""= E
=""F G
value""H M
;""M N
}""O P
}""Q R
public$$ 
float$$ 

horizontal$$ 
{$$  !
get$$" %
{$$& '
return$$( .
m_Left$$/ 5
;$$5 6
}$$7 8
set$$9 <
{$$= >
m_Left$$? E
=$$F G
value$$H M
;$$M N
m_Right$$O V
=$$W X
value$$Y ^
;$$^ _
}$$` a
}$$b c
public&& 
float&& 
vertical&& 
{&& 
get&&  #
{&&$ %
return&&& ,
m_Top&&- 2
;&&2 3
}&&4 5
set&&6 9
{&&: ;
m_Top&&< A
=&&B C
value&&D I
;&&I J
m_Bottom&&K S
=&&T U
value&&V [
;&&[ \
}&&] ^
}&&_ `
public++ 
static++ 

TMP_Offset++  
zero++! %
{++& '
get++( +
{++, -
return++. 4
k_ZeroOffset++5 A
;++A B
}++C D
}++E F
float11 
m_Left11 
;11 
float22 
m_Right22 
;22 
float33 
m_Top33 
;33 
float44 
m_Bottom44 
;44 
static66 
readonly66 

TMP_Offset66 "
k_ZeroOffset66# /
=660 1
new662 5

TMP_Offset666 @
(66@ A
$num66A C
,66C D
$num66E G
,66G H
$num66I K
,66K L
$num66M O
)66O P
;66P Q
public?? 

TMP_Offset?? 
(?? 
float?? 
left??  $
,??$ %
float??& +
right??, 1
,??1 2
float??3 8
top??9 <
,??< =
float??> C
bottom??D J
)??J K
{@@ 	
m_LeftAA 
=AA 
leftAA 
;AA 
m_RightBB 
=BB 
rightBB 
;BB 
m_TopCC 
=CC 
topCC 
;CC 
m_BottomDD 
=DD 
bottomDD 
;DD 
}EE 	
publicLL 

TMP_OffsetLL 
(LL 
floatLL 

horizontalLL  *
,LL* +
floatLL, 1
verticalLL2 :
)LL: ;
{MM 	
m_LeftNN 
=NN 

horizontalNN 
;NN  
m_RightOO 
=OO 

horizontalOO  
;OO  !
m_TopPP 
=PP 
verticalPP 
;PP 
m_BottomQQ 
=QQ 
verticalQQ 
;QQ  
}RR 	
publicTT 
staticTT 
boolTT 
operatorTT #
==TT$ &
(TT& '

TMP_OffsetTT' 1
lhsTT2 5
,TT5 6

TMP_OffsetTT7 A
rhsTTB E
)TTE F
{UU 	
returnVV 
lhsVV 
.VV 
m_LeftVV 
==VV  
rhsVV! $
.VV$ %
m_LeftVV% +
&&VV, .
lhsWW 
.WW 
m_RightWW 
==WW  "
rhsWW# &
.WW& '
m_RightWW' .
&&WW/ 1
lhsXX 
.XX 
m_TopXX 
==XX  
rhsXX! $
.XX$ %
m_TopXX% *
&&XX+ -
lhsYY 
.YY 
m_BottomYY  
==YY! #
rhsYY$ '
.YY' (
m_BottomYY( 0
;YY0 1
}ZZ 	
public\\ 
static\\ 
bool\\ 
operator\\ #
!=\\$ &
(\\& '

TMP_Offset\\' 1
lhs\\2 5
,\\5 6

TMP_Offset\\7 A
rhs\\B E
)\\E F
{]] 	
return^^ 
!^^ 
(^^ 
lhs^^ 
==^^ 
rhs^^ 
)^^  
;^^  !
}__ 	
publicaa 
staticaa 

TMP_Offsetaa  
operatoraa! )
*aa* +
(aa+ ,

TMP_Offsetaa, 6
aaa7 8
,aa8 9
floataa: ?
baa@ A
)aaA B
{bb 	
returncc 
newcc 

TMP_Offsetcc !
(cc! "
acc" #
.cc# $
m_Leftcc$ *
*cc+ ,
bcc- .
,cc. /
acc0 1
.cc1 2
m_Rightcc2 9
*cc: ;
bcc< =
,cc= >
acc? @
.cc@ A
m_TopccA F
*ccG H
bccI J
,ccJ K
accL M
.ccM N
m_BottomccN V
*ccW X
bccY Z
)ccZ [
;cc[ \
}dd 	
publicff 
overrideff 
intff 
GetHashCodeff '
(ff' (
)ff( )
{gg 	
returnhh 
basehh 
.hh 
GetHashCodehh #
(hh# $
)hh$ %
;hh% &
}ii 	
publickk 
overridekk 
boolkk 
Equalskk #
(kk# $
objectkk$ *
objkk+ .
)kk. /
{ll 	
returnmm 
basemm 
.mm 
Equalsmm 
(mm 
objmm "
)mm" #
;mm# $
}nn 	
publicpp 
boolpp 
Equalspp 
(pp 

TMP_Offsetpp %
otherpp& +
)pp+ ,
{qq 	
returnrr 
baserr 
.rr 
Equalsrr 
(rr 
otherrr $
)rr$ %
;rr% &
}ss 	
}tt 
publiczz 

structzz 
HighlightStatezz  
{{{ 
public|| 
Color32|| 
color|| 
;|| 
public}} 

TMP_Offset}} 
padding}} !
;}}! "
public 
HighlightState 
( 
Color32 %
color& +
,+ ,

TMP_Offset- 7
padding8 ?
)? @
{
ÄÄ 	
this
ÅÅ 
.
ÅÅ 
color
ÅÅ 
=
ÅÅ 
color
ÅÅ 
;
ÅÅ 
this
ÇÇ 
.
ÇÇ 
padding
ÇÇ 
=
ÇÇ 
padding
ÇÇ "
;
ÇÇ" #
}
ÉÉ 	
public
ÖÖ 
static
ÖÖ 
bool
ÖÖ 
operator
ÖÖ #
==
ÖÖ$ &
(
ÖÖ& '
HighlightState
ÖÖ' 5
lhs
ÖÖ6 9
,
ÖÖ9 :
HighlightState
ÖÖ; I
rhs
ÖÖJ M
)
ÖÖM N
{
ÜÜ 	
return
áá 
lhs
áá 
.
áá 
color
áá 
.
áá 
Compare
áá $
(
áá$ %
rhs
áá% (
.
áá( )
color
áá) .
)
áá. /
&&
áá0 2
lhs
áá3 6
.
áá6 7
padding
áá7 >
==
áá? A
rhs
ááB E
.
ááE F
padding
ááF M
;
ááM N
}
àà 	
public
ää 
static
ää 
bool
ää 
operator
ää #
!=
ää$ &
(
ää& '
HighlightState
ää' 5
lhs
ää6 9
,
ää9 :
HighlightState
ää; I
rhs
ääJ M
)
ääM N
{
ãã 	
return
åå 
!
åå 
(
åå 
lhs
åå 
==
åå 
rhs
åå 
)
åå  
;
åå  !
}
çç 	
public
èè 
override
èè 
int
èè 
GetHashCode
èè '
(
èè' (
)
èè( )
{
êê 	
return
ëë 
base
ëë 
.
ëë 
GetHashCode
ëë #
(
ëë# $
)
ëë$ %
;
ëë% &
}
íí 	
public
îî 
override
îî 
bool
îî 
Equals
îî #
(
îî# $
object
îî$ *
obj
îî+ .
)
îî. /
{
ïï 	
return
ññ 
base
ññ 
.
ññ 
Equals
ññ 
(
ññ 
obj
ññ "
)
ññ" #
;
ññ# $
}
óó 	
public
ôô 
bool
ôô 
Equals
ôô 
(
ôô 
HighlightState
ôô )
other
ôô* /
)
ôô/ 0
{
öö 	
return
õõ 
base
õõ 
.
õõ 
Equals
õõ 
(
õõ 
other
õõ $
)
õõ$ %
;
õõ% &
}
úú 	
}
ùù 
[
°° 
DebuggerDisplay
°° 
(
°° 
$str
°° S
)
°°S T
]
°°T U
public
¢¢ 

struct
¢¢ 
TMP_CharacterInfo
¢¢ #
{
££ 
public
§§ 
char
§§ 
	character
§§ 
;
§§ 
public
®® 
int
®® 
index
®® 
;
®® 
public
©© 
int
©© 
stringLength
©© 
;
©©  
public
™™ !
TMP_TextElementType
™™ "
elementType
™™# .
;
™™. /
public
¨¨ 
TMP_TextElement
¨¨ 
textElement
¨¨ *
;
¨¨* +
public
≠≠ 
TMP_FontAsset
≠≠ 
	fontAsset
≠≠ &
;
≠≠& '
public
ÆÆ 
TMP_SpriteAsset
ÆÆ 
spriteAsset
ÆÆ *
;
ÆÆ* +
public
ØØ 
int
ØØ 
spriteIndex
ØØ 
;
ØØ 
public
∞∞ 
Material
∞∞ 
material
∞∞  
;
∞∞  !
public
±± 
int
±± $
materialReferenceIndex
±± )
;
±±) *
public
≤≤ 
bool
≤≤ &
isUsingAlternateTypeface
≤≤ ,
;
≤≤, -
public
¥¥ 
float
¥¥ 
	pointSize
¥¥ 
;
¥¥ 
public
∑∑ 
int
∑∑ 

lineNumber
∑∑ 
;
∑∑ 
public
ππ 
int
ππ 

pageNumber
ππ 
;
ππ 
public
ºº 
int
ºº 
vertexIndex
ºº 
;
ºº 
public
ΩΩ 

TMP_Vertex
ΩΩ 
	vertex_BL
ΩΩ #
;
ΩΩ# $
public
ææ 

TMP_Vertex
ææ 
	vertex_TL
ææ #
;
ææ# $
public
øø 

TMP_Vertex
øø 
	vertex_TR
øø #
;
øø# $
public
¿¿ 

TMP_Vertex
¿¿ 
	vertex_BR
¿¿ #
;
¿¿# $
public
¬¬ 
Vector3
¬¬ 
topLeft
¬¬ 
;
¬¬ 
public
√√ 
Vector3
√√ 

bottomLeft
√√ !
;
√√! "
public
ƒƒ 
Vector3
ƒƒ 
topRight
ƒƒ 
;
ƒƒ  
public
≈≈ 
Vector3
≈≈ 
bottomRight
≈≈ "
;
≈≈" #
public
«« 
float
«« 
origin
«« 
;
«« 
public
»» 
float
»» 
xAdvance
»» 
;
»» 
public
…… 
float
…… 
ascender
…… 
;
…… 
public
   
float
   
baseLine
   
;
   
public
ÀÀ 
float
ÀÀ 
	descender
ÀÀ 
;
ÀÀ 
internal
ÃÃ 
float
ÃÃ 
adjustedAscender
ÃÃ '
;
ÃÃ' (
internal
ÕÕ 
float
ÕÕ 
adjustedDescender
ÕÕ (
;
ÕÕ( )
public
œœ 
float
œœ 
aspectRatio
œœ  
;
œœ  !
public
–– 
float
–– 
scale
–– 
;
–– 
public
—— 
Color32
—— 
color
—— 
;
—— 
public
““ 
Color32
““ 
underlineColor
““ %
;
““% &
public
”” 
int
”” "
underlineVertexIndex
”” '
;
””' (
public
‘‘ 
Color32
‘‘  
strikethroughColor
‘‘ )
;
‘‘) *
public
’’ 
int
’’ &
strikethroughVertexIndex
’’ +
;
’’+ ,
public
÷÷ 
Color32
÷÷ 
highlightColor
÷÷ %
;
÷÷% &
public
◊◊ 
HighlightState
◊◊ 
highlightState
◊◊ ,
;
◊◊, -
public
ÿÿ 

FontStyles
ÿÿ 
style
ÿÿ 
;
ÿÿ  
public
ŸŸ 
bool
ŸŸ 
	isVisible
ŸŸ 
;
ŸŸ 
}
€€ 
}‹‹ ï0
cC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_StyleSheet.cs
	namespace 	
TMPro
 
{ 
[		 
Serializable		 
]		 
[		 &
ExcludeFromPresetAttribute		 -
]		- .
public

 

class

 
TMP_StyleSheet

 
:

  !
ScriptableObject

" 2
{ 
internal 
List 
< 
	TMP_Style 
>  
styles! '
{ 	
get 
{ 
return 
m_StyleList $
;$ %
}& '
} 	
[ 	
SerializeField	 
] 
private 
List 
< 
	TMP_Style 
> 
m_StyleList  +
=, -
new. 1
List2 6
<6 7
	TMP_Style7 @
>@ A
(A B
$numB C
)C D
;D E
private 

Dictionary 
< 
int 
, 
	TMP_Style  )
>) *#
m_StyleLookupDictionary+ B
;B C
private 
void 
Reset 
( 
) 
{ 	'
LoadStyleDictionaryInternal '
(' (
)( )
;) *
} 	
public"" 
	TMP_Style"" 
GetStyle"" !
(""! "
int""" %
hashCode""& .
)"". /
{## 	
if$$ 
($$ #
m_StyleLookupDictionary$$ '
==$$( *
null$$+ /
)$$/ 0'
LoadStyleDictionaryInternal%% +
(%%+ ,
)%%, -
;%%- .
	TMP_Style'' 
style'' 
;'' 
if)) 
()) #
m_StyleLookupDictionary)) '
.))' (
TryGetValue))( 3
())3 4
hashCode))4 <
,))< =
out))> A
style))B G
)))G H
)))H I
return** 
style** 
;** 
return,, 
null,, 
;,, 
}-- 	
public44 
	TMP_Style44 
GetStyle44 !
(44! "
string44" (
name44) -
)44- .
{55 	
if66 
(66 #
m_StyleLookupDictionary66 '
==66( *
null66+ /
)66/ 0'
LoadStyleDictionaryInternal77 +
(77+ ,
)77, -
;77- .
int99 
hashCode99 
=99 $
TMP_TextParsingUtilities99 3
.993 4
GetHashCode994 ?
(99? @
name99@ D
)99D E
;99E F
	TMP_Style:: 
style:: 
;:: 
if<< 
(<< #
m_StyleLookupDictionary<< '
.<<' (
TryGetValue<<( 3
(<<3 4
hashCode<<4 <
,<<< =
out<<> A
style<<B G
)<<G H
)<<H I
return== 
style== 
;== 
return?? 
null?? 
;?? 
}@@ 	
publicEE 
voidEE 
RefreshStylesEE !
(EE! "
)EE" #
{FF 	'
LoadStyleDictionaryInternalGG '
(GG' (
)GG( )
;GG) *
}HH 	
privateMM 
voidMM '
LoadStyleDictionaryInternalMM 0
(MM0 1
)MM1 2
{NN 	
ifOO 
(OO #
m_StyleLookupDictionaryOO '
==OO( *
nullOO+ /
)OO/ 0#
m_StyleLookupDictionaryPP '
=PP( )
newPP* -

DictionaryPP. 8
<PP8 9
intPP9 <
,PP< =
	TMP_StylePP> G
>PPG H
(PPH I
)PPI J
;PPJ K
elseQQ #
m_StyleLookupDictionaryRR '
.RR' (
ClearRR( -
(RR- .
)RR. /
;RR/ 0
forUU 
(UU 
intUU 
iUU 
=UU 
$numUU 
;UU 
iUU 
<UU 
m_StyleListUU  +
.UU+ ,
CountUU, 1
;UU1 2
iUU3 4
++UU4 6
)UU6 7
{VV 
m_StyleListWW 
[WW 
iWW 
]WW 
.WW 
RefreshStyleWW +
(WW+ ,
)WW, -
;WW- .
ifYY 
(YY 
!YY #
m_StyleLookupDictionaryYY ,
.YY, -
ContainsKeyYY- 8
(YY8 9
m_StyleListYY9 D
[YYD E
iYYE F
]YYF G
.YYG H
hashCodeYYH P
)YYP Q
)YYQ R#
m_StyleLookupDictionaryZZ +
.ZZ+ ,
AddZZ, /
(ZZ/ 0
m_StyleListZZ0 ;
[ZZ; <
iZZ< =
]ZZ= >
.ZZ> ?
hashCodeZZ? G
,ZZG H
m_StyleListZZI T
[ZZT U
iZZU V
]ZZV W
)ZZW X
;ZZX Y
}[[ 
int^^ 
normalStyleHashCode^^ #
=^^$ %$
TMP_TextParsingUtilities^^& >
.^^> ?
GetHashCode^^? J
(^^J K
$str^^K S
)^^S T
;^^T U
if__ 
(__ 
!__ #
m_StyleLookupDictionary__ (
.__( )
ContainsKey__) 4
(__4 5
normalStyleHashCode__5 H
)__H I
)__I J
{`` 
	TMP_Styleaa 
styleaa 
=aa  !
newaa" %
	TMP_Styleaa& /
(aa/ 0
$straa0 8
,aa8 9
stringaa: @
.aa@ A
EmptyaaA F
,aaF G
stringaaH N
.aaN O
EmptyaaO T
)aaT U
;aaU V
m_StyleListbb 
.bb 
Addbb 
(bb  
stylebb  %
)bb% &
;bb& '#
m_StyleLookupDictionarycc '
.cc' (
Addcc( +
(cc+ ,
normalStyleHashCodecc, ?
,cc? @
styleccA F
)ccF G
;ccG H
}dd 
TMPro_EventManagerhh 
.hh *
ON_TEXT_STYLE_PROPERTY_CHANGEDhh =
(hh= >
truehh> B
)hhB C
;hhC D
}jj 	
}kk 
}mm ﬂ™
kC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_FontAssetUtilities.cs
	namespace 	
TMPro
 
{ 
public 

class "
TMP_FontAssetUtilities '
{		 
private

 
static

 
readonly

 "
TMP_FontAssetUtilities

  6

s_Instance

7 A
=

B C
new

D G"
TMP_FontAssetUtilities

H ^
(

^ _
)

_ `
;

` a
static "
TMP_FontAssetUtilities %
(% &
)& '
{( )
}* +
public 
static "
TMP_FontAssetUtilities ,
instance- 5
{ 	
get 
{ 
return 

s_Instance #
;# $
}% &
} 	
private 
static 
HashSet 
< 
int "
>" #
k_SearchedAssets$ 4
;4 5
public// 
static// 
TMP_Character// #%
GetCharacterFromFontAsset//$ =
(//= >
uint//> B
unicode//C J
,//J K
TMP_FontAsset//L Y
sourceFontAsset//Z i
,//i j
bool//k o
includeFallbacks	//p Ä
,
//Ä Å

FontStyles
//Ç å
	fontStyle
//ç ñ
,
//ñ ó

FontWeight
//ò ¢

fontWeight
//£ ≠
,
//≠ Æ
out
//Ø ≤
bool
//≥ ∑#
isAlternativeTypeface
//∏ Õ
)
//Õ Œ
{00 	
if11 
(11 
includeFallbacks11  
)11  !
{22 
if33 
(33 
k_SearchedAssets33 $
==33% '
null33( ,
)33, -
k_SearchedAssets44 $
=44% &
new44' *
HashSet44+ 2
<442 3
int443 6
>446 7
(447 8
)448 9
;449 :
else55 
k_SearchedAssets66 $
.66$ %
Clear66% *
(66* +
)66+ ,
;66, -
}77 
return99 .
"GetCharacterFromFontAsset_Internal99 5
(995 6
unicode996 =
,99= >
sourceFontAsset99? N
,99N O
includeFallbacks99P `
,99` a
	fontStyle99b k
,99k l

fontWeight99m w
,99w x
out99y |"
isAlternativeTypeface	99} í
)
99í ì
;
99ì î
}:: 	
privateAA 
staticAA 
TMP_CharacterAA $.
"GetCharacterFromFontAsset_InternalAA% G
(AAG H
uintAAH L
unicodeAAM T
,AAT U
TMP_FontAssetAAV c
sourceFontAssetAAd s
,AAs t
boolAAu y
includeFallbacks	AAz ä
,
AAä ã

FontStyles
AAå ñ
	fontStyle
AAó †
,
AA† °

FontWeight
AA¢ ¨

fontWeight
AA≠ ∑
,
AA∑ ∏
out
AAπ º
bool
AAΩ ¡#
isAlternativeTypeface
AA¬ ◊
)
AA◊ ÿ
{BB 	!
isAlternativeTypefaceCC !
=CC" #
falseCC$ )
;CC) *
TMP_CharacterDD 
	characterDD #
=DD$ %
nullDD& *
;DD* +
boolHH 
isItalicHH 
=HH 
(HH 
	fontStyleHH &
&HH' (

FontStylesHH) 3
.HH3 4
ItalicHH4 :
)HH: ;
==HH< >

FontStylesHH? I
.HHI J
ItalicHHJ P
;HHP Q
ifJJ 
(JJ 
isItalicJJ 
||JJ 

fontWeightJJ &
!=JJ' )

FontWeightJJ* 4
.JJ4 5
RegularJJ5 <
)JJ< =
{KK 
TMP_FontWeightPairMM "
[MM" #
]MM# $
fontWeightsMM% 0
=MM1 2
sourceFontAssetMM3 B
.MMB C
fontWeightTableMMC R
;MMR S
intOO 
fontWeightIndexOO #
=OO$ %
$numOO& '
;OO' (
switchPP 
(PP 

fontWeightPP "
)PP" #
{QQ 
caseRR 

FontWeightRR #
.RR# $
ThinRR$ (
:RR( )
fontWeightIndexSS '
=SS( )
$numSS* +
;SS+ ,
breakTT 
;TT 
caseUU 

FontWeightUU #
.UU# $

ExtraLightUU$ .
:UU. /
fontWeightIndexVV '
=VV( )
$numVV* +
;VV+ ,
breakWW 
;WW 
caseXX 

FontWeightXX #
.XX# $
LightXX$ )
:XX) *
fontWeightIndexYY '
=YY( )
$numYY* +
;YY+ ,
breakZZ 
;ZZ 
case[[ 

FontWeight[[ #
.[[# $
Regular[[$ +
:[[+ ,
fontWeightIndex\\ '
=\\( )
$num\\* +
;\\+ ,
break]] 
;]] 
case^^ 

FontWeight^^ #
.^^# $
Medium^^$ *
:^^* +
fontWeightIndex__ '
=__( )
$num__* +
;__+ ,
break`` 
;`` 
caseaa 

FontWeightaa #
.aa# $
SemiBoldaa$ ,
:aa, -
fontWeightIndexbb '
=bb( )
$numbb* +
;bb+ ,
breakcc 
;cc 
casedd 

FontWeightdd #
.dd# $
Bolddd$ (
:dd( )
fontWeightIndexee '
=ee( )
$numee* +
;ee+ ,
breakff 
;ff 
casegg 

FontWeightgg #
.gg# $
Heavygg$ )
:gg) *
fontWeightIndexhh '
=hh( )
$numhh* +
;hh+ ,
breakii 
;ii 
casejj 

FontWeightjj #
.jj# $
Blackjj$ )
:jj) *
fontWeightIndexkk '
=kk( )
$numkk* +
;kk+ ,
breakll 
;ll 
}mm 
TMP_FontAssetoo 
tempoo "
=oo# $
isItalicoo% -
?oo. /
fontWeightsoo0 ;
[oo; <
fontWeightIndexoo< K
]ooK L
.ooL M
italicTypefaceooM [
:oo\ ]
fontWeightsoo^ i
[ooi j
fontWeightIndexooj y
]ooy z
.ooz {
regularTypeface	oo{ ä
;
ooä ã
ifqq 
(qq 
tempqq 
!=qq 
nullqq  
)qq  !
{rr 
ifss 
(ss 
tempss 
.ss  
characterLookupTabless 1
.ss1 2
TryGetValuess2 =
(ss= >
unicodess> E
,ssE F
outssG J
	characterssK T
)ssT U
)ssU V
{tt !
isAlternativeTypefaceuu -
=uu. /
trueuu0 4
;uu4 5
returnww 
	characterww (
;ww( )
}xx 
ifzz 
(zz 
tempzz 
.zz 
atlasPopulationModezz 0
==zz1 3
AtlasPopulationModezz4 G
.zzG H
DynamiczzH O
)zzO P
{{{ 
if|| 
(|| 
temp||  
.||  !#
TryAddCharacterInternal||! 8
(||8 9
unicode||9 @
,||@ A
out||B E
	character||F O
)||O P
)||P Q
{}} !
isAlternativeTypeface~~ 1
=~~2 3
true~~4 8
;~~8 9
return
ÄÄ "
	character
ÄÄ# ,
;
ÄÄ, -
}
ÅÅ 
}
êê 
}
îî 
}
ññ 
if
öö 
(
öö 
sourceFontAsset
öö 
.
öö  "
characterLookupTable
öö  4
.
öö4 5
TryGetValue
öö5 @
(
öö@ A
unicode
ööA H
,
ööH I
out
ööJ M
	character
ööN W
)
ööW X
)
ööX Y
return
õõ 
	character
õõ  
;
õõ  !
if
ùù 
(
ùù 
sourceFontAsset
ùù 
.
ùù  !
atlasPopulationMode
ùù  3
==
ùù4 6!
AtlasPopulationMode
ùù7 J
.
ùùJ K
Dynamic
ùùK R
)
ùùR S
{
ûû 
if
üü 
(
üü 
sourceFontAsset
üü #
.
üü# $%
TryAddCharacterInternal
üü$ ;
(
üü; <
unicode
üü< C
,
üüC D
out
üüE H
	character
üüI R
)
üüR S
)
üüS T
return
†† 
	character
†† $
;
††$ %
}
°° 
if
§§ 
(
§§ 
	character
§§ 
==
§§ 
null
§§ !
&&
§§" $
includeFallbacks
§§% 5
&&
§§6 8
sourceFontAsset
§§9 H
.
§§H I$
fallbackFontAssetTable
§§I _
!=
§§` b
null
§§c g
)
§§g h
{
•• 
List
ßß 
<
ßß 
TMP_FontAsset
ßß "
>
ßß" # 
fallbackFontAssets
ßß$ 6
=
ßß7 8
sourceFontAsset
ßß9 H
.
ßßH I$
fallbackFontAssetTable
ßßI _
;
ßß_ `
int
®® 
fallbackCount
®® !
=
®®" # 
fallbackFontAssets
®®$ 6
.
®®6 7
Count
®®7 <
;
®®< =
if
™™ 
(
™™ 
fallbackCount
™™ !
==
™™" $
$num
™™% &
)
™™& '
return
´´ 
null
´´ 
;
´´  
for
≠≠ 
(
≠≠ 
int
≠≠ 
i
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
i
≠≠  !
<
≠≠" #
fallbackCount
≠≠$ 1
;
≠≠1 2
i
≠≠3 4
++
≠≠4 6
)
≠≠6 7
{
ÆÆ 
TMP_FontAsset
ØØ !
temp
ØØ" &
=
ØØ' ( 
fallbackFontAssets
ØØ) ;
[
ØØ; <
i
ØØ< =
]
ØØ= >
;
ØØ> ?
if
±± 
(
±± 
temp
±± 
==
±± 
null
±±  $
)
±±$ %
continue
≤≤  
;
≤≤  !
int
¥¥ 
id
¥¥ 
=
¥¥ 
temp
¥¥ !
.
¥¥! "

instanceID
¥¥" ,
;
¥¥, -
if
∑∑ 
(
∑∑ 
k_SearchedAssets
∑∑ (
.
∑∑( )
Add
∑∑) ,
(
∑∑, -
id
∑∑- /
)
∑∑/ 0
==
∑∑1 3
false
∑∑4 9
)
∑∑9 :
continue
∏∏  
;
∏∏  !
sourceFontAsset
ªª #
.
ªª# $'
FallbackSearchQueryLookup
ªª$ =
.
ªª= >
Add
ªª> A
(
ªªA B
id
ªªB D
)
ªªD E
;
ªªE F
	character
ΩΩ 
=
ΩΩ 0
"GetCharacterFromFontAsset_Internal
ΩΩ  B
(
ΩΩB C
unicode
ΩΩC J
,
ΩΩJ K
temp
ΩΩL P
,
ΩΩP Q
true
ΩΩR V
,
ΩΩV W
	fontStyle
ΩΩX a
,
ΩΩa b

fontWeight
ΩΩc m
,
ΩΩm n
out
ΩΩo r$
isAlternativeTypefaceΩΩs à
)ΩΩà â
;ΩΩâ ä
if
øø 
(
øø 
	character
øø !
!=
øø" $
null
øø% )
)
øø) *
return
¿¿ 
	character
¿¿ (
;
¿¿( )
}
¡¡ 
}
¬¬ 
return
ƒƒ 
null
ƒƒ 
;
ƒƒ 
}
≈≈ 	
public
÷÷ 
static
÷÷ 
TMP_Character
÷÷ #(
GetCharacterFromFontAssets
÷÷$ >
(
÷÷> ?
uint
÷÷? C
unicode
÷÷D K
,
÷÷K L
TMP_FontAsset
÷÷M Z
sourceFontAsset
÷÷[ j
,
÷÷j k
List
÷÷l p
<
÷÷p q
TMP_FontAsset
÷÷q ~
>
÷÷~ 

fontAssets÷÷Ä ä
,÷÷ä ã
bool÷÷å ê 
includeFallbacks÷÷ë °
,÷÷° ¢

FontStyles÷÷£ ≠
	fontStyle÷÷Æ ∑
,÷÷∑ ∏

FontWeight÷÷π √

fontWeight÷÷ƒ Œ
,÷÷Œ œ
out÷÷– ”
bool÷÷‘ ÿ%
isAlternativeTypeface÷÷Ÿ Ó
)÷÷Ó Ô
{
◊◊ 	#
isAlternativeTypeface
ÿÿ !
=
ÿÿ" #
false
ÿÿ$ )
;
ÿÿ) *
if
€€ 
(
€€ 

fontAssets
€€ 
==
€€ 
null
€€ "
||
€€# %

fontAssets
€€& 0
.
€€0 1
Count
€€1 6
==
€€7 9
$num
€€: ;
)
€€; <
return
‹‹ 
null
‹‹ 
;
‹‹ 
if
ﬁﬁ 
(
ﬁﬁ 
includeFallbacks
ﬁﬁ  
)
ﬁﬁ  !
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
k_SearchedAssets
‡‡ $
==
‡‡% '
null
‡‡( ,
)
‡‡, -
k_SearchedAssets
·· $
=
··% &
new
··' *
HashSet
··+ 2
<
··2 3
int
··3 6
>
··6 7
(
··7 8
)
··8 9
;
··9 :
else
‚‚ 
k_SearchedAssets
„„ $
.
„„$ %
Clear
„„% *
(
„„* +
)
„„+ ,
;
„„, -
}
‰‰ 
int
ÊÊ 
fontAssetCount
ÊÊ 
=
ÊÊ  

fontAssets
ÊÊ! +
.
ÊÊ+ ,
Count
ÊÊ, 1
;
ÊÊ1 2
for
ËË 
(
ËË 
int
ËË 
i
ËË 
=
ËË 
$num
ËË 
;
ËË 
i
ËË 
<
ËË 
fontAssetCount
ËË  .
;
ËË. /
i
ËË0 1
++
ËË1 3
)
ËË3 4
{
ÈÈ 
TMP_FontAsset
ÍÍ 
	fontAsset
ÍÍ '
=
ÍÍ( )

fontAssets
ÍÍ* 4
[
ÍÍ4 5
i
ÍÍ5 6
]
ÍÍ6 7
;
ÍÍ7 8
if
ÏÏ 
(
ÏÏ 
	fontAsset
ÏÏ 
==
ÏÏ  
null
ÏÏ! %
)
ÏÏ% &
continue
ÏÏ' /
;
ÏÏ/ 0
sourceFontAsset
ÔÔ 
.
ÔÔ  '
FallbackSearchQueryLookup
ÔÔ  9
.
ÔÔ9 :
Add
ÔÔ: =
(
ÔÔ= >
	fontAsset
ÔÔ> G
.
ÔÔG H

instanceID
ÔÔH R
)
ÔÔR S
;
ÔÔS T
TMP_Character
ÒÒ 
	character
ÒÒ '
=
ÒÒ( )0
"GetCharacterFromFontAsset_Internal
ÒÒ* L
(
ÒÒL M
unicode
ÒÒM T
,
ÒÒT U
	fontAsset
ÒÒV _
,
ÒÒ_ `
includeFallbacks
ÒÒa q
,
ÒÒq r
	fontStyle
ÒÒs |
,
ÒÒ| }

fontWeightÒÒ~ à
,ÒÒà â
outÒÒä ç%
isAlternativeTypefaceÒÒé £
)ÒÒ£ §
;ÒÒ§ •
if
ÛÛ 
(
ÛÛ 
	character
ÛÛ 
!=
ÛÛ  
null
ÛÛ! %
)
ÛÛ% &
return
ÙÙ 
	character
ÙÙ $
;
ÙÙ$ %
}
ıı 
return
˜˜ 
null
˜˜ 
;
˜˜ 
}
¯¯ 	
public
ÖÖ 
static
ÖÖ !
TMP_SpriteCharacter
ÖÖ )/
!GetSpriteCharacterFromSpriteAsset
ÖÖ* K
(
ÖÖK L
uint
ÖÖL P
unicode
ÖÖQ X
,
ÖÖX Y
TMP_SpriteAsset
ÖÖZ i
spriteAsset
ÖÖj u
,
ÖÖu v
bool
ÖÖw {
includeFallbacksÖÖ| å
)ÖÖå ç
{
ÜÜ 	
if
àà 
(
àà 
spriteAsset
àà 
==
àà 
null
àà #
)
àà# $
return
ââ 
null
ââ 
;
ââ !
TMP_SpriteCharacter
ãã 
spriteCharacter
ãã  /
;
ãã/ 0
if
éé 
(
éé 
spriteAsset
éé 
.
éé (
spriteCharacterLookupTable
éé 6
.
éé6 7
TryGetValue
éé7 B
(
ééB C
unicode
ééC J
,
ééJ K
out
ééL O
spriteCharacter
ééP _
)
éé_ `
)
éé` a
return
èè 
spriteCharacter
èè &
;
èè& '
if
ëë 
(
ëë 
includeFallbacks
ëë  
)
ëë  !
{
íí 
if
îî 
(
îî 
k_SearchedAssets
îî $
==
îî% '
null
îî( ,
)
îî, -
k_SearchedAssets
ïï $
=
ïï% &
new
ïï' *
HashSet
ïï+ 2
<
ïï2 3
int
ïï3 6
>
ïï6 7
(
ïï7 8
)
ïï8 9
;
ïï9 :
else
ññ 
k_SearchedAssets
óó $
.
óó$ %
Clear
óó% *
(
óó* +
)
óó+ ,
;
óó, -
k_SearchedAssets
öö  
.
öö  !
Add
öö! $
(
öö$ %
spriteAsset
öö% 0
.
öö0 1

instanceID
öö1 ;
)
öö; <
;
öö< =
List
úú 
<
úú 
TMP_SpriteAsset
úú $
>
úú$ %!
fallbackSpriteAsset
úú& 9
=
úú: ;
spriteAsset
úú< G
.
úúG H"
fallbackSpriteAssets
úúH \
;
úú\ ]
if
ûû 
(
ûû !
fallbackSpriteAsset
ûû '
!=
ûû( *
null
ûû+ /
&&
ûû0 2!
fallbackSpriteAsset
ûû3 F
.
ûûF G
Count
ûûG L
>
ûûM N
$num
ûûO P
)
ûûP Q
{
üü 
int
†† 
fallbackCount
†† %
=
††& '!
fallbackSpriteAsset
††( ;
.
††; <
Count
††< A
;
††A B
for
¢¢ 
(
¢¢ 
int
¢¢ 
i
¢¢ 
=
¢¢  
$num
¢¢! "
;
¢¢" #
i
¢¢$ %
<
¢¢& '
fallbackCount
¢¢( 5
;
¢¢5 6
i
¢¢7 8
++
¢¢8 :
)
¢¢: ;
{
££ 
TMP_SpriteAsset
§§ '
temp
§§( ,
=
§§- .!
fallbackSpriteAsset
§§/ B
[
§§B C
i
§§C D
]
§§D E
;
§§E F
if
¶¶ 
(
¶¶ 
temp
¶¶  
==
¶¶! #
null
¶¶$ (
)
¶¶( )
continue
ßß $
;
ßß$ %
int
©© 
id
©© 
=
©©  
temp
©©! %
.
©©% &

instanceID
©©& 0
;
©©0 1
if
¨¨ 
(
¨¨ 
k_SearchedAssets
¨¨ ,
.
¨¨, -
Add
¨¨- 0
(
¨¨0 1
id
¨¨1 3
)
¨¨3 4
==
¨¨5 7
false
¨¨8 =
)
¨¨= >
continue
≠≠ $
;
≠≠$ %
spriteCharacter
ØØ '
=
ØØ( )8
*GetSpriteCharacterFromSpriteAsset_Internal
ØØ* T
(
ØØT U
unicode
ØØU \
,
ØØ\ ]
temp
ØØ^ b
,
ØØb c
true
ØØd h
)
ØØh i
;
ØØi j
if
±± 
(
±± 
spriteCharacter
±± +
!=
±±, .
null
±±/ 3
)
±±3 4
return
≤≤ "
spriteCharacter
≤≤# 2
;
≤≤2 3
}
≥≥ 
}
¥¥ 
}
µµ 
return
∑∑ 
null
∑∑ 
;
∑∑ 
}
∏∏ 	
static
¡¡ !
TMP_SpriteCharacter
¡¡ "8
*GetSpriteCharacterFromSpriteAsset_Internal
¡¡# M
(
¡¡M N
uint
¡¡N R
unicode
¡¡S Z
,
¡¡Z [
TMP_SpriteAsset
¡¡\ k
spriteAsset
¡¡l w
,
¡¡w x
bool
¡¡y }
includeFallbacks¡¡~ é
)¡¡é è
{
¬¬ 	!
TMP_SpriteCharacter
√√ 
spriteCharacter
√√  /
;
√√/ 0
if
∆∆ 
(
∆∆ 
spriteAsset
∆∆ 
.
∆∆ (
spriteCharacterLookupTable
∆∆ 6
.
∆∆6 7
TryGetValue
∆∆7 B
(
∆∆B C
unicode
∆∆C J
,
∆∆J K
out
∆∆L O
spriteCharacter
∆∆P _
)
∆∆_ `
)
∆∆` a
return
«« 
spriteCharacter
«« &
;
««& '
if
…… 
(
…… 
includeFallbacks
……  
)
……  !
{
   
List
ÀÀ 
<
ÀÀ 
TMP_SpriteAsset
ÀÀ $
>
ÀÀ$ %!
fallbackSpriteAsset
ÀÀ& 9
=
ÀÀ: ;
spriteAsset
ÀÀ< G
.
ÀÀG H"
fallbackSpriteAssets
ÀÀH \
;
ÀÀ\ ]
if
ÕÕ 
(
ÕÕ !
fallbackSpriteAsset
ÕÕ '
!=
ÕÕ( *
null
ÕÕ+ /
&&
ÕÕ0 2!
fallbackSpriteAsset
ÕÕ3 F
.
ÕÕF G
Count
ÕÕG L
>
ÕÕM N
$num
ÕÕO P
)
ÕÕP Q
{
ŒŒ 
int
œœ 
fallbackCount
œœ %
=
œœ& '!
fallbackSpriteAsset
œœ( ;
.
œœ; <
Count
œœ< A
;
œœA B
for
—— 
(
—— 
int
—— 
i
—— 
=
——  
$num
——! "
;
——" #
i
——$ %
<
——& '
fallbackCount
——( 5
;
——5 6
i
——7 8
++
——8 :
)
——: ;
{
““ 
TMP_SpriteAsset
”” '
temp
””( ,
=
””- .!
fallbackSpriteAsset
””/ B
[
””B C
i
””C D
]
””D E
;
””E F
if
’’ 
(
’’ 
temp
’’  
==
’’! #
null
’’$ (
)
’’( )
continue
÷÷ $
;
÷÷$ %
int
ÿÿ 
id
ÿÿ 
=
ÿÿ  
temp
ÿÿ! %
.
ÿÿ% &

instanceID
ÿÿ& 0
;
ÿÿ0 1
if
€€ 
(
€€ 
k_SearchedAssets
€€ ,
.
€€, -
Add
€€- 0
(
€€0 1
id
€€1 3
)
€€3 4
==
€€5 7
false
€€8 =
)
€€= >
continue
‹‹ $
;
‹‹$ %
spriteCharacter
ﬁﬁ '
=
ﬁﬁ( )8
*GetSpriteCharacterFromSpriteAsset_Internal
ﬁﬁ* T
(
ﬁﬁT U
unicode
ﬁﬁU \
,
ﬁﬁ\ ]
temp
ﬁﬁ^ b
,
ﬁﬁb c
true
ﬁﬁd h
)
ﬁﬁh i
;
ﬁﬁi j
if
‡‡ 
(
‡‡ 
spriteCharacter
‡‡ +
!=
‡‡, .
null
‡‡/ 3
)
‡‡3 4
return
·· "
spriteCharacter
··# 2
;
··2 3
}
‚‚ 
}
„„ 
}
‰‰ 
return
ÊÊ 
null
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
private
ÓÓ 
static
ÓÓ 
bool
ÓÓ '
k_IsFontEngineInitialized
ÓÓ 5
;
ÓÓ5 6
}
ππ 
}∫∫ Ã∂
gC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMPro_UGUI_Private.cs
	namespace 	
TMPro
 
{ 
public 

partial 
class 
TextMeshProUGUI (
{ 
[ 	
SerializeField	 
] 
private 
bool !
m_hasFontAssetChanged *
=+ ,
false- 2
;2 3
	protected 
TMP_SubMeshUI 
[  
]  !
m_subTextObjects" 2
=3 4
new5 8
TMP_SubMeshUI9 F
[F G
$numG H
]H I
;I J
private 
float !
m_previousLossyScaleY +
=, -
-. /
$num/ 0
;0 1
private 
Vector3 
[ 
] "
m_RectTransformCorners 0
=1 2
new3 6
Vector37 >
[> ?
$num? @
]@ A
;A B
private 
CanvasRenderer 
m_canvasRenderer /
;/ 0
private 
Canvas 
m_canvas 
;  
private 
float 
m_CanvasScaleFactor )
;) *
private 
bool 
m_isFirstAllocation (
;( )
private 
int 
m_max_characters $
=% &
$num' (
;( )
[## 	
SerializeField##	 
]## 
private$$ 
Material$$ 
m_baseMaterial$$ '
;$$' (
private&& 
bool&& 
m_isScrollRegionSet&& (
;&&( )
[)) 	
SerializeField))	 
])) 
private** 
Vector4** 
m_maskOffset** $
;**$ %
private-- 
	Matrix4x4-- 
m_EnvMapMatrix-- (
=--) *
new--+ .
	Matrix4x4--/ 8
(--8 9
)--9 :
;--: ;
[11 	
NonSerialized11	 
]11 
private22 
bool22 #
m_isRegisteredForEvents22 ,
;22, -
private55 
static55 
ProfilerMarker55 % 
k_GenerateTextMarker55& :
=55; <
new55= @
ProfilerMarker55A O
(55O P
$str55P b
)55b c
;55c d
private66 
static66 
ProfilerMarker66 %!
k_SetArraySizesMarker66& ;
=66< =
new66> A
ProfilerMarker66B P
(66P Q
$str66Q d
)66d e
;66e f
private77 
static77 
ProfilerMarker77 %&
k_GenerateTextPhaseIMarker77& @
=77A B
new77C F
ProfilerMarker77G U
(77U V
$str77V r
)77r s
;77s t
private88 
static88 
ProfilerMarker88 %#
k_ParseMarkupTextMarker88& =
=88> ?
new88@ C
ProfilerMarker88D R
(88R S
$str88S j
)88j k
;88k l
private99 
static99 
ProfilerMarker99 %#
k_CharacterLookupMarker99& =
=99> ?
new99@ C
ProfilerMarker99D R
(99R S
$str99S v
)99v w
;99w x
private:: 
static:: 
ProfilerMarker:: %&
k_HandleGPOSFeaturesMarker::& @
=::A B
new::C F
ProfilerMarker::G U
(::U V
$str::V p
)::p q
;::q r
private;; 
static;; 
ProfilerMarker;; %-
!k_CalculateVerticesPositionMarker;;& G
=;;H I
new;;J M
ProfilerMarker;;N \
(;;\ ]
$str;;] ~
);;~ 
;	;; Ä
private<< 
static<< 
ProfilerMarker<< %&
k_ComputeTextMetricsMarker<<& @
=<<A B
new<<C F
ProfilerMarker<<G U
(<<U V
$str<<V p
)<<p q
;<<q r
private== 
static== 
ProfilerMarker== %*
k_HandleVisibleCharacterMarker==& D
===E F
new==G J
ProfilerMarker==K Y
(==Y Z
$str==Z x
)==x y
;==y z
private>> 
static>> 
ProfilerMarker>> %%
k_HandleWhiteSpacesMarker>>& ?
=>>@ A
new>>B E
ProfilerMarker>>F T
(>>T U
$str	>>U Å
)
>>Å Ç
;
>>Ç É
private?? 
static?? 
ProfilerMarker?? %0
$k_HandleHorizontalLineBreakingMarker??& J
=??K L
new??M P
ProfilerMarker??Q _
(??_ `
$str	??` Ö
)
??Ö Ü
;
??Ü á
private@@ 
static@@ 
ProfilerMarker@@ %.
"k_HandleVerticalLineBreakingMarker@@& H
=@@I J
new@@K N
ProfilerMarker@@O ]
(@@] ^
$str	@@^ Å
)
@@Å Ç
;
@@Ç É
privateAA 
staticAA 
ProfilerMarkerAA %'
k_SaveGlyphVertexDataMarkerAA& A
=AAB C
newAAD G
ProfilerMarkerAAH V
(AAV W
$strAAW s
)AAs t
;AAt u
privateBB 
staticBB 
ProfilerMarkerBB %+
k_ComputeCharacterAdvanceMarkerBB& E
=BBF G
newBBH K
ProfilerMarkerBBL Z
(BBZ [
$strBB[ z
)BBz {
;BB{ |
privateCC 
staticCC 
ProfilerMarkerCC %(
k_HandleCarriageReturnMarkerCC& B
=CCC D
newCCE H
ProfilerMarkerCCI W
(CCW X
$strCCX t
)CCt u
;CCu v
privateDD 
staticDD 
ProfilerMarkerDD %)
k_HandleLineTerminationMarkerDD& C
=DDD E
newDDF I
ProfilerMarkerDDJ X
(DDX Y
$strDDY v
)DDv w
;DDw x
privateEE 
staticEE 
ProfilerMarkerEE % 
k_SavePageInfoMarkerEE& :
=EE; <
newEE= @
ProfilerMarkerEEA O
(EEO P
$strEEP r
)EEr s
;EEs t
privateFF 
staticFF 
ProfilerMarkerFF %(
k_SaveProcessingStatesMarkerFF& B
=FFC D
newFFE H
ProfilerMarkerFFI W
(FFW X
$strFFX t
)FFt u
;FFu v
privateGG 
staticGG 
ProfilerMarkerGG %'
k_GenerateTextPhaseIIMarkerGG& A
=GGB C
newGGD G
ProfilerMarkerGGH V
(GGV W
$strGGW t
)GGt u
;GGu v
privateHH 
staticHH 
ProfilerMarkerHH %(
k_GenerateTextPhaseIIIMarkerHH& B
=HHC D
newHHE H
ProfilerMarkerHHI W
(HHW X
$strHHX v
)HHv w
;HHw x
	protectedKK 
overrideKK 
voidKK 
AwakeKK  %
(KK% &
)KK& '
{LL 	
ifQQ 
(QQ 
TMP_SettingsQQ 
.QQ 
instanceQQ %
==QQ& (
nullQQ) -
)QQ- .
{RR 
ifSS 
(SS %
m_isWaitingOnResourceLoadSS -
==SS. 0
falseSS1 6
)SS6 7
TMPro_EventManagerTT &
.TT& '
RESOURCE_LOAD_EVENTTT' :
.TT: ;
AddTT; >
(TT> ?
ON_RESOURCES_LOADEDTT? R
)TTR S
;TTS T%
m_isWaitingOnResourceLoadVV )
=VV* +
trueVV, 0
;VV0 1
returnWW 
;WW 
}XX 
m_canvas\\ 
=\\ 
this\\ 
.\\ 
canvas\\ "
;\\" #
m_isOrthographic^^ 
=^^ 
true^^ #
;^^# $
m_rectTransformaa 
=aa 

gameObjectaa (
.aa( )
GetComponentaa) 5
<aa5 6
RectTransformaa6 C
>aaC D
(aaD E
)aaE F
;aaF G
ifbb 
(bb 
m_rectTransformbb 
==bb  "
nullbb# '
)bb' (
m_rectTransformcc 
=cc  !

gameObjectcc" ,
.cc, -
AddComponentcc- 9
<cc9 :
RectTransformcc: G
>ccG H
(ccH I
)ccI J
;ccJ K
m_canvasRendererff 
=ff 
GetComponentff +
<ff+ ,
CanvasRendererff, :
>ff: ;
(ff; <
)ff< =
;ff= >
ifgg 
(gg 
m_canvasRenderergg  
==gg! #
nullgg$ (
)gg( )
m_canvasRendererhh  
=hh! "

gameObjecthh# -
.hh- .
AddComponenthh. :
<hh: ;
CanvasRendererhh; I
>hhI J
(hhK L
)hhL M
;hhM N
ifjj 
(jj 
m_meshjj 
==jj 
nulljj 
)jj 
{kk 
m_meshll 
=ll 
newll 
Meshll !
(ll! "
)ll" #
;ll# $
m_meshmm 
.mm 
	hideFlagsmm  
=mm! "
	HideFlagsmm# ,
.mm, -
HideAndDontSavemm- <
;mm< =
m_meshoo 
.oo 
nameoo 
=oo 
$stroo 3
;oo3 4

m_textInforr 
=rr 
newrr  
TMP_TextInforr! -
(rr- .
thisrr. 2
)rr2 3
;rr3 4
}ss 
LoadDefaultSettingsvv 
(vv  
)vv  !
;vv! "
LoadFontAssetyy 
(yy 
)yy 
;yy 
if|| 
(|| !
m_TextProcessingArray|| %
==||& (
null||) -
)||- .!
m_TextProcessingArray}} %
=}}& '
new}}( +
UnicodeChar}}, 7
[}}7 8
m_max_characters}}8 H
]}}H I
;}}I J 
m_cached_TextElement  
=! "
new# &
TMP_Character' 4
(4 5
)5 6
;6 7!
m_isFirstAllocation
ÄÄ 
=
ÄÄ  !
true
ÄÄ" &
;
ÄÄ& '
TMP_SubMeshUI
ÉÉ 
[
ÉÉ 
]
ÉÉ 
subTextObjects
ÉÉ *
=
ÉÉ+ ,%
GetComponentsInChildren
ÉÉ- D
<
ÉÉD E
TMP_SubMeshUI
ÉÉE R
>
ÉÉR S
(
ÉÉS T
)
ÉÉT U
;
ÉÉU V
if
ÑÑ 
(
ÑÑ 
subTextObjects
ÑÑ 
.
ÑÑ 
Length
ÑÑ %
>
ÑÑ& '
$num
ÑÑ( )
)
ÑÑ) *
{
ÖÖ 
int
ÜÜ  
subTextObjectCount
ÜÜ &
=
ÜÜ' (
subTextObjects
ÜÜ) 7
.
ÜÜ7 8
Length
ÜÜ8 >
;
ÜÜ> ?
if
àà 
(
àà  
subTextObjectCount
àà &
+
àà' (
$num
àà) *
>
àà+ ,
m_subTextObjects
àà- =
.
àà= >
Length
àà> D
)
ààD E
Array
ââ 
.
ââ 
Resize
ââ  
(
ââ  !
ref
ââ! $
m_subTextObjects
ââ% 5
,
ââ5 6 
subTextObjectCount
ââ7 I
+
ââJ K
$num
ââL M
)
ââM N
;
ââN O
for
ãã 
(
ãã 
int
ãã 
i
ãã 
=
ãã 
$num
ãã 
;
ãã 
i
ãã  !
<
ãã" # 
subTextObjectCount
ãã$ 6
;
ãã6 7
i
ãã8 9
++
ãã9 ;
)
ãã; <
m_subTextObjects
åå $
[
åå$ %
i
åå% &
+
åå' (
$num
åå) *
]
åå* +
=
åå, -
subTextObjects
åå. <
[
åå< =
i
åå= >
]
åå> ?
;
åå? @
}
çç %
m_havePropertiesChanged
êê #
=
êê$ %
true
êê& *
;
êê* +
	m_isAwake
íí 
=
íí 
true
íí 
;
íí 
}
ìì 	
	protected
ññ 
override
ññ 
void
ññ 
OnEnable
ññ  (
(
ññ( )
)
ññ) *
{
óó 	
if
õõ 
(
õõ 
	m_isAwake
õõ 
==
õõ 
false
õõ "
)
õõ" #
return
úú 
;
úú 
if
ûû 
(
ûû 
!
ûû %
m_isRegisteredForEvents
ûû (
)
ûû( )
{
üü  
TMPro_EventManager
§§ "
.
§§" #%
MATERIAL_PROPERTY_EVENT
§§# :
.
§§: ;
Add
§§; >
(
§§> ?*
ON_MATERIAL_PROPERTY_CHANGED
§§? [
)
§§[ \
;
§§\ ] 
TMPro_EventManager
•• "
.
••" #!
FONT_PROPERTY_EVENT
••# 6
.
••6 7
Add
••7 :
(
••: ;&
ON_FONT_PROPERTY_CHANGED
••; S
)
••S T
;
••T U 
TMPro_EventManager
¶¶ "
.
¶¶" #-
TEXTMESHPRO_UGUI_PROPERTY_EVENT
¶¶# B
.
¶¶B C
Add
¶¶C F
(
¶¶F G2
$ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED
¶¶G k
)
¶¶k l
;
¶¶l m 
TMPro_EventManager
ßß "
.
ßß" #*
DRAG_AND_DROP_MATERIAL_EVENT
ßß# ?
.
ßß? @
Add
ßß@ C
(
ßßC D'
ON_DRAG_AND_DROP_MATERIAL
ßßD ]
)
ßß] ^
;
ßß^ _ 
TMPro_EventManager
®® "
.
®®" #'
TEXT_STYLE_PROPERTY_EVENT
®®# <
.
®®< =
Add
®®= @
(
®®@ A#
ON_TEXT_STYLE_CHANGED
®®A V
)
®®V W
;
®®W X 
TMPro_EventManager
©© "
.
©©" #+
COLOR_GRADIENT_PROPERTY_EVENT
©©# @
.
©©@ A
Add
©©A D
(
©©D E'
ON_COLOR_GRADIENT_CHANGED
©©E ^
)
©©^ _
;
©©_ ` 
TMPro_EventManager
™™ "
.
™™" #)
TMP_SETTINGS_PROPERTY_EVENT
™™# >
.
™™> ?
Add
™™? B
(
™™B C%
ON_TMP_SETTINGS_CHANGED
™™C Z
)
™™Z [
;
™™[ \
UnityEditor
¨¨ 
.
¨¨ 
PrefabUtility
¨¨ )
.
¨¨) *#
prefabInstanceUpdated
¨¨* ?
+=
¨¨@ B$
OnPrefabInstanceUpdate
¨¨C Y
;
¨¨Y Z%
m_isRegisteredForEvents
ÆÆ '
=
ÆÆ( )
true
ÆÆ* .
;
ÆÆ. /
}
ØØ 
m_canvas
≤≤ 
=
≤≤ 
	GetCanvas
≤≤  
(
≤≤  !
)
≤≤! "
;
≤≤" # 
SetActiveSubMeshes
¥¥ 
(
¥¥ 
true
¥¥ #
)
¥¥# $
;
¥¥$ %
GraphicRegistry
∑∑ 
.
∑∑ &
RegisterGraphicForCanvas
∑∑ 4
(
∑∑4 5
m_canvas
∑∑5 =
,
∑∑= >
this
∑∑? C
)
∑∑C D
;
∑∑D E
if
∫∫ 
(
∫∫ '
m_IsTextObjectScaleStatic
∫∫ )
==
∫∫* ,
false
∫∫- 2
)
∫∫2 3
TMP_UpdateManager
ªª !
.
ªª! ")
RegisterTextObjectForUpdate
ªª" =
(
ªª= >
this
ªª> B
)
ªªB C
;
ªªC D
ComputeMarginSize
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ  
SetAllDirty
øø 
(
øø 
)
øø 
;
øø !
RecalculateClipping
¡¡ 
(
¡¡  
)
¡¡  !
;
¡¡! " 
RecalculateMasking
¬¬ 
(
¬¬ 
)
¬¬  
;
¬¬  !
}
√√ 	
	protected
∆∆ 
override
∆∆ 
void
∆∆ 
	OnDisable
∆∆  )
(
∆∆) *
)
∆∆* +
{
«« 	
if
ÀÀ 
(
ÀÀ 
	m_isAwake
ÀÀ 
==
ÀÀ 
false
ÀÀ "
)
ÀÀ" #
return
ÃÃ 
;
ÃÃ 
GraphicRegistry
’’ 
.
’’ (
UnregisterGraphicForCanvas
’’ 6
(
’’6 7
m_canvas
’’7 ?
,
’’? @
this
’’A E
)
’’E F
;
’’F G"
CanvasUpdateRegistry
÷÷  
.
÷÷  !/
!UnRegisterCanvasElementForRebuild
÷÷! B
(
÷÷B C
(
÷÷C D
ICanvasElement
÷÷D R
)
÷÷R S
this
÷÷S W
)
÷÷W X
;
÷÷X Y
TMP_UpdateManager
ÿÿ 
.
ÿÿ +
UnRegisterTextObjectForUpdate
ÿÿ ;
(
ÿÿ; <
this
ÿÿ< @
)
ÿÿ@ A
;
ÿÿA B
if
⁄⁄ 
(
⁄⁄ 
m_canvasRenderer
⁄⁄  
!=
⁄⁄! #
null
⁄⁄$ (
)
⁄⁄( )
m_canvasRenderer
€€  
.
€€  !
Clear
€€! &
(
€€& '
)
€€' (
;
€€( ) 
SetActiveSubMeshes
›› 
(
›› 
false
›› $
)
››$ %
;
››% &
LayoutRebuilder
ﬂﬂ 
.
ﬂﬂ "
MarkLayoutForRebuild
ﬂﬂ 0
(
ﬂﬂ0 1
m_rectTransform
ﬂﬂ1 @
)
ﬂﬂ@ A
;
ﬂﬂA B!
RecalculateClipping
‡‡ 
(
‡‡  
)
‡‡  !
;
‡‡! " 
RecalculateMasking
·· 
(
·· 
)
··  
;
··  !
}
‚‚ 	
	protected
ÂÂ 
override
ÂÂ 
void
ÂÂ 
	OnDestroy
ÂÂ  )
(
ÂÂ) *
)
ÂÂ* +
{
ÊÊ 	
GraphicRegistry
ÍÍ 
.
ÍÍ (
UnregisterGraphicForCanvas
ÍÍ 6
(
ÍÍ6 7
m_canvas
ÍÍ7 ?
,
ÍÍ? @
this
ÍÍA E
)
ÍÍE F
;
ÍÍF G
TMP_UpdateManager
ÏÏ 
.
ÏÏ +
UnRegisterTextObjectForUpdate
ÏÏ ;
(
ÏÏ; <
this
ÏÏ< @
)
ÏÏ@ A
;
ÏÏA B
if
ÔÔ 
(
ÔÔ 
m_mesh
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ 
DestroyImmediate
  
(
  !
m_mesh
! '
)
' (
;
( )
if
ÛÛ 
(
ÛÛ 
m_MaskMaterial
ÛÛ 
!=
ÛÛ !
null
ÛÛ" &
)
ÛÛ& '
{
ÙÙ !
TMP_MaterialManager
ıı #
.
ıı# $$
ReleaseStencilMaterial
ıı$ :
(
ıı: ;
m_MaskMaterial
ıı; I
)
ııI J
;
ııJ K
m_MaskMaterial
ˆˆ 
=
ˆˆ  
null
ˆˆ! %
;
ˆˆ% &
}
˜˜  
TMPro_EventManager
˚˚ 
.
˚˚ %
MATERIAL_PROPERTY_EVENT
˚˚ 6
.
˚˚6 7
Remove
˚˚7 =
(
˚˚= >*
ON_MATERIAL_PROPERTY_CHANGED
˚˚> Z
)
˚˚Z [
;
˚˚[ \ 
TMPro_EventManager
¸¸ 
.
¸¸ !
FONT_PROPERTY_EVENT
¸¸ 2
.
¸¸2 3
Remove
¸¸3 9
(
¸¸9 :&
ON_FONT_PROPERTY_CHANGED
¸¸: R
)
¸¸R S
;
¸¸S T 
TMPro_EventManager
˝˝ 
.
˝˝ -
TEXTMESHPRO_UGUI_PROPERTY_EVENT
˝˝ >
.
˝˝> ?
Remove
˝˝? E
(
˝˝E F2
$ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED
˝˝F j
)
˝˝j k
;
˝˝k l 
TMPro_EventManager
˛˛ 
.
˛˛ *
DRAG_AND_DROP_MATERIAL_EVENT
˛˛ ;
.
˛˛; <
Remove
˛˛< B
(
˛˛B C'
ON_DRAG_AND_DROP_MATERIAL
˛˛C \
)
˛˛\ ]
;
˛˛] ^ 
TMPro_EventManager
ˇˇ 
.
ˇˇ '
TEXT_STYLE_PROPERTY_EVENT
ˇˇ 8
.
ˇˇ8 9
Remove
ˇˇ9 ?
(
ˇˇ? @#
ON_TEXT_STYLE_CHANGED
ˇˇ@ U
)
ˇˇU V
;
ˇˇV W 
TMPro_EventManager
ÄÄ 
.
ÄÄ +
COLOR_GRADIENT_PROPERTY_EVENT
ÄÄ <
.
ÄÄ< =
Remove
ÄÄ= C
(
ÄÄC D'
ON_COLOR_GRADIENT_CHANGED
ÄÄD ]
)
ÄÄ] ^
;
ÄÄ^ _ 
TMPro_EventManager
ÅÅ 
.
ÅÅ )
TMP_SETTINGS_PROPERTY_EVENT
ÅÅ :
.
ÅÅ: ;
Remove
ÅÅ; A
(
ÅÅA B%
ON_TMP_SETTINGS_CHANGED
ÅÅB Y
)
ÅÅY Z
;
ÅÅZ [ 
TMPro_EventManager
ÇÇ 
.
ÇÇ !
RESOURCE_LOAD_EVENT
ÇÇ 2
.
ÇÇ2 3
Remove
ÇÇ3 9
(
ÇÇ9 :!
ON_RESOURCES_LOADED
ÇÇ: M
)
ÇÇM N
;
ÇÇN O
UnityEditor
ÑÑ 
.
ÑÑ 
PrefabUtility
ÑÑ %
.
ÑÑ% &#
prefabInstanceUpdated
ÑÑ& ;
-=
ÑÑ< >$
OnPrefabInstanceUpdate
ÑÑ? U
;
ÑÑU V%
m_isRegisteredForEvents
ÜÜ #
=
ÜÜ$ %
false
ÜÜ& +
;
ÜÜ+ ,
}
áá 	
	protected
ãã 
override
ãã 
void
ãã 
Reset
ãã  %
(
ãã% &
)
ãã& '
{
åå 	
if
êê 
(
êê 
	m_isAwake
êê 
==
êê 
false
êê "
)
êê" #
return
ëë 
;
ëë !
LoadDefaultSettings
ìì 
(
ìì  
)
ìì  !
;
ìì! "
LoadFontAsset
îî 
(
îî 
)
îî 
;
îî %
m_havePropertiesChanged
ññ #
=
ññ$ %
true
ññ& *
;
ññ* +
}
óó 	
	protected
öö 
override
öö 
void
öö 

OnValidate
öö  *
(
öö* +
)
öö+ ,
{
õõ 	
if
ûû 
(
ûû 
	m_isAwake
ûû 
==
ûû 
false
ûû "
)
ûû" #
return
üü 
;
üü 
if
¢¢ 
(
¢¢ 
m_fontAsset
¢¢ 
==
¢¢ 
null
¢¢ #
||
¢¢$ &#
m_hasFontAssetChanged
¢¢' <
)
¢¢< =
{
££ 
LoadFontAsset
§§ 
(
§§ 
)
§§ 
;
§§  #
m_hasFontAssetChanged
•• %
=
••& '
false
••( -
;
••- .
}
¶¶ 
if
®® 
(
®® 
m_canvasRenderer
®®  
==
®®! #
null
®®$ (
||
®®) +
m_canvasRenderer
®®, <
.
®®< =
GetMaterial
®®= H
(
®®H I
)
®®I J
==
®®K M
null
®®N R
||
®®S U
m_canvasRenderer
®®V f
.
®®f g
GetMaterial
®®g r
(
®®r s
)
®®s t
.
®®t u

GetTexture
®®u 
(®® Ä
ShaderUtilities®®Ä è
.®®è ê

ID_MainTex®®ê ö
)®®ö õ
==®®ú û
null®®ü £
||®®§ ¶
m_fontAsset®®ß ≤
==®®≥ µ
null®®∂ ∫
||®®ª Ω
m_fontAsset®®æ …
.®®…  
atlasTexture®®  ÷
.®®÷ ◊
GetInstanceID®®◊ ‰
(®®‰ Â
)®®Â Ê
!=®®Á È 
m_canvasRenderer®®Í ˙
.®®˙ ˚
GetMaterial®®˚ Ü
(®®Ü á
)®®á à
.®®à â

GetTexture®®â ì
(®®ì î
ShaderUtilities®®î £
.®®£ §

ID_MainTex®®§ Æ
)®®Æ Ø
.®®Ø ∞
GetInstanceID®®∞ Ω
(®®Ω æ
)®®æ ø
)®®ø ¿
{
©© 
LoadFontAsset
™™ 
(
™™ 
)
™™ 
;
™™  #
m_hasFontAssetChanged
´´ %
=
´´& '
false
´´( -
;
´´- .
}
¨¨ 
	m_padding
ÆÆ 
=
ÆÆ #
GetPaddingForMaterial
ÆÆ -
(
ÆÆ- .
)
ÆÆ. /
;
ÆÆ/ 0
ComputeMarginSize
ØØ 
(
ØØ 
)
ØØ 
;
ØØ  
m_inputSource
±± 
=
±± 
TextInputSources
±± ,
.
±±, -
TextInputBox
±±- 9
;
±±9 :%
m_havePropertiesChanged
≤≤ #
=
≤≤$ %
true
≤≤& *
;
≤≤* +%
m_isPreferredWidthDirty
≥≥ #
=
≥≥$ %
true
≥≥& *
;
≥≥* +&
m_isPreferredHeightDirty
¥¥ $
=
¥¥% &
true
¥¥' +
;
¥¥+ ,
SetAllDirty
∂∂ 
(
∂∂ 
)
∂∂ 
;
∂∂ 
}
∑∑ 	
void
ææ $
OnPrefabInstanceUpdate
ææ #
(
ææ# $

GameObject
ææ$ .
go
ææ/ 1
)
ææ1 2
{
øø 	
if
¡¡ 
(
¡¡ 
this
¡¡ 
==
¡¡ 
null
¡¡ 
)
¡¡ 
{
¬¬ 
UnityEditor
√√ 
.
√√ 
PrefabUtility
√√ )
.
√√) *#
prefabInstanceUpdated
√√* ?
-=
√√@ B$
OnPrefabInstanceUpdate
√√C Y
;
√√Y Z
return
ƒƒ 
;
ƒƒ 
}
≈≈ 
if
«« 
(
«« 
go
«« 
==
«« 
this
«« 
.
«« 

gameObject
«« %
)
««% &
{
»» 
TMP_SubMeshUI
…… 
[
…… 
]
…… 
subTextObjects
……  .
=
……/ 0%
GetComponentsInChildren
……1 H
<
……H I
TMP_SubMeshUI
……I V
>
……V W
(
……W X
)
……X Y
;
……Y Z
if
   
(
   
subTextObjects
   "
.
  " #
Length
  # )
>
  * +
$num
  , -
)
  - .
{
ÀÀ 
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ  
$num
ÃÃ! "
;
ÃÃ" #
i
ÃÃ$ %
<
ÃÃ& '
subTextObjects
ÃÃ( 6
.
ÃÃ6 7
Length
ÃÃ7 =
;
ÃÃ= >
i
ÃÃ? @
++
ÃÃ@ B
)
ÃÃB C
m_subTextObjects
ÕÕ (
[
ÕÕ( )
i
ÕÕ) *
+
ÕÕ+ ,
$num
ÕÕ- .
]
ÕÕ. /
=
ÕÕ0 1
subTextObjects
ÕÕ2 @
[
ÕÕ@ A
i
ÕÕA B
]
ÕÕB C
;
ÕÕC D
}
ŒŒ 
}
œœ 
}
–– 	
void
‘‘ !
ON_RESOURCES_LOADED
‘‘  
(
‘‘  !
)
‘‘! "
{
’’ 	 
TMPro_EventManager
÷÷ 
.
÷÷ !
RESOURCE_LOAD_EVENT
÷÷ 2
.
÷÷2 3
Remove
÷÷3 9
(
÷÷9 :!
ON_RESOURCES_LOADED
÷÷: M
)
÷÷M N
;
÷÷N O
if
ÿÿ 
(
ÿÿ 
this
ÿÿ 
==
ÿÿ 
null
ÿÿ 
)
ÿÿ 
return
ŸŸ 
;
ŸŸ '
m_isWaitingOnResourceLoad
€€ %
=
€€& '
false
€€( -
;
€€- .
Awake
›› 
(
›› 
)
›› 
;
›› 
OnEnable
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
void
„„ *
ON_MATERIAL_PROPERTY_CHANGED
„„ )
(
„„) *
bool
„„* .
	isChanged
„„/ 8
,
„„8 9
Material
„„: B
mat
„„C F
)
„„F G
{
‰‰ 	
ShaderUtilities
ÁÁ 
.
ÁÁ "
GetShaderPropertyIDs
ÁÁ 0
(
ÁÁ0 1
)
ÁÁ1 2
;
ÁÁ2 3
int
ÈÈ 

materialID
ÈÈ 
=
ÈÈ 
mat
ÈÈ  
.
ÈÈ  !
GetInstanceID
ÈÈ! .
(
ÈÈ. /
)
ÈÈ/ 0
;
ÈÈ0 1
int
ÍÍ 
sharedMaterialID
ÍÍ  
=
ÍÍ! "
m_sharedMaterial
ÍÍ# 3
.
ÍÍ3 4
GetInstanceID
ÍÍ4 A
(
ÍÍA B
)
ÍÍB C
;
ÍÍC D
int
ÎÎ 
maskingMaterialID
ÎÎ !
=
ÎÎ" #
m_MaskMaterial
ÎÎ$ 2
==
ÎÎ3 5
null
ÎÎ6 :
?
ÎÎ; <
$num
ÎÎ= >
:
ÎÎ? @
m_MaskMaterial
ÎÎA O
.
ÎÎO P
GetInstanceID
ÎÎP ]
(
ÎÎ] ^
)
ÎÎ^ _
;
ÎÎ_ `
if
ÌÌ 
(
ÌÌ 
m_canvasRenderer
ÌÌ  
==
ÌÌ! #
null
ÌÌ$ (
||
ÌÌ) +
m_canvasRenderer
ÌÌ, <
.
ÌÌ< =
GetMaterial
ÌÌ= H
(
ÌÌH I
)
ÌÌI J
==
ÌÌK M
null
ÌÌN R
)
ÌÌR S
{
ÓÓ 
if
ÔÔ 
(
ÔÔ 
m_canvasRenderer
ÔÔ $
==
ÔÔ% '
null
ÔÔ( ,
)
ÔÔ, -
return
ÔÔ. 4
;
ÔÔ4 5
if
ÒÒ 
(
ÒÒ 
m_fontAsset
ÒÒ 
!=
ÒÒ  "
null
ÒÒ# '
)
ÒÒ' (
{
ÚÚ 
m_canvasRenderer
ÛÛ $
.
ÛÛ$ %
SetMaterial
ÛÛ% 0
(
ÛÛ0 1
m_fontAsset
ÛÛ1 <
.
ÛÛ< =
material
ÛÛ= E
,
ÛÛE F
m_sharedMaterial
ÛÛG W
.
ÛÛW X

GetTexture
ÛÛX b
(
ÛÛb c
ShaderUtilities
ÛÛc r
.
ÛÛr s

ID_MainTex
ÛÛs }
)
ÛÛ} ~
)
ÛÛ~ 
;ÛÛ Ä
}
ıı 
else
ˆˆ 
Debug
˜˜ 
.
˜˜ 

LogWarning
˜˜ $
(
˜˜$ %
$str
˜˜% A
+
˜˜B C
name
˜˜D H
+
˜˜I J
$str
˜˜K j
,
˜˜j k
this
˜˜l p
)
˜˜p q
;
˜˜q r
}
¯¯ 
if
˚˚ 
(
˚˚ 
m_canvasRenderer
˚˚  
.
˚˚  !
GetMaterial
˚˚! ,
(
˚˚, -
)
˚˚- .
!=
˚˚/ 1
m_sharedMaterial
˚˚2 B
&&
˚˚C E
m_fontAsset
˚˚F Q
==
˚˚R T
null
˚˚U Y
)
˚˚Y Z
{
¸¸ 
m_sharedMaterial
˛˛  
=
˛˛! "
m_canvasRenderer
˛˛# 3
.
˛˛3 4
GetMaterial
˛˛4 ?
(
˛˛? @
)
˛˛@ A
;
˛˛A B
}
ˇˇ 
if
ÉÉ 
(
ÉÉ 
m_MaskMaterial
ÉÉ 
!=
ÉÉ !
null
ÉÉ" &
)
ÉÉ& '
{
ÑÑ 
UnityEditor
ÖÖ 
.
ÖÖ 
Undo
ÖÖ  
.
ÖÖ  !
RecordObject
ÖÖ! -
(
ÖÖ- .
m_MaskMaterial
ÖÖ. <
,
ÖÖ< =
$str
ÖÖ> Y
)
ÖÖY Z
;
ÖÖZ [
UnityEditor
ÜÜ 
.
ÜÜ 
Undo
ÜÜ  
.
ÜÜ  !
RecordObject
ÜÜ! -
(
ÜÜ- .
m_sharedMaterial
ÜÜ. >
,
ÜÜ> ?
$str
ÜÜ@ [
)
ÜÜ[ \
;
ÜÜ\ ]
if
àà 
(
àà 

materialID
àà 
==
àà !
sharedMaterialID
àà" 2
)
àà2 3
{
ââ 
float
ãã 
	stencilID
ãã #
=
ãã$ %
m_MaskMaterial
ãã& 4
.
ãã4 5
GetFloat
ãã5 =
(
ãã= >
ShaderUtilities
ãã> M
.
ããM N
ID_StencilID
ããN Z
)
ããZ [
;
ãã[ \
float
åå 
stencilComp
åå %
=
åå& '
m_MaskMaterial
åå( 6
.
åå6 7
GetFloat
åå7 ?
(
åå? @
ShaderUtilities
åå@ O
.
ååO P
ID_StencilComp
ååP ^
)
åå^ _
;
åå_ `
m_MaskMaterial
ëë "
.
ëë" #(
CopyPropertiesFromMaterial
ëë# =
(
ëë= >
mat
ëë> A
)
ëëA B
;
ëëB C
m_MaskMaterial
íí "
.
íí" #
shaderKeywords
íí# 1
=
íí2 3
mat
íí4 7
.
íí7 8
shaderKeywords
íí8 F
;
ííF G
m_MaskMaterial
îî "
.
îî" #
SetFloat
îî# +
(
îî+ ,
ShaderUtilities
îî, ;
.
îî; <
ID_StencilID
îî< H
,
îîH I
	stencilID
îîJ S
)
îîS T
;
îîT U
m_MaskMaterial
ïï "
.
ïï" #
SetFloat
ïï# +
(
ïï+ ,
ShaderUtilities
ïï, ;
.
ïï; <
ID_StencilComp
ïï< J
,
ïïJ K
stencilComp
ïïL W
)
ïïW X
;
ïïX Y
}
ôô 
else
öö 
if
öö 
(
öö 

materialID
öö #
==
öö$ &
maskingMaterialID
öö' 8
)
öö8 9
{
õõ #
GetPaddingForMaterial
ùù )
(
ùù) *
mat
ùù* -
)
ùù- .
;
ùù. /
m_sharedMaterial
üü $
.
üü$ %(
CopyPropertiesFromMaterial
üü% ?
(
üü? @
mat
üü@ C
)
üüC D
;
üüD E
m_sharedMaterial
†† $
.
††$ %
shaderKeywords
††% 3
=
††4 5
mat
††6 9
.
††9 :
shaderKeywords
††: H
;
††H I
m_sharedMaterial
°° $
.
°°$ %
SetFloat
°°% -
(
°°- .
ShaderUtilities
°°. =
.
°°= >
ID_StencilID
°°> J
,
°°J K
$num
°°L M
)
°°M N
;
°°N O
m_sharedMaterial
¢¢ $
.
¢¢$ %
SetFloat
¢¢% -
(
¢¢- .
ShaderUtilities
¢¢. =
.
¢¢= >
ID_StencilComp
¢¢> L
,
¢¢L M
$num
¢¢N O
)
¢¢O P
;
¢¢P Q
}
¶¶ 
}
®® 
	m_padding
™™ 
=
™™ #
GetPaddingForMaterial
™™ -
(
™™- .
)
™™. /
;
™™/ 0%
m_havePropertiesChanged
´´ #
=
´´$ %
true
´´& *
;
´´* +
SetVerticesDirty
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
ÆÆ 	
void
≤≤ &
ON_FONT_PROPERTY_CHANGED
≤≤ %
(
≤≤% &
bool
≤≤& *
	isChanged
≤≤+ 4
,
≤≤4 5
Object
≤≤6 <
font
≤≤= A
)
≤≤A B
{
≥≥ 	
if
¥¥ 
(
¥¥ 
MaterialReference
¥¥ !
.
¥¥! "
Contains
¥¥" *
(
¥¥* +"
m_materialReferences
¥¥+ ?
,
¥¥? @
(
¥¥A B
TMP_FontAsset
¥¥B O
)
¥¥O P
font
¥¥Q U
)
¥¥U V
)
¥¥V W
{
µµ %
m_havePropertiesChanged
∑∑ '
=
∑∑( )
true
∑∑* .
;
∑∑. /
UpdateMeshPadding
ππ !
(
ππ! "
)
ππ" #
;
ππ# $
SetLayoutDirty
ªª 
(
ªª 
)
ªª  
;
ªª  !
SetVerticesDirty
ºº  
(
ºº  !
)
ºº! "
;
ºº" #
}
ΩΩ 
}
ææ 	
void
¬¬ 2
$ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED
¬¬ 1
(
¬¬1 2
bool
¬¬2 6
	isChanged
¬¬7 @
,
¬¬@ A
Object
¬¬B H
obj
¬¬I L
)
¬¬L M
{
√√ 	
if
∆∆ 
(
∆∆ 
obj
∆∆ 
==
∆∆ 
this
∆∆ 
)
∆∆ 
{
«« %
m_havePropertiesChanged
…… '
=
……( )
true
……* .
;
……. /
ComputeMarginSize
ÀÀ !
(
ÀÀ! "
)
ÀÀ" #
;
ÀÀ# $
SetVerticesDirty
ÃÃ  
(
ÃÃ  !
)
ÃÃ! "
;
ÃÃ" #
}
ÕÕ 
}
ŒŒ 	
void
““ '
ON_DRAG_AND_DROP_MATERIAL
““ &
(
““& '

GameObject
““' 1
obj
““2 5
,
““5 6
Material
““7 ?
currentMaterial
““@ O
,
““O P
Material
““Q Y
newMaterial
““Z e
)
““e f
{
”” 	
if
ÿÿ 
(
ÿÿ 
obj
ÿÿ 
==
ÿÿ 

gameObject
ÿÿ !
||
ÿÿ" $
UnityEditor
ÿÿ% 0
.
ÿÿ0 1
PrefabUtility
ÿÿ1 >
.
ÿÿ> ?.
 GetCorrespondingObjectFromSource
ÿÿ? _
(
ÿÿ_ `

gameObject
ÿÿ` j
)
ÿÿj k
==
ÿÿl n
obj
ÿÿo r
)
ÿÿr s
{
‹‹ 
UnityEditor
›› 
.
›› 
Undo
››  
.
››  !
RecordObject
››! -
(
››- .
this
››. 2
,
››2 3
$str
››4 I
)
››I J
;
››J K
UnityEditor
ﬁﬁ 
.
ﬁﬁ 
Undo
ﬁﬁ  
.
ﬁﬁ  !
RecordObject
ﬁﬁ! -
(
ﬁﬁ- .
m_canvasRenderer
ﬁﬁ. >
,
ﬁﬁ> ?
$str
ﬁﬁ@ U
)
ﬁﬁU V
;
ﬁﬁV W
m_sharedMaterial
‡‡  
=
‡‡! "
newMaterial
‡‡# .
;
‡‡. /
	m_padding
‚‚ 
=
‚‚ #
GetPaddingForMaterial
‚‚ 1
(
‚‚1 2
)
‚‚2 3
;
‚‚3 4%
m_havePropertiesChanged
‰‰ '
=
‰‰( )
true
‰‰* .
;
‰‰. /
SetVerticesDirty
ÂÂ  
(
ÂÂ  !
)
ÂÂ! "
;
ÂÂ" #
SetMaterialDirty
ÊÊ  
(
ÊÊ  !
)
ÊÊ! "
;
ÊÊ" #
}
ÁÁ 
}
ËË 	
void
ÏÏ #
ON_TEXT_STYLE_CHANGED
ÏÏ "
(
ÏÏ" #
bool
ÏÏ# '
	isChanged
ÏÏ( 1
)
ÏÏ1 2
{
ÌÌ 	%
m_havePropertiesChanged
ÓÓ #
=
ÓÓ$ %
true
ÓÓ& *
;
ÓÓ* +
SetVerticesDirty
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ 
}
 	
void
˜˜ '
ON_COLOR_GRADIENT_CHANGED
˜˜ &
(
˜˜& '
Object
˜˜' -
gradient
˜˜. 6
)
˜˜6 7
{
¯¯ 	%
m_havePropertiesChanged
˘˘ #
=
˘˘$ %
true
˘˘& *
;
˘˘* +
SetVerticesDirty
˙˙ 
(
˙˙ 
)
˙˙ 
;
˙˙ 
}
˚˚ 	
void
ÅÅ %
ON_TMP_SETTINGS_CHANGED
ÅÅ $
(
ÅÅ$ %
)
ÅÅ% &
{
ÇÇ 	"
m_defaultSpriteAsset
ÉÉ  
=
ÉÉ! "
null
ÉÉ# '
;
ÉÉ' (%
m_havePropertiesChanged
ÑÑ #
=
ÑÑ$ %
true
ÑÑ& *
;
ÑÑ* +
SetAllDirty
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
	protected
ãã 
override
ãã 
void
ãã 
LoadFontAsset
ãã  -
(
ãã- .
)
ãã. /
{
åå 	
ShaderUtilities
èè 
.
èè "
GetShaderPropertyIDs
èè 0
(
èè0 1
)
èè1 2
;
èè2 3
if
ëë 
(
ëë 
m_fontAsset
ëë 
==
ëë 
null
ëë #
)
ëë# $
{
íí 
if
ìì 
(
ìì 
TMP_Settings
ìì  
.
ìì  !
defaultFontAsset
ìì! 1
!=
ìì2 4
null
ìì5 9
)
ìì9 :
m_fontAsset
îî 
=
îî  !
TMP_Settings
îî" .
.
îî. /
defaultFontAsset
îî/ ?
;
îî? @
else
ïï 
m_fontAsset
ññ 
=
ññ  !
	Resources
ññ" +
.
ññ+ ,
Load
ññ, 0
<
ññ0 1
TMP_FontAsset
ññ1 >
>
ññ> ?
(
ññ? @
$str
ññ@ f
)
ññf g
;
ññg h
if
òò 
(
òò 
m_fontAsset
òò 
==
òò  "
null
òò# '
)
òò' (
{
ôô 
Debug
öö 
.
öö 

LogWarning
öö $
(
öö$ %
$str
öö% {
+
öö| }

gameObjectöö~ à
.ööà â
nameööâ ç
+ööé è
$strööê ì
,ööì î
thisööï ô
)ööô ö
;ööö õ
return
õõ 
;
õõ 
}
úú 
if
ûû 
(
ûû 
m_fontAsset
ûû 
.
ûû  "
characterLookupTable
ûû  4
==
ûû5 7
null
ûû8 <
)
ûû< =
{
üü 
Debug
†† 
.
†† 
Log
†† 
(
†† 
$str
†† 3
)
††3 4
;
††4 5
}
°° 
m_sharedMaterial
££  
=
££! "
m_fontAsset
££# .
.
££. /
material
££/ 7
;
££7 8
}
§§ 
else
•• 
{
¶¶ 
if
®® 
(
®® 
m_fontAsset
®® 
.
®®  "
characterLookupTable
®®  4
==
®®5 7
null
®®8 <
)
®®< =
m_fontAsset
©© 
.
©©  %
ReadFontAssetDefinition
©©  7
(
©©7 8
)
©©8 9
;
©©9 :
if
¨¨ 
(
¨¨ 
m_sharedMaterial
¨¨ $
==
¨¨% '
null
¨¨( ,
&&
¨¨- /
m_baseMaterial
¨¨0 >
!=
¨¨? A
null
¨¨B F
)
¨¨F G
{
≠≠ 
m_sharedMaterial
ÆÆ $
=
ÆÆ% &
m_baseMaterial
ÆÆ' 5
;
ÆÆ5 6
m_baseMaterial
ØØ "
=
ØØ# $
null
ØØ% )
;
ØØ) *
}
∞∞ 
if
≥≥ 
(
≥≥ 
m_sharedMaterial
≥≥ $
==
≥≥% '
null
≥≥( ,
||
≥≥- /
m_sharedMaterial
≥≥0 @
.
≥≥@ A

GetTexture
≥≥A K
(
≥≥K L
ShaderUtilities
≥≥L [
.
≥≥[ \

ID_MainTex
≥≥\ f
)
≥≥f g
==
≥≥h j
null
≥≥k o
||
≥≥p r
m_fontAsset
≥≥s ~
.
≥≥~ 
atlasTexture≥≥ ã
.≥≥ã å
GetInstanceID≥≥å ô
(≥≥ô ö
)≥≥ö õ
!=≥≥ú û 
m_sharedMaterial≥≥ü Ø
.≥≥Ø ∞

GetTexture≥≥∞ ∫
(≥≥∫ ª
ShaderUtilities≥≥ª  
.≥≥  À

ID_MainTex≥≥À ’
)≥≥’ ÷
.≥≥÷ ◊
GetInstanceID≥≥◊ ‰
(≥≥‰ Â
)≥≥Â Ê
)≥≥Ê Á
{
¥¥ 
if
µµ 
(
µµ 
m_fontAsset
µµ #
.
µµ# $
material
µµ$ ,
==
µµ- /
null
µµ0 4
)
µµ4 5
Debug
∂∂ 
.
∂∂ 

LogWarning
∂∂ (
(
∂∂( )
$str
∂∂) T
+
∂∂U V
m_fontAsset
∂∂W b
.
∂∂b c
name
∂∂c g
+
∂∂h i
$str
∂∂j y
+
∂∂z {

gameObject∂∂| Ü
.∂∂Ü á
name∂∂á ã
+∂∂å ç
$str∂∂é ú
,∂∂ú ù
this∂∂û ¢
)∂∂¢ £
;∂∂£ §
else
∑∑ 
m_sharedMaterial
∏∏ (
=
∏∏) *
m_fontAsset
∏∏+ 6
.
∏∏6 7
material
∏∏7 ?
;
∏∏? @
}
ππ 
}
∫∫ "
GetSpecialCharacters
ææ  
(
ææ  !
m_fontAsset
ææ! ,
)
ææ, -
;
ææ- .
	m_padding
¿¿ 
=
¿¿ #
GetPaddingForMaterial
¿¿ -
(
¿¿- .
)
¿¿. /
;
¿¿/ 0
SetMaterialDirty
¬¬ 
(
¬¬ 
)
¬¬ 
;
¬¬ 
}
√√ 	
private
…… 
Canvas
…… 
	GetCanvas
……  
(
……  !
)
……! "
{
   	
Canvas
ÀÀ 
canvas
ÀÀ 
=
ÀÀ 
null
ÀÀ  
;
ÀÀ  !
var
ÃÃ 
list
ÃÃ 
=
ÃÃ 
TMP_ListPool
ÃÃ #
<
ÃÃ# $
Canvas
ÃÃ$ *
>
ÃÃ* +
.
ÃÃ+ ,
Get
ÃÃ, /
(
ÃÃ/ 0
)
ÃÃ0 1
;
ÃÃ1 2

gameObject
ŒŒ 
.
ŒŒ #
GetComponentsInParent
ŒŒ ,
(
ŒŒ, -
false
ŒŒ- 2
,
ŒŒ2 3
list
ŒŒ4 8
)
ŒŒ8 9
;
ŒŒ9 :
if
œœ 
(
œœ 
list
œœ 
.
œœ 
Count
œœ 
>
œœ 
$num
œœ 
)
œœ 
{
–– 
for
““ 
(
““ 
int
““ 
i
““ 
=
““ 
$num
““ 
;
““ 
i
““  !
<
““" #
list
““$ (
.
““( )
Count
““) .
;
““. /
++
““0 2
i
““2 3
)
““3 4
{
”” 
if
‘‘ 
(
‘‘ 
list
‘‘ 
[
‘‘ 
i
‘‘ 
]
‘‘ 
.
‘‘   
isActiveAndEnabled
‘‘  2
)
‘‘2 3
{
’’ 
canvas
÷÷ 
=
÷÷  
list
÷÷! %
[
÷÷% &
i
÷÷& '
]
÷÷' (
;
÷÷( )
break
◊◊ 
;
◊◊ 
}
ÿÿ 
}
ŸŸ 
}
⁄⁄ 
TMP_ListPool
‹‹ 
<
‹‹ 
Canvas
‹‹ 
>
‹‹  
.
‹‹  !
Release
‹‹! (
(
‹‹( )
list
‹‹) -
)
‹‹- .
;
‹‹. /
return
ﬁﬁ 
canvas
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
void
ÂÂ  
UpdateEnvMapMatrix
ÂÂ 
(
ÂÂ  
)
ÂÂ  !
{
ÊÊ 	
if
ÁÁ 
(
ÁÁ 
!
ÁÁ 
m_sharedMaterial
ÁÁ !
.
ÁÁ! "
HasProperty
ÁÁ" -
(
ÁÁ- .
ShaderUtilities
ÁÁ. =
.
ÁÁ= >
	ID_EnvMap
ÁÁ> G
)
ÁÁG H
||
ÁÁI K
m_sharedMaterial
ÁÁL \
.
ÁÁ\ ]

GetTexture
ÁÁ] g
(
ÁÁg h
ShaderUtilities
ÁÁh w
.
ÁÁw x
	ID_EnvMapÁÁx Å
)ÁÁÅ Ç
==ÁÁÉ Ö
nullÁÁÜ ä
)ÁÁä ã
return
ËË 
;
ËË 
Vector3
ÎÎ 
rotation
ÎÎ 
=
ÎÎ 
m_sharedMaterial
ÎÎ /
.
ÎÎ/ 0
	GetVector
ÎÎ0 9
(
ÎÎ9 :
ShaderUtilities
ÎÎ: I
.
ÎÎI J"
ID_EnvMatrixRotation
ÎÎJ ^
)
ÎÎ^ _
;
ÎÎ_ `
m_EnvMapMatrix
ÏÏ 
=
ÏÏ 
	Matrix4x4
ÏÏ &
.
ÏÏ& '
TRS
ÏÏ' *
(
ÏÏ* +
Vector3
ÏÏ+ 2
.
ÏÏ2 3
zero
ÏÏ3 7
,
ÏÏ7 8

Quaternion
ÏÏ9 C
.
ÏÏC D
Euler
ÏÏD I
(
ÏÏI J
rotation
ÏÏJ R
)
ÏÏR S
,
ÏÏS T
Vector3
ÏÏU \
.
ÏÏ\ ]
one
ÏÏ] `
)
ÏÏ` a
;
ÏÏa b
m_sharedMaterial
ÓÓ 
.
ÓÓ 
	SetMatrix
ÓÓ &
(
ÓÓ& '
ShaderUtilities
ÓÓ' 6
.
ÓÓ6 7
ID_EnvMatrix
ÓÓ7 C
,
ÓÓC D
m_EnvMapMatrix
ÓÓE S
)
ÓÓS T
;
ÓÓT U
}
ÔÔ 	
void
ÛÛ 
EnableMasking
ÛÛ 
(
ÛÛ 
)
ÛÛ 
{
ÙÙ 	
if
ıı 
(
ıı 
m_fontMaterial
ıı 
==
ıı !
null
ıı" &
)
ıı& '
{
ˆˆ 
m_fontMaterial
˜˜ 
=
˜˜  $
CreateMaterialInstance
˜˜! 7
(
˜˜7 8
m_sharedMaterial
˜˜8 H
)
˜˜H I
;
˜˜I J
m_canvasRenderer
¯¯  
.
¯¯  !
SetMaterial
¯¯! ,
(
¯¯, -
m_fontMaterial
¯¯- ;
,
¯¯; <
m_sharedMaterial
¯¯= M
.
¯¯M N

GetTexture
¯¯N X
(
¯¯X Y
ShaderUtilities
¯¯Y h
.
¯¯h i

ID_MainTex
¯¯i s
)
¯¯s t
)
¯¯t u
;
¯¯u v
}
˘˘ 
m_sharedMaterial
˚˚ 
=
˚˚ 
m_fontMaterial
˚˚ -
;
˚˚- .
if
¸¸ 
(
¸¸ 
m_sharedMaterial
¸¸  
.
¸¸  !
HasProperty
¸¸! ,
(
¸¸, -
ShaderUtilities
¸¸- <
.
¸¸< =
ID_ClipRect
¸¸= H
)
¸¸H I
)
¸¸I J
{
˝˝ 
m_sharedMaterial
˛˛  
.
˛˛  !
EnableKeyword
˛˛! .
(
˛˛. /
ShaderUtilities
˛˛/ >
.
˛˛> ?
Keyword_MASK_SOFT
˛˛? P
)
˛˛P Q
;
˛˛Q R
m_sharedMaterial
ˇˇ  
.
ˇˇ  !
DisableKeyword
ˇˇ! /
(
ˇˇ/ 0
ShaderUtilities
ˇˇ0 ?
.
ˇˇ? @
Keyword_MASK_HARD
ˇˇ@ Q
)
ˇˇQ R
;
ˇˇR S
m_sharedMaterial
ÄÄ  
.
ÄÄ  !
DisableKeyword
ÄÄ! /
(
ÄÄ/ 0
ShaderUtilities
ÄÄ0 ?
.
ÄÄ? @
Keyword_MASK_TEX
ÄÄ@ P
)
ÄÄP Q
;
ÄÄQ R

UpdateMask
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
}
ÉÉ  
m_isMaskingEnabled
ÖÖ 
=
ÖÖ  
true
ÖÖ! %
;
ÖÖ% &
}
òò 	
void
úú 
DisableMasking
úú 
(
úú 
)
úú 
{
ùù 	
}
…… 	
void
ÕÕ 

UpdateMask
ÕÕ 
(
ÕÕ 
)
ÕÕ 
{
ŒŒ 	
if
—— 
(
—— 
m_rectTransform
—— 
!=
——  "
null
——# '
)
——' (
{
““ 
if
◊◊ 
(
◊◊ 
!
◊◊ 
ShaderUtilities
◊◊ $
.
◊◊$ %
isInitialized
◊◊% 2
)
◊◊2 3
ShaderUtilities
ÿÿ #
.
ÿÿ# $"
GetShaderPropertyIDs
ÿÿ$ 8
(
ÿÿ8 9
)
ÿÿ9 :
;
ÿÿ: ;!
m_isScrollRegionSet
‹‹ #
=
‹‹$ %
true
‹‹& *
;
‹‹* +
float
ﬁﬁ 
	softnessX
ﬁﬁ 
=
ﬁﬁ  !
Mathf
ﬁﬁ" '
.
ﬁﬁ' (
Min
ﬁﬁ( +
(
ﬁﬁ+ ,
Mathf
ﬁﬁ, 1
.
ﬁﬁ1 2
Min
ﬁﬁ2 5
(
ﬁﬁ5 6
m_margin
ﬁﬁ6 >
.
ﬁﬁ> ?
x
ﬁﬁ? @
,
ﬁﬁ@ A
m_margin
ﬁﬁB J
.
ﬁﬁJ K
z
ﬁﬁK L
)
ﬁﬁL M
,
ﬁﬁM N
m_sharedMaterial
ﬁﬁO _
.
ﬁﬁ_ `
GetFloat
ﬁﬁ` h
(
ﬁﬁh i
ShaderUtilities
ﬁﬁi x
.
ﬁﬁx y
ID_MaskSoftnessXﬁﬁy â
)ﬁﬁâ ä
)ﬁﬁä ã
;ﬁﬁã å
float
ﬂﬂ 
	softnessY
ﬂﬂ 
=
ﬂﬂ  !
Mathf
ﬂﬂ" '
.
ﬂﬂ' (
Min
ﬂﬂ( +
(
ﬂﬂ+ ,
Mathf
ﬂﬂ, 1
.
ﬂﬂ1 2
Min
ﬂﬂ2 5
(
ﬂﬂ5 6
m_margin
ﬂﬂ6 >
.
ﬂﬂ> ?
y
ﬂﬂ? @
,
ﬂﬂ@ A
m_margin
ﬂﬂB J
.
ﬂﬂJ K
w
ﬂﬂK L
)
ﬂﬂL M
,
ﬂﬂM N
m_sharedMaterial
ﬂﬂO _
.
ﬂﬂ_ `
GetFloat
ﬂﬂ` h
(
ﬂﬂh i
ShaderUtilities
ﬂﬂi x
.
ﬂﬂx y
ID_MaskSoftnessYﬂﬂy â
)ﬂﬂâ ä
)ﬂﬂä ã
;ﬂﬂã å
	softnessX
·· 
=
·· 
	softnessX
·· %
>
··& '
$num
··( )
?
··* +
	softnessX
··, 5
:
··6 7
$num
··8 9
;
··9 :
	softnessY
‚‚ 
=
‚‚ 
	softnessY
‚‚ %
>
‚‚& '
$num
‚‚( )
?
‚‚* +
	softnessY
‚‚, 5
:
‚‚6 7
$num
‚‚8 9
;
‚‚9 :
float
‰‰ 
width
‰‰ 
=
‰‰ 
(
‰‰ 
m_rectTransform
‰‰ .
.
‰‰. /
rect
‰‰/ 3
.
‰‰3 4
width
‰‰4 9
-
‰‰: ;
Mathf
‰‰< A
.
‰‰A B
Max
‰‰B E
(
‰‰E F
m_margin
‰‰F N
.
‰‰N O
x
‰‰O P
,
‰‰P Q
$num
‰‰R S
)
‰‰S T
-
‰‰U V
Mathf
‰‰W \
.
‰‰\ ]
Max
‰‰] `
(
‰‰` a
m_margin
‰‰a i
.
‰‰i j
z
‰‰j k
,
‰‰k l
$num
‰‰m n
)
‰‰n o
)
‰‰o p
/
‰‰q r
$num
‰‰s t
+
‰‰u v
	softnessX‰‰w Ä
;‰‰Ä Å
float
ÂÂ 
height
ÂÂ 
=
ÂÂ 
(
ÂÂ  
m_rectTransform
ÂÂ  /
.
ÂÂ/ 0
rect
ÂÂ0 4
.
ÂÂ4 5
height
ÂÂ5 ;
-
ÂÂ< =
Mathf
ÂÂ> C
.
ÂÂC D
Max
ÂÂD G
(
ÂÂG H
m_margin
ÂÂH P
.
ÂÂP Q
y
ÂÂQ R
,
ÂÂR S
$num
ÂÂT U
)
ÂÂU V
-
ÂÂW X
Mathf
ÂÂY ^
.
ÂÂ^ _
Max
ÂÂ_ b
(
ÂÂb c
m_margin
ÂÂc k
.
ÂÂk l
w
ÂÂl m
,
ÂÂm n
$num
ÂÂo p
)
ÂÂp q
)
ÂÂq r
/
ÂÂs t
$num
ÂÂu v
+
ÂÂw x
	softnessYÂÂy Ç
;ÂÂÇ É
Vector2
ËË 
center
ËË 
=
ËË  
m_rectTransform
ËË! 0
.
ËË0 1
localPosition
ËË1 >
+
ËË? @
new
ËËA D
Vector3
ËËE L
(
ËËL M
(
ËËM N
$num
ËËN R
-
ËËS T
m_rectTransform
ËËU d
.
ËËd e
pivot
ËËe j
.
ËËj k
x
ËËk l
)
ËËl m
*
ËËn o
m_rectTransform
ËËp 
.ËË Ä
rectËËÄ Ñ
.ËËÑ Ö
widthËËÖ ä
+ËËã å
(ËËç é
MathfËËé ì
.ËËì î
MaxËËî ó
(ËËó ò
m_marginËËò †
.ËË† °
xËË° ¢
,ËË¢ £
$numËË§ •
)ËË• ¶
-ËËß ®
MathfËË© Æ
.ËËÆ Ø
MaxËËØ ≤
(ËË≤ ≥
m_marginËË≥ ª
.ËËª º
zËËº Ω
,ËËΩ æ
$numËËø ¿
)ËË¿ ¡
)ËË¡ ¬
/ËË√ ƒ
$numËË≈ ∆
,ËË∆ «
(ËË» …
$numËË… Õ
-ËËŒ œ
m_rectTransformËË– ﬂ
.ËËﬂ ‡
pivotËË‡ Â
.ËËÂ Ê
yËËÊ Á
)ËËÁ Ë
*ËËÈ Í
m_rectTransformËËÎ ˙
.ËË˙ ˚
rectËË˚ ˇ
.ËËˇ Ä
heightËËÄ Ü
+ËËá à
(ËËâ ä
-ËËä ã
MathfËËã ê
.ËËê ë
MaxËËë î
(ËËî ï
m_marginËËï ù
.ËËù û
yËËû ü
,ËËü †
$numËË° ¢
)ËË¢ £
+ËË§ •
MathfËË¶ ´
.ËË´ ¨
MaxËË¨ Ø
(ËËØ ∞
m_marginËË∞ ∏
.ËË∏ π
wËËπ ∫
,ËË∫ ª
$numËËº Ω
)ËËΩ æ
)ËËæ ø
/ËË¿ ¡
$numËË¬ √
)ËË√ ƒ
;ËËƒ ≈
Vector4
ÎÎ 
mask
ÎÎ 
=
ÎÎ 
new
ÎÎ "
Vector4
ÎÎ# *
(
ÎÎ* +
center
ÎÎ+ 1
.
ÎÎ1 2
x
ÎÎ2 3
,
ÎÎ3 4
center
ÎÎ5 ;
.
ÎÎ; <
y
ÎÎ< =
,
ÎÎ= >
width
ÎÎ? D
,
ÎÎD E
height
ÎÎF L
)
ÎÎL M
;
ÎÎM N
m_sharedMaterial
ÚÚ  
.
ÚÚ  !
	SetVector
ÚÚ! *
(
ÚÚ* +
ShaderUtilities
ÚÚ+ :
.
ÚÚ: ;
ID_ClipRect
ÚÚ; F
,
ÚÚF G
mask
ÚÚH L
)
ÚÚL M
;
ÚÚM N
}
ÛÛ 
}
ÙÙ 	
	protected
¯¯ 
override
¯¯ 
Material
¯¯ #
GetMaterial
¯¯$ /
(
¯¯/ 0
Material
¯¯0 8
mat
¯¯9 <
)
¯¯< =
{
˘˘ 	
ShaderUtilities
˚˚ 
.
˚˚ "
GetShaderPropertyIDs
˚˚ 0
(
˚˚0 1
)
˚˚1 2
;
˚˚2 3
if
ÉÉ 
(
ÉÉ 
m_fontMaterial
ÉÉ 
==
ÉÉ !
null
ÉÉ" &
||
ÉÉ' )
m_fontMaterial
ÉÉ* 8
.
ÉÉ8 9
GetInstanceID
ÉÉ9 F
(
ÉÉF G
)
ÉÉG H
!=
ÉÉI K
mat
ÉÉL O
.
ÉÉO P
GetInstanceID
ÉÉP ]
(
ÉÉ] ^
)
ÉÉ^ _
)
ÉÉ_ `
m_fontMaterial
ÑÑ 
=
ÑÑ  $
CreateMaterialInstance
ÑÑ! 7
(
ÑÑ7 8
mat
ÑÑ8 ;
)
ÑÑ; <
;
ÑÑ< =
m_sharedMaterial
ÜÜ 
=
ÜÜ 
m_fontMaterial
ÜÜ -
;
ÜÜ- .
	m_padding
àà 
=
àà #
GetPaddingForMaterial
àà -
(
àà- .
)
àà. /
;
àà/ 0(
m_ShouldRecalculateStencil
ää &
=
ää' (
true
ää) -
;
ää- .
SetVerticesDirty
ãã 
(
ãã 
)
ãã 
;
ãã 
SetMaterialDirty
åå 
(
åå 
)
åå 
;
åå 
return
éé 
m_sharedMaterial
éé #
;
éé# $
}
èè 	
	protected
ññ 
override
ññ 
Material
ññ #
[
ññ# $
]
ññ$ %
GetMaterials
ññ& 2
(
ññ2 3
Material
ññ3 ;
[
ññ; <
]
ññ< =
mats
ññ> B
)
ññB C
{
óó 	
int
òò 
materialCount
òò 
=
òò 

m_textInfo
òò  *
.
òò* +
materialCount
òò+ 8
;
òò8 9
if
öö 
(
öö 
m_fontMaterials
öö 
==
öö  "
null
öö# '
)
öö' (
m_fontMaterials
õõ 
=
õõ  !
new
õõ" %
Material
õõ& .
[
õõ. /
materialCount
õõ/ <
]
õõ< =
;
õõ= >
else
úú 
if
úú 
(
úú 
m_fontMaterials
úú $
.
úú$ %
Length
úú% +
!=
úú, .
materialCount
úú/ <
)
úú< =
TMP_TextInfo
ùù 
.
ùù 
Resize
ùù #
(
ùù# $
ref
ùù$ '
m_fontMaterials
ùù( 7
,
ùù7 8
materialCount
ùù9 F
,
ùùF G
false
ùùH M
)
ùùM N
;
ùùN O
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
†† 
<
†† 
materialCount
††  -
;
††- .
i
††/ 0
++
††0 2
)
††2 3
{
°° 
if
¢¢ 
(
¢¢ 
i
¢¢ 
==
¢¢ 
$num
¢¢ 
)
¢¢ 
m_fontMaterials
££ #
[
££# $
i
££$ %
]
££% &
=
££' (
fontMaterial
££) 5
;
££5 6
else
§§ 
m_fontMaterials
•• #
[
••# $
i
••$ %
]
••% &
=
••' (
m_subTextObjects
••) 9
[
••9 :
i
••: ;
]
••; <
.
••< =
material
••= E
;
••E F
}
¶¶ #
m_fontSharedMaterials
®® !
=
®®" #
m_fontMaterials
®®$ 3
;
®®3 4
return
™™ 
m_fontMaterials
™™ "
;
™™" #
}
´´ 	
	protected
ØØ 
override
ØØ 
void
ØØ 
SetSharedMaterial
ØØ  1
(
ØØ1 2
Material
ØØ2 :
mat
ØØ; >
)
ØØ> ?
{
∞∞ 	
m_sharedMaterial
∂∂ 
=
∂∂ 
mat
∂∂ "
;
∂∂" #
	m_padding
∏∏ 
=
∏∏ #
GetPaddingForMaterial
∏∏ -
(
∏∏- .
)
∏∏. /
;
∏∏/ 0
SetMaterialDirty
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
}
ªª 	
	protected
¬¬ 
override
¬¬ 
Material
¬¬ #
[
¬¬# $
]
¬¬$ % 
GetSharedMaterials
¬¬& 8
(
¬¬8 9
)
¬¬9 :
{
√√ 	
int
ƒƒ 
materialCount
ƒƒ 
=
ƒƒ 

m_textInfo
ƒƒ  *
.
ƒƒ* +
materialCount
ƒƒ+ 8
;
ƒƒ8 9
if
∆∆ 
(
∆∆ #
m_fontSharedMaterials
∆∆ %
==
∆∆& (
null
∆∆) -
)
∆∆- .#
m_fontSharedMaterials
«« %
=
««& '
new
««( +
Material
««, 4
[
««4 5
materialCount
««5 B
]
««B C
;
««C D
else
»» 
if
»» 
(
»» #
m_fontSharedMaterials
»» *
.
»»* +
Length
»»+ 1
!=
»»2 4
materialCount
»»5 B
)
»»B C
TMP_TextInfo
…… 
.
…… 
Resize
…… #
(
……# $
ref
……$ '#
m_fontSharedMaterials
……( =
,
……= >
materialCount
……? L
,
……L M
false
……N S
)
……S T
;
……T U
for
ÀÀ 
(
ÀÀ 
int
ÀÀ 
i
ÀÀ 
=
ÀÀ 
$num
ÀÀ 
;
ÀÀ 
i
ÀÀ 
<
ÀÀ 
materialCount
ÀÀ  -
;
ÀÀ- .
i
ÀÀ/ 0
++
ÀÀ0 2
)
ÀÀ2 3
{
ÃÃ 
if
ÕÕ 
(
ÕÕ 
i
ÕÕ 
==
ÕÕ 
$num
ÕÕ 
)
ÕÕ #
m_fontSharedMaterials
ŒŒ )
[
ŒŒ) *
i
ŒŒ* +
]
ŒŒ+ ,
=
ŒŒ- .
m_sharedMaterial
ŒŒ/ ?
;
ŒŒ? @
else
œœ #
m_fontSharedMaterials
–– )
[
––) *
i
––* +
]
––+ ,
=
––- .
m_subTextObjects
––/ ?
[
––? @
i
––@ A
]
––A B
.
––B C
sharedMaterial
––C Q
;
––Q R
}
—— 
return
”” #
m_fontSharedMaterials
”” (
;
””( )
}
‘‘ 	
	protected
⁄⁄ 
override
⁄⁄ 
void
⁄⁄  
SetSharedMaterials
⁄⁄  2
(
⁄⁄2 3
Material
⁄⁄3 ;
[
⁄⁄; <
]
⁄⁄< =
	materials
⁄⁄> G
)
⁄⁄G H
{
€€ 	
int
‹‹ 
materialCount
‹‹ 
=
‹‹ 

m_textInfo
‹‹  *
.
‹‹* +
materialCount
‹‹+ 8
;
‹‹8 9
if
ﬂﬂ 
(
ﬂﬂ #
m_fontSharedMaterials
ﬂﬂ %
==
ﬂﬂ& (
null
ﬂﬂ) -
)
ﬂﬂ- .#
m_fontSharedMaterials
‡‡ %
=
‡‡& '
new
‡‡( +
Material
‡‡, 4
[
‡‡4 5
materialCount
‡‡5 B
]
‡‡B C
;
‡‡C D
else
·· 
if
·· 
(
·· #
m_fontSharedMaterials
·· *
.
··* +
Length
··+ 1
!=
··2 4
materialCount
··5 B
)
··B C
TMP_TextInfo
‚‚ 
.
‚‚ 
Resize
‚‚ #
(
‚‚# $
ref
‚‚$ '#
m_fontSharedMaterials
‚‚( =
,
‚‚= >
materialCount
‚‚? L
,
‚‚L M
false
‚‚N S
)
‚‚S T
;
‚‚T U
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
i
ÂÂ 
<
ÂÂ 
materialCount
ÂÂ  -
;
ÂÂ- .
i
ÂÂ/ 0
++
ÂÂ0 2
)
ÂÂ2 3
{
ÊÊ 
if
ÁÁ 
(
ÁÁ 
i
ÁÁ 
==
ÁÁ 
$num
ÁÁ 
)
ÁÁ 
{
ËË 
if
ÍÍ 
(
ÍÍ 
	materials
ÍÍ !
[
ÍÍ! "
i
ÍÍ" #
]
ÍÍ# $
.
ÍÍ$ %

GetTexture
ÍÍ% /
(
ÍÍ/ 0
ShaderUtilities
ÍÍ0 ?
.
ÍÍ? @

ID_MainTex
ÍÍ@ J
)
ÍÍJ K
==
ÍÍL N
null
ÍÍO S
||
ÍÍT V
	materials
ÍÍW `
[
ÍÍ` a
i
ÍÍa b
]
ÍÍb c
.
ÍÍc d

GetTexture
ÍÍd n
(
ÍÍn o
ShaderUtilities
ÍÍo ~
.
ÍÍ~ 

ID_MainTexÍÍ â
)ÍÍâ ä
.ÍÍä ã
GetInstanceIDÍÍã ò
(ÍÍò ô
)ÍÍô ö
!=ÍÍõ ù 
m_sharedMaterialÍÍû Æ
.ÍÍÆ Ø

GetTextureÍÍØ π
(ÍÍπ ∫
ShaderUtilitiesÍÍ∫ …
.ÍÍ…  

ID_MainTexÍÍ  ‘
)ÍÍ‘ ’
.ÍÍ’ ÷
GetInstanceIDÍÍ÷ „
(ÍÍ„ ‰
)ÍÍ‰ Â
)ÍÍÂ Ê
continue
ÎÎ  
;
ÎÎ  !
m_sharedMaterial
ÌÌ $
=
ÌÌ% &#
m_fontSharedMaterials
ÌÌ' <
[
ÌÌ< =
i
ÌÌ= >
]
ÌÌ> ?
=
ÌÌ@ A
	materials
ÌÌB K
[
ÌÌK L
i
ÌÌL M
]
ÌÌM N
;
ÌÌN O
	m_padding
ÓÓ 
=
ÓÓ #
GetPaddingForMaterial
ÓÓ  5
(
ÓÓ5 6
m_sharedMaterial
ÓÓ6 F
)
ÓÓF G
;
ÓÓG H
}
ÔÔ 
else
 
{
ÒÒ 
if
ÛÛ 
(
ÛÛ 
	materials
ÛÛ !
[
ÛÛ! "
i
ÛÛ" #
]
ÛÛ# $
.
ÛÛ$ %

GetTexture
ÛÛ% /
(
ÛÛ/ 0
ShaderUtilities
ÛÛ0 ?
.
ÛÛ? @

ID_MainTex
ÛÛ@ J
)
ÛÛJ K
==
ÛÛL N
null
ÛÛO S
||
ÛÛT V
	materials
ÛÛW `
[
ÛÛ` a
i
ÛÛa b
]
ÛÛb c
.
ÛÛc d

GetTexture
ÛÛd n
(
ÛÛn o
ShaderUtilities
ÛÛo ~
.
ÛÛ~ 

ID_MainTexÛÛ â
)ÛÛâ ä
.ÛÛä ã
GetInstanceIDÛÛã ò
(ÛÛò ô
)ÛÛô ö
!=ÛÛõ ù 
m_subTextObjectsÛÛû Æ
[ÛÛÆ Ø
iÛÛØ ∞
]ÛÛ∞ ±
.ÛÛ± ≤
sharedMaterialÛÛ≤ ¿
.ÛÛ¿ ¡

GetTextureÛÛ¡ À
(ÛÛÀ Ã
ShaderUtilitiesÛÛÃ €
.ÛÛ€ ‹

ID_MainTexÛÛ‹ Ê
)ÛÛÊ Á
.ÛÛÁ Ë
GetInstanceIDÛÛË ı
(ÛÛı ˆ
)ÛÛˆ ˜
)ÛÛ˜ ¯
continue
ÙÙ  
;
ÙÙ  !
if
˜˜ 
(
˜˜ 
m_subTextObjects
˜˜ (
[
˜˜( )
i
˜˜) *
]
˜˜* +
.
˜˜+ ,
isDefaultMaterial
˜˜, =
)
˜˜= >
m_subTextObjects
¯¯ (
[
¯¯( )
i
¯¯) *
]
¯¯* +
.
¯¯+ ,
sharedMaterial
¯¯, :
=
¯¯; <#
m_fontSharedMaterials
¯¯= R
[
¯¯R S
i
¯¯S T
]
¯¯T U
=
¯¯V W
	materials
¯¯X a
[
¯¯a b
i
¯¯b c
]
¯¯c d
;
¯¯d e
}
˘˘ 
}
˙˙ 
}
˚˚ 	
	protected
ˇˇ 
override
ˇˇ 
void
ˇˇ !
SetOutlineThickness
ˇˇ  3
(
ˇˇ3 4
float
ˇˇ4 9
	thickness
ˇˇ: C
)
ˇˇC D
{
ÄÄ 	
if
ÇÇ 
(
ÇÇ 
m_fontMaterial
ÇÇ 
!=
ÇÇ !
null
ÇÇ" &
&&
ÇÇ' )
m_sharedMaterial
ÇÇ* :
.
ÇÇ: ;
GetInstanceID
ÇÇ; H
(
ÇÇH I
)
ÇÇI J
!=
ÇÇK M
m_fontMaterial
ÇÇN \
.
ÇÇ\ ]
GetInstanceID
ÇÇ] j
(
ÇÇj k
)
ÇÇk l
)
ÇÇl m
{
ÉÉ 
m_sharedMaterial
ÑÑ  
=
ÑÑ! "
m_fontMaterial
ÑÑ# 1
;
ÑÑ1 2
m_canvasRenderer
ÖÖ  
.
ÖÖ  !
SetMaterial
ÖÖ! ,
(
ÖÖ, -
m_sharedMaterial
ÖÖ- =
,
ÖÖ= >
m_sharedMaterial
ÖÖ? O
.
ÖÖO P

GetTexture
ÖÖP Z
(
ÖÖZ [
ShaderUtilities
ÖÖ[ j
.
ÖÖj k

ID_MainTex
ÖÖk u
)
ÖÖu v
)
ÖÖv w
;
ÖÖw x
}
ÜÜ 
else
áá 
if
áá 
(
áá 
m_fontMaterial
áá "
==
áá# %
null
áá& *
)
áá* +
{
àà 
m_fontMaterial
ââ 
=
ââ  $
CreateMaterialInstance
ââ! 7
(
ââ7 8
m_sharedMaterial
ââ8 H
)
ââH I
;
ââI J
m_sharedMaterial
ää  
=
ää! "
m_fontMaterial
ää# 1
;
ää1 2
m_canvasRenderer
ãã  
.
ãã  !
SetMaterial
ãã! ,
(
ãã, -
m_sharedMaterial
ãã- =
,
ãã= >
m_sharedMaterial
ãã? O
.
ããO P

GetTexture
ããP Z
(
ããZ [
ShaderUtilities
ãã[ j
.
ããj k

ID_MainTex
ããk u
)
ããu v
)
ããv w
;
ããw x
}
åå 
	thickness
éé 
=
éé 
Mathf
éé 
.
éé 
Clamp01
éé %
(
éé% &
	thickness
éé& /
)
éé/ 0
;
éé0 1
m_sharedMaterial
èè 
.
èè 
SetFloat
èè %
(
èè% &
ShaderUtilities
èè& 5
.
èè5 6
ID_OutlineWidth
èè6 E
,
èèE F
	thickness
èèG P
)
èèP Q
;
èèQ R
	m_padding
êê 
=
êê #
GetPaddingForMaterial
êê -
(
êê- .
)
êê. /
;
êê/ 0
}
ëë 	
	protected
ïï 
override
ïï 
void
ïï 
SetFaceColor
ïï  ,
(
ïï, -
Color32
ïï- 4
color
ïï5 :
)
ïï: ;
{
ññ 	
if
òò 
(
òò 
m_fontMaterial
òò 
==
òò !
null
òò" &
)
òò& '
m_fontMaterial
ôô 
=
ôô  $
CreateMaterialInstance
ôô! 7
(
ôô7 8
m_sharedMaterial
ôô8 H
)
ôôH I
;
ôôI J
m_sharedMaterial
õõ 
=
õõ 
m_fontMaterial
õõ -
;
õõ- .
	m_padding
úú 
=
úú #
GetPaddingForMaterial
úú -
(
úú- .
)
úú. /
;
úú/ 0
m_sharedMaterial
ûû 
.
ûû 
SetColor
ûû %
(
ûû% &
ShaderUtilities
ûû& 5
.
ûû5 6
ID_FaceColor
ûû6 B
,
ûûB C
color
ûûD I
)
ûûI J
;
ûûJ K
}
üü 	
	protected
££ 
override
££ 
void
££ 
SetOutlineColor
££  /
(
££/ 0
Color32
££0 7
color
££8 =
)
££= >
{
§§ 	
if
¶¶ 
(
¶¶ 
m_fontMaterial
¶¶ 
==
¶¶ !
null
¶¶" &
)
¶¶& '
m_fontMaterial
ßß 
=
ßß  $
CreateMaterialInstance
ßß! 7
(
ßß7 8
m_sharedMaterial
ßß8 H
)
ßßH I
;
ßßI J
m_sharedMaterial
©© 
=
©© 
m_fontMaterial
©© -
;
©©- .
	m_padding
™™ 
=
™™ #
GetPaddingForMaterial
™™ -
(
™™- .
)
™™. /
;
™™/ 0
m_sharedMaterial
¨¨ 
.
¨¨ 
SetColor
¨¨ %
(
¨¨% &
ShaderUtilities
¨¨& 5
.
¨¨5 6
ID_OutlineColor
¨¨6 E
,
¨¨E F
color
¨¨G L
)
¨¨L M
;
¨¨M N
}
≠≠ 	
	protected
±± 
override
±± 
void
±± 
SetShaderDepth
±±  .
(
±±. /
)
±±/ 0
{
≤≤ 	
if
≥≥ 
(
≥≥ 
m_canvas
≥≥ 
==
≥≥ 
null
≥≥  
||
≥≥! #
m_sharedMaterial
≥≥$ 4
==
≥≥5 7
null
≥≥8 <
)
≥≥< =
return
¥¥ 
;
¥¥ 
if
∂∂ 
(
∂∂ 
m_canvas
∂∂ 
.
∂∂ 

renderMode
∂∂ #
==
∂∂$ &

RenderMode
∂∂' 1
.
∂∂1 2 
ScreenSpaceOverlay
∂∂2 D
||
∂∂E G
m_isOverlay
∂∂H S
)
∂∂S T
{
∑∑ 
m_sharedMaterial
ππ  
.
ππ  !
SetFloat
ππ! )
(
ππ) *
ShaderUtilities
ππ* 9
.
ππ9 :!
ShaderTag_ZTestMode
ππ: M
,
ππM N
$num
ππO P
)
ππP Q
;
ππQ R
}
∫∫ 
else
ªª 
{
ºº 
m_sharedMaterial
ΩΩ  
.
ΩΩ  !
SetFloat
ΩΩ! )
(
ΩΩ) *
ShaderUtilities
ΩΩ* 9
.
ΩΩ9 :!
ShaderTag_ZTestMode
ΩΩ: M
,
ΩΩM N
$num
ΩΩO P
)
ΩΩP Q
;
ΩΩQ R
}
ææ 
}
øø 	
	protected
√√ 
override
√√ 
void
√√ 

SetCulling
√√  *
(
√√* +
)
√√+ ,
{
ƒƒ 	
if
≈≈ 
(
≈≈  
m_isCullingEnabled
≈≈ "
)
≈≈" #
{
∆∆ 
Material
«« 
mat
«« 
=
«« "
materialForRendering
«« 3
;
««3 4
if
…… 
(
…… 
mat
…… 
!=
…… 
null
…… 
)
……  
mat
   
.
   
SetFloat
    
(
    !
$str
  ! ,
,
  , -
$num
  . /
)
  / 0
;
  0 1
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ  !
<
ÃÃ" #
m_subTextObjects
ÃÃ$ 4
.
ÃÃ4 5
Length
ÃÃ5 ;
&&
ÃÃ< >
m_subTextObjects
ÃÃ? O
[
ÃÃO P
i
ÃÃP Q
]
ÃÃQ R
!=
ÃÃS U
null
ÃÃV Z
;
ÃÃZ [
i
ÃÃ\ ]
++
ÃÃ] _
)
ÃÃ_ `
{
ÕÕ 
mat
ŒŒ 
=
ŒŒ 
m_subTextObjects
ŒŒ *
[
ŒŒ* +
i
ŒŒ+ ,
]
ŒŒ, -
.
ŒŒ- ."
materialForRendering
ŒŒ. B
;
ŒŒB C
if
–– 
(
–– 
mat
–– 
!=
–– 
null
–– #
)
––# $
{
—— 
mat
““ 
.
““ 
SetFloat
““ $
(
““$ %
ShaderUtilities
““% 4
.
““4 5 
ShaderTag_CullMode
““5 G
,
““G H
$num
““I J
)
““J K
;
““K L
}
”” 
}
‘‘ 
}
’’ 
else
÷÷ 
{
◊◊ 
Material
ÿÿ 
mat
ÿÿ 
=
ÿÿ "
materialForRendering
ÿÿ 3
;
ÿÿ3 4
if
⁄⁄ 
(
⁄⁄ 
mat
⁄⁄ 
!=
⁄⁄ 
null
⁄⁄ 
)
⁄⁄  
mat
€€ 
.
€€ 
SetFloat
€€  
(
€€  !
$str
€€! ,
,
€€, -
$num
€€. /
)
€€/ 0
;
€€0 1
for
›› 
(
›› 
int
›› 
i
›› 
=
›› 
$num
›› 
;
›› 
i
››  !
<
››" #
m_subTextObjects
››$ 4
.
››4 5
Length
››5 ;
&&
››< >
m_subTextObjects
››? O
[
››O P
i
››P Q
]
››Q R
!=
››S U
null
››V Z
;
››Z [
i
››\ ]
++
››] _
)
››_ `
{
ﬁﬁ 
mat
ﬂﬂ 
=
ﬂﬂ 
m_subTextObjects
ﬂﬂ *
[
ﬂﬂ* +
i
ﬂﬂ+ ,
]
ﬂﬂ, -
.
ﬂﬂ- ."
materialForRendering
ﬂﬂ. B
;
ﬂﬂB C
if
·· 
(
·· 
mat
·· 
!=
·· 
null
·· #
)
··# $
{
‚‚ 
mat
„„ 
.
„„ 
SetFloat
„„ $
(
„„$ %
ShaderUtilities
„„% 4
.
„„4 5 
ShaderTag_CullMode
„„5 G
,
„„G H
$num
„„I J
)
„„J K
;
„„K L
}
‰‰ 
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 	
void
ÎÎ &
SetPerspectiveCorrection
ÎÎ %
(
ÎÎ% &
)
ÎÎ& '
{
ÏÏ 	
if
ÌÌ 
(
ÌÌ 
m_isOrthographic
ÌÌ  
)
ÌÌ  !
m_sharedMaterial
ÓÓ  
.
ÓÓ  !
SetFloat
ÓÓ! )
(
ÓÓ) *
ShaderUtilities
ÓÓ* 9
.
ÓÓ9 :"
ID_PerspectiveFilter
ÓÓ: N
,
ÓÓN O
$num
ÓÓP T
)
ÓÓT U
;
ÓÓU V
else
ÔÔ 
m_sharedMaterial
  
.
  !
SetFloat
! )
(
) *
ShaderUtilities
* 9
.
9 :"
ID_PerspectiveFilter
: N
,
N O
$num
P V
)
V W
;
W X
}
ÒÒ 	
void
ıı 
SetMeshArrays
ıı 
(
ıı 
int
ıı 
size
ıı #
)
ıı# $
{
ˆˆ 	

m_textInfo
˜˜ 
.
˜˜ 
meshInfo
˜˜ 
[
˜˜  
$num
˜˜  !
]
˜˜! "
.
˜˜" #
ResizeMeshInfo
˜˜# 1
(
˜˜1 2
size
˜˜2 6
)
˜˜6 7
;
˜˜7 8
m_canvasRenderer
˘˘ 
.
˘˘ 
SetMesh
˘˘ $
(
˘˘$ %

m_textInfo
˘˘% /
.
˘˘/ 0
meshInfo
˘˘0 8
[
˘˘8 9
$num
˘˘9 :
]
˘˘: ;
.
˘˘; <
mesh
˘˘< @
)
˘˘@ A
;
˘˘A B
}
˙˙ 	
internal
˛˛ 
override
˛˛ 
int
˛˛ 
SetArraySizes
˛˛ +
(
˛˛+ ,
UnicodeChar
˛˛, 7
[
˛˛7 8
]
˛˛8 9
unicodeChars
˛˛: F
)
˛˛F G
{
ˇˇ 	#
k_SetArraySizesMarker
ÄÄ !
.
ÄÄ! "
Begin
ÄÄ" '
(
ÄÄ' (
)
ÄÄ( )
;
ÄÄ) *
int
ÇÇ 
spriteCount
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ  #
m_totalCharacterCount
ÑÑ !
=
ÑÑ" #
$num
ÑÑ$ %
;
ÑÑ% &
m_isUsingBold
ÖÖ 
=
ÖÖ 
false
ÖÖ !
;
ÖÖ! "
m_isParsingText
ÜÜ 
=
ÜÜ 
false
ÜÜ #
;
ÜÜ# $
tag_NoParsing
áá 
=
áá 
false
áá !
;
áá! "!
m_FontStyleInternal
àà 
=
àà  !
m_fontStyle
àà" -
;
àà- .
m_fontStyleStack
ââ 
.
ââ 
Clear
ââ "
(
ââ" #
)
ââ# $
;
ââ$ %"
m_FontWeightInternal
ãã  
=
ãã! "
(
ãã# $!
m_FontStyleInternal
ãã$ 7
&
ãã8 9

FontStyles
ãã: D
.
ããD E
Bold
ããE I
)
ããI J
==
ããK M

FontStyles
ããN X
.
ããX Y
Bold
ããY ]
?
ãã^ _

FontWeight
ãã` j
.
ããj k
Bold
ããk o
:
ããp q
m_fontWeight
ããr ~
;
ãã~ 
m_FontWeightStack
åå 
.
åå 

SetDefault
åå (
(
åå( )"
m_FontWeightInternal
åå) =
)
åå= >
;
åå> ? 
m_currentFontAsset
éé 
=
éé  
m_fontAsset
éé! ,
;
éé, -
m_currentMaterial
èè 
=
èè 
m_sharedMaterial
èè  0
;
èè0 1$
m_currentMaterialIndex
êê "
=
êê# $
$num
êê% &
;
êê& '&
m_materialReferenceStack
íí $
.
íí$ %

SetDefault
íí% /
(
íí/ 0
new
íí0 3
MaterialReference
íí4 E
(
ííE F$
m_currentMaterialIndex
ííF \
,
íí\ ] 
m_currentFontAsset
íí^ p
,
ííp q
null
íír v
,
íív w 
m_currentMaterialííx â
,ííâ ä
	m_paddingííã î
)ííî ï
)ííï ñ
;ííñ ó,
m_materialReferenceIndexLookup
îî *
.
îî* +
Clear
îî+ 0
(
îî0 1
)
îî1 2
;
îî2 3
MaterialReference
ïï 
.
ïï "
AddMaterialReference
ïï 2
(
ïï2 3
m_currentMaterial
ïï3 D
,
ïïD E 
m_currentFontAsset
ïïF X
,
ïïX Y
ref
ïïZ ]"
m_materialReferences
ïï^ r
,
ïïr s-
m_materialReferenceIndexLookupïït í
)ïïí ì
;ïïì î
if
òò 
(
òò 

m_textInfo
òò 
==
òò 
null
òò "
)
òò" #

m_textInfo
ôô 
=
ôô 
new
ôô  
TMP_TextInfo
ôô! -
(
ôô- ./
!m_InternalTextProcessingArraySize
ôô. O
)
ôôO P
;
ôôP Q
else
öö 
if
öö 
(
öö 

m_textInfo
öö 
.
öö  
characterInfo
öö  -
.
öö- .
Length
öö. 4
<
öö5 6/
!m_InternalTextProcessingArraySize
öö7 X
)
ööX Y
TMP_TextInfo
õõ 
.
õõ 
Resize
õõ #
(
õõ# $
ref
õõ$ '

m_textInfo
õõ( 2
.
õõ2 3
characterInfo
õõ3 @
,
õõ@ A/
!m_InternalTextProcessingArraySize
õõB c
,
õõc d
false
õõe j
)
õõj k
;
õõk l
m_textElementType
ùù 
=
ùù !
TMP_TextElementType
ùù  3
.
ùù3 4
	Character
ùù4 =
;
ùù= >
if
∂∂ 
(
∂∂ 
m_overflowMode
∂∂ 
==
∂∂ !
TextOverflowModes
∂∂" 3
.
∂∂3 4
Ellipsis
∂∂4 <
)
∂∂< =
{
∑∑ )
GetEllipsisSpecialCharacter
∏∏ +
(
∏∏+ , 
m_currentFontAsset
∏∏, >
)
∏∏> ?
;
∏∏? @
if
∫∫ 
(
∫∫ 

m_Ellipsis
∫∫ 
.
∫∫ 
	character
∫∫ (
!=
∫∫) +
null
∫∫, 0
)
∫∫0 1
{
ªª 
if
ºº 
(
ºº 

m_Ellipsis
ºº "
.
ºº" #
	fontAsset
ºº# ,
.
ºº, -
GetInstanceID
ºº- :
(
ºº: ;
)
ºº; <
!=
ºº= ? 
m_currentFontAsset
ºº@ R
.
ººR S
GetInstanceID
ººS `
(
ºº` a
)
ººa b
)
ººb c
{
ΩΩ 
if
ææ 
(
ææ 
TMP_Settings
ææ (
.
ææ( )!
matchMaterialPreset
ææ) <
&&
ææ= ?
m_currentMaterial
ææ@ Q
.
ææQ R
GetInstanceID
ææR _
(
ææ_ `
)
ææ` a
!=
ææb d

m_Ellipsis
ææe o
.
ææo p
	fontAsset
ææp y
.
ææy z
materialææz Ç
.ææÇ É
GetInstanceIDææÉ ê
(ææê ë
)ææë í
)ææí ì

m_Ellipsis
øø &
.
øø& '
material
øø' /
=
øø0 1!
TMP_MaterialManager
øø2 E
.
øøE F!
GetFallbackMaterial
øøF Y
(
øøY Z
m_currentMaterial
øøZ k
,
øøk l

m_Ellipsis
øøm w
.
øøw x
	fontAssetøøx Å
.øøÅ Ç
materialøøÇ ä
)øøä ã
;øøã å
else
¿¿ 

m_Ellipsis
¡¡ &
.
¡¡& '
material
¡¡' /
=
¡¡0 1

m_Ellipsis
¡¡2 <
.
¡¡< =
	fontAsset
¡¡= F
.
¡¡F G
material
¡¡G O
;
¡¡O P

m_Ellipsis
√√ "
.
√√" #
materialIndex
√√# 0
=
√√1 2
MaterialReference
√√3 D
.
√√D E"
AddMaterialReference
√√E Y
(
√√Y Z

m_Ellipsis
√√Z d
.
√√d e
material
√√e m
,
√√m n

m_Ellipsis
√√o y
.
√√y z
	fontAsset√√z É
,√√É Ñ
ref√√Ö à$
m_materialReferences√√â ù
,√√ù û.
m_materialReferenceIndexLookup√√ü Ω
)√√Ω æ
;√√æ ø"
m_materialReferences
ƒƒ ,
[
ƒƒ, -

m_Ellipsis
ƒƒ- 7
.
ƒƒ7 8
materialIndex
ƒƒ8 E
]
ƒƒE F
.
ƒƒF G
referenceCount
ƒƒG U
=
ƒƒV W
$num
ƒƒX Y
;
ƒƒY Z
}
≈≈ 
}
∆∆ 
else
«« 
{
»» 
m_overflowMode
…… "
=
……# $
TextOverflowModes
……% 6
.
……6 7
Truncate
……7 ?
;
……? @
if
ÀÀ 
(
ÀÀ 
!
ÀÀ 
TMP_Settings
ÀÀ %
.
ÀÀ% &
warningsDisabled
ÀÀ& 6
)
ÀÀ6 7
Debug
ÃÃ 
.
ÃÃ 

LogWarning
ÃÃ (
(
ÃÃ( )
$str
ÃÃ) k
+
ÃÃl m!
m_currentFontAssetÃÃn Ä
.ÃÃÄ Å
nameÃÃÅ Ö
+ÃÃÜ á
$strÃÃà —
,ÃÃ— “
thisÃÃ” ◊
)ÃÃ◊ ÿ
;ÃÃÿ Ÿ
}
ÕÕ 
}
ŒŒ 
if
”” 
(
”” 
m_overflowMode
”” 
==
”” !
TextOverflowModes
””" 3
.
””3 4
Linked
””4 :
&&
””; =#
m_linkedTextComponent
””> S
!=
””T V
null
””W [
&&
””\ ^
!
””_ `,
m_isCalculatingPreferredValues
””` ~
)
””~ 
{
‘‘ 
TMP_Text
’’ 
linkedComponent
’’ (
=
’’) *#
m_linkedTextComponent
’’+ @
;
’’@ A
while
◊◊ 
(
◊◊ 
linkedComponent
◊◊ &
!=
◊◊' )
null
◊◊* .
)
◊◊. /
{
ÿÿ 
linkedComponent
ŸŸ #
.
ŸŸ# $
text
ŸŸ$ (
=
ŸŸ) *
String
ŸŸ+ 1
.
ŸŸ1 2
Empty
ŸŸ2 7
;
ŸŸ7 8
linkedComponent
⁄⁄ #
.
⁄⁄# $
	ClearMesh
⁄⁄$ -
(
⁄⁄- .
)
⁄⁄. /
;
⁄⁄/ 0
linkedComponent
€€ #
.
€€# $
textInfo
€€$ ,
.
€€, -
Clear
€€- 2
(
€€2 3
)
€€3 4
;
€€4 5
linkedComponent
›› #
=
››$ %
linkedComponent
››& 5
.
››5 6!
linkedTextComponent
››6 I
;
››I J
}
ﬁﬁ 
}
ﬂﬂ 
for
„„ 
(
„„ 
int
„„ 
i
„„ 
=
„„ 
$num
„„ 
;
„„ 
i
„„ 
<
„„ 
unicodeChars
„„  ,
.
„„, -
Length
„„- 3
&&
„„4 6
unicodeChars
„„7 C
[
„„C D
i
„„D E
]
„„E F
.
„„F G
unicode
„„G N
!=
„„O Q
$num
„„R S
;
„„S T
i
„„U V
++
„„V X
)
„„X Y
{
‰‰ 
if
ÊÊ 
(
ÊÊ 

m_textInfo
ÊÊ 
.
ÊÊ 
characterInfo
ÊÊ ,
==
ÊÊ- /
null
ÊÊ0 4
||
ÊÊ5 7#
m_totalCharacterCount
ÊÊ8 M
>=
ÊÊN P

m_textInfo
ÊÊQ [
.
ÊÊ[ \
characterInfo
ÊÊ\ i
.
ÊÊi j
Length
ÊÊj p
)
ÊÊp q
TMP_TextInfo
ÁÁ  
.
ÁÁ  !
Resize
ÁÁ! '
(
ÁÁ' (
ref
ÁÁ( +

m_textInfo
ÁÁ, 6
.
ÁÁ6 7
characterInfo
ÁÁ7 D
,
ÁÁD E#
m_totalCharacterCount
ÁÁF [
+
ÁÁ\ ]
$num
ÁÁ^ _
,
ÁÁ_ `
true
ÁÁa e
)
ÁÁe f
;
ÁÁf g
int
ÈÈ 
unicode
ÈÈ 
=
ÈÈ 
unicodeChars
ÈÈ *
[
ÈÈ* +
i
ÈÈ+ ,
]
ÈÈ, -
.
ÈÈ- .
unicode
ÈÈ. 5
;
ÈÈ5 6
if
ÌÌ 
(
ÌÌ 
m_isRichText
ÌÌ  
&&
ÌÌ! #
unicode
ÌÌ$ +
==
ÌÌ, .
$num
ÌÌ/ 1
)
ÌÌ1 2
{
ÓÓ 
int
ÔÔ  
prev_MaterialIndex
ÔÔ *
=
ÔÔ+ ,$
m_currentMaterialIndex
ÔÔ- C
;
ÔÔC D
int
 
endTagIndex
 #
;
# $
if
ÛÛ 
(
ÛÛ 
ValidateHtmlTag
ÛÛ '
(
ÛÛ' (
unicodeChars
ÛÛ( 4
,
ÛÛ4 5
i
ÛÛ6 7
+
ÛÛ8 9
$num
ÛÛ: ;
,
ÛÛ; <
out
ÛÛ= @
endTagIndex
ÛÛA L
)
ÛÛL M
)
ÛÛM N
{
ÙÙ 
int
ıı 
tagStartIndex
ıı )
=
ıı* +
unicodeChars
ıı, 8
[
ıı8 9
i
ıı9 :
]
ıı: ;
.
ıı; <
stringIndex
ıı< G
;
ııG H
i
ˆˆ 
=
ˆˆ 
endTagIndex
ˆˆ '
;
ˆˆ' (
if
¯¯ 
(
¯¯ 
(
¯¯ !
m_FontStyleInternal
¯¯ 0
&
¯¯1 2

FontStyles
¯¯3 =
.
¯¯= >
Bold
¯¯> B
)
¯¯B C
==
¯¯D F

FontStyles
¯¯G Q
.
¯¯Q R
Bold
¯¯R V
)
¯¯V W
m_isUsingBold
˘˘ )
=
˘˘* +
true
˘˘, 0
;
˘˘0 1
if
˚˚ 
(
˚˚ 
m_textElementType
˚˚ -
==
˚˚. 0!
TMP_TextElementType
˚˚1 D
.
˚˚D E
Sprite
˚˚E K
)
˚˚K L
{
¸¸ "
m_materialReferences
˝˝ 0
[
˝˝0 1$
m_currentMaterialIndex
˝˝1 G
]
˝˝G H
.
˝˝H I
referenceCount
˝˝I W
+=
˝˝X Z
$num
˝˝[ \
;
˝˝\ ]

m_textInfo
ˇˇ &
.
ˇˇ& '
characterInfo
ˇˇ' 4
[
ˇˇ4 5#
m_totalCharacterCount
ˇˇ5 J
]
ˇˇJ K
.
ˇˇK L
	character
ˇˇL U
=
ˇˇV W
(
ˇˇX Y
char
ˇˇY ]
)
ˇˇ] ^
(
ˇˇ^ _
$num
ˇˇ_ d
+
ˇˇe f
m_spriteIndex
ˇˇg t
)
ˇˇt u
;
ˇˇu v

m_textInfo
Ä	Ä	 &
.
Ä	Ä	& '
characterInfo
Ä	Ä	' 4
[
Ä	Ä	4 5#
m_totalCharacterCount
Ä	Ä	5 J
]
Ä	Ä	J K
.
Ä	Ä	K L
spriteIndex
Ä	Ä	L W
=
Ä	Ä	X Y
m_spriteIndex
Ä	Ä	Z g
;
Ä	Ä	g h

m_textInfo
Å	Å	 &
.
Å	Å	& '
characterInfo
Å	Å	' 4
[
Å	Å	4 5#
m_totalCharacterCount
Å	Å	5 J
]
Å	Å	J K
.
Å	Å	K L
	fontAsset
Å	Å	L U
=
Å	Å	V W 
m_currentFontAsset
Å	Å	X j
;
Å	Å	j k

m_textInfo
Ç	Ç	 &
.
Ç	Ç	& '
characterInfo
Ç	Ç	' 4
[
Ç	Ç	4 5#
m_totalCharacterCount
Ç	Ç	5 J
]
Ç	Ç	J K
.
Ç	Ç	K L
spriteAsset
Ç	Ç	L W
=
Ç	Ç	X Y"
m_currentSpriteAsset
Ç	Ç	Z n
;
Ç	Ç	n o

m_textInfo
É	É	 &
.
É	É	& '
characterInfo
É	É	' 4
[
É	É	4 5#
m_totalCharacterCount
É	É	5 J
]
É	É	J K
.
É	É	K L$
materialReferenceIndex
É	É	L b
=
É	É	c d$
m_currentMaterialIndex
É	É	e {
;
É	É	{ |

m_textInfo
Ñ	Ñ	 &
.
Ñ	Ñ	& '
characterInfo
Ñ	Ñ	' 4
[
Ñ	Ñ	4 5#
m_totalCharacterCount
Ñ	Ñ	5 J
]
Ñ	Ñ	J K
.
Ñ	Ñ	K L
textElement
Ñ	Ñ	L W
=
Ñ	Ñ	X Y"
m_currentSpriteAsset
Ñ	Ñ	Z n
.
Ñ	Ñ	n o#
spriteCharacterTableÑ	Ñ	o É
[Ñ	Ñ	É Ñ
m_spriteIndexÑ	Ñ	Ñ ë
]Ñ	Ñ	ë í
;Ñ	Ñ	í ì

m_textInfo
Ö	Ö	 &
.
Ö	Ö	& '
characterInfo
Ö	Ö	' 4
[
Ö	Ö	4 5#
m_totalCharacterCount
Ö	Ö	5 J
]
Ö	Ö	J K
.
Ö	Ö	K L
elementType
Ö	Ö	L W
=
Ö	Ö	X Y
m_textElementType
Ö	Ö	Z k
;
Ö	Ö	k l

m_textInfo
Ü	Ü	 &
.
Ü	Ü	& '
characterInfo
Ü	Ü	' 4
[
Ü	Ü	4 5#
m_totalCharacterCount
Ü	Ü	5 J
]
Ü	Ü	J K
.
Ü	Ü	K L
index
Ü	Ü	L Q
=
Ü	Ü	R S
tagStartIndex
Ü	Ü	T a
;
Ü	Ü	a b

m_textInfo
á	á	 &
.
á	á	& '
characterInfo
á	á	' 4
[
á	á	4 5#
m_totalCharacterCount
á	á	5 J
]
á	á	J K
.
á	á	K L
stringLength
á	á	L X
=
á	á	Y Z
unicodeChars
á	á	[ g
[
á	á	g h
i
á	á	h i
]
á	á	i j
.
á	á	j k
stringIndex
á	á	k v
-
á	á	w x
tagStartIndexá	á	y Ü
+á	á	á à
$numá	á	â ä
;á	á	ä ã
m_textElementType
ä	ä	 -
=
ä	ä	. /!
TMP_TextElementType
ä	ä	0 C
.
ä	ä	C D
	Character
ä	ä	D M
;
ä	ä	M N$
m_currentMaterialIndex
ã	ã	 2
=
ã	ã	3 4 
prev_MaterialIndex
ã	ã	5 G
;
ã	ã	G H
spriteCount
ç	ç	 '
+=
ç	ç	( *
$num
ç	ç	+ ,
;
ç	ç	, -#
m_totalCharacterCount
é	é	 1
+=
é	é	2 4
$num
é	é	5 6
;
é	é	6 7
}
è	è	 
continue
ë	ë	  
;
ë	ë	  !
}
í	í	 
}
ì	ì	 
bool
ñ	ñ	 (
isUsingAlternativeTypeface
ñ	ñ	 /
=
ñ	ñ	0 1
false
ñ	ñ	2 7
;
ñ	ñ	7 8
bool
ó	ó	 2
$isUsingFallbackOrAlternativeTypeface
ó	ó	 9
=
ó	ó	: ;
false
ó	ó	< A
;
ó	ó	A B
TMP_FontAsset
ô	ô	 
prev_fontAsset
ô	ô	 ,
=
ô	ô	- . 
m_currentFontAsset
ô	ô	/ A
;
ô	ô	A B
Material
ö	ö	 
prev_material
ö	ö	 &
=
ö	ö	' (
m_currentMaterial
ö	ö	) :
;
ö	ö	: ;
int
õ	õ	  
prev_materialIndex
õ	õ	 &
=
õ	õ	' ($
m_currentMaterialIndex
õ	õ	) ?
;
õ	õ	? @
if
ü	ü	 
(
ü	ü	 
m_textElementType
ü	ü	 %
==
ü	ü	& (!
TMP_TextElementType
ü	ü	) <
.
ü	ü	< =
	Character
ü	ü	= F
)
ü	ü	F G
{
†	†	 
if
°	°	 
(
°	°	 
(
°	°	 !
m_FontStyleInternal
°	°	 ,
&
°	°	- .

FontStyles
°	°	/ 9
.
°	°	9 :
	UpperCase
°	°	: C
)
°	°	C D
==
°	°	E G

FontStyles
°	°	H R
.
°	°	R S
	UpperCase
°	°	S \
)
°	°	\ ]
{
¢	¢	 
if
§	§	 
(
§	§	 
char
§	§	  
.
§	§	  !
IsLower
§	§	! (
(
§	§	( )
(
§	§	) *
char
§	§	* .
)
§	§	. /
unicode
§	§	/ 6
)
§	§	6 7
)
§	§	7 8
unicode
•	•	 #
=
•	•	$ %
char
•	•	& *
.
•	•	* +
ToUpper
•	•	+ 2
(
•	•	2 3
(
•	•	3 4
char
•	•	4 8
)
•	•	8 9
unicode
•	•	9 @
)
•	•	@ A
;
•	•	A B
}
ß	ß	 
else
®	®	 
if
®	®	 
(
®	®	 
(
®	®	 !
m_FontStyleInternal
®	®	 1
&
®	®	2 3

FontStyles
®	®	4 >
.
®	®	> ?
	LowerCase
®	®	? H
)
®	®	H I
==
®	®	J L

FontStyles
®	®	M W
.
®	®	W X
	LowerCase
®	®	X a
)
®	®	a b
{
©	©	 
if
´	´	 
(
´	´	 
char
´	´	  
.
´	´	  !
IsUpper
´	´	! (
(
´	´	( )
(
´	´	) *
char
´	´	* .
)
´	´	. /
unicode
´	´	/ 6
)
´	´	6 7
)
´	´	7 8
unicode
¨	¨	 #
=
¨	¨	$ %
char
¨	¨	& *
.
¨	¨	* +
ToLower
¨	¨	+ 2
(
¨	¨	2 3
(
¨	¨	3 4
char
¨	¨	4 8
)
¨	¨	8 9
unicode
¨	¨	9 @
)
¨	¨	@ A
;
¨	¨	A B
}
≠	≠	 
else
Æ	Æ	 
if
Æ	Æ	 
(
Æ	Æ	 
(
Æ	Æ	 !
m_FontStyleInternal
Æ	Æ	 1
&
Æ	Æ	2 3

FontStyles
Æ	Æ	4 >
.
Æ	Æ	> ?
	SmallCaps
Æ	Æ	? H
)
Æ	Æ	H I
==
Æ	Æ	J L

FontStyles
Æ	Æ	M W
.
Æ	Æ	W X
	SmallCaps
Æ	Æ	X a
)
Æ	Æ	a b
{
Ø	Ø	 
if
±	±	 
(
±	±	 
char
±	±	  
.
±	±	  !
IsLower
±	±	! (
(
±	±	( )
(
±	±	) *
char
±	±	* .
)
±	±	. /
unicode
±	±	/ 6
)
±	±	6 7
)
±	±	7 8
unicode
≤	≤	 #
=
≤	≤	$ %
char
≤	≤	& *
.
≤	≤	* +
ToUpper
≤	≤	+ 2
(
≤	≤	2 3
(
≤	≤	3 4
char
≤	≤	4 8
)
≤	≤	8 9
unicode
≤	≤	9 @
)
≤	≤	@ A
;
≤	≤	A B
}
≥	≥	 
}
¥	¥	 
TMP_TextElement
π	π	 
	character
π	π	  )
=
π	π	* +
GetTextElement
π	π	, :
(
π	π	: ;
(
π	π	; <
uint
π	π	< @
)
π	π	@ A
unicode
π	π	A H
,
π	π	H I 
m_currentFontAsset
π	π	J \
,
π	π	\ ]!
m_FontStyleInternal
π	π	^ q
,
π	π	q r#
m_FontWeightInternalπ	π	s á
,π	π	á à
outπ	π	â å*
isUsingAlternativeTypefaceπ	π	ç ß
)π	π	ß ®
;π	π	® ©
if
Õ	Õ	 
(
Õ	Õ	 
	character
Õ	Õ	 
==
Õ	Õ	  
null
Õ	Õ	! %
)
Õ	Õ	% &
{
Œ	Œ	 
int
–	–	 
srcGlyph
–	–	  
=
–	–	! "
unicode
–	–	# *
;
–	–	* +
unicode
”	”	 
=
”	”	 
unicodeChars
”	”	 *
[
”	”	* +
i
”	”	+ ,
]
”	”	, -
.
”	”	- .
unicode
”	”	. 5
=
”	”	6 7
TMP_Settings
”	”	8 D
.
”	”	D E#
missingGlyphCharacter
”	”	E Z
==
”	”	[ ]
$num
”	”	^ _
?
”	”	` a
$num
”	”	b f
:
”	”	g h
TMP_Settings
”	”	i u
.
”	”	u v$
missingGlyphCharacter”	”	v ã
;”	”	ã å
	character
÷	÷	 
=
÷	÷	 $
TMP_FontAssetUtilities
÷	÷	  6
.
÷	÷	6 7'
GetCharacterFromFontAsset
÷	÷	7 P
(
÷	÷	P Q
(
÷	÷	Q R
uint
÷	÷	R V
)
÷	÷	V W
unicode
÷	÷	W ^
,
÷	÷	^ _ 
m_currentFontAsset
÷	÷	` r
,
÷	÷	r s
true
÷	÷	t x
,
÷	÷	x y"
m_FontStyleInternal÷	÷	z ç
,÷	÷	ç é$
m_FontWeightInternal÷	÷	è £
,÷	÷	£ §
out÷	÷	• ®*
isUsingAlternativeTypeface÷	÷	© √
)÷	÷	√ ƒ
;÷	÷	ƒ ≈
if
ÿ	ÿ	 
(
ÿ	ÿ	 
	character
ÿ	ÿ	 !
==
ÿ	ÿ	" $
null
ÿ	ÿ	% )
)
ÿ	ÿ	) *
{
Ÿ	Ÿ	 
if
€	€	 
(
€	€	 
TMP_Settings
€	€	 (
.
€	€	( ) 
fallbackFontAssets
€	€	) ;
!=
€	€	< >
null
€	€	? C
&&
€	€	D F
TMP_Settings
€	€	G S
.
€	€	S T 
fallbackFontAssets
€	€	T f
.
€	€	f g
Count
€	€	g l
>
€	€	m n
$num
€	€	o p
)
€	€	p q
	character
‹	‹	 %
=
‹	‹	& '$
TMP_FontAssetUtilities
‹	‹	( >
.
‹	‹	> ?(
GetCharacterFromFontAssets
‹	‹	? Y
(
‹	‹	Y Z
(
‹	‹	Z [
uint
‹	‹	[ _
)
‹	‹	_ `
unicode
‹	‹	` g
,
‹	‹	g h 
m_currentFontAsset
‹	‹	i {
,
‹	‹	{ |
TMP_Settings‹	‹	} â
.‹	‹	â ä"
fallbackFontAssets‹	‹	ä ú
,‹	‹	ú ù
true‹	‹	û ¢
,‹	‹	¢ £#
m_FontStyleInternal‹	‹	§ ∑
,‹	‹	∑ ∏$
m_FontWeightInternal‹	‹	π Õ
,‹	‹	Õ Œ
out‹	‹	œ “*
isUsingAlternativeTypeface‹	‹	” Ì
)‹	‹	Ì Ó
;‹	‹	Ó Ô
}
›	›	 
if
ﬂ	ﬂ	 
(
ﬂ	ﬂ	 
	character
ﬂ	ﬂ	 !
==
ﬂ	ﬂ	" $
null
ﬂ	ﬂ	% )
)
ﬂ	ﬂ	) *
{
‡	‡	 
if
‚	‚	 
(
‚	‚	 
TMP_Settings
‚	‚	 (
.
‚	‚	( )
defaultFontAsset
‚	‚	) 9
!=
‚	‚	: <
null
‚	‚	= A
)
‚	‚	A B
	character
„	„	 %
=
„	„	& '$
TMP_FontAssetUtilities
„	„	( >
.
„	„	> ?'
GetCharacterFromFontAsset
„	„	? X
(
„	„	X Y
(
„	„	Y Z
uint
„	„	Z ^
)
„	„	^ _
unicode
„	„	_ f
,
„	„	f g
TMP_Settings
„	„	h t
.
„	„	t u
defaultFontAsset„	„	u Ö
,„	„	Ö Ü
true„	„	á ã
,„	„	ã å#
m_FontStyleInternal„	„	ç †
,„	„	† °$
m_FontWeightInternal„	„	¢ ∂
,„	„	∂ ∑
out„	„	∏ ª*
isUsingAlternativeTypeface„	„	º ÷
)„	„	÷ ◊
;„	„	◊ ÿ
}
‰	‰	 
if
Ê	Ê	 
(
Ê	Ê	 
	character
Ê	Ê	 !
==
Ê	Ê	" $
null
Ê	Ê	% )
)
Ê	Ê	) *
{
Á	Á	 
unicode
È	È	 
=
È	È	  !
unicodeChars
È	È	" .
[
È	È	. /
i
È	È	/ 0
]
È	È	0 1
.
È	È	1 2
unicode
È	È	2 9
=
È	È	: ;
$num
È	È	< >
;
È	È	> ?
	character
Í	Í	 !
=
Í	Í	" #$
TMP_FontAssetUtilities
Í	Í	$ :
.
Í	Í	: ;'
GetCharacterFromFontAsset
Í	Í	; T
(
Í	Í	T U
(
Í	Í	U V
uint
Í	Í	V Z
)
Í	Í	Z [
unicode
Í	Í	[ b
,
Í	Í	b c 
m_currentFontAsset
Í	Í	d v
,
Í	Í	v w
true
Í	Í	x |
,
Í	Í	| }"
m_FontStyleInternalÍ	Í	~ ë
,Í	Í	ë í$
m_FontWeightInternalÍ	Í	ì ß
,Í	Í	ß ®
outÍ	Í	© ¨*
isUsingAlternativeTypefaceÍ	Í	≠ «
)Í	Í	« »
;Í	Í	» …
}
Î	Î	 
if
Ì	Ì	 
(
Ì	Ì	 
	character
Ì	Ì	 !
==
Ì	Ì	" $
null
Ì	Ì	% )
)
Ì	Ì	) *
{
Ó	Ó	 
unicode
		 
=
		  !
unicodeChars
		" .
[
		. /
i
		/ 0
]
		0 1
.
		1 2
unicode
		2 9
=
		: ;
$num
		< @
;
		@ A
	character
Ò	Ò	 !
=
Ò	Ò	" #$
TMP_FontAssetUtilities
Ò	Ò	$ :
.
Ò	Ò	: ;'
GetCharacterFromFontAsset
Ò	Ò	; T
(
Ò	Ò	T U
(
Ò	Ò	U V
uint
Ò	Ò	V Z
)
Ò	Ò	Z [
unicode
Ò	Ò	[ b
,
Ò	Ò	b c 
m_currentFontAsset
Ò	Ò	d v
,
Ò	Ò	v w
true
Ò	Ò	x |
,
Ò	Ò	| }"
m_FontStyleInternalÒ	Ò	~ ë
,Ò	Ò	ë í$
m_FontWeightInternalÒ	Ò	ì ß
,Ò	Ò	ß ®
outÒ	Ò	© ¨*
isUsingAlternativeTypefaceÒ	Ò	≠ «
)Ò	Ò	« »
;Ò	Ò	» …
}
Ú	Ú	 
if
Ù	Ù	 
(
Ù	Ù	 
!
Ù	Ù	 
TMP_Settings
Ù	Ù	 %
.
Ù	Ù	% &
warningsDisabled
Ù	Ù	& 6
)
Ù	Ù	6 7
{
ı	ı	 
string
ˆ	ˆ	 
formattedWarning
ˆ	ˆ	 /
=
ˆ	ˆ	0 1
srcGlyph
ˆ	ˆ	2 :
>
ˆ	ˆ	; <
$num
ˆ	ˆ	= C
?
˜	˜	 
string
˜	˜	 $
.
˜	˜	$ %
Format
˜	˜	% +
(
˜	˜	+ ,
$str˜	˜	, ﬂ
,˜	˜	ﬂ ‡
srcGlyph˜	˜	· È
,˜	˜	È Í
m_fontAsset˜	˜	Î ˆ
.˜	˜	ˆ ˜
name˜	˜	˜ ˚
,˜	˜	˚ ¸
	character˜	˜	˝ Ü
.˜	˜	Ü á
unicode˜	˜	á é
,˜	˜	é è
this˜	˜	ê î
.˜	˜	î ï
name˜	˜	ï ô
)˜	˜	ô ö
:
¯	¯	 
string
¯	¯	 $
.
¯	¯	$ %
Format
¯	¯	% +
(
¯	¯	+ ,
$str¯	¯	, ﬂ
,¯	¯	ﬂ ‡
srcGlyph¯	¯	· È
,¯	¯	È Í
m_fontAsset¯	¯	Î ˆ
.¯	¯	ˆ ˜
name¯	¯	˜ ˚
,¯	¯	˚ ¸
	character¯	¯	˝ Ü
.¯	¯	Ü á
unicode¯	¯	á é
,¯	¯	é è
this¯	¯	ê î
.¯	¯	î ï
name¯	¯	ï ô
)¯	¯	ô ö
;¯	¯	ö õ
Debug
˙	˙	 
.
˙	˙	 

LogWarning
˙	˙	 (
(
˙	˙	( )
formattedWarning
˙	˙	) 9
,
˙	˙	9 :
this
˙	˙	; ?
)
˙	˙	? @
;
˙	˙	@ A
}
˚	˚	 
}
¸	¸	 
if
˛	˛	 
(
˛	˛	 
	character
˛	˛	 
.
˛	˛	 
elementType
˛	˛	 )
==
˛	˛	* ,
TextElementType
˛	˛	- <
.
˛	˛	< =
	Character
˛	˛	= F
)
˛	˛	F G
{
ˇ	ˇ	 
if
Ä
Ä
 
(
Ä
Ä
 
	character
Ä
Ä
 !
.
Ä
Ä
! "
	textAsset
Ä
Ä
" +
.
Ä
Ä
+ ,

instanceID
Ä
Ä
, 6
!=
Ä
Ä
7 9 
m_currentFontAsset
Ä
Ä
: L
.
Ä
Ä
L M

instanceID
Ä
Ä
M W
)
Ä
Ä
W X
{
Å
Å
 2
$isUsingFallbackOrAlternativeTypeface
Ç
Ç
 <
=
Ç
Ç
= >
true
Ç
Ç
? C
;
Ç
Ç
C D 
m_currentFontAsset
É
É
 *
=
É
É
+ ,
	character
É
É
- 6
.
É
É
6 7
	textAsset
É
É
7 @
as
É
É
A C
TMP_FontAsset
É
É
D Q
;
É
É
Q R
}
Ö
Ö
 
}
Ü
Ü
 

m_textInfo
ä
ä
 
.
ä
ä
 
characterInfo
ä
ä
 (
[
ä
ä
( )#
m_totalCharacterCount
ä
ä
) >
]
ä
ä
> ?
.
ä
ä
? @
elementType
ä
ä
@ K
=
ä
ä
L M!
TMP_TextElementType
ä
ä
N a
.
ä
ä
a b
	Character
ä
ä
b k
;
ä
ä
k l

m_textInfo
ã
ã
 
.
ã
ã
 
characterInfo
ã
ã
 (
[
ã
ã
( )#
m_totalCharacterCount
ã
ã
) >
]
ã
ã
> ?
.
ã
ã
? @
textElement
ã
ã
@ K
=
ã
ã
L M
	character
ã
ã
N W
;
ã
ã
W X

m_textInfo
å
å
 
.
å
å
 
characterInfo
å
å
 (
[
å
å
( )#
m_totalCharacterCount
å
å
) >
]
å
å
> ?
.
å
å
? @&
isUsingAlternateTypeface
å
å
@ X
=
å
å
Y Z(
isUsingAlternativeTypeface
å
å
[ u
;
å
å
u v

m_textInfo
ç
ç
 
.
ç
ç
 
characterInfo
ç
ç
 (
[
ç
ç
( )#
m_totalCharacterCount
ç
ç
) >
]
ç
ç
> ?
.
ç
ç
? @
	character
ç
ç
@ I
=
ç
ç
J K
(
ç
ç
L M
char
ç
ç
M Q
)
ç
ç
Q R
unicode
ç
ç
R Y
;
ç
ç
Y Z

m_textInfo
é
é
 
.
é
é
 
characterInfo
é
é
 (
[
é
é
( )#
m_totalCharacterCount
é
é
) >
]
é
é
> ?
.
é
é
? @
index
é
é
@ E
=
é
é
F G
unicodeChars
é
é
H T
[
é
é
T U
i
é
é
U V
]
é
é
V W
.
é
é
W X
stringIndex
é
é
X c
;
é
é
c d

m_textInfo
è
è
 
.
è
è
 
characterInfo
è
è
 (
[
è
è
( )#
m_totalCharacterCount
è
è
) >
]
è
è
> ?
.
è
è
? @
stringLength
è
è
@ L
=
è
è
M N
unicodeChars
è
è
O [
[
è
è
[ \
i
è
è
\ ]
]
è
è
] ^
.
è
è
^ _
length
è
è
_ e
;
è
è
e f

m_textInfo
ê
ê
 
.
ê
ê
 
characterInfo
ê
ê
 (
[
ê
ê
( )#
m_totalCharacterCount
ê
ê
) >
]
ê
ê
> ?
.
ê
ê
? @
	fontAsset
ê
ê
@ I
=
ê
ê
J K 
m_currentFontAsset
ê
ê
L ^
;
ê
ê
^ _
if
ì
ì
 
(
ì
ì
 
	character
ì
ì
 
.
ì
ì
 
elementType
ì
ì
 )
==
ì
ì
* ,
TextElementType
ì
ì
- <
.
ì
ì
< =
Sprite
ì
ì
= C
)
ì
ì
C D
{
î
î
 
TMP_SpriteAsset
ï
ï
 #
spriteAssetRef
ï
ï
$ 2
=
ï
ï
3 4
	character
ï
ï
5 >
.
ï
ï
> ?
	textAsset
ï
ï
? H
as
ï
ï
I K
TMP_SpriteAsset
ï
ï
L [
;
ï
ï
[ \$
m_currentMaterialIndex
ñ
ñ
 *
=
ñ
ñ
+ ,
MaterialReference
ñ
ñ
- >
.
ñ
ñ
> ?"
AddMaterialReference
ñ
ñ
? S
(
ñ
ñ
S T
spriteAssetRef
ñ
ñ
T b
.
ñ
ñ
b c
material
ñ
ñ
c k
,
ñ
ñ
k l
spriteAssetRef
ñ
ñ
m {
,
ñ
ñ
{ |
refñ
ñ
} Ä$
m_materialReferencesñ
ñ
Å ï
,ñ
ñ
ï ñ.
m_materialReferenceIndexLookupñ
ñ
ó µ
)ñ
ñ
µ ∂
;ñ
ñ
∂ ∑"
m_materialReferences
ó
ó
 (
[
ó
ó
( )$
m_currentMaterialIndex
ó
ó
) ?
]
ó
ó
? @
.
ó
ó
@ A
referenceCount
ó
ó
A O
+=
ó
ó
P R
$num
ó
ó
S T
;
ó
ó
T U

m_textInfo
ô
ô
 
.
ô
ô
 
characterInfo
ô
ô
 ,
[
ô
ô
, -#
m_totalCharacterCount
ô
ô
- B
]
ô
ô
B C
.
ô
ô
C D
elementType
ô
ô
D O
=
ô
ô
P Q!
TMP_TextElementType
ô
ô
R e
.
ô
ô
e f
Sprite
ô
ô
f l
;
ô
ô
l m

m_textInfo
ö
ö
 
.
ö
ö
 
characterInfo
ö
ö
 ,
[
ö
ö
, -#
m_totalCharacterCount
ö
ö
- B
]
ö
ö
B C
.
ö
ö
C D$
materialReferenceIndex
ö
ö
D Z
=
ö
ö
[ \$
m_currentMaterialIndex
ö
ö
] s
;
ö
ö
s t

m_textInfo
õ
õ
 
.
õ
õ
 
characterInfo
õ
õ
 ,
[
õ
õ
, -#
m_totalCharacterCount
õ
õ
- B
]
õ
õ
B C
.
õ
õ
C D
spriteAsset
õ
õ
D O
=
õ
õ
P Q
spriteAssetRef
õ
õ
R `
;
õ
õ
` a

m_textInfo
ú
ú
 
.
ú
ú
 
characterInfo
ú
ú
 ,
[
ú
ú
, -#
m_totalCharacterCount
ú
ú
- B
]
ú
ú
B C
.
ú
ú
C D
spriteIndex
ú
ú
D O
=
ú
ú
P Q
(
ú
ú
R S
int
ú
ú
S V
)
ú
ú
V W
	character
ú
ú
W `
.
ú
ú
` a

glyphIndex
ú
ú
a k
;
ú
ú
k l
m_textElementType
ü
ü
 %
=
ü
ü
& '!
TMP_TextElementType
ü
ü
( ;
.
ü
ü
; <
	Character
ü
ü
< E
;
ü
ü
E F$
m_currentMaterialIndex
†
†
 *
=
†
†
+ , 
prev_materialIndex
†
†
- ?
;
†
†
? @
spriteCount
¢
¢
 
+=
¢
¢
  "
$num
¢
¢
# $
;
¢
¢
$ %#
m_totalCharacterCount
£
£
 )
+=
£
£
* ,
$num
£
£
- .
;
£
£
. /
continue
•
•
 
;
•
•
 
}
¶
¶
 
if
®
®
 
(
®
®
 2
$isUsingFallbackOrAlternativeTypeface
®
®
 8
&&
®
®
9 ; 
m_currentFontAsset
®
®
< N
.
®
®
N O

instanceID
®
®
O Y
!=
®
®
Z \
m_fontAsset
®
®
] h
.
®
®
h i

instanceID
®
®
i s
)
®
®
s t
{
©
©
 
if
´
´
 
(
´
´
 
TMP_Settings
´
´
 $
.
´
´
$ %!
matchMaterialPreset
´
´
% 8
)
´
´
8 9
m_currentMaterial
¨
¨
 )
=
¨
¨
* +!
TMP_MaterialManager
¨
¨
, ?
.
¨
¨
? @!
GetFallbackMaterial
¨
¨
@ S
(
¨
¨
S T
m_currentMaterial
¨
¨
T e
,
¨
¨
e f 
m_currentFontAsset
¨
¨
g y
.
¨
¨
y z
material¨
¨
z Ç
)¨
¨
Ç É
;¨
¨
É Ñ
else
≠
≠
 
m_currentMaterial
Æ
Æ
 )
=
Æ
Æ
* + 
m_currentFontAsset
Æ
Æ
, >
.
Æ
Æ
> ?
material
Æ
Æ
? G
;
Æ
Æ
G H$
m_currentMaterialIndex
∞
∞
 *
=
∞
∞
+ ,
MaterialReference
∞
∞
- >
.
∞
∞
> ?"
AddMaterialReference
∞
∞
? S
(
∞
∞
S T
m_currentMaterial
∞
∞
T e
,
∞
∞
e f 
m_currentFontAsset
∞
∞
g y
,
∞
∞
y z
ref
∞
∞
{ ~#
m_materialReferences∞
∞
 ì
,∞
∞
ì î.
m_materialReferenceIndexLookup∞
∞
ï ≥
)∞
∞
≥ ¥
;∞
∞
¥ µ
}
±
±
 
if
¥
¥
 
(
¥
¥
 
	character
¥
¥
 
!=
¥
¥
  
null
¥
¥
! %
&&
¥
¥
& (
	character
¥
¥
) 2
.
¥
¥
2 3
glyph
¥
¥
3 8
.
¥
¥
8 9

atlasIndex
¥
¥
9 C
>
¥
¥
D E
$num
¥
¥
F G
)
¥
¥
G H
{
µ
µ
 
m_currentMaterial
∂
∂
 %
=
∂
∂
& '!
TMP_MaterialManager
∂
∂
( ;
.
∂
∂
; <!
GetFallbackMaterial
∂
∂
< O
(
∂
∂
O P 
m_currentFontAsset
∂
∂
P b
,
∂
∂
b c
m_currentMaterial
∂
∂
d u
,
∂
∂
u v
	character∂
∂
w Ä
.∂
∂
Ä Å
glyph∂
∂
Å Ü
.∂
∂
Ü á

atlasIndex∂
∂
á ë
)∂
∂
ë í
;∂
∂
í ì$
m_currentMaterialIndex
∏
∏
 *
=
∏
∏
+ ,
MaterialReference
∏
∏
- >
.
∏
∏
> ?"
AddMaterialReference
∏
∏
? S
(
∏
∏
S T
m_currentMaterial
∏
∏
T e
,
∏
∏
e f 
m_currentFontAsset
∏
∏
g y
,
∏
∏
y z
ref
∏
∏
{ ~#
m_materialReferences∏
∏
 ì
,∏
∏
ì î.
m_materialReferenceIndexLookup∏
∏
ï ≥
)∏
∏
≥ ¥
;∏
∏
¥ µ2
$isUsingFallbackOrAlternativeTypeface
∫
∫
 8
=
∫
∫
9 :
true
∫
∫
; ?
;
∫
∫
? @
}
ª
ª
 
if
Ω
Ω
 
(
Ω
Ω
 
!
Ω
Ω
 
char
Ω
Ω
 
.
Ω
Ω
 
IsWhiteSpace
Ω
Ω
 &
(
Ω
Ω
& '
(
Ω
Ω
' (
char
Ω
Ω
( ,
)
Ω
Ω
, -
unicode
Ω
Ω
- 4
)
Ω
Ω
4 5
&&
Ω
Ω
6 8
unicode
Ω
Ω
9 @
!=
Ω
Ω
A C
$num
Ω
Ω
D J
)
Ω
Ω
J K
{
æ
æ
 
if
¿
¿
 
(
¿
¿
 "
m_materialReferences
¿
¿
 ,
[
¿
¿
, -$
m_currentMaterialIndex
¿
¿
- C
]
¿
¿
C D
.
¿
¿
D E
referenceCount
¿
¿
E S
<
¿
¿
T U
$num
¿
¿
V [
)
¿
¿
[ \"
m_materialReferences
¡
¡
 ,
[
¡
¡
, -$
m_currentMaterialIndex
¡
¡
- C
]
¡
¡
C D
.
¡
¡
D E
referenceCount
¡
¡
E S
+=
¡
¡
T V
$num
¡
¡
W X
;
¡
¡
X Y
else
¬
¬
 
{
√
√
 $
m_currentMaterialIndex
ƒ
ƒ
 .
=
ƒ
ƒ
/ 0
MaterialReference
ƒ
ƒ
1 B
.
ƒ
ƒ
B C"
AddMaterialReference
ƒ
ƒ
C W
(
ƒ
ƒ
W X
new
ƒ
ƒ
X [
Material
ƒ
ƒ
\ d
(
ƒ
ƒ
d e
m_currentMaterial
ƒ
ƒ
e v
)
ƒ
ƒ
v w
,
ƒ
ƒ
w x!
m_currentFontAssetƒ
ƒ
y ã
,ƒ
ƒ
ã å
refƒ
ƒ
ç ê$
m_materialReferencesƒ
ƒ
ë •
,ƒ
ƒ
• ¶.
m_materialReferenceIndexLookupƒ
ƒ
ß ≈
)ƒ
ƒ
≈ ∆
;ƒ
ƒ
∆ «"
m_materialReferences
≈
≈
 ,
[
≈
≈
, -$
m_currentMaterialIndex
≈
≈
- C
]
≈
≈
C D
.
≈
≈
D E
referenceCount
≈
≈
E S
+=
≈
≈
T V
$num
≈
≈
W X
;
≈
≈
X Y
}
∆
∆
 
}
«
«
 

m_textInfo
…
…
 
.
…
…
 
characterInfo
…
…
 (
[
…
…
( )#
m_totalCharacterCount
…
…
) >
]
…
…
> ?
.
…
…
? @
material
…
…
@ H
=
…
…
I J
m_currentMaterial
…
…
K \
;
…
…
\ ]

m_textInfo
 
 
 
.
 
 
 
characterInfo
 
 
 (
[
 
 
( )#
m_totalCharacterCount
 
 
) >
]
 
 
> ?
.
 
 
? @$
materialReferenceIndex
 
 
@ V
=
 
 
W X$
m_currentMaterialIndex
 
 
Y o
;
 
 
o p"
m_materialReferences
À
À
 $
[
À
À
$ %$
m_currentMaterialIndex
À
À
% ;
]
À
À
; <
.
À
À
< = 
isFallbackMaterial
À
À
= O
=
À
À
P Q2
$isUsingFallbackOrAlternativeTypeface
À
À
R v
;
À
À
v w
if
Œ
Œ
 
(
Œ
Œ
 2
$isUsingFallbackOrAlternativeTypeface
Œ
Œ
 8
)
Œ
Œ
8 9
{
œ
œ
 "
m_materialReferences
–
–
 (
[
–
–
( )$
m_currentMaterialIndex
–
–
) ?
]
–
–
? @
.
–
–
@ A
fallbackMaterial
–
–
A Q
=
–
–
R S
prev_material
–
–
T a
;
–
–
a b 
m_currentFontAsset
—
—
 &
=
—
—
' (
prev_fontAsset
—
—
) 7
;
—
—
7 8
m_currentMaterial
“
“
 %
=
“
“
& '
prev_material
“
“
( 5
;
“
“
5 6$
m_currentMaterialIndex
”
”
 *
=
”
”
+ , 
prev_materialIndex
”
”
- ?
;
”
”
? @
}
‘
‘
 #
m_totalCharacterCount
÷
÷
 %
+=
÷
÷
& (
$num
÷
÷
) *
;
÷
÷
* +
}
◊
◊
 
if
⁄
⁄
 
(
⁄
⁄
 ,
m_isCalculatingPreferredValues
⁄
⁄
 .
)
⁄
⁄
. /
{
€
€
 ,
m_isCalculatingPreferredValues
‹
‹
 .
=
‹
‹
/ 0
false
‹
‹
1 6
;
‹
‹
6 7#
k_SetArraySizesMarker
ﬁ
ﬁ
 %
.
ﬁ
ﬁ
% &
End
ﬁ
ﬁ
& )
(
ﬁ
ﬁ
) *
)
ﬁ
ﬁ
* +
;
ﬁ
ﬁ
+ ,
return
ﬂ
ﬂ
 #
m_totalCharacterCount
ﬂ
ﬂ
 ,
;
ﬂ
ﬂ
, -
}
‡
‡
 

m_textInfo
„
„
 
.
„
„
 
spriteCount
„
„
 "
=
„
„
# $
spriteCount
„
„
% 0
;
„
„
0 1
int
‰
‰
 
materialCount
‰
‰
 
=
‰
‰
 

m_textInfo
‰
‰
  *
.
‰
‰
* +
materialCount
‰
‰
+ 8
=
‰
‰
9 :,
m_materialReferenceIndexLookup
‰
‰
; Y
.
‰
‰
Y Z
Count
‰
‰
Z _
;
‰
‰
_ `
if
Á
Á
 
(
Á
Á
 
materialCount
Á
Á
 
>
Á
Á
 

m_textInfo
Á
Á
  *
.
Á
Á
* +
meshInfo
Á
Á
+ 3
.
Á
Á
3 4
Length
Á
Á
4 :
)
Á
Á
: ;
TMP_TextInfo
Ë
Ë
 
.
Ë
Ë
 
Resize
Ë
Ë
 #
(
Ë
Ë
# $
ref
Ë
Ë
$ '

m_textInfo
Ë
Ë
( 2
.
Ë
Ë
2 3
meshInfo
Ë
Ë
3 ;
,
Ë
Ë
; <
materialCount
Ë
Ë
= J
,
Ë
Ë
J K
false
Ë
Ë
L Q
)
Ë
Ë
Q R
;
Ë
Ë
R S
if
Î
Î
 
(
Î
Î
 
materialCount
Î
Î
 
>
Î
Î
 
m_subTextObjects
Î
Î
  0
.
Î
Î
0 1
Length
Î
Î
1 7
)
Î
Î
7 8
TMP_TextInfo
Ï
Ï
 
.
Ï
Ï
 
Resize
Ï
Ï
 #
(
Ï
Ï
# $
ref
Ï
Ï
$ '
m_subTextObjects
Ï
Ï
( 8
,
Ï
Ï
8 9
Mathf
Ï
Ï
: ?
.
Ï
Ï
? @
NextPowerOfTwo
Ï
Ï
@ N
(
Ï
Ï
N O
materialCount
Ï
Ï
O \
+
Ï
Ï
] ^
$num
Ï
Ï
_ `
)
Ï
Ï
` a
)
Ï
Ï
a b
;
Ï
Ï
b c
if
Ô
Ô
 
(
Ô
Ô
 -
m_VertexBufferAutoSizeReduction
Ô
Ô
 /
&&
Ô
Ô
0 2

m_textInfo
Ô
Ô
3 =
.
Ô
Ô
= >
characterInfo
Ô
Ô
> K
.
Ô
Ô
K L
Length
Ô
Ô
L R
-
Ô
Ô
S T#
m_totalCharacterCount
Ô
Ô
U j
>
Ô
Ô
k l
$num
Ô
Ô
m p
)
Ô
Ô
p q
TMP_TextInfo


 
.


 
Resize


 #
(


# $
ref


$ '

m_textInfo


( 2
.


2 3
characterInfo


3 @
,


@ A
Mathf


B G
.


G H
Max


H K
(


K L#
m_totalCharacterCount


L a
+


b c
$num


d e
,


e f
$num


g j
)


j k
,


k l
true


m q
)


q r
;


r s
for
Ù
Ù
 
(
Ù
Ù
 
int
Ù
Ù
 
i
Ù
Ù
 
=
Ù
Ù
 
$num
Ù
Ù
 
;
Ù
Ù
 
i
Ù
Ù
 
<
Ù
Ù
 
materialCount
Ù
Ù
  -
;
Ù
Ù
- .
i
Ù
Ù
/ 0
++
Ù
Ù
0 2
)
Ù
Ù
2 3
{
ı
ı
 
if
˜
˜
 
(
˜
˜
 
i
˜
˜
 
>
˜
˜
 
$num
˜
˜
 
)
˜
˜
 
{
¯
¯
 
if
˘
˘
 
(
˘
˘
 
m_subTextObjects
˘
˘
 (
[
˘
˘
( )
i
˘
˘
) *
]
˘
˘
* +
==
˘
˘
, .
null
˘
˘
/ 3
)
˘
˘
3 4
{
˙
˙
 
m_subTextObjects
˚
˚
 (
[
˚
˚
( )
i
˚
˚
) *
]
˚
˚
* +
=
˚
˚
, -
TMP_SubMeshUI
˚
˚
. ;
.
˚
˚
; <
AddSubTextObject
˚
˚
< L
(
˚
˚
L M
this
˚
˚
M Q
,
˚
˚
Q R"
m_materialReferences
˚
˚
S g
[
˚
˚
g h
i
˚
˚
h i
]
˚
˚
i j
)
˚
˚
j k
;
˚
˚
k l

m_textInfo
˛
˛
 "
.
˛
˛
" #
meshInfo
˛
˛
# +
[
˛
˛
+ ,
i
˛
˛
, -
]
˛
˛
- .
.
˛
˛
. /
vertices
˛
˛
/ 7
=
˛
˛
8 9
null
˛
˛
: >
;
˛
˛
> ?
}
ˇ
ˇ
 
if
ÑÑ 
(
ÑÑ 
m_rectTransform
ÑÑ '
.
ÑÑ' (
pivot
ÑÑ( -
!=
ÑÑ. 0
m_subTextObjects
ÑÑ1 A
[
ÑÑA B
i
ÑÑB C
]
ÑÑC D
.
ÑÑD E
rectTransform
ÑÑE R
.
ÑÑR S
pivot
ÑÑS X
)
ÑÑX Y
m_subTextObjects
ÖÖ (
[
ÖÖ( )
i
ÖÖ) *
]
ÖÖ* +
.
ÖÖ+ ,
rectTransform
ÖÖ, 9
.
ÖÖ9 :
pivot
ÖÖ: ?
=
ÖÖ@ A
m_rectTransform
ÖÖB Q
.
ÖÖQ R
pivot
ÖÖR W
;
ÖÖW X
if
àà 
(
àà 
m_subTextObjects
àà (
[
àà( )
i
àà) *
]
àà* +
.
àà+ ,
sharedMaterial
àà, :
==
àà; =
null
àà> B
||
ààC E
m_subTextObjects
ààF V
[
ààV W
i
ààW X
]
ààX Y
.
ààY Z
sharedMaterial
ààZ h
.
ààh i
GetInstanceID
àài v
(
ààv w
)
ààw x
!=
àày {#
m_materialReferencesàà| ê
[ààê ë
iààë í
]ààí ì
.ààì î
materialààî ú
.ààú ù
GetInstanceIDààù ™
(àà™ ´
)àà´ ¨
)àà¨ ≠
{
ââ 
m_subTextObjects
ää (
[
ää( )
i
ää) *
]
ää* +
.
ää+ ,
sharedMaterial
ää, :
=
ää; <"
m_materialReferences
ää= Q
[
ääQ R
i
ääR S
]
ääS T
.
ääT U
material
ääU ]
;
ää] ^
m_subTextObjects
ãã (
[
ãã( )
i
ãã) *
]
ãã* +
.
ãã+ ,
	fontAsset
ãã, 5
=
ãã6 7"
m_materialReferences
ãã8 L
[
ããL M
i
ããM N
]
ããN O
.
ããO P
	fontAsset
ããP Y
;
ããY Z
m_subTextObjects
åå (
[
åå( )
i
åå) *
]
åå* +
.
åå+ ,
spriteAsset
åå, 7
=
åå8 9"
m_materialReferences
åå: N
[
ååN O
i
ååO P
]
ååP Q
.
ååQ R
spriteAsset
ååR ]
;
åå] ^
}
çç 
if
êê 
(
êê "
m_materialReferences
êê ,
[
êê, -
i
êê- .
]
êê. /
.
êê/ 0 
isFallbackMaterial
êê0 B
)
êêB C
{
ëë 
m_subTextObjects
íí (
[
íí( )
i
íí) *
]
íí* +
.
íí+ ,
fallbackMaterial
íí, <
=
íí= >"
m_materialReferences
íí? S
[
ííS T
i
ííT U
]
ííU V
.
ííV W
material
ííW _
;
íí_ `
m_subTextObjects
ìì (
[
ìì( )
i
ìì) *
]
ìì* +
.
ìì+ ,$
fallbackSourceMaterial
ìì, B
=
ììC D"
m_materialReferences
ììE Y
[
ììY Z
i
ììZ [
]
ìì[ \
.
ìì\ ]
fallbackMaterial
ìì] m
;
ììm n
}
îî 
}
ïï 
int
óó 
referenceCount
óó "
=
óó# $"
m_materialReferences
óó% 9
[
óó9 :
i
óó: ;
]
óó; <
.
óó< =
referenceCount
óó= K
;
óóK L
if
öö 
(
öö 

m_textInfo
öö 
.
öö 
meshInfo
öö '
[
öö' (
i
öö( )
]
öö) *
.
öö* +
vertices
öö+ 3
==
öö4 6
null
öö7 ;
||
öö< >

m_textInfo
öö? I
.
ööI J
meshInfo
ööJ R
[
ööR S
i
ööS T
]
ööT U
.
ööU V
vertices
ööV ^
.
öö^ _
Length
öö_ e
<
ööf g
referenceCount
ööh v
*
ööw x
$num
ööy z
)
ööz {
{
õõ 
if
úú 
(
úú 

m_textInfo
úú "
.
úú" #
meshInfo
úú# +
[
úú+ ,
i
úú, -
]
úú- .
.
úú. /
vertices
úú/ 7
==
úú8 :
null
úú; ?
)
úú? @
{
ùù 
if
ûû 
(
ûû 
i
ûû 
==
ûû  
$num
ûû! "
)
ûû" #

m_textInfo
üü &
.
üü& '
meshInfo
üü' /
[
üü/ 0
i
üü0 1
]
üü1 2
=
üü3 4
new
üü5 8
TMP_MeshInfo
üü9 E
(
üüE F
m_mesh
üüF L
,
üüL M
referenceCount
üüN \
+
üü] ^
$num
üü_ `
)
üü` a
;
üüa b
else
†† 

m_textInfo
°° &
.
°°& '
meshInfo
°°' /
[
°°/ 0
i
°°0 1
]
°°1 2
=
°°3 4
new
°°5 8
TMP_MeshInfo
°°9 E
(
°°E F
m_subTextObjects
°°F V
[
°°V W
i
°°W X
]
°°X Y
.
°°Y Z
mesh
°°Z ^
,
°°^ _
referenceCount
°°` n
+
°°o p
$num
°°q r
)
°°r s
;
°°s t
}
¢¢ 
else
££ 

m_textInfo
§§ "
.
§§" #
meshInfo
§§# +
[
§§+ ,
i
§§, -
]
§§- .
.
§§. /
ResizeMeshInfo
§§/ =
(
§§= >
referenceCount
§§> L
>
§§M N
$num
§§O S
?
§§T U
referenceCount
§§V d
+
§§e f
$num
§§g j
:
§§k l
Mathf
§§m r
.
§§r s
NextPowerOfTwo§§s Å
(§§Å Ç
referenceCount§§Ç ê
+§§ë í
$num§§ì î
)§§î ï
)§§ï ñ
;§§ñ ó
}
•• 
else
¶¶ 
if
¶¶ 
(
¶¶ -
m_VertexBufferAutoSizeReduction
¶¶ 8
&&
¶¶9 ;
referenceCount
¶¶< J
>
¶¶K L
$num
¶¶M N
&&
¶¶O Q

m_textInfo
¶¶R \
.
¶¶\ ]
meshInfo
¶¶] e
[
¶¶e f
i
¶¶f g
]
¶¶g h
.
¶¶h i
vertices
¶¶i q
.
¶¶q r
Length
¶¶r x
/
¶¶y z
$num
¶¶{ |
-
¶¶} ~
referenceCount¶¶ ç
>¶¶é è
$num¶¶ê ì
)¶¶ì î
{
ßß 

m_textInfo
™™ 
.
™™ 
meshInfo
™™ '
[
™™' (
i
™™( )
]
™™) *
.
™™* +
ResizeMeshInfo
™™+ 9
(
™™9 :
referenceCount
™™: H
>
™™I J
$num
™™K O
?
™™P Q
referenceCount
™™R `
+
™™a b
$num
™™c f
:
™™g h
Mathf
™™i n
.
™™n o
NextPowerOfTwo
™™o }
(
™™} ~
referenceCount™™~ å
+™™ç é
$num™™è ê
)™™ê ë
)™™ë í
;™™í ì
}
´´ 

m_textInfo
ÆÆ 
.
ÆÆ 
meshInfo
ÆÆ #
[
ÆÆ# $
i
ÆÆ$ %
]
ÆÆ% &
.
ÆÆ& '
material
ÆÆ' /
=
ÆÆ0 1"
m_materialReferences
ÆÆ2 F
[
ÆÆF G
i
ÆÆG H
]
ÆÆH I
.
ÆÆI J
material
ÆÆJ R
;
ÆÆR S
}
ØØ 
for
¥¥ 
(
¥¥ 
int
¥¥ 
i
¥¥ 
=
¥¥ 
materialCount
¥¥ &
;
¥¥& '
i
¥¥( )
<
¥¥* +
m_subTextObjects
¥¥, <
.
¥¥< =
Length
¥¥= C
&&
¥¥D F
m_subTextObjects
¥¥G W
[
¥¥W X
i
¥¥X Y
]
¥¥Y Z
!=
¥¥[ ]
null
¥¥^ b
;
¥¥b c
i
¥¥d e
++
¥¥e g
)
¥¥g h
{
µµ 
if
∂∂ 
(
∂∂ 
i
∂∂ 
<
∂∂ 

m_textInfo
∂∂ "
.
∂∂" #
meshInfo
∂∂# +
.
∂∂+ ,
Length
∂∂, 2
)
∂∂2 3
{
∑∑ 
m_subTextObjects
∏∏ $
[
∏∏$ %
i
∏∏% &
]
∏∏& '
.
∏∏' (
canvasRenderer
∏∏( 6
.
∏∏6 7
SetMesh
∏∏7 >
(
∏∏> ?
null
∏∏? C
)
∏∏C D
;
∏∏D E
}
ºº 
}
ΩΩ #
k_SetArraySizesMarker
øø !
.
øø! "
End
øø" %
(
øø% &
)
øø& '
;
øø' (
return
¿¿ #
m_totalCharacterCount
¿¿ (
;
¿¿( )
}
¡¡ 	
public
œœ 
override
œœ 
void
œœ 
ComputeMarginSize
œœ .
(
œœ. /
)
œœ/ 0
{
–– 	
if
—— 
(
—— 
this
—— 
.
—— 
rectTransform
—— "
!=
——# %
null
——& *
)
——* +
{
““ 
Rect
‘‘ 
rect
‘‘ 
=
‘‘ 
m_rectTransform
‘‘ +
.
‘‘+ ,
rect
‘‘, 0
;
‘‘0 1
m_marginWidth
÷÷ 
=
÷÷ 
rect
÷÷  $
.
÷÷$ %
width
÷÷% *
-
÷÷+ ,
m_margin
÷÷- 5
.
÷÷5 6
x
÷÷6 7
-
÷÷8 9
m_margin
÷÷: B
.
÷÷B C
z
÷÷C D
;
÷÷D E
m_marginHeight
◊◊ 
=
◊◊  
rect
◊◊! %
.
◊◊% &
height
◊◊& ,
-
◊◊- .
m_margin
◊◊/ 7
.
◊◊7 8
y
◊◊8 9
-
◊◊: ;
m_margin
◊◊< D
.
◊◊D E
w
◊◊E F
;
◊◊F G)
m_PreviousRectTransformSize
⁄⁄ +
=
⁄⁄, -
rect
⁄⁄. 2
.
⁄⁄2 3
size
⁄⁄3 7
;
⁄⁄7 8%
m_PreviousPivotPosition
€€ '
=
€€( )
m_rectTransform
€€* 9
.
€€9 :
pivot
€€: ?
;
€€? @$
m_RectTransformCorners
ﬁﬁ &
=
ﬁﬁ' (*
GetTextContainerLocalCorners
ﬁﬁ) E
(
ﬁﬁE F
)
ﬁﬁF G
;
ﬁﬁG H
}
ﬂﬂ 
}
‡‡ 	
	protected
ÊÊ 
override
ÊÊ 
void
ÊÊ +
OnDidApplyAnimationProperties
ÊÊ  =
(
ÊÊ= >
)
ÊÊ> ?
{
ÁÁ 	%
m_havePropertiesChanged
ËË #
=
ËË$ %
true
ËË& *
;
ËË* +
SetVerticesDirty
ÈÈ 
(
ÈÈ 
)
ÈÈ 
;
ÈÈ 
SetLayoutDirty
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ 
}
ÏÏ 	
	protected
ÔÔ 
override
ÔÔ 
void
ÔÔ &
OnCanvasHierarchyChanged
ÔÔ  8
(
ÔÔ8 9
)
ÔÔ9 :
{
 	
base
ÒÒ 
.
ÒÒ &
OnCanvasHierarchyChanged
ÒÒ )
(
ÒÒ) *
)
ÒÒ* +
;
ÒÒ+ ,
m_canvas
ÛÛ 
=
ÛÛ 
canvas
ÛÛ 
;
ÛÛ 
if
ıı 
(
ıı 
!
ıı 
	m_isAwake
ıı 
||
ıı 
!
ıı  
isActiveAndEnabled
ıı 1
)
ıı1 2
return
ˆˆ 
;
ˆˆ 
if
˘˘ 
(
˘˘ 
m_canvas
˘˘ 
==
˘˘ 
null
˘˘  
||
˘˘! #
m_canvas
˘˘$ ,
.
˘˘, -
enabled
˘˘- 4
==
˘˘5 7
false
˘˘8 =
)
˘˘= >
TMP_UpdateManager
˙˙ !
.
˙˙! "+
UnRegisterTextObjectForUpdate
˙˙" ?
(
˙˙? @
this
˙˙@ D
)
˙˙D E
;
˙˙E F
else
˚˚ 
if
˚˚ 
(
˚˚ '
m_IsTextObjectScaleStatic
˚˚ .
==
˚˚/ 1
false
˚˚2 7
)
˚˚7 8
TMP_UpdateManager
¸¸ !
.
¸¸! ")
RegisterTextObjectForUpdate
¸¸" =
(
¸¸= >
this
¸¸> B
)
¸¸B C
;
¸¸C D
}
˝˝ 	
	protected
ÄÄ 
override
ÄÄ 
void
ÄÄ &
OnTransformParentChanged
ÄÄ  8
(
ÄÄ8 9
)
ÄÄ9 :
{
ÅÅ 	
base
ÑÑ 
.
ÑÑ &
OnTransformParentChanged
ÑÑ )
(
ÑÑ) *
)
ÑÑ* +
;
ÑÑ+ ,
m_canvas
ÜÜ 
=
ÜÜ 
this
ÜÜ 
.
ÜÜ 
canvas
ÜÜ "
;
ÜÜ" #
ComputeMarginSize
àà 
(
àà 
)
àà 
;
àà  %
m_havePropertiesChanged
ââ #
=
ââ$ %
true
ââ& *
;
ââ* +
}
ää 	
	protected
çç 
override
çç 
void
çç -
OnRectTransformDimensionsChange
çç  ?
(
çç? @
)
çç@ A
{
éé 	
if
íí 
(
íí 
!
íí 
this
íí 
.
íí 

gameObject
íí  
.
íí  !
activeInHierarchy
íí! 2
)
íí2 3
return
ìì 
;
ìì 
bool
ññ )
hasCanvasScaleFactorChanged
ññ ,
=
ññ- .
false
ññ/ 4
;
ññ4 5
if
óó 
(
óó 
m_canvas
óó 
!=
óó 
null
óó  
&&
óó! #!
m_CanvasScaleFactor
óó$ 7
!=
óó8 :
m_canvas
óó; C
.
óóC D
scaleFactor
óóD O
)
óóO P
{
òò !
m_CanvasScaleFactor
ôô #
=
ôô$ %
m_canvas
ôô& .
.
ôô. /
scaleFactor
ôô/ :
;
ôô: ;)
hasCanvasScaleFactorChanged
öö +
=
öö, -
true
öö. 2
;
öö2 3
}
õõ 
if
ûû 
(
ûû )
hasCanvasScaleFactorChanged
ûû +
==
ûû, .
false
ûû/ 4
&&
ûû5 7
rectTransform
üü 
!=
üü  
null
üü! %
&&
üü& (
Mathf
†† 
.
†† 
Abs
†† 
(
†† 
m_rectTransform
†† )
.
††) *
rect
††* .
.
††. /
width
††/ 4
-
††5 6)
m_PreviousRectTransformSize
††7 R
.
††R S
x
††S T
)
††T U
<
††V W
$num
††X _
&&
††` b
Mathf
††c h
.
††h i
Abs
††i l
(
††l m
m_rectTransform
††m |
.
††| }
rect††} Å
.††Å Ç
height††Ç à
-††â ä+
m_PreviousRectTransformSize††ã ¶
.††¶ ß
y††ß ®
)††® ©
<††™ ´
$num††¨ ≥
&&††¥ ∂
Mathf
°° 
.
°° 
Abs
°° 
(
°° 
m_rectTransform
°° )
.
°°) *
pivot
°°* /
.
°°/ 0
x
°°0 1
-
°°2 3%
m_PreviousPivotPosition
°°4 K
.
°°K L
x
°°L M
)
°°M N
<
°°O P
$num
°°Q X
&&
°°Y [
Mathf
°°\ a
.
°°a b
Abs
°°b e
(
°°e f
m_rectTransform
°°f u
.
°°u v
pivot
°°v {
.
°°{ |
y
°°| }
-
°°~ '
m_PreviousPivotPosition°°Ä ó
.°°ó ò
y°°ò ô
)°°ô ö
<°°õ ú
$num°°ù §
)°°§ •
{
¢¢ 
return
££ 
;
££ 
}
§§ 
ComputeMarginSize
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶  "
UpdateSubObjectPivot
®®  
(
®®  !
)
®®! "
;
®®" #
SetVerticesDirty
™™ 
(
™™ 
)
™™ 
;
™™ 
SetLayoutDirty
´´ 
(
´´ 
)
´´ 
;
´´ 
}
¨¨ 	
internal
≤≤ 
override
≤≤ 
void
≤≤ 
InternalUpdate
≤≤ -
(
≤≤- .
)
≤≤. /
{
≥≥ 	
if
µµ 
(
µµ %
m_havePropertiesChanged
µµ '
==
µµ( *
false
µµ+ 0
)
µµ0 1
{
∂∂ 
float
∑∑ 
lossyScaleY
∑∑ !
=
∑∑" #
m_rectTransform
∑∑$ 3
.
∑∑3 4

lossyScale
∑∑4 >
.
∑∑> ?
y
∑∑? @
;
∑∑@ A
if
ªª 
(
ªª 
Mathf
ªª 
.
ªª 
Abs
ªª 
(
ªª 
lossyScaleY
ªª )
-
ªª* +#
m_previousLossyScaleY
ªª, A
)
ªªA B
>
ªªC D
$num
ªªE L
&&
ªªM O#
m_TextProcessingArray
ªªP e
[
ªªe f
$num
ªªf g
]
ªªg h
.
ªªh i
unicode
ªªi p
!=
ªªq s
$num
ªªt u
)
ªªu v
{
ºº 
float
ΩΩ 

scaleDelta
ΩΩ $
=
ΩΩ% &
lossyScaleY
ΩΩ' 2
/
ΩΩ3 4#
m_previousLossyScaleY
ΩΩ5 J
;
ΩΩJ K
UpdateSDFScale
øø "
(
øø" #

scaleDelta
øø# -
)
øø- .
;
øø. /#
m_previousLossyScaleY
¡¡ )
=
¡¡* +
lossyScaleY
¡¡, 7
;
¡¡7 8
}
¬¬ 
}
√√ 
if
∆∆ 
(
∆∆ /
!m_isUsingLegacyAnimationComponent
∆∆ 1
)
∆∆1 2
{
«« %
m_havePropertiesChanged
…… '
=
……( )
true
……* .
;
……. /
OnPreRenderCanvas
   !
(
  ! "
)
  " #
;
  # $
}
ÀÀ 
}
ÃÃ 	
void
““ 
OnPreRenderCanvas
““ 
(
““ 
)
““  
{
”” 	
if
◊◊ 
(
◊◊ 
!
◊◊ 
	m_isAwake
◊◊ 
||
◊◊ 
(
◊◊ 
this
◊◊ #
.
◊◊# $
IsActive
◊◊$ ,
(
◊◊, -
)
◊◊- .
==
◊◊/ 1
false
◊◊2 7
&&
◊◊8 :!
m_ignoreActiveState
◊◊; N
==
◊◊O Q
false
◊◊R W
)
◊◊W X
)
◊◊X Y
return
ÿÿ 
;
ÿÿ 
if
⁄⁄ 
(
⁄⁄ 
m_canvas
⁄⁄ 
==
⁄⁄ 
null
⁄⁄  
)
⁄⁄  !
{
⁄⁄" #
m_canvas
⁄⁄$ ,
=
⁄⁄- .
this
⁄⁄/ 3
.
⁄⁄3 4
canvas
⁄⁄4 :
;
⁄⁄: ;
if
⁄⁄< >
(
⁄⁄? @
m_canvas
⁄⁄@ H
==
⁄⁄I K
null
⁄⁄L P
)
⁄⁄P Q
return
⁄⁄R X
;
⁄⁄X Y
}
⁄⁄Z [
if
›› 
(
›› 
m_fontAsset
›› 
==
›› 
null
›› #
)
››# $
{
ﬁﬁ 
Debug
ﬂﬂ 
.
ﬂﬂ 

LogWarning
ﬂﬂ  
(
ﬂﬂ  !
$str
ﬂﬂ! F
+
ﬂﬂG H
	transform
ﬂﬂI R
.
ﬂﬂR S
name
ﬂﬂS W
+
ﬂﬂX Y
$str
ﬂﬂZ h
,
ﬂﬂh i
this
ﬂﬂj n
)
ﬂﬂn o
;
ﬂﬂo p
return
‡‡ 
;
‡‡ 
}
·· 
if
„„ 
(
„„ %
m_havePropertiesChanged
„„ '
||
„„( *
m_isLayoutDirty
„„+ :
)
„„: ;
{
‰‰ 
if
ËË 
(
ËË "
checkPaddingRequired
ËË (
)
ËË( )
UpdateMeshPadding
ÈÈ %
(
ÈÈ% &
)
ÈÈ& '
;
ÈÈ' (
ParseInputText
ÏÏ 
(
ÏÏ 
)
ÏÏ  
;
ÏÏ  !
TMP_FontAsset
ÌÌ 
.
ÌÌ 4
&UpdateFontFeaturesForFontAssetsInQueue
ÌÌ D
(
ÌÌD E
)
ÌÌE F
;
ÌÌF G
if
 
(
  
m_enableAutoSizing
 &
)
& '

m_fontSize
ÒÒ 
=
ÒÒ  
Mathf
ÒÒ! &
.
ÒÒ& '
Clamp
ÒÒ' ,
(
ÒÒ, -
m_fontSizeBase
ÒÒ- ;
,
ÒÒ; <
m_fontSizeMin
ÒÒ= J
,
ÒÒJ K
m_fontSizeMax
ÒÒL Y
)
ÒÒY Z
;
ÒÒZ [
m_maxFontSize
ÛÛ 
=
ÛÛ 
m_fontSizeMax
ÛÛ  -
;
ÛÛ- .
m_minFontSize
ÙÙ 
=
ÙÙ 
m_fontSizeMin
ÙÙ  -
;
ÙÙ- . 
m_lineSpacingDelta
ıı "
=
ıı# $
$num
ıı% &
;
ıı& '!
m_charWidthAdjDelta
ˆˆ #
=
ˆˆ$ %
$num
ˆˆ& '
;
ˆˆ' (
m_isTextTruncated
¯¯ !
=
¯¯" #
false
¯¯$ )
;
¯¯) *%
m_havePropertiesChanged
˙˙ '
=
˙˙( )
false
˙˙* /
;
˙˙/ 0
m_isLayoutDirty
˚˚ 
=
˚˚  !
false
˚˚" '
;
˚˚' (!
m_ignoreActiveState
¸¸ #
=
¸¸$ %
false
¸¸& +
;
¸¸+ ,&
m_IsAutoSizePointSizeSet
ˇˇ (
=
ˇˇ) *
false
ˇˇ+ 0
;
ˇˇ0 1&
m_AutoSizeIterationCount
ÄÄ (
=
ÄÄ) *
$num
ÄÄ+ ,
;
ÄÄ, -
while
ÑÑ 
(
ÑÑ &
m_IsAutoSizePointSizeSet
ÑÑ /
==
ÑÑ0 2
false
ÑÑ3 8
)
ÑÑ8 9
{
ÖÖ 
GenerateTextMesh
ÜÜ $
(
ÜÜ$ %
)
ÜÜ% &
;
ÜÜ& '&
m_AutoSizeIterationCount
áá ,
+=
áá- /
$num
áá0 1
;
áá1 2
}
àà 
}
ââ 
}
ää 	
	protected
êê 
virtual
êê 
void
êê 
GenerateTextMesh
êê /
(
êê/ 0
)
êê0 1
{
ëë 	"
k_GenerateTextMarker
íí  
.
íí  !
Begin
íí! &
(
íí& '
)
íí' (
;
íí( )
if
ïï 
(
ïï 
m_fontAsset
ïï 
==
ïï 
null
ïï #
||
ïï$ &
m_fontAsset
ïï' 2
.
ïï2 3"
characterLookupTable
ïï3 G
==
ïïH J
null
ïïK O
)
ïïO P
{
ññ 
Debug
óó 
.
óó 

LogWarning
óó  
(
óó  !
$str
óó! f
+
óóg h
this
óói m
.
óóm n
GetInstanceID
óón {
(
óó{ |
)
óó| }
)
óó} ~
;
óó~ &
m_IsAutoSizePointSizeSet
òò (
=
òò) *
true
òò+ /
;
òò/ 0"
k_GenerateTextMarker
ôô $
.
ôô$ %
End
ôô% (
(
ôô( )
)
ôô) *
;
ôô* +
return
öö 
;
öö 
}
õõ 
if
ûû 
(
ûû 

m_textInfo
ûû 
!=
ûû 
null
ûû "
)
ûû" #

m_textInfo
üü 
.
üü 
Clear
üü  
(
üü  !
)
üü! "
;
üü" #
if
¢¢ 
(
¢¢ #
m_TextProcessingArray
¢¢ %
==
¢¢& (
null
¢¢) -
||
¢¢. 0#
m_TextProcessingArray
¢¢1 F
.
¢¢F G
Length
¢¢G M
==
¢¢N P
$num
¢¢Q R
||
¢¢S U#
m_TextProcessingArray
¢¢V k
[
¢¢k l
$num
¢¢l m
]
¢¢m n
.
¢¢n o
unicode
¢¢o v
==
¢¢w y
$num
¢¢z {
)
¢¢{ |
{
££ 
	ClearMesh
•• 
(
•• 
)
•• 
;
•• 
m_preferredWidth
ßß  
=
ßß! "
$num
ßß# $
;
ßß$ %
m_preferredHeight
®® !
=
®®" #
$num
®®$ %
;
®®% & 
TMPro_EventManager
´´ "
.
´´" #
ON_TEXT_CHANGED
´´# 2
(
´´2 3
this
´´3 7
)
´´7 8
;
´´8 9&
m_IsAutoSizePointSizeSet
¨¨ (
=
¨¨) *
true
¨¨+ /
;
¨¨/ 0"
k_GenerateTextMarker
≠≠ $
.
≠≠$ %
End
≠≠% (
(
≠≠( )
)
≠≠) *
;
≠≠* +
return
ÆÆ 
;
ÆÆ 
}
ØØ  
m_currentFontAsset
±± 
=
±±  
m_fontAsset
±±! ,
;
±±, -
m_currentMaterial
≤≤ 
=
≤≤ 
m_sharedMaterial
≤≤  0
;
≤≤0 1$
m_currentMaterialIndex
≥≥ "
=
≥≥# $
$num
≥≥% &
;
≥≥& '&
m_materialReferenceStack
¥¥ $
.
¥¥$ %

SetDefault
¥¥% /
(
¥¥/ 0
new
¥¥0 3
MaterialReference
¥¥4 E
(
¥¥E F$
m_currentMaterialIndex
¥¥F \
,
¥¥\ ] 
m_currentFontAsset
¥¥^ p
,
¥¥p q
null
¥¥r v
,
¥¥v w 
m_currentMaterial¥¥x â
,¥¥â ä
	m_padding¥¥ã î
)¥¥î ï
)¥¥ï ñ
;¥¥ñ ó"
m_currentSpriteAsset
∂∂  
=
∂∂! "
m_spriteAsset
∂∂# 0
;
∂∂0 1
if
ππ 
(
ππ 
m_spriteAnimator
ππ  
!=
ππ! #
null
ππ$ (
)
ππ( )
m_spriteAnimator
∫∫  
.
∫∫  !
StopAllAnimations
∫∫! 2
(
∫∫2 3
)
∫∫3 4
;
∫∫4 5
int
ΩΩ !
totalCharacterCount
ΩΩ #
=
ΩΩ$ %#
m_totalCharacterCount
ΩΩ& ;
;
ΩΩ; <
float
¡¡ 
	baseScale
¡¡ 
=
¡¡ 
(
¡¡ 

m_fontSize
¡¡ )
/
¡¡* +
m_fontAsset
¡¡, 7
.
¡¡7 8

m_FaceInfo
¡¡8 B
.
¡¡B C
	pointSize
¡¡C L
*
¡¡M N
m_fontAsset
¡¡O Z
.
¡¡Z [

m_FaceInfo
¡¡[ e
.
¡¡e f
scale
¡¡f k
*
¡¡l m
(
¡¡n o
m_isOrthographic
¡¡o 
?¡¡Ä Å
$num¡¡Ç É
:¡¡Ñ Ö
$num¡¡Ü ä
)¡¡ä ã
)¡¡ã å
;¡¡å ç
float
¬¬ !
currentElementScale
¬¬ %
=
¬¬& '
	baseScale
¬¬( 1
;
¬¬1 2
float
√√ 
currentEmScale
√√  
=
√√! "

m_fontSize
√√# -
*
√√. /
$num
√√0 5
*
√√6 7
(
√√8 9
m_isOrthographic
√√9 I
?
√√J K
$num
√√L M
:
√√N O
$num
√√P T
)
√√T U
;
√√U V#
m_fontScaleMultiplier
ƒƒ !
=
ƒƒ" #
$num
ƒƒ$ %
;
ƒƒ% &
m_currentFontSize
∆∆ 
=
∆∆ 

m_fontSize
∆∆  *
;
∆∆* +
m_sizeStack
«« 
.
«« 

SetDefault
«« "
(
««" #
m_currentFontSize
««# 4
)
««4 5
;
««5 6
float
»» 
fontSizeDelta
»» 
=
»»  !
$num
»»" #
;
»»# $
int
   
charCode
   
=
   
$num
   
;
   !
m_FontStyleInternal
ÃÃ 
=
ÃÃ  !
m_fontStyle
ÃÃ" -
;
ÃÃ- ."
m_FontWeightInternal
ÕÕ  
=
ÕÕ! "
(
ÕÕ# $!
m_FontStyleInternal
ÕÕ$ 7
&
ÕÕ8 9

FontStyles
ÕÕ: D
.
ÕÕD E
Bold
ÕÕE I
)
ÕÕI J
==
ÕÕK M

FontStyles
ÕÕN X
.
ÕÕX Y
Bold
ÕÕY ]
?
ÕÕ^ _

FontWeight
ÕÕ` j
.
ÕÕj k
Bold
ÕÕk o
:
ÕÕp q
m_fontWeight
ÕÕr ~
;
ÕÕ~ 
m_FontWeightStack
ŒŒ 
.
ŒŒ 

SetDefault
ŒŒ (
(
ŒŒ( )"
m_FontWeightInternal
ŒŒ) =
)
ŒŒ= >
;
ŒŒ> ?
m_fontStyleStack
œœ 
.
œœ 
Clear
œœ "
(
œœ" #
)
œœ# $
;
œœ$ %!
m_lineJustification
—— 
=
——  !#
m_HorizontalAlignment
——" 7
;
——7 8&
m_lineJustificationStack
““ $
.
““$ %

SetDefault
““% /
(
““/ 0!
m_lineJustification
““0 C
)
““C D
;
““D E
float
‘‘ 
padding
‘‘ 
=
‘‘ 
$num
‘‘ 
;
‘‘ 
float
’’ 
style_padding
’’ 
=
’’  !
$num
’’" #
;
’’# $
float
÷÷ #
boldSpacingAdjustment
÷÷ '
=
÷÷( )
$num
÷÷* +
;
÷÷+ ,
m_baselineOffset
ŸŸ 
=
ŸŸ 
$num
ŸŸ  
;
ŸŸ  !#
m_baselineOffsetStack
⁄⁄ !
.
⁄⁄! "
Clear
⁄⁄" '
(
⁄⁄' (
)
⁄⁄( )
;
⁄⁄) *
bool
›› 
beginUnderline
›› 
=
››  !
false
››" '
;
››' (
Vector3
ﬁﬁ 
underline_start
ﬁﬁ #
=
ﬁﬁ$ %
Vector3
ﬁﬁ& -
.
ﬁﬁ- .
zero
ﬁﬁ. 2
;
ﬁﬁ2 3
Vector3
ﬂﬂ 
underline_end
ﬂﬂ !
=
ﬂﬂ" #
Vector3
ﬂﬂ$ +
.
ﬂﬂ+ ,
zero
ﬂﬂ, 0
;
ﬂﬂ0 1
bool
‚‚  
beginStrikethrough
‚‚ #
=
‚‚$ %
false
‚‚& +
;
‚‚+ ,
Vector3
„„ !
strikethrough_start
„„ '
=
„„( )
Vector3
„„* 1
.
„„1 2
zero
„„2 6
;
„„6 7
Vector3
‰‰ 
strikethrough_end
‰‰ %
=
‰‰& '
Vector3
‰‰( /
.
‰‰/ 0
zero
‰‰0 4
;
‰‰4 5
bool
ÁÁ 
beginHighlight
ÁÁ 
=
ÁÁ  !
false
ÁÁ" '
;
ÁÁ' (
Vector3
ËË 
highlight_start
ËË #
=
ËË$ %
Vector3
ËË& -
.
ËË- .
zero
ËË. 2
;
ËË2 3
Vector3
ÈÈ 
highlight_end
ÈÈ !
=
ÈÈ" #
Vector3
ÈÈ$ +
.
ÈÈ+ ,
zero
ÈÈ, 0
;
ÈÈ0 1
m_fontColor32
ÎÎ 
=
ÎÎ 
m_fontColor
ÎÎ '
;
ÎÎ' (
Color32
ÏÏ 
vertexColor
ÏÏ 
;
ÏÏ  
m_htmlColor
ÌÌ 
=
ÌÌ 
m_fontColor32
ÌÌ '
;
ÌÌ' (
m_underlineColor
ÓÓ 
=
ÓÓ 
m_htmlColor
ÓÓ *
;
ÓÓ* +"
m_strikethroughColor
ÔÔ  
=
ÔÔ! "
m_htmlColor
ÔÔ# .
;
ÔÔ. /
m_colorStack
ÒÒ 
.
ÒÒ 

SetDefault
ÒÒ #
(
ÒÒ# $
m_htmlColor
ÒÒ$ /
)
ÒÒ/ 0
;
ÒÒ0 1#
m_underlineColorStack
ÚÚ !
.
ÚÚ! "

SetDefault
ÚÚ" ,
(
ÚÚ, -
m_htmlColor
ÚÚ- 8
)
ÚÚ8 9
;
ÚÚ9 :'
m_strikethroughColorStack
ÛÛ %
.
ÛÛ% &

SetDefault
ÛÛ& 0
(
ÛÛ0 1
m_htmlColor
ÛÛ1 <
)
ÛÛ< =
;
ÛÛ= >#
m_HighlightStateStack
ÙÙ !
.
ÙÙ! "

SetDefault
ÙÙ" ,
(
ÙÙ, -
new
ÙÙ- 0
HighlightState
ÙÙ1 ?
(
ÙÙ? @
m_htmlColor
ÙÙ@ K
,
ÙÙK L

TMP_Offset
ÙÙM W
.
ÙÙW X
zero
ÙÙX \
)
ÙÙ\ ]
)
ÙÙ] ^
;
ÙÙ^ _#
m_colorGradientPreset
ˆˆ !
=
ˆˆ" #
null
ˆˆ$ (
;
ˆˆ( )"
m_colorGradientStack
˜˜  
.
˜˜  !

SetDefault
˜˜! +
(
˜˜+ ,
null
˜˜, 0
)
˜˜0 1
;
˜˜1 2
m_ItalicAngle
˘˘ 
=
˘˘  
m_currentFontAsset
˘˘ .
.
˘˘. /
italicStyle
˘˘/ :
;
˘˘: ; 
m_ItalicAngleStack
˙˙ 
.
˙˙ 

SetDefault
˙˙ )
(
˙˙) *
m_ItalicAngle
˙˙* 7
)
˙˙7 8
;
˙˙8 9
m_actionStack
ÄÄ 
.
ÄÄ 
Clear
ÄÄ 
(
ÄÄ  
)
ÄÄ  !
;
ÄÄ! "
m_isFXMatrixSet
ÇÇ 
=
ÇÇ 
false
ÇÇ #
;
ÇÇ# $
m_lineOffset
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
m_lineHeight
ÖÖ 
=
ÖÖ 
TMP_Math
ÖÖ #
.
ÖÖ# $
FLOAT_UNSET
ÖÖ$ /
;
ÖÖ/ 0
float
ÜÜ 
lineGap
ÜÜ 
=
ÜÜ  
m_currentFontAsset
ÜÜ .
.
ÜÜ. /

m_FaceInfo
ÜÜ/ 9
.
ÜÜ9 :

lineHeight
ÜÜ: D
-
ÜÜE F
(
ÜÜG H 
m_currentFontAsset
ÜÜH Z
.
ÜÜZ [

m_FaceInfo
ÜÜ[ e
.
ÜÜe f

ascentLine
ÜÜf p
-
ÜÜq r!
m_currentFontAssetÜÜs Ö
.ÜÜÖ Ü

m_FaceInfoÜÜÜ ê
.ÜÜê ë
descentLineÜÜë ú
)ÜÜú ù
;ÜÜù û

m_cSpacing
àà 
=
àà 
$num
àà 
;
àà 
m_monoSpacing
ââ 
=
ââ 
$num
ââ 
;
ââ 

m_xAdvance
ää 
=
ää 
$num
ää 
;
ää 
tag_LineIndent
åå 
=
åå 
$num
åå 
;
åå 

tag_Indent
çç 
=
çç 
$num
çç 
;
çç 
m_indentStack
éé 
.
éé 

SetDefault
éé $
(
éé$ %
$num
éé% &
)
éé& '
;
éé' (
tag_NoParsing
èè 
=
èè 
false
èè !
;
èè! "
m_characterCount
íí 
=
íí 
$num
íí  
;
íí  !$
m_firstCharacterOfLine
ïï "
=
ïï# $%
m_firstVisibleCharacter
ïï% <
;
ïï< =#
m_lastCharacterOfLine
ññ !
=
ññ" #
$num
ññ$ %
;
ññ% &+
m_firstVisibleCharacterOfLine
óó )
=
óó* +
$num
óó, -
;
óó- .*
m_lastVisibleCharacterOfLine
òò (
=
òò) *
$num
òò+ ,
;
òò, -
m_maxLineAscender
ôô 
=
ôô "
k_LargeNegativeFloat
ôô  4
;
ôô4 5 
m_maxLineDescender
öö 
=
öö  "
k_LargePositiveFloat
öö! 5
;
öö5 6
m_lineNumber
õõ 
=
õõ 
$num
õõ 
;
õõ #
m_startOfLineAscender
úú !
=
úú" #
$num
úú$ %
;
úú% &$
m_startOfLineDescender
ùù "
=
ùù# $
$num
ùù% &
;
ùù& ')
m_lineVisibleCharacterCount
ûû '
=
ûû( )
$num
ûû* +
;
ûû+ ,
bool
üü 
isStartOfNewLine
üü !
=
üü" #
true
üü$ (
;
üü( )#
m_IsDrivenLineSpacing
†† !
=
††" #
false
††$ )
;
††) *+
m_firstOverflowCharacterIndex
°° )
=
°°* +
-
°°, -
$num
°°- .
;
°°. /
m_pageNumber
££ 
=
££ 
$num
££ 
;
££ 
int
§§ 
pageToDisplay
§§ 
=
§§ 
Mathf
§§  %
.
§§% &
Clamp
§§& +
(
§§+ ,
m_pageToDisplay
§§, ;
-
§§< =
$num
§§> ?
,
§§? @
$num
§§A B
,
§§B C

m_textInfo
§§D N
.
§§N O
pageInfo
§§O W
.
§§W X
Length
§§X ^
-
§§_ `
$num
§§a b
)
§§b c
;
§§c d

m_textInfo
•• 
.
•• 
ClearPageInfo
•• $
(
••$ %
)
••% &
;
••& '
Vector4
ßß 
margins
ßß 
=
ßß 
m_margin
ßß &
;
ßß& '
float
®® 
marginWidth
®® 
=
®® 
m_marginWidth
®®  -
>
®®. /
$num
®®0 1
?
®®2 3
m_marginWidth
®®4 A
:
®®B C
$num
®®D E
;
®®E F
float
©© 
marginHeight
©© 
=
©©  
m_marginHeight
©©! /
>
©©0 1
$num
©©2 3
?
©©4 5
m_marginHeight
©©6 D
:
©©E F
$num
©©G H
;
©©H I
m_marginLeft
™™ 
=
™™ 
$num
™™ 
;
™™ 
m_marginRight
´´ 
=
´´ 
$num
´´ 
;
´´ 
m_width
¨¨ 
=
¨¨ 
-
¨¨ 
$num
¨¨ 
;
¨¨ 
float
≠≠ 
widthOfTextArea
≠≠ !
=
≠≠" #
marginWidth
≠≠$ /
+
≠≠0 1
$num
≠≠2 9
-
≠≠: ;
m_marginLeft
≠≠< H
-
≠≠I J
m_marginRight
≠≠K X
;
≠≠X Y
m_meshExtents
∞∞ 
.
∞∞ 
min
∞∞ 
=
∞∞ $
k_LargePositiveVector2
∞∞  6
;
∞∞6 7
m_meshExtents
±± 
.
±± 
max
±± 
=
±± $
k_LargeNegativeVector2
±±  6
;
±±6 7

m_textInfo
¥¥ 
.
¥¥ 
ClearLineInfo
¥¥ $
(
¥¥$ %
)
¥¥% &
;
¥¥& '
m_maxCapHeight
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
m_maxTextAscender
∏∏ 
=
∏∏ 
$num
∏∏  !
;
∏∏! " 
m_ElementDescender
ππ 
=
ππ  
$num
ππ! "
;
ππ" #
m_PageAscender
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫ 
float
ªª !
maxVisibleDescender
ªª %
=
ªª& '
$num
ªª( )
;
ªª) *
bool
ºº &
isMaxVisibleDescenderSet
ºº )
=
ºº* +
false
ºº, 1
;
ºº1 2
m_isNewPage
ΩΩ 
=
ΩΩ 
false
ΩΩ 
;
ΩΩ  
bool
¿¿ 
isFirstWordOfLine
¿¿ "
=
¿¿# $
true
¿¿% )
;
¿¿) *"
m_isNonBreakingSpace
¡¡  
=
¡¡! "
false
¡¡# (
;
¡¡( )
bool
¬¬ $
ignoreNonBreakingSpace
¬¬ '
=
¬¬( )
false
¬¬* /
;
¬¬/ 0
int
ƒƒ 
lastSoftLineBreak
ƒƒ !
=
ƒƒ" #
$num
ƒƒ$ %
;
ƒƒ% &#
CharacterSubstitution
∆∆ !#
characterToSubstitute
∆∆" 7
=
∆∆8 9
new
∆∆: =#
CharacterSubstitution
∆∆> S
(
∆∆S T
-
∆∆T U
$num
∆∆U V
,
∆∆V W
$num
∆∆X Y
)
∆∆Y Z
;
∆∆Z [
bool
«« !
isSoftHyphenIgnored
«« $
=
««% &
false
««' ,
;
««, -#
SaveWordWrappingState
   !
(
  ! "
ref
  " %"
m_SavedWordWrapState
  & :
,
  : ;
-
  < =
$num
  = >
,
  > ?
-
  @ A
$num
  A B
)
  B C
;
  C D#
SaveWordWrappingState
ÀÀ !
(
ÀÀ! "
ref
ÀÀ" %
m_SavedLineState
ÀÀ& 6
,
ÀÀ6 7
-
ÀÀ8 9
$num
ÀÀ9 :
,
ÀÀ: ;
-
ÀÀ< =
$num
ÀÀ= >
)
ÀÀ> ?
;
ÀÀ? @#
SaveWordWrappingState
ÃÃ !
(
ÃÃ! "
ref
ÃÃ" %"
m_SavedEllipsisState
ÃÃ& :
,
ÃÃ: ;
-
ÃÃ< =
$num
ÃÃ= >
,
ÃÃ> ?
-
ÃÃ@ A
$num
ÃÃA B
)
ÃÃB C
;
ÃÃC D#
SaveWordWrappingState
ÕÕ !
(
ÕÕ! "
ref
ÕÕ" %#
m_SavedLastValidState
ÕÕ& ;
,
ÕÕ; <
-
ÕÕ= >
$num
ÕÕ> ?
,
ÕÕ? @
-
ÕÕA B
$num
ÕÕB C
)
ÕÕC D
;
ÕÕD E#
SaveWordWrappingState
ŒŒ !
(
ŒŒ! "
ref
ŒŒ" %'
m_SavedSoftLineBreakState
ŒŒ& ?
,
ŒŒ? @
-
ŒŒA B
$num
ŒŒB C
,
ŒŒC D
-
ŒŒE F
$num
ŒŒF G
)
ŒŒG H
;
ŒŒH I/
!m_EllipsisInsertionCandidateStack
–– -
.
––- .
Clear
––. 3
(
––3 4
)
––4 5
;
––5 6
int
”” 
restoreCount
”” 
=
”” 
$num
””  
;
””  !(
k_GenerateTextPhaseIMarker
’’ &
.
’’& '
Begin
’’' ,
(
’’, -
)
’’- .
;
’’. /
for
ÿÿ 
(
ÿÿ 
int
ÿÿ 
i
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
;
ÿÿ 
i
ÿÿ 
<
ÿÿ #
m_TextProcessingArray
ÿÿ  5
.
ÿÿ5 6
Length
ÿÿ6 <
&&
ÿÿ= ?#
m_TextProcessingArray
ÿÿ@ U
[
ÿÿU V
i
ÿÿV W
]
ÿÿW X
.
ÿÿX Y
unicode
ÿÿY `
!=
ÿÿa c
$num
ÿÿd e
;
ÿÿe f
i
ÿÿg h
++
ÿÿh j
)
ÿÿj k
{
ŸŸ 
charCode
⁄⁄ 
=
⁄⁄ #
m_TextProcessingArray
⁄⁄ 0
[
⁄⁄0 1
i
⁄⁄1 2
]
⁄⁄2 3
.
⁄⁄3 4
unicode
⁄⁄4 ;
;
⁄⁄; <
if
‹‹ 
(
‹‹ 
restoreCount
‹‹  
>
‹‹! "
$num
‹‹# $
)
‹‹$ %
{
›› 
Debug
ﬁﬁ 
.
ﬁﬁ 
LogError
ﬁﬁ "
(
ﬁﬁ" #
$str
ﬁﬁ# ]
+
ﬁﬁ^ _
charCode
ﬁﬁ` h
+
ﬁﬁi j
$str
ﬁﬁk v
+
ﬁﬁw x
i
ﬁﬁy z
)
ﬁﬁz {
;
ﬁﬁ{ |#
characterToSubstitute
ﬂﬂ )
.
ﬂﬂ) *
index
ﬂﬂ* /
=
ﬂﬂ0 1
m_characterCount
ﬂﬂ2 B
;
ﬂﬂB C#
characterToSubstitute
‡‡ )
.
‡‡) *
unicode
‡‡* 1
=
‡‡2 3
$num
‡‡4 8
;
‡‡8 9
}
·· 
if
ÂÂ 
(
ÂÂ 
m_isRichText
ÂÂ  
&&
ÂÂ! #
charCode
ÂÂ$ ,
==
ÂÂ- /
$num
ÂÂ0 2
)
ÂÂ2 3
{
ÊÊ %
k_ParseMarkupTextMarker
ÁÁ +
.
ÁÁ+ ,
Begin
ÁÁ, 1
(
ÁÁ1 2
)
ÁÁ2 3
;
ÁÁ3 4
m_isParsingText
ÈÈ #
=
ÈÈ$ %
true
ÈÈ& *
;
ÈÈ* +
m_textElementType
ÍÍ %
=
ÍÍ& '!
TMP_TextElementType
ÍÍ( ;
.
ÍÍ; <
	Character
ÍÍ< E
;
ÍÍE F
int
ÎÎ 
endTagIndex
ÎÎ #
;
ÎÎ# $
if
ÓÓ 
(
ÓÓ 
ValidateHtmlTag
ÓÓ '
(
ÓÓ' (#
m_TextProcessingArray
ÓÓ( =
,
ÓÓ= >
i
ÓÓ? @
+
ÓÓA B
$num
ÓÓC D
,
ÓÓD E
out
ÓÓF I
endTagIndex
ÓÓJ U
)
ÓÓU V
)
ÓÓV W
{
ÔÔ 
i
 
=
 
endTagIndex
 '
;
' (
if
ÛÛ 
(
ÛÛ 
m_textElementType
ÛÛ -
==
ÛÛ. 0!
TMP_TextElementType
ÛÛ1 D
.
ÛÛD E
	Character
ÛÛE N
)
ÛÛN O
{
ÙÙ %
k_ParseMarkupTextMarker
ıı 3
.
ıı3 4
End
ıı4 7
(
ıı7 8
)
ıı8 9
;
ıı9 :
continue
ˆˆ $
;
ˆˆ$ %
}
˜˜ 
}
¯¯ %
k_ParseMarkupTextMarker
˘˘ +
.
˘˘+ ,
End
˘˘, /
(
˘˘/ 0
)
˘˘0 1
;
˘˘1 2
}
˙˙ 
else
˚˚ 
{
¸¸ 
m_textElementType
˝˝ %
=
˝˝& '

m_textInfo
˝˝( 2
.
˝˝2 3
characterInfo
˝˝3 @
[
˝˝@ A
m_characterCount
˝˝A Q
]
˝˝Q R
.
˝˝R S
elementType
˝˝S ^
;
˝˝^ _$
m_currentMaterialIndex
˛˛ *
=
˛˛+ ,

m_textInfo
˛˛- 7
.
˛˛7 8
characterInfo
˛˛8 E
[
˛˛E F
m_characterCount
˛˛F V
]
˛˛V W
.
˛˛W X$
materialReferenceIndex
˛˛X n
;
˛˛n o 
m_currentFontAsset
ˇˇ &
=
ˇˇ' (

m_textInfo
ˇˇ) 3
.
ˇˇ3 4
characterInfo
ˇˇ4 A
[
ˇˇA B
m_characterCount
ˇˇB R
]
ˇˇR S
.
ˇˇS T
	fontAsset
ˇˇT ]
;
ˇˇ] ^
}
ÄÄ 
int
ÉÉ #
previousMaterialIndex
ÉÉ )
=
ÉÉ* +$
m_currentMaterialIndex
ÉÉ, B
;
ÉÉB C
bool
ÑÑ  
isUsingAltTypeface
ÑÑ '
=
ÑÑ( )

m_textInfo
ÑÑ* 4
.
ÑÑ4 5
characterInfo
ÑÑ5 B
[
ÑÑB C
m_characterCount
ÑÑC S
]
ÑÑS T
.
ÑÑT U&
isUsingAlternateTypeface
ÑÑU m
;
ÑÑm n
m_isParsingText
ÜÜ 
=
ÜÜ  !
false
ÜÜ" '
;
ÜÜ' (
bool
ää "
isInjectingCharacter
ää )
=
ää* +
false
ää, 1
;
ää1 2
if
åå 
(
åå #
characterToSubstitute
åå )
.
åå) *
index
åå* /
==
åå0 2
m_characterCount
åå3 C
)
ååC D
{
çç 
charCode
éé 
=
éé 
(
éé  
int
éé  #
)
éé# $#
characterToSubstitute
éé$ 9
.
éé9 :
unicode
éé: A
;
ééA B
m_textElementType
èè %
=
èè& '!
TMP_TextElementType
èè( ;
.
èè; <
	Character
èè< E
;
èèE F"
isInjectingCharacter
êê (
=
êê) *
true
êê+ /
;
êê/ 0
switch
íí 
(
íí 
charCode
íí $
)
íí$ %
{
ìì 
case
îî 
$num
îî !
:
îî! "

m_textInfo
ïï &
.
ïï& '
characterInfo
ïï' 4
[
ïï4 5
m_characterCount
ïï5 E
]
ïïE F
.
ïïF G
textElement
ïïG R
=
ïïS T 
m_currentFontAsset
ïïU g
.
ïïg h"
characterLookupTable
ïïh |
[
ïï| }
$numïï} Å
]ïïÅ Ç
;ïïÇ É
m_isTextTruncated
ññ -
=
ññ. /
true
ññ0 4
;
ññ4 5
break
óó !
;
óó! "
case
òò 
$num
òò !
:
òò! "
break
öö !
;
öö! "
case
õõ 
$num
õõ #
:
õõ# $

m_textInfo
úú &
.
úú& '
characterInfo
úú' 4
[
úú4 5
m_characterCount
úú5 E
]
úúE F
.
úúF G
textElement
úúG R
=
úúS T

m_Ellipsis
úúU _
.
úú_ `
	character
úú` i
;
úúi j

m_textInfo
ùù &
.
ùù& '
characterInfo
ùù' 4
[
ùù4 5
m_characterCount
ùù5 E
]
ùùE F
.
ùùF G
elementType
ùùG R
=
ùùS T!
TMP_TextElementType
ùùU h
.
ùùh i
	Character
ùùi r
;
ùùr s

m_textInfo
ûû &
.
ûû& '
characterInfo
ûû' 4
[
ûû4 5
m_characterCount
ûû5 E
]
ûûE F
.
ûûF G
	fontAsset
ûûG P
=
ûûQ R

m_Ellipsis
ûûS ]
.
ûû] ^
	fontAsset
ûû^ g
;
ûûg h

m_textInfo
üü &
.
üü& '
characterInfo
üü' 4
[
üü4 5
m_characterCount
üü5 E
]
üüE F
.
üüF G
material
üüG O
=
üüP Q

m_Ellipsis
üüR \
.
üü\ ]
material
üü] e
;
üüe f

m_textInfo
†† &
.
††& '
characterInfo
††' 4
[
††4 5
m_characterCount
††5 E
]
††E F
.
††F G$
materialReferenceIndex
††G ]
=
††^ _

m_Ellipsis
††` j
.
††j k
materialIndex
††k x
;
††x y
m_isTextTruncated
££ -
=
££. /
true
££0 4
;
££4 5#
characterToSubstitute
¶¶ 1
.
¶¶1 2
index
¶¶2 7
=
¶¶8 9
m_characterCount
¶¶: J
+
¶¶K L
$num
¶¶M N
;
¶¶N O#
characterToSubstitute
ßß 1
.
ßß1 2
unicode
ßß2 9
=
ßß: ;
$num
ßß< @
;
ßß@ A
break
®® !
;
®®! "
}
©© 
}
™™ 
if
∞∞ 
(
∞∞ 
m_characterCount
∞∞ $
<
∞∞% &%
m_firstVisibleCharacter
∞∞' >
&&
∞∞? A
charCode
∞∞B J
!=
∞∞K M
$num
∞∞N R
)
∞∞R S
{
±± 

m_textInfo
≤≤ 
.
≤≤ 
characterInfo
≤≤ ,
[
≤≤, -
m_characterCount
≤≤- =
]
≤≤= >
.
≤≤> ?
	isVisible
≤≤? H
=
≤≤I J
false
≤≤K P
;
≤≤P Q

m_textInfo
≥≥ 
.
≥≥ 
characterInfo
≥≥ ,
[
≥≥, -
m_characterCount
≥≥- =
]
≥≥= >
.
≥≥> ?
	character
≥≥? H
=
≥≥I J
(
≥≥K L
char
≥≥L P
)
≥≥P Q
$num
≥≥Q W
;
≥≥W X

m_textInfo
¥¥ 
.
¥¥ 
characterInfo
¥¥ ,
[
¥¥, -
m_characterCount
¥¥- =
]
¥¥= >
.
¥¥> ?

lineNumber
¥¥? I
=
¥¥J K
$num
¥¥L M
;
¥¥M N
m_characterCount
µµ $
+=
µµ% '
$num
µµ( )
;
µµ) *
continue
∂∂ 
;
∂∂ 
}
∑∑ 
float
ææ !
smallCapsMultiplier
ææ )
=
ææ* +
$num
ææ, 0
;
ææ0 1
if
¿¿ 
(
¿¿ 
m_textElementType
¿¿ %
==
¿¿& (!
TMP_TextElementType
¿¿) <
.
¿¿< =
	Character
¿¿= F
)
¿¿F G
{
¡¡ 
if
¬¬ 
(
¬¬ 
(
¬¬ !
m_FontStyleInternal
¬¬ ,
&
¬¬- .

FontStyles
¬¬/ 9
.
¬¬9 :
	UpperCase
¬¬: C
)
¬¬C D
==
¬¬E G

FontStyles
¬¬H R
.
¬¬R S
	UpperCase
¬¬S \
)
¬¬\ ]
{
√√ 
if
≈≈ 
(
≈≈ 
char
≈≈  
.
≈≈  !
IsLower
≈≈! (
(
≈≈( )
(
≈≈) *
char
≈≈* .
)
≈≈. /
charCode
≈≈/ 7
)
≈≈7 8
)
≈≈8 9
charCode
∆∆ $
=
∆∆% &
char
∆∆' +
.
∆∆+ ,
ToUpper
∆∆, 3
(
∆∆3 4
(
∆∆4 5
char
∆∆5 9
)
∆∆9 :
charCode
∆∆: B
)
∆∆B C
;
∆∆C D
}
»» 
else
…… 
if
…… 
(
…… 
(
…… !
m_FontStyleInternal
…… 1
&
……2 3

FontStyles
……4 >
.
……> ?
	LowerCase
……? H
)
……H I
==
……J L

FontStyles
……M W
.
……W X
	LowerCase
……X a
)
……a b
{
   
if
ÃÃ 
(
ÃÃ 
char
ÃÃ  
.
ÃÃ  !
IsUpper
ÃÃ! (
(
ÃÃ( )
(
ÃÃ) *
char
ÃÃ* .
)
ÃÃ. /
charCode
ÃÃ/ 7
)
ÃÃ7 8
)
ÃÃ8 9
charCode
ÕÕ $
=
ÕÕ% &
char
ÕÕ' +
.
ÕÕ+ ,
ToLower
ÕÕ, 3
(
ÕÕ3 4
(
ÕÕ4 5
char
ÕÕ5 9
)
ÕÕ9 :
charCode
ÕÕ: B
)
ÕÕB C
;
ÕÕC D
}
ŒŒ 
else
œœ 
if
œœ 
(
œœ 
(
œœ !
m_FontStyleInternal
œœ 1
&
œœ2 3

FontStyles
œœ4 >
.
œœ> ?
	SmallCaps
œœ? H
)
œœH I
==
œœJ L

FontStyles
œœM W
.
œœW X
	SmallCaps
œœX a
)
œœa b
{
–– 
if
—— 
(
—— 
char
——  
.
——  !
IsLower
——! (
(
——( )
(
——) *
char
——* .
)
——. /
charCode
——/ 7
)
——7 8
)
——8 9
{
““ !
smallCapsMultiplier
”” /
=
””0 1
$num
””2 6
;
””6 7
charCode
‘‘ $
=
‘‘% &
char
‘‘' +
.
‘‘+ ,
ToUpper
‘‘, 3
(
‘‘3 4
(
‘‘4 5
char
‘‘5 9
)
‘‘9 :
charCode
‘‘: B
)
‘‘B C
;
‘‘C D
}
’’ 
}
÷÷ 
}
◊◊ %
k_CharacterLookupMarker
›› '
.
››' (
Begin
››( -
(
››- .
)
››. /
;
››/ 0
float
ﬂﬂ 
baselineOffset
ﬂﬂ $
=
ﬂﬂ% &
$num
ﬂﬂ' (
;
ﬂﬂ( )
float
‡‡ 
elementAscentLine
‡‡ '
=
‡‡( )
$num
‡‡* +
;
‡‡+ ,
float
··  
elementDescentLine
·· (
=
··) *
$num
··+ ,
;
··, -
if
‚‚ 
(
‚‚ 
m_textElementType
‚‚ %
==
‚‚& (!
TMP_TextElementType
‚‚) <
.
‚‚< =
Sprite
‚‚= C
)
‚‚C D
{
„„ "
m_currentSpriteAsset
ÂÂ (
=
ÂÂ) *

m_textInfo
ÂÂ+ 5
.
ÂÂ5 6
characterInfo
ÂÂ6 C
[
ÂÂC D
m_characterCount
ÂÂD T
]
ÂÂT U
.
ÂÂU V
spriteAsset
ÂÂV a
;
ÂÂa b
m_spriteIndex
ÊÊ !
=
ÊÊ" #

m_textInfo
ÊÊ$ .
.
ÊÊ. /
characterInfo
ÊÊ/ <
[
ÊÊ< =
m_characterCount
ÊÊ= M
]
ÊÊM N
.
ÊÊN O
spriteIndex
ÊÊO Z
;
ÊÊZ [!
TMP_SpriteCharacter
ËË '
sprite
ËË( .
=
ËË/ 0"
m_currentSpriteAsset
ËË1 E
.
ËËE F"
spriteCharacterTable
ËËF Z
[
ËËZ [
m_spriteIndex
ËË[ h
]
ËËh i
;
ËËi j
if
ÈÈ 
(
ÈÈ 
sprite
ÈÈ 
==
ÈÈ !
null
ÈÈ" &
)
ÈÈ& '
{
ÍÍ %
k_CharacterLookupMarker
ÎÎ /
.
ÎÎ/ 0
End
ÎÎ0 3
(
ÎÎ3 4
)
ÎÎ4 5
;
ÎÎ5 6
continue
ÏÏ  
;
ÏÏ  !
}
ÌÌ 
if
 
(
 
charCode
  
==
! #
$num
$ &
)
& '
charCode
ÒÒ  
=
ÒÒ! "
$num
ÒÒ# (
+
ÒÒ) *
m_spriteIndex
ÒÒ+ 8
;
ÒÒ8 9
else
ÚÚ 
m_spriteColor
ÛÛ %
=
ÛÛ& '
s_colorWhite
ÛÛ( 4
;
ÛÛ4 5
float
ıı 
	fontScale
ıı #
=
ıı$ %
(
ıı& '
m_currentFontSize
ıı' 8
/
ıı9 : 
m_currentFontAsset
ıı; M
.
ııM N
faceInfo
ııN V
.
ııV W
	pointSize
ııW `
*
ııa b 
m_currentFontAsset
ııc u
.
ııu v
faceInfo
ııv ~
.
ıı~ 
scaleıı Ñ
*ııÖ Ü
(ııá à 
m_isOrthographicııà ò
?ııô ö
$numııõ ú
:ııù û
$numııü £
)ıı£ §
)ıı§ •
;ıı• ¶
if
¯¯ 
(
¯¯ "
m_currentSpriteAsset
¯¯ ,
.
¯¯, -

m_FaceInfo
¯¯- 7
.
¯¯7 8
	pointSize
¯¯8 A
>
¯¯B C
$num
¯¯D E
)
¯¯E F
{
˘˘ 
float
˙˙ 
spriteScale
˙˙ )
=
˙˙* +
m_currentFontSize
˙˙, =
/
˙˙> ?"
m_currentSpriteAsset
˙˙@ T
.
˙˙T U

m_FaceInfo
˙˙U _
.
˙˙_ `
	pointSize
˙˙` i
*
˙˙j k#
m_currentSpriteAsset˙˙l Ä
.˙˙Ä Å

m_FaceInfo˙˙Å ã
.˙˙ã å
scale˙˙å ë
*˙˙í ì
(˙˙î ï 
m_isOrthographic˙˙ï •
?˙˙¶ ß
$num˙˙® ©
:˙˙™ ´
$num˙˙¨ ∞
)˙˙∞ ±
;˙˙± ≤!
currentElementScale
˚˚ +
=
˚˚, -
sprite
˚˚. 4
.
˚˚4 5
m_Scale
˚˚5 <
*
˚˚= >
sprite
˚˚? E
.
˚˚E F
m_Glyph
˚˚F M
.
˚˚M N
scale
˚˚N S
*
˚˚T U
spriteScale
˚˚V a
;
˚˚a b
elementAscentLine
¸¸ )
=
¸¸* +"
m_currentSpriteAsset
¸¸, @
.
¸¸@ A

m_FaceInfo
¸¸A K
.
¸¸K L

ascentLine
¸¸L V
;
¸¸V W
baselineOffset
˝˝ &
=
˝˝' ("
m_currentSpriteAsset
˝˝) =
.
˝˝= >

m_FaceInfo
˝˝> H
.
˝˝H I
baseline
˝˝I Q
*
˝˝R S
	fontScale
˝˝T ]
*
˝˝^ _#
m_fontScaleMultiplier
˝˝` u
*
˝˝v w#
m_currentSpriteAsset˝˝x å
.˝˝å ç

m_FaceInfo˝˝ç ó
.˝˝ó ò
scale˝˝ò ù
;˝˝ù û 
elementDescentLine
˛˛ *
=
˛˛+ ,"
m_currentSpriteAsset
˛˛- A
.
˛˛A B

m_FaceInfo
˛˛B L
.
˛˛L M
descentLine
˛˛M X
;
˛˛X Y
}
ˇˇ 
else
ÄÄ 
{
ÅÅ 
float
ÇÇ 
spriteScale
ÇÇ )
=
ÇÇ* +
m_currentFontSize
ÇÇ, =
/
ÇÇ> ? 
m_currentFontAsset
ÇÇ@ R
.
ÇÇR S

m_FaceInfo
ÇÇS ]
.
ÇÇ] ^
	pointSize
ÇÇ^ g
*
ÇÇh i 
m_currentFontAsset
ÇÇj |
.
ÇÇ| }

m_FaceInfoÇÇ} á
.ÇÇá à
scaleÇÇà ç
*ÇÇé è
(ÇÇê ë 
m_isOrthographicÇÇë °
?ÇÇ¢ £
$numÇÇ§ •
:ÇÇ¶ ß
$numÇÇ® ¨
)ÇÇ¨ ≠
;ÇÇ≠ Æ!
currentElementScale
ÉÉ +
=
ÉÉ, - 
m_currentFontAsset
ÉÉ. @
.
ÉÉ@ A

m_FaceInfo
ÉÉA K
.
ÉÉK L

ascentLine
ÉÉL V
/
ÉÉW X
sprite
ÉÉY _
.
ÉÉ_ `
m_Glyph
ÉÉ` g
.
ÉÉg h
metrics
ÉÉh o
.
ÉÉo p
height
ÉÉp v
*
ÉÉw x
sprite
ÉÉy 
.ÉÉ Ä
m_ScaleÉÉÄ á
*ÉÉà â
spriteÉÉä ê
.ÉÉê ë
m_GlyphÉÉë ò
.ÉÉò ô
scaleÉÉô û
*ÉÉü †
spriteScaleÉÉ° ¨
;ÉÉ¨ ≠
float
ÑÑ 

scaleDelta
ÑÑ (
=
ÑÑ) *
spriteScale
ÑÑ+ 6
/
ÑÑ7 8!
currentElementScale
ÑÑ9 L
;
ÑÑL M
elementAscentLine
ÖÖ )
=
ÖÖ* + 
m_currentFontAsset
ÖÖ, >
.
ÖÖ> ?

m_FaceInfo
ÖÖ? I
.
ÖÖI J

ascentLine
ÖÖJ T
*
ÖÖU V

scaleDelta
ÖÖW a
;
ÖÖa b
baselineOffset
ÜÜ &
=
ÜÜ' ( 
m_currentFontAsset
ÜÜ) ;
.
ÜÜ; <

m_FaceInfo
ÜÜ< F
.
ÜÜF G
baseline
ÜÜG O
*
ÜÜP Q
	fontScale
ÜÜR [
*
ÜÜ\ ]#
m_fontScaleMultiplier
ÜÜ^ s
*
ÜÜt u!
m_currentFontAssetÜÜv à
.ÜÜà â

m_FaceInfoÜÜâ ì
.ÜÜì î
scaleÜÜî ô
;ÜÜô ö 
elementDescentLine
áá *
=
áá+ , 
m_currentFontAsset
áá- ?
.
áá? @

m_FaceInfo
áá@ J
.
ááJ K
descentLine
ááK V
*
ááW X

scaleDelta
ááY c
;
áác d
}
àà "
m_cached_TextElement
ää (
=
ää) *
sprite
ää+ 1
;
ää1 2

m_textInfo
åå 
.
åå 
characterInfo
åå ,
[
åå, -
m_characterCount
åå- =
]
åå= >
.
åå> ?
elementType
åå? J
=
ååK L!
TMP_TextElementType
ååM `
.
åå` a
Sprite
ååa g
;
ååg h

m_textInfo
çç 
.
çç 
characterInfo
çç ,
[
çç, -
m_characterCount
çç- =
]
çç= >
.
çç> ?
scale
çç? D
=
ççE F!
currentElementScale
ççG Z
;
ççZ [

m_textInfo
éé 
.
éé 
characterInfo
éé ,
[
éé, -
m_characterCount
éé- =
]
éé= >
.
éé> ?
spriteAsset
éé? J
=
ééK L"
m_currentSpriteAsset
ééM a
;
ééa b

m_textInfo
èè 
.
èè 
characterInfo
èè ,
[
èè, -
m_characterCount
èè- =
]
èè= >
.
èè> ?
	fontAsset
èè? H
=
èèI J 
m_currentFontAsset
èèK ]
;
èè] ^

m_textInfo
êê 
.
êê 
characterInfo
êê ,
[
êê, -
m_characterCount
êê- =
]
êê= >
.
êê> ?$
materialReferenceIndex
êê? U
=
êêV W$
m_currentMaterialIndex
êêX n
;
êên o$
m_currentMaterialIndex
íí *
=
íí+ ,#
previousMaterialIndex
íí- B
;
ííB C
padding
îî 
=
îî 
$num
îî 
;
îî  
}
ïï 
else
ññ 
if
ññ 
(
ññ 
m_textElementType
ññ *
==
ññ+ -!
TMP_TextElementType
ññ. A
.
ññA B
	Character
ññB K
)
ññK L
{
óó "
m_cached_TextElement
òò (
=
òò) *

m_textInfo
òò+ 5
.
òò5 6
characterInfo
òò6 C
[
òòC D
m_characterCount
òòD T
]
òòT U
.
òòU V
textElement
òòV a
;
òòa b
if
ôô 
(
ôô "
m_cached_TextElement
ôô ,
==
ôô- /
null
ôô0 4
)
ôô4 5
{
öö %
k_CharacterLookupMarker
õõ /
.
õõ/ 0
End
õõ0 3
(
õõ3 4
)
õõ4 5
;
õõ5 6
continue
úú  
;
úú  !
}
ùù  
m_currentFontAsset
üü &
=
üü' (

m_textInfo
üü) 3
.
üü3 4
characterInfo
üü4 A
[
üüA B
m_characterCount
üüB R
]
üüR S
.
üüS T
	fontAsset
üüT ]
;
üü] ^
m_currentMaterial
†† %
=
††& '

m_textInfo
††( 2
.
††2 3
characterInfo
††3 @
[
††@ A
m_characterCount
††A Q
]
††Q R
.
††R S
material
††S [
;
††[ \$
m_currentMaterialIndex
°° *
=
°°+ ,

m_textInfo
°°- 7
.
°°7 8
characterInfo
°°8 E
[
°°E F
m_characterCount
°°F V
]
°°V W
.
°°W X$
materialReferenceIndex
°°X n
;
°°n o
float
§§ 
adjustedScale
§§ '
;
§§' (
if
•• 
(
•• "
isInjectingCharacter
•• ,
&&
••- /#
m_TextProcessingArray
••0 E
[
••E F
i
••F G
]
••G H
.
••H I
unicode
••I P
==
••Q S
$num
••T X
&&
••Y [
m_characterCount
••\ l
!=
••m o%
m_firstCharacterOfLine••p Ü
)••Ü á
adjustedScale
¶¶ %
=
¶¶& '

m_textInfo
¶¶( 2
.
¶¶2 3
characterInfo
¶¶3 @
[
¶¶@ A
m_characterCount
¶¶A Q
-
¶¶R S
$num
¶¶T U
]
¶¶U V
.
¶¶V W
	pointSize
¶¶W `
*
¶¶a b!
smallCapsMultiplier
¶¶c v
/
¶¶w x!
m_currentFontAsset¶¶y ã
.¶¶ã å

m_FaceInfo¶¶å ñ
.¶¶ñ ó
	pointSize¶¶ó †
*¶¶° ¢"
m_currentFontAsset¶¶£ µ
.¶¶µ ∂

m_FaceInfo¶¶∂ ¿
.¶¶¿ ¡
scale¶¶¡ ∆
*¶¶« »
(¶¶…   
m_isOrthographic¶¶  ⁄
?¶¶€ ‹
$num¶¶› ﬁ
:¶¶ﬂ ‡
$num¶¶· Â
)¶¶Â Ê
;¶¶Ê Á
else
ßß 
adjustedScale
®® %
=
®®& '
m_currentFontSize
®®( 9
*
®®: ;!
smallCapsMultiplier
®®< O
/
®®P Q 
m_currentFontAsset
®®R d
.
®®d e

m_FaceInfo
®®e o
.
®®o p
	pointSize
®®p y
*
®®z {!
m_currentFontAsset®®| é
.®®é è

m_FaceInfo®®è ô
.®®ô ö
scale®®ö ü
*®®† °
(®®¢ £ 
m_isOrthographic®®£ ≥
?®®¥ µ
$num®®∂ ∑
:®®∏ π
$num®®∫ æ
)®®æ ø
;®®ø ¿
if
´´ 
(
´´ "
isInjectingCharacter
´´ ,
&&
´´- /
charCode
´´0 8
==
´´9 ;
$num
´´< B
)
´´B C
{
¨¨ 
elementAscentLine
≠≠ )
=
≠≠* +
$num
≠≠, -
;
≠≠- . 
elementDescentLine
ÆÆ *
=
ÆÆ+ ,
$num
ÆÆ- .
;
ÆÆ. /
}
ØØ 
else
∞∞ 
{
±± 
elementAscentLine
≤≤ )
=
≤≤* + 
m_currentFontAsset
≤≤, >
.
≤≤> ?

m_FaceInfo
≤≤? I
.
≤≤I J

ascentLine
≤≤J T
;
≤≤T U 
elementDescentLine
≥≥ *
=
≥≥+ , 
m_currentFontAsset
≥≥- ?
.
≥≥? @

m_FaceInfo
≥≥@ J
.
≥≥J K
descentLine
≥≥K V
;
≥≥V W
}
¥¥ !
currentElementScale
∂∂ '
=
∂∂( )
adjustedScale
∂∂* 7
*
∂∂8 9#
m_fontScaleMultiplier
∂∂: O
*
∂∂P Q"
m_cached_TextElement
∂∂R f
.
∂∂f g
m_Scale
∂∂g n
*
∂∂o p#
m_cached_TextElement∂∂q Ö
.∂∂Ö Ü
m_Glyph∂∂Ü ç
.∂∂ç é
scale∂∂é ì
;∂∂ì î
baselineOffset
∑∑ "
=
∑∑# $ 
m_currentFontAsset
∑∑% 7
.
∑∑7 8

m_FaceInfo
∑∑8 B
.
∑∑B C
baseline
∑∑C K
*
∑∑L M
adjustedScale
∑∑N [
*
∑∑\ ]#
m_fontScaleMultiplier
∑∑^ s
*
∑∑t u!
m_currentFontAsset∑∑v à
.∑∑à â

m_FaceInfo∑∑â ì
.∑∑ì î
scale∑∑î ô
;∑∑ô ö

m_textInfo
ππ 
.
ππ 
characterInfo
ππ ,
[
ππ, -
m_characterCount
ππ- =
]
ππ= >
.
ππ> ?
elementType
ππ? J
=
ππK L!
TMP_TextElementType
ππM `
.
ππ` a
	Character
ππa j
;
ππj k

m_textInfo
∫∫ 
.
∫∫ 
characterInfo
∫∫ ,
[
∫∫, -
m_characterCount
∫∫- =
]
∫∫= >
.
∫∫> ?
scale
∫∫? D
=
∫∫E F!
currentElementScale
∫∫G Z
;
∫∫Z [
padding
ºº 
=
ºº $
m_currentMaterialIndex
ºº 4
==
ºº5 7
$num
ºº8 9
?
ºº: ;
	m_padding
ºº< E
:
ººF G
m_subTextObjects
ººH X
[
ººX Y$
m_currentMaterialIndex
ººY o
]
ººo p
.
ººp q
padding
ººq x
;
ººx y
}
ΩΩ %
k_CharacterLookupMarker
ææ '
.
ææ' (
End
ææ( +
(
ææ+ ,
)
ææ, -
;
ææ- .
float
ƒƒ +
currentElementUnmodifiedScale
ƒƒ 3
=
ƒƒ4 5!
currentElementScale
ƒƒ6 I
;
ƒƒI J
if
≈≈ 
(
≈≈ 
charCode
≈≈ 
==
≈≈ 
$num
≈≈  $
||
≈≈% '
charCode
≈≈( 0
==
≈≈1 3
$num
≈≈4 8
)
≈≈8 9!
currentElementScale
∆∆ '
=
∆∆( )
$num
∆∆* +
;
∆∆+ ,

m_textInfo
ÀÀ 
.
ÀÀ 
characterInfo
ÀÀ (
[
ÀÀ( )
m_characterCount
ÀÀ) 9
]
ÀÀ9 :
.
ÀÀ: ;
	character
ÀÀ; D
=
ÀÀE F
(
ÀÀG H
char
ÀÀH L
)
ÀÀL M
charCode
ÀÀM U
;
ÀÀU V

m_textInfo
ÃÃ 
.
ÃÃ 
characterInfo
ÃÃ (
[
ÃÃ( )
m_characterCount
ÃÃ) 9
]
ÃÃ9 :
.
ÃÃ: ;
	pointSize
ÃÃ; D
=
ÃÃE F
m_currentFontSize
ÃÃG X
;
ÃÃX Y

m_textInfo
ÕÕ 
.
ÕÕ 
characterInfo
ÕÕ (
[
ÕÕ( )
m_characterCount
ÕÕ) 9
]
ÕÕ9 :
.
ÕÕ: ;
color
ÕÕ; @
=
ÕÕA B
m_htmlColor
ÕÕC N
;
ÕÕN O

m_textInfo
ŒŒ 
.
ŒŒ 
characterInfo
ŒŒ (
[
ŒŒ( )
m_characterCount
ŒŒ) 9
]
ŒŒ9 :
.
ŒŒ: ;
underlineColor
ŒŒ; I
=
ŒŒJ K
m_underlineColor
ŒŒL \
;
ŒŒ\ ]

m_textInfo
œœ 
.
œœ 
characterInfo
œœ (
[
œœ( )
m_characterCount
œœ) 9
]
œœ9 :
.
œœ: ; 
strikethroughColor
œœ; M
=
œœN O"
m_strikethroughColor
œœP d
;
œœd e

m_textInfo
–– 
.
–– 
characterInfo
–– (
[
––( )
m_characterCount
––) 9
]
––9 :
.
––: ;
highlightState
––; I
=
––J K#
m_HighlightStateStack
––L a
.
––a b
current
––b i
;
––i j

m_textInfo
—— 
.
—— 
characterInfo
—— (
[
——( )
m_characterCount
——) 9
]
——9 :
.
——: ;
style
——; @
=
——A B!
m_FontStyleInternal
——C V
;
——V W
GlyphMetrics
‘‘ !
currentGlyphMetrics
‘‘ 0
=
‘‘1 2"
m_cached_TextElement
‘‘3 G
.
‘‘G H
m_Glyph
‘‘H O
.
‘‘O P
metrics
‘‘P W
;
‘‘W X
bool
◊◊ 
isWhiteSpace
◊◊ !
=
◊◊" #
charCode
◊◊$ ,
<=
◊◊- /
$num
◊◊0 6
&&
◊◊7 9
char
◊◊: >
.
◊◊> ?
IsWhiteSpace
◊◊? K
(
◊◊K L
(
◊◊L M
char
◊◊M Q
)
◊◊Q R
charCode
◊◊R Z
)
◊◊Z [
;
◊◊[ \"
TMP_GlyphValueRecord
€€ $
glyphAdjustments
€€% 5
=
€€6 7
new
€€8 ;"
TMP_GlyphValueRecord
€€< P
(
€€P Q
)
€€Q R
;
€€R S
float
‹‹ (
characterSpacingAdjustment
‹‹ 0
=
‹‹1 2 
m_characterSpacing
‹‹3 E
;
‹‹E F0
"m_GlyphHorizontalAdvanceAdjustment
›› 2
=
››3 4
$num
››5 6
;
››6 7
if
ﬁﬁ 
(
ﬁﬁ 
m_enableKerning
ﬁﬁ #
)
ﬁﬁ# $
{
ﬂﬂ (
k_HandleGPOSFeaturesMarker
‡‡ .
.
‡‡. /
Begin
‡‡/ 4
(
‡‡4 5
)
‡‡5 6
;
‡‡6 7+
TMP_GlyphPairAdjustmentRecord
‚‚ 1
adjustmentPair
‚‚2 @
;
‚‚@ A
uint
„„ 
baseGlyphIndex
„„ '
=
„„( )"
m_cached_TextElement
„„* >
.
„„> ?
m_GlyphIndex
„„? K
;
„„K L
if
ÂÂ 
(
ÂÂ 
m_characterCount
ÂÂ (
<
ÂÂ) *!
totalCharacterCount
ÂÂ+ >
-
ÂÂ? @
$num
ÂÂA B
)
ÂÂB C
{
ÊÊ 
uint
ÁÁ 
nextGlyphIndex
ÁÁ +
=
ÁÁ, -

m_textInfo
ÁÁ. 8
.
ÁÁ8 9
characterInfo
ÁÁ9 F
[
ÁÁF G
m_characterCount
ÁÁG W
+
ÁÁX Y
$num
ÁÁZ [
]
ÁÁ[ \
.
ÁÁ\ ]
textElement
ÁÁ] h
.
ÁÁh i
m_GlyphIndex
ÁÁi u
;
ÁÁu v
uint
ËË 
key
ËË  
=
ËË! "
nextGlyphIndex
ËË# 1
<<
ËË2 4
$num
ËË5 7
|
ËË8 9
baseGlyphIndex
ËË: H
;
ËËH I
if
ÍÍ 
(
ÍÍ  
m_currentFontAsset
ÍÍ .
.
ÍÍ. / 
m_FontFeatureTable
ÍÍ/ A
.
ÍÍA B9
+m_GlyphPairAdjustmentRecordLookupDictionary
ÍÍB m
.
ÍÍm n
TryGetValue
ÍÍn y
(
ÍÍy z
key
ÍÍz }
,
ÍÍ} ~
outÍÍ Ç
adjustmentPairÍÍÉ ë
)ÍÍë í
)ÍÍí ì
{
ÎÎ 
glyphAdjustments
ÏÏ ,
=
ÏÏ- .
adjustmentPair
ÏÏ/ =
.
ÏÏ= >%
m_FirstAdjustmentRecord
ÏÏ> U
.
ÏÏU V 
m_GlyphValueRecord
ÏÏV h
;
ÏÏh i(
characterSpacingAdjustment
ÌÌ 6
=
ÌÌ7 8
(
ÌÌ9 :
adjustmentPair
ÌÌ: H
.
ÌÌH I"
m_FeatureLookupFlags
ÌÌI ]
&
ÌÌ^ _$
FontFeatureLookupFlags
ÌÌ` v
.
ÌÌv w'
IgnoreSpacingAdjustmentsÌÌw è
)ÌÌè ê
==ÌÌë ì&
FontFeatureLookupFlagsÌÌî ™
.ÌÌ™ ´(
IgnoreSpacingAdjustmentsÌÌ´ √
?ÌÌƒ ≈
$numÌÌ∆ «
:ÌÌ» …*
characterSpacingAdjustmentÌÌ  ‰
;ÌÌ‰ Â
}
ÓÓ 
}
ÔÔ 
if
ÒÒ 
(
ÒÒ 
m_characterCount
ÒÒ (
>=
ÒÒ) +
$num
ÒÒ, -
)
ÒÒ- .
{
ÚÚ 
uint
ÛÛ  
previousGlyphIndex
ÛÛ /
=
ÛÛ0 1

m_textInfo
ÛÛ2 <
.
ÛÛ< =
characterInfo
ÛÛ= J
[
ÛÛJ K
m_characterCount
ÛÛK [
-
ÛÛ\ ]
$num
ÛÛ^ _
]
ÛÛ_ `
.
ÛÛ` a
textElement
ÛÛa l
.
ÛÛl m
m_GlyphIndex
ÛÛm y
;
ÛÛy z
uint
ÙÙ 
key
ÙÙ  
=
ÙÙ! "
baseGlyphIndex
ÙÙ# 1
<<
ÙÙ2 4
$num
ÙÙ5 7
|
ÙÙ8 9 
previousGlyphIndex
ÙÙ: L
;
ÙÙL M
if
ˆˆ 
(
ˆˆ  
m_currentFontAsset
ˆˆ .
.
ˆˆ. / 
m_FontFeatureTable
ˆˆ/ A
.
ˆˆA B9
+m_GlyphPairAdjustmentRecordLookupDictionary
ˆˆB m
.
ˆˆm n
TryGetValue
ˆˆn y
(
ˆˆy z
key
ˆˆz }
,
ˆˆ} ~
outˆˆ Ç
adjustmentPairˆˆÉ ë
)ˆˆë í
)ˆˆí ì
{
˜˜ 
glyphAdjustments
¯¯ ,
+=
¯¯- /
adjustmentPair
¯¯0 >
.
¯¯> ?&
m_SecondAdjustmentRecord
¯¯? W
.
¯¯W X 
m_GlyphValueRecord
¯¯X j
;
¯¯j k(
characterSpacingAdjustment
˘˘ 6
=
˘˘7 8
(
˘˘9 :
adjustmentPair
˘˘: H
.
˘˘H I"
m_FeatureLookupFlags
˘˘I ]
&
˘˘^ _$
FontFeatureLookupFlags
˘˘` v
.
˘˘v w'
IgnoreSpacingAdjustments˘˘w è
)˘˘è ê
==˘˘ë ì&
FontFeatureLookupFlags˘˘î ™
.˘˘™ ´(
IgnoreSpacingAdjustments˘˘´ √
?˘˘ƒ ≈
$num˘˘∆ «
:˘˘» …*
characterSpacingAdjustment˘˘  ‰
;˘˘‰ Â
}
˙˙ 
}
˚˚ 0
"m_GlyphHorizontalAdvanceAdjustment
˝˝ 6
=
˝˝7 8
glyphAdjustments
˝˝9 I
.
˝˝I J
xAdvance
˝˝J R
;
˝˝R S(
k_HandleGPOSFeaturesMarker
˛˛ .
.
˛˛. /
End
˛˛/ 2
(
˛˛2 3
)
˛˛3 4
;
˛˛4 5
}
ˇˇ 
if
ÖÖ 
(
ÖÖ 
m_isRightToLeft
ÖÖ #
)
ÖÖ# $
{
ÜÜ 

m_xAdvance
áá 
-=
áá !!
currentGlyphMetrics
áá" 5
.
áá5 6
horizontalAdvance
áá6 G
*
ááH I
(
ááJ K
$num
ááK L
-
ááM N!
m_charWidthAdjDelta
ááO b
)
ááb c
*
áád e!
currentElementScale
ááf y
;
ááy z
if
ââ 
(
ââ 
isWhiteSpace
ââ $
||
ââ% '
charCode
ââ( 0
==
ââ1 3
$num
ââ4 :
)
ââ: ;

m_xAdvance
ää "
-=
ää# %
m_wordSpacing
ää& 3
*
ää4 5
currentEmScale
ää6 D
;
ääD E
}
ãã 
float
ëë 
monoAdvance
ëë !
=
ëë" #
$num
ëë$ %
;
ëë% &
if
íí 
(
íí 
m_monoSpacing
íí !
!=
íí" $
$num
íí% &
)
íí& '
{
ìì 
monoAdvance
îî 
=
îî  !
(
îî" #
m_monoSpacing
îî# 0
/
îî1 2
$num
îî3 4
-
îî5 6
(
îî7 8!
currentGlyphMetrics
îî8 K
.
îîK L
width
îîL Q
/
îîR S
$num
îîT U
+
îîV W!
currentGlyphMetrics
îîX k
.
îîk l 
horizontalBearingX
îîl ~
)
îî~ 
*îîÄ Å#
currentElementScaleîîÇ ï
)îîï ñ
*îîó ò
(îîô ö
$numîîö õ
-îîú ù#
m_charWidthAdjDeltaîîû ±
)îî± ≤
;îî≤ ≥

m_xAdvance
ïï 
+=
ïï !
monoAdvance
ïï" -
;
ïï- .
}
ññ 
if
úú 
(
úú 
m_textElementType
úú %
==
úú& (!
TMP_TextElementType
úú) <
.
úú< =
	Character
úú= F
&&
úúG I
!
úúJ K 
isUsingAltTypeface
úúK ]
&&
úú^ `
(
úúa b
(
úúb c!
m_FontStyleInternal
úúc v
&
úúw x

FontStylesúúy É
.úúÉ Ñ
BoldúúÑ à
)úúà â
==úúä å

FontStylesúúç ó
.úúó ò
Boldúúò ú
)úúú ù
)úúù û
{
ùù 
if
ûû 
(
ûû 
m_currentMaterial
ûû )
!=
ûû* ,
null
ûû- 1
&&
ûû2 4
m_currentMaterial
ûû5 F
.
ûûF G
HasProperty
ûûG R
(
ûûR S
ShaderUtilities
ûûS b
.
ûûb c
ID_GradientScale
ûûc s
)
ûûs t
)
ûût u
{
üü 
float
†† 
gradientScale
†† +
=
††, -
m_currentMaterial
††. ?
.
††? @
GetFloat
††@ H
(
††H I
ShaderUtilities
††I X
.
††X Y
ID_GradientScale
††Y i
)
††i j
;
††j k
style_padding
°° %
=
°°& ' 
m_currentFontAsset
°°( :
.
°°: ;
	boldStyle
°°; D
/
°°E F
$num
°°G K
*
°°L M
gradientScale
°°N [
*
°°\ ]
m_currentMaterial
°°^ o
.
°°o p
GetFloat
°°p x
(
°°x y
ShaderUtilities°°y à
.°°à â
ID_ScaleRatio_A°°â ò
)°°ò ô
;°°ô ö
if
§§ 
(
§§ 
style_padding
§§ )
+
§§* +
padding
§§, 3
>
§§4 5
gradientScale
§§6 C
)
§§C D
padding
•• #
=
••$ %
gradientScale
••& 3
-
••4 5
style_padding
••6 C
;
••C D
}
¶¶ 
else
ßß 
style_padding
®® %
=
®®& '
$num
®®( )
;
®®) *#
boldSpacingAdjustment
™™ )
=
™™* + 
m_currentFontAsset
™™, >
.
™™> ?
boldSpacing
™™? J
;
™™J K
}
´´ 
else
¨¨ 
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
m_currentMaterial
ÆÆ )
!=
ÆÆ* ,
null
ÆÆ- 1
&&
ÆÆ2 4
m_currentMaterial
ÆÆ5 F
.
ÆÆF G
HasProperty
ÆÆG R
(
ÆÆR S
ShaderUtilities
ÆÆS b
.
ÆÆb c
ID_GradientScale
ÆÆc s
)
ÆÆs t
&&
ÆÆu w 
m_currentMaterialÆÆx â
.ÆÆâ ä
HasPropertyÆÆä ï
(ÆÆï ñ
ShaderUtilitiesÆÆñ •
.ÆÆ• ¶
ID_ScaleRatio_AÆÆ¶ µ
)ÆÆµ ∂
)ÆÆ∂ ∑
{
ØØ 
float
∞∞ 
gradientScale
∞∞ +
=
∞∞, -
m_currentMaterial
∞∞. ?
.
∞∞? @
GetFloat
∞∞@ H
(
∞∞H I
ShaderUtilities
∞∞I X
.
∞∞X Y
ID_GradientScale
∞∞Y i
)
∞∞i j
;
∞∞j k
style_padding
±± %
=
±±& ' 
m_currentFontAsset
±±( :
.
±±: ;
normalStyle
±±; F
/
±±G H
$num
±±I M
*
±±N O
gradientScale
±±P ]
*
±±^ _
m_currentMaterial
±±` q
.
±±q r
GetFloat
±±r z
(
±±z {
ShaderUtilities±±{ ä
.±±ä ã
ID_ScaleRatio_A±±ã ö
)±±ö õ
;±±õ ú
if
¥¥ 
(
¥¥ 
style_padding
¥¥ )
+
¥¥* +
padding
¥¥, 3
>
¥¥4 5
gradientScale
¥¥6 C
)
¥¥C D
padding
µµ #
=
µµ$ %
gradientScale
µµ& 3
-
µµ4 5
style_padding
µµ6 C
;
µµC D
}
∂∂ 
else
∑∑ 
style_padding
∏∏ %
=
∏∏& '
$num
∏∏( )
;
∏∏) *#
boldSpacingAdjustment
∫∫ )
=
∫∫* +
$num
∫∫, -
;
∫∫- .
}
ªª /
!k_CalculateVerticesPositionMarker
¡¡ 1
.
¡¡1 2
Begin
¡¡2 7
(
¡¡7 8
)
¡¡8 9
;
¡¡9 :
Vector3
¬¬ 
top_left
¬¬  
;
¬¬  !
top_left
√√ 
.
√√ 
x
√√ 
=
√√ 

m_xAdvance
√√ '
+
√√( )
(
√√* +
(
√√+ ,!
currentGlyphMetrics
√√, ?
.
√√? @ 
horizontalBearingX
√√@ R
-
√√S T
padding
√√U \
-
√√] ^
style_padding
√√_ l
+
√√m n
glyphAdjustments
√√o 
.√√ Ä
m_XPlacement√√Ä å
)√√å ç
*√√é è#
currentElementScale√√ê £
*√√§ •
(√√¶ ß
$num√√ß ®
-√√© ™#
m_charWidthAdjDelta√√´ æ
)√√æ ø
)√√ø ¿
;√√¿ ¡
top_left
ƒƒ 
.
ƒƒ 
y
ƒƒ 
=
ƒƒ 
baselineOffset
ƒƒ +
+
ƒƒ, -
(
ƒƒ. /!
currentGlyphMetrics
ƒƒ/ B
.
ƒƒB C 
horizontalBearingY
ƒƒC U
+
ƒƒV W
padding
ƒƒX _
+
ƒƒ` a
glyphAdjustments
ƒƒb r
.
ƒƒr s
m_YPlacement
ƒƒs 
)ƒƒ Ä
*ƒƒÅ Ç#
currentElementScaleƒƒÉ ñ
-ƒƒó ò
m_lineOffsetƒƒô •
+ƒƒ¶ ß 
m_baselineOffsetƒƒ® ∏
;ƒƒ∏ π
top_left
≈≈ 
.
≈≈ 
z
≈≈ 
=
≈≈ 
$num
≈≈ 
;
≈≈ 
Vector3
«« 
bottom_left
«« #
;
««# $
bottom_left
»» 
.
»» 
x
»» 
=
»» 
top_left
»»  (
.
»»( )
x
»») *
;
»»* +
bottom_left
…… 
.
…… 
y
…… 
=
…… 
top_left
……  (
.
……( )
y
……) *
-
……+ ,
(
……- .
(
……. /!
currentGlyphMetrics
……/ B
.
……B C
height
……C I
+
……J K
padding
……L S
*
……T U
$num
……V W
)
……W X
*
……Y Z!
currentElementScale
……[ n
)
……n o
;
……o p
bottom_left
   
.
   
z
   
=
   
$num
    !
;
  ! "
Vector3
ÃÃ 
	top_right
ÃÃ !
;
ÃÃ! "
	top_right
ÕÕ 
.
ÕÕ 
x
ÕÕ 
=
ÕÕ 
bottom_left
ÕÕ )
.
ÕÕ) *
x
ÕÕ* +
+
ÕÕ, -
(
ÕÕ. /
(
ÕÕ/ 0!
currentGlyphMetrics
ÕÕ0 C
.
ÕÕC D
width
ÕÕD I
+
ÕÕJ K
padding
ÕÕL S
*
ÕÕT U
$num
ÕÕV W
+
ÕÕX Y
style_padding
ÕÕZ g
*
ÕÕh i
$num
ÕÕj k
)
ÕÕk l
*
ÕÕm n"
currentElementScaleÕÕo Ç
*ÕÕÉ Ñ
(ÕÕÖ Ü
$numÕÕÜ á
-ÕÕà â#
m_charWidthAdjDeltaÕÕä ù
)ÕÕù û
)ÕÕû ü
;ÕÕü †
	top_right
ŒŒ 
.
ŒŒ 
y
ŒŒ 
=
ŒŒ 
top_left
ŒŒ &
.
ŒŒ& '
y
ŒŒ' (
;
ŒŒ( )
	top_right
œœ 
.
œœ 
z
œœ 
=
œœ 
$num
œœ 
;
œœ  
Vector3
—— 
bottom_right
—— $
;
——$ %
bottom_right
““ 
.
““ 
x
““ 
=
““  
	top_right
““! *
.
““* +
x
““+ ,
;
““, -
bottom_right
”” 
.
”” 
y
”” 
=
””  
bottom_left
””! ,
.
””, -
y
””- .
;
””. /
bottom_right
‘‘ 
.
‘‘ 
z
‘‘ 
=
‘‘  
$num
‘‘! "
;
‘‘" #/
!k_CalculateVerticesPositionMarker
÷÷ 1
.
÷÷1 2
End
÷÷2 5
(
÷÷5 6
)
÷÷6 7
;
÷÷7 8
if
‹‹ 
(
‹‹ 
m_textElementType
‹‹ %
==
‹‹& (!
TMP_TextElementType
‹‹) <
.
‹‹< =
	Character
‹‹= F
&&
‹‹G I
!
‹‹J K 
isUsingAltTypeface
‹‹K ]
&&
‹‹^ `
(
‹‹a b
(
‹‹b c!
m_FontStyleInternal
‹‹c v
&
‹‹w x

FontStyles‹‹y É
.‹‹É Ñ
Italic‹‹Ñ ä
)‹‹ä ã
==‹‹å é

FontStyles‹‹è ô
.‹‹ô ö
Italic‹‹ö †
)‹‹† °
)‹‹° ¢
{
›› 
float
ﬂﬂ 
shear_value
ﬂﬂ %
=
ﬂﬂ& '
m_ItalicAngle
ﬂﬂ( 5
*
ﬂﬂ6 7
$num
ﬂﬂ8 =
;
ﬂﬂ= >
Vector3
‡‡ 
topShear
‡‡ $
=
‡‡% &
new
‡‡' *
Vector3
‡‡+ 2
(
‡‡2 3
shear_value
‡‡3 >
*
‡‡? @
(
‡‡A B
(
‡‡B C!
currentGlyphMetrics
‡‡C V
.
‡‡V W 
horizontalBearingY
‡‡W i
+
‡‡j k
padding
‡‡l s
+
‡‡t u
style_padding‡‡v É
)‡‡É Ñ
*‡‡Ö Ü#
currentElementScale‡‡á ö
)‡‡ö õ
,‡‡õ ú
$num‡‡ù û
,‡‡û ü
$num‡‡† °
)‡‡° ¢
;‡‡¢ £
Vector3
·· 
bottomShear
·· '
=
··( )
new
··* -
Vector3
··. 5
(
··5 6
shear_value
··6 A
*
··B C
(
··D E
(
··E F
(
··F G!
currentGlyphMetrics
··G Z
.
··Z [ 
horizontalBearingY
··[ m
-
··n o"
currentGlyphMetrics··p É
.··É Ñ
height··Ñ ä
-··ã å
padding··ç î
-··ï ñ
style_padding··ó §
)··§ •
)··• ¶
*··ß ®#
currentElementScale··© º
)··º Ω
,··Ω æ
$num··ø ¿
,··¿ ¡
$num··¬ √
)··√ ƒ
;··ƒ ≈
Vector3
„„ 
shearAdjustment
„„ +
=
„„, -
new
„„. 1
Vector3
„„2 9
(
„„9 :
(
„„: ;
topShear
„„; C
.
„„C D
x
„„D E
-
„„F G
bottomShear
„„H S
.
„„S T
x
„„T U
)
„„U V
/
„„W X
$num
„„Y Z
,
„„Z [
$num
„„\ ]
,
„„] ^
$num
„„_ `
)
„„` a
;
„„a b
top_left
ÂÂ 
=
ÂÂ 
top_left
ÂÂ '
+
ÂÂ( )
topShear
ÂÂ* 2
-
ÂÂ3 4
shearAdjustment
ÂÂ5 D
;
ÂÂD E
bottom_left
ÊÊ 
=
ÊÊ  !
bottom_left
ÊÊ" -
+
ÊÊ. /
bottomShear
ÊÊ0 ;
-
ÊÊ< =
shearAdjustment
ÊÊ> M
;
ÊÊM N
	top_right
ÁÁ 
=
ÁÁ 
	top_right
ÁÁ  )
+
ÁÁ* +
topShear
ÁÁ, 4
-
ÁÁ5 6
shearAdjustment
ÁÁ7 F
;
ÁÁF G
bottom_right
ËË  
=
ËË! "
bottom_right
ËË# /
+
ËË0 1
bottomShear
ËË2 =
-
ËË> ?
shearAdjustment
ËË@ O
;
ËËO P
}
ÈÈ 
if
ÔÔ 
(
ÔÔ 
m_isFXMatrixSet
ÔÔ #
)
ÔÔ# $
{
 
if
ÚÚ 
(
ÚÚ 

m_FXMatrix
ÚÚ "
.
ÚÚ" #

lossyScale
ÚÚ# -
.
ÚÚ- .
x
ÚÚ. /
!=
ÚÚ0 2
$num
ÚÚ3 4
)
ÚÚ4 5
{
ÛÛ 
}
¯¯ 
Vector3
˙˙ 
positionOffset
˙˙ *
=
˙˙+ ,
(
˙˙- .
	top_right
˙˙. 7
+
˙˙8 9
bottom_left
˙˙: E
)
˙˙E F
/
˙˙G H
$num
˙˙I J
;
˙˙J K
top_left
¸¸ 
=
¸¸ 

m_FXMatrix
¸¸ )
.
¸¸) *
MultiplyPoint3x4
¸¸* :
(
¸¸: ;
top_left
¸¸; C
-
¸¸D E
positionOffset
¸¸F T
)
¸¸T U
+
¸¸V W
positionOffset
¸¸X f
;
¸¸f g
bottom_left
˝˝ 
=
˝˝  !

m_FXMatrix
˝˝" ,
.
˝˝, -
MultiplyPoint3x4
˝˝- =
(
˝˝= >
bottom_left
˝˝> I
-
˝˝J K
positionOffset
˝˝L Z
)
˝˝Z [
+
˝˝\ ]
positionOffset
˝˝^ l
;
˝˝l m
	top_right
˛˛ 
=
˛˛ 

m_FXMatrix
˛˛  *
.
˛˛* +
MultiplyPoint3x4
˛˛+ ;
(
˛˛; <
	top_right
˛˛< E
-
˛˛F G
positionOffset
˛˛H V
)
˛˛V W
+
˛˛X Y
positionOffset
˛˛Z h
;
˛˛h i
bottom_right
ˇˇ  
=
ˇˇ! "

m_FXMatrix
ˇˇ# -
.
ˇˇ- .
MultiplyPoint3x4
ˇˇ. >
(
ˇˇ> ?
bottom_right
ˇˇ? K
-
ˇˇL M
positionOffset
ˇˇN \
)
ˇˇ\ ]
+
ˇˇ^ _
positionOffset
ˇˇ` n
;
ˇˇn o
}
ÄÄ 

m_textInfo
ÖÖ 
.
ÖÖ 
characterInfo
ÖÖ (
[
ÖÖ( )
m_characterCount
ÖÖ) 9
]
ÖÖ9 :
.
ÖÖ: ;

bottomLeft
ÖÖ; E
=
ÖÖF G
bottom_left
ÖÖH S
;
ÖÖS T

m_textInfo
ÜÜ 
.
ÜÜ 
characterInfo
ÜÜ (
[
ÜÜ( )
m_characterCount
ÜÜ) 9
]
ÜÜ9 :
.
ÜÜ: ;
topLeft
ÜÜ; B
=
ÜÜC D
top_left
ÜÜE M
;
ÜÜM N

m_textInfo
áá 
.
áá 
characterInfo
áá (
[
áá( )
m_characterCount
áá) 9
]
áá9 :
.
áá: ;
topRight
áá; C
=
ááD E
	top_right
ááF O
;
ááO P

m_textInfo
àà 
.
àà 
characterInfo
àà (
[
àà( )
m_characterCount
àà) 9
]
àà9 :
.
àà: ;
bottomRight
àà; F
=
ààG H
bottom_right
ààI U
;
ààU V

m_textInfo
ää 
.
ää 
characterInfo
ää (
[
ää( )
m_characterCount
ää) 9
]
ää9 :
.
ää: ;
origin
ää; A
=
ääB C

m_xAdvance
ääD N
;
ääN O

m_textInfo
ãã 
.
ãã 
characterInfo
ãã (
[
ãã( )
m_characterCount
ãã) 9
]
ãã9 :
.
ãã: ;
baseLine
ãã; C
=
ããD E
baselineOffset
ããF T
-
ããU V
m_lineOffset
ããW c
+
ããd e
m_baselineOffset
ããf v
;
ããv w

m_textInfo
åå 
.
åå 
characterInfo
åå (
[
åå( )
m_characterCount
åå) 9
]
åå9 :
.
åå: ;
aspectRatio
åå; F
=
ååG H
(
ååI J
	top_right
ååJ S
.
ååS T
x
ååT U
-
ååV W
bottom_left
ååX c
.
ååc d
x
ååd e
)
ååe f
/
ååg h
(
ååi j
top_left
ååj r
.
åår s
y
åås t
-
ååu v
bottom_leftååw Ç
.ååÇ É
yååÉ Ñ
)ååÑ Ö
;ååÖ Ü(
k_ComputeTextMetricsMarker
ëë *
.
ëë* +
Begin
ëë+ 0
(
ëë0 1
)
ëë1 2
;
ëë2 3
float
ìì 
elementAscender
ìì %
=
ìì& '
m_textElementType
ìì( 9
==
ìì: <!
TMP_TextElementType
ìì= P
.
ììP Q
	Character
ììQ Z
?
îî 
elementAscentLine
îî '
*
îî( )!
currentElementScale
îî* =
/
îî> ?!
smallCapsMultiplier
îî@ S
+
îîT U
m_baselineOffset
îîV f
:
ïï 
elementAscentLine
ïï '
*
ïï( )!
currentElementScale
ïï* =
+
ïï> ?
m_baselineOffset
ïï@ P
;
ïïP Q
float
òò 
elementDescender
òò &
=
òò' (
m_textElementType
òò) :
==
òò; =!
TMP_TextElementType
òò> Q
.
òòQ R
	Character
òòR [
?
ôô  
elementDescentLine
ôô (
*
ôô) *!
currentElementScale
ôô+ >
/
ôô? @!
smallCapsMultiplier
ôôA T
+
ôôU V
m_baselineOffset
ôôW g
:
öö  
elementDescentLine
öö (
*
öö) *!
currentElementScale
öö+ >
+
öö? @
m_baselineOffset
ööA Q
;
ööQ R
float
úú 
adjustedAscender
úú &
=
úú' (
elementAscender
úú) 8
;
úú8 9
float
ùù 
adjustedDescender
ùù '
=
ùù( )
elementDescender
ùù* :
;
ùù: ;
bool
üü $
isFirstCharacterOfLine
üü +
=
üü, -
m_characterCount
üü. >
==
üü? A$
m_firstCharacterOfLine
üüB X
;
üüX Y
if
°° 
(
°° $
isFirstCharacterOfLine
°° *
||
°°+ -
isWhiteSpace
°°. :
==
°°; =
false
°°> C
)
°°C D
{
¢¢ 
if
§§ 
(
§§ 
m_baselineOffset
§§ (
!=
§§) +
$num
§§, -
)
§§- .
{
•• 
adjustedAscender
¶¶ (
=
¶¶) *
Mathf
¶¶+ 0
.
¶¶0 1
Max
¶¶1 4
(
¶¶4 5
(
¶¶5 6
elementAscender
¶¶6 E
-
¶¶F G
m_baselineOffset
¶¶H X
)
¶¶X Y
/
¶¶Z [#
m_fontScaleMultiplier
¶¶\ q
,
¶¶q r
adjustedAscender¶¶s É
)¶¶É Ñ
;¶¶Ñ Ö
adjustedDescender
ßß )
=
ßß* +
Mathf
ßß, 1
.
ßß1 2
Min
ßß2 5
(
ßß5 6
(
ßß6 7
elementDescender
ßß7 G
-
ßßH I
m_baselineOffset
ßßJ Z
)
ßßZ [
/
ßß\ ]#
m_fontScaleMultiplier
ßß^ s
,
ßßs t 
adjustedDescenderßßu Ü
)ßßÜ á
;ßßá à
}
®® 
m_maxLineAscender
™™ %
=
™™& '
Mathf
™™( -
.
™™- .
Max
™™. 1
(
™™1 2
adjustedAscender
™™2 B
,
™™B C
m_maxLineAscender
™™D U
)
™™U V
;
™™V W 
m_maxLineDescender
´´ &
=
´´' (
Mathf
´´) .
.
´´. /
Min
´´/ 2
(
´´2 3
adjustedDescender
´´3 D
,
´´D E 
m_maxLineDescender
´´F X
)
´´X Y
;
´´Y Z
}
¨¨ 
if
ØØ 
(
ØØ $
isFirstCharacterOfLine
ØØ *
||
ØØ+ -
isWhiteSpace
ØØ. :
==
ØØ; =
false
ØØ> C
)
ØØC D
{
∞∞ 

m_textInfo
±± 
.
±± 
characterInfo
±± ,
[
±±, -
m_characterCount
±±- =
]
±±= >
.
±±> ?
adjustedAscender
±±? O
=
±±P Q
adjustedAscender
±±R b
;
±±b c

m_textInfo
≤≤ 
.
≤≤ 
characterInfo
≤≤ ,
[
≤≤, -
m_characterCount
≤≤- =
]
≤≤= >
.
≤≤> ?
adjustedDescender
≤≤? P
=
≤≤Q R
adjustedDescender
≤≤S d
;
≤≤d e
m_ElementAscender
¥¥ %
=
¥¥& '

m_textInfo
¥¥( 2
.
¥¥2 3
characterInfo
¥¥3 @
[
¥¥@ A
m_characterCount
¥¥A Q
]
¥¥Q R
.
¥¥R S
ascender
¥¥S [
=
¥¥\ ]
elementAscender
¥¥^ m
-
¥¥n o
m_lineOffset
¥¥p |
;
¥¥| } 
m_ElementDescender
µµ &
=
µµ' (

m_textInfo
µµ) 3
.
µµ3 4
characterInfo
µµ4 A
[
µµA B
m_characterCount
µµB R
]
µµR S
.
µµS T
	descender
µµT ]
=
µµ^ _
elementDescender
µµ` p
-
µµq r
m_lineOffset
µµs 
;µµ Ä
}
∂∂ 
else
∑∑ 
{
∏∏ 

m_textInfo
ππ 
.
ππ 
characterInfo
ππ ,
[
ππ, -
m_characterCount
ππ- =
]
ππ= >
.
ππ> ?
adjustedAscender
ππ? O
=
ππP Q
m_maxLineAscender
ππR c
;
ππc d

m_textInfo
∫∫ 
.
∫∫ 
characterInfo
∫∫ ,
[
∫∫, -
m_characterCount
∫∫- =
]
∫∫= >
.
∫∫> ?
adjustedDescender
∫∫? P
=
∫∫Q R 
m_maxLineDescender
∫∫S e
;
∫∫e f
m_ElementAscender
ºº %
=
ºº& '

m_textInfo
ºº( 2
.
ºº2 3
characterInfo
ºº3 @
[
ºº@ A
m_characterCount
ººA Q
]
ººQ R
.
ººR S
ascender
ººS [
=
ºº\ ]
m_maxLineAscender
ºº^ o
-
ººp q
m_lineOffset
ººr ~
;
ºº~  
m_ElementDescender
ΩΩ &
=
ΩΩ' (

m_textInfo
ΩΩ) 3
.
ΩΩ3 4
characterInfo
ΩΩ4 A
[
ΩΩA B
m_characterCount
ΩΩB R
]
ΩΩR S
.
ΩΩS T
	descender
ΩΩT ]
=
ΩΩ^ _ 
m_maxLineDescender
ΩΩ` r
-
ΩΩs t
m_lineOffsetΩΩu Å
;ΩΩÅ Ç
}
ææ 
if
¡¡ 
(
¡¡ 
m_lineNumber
¡¡  
==
¡¡! #
$num
¡¡$ %
||
¡¡& (
m_isNewPage
¡¡) 4
)
¡¡4 5
{
¬¬ 
if
√√ 
(
√√ $
isFirstCharacterOfLine
√√ .
||
√√/ 1
isWhiteSpace
√√2 >
==
√√? A
false
√√B G
)
√√G H
{
ƒƒ 
m_maxTextAscender
≈≈ )
=
≈≈* +
m_maxLineAscender
≈≈, =
;
≈≈= >
m_maxCapHeight
∆∆ &
=
∆∆' (
Mathf
∆∆) .
.
∆∆. /
Max
∆∆/ 2
(
∆∆2 3
m_maxCapHeight
∆∆3 A
,
∆∆A B 
m_currentFontAsset
∆∆C U
.
∆∆U V

m_FaceInfo
∆∆V `
.
∆∆` a
capLine
∆∆a h
*
∆∆i j!
currentElementScale
∆∆k ~
/∆∆ Ä#
smallCapsMultiplier∆∆Å î
)∆∆î ï
;∆∆ï ñ
}
«« 
}
»» 
if
ÀÀ 
(
ÀÀ 
m_lineOffset
ÀÀ  
==
ÀÀ! #
$num
ÀÀ$ %
)
ÀÀ% &
{
ÃÃ 
if
ÕÕ 
(
ÕÕ $
isFirstCharacterOfLine
ÕÕ .
||
ÕÕ/ 1
isWhiteSpace
ÕÕ2 >
==
ÕÕ? A
false
ÕÕB G
)
ÕÕG H
m_PageAscender
ŒŒ &
=
ŒŒ' (
m_PageAscender
ŒŒ) 7
>
ŒŒ8 9
elementAscender
ŒŒ: I
?
ŒŒJ K
m_PageAscender
ŒŒL Z
:
ŒŒ[ \
elementAscender
ŒŒ] l
;
ŒŒl m
}
œœ (
k_ComputeTextMetricsMarker
–– *
.
––* +
End
––+ .
(
––. /
)
––/ 0
;
––0 1

m_textInfo
’’ 
.
’’ 
characterInfo
’’ (
[
’’( )
m_characterCount
’’) 9
]
’’9 :
.
’’: ;
	isVisible
’’; D
=
’’E F
false
’’G L
;
’’L M
bool
◊◊  
isJustifiedOrFlush
◊◊ '
=
◊◊( )
(
◊◊* +!
m_lineJustification
◊◊+ >
&
◊◊? @(
HorizontalAlignmentOptions
◊◊A [
.
◊◊[ \
Flush
◊◊\ a
)
◊◊a b
==
◊◊c e)
HorizontalAlignmentOptions◊◊f Ä
.◊◊Ä Å
Flush◊◊Å Ü
||◊◊á â
(◊◊ä ã#
m_lineJustification◊◊ã û
&◊◊ü †*
HorizontalAlignmentOptions◊◊° ª
.◊◊ª º
	Justified◊◊º ≈
)◊◊≈ ∆
==◊◊« …*
HorizontalAlignmentOptions◊◊  ‰
.◊◊‰ Â
	Justified◊◊Â Ó
;◊◊Ó Ô
if
€€ 
(
€€ 
charCode
€€ 
==
€€ 
$num
€€  !
||
€€" $
(
€€% &
isWhiteSpace
€€& 2
==
€€3 5
false
€€6 ;
&&
€€< >
charCode
€€? G
!=
€€H J
$num
€€K Q
&&
€€R T
charCode
€€U ]
!=
€€^ `
$num
€€a e
&&
€€f h
charCode
€€i q
!=
€€r t
$num
€€u y
)
€€y z
||
€€{ }
(
€€~ 
charCode€€ á
==€€à ä
$num€€ã è
&&€€ê í#
isSoftHyphenIgnored€€ì ¶
==€€ß ©
false€€™ Ø
)€€Ø ∞
||€€± ≥!
m_textElementType€€¥ ≈
==€€∆ »#
TMP_TextElementType€€… ‹
.€€‹ ›
Sprite€€› „
)€€„ ‰
{
‹‹ ,
k_HandleVisibleCharacterMarker
›› 2
.
››2 3
Begin
››3 8
(
››8 9
)
››9 :
;
››: ;

m_textInfo
ﬂﬂ 
.
ﬂﬂ 
characterInfo
ﬂﬂ ,
[
ﬂﬂ, -
m_characterCount
ﬂﬂ- =
]
ﬂﬂ= >
.
ﬂﬂ> ?
	isVisible
ﬂﬂ? H
=
ﬂﬂI J
true
ﬂﬂK O
;
ﬂﬂO P
float
ÑÑ 

marginLeft
ÑÑ $
=
ÑÑ% &
m_marginLeft
ÑÑ' 3
;
ÑÑ3 4
float
ÖÖ 
marginRight
ÖÖ %
=
ÖÖ& '
m_marginRight
ÖÖ( 5
;
ÖÖ5 6
if
àà 
(
àà "
isInjectingCharacter
àà ,
)
àà, -
{
ââ 

marginLeft
ää "
=
ää# $

m_textInfo
ää% /
.
ää/ 0
lineInfo
ää0 8
[
ää8 9
m_lineNumber
ää9 E
]
ääE F
.
ääF G

marginLeft
ääG Q
;
ääQ R
marginRight
ãã #
=
ãã$ %

m_textInfo
ãã& 0
.
ãã0 1
lineInfo
ãã1 9
[
ãã9 :
m_lineNumber
ãã: F
]
ããF G
.
ããG H
marginRight
ããH S
;
ããS T
}
åå 
widthOfTextArea
éé #
=
éé$ %
m_width
éé& -
!=
éé. 0
-
éé1 2
$num
éé2 3
?
éé4 5
Mathf
éé6 ;
.
éé; <
Min
éé< ?
(
éé? @
marginWidth
éé@ K
+
ééL M
$num
ééN U
-
ééV W

marginLeft
ééX b
-
ééc d
marginRight
éée p
,
éép q
m_width
éér y
)
ééy z
:
éé{ |
marginWidthéé} à
+ééâ ä
$numééã í
-ééì î

marginLeftééï ü
-éé† °
marginRightéé¢ ≠
;éé≠ Æ
float
ëë 
	textWidth
ëë #
=
ëë$ %
Mathf
ëë& +
.
ëë+ ,
Abs
ëë, /
(
ëë/ 0

m_xAdvance
ëë0 :
)
ëë: ;
+
ëë< =
(
ëë> ?
!
ëë? @
m_isRightToLeft
ëë@ O
?
ëëP Q!
currentGlyphMetrics
ëëR e
.
ëëe f
horizontalAdvance
ëëf w
:
ëëx y
$num
ëëz {
)
ëë{ |
*
ëë} ~
(ëë Ä
$numëëÄ Å
-ëëÇ É#
m_charWidthAdjDeltaëëÑ ó
)ëëó ò
*ëëô ö
(ëëõ ú
charCodeëëú §
==ëë• ß
$numëë® ¨
?ëë≠ Æ-
currentElementUnmodifiedScaleëëØ Ã
:ëëÕ Œ#
currentElementScaleëëœ ‚
)ëë‚ „
;ëë„ ‰
float
íí 

textHeight
íí $
=
íí% &
m_maxTextAscender
íí' 8
-
íí9 :
(
íí; < 
m_maxLineDescender
íí< N
-
ííO P
m_lineOffset
ííQ ]
)
íí] ^
+
íí_ `
(
íía b
m_lineOffset
ííb n
>
íío p
$num
ííq r
&&
íís u$
m_IsDrivenLineSpacingíív ã
==ííå é
falseííè î
?ííï ñ!
m_maxLineAscenderííó ®
-íí© ™%
m_startOfLineAscenderíí´ ¿
:íí¡ ¬
$numíí√ ƒ
)ííƒ ≈
;íí≈ ∆
int
îî "
testedCharacterCount
îî ,
=
îî- .
m_characterCount
îî/ ?
;
îî? @
if
òò 
(
òò 

textHeight
òò "
>
òò# $
marginHeight
òò% 1
+
òò2 3
$num
òò4 ;
)
òò; <
{
ôô 0
"k_HandleVerticalLineBreakingMarker
öö :
.
öö: ;
Begin
öö; @
(
öö@ A
)
ööA B
;
ööB C
if
ùù 
(
ùù +
m_firstOverflowCharacterIndex
ùù 9
==
ùù: <
-
ùù= >
$num
ùù> ?
)
ùù? @+
m_firstOverflowCharacterIndex
ûû 9
=
ûû: ;
m_characterCount
ûû< L
;
ûûL M
if
°° 
(
°°  
m_enableAutoSizing
°° .
)
°°. /
{
¢¢ 
if
•• 
(
••   
m_lineSpacingDelta
••  2
>
••3 4
m_lineSpacingMax
••5 E
&&
••F H
m_lineOffset
••I U
>
••V W
$num
••X Y
&&
••Z \&
m_AutoSizeIterationCount
••] u
<
••v w*
m_AutoSizeMaxIterationCount••x ì
)••ì î
{
¶¶ 
float
ßß  %
adjustmentDelta
ßß& 5
=
ßß6 7
(
ßß8 9
marginHeight
ßß9 E
-
ßßF G

textHeight
ßßH R
)
ßßR S
/
ßßT U
m_lineNumber
ßßV b
;
ßßb c 
m_lineSpacingDelta
©©  2
=
©©3 4
Mathf
©©5 :
.
©©: ;
Max
©©; >
(
©©> ? 
m_lineSpacingDelta
©©? Q
+
©©R S
adjustmentDelta
©©T c
/
©©d e
	baseScale
©©f o
,
©©o p
m_lineSpacingMax©©q Å
)©©Å Ç
;©©Ç É0
"k_HandleVerticalLineBreakingMarker
¨¨  B
.
¨¨B C
End
¨¨C F
(
¨¨F G
)
¨¨G H
;
¨¨H I,
k_HandleVisibleCharacterMarker
≠≠  >
.
≠≠> ?
End
≠≠? B
(
≠≠B C
)
≠≠C D
;
≠≠D E(
k_GenerateTextPhaseIMarker
ÆÆ  :
.
ÆÆ: ;
End
ÆÆ; >
(
ÆÆ> ?
)
ÆÆ? @
;
ÆÆ@ A"
k_GenerateTextMarker
ØØ  4
.
ØØ4 5
End
ØØ5 8
(
ØØ8 9
)
ØØ9 :
;
ØØ: ;
return
∞∞  &
;
∞∞& '
}
±± 
if
∑∑ 
(
∑∑  

m_fontSize
∑∑  *
>
∑∑+ ,
m_fontSizeMin
∑∑- :
&&
∑∑; =&
m_AutoSizeIterationCount
∑∑> V
<
∑∑W X)
m_AutoSizeMaxIterationCount
∑∑Y t
)
∑∑t u
{
∏∏ 
m_maxFontSize
ππ  -
=
ππ. /

m_fontSize
ππ0 :
;
ππ: ;
float
ªª  %
	sizeDelta
ªª& /
=
ªª0 1
Mathf
ªª2 7
.
ªª7 8
Max
ªª8 ;
(
ªª; <
(
ªª< =

m_fontSize
ªª= G
-
ªªH I
m_minFontSize
ªªJ W
)
ªªW X
/
ªªY Z
$num
ªª[ \
,
ªª\ ]
$num
ªª^ c
)
ªªc d
;
ªªd e

m_fontSize
ºº  *
-=
ºº+ -
	sizeDelta
ºº. 7
;
ºº7 8

m_fontSize
ΩΩ  *
=
ΩΩ+ ,
Mathf
ΩΩ- 2
.
ΩΩ2 3
Max
ΩΩ3 6
(
ΩΩ6 7
(
ΩΩ7 8
int
ΩΩ8 ;
)
ΩΩ; <
(
ΩΩ< =

m_fontSize
ΩΩ= G
*
ΩΩH I
$num
ΩΩJ L
+
ΩΩM N
$num
ΩΩO S
)
ΩΩS T
/
ΩΩU V
$num
ΩΩW Z
,
ΩΩZ [
m_fontSizeMin
ΩΩ\ i
)
ΩΩi j
;
ΩΩj k0
"k_HandleVerticalLineBreakingMarker
¿¿  B
.
¿¿B C
End
¿¿C F
(
¿¿F G
)
¿¿G H
;
¿¿H I,
k_HandleVisibleCharacterMarker
¡¡  >
.
¡¡> ?
End
¡¡? B
(
¡¡B C
)
¡¡C D
;
¡¡D E(
k_GenerateTextPhaseIMarker
¬¬  :
.
¬¬: ;
End
¬¬; >
(
¬¬> ?
)
¬¬? @
;
¬¬@ A"
k_GenerateTextMarker
√√  4
.
√√4 5
End
√√5 8
(
√√8 9
)
√√9 :
;
√√: ;
return
ƒƒ  &
;
ƒƒ& '
}
≈≈ 
}
«« 
switch
   
(
    
m_overflowMode
    .
)
  . /
{
ÀÀ 
case
ÃÃ  
TextOverflowModes
ÃÃ! 2
.
ÃÃ2 3
Overflow
ÃÃ3 ;
:
ÃÃ; <
case
ÕÕ  
TextOverflowModes
ÕÕ! 2
.
ÕÕ2 3

ScrollRect
ÕÕ3 =
:
ÕÕ= >
case
ŒŒ  
TextOverflowModes
ŒŒ! 2
.
ŒŒ2 3
Masking
ŒŒ3 :
:
ŒŒ: ;
break
––  %
;
––% &
case
““  
TextOverflowModes
““! 2
.
““2 3
Truncate
““3 ;
:
““; <
i
””  !
=
””" #&
RestoreWordWrappingState
””$ <
(
””< =
ref
””= @#
m_SavedLastValidState
””A V
)
””V W
;
””W X#
characterToSubstitute
’’  5
.
’’5 6
index
’’6 ;
=
’’< ="
testedCharacterCount
’’> R
;
’’R S#
characterToSubstitute
÷÷  5
.
÷÷5 6
unicode
÷÷6 =
=
÷÷> ?
$num
÷÷@ D
;
÷÷D E0
"k_HandleVerticalLineBreakingMarker
◊◊  B
.
◊◊B C
End
◊◊C F
(
◊◊F G
)
◊◊G H
;
◊◊H I,
k_HandleVisibleCharacterMarker
ÿÿ  >
.
ÿÿ> ?
End
ÿÿ? B
(
ÿÿB C
)
ÿÿC D
;
ÿÿD E
continue
ŸŸ  (
;
ŸŸ( )
case
€€  
TextOverflowModes
€€! 2
.
€€2 3
Ellipsis
€€3 ;
:
€€; <
if
‹‹  "
(
‹‹# $/
!m_EllipsisInsertionCandidateStack
‹‹$ E
.
‹‹E F
Count
‹‹F K
==
‹‹L N
$num
‹‹O P
)
‹‹P Q
{
››  !
i
ﬁﬁ$ %
=
ﬁﬁ& '
-
ﬁﬁ( )
$num
ﬁﬁ) *
;
ﬁﬁ* +
m_characterCount
ﬂﬂ$ 4
=
ﬂﬂ5 6
$num
ﬂﬂ7 8
;
ﬂﬂ8 9#
characterToSubstitute
‡‡$ 9
.
‡‡9 :
index
‡‡: ?
=
‡‡@ A
$num
‡‡B C
;
‡‡C D#
characterToSubstitute
··$ 9
.
··9 :
unicode
··: A
=
··B C
$num
··D H
;
··H I$
m_firstCharacterOfLine
‚‚$ :
=
‚‚; <
$num
‚‚= >
;
‚‚> ?0
"k_HandleVerticalLineBreakingMarker
„„$ F
.
„„F G
End
„„G J
(
„„J K
)
„„K L
;
„„L M,
k_HandleVisibleCharacterMarker
‰‰$ B
.
‰‰B C
End
‰‰C F
(
‰‰F G
)
‰‰G H
;
‰‰H I
continue
ÂÂ$ ,
;
ÂÂ, -
}
ÊÊ  !
var
ËË  #
ellipsisState
ËË$ 1
=
ËË2 3/
!m_EllipsisInsertionCandidateStack
ËË4 U
.
ËËU V
Pop
ËËV Y
(
ËËY Z
)
ËËZ [
;
ËË[ \
i
ÈÈ  !
=
ÈÈ" #&
RestoreWordWrappingState
ÈÈ$ <
(
ÈÈ< =
ref
ÈÈ= @
ellipsisState
ÈÈA N
)
ÈÈN O
;
ÈÈO P
i
ÎÎ  !
-=
ÎÎ" $
$num
ÎÎ% &
;
ÎÎ& '
m_characterCount
ÏÏ  0
-=
ÏÏ1 3
$num
ÏÏ4 5
;
ÏÏ5 6#
characterToSubstitute
ÌÌ  5
.
ÌÌ5 6
index
ÌÌ6 ;
=
ÌÌ< =
m_characterCount
ÌÌ> N
;
ÌÌN O#
characterToSubstitute
ÓÓ  5
.
ÓÓ5 6
unicode
ÓÓ6 =
=
ÓÓ> ?
$num
ÓÓ@ F
;
ÓÓF G
restoreCount
  ,
+=
- /
$num
0 1
;
1 20
"k_HandleVerticalLineBreakingMarker
ÒÒ  B
.
ÒÒB C
End
ÒÒC F
(
ÒÒF G
)
ÒÒG H
;
ÒÒH I,
k_HandleVisibleCharacterMarker
ÚÚ  >
.
ÚÚ> ?
End
ÚÚ? B
(
ÚÚB C
)
ÚÚC D
;
ÚÚD E
continue
ÛÛ  (
;
ÛÛ( )
case
ıı  
TextOverflowModes
ıı! 2
.
ıı2 3
Linked
ıı3 9
:
ıı9 :
i
ˆˆ  !
=
ˆˆ" #&
RestoreWordWrappingState
ˆˆ$ <
(
ˆˆ< =
ref
ˆˆ= @#
m_SavedLastValidState
ˆˆA V
)
ˆˆV W
;
ˆˆW X
if
¯¯  "
(
¯¯# $#
m_linkedTextComponent
¯¯$ 9
!=
¯¯: <
null
¯¯= A
)
¯¯A B
{
˘˘  !#
m_linkedTextComponent
˙˙$ 9
.
˙˙9 :
text
˙˙: >
=
˙˙? @
text
˙˙A E
;
˙˙E F#
m_linkedTextComponent
˚˚$ 9
.
˚˚9 :
m_inputSource
˚˚: G
=
˚˚H I
m_inputSource
˚˚J W
;
˚˚W X#
m_linkedTextComponent
¸¸$ 9
.
¸¸9 :#
firstVisibleCharacter
¸¸: O
=
¸¸P Q
m_characterCount
¸¸R b
;
¸¸b c#
m_linkedTextComponent
˝˝$ 9
.
˝˝9 :
ForceMeshUpdate
˝˝: I
(
˝˝I J
)
˝˝J K
;
˝˝K L
m_isTextTruncated
ˇˇ$ 5
=
ˇˇ6 7
true
ˇˇ8 <
;
ˇˇ< =
}
ÄÄ  !#
characterToSubstitute
ÉÉ  5
.
ÉÉ5 6
index
ÉÉ6 ;
=
ÉÉ< ="
testedCharacterCount
ÉÉ> R
;
ÉÉR S#
characterToSubstitute
ÑÑ  5
.
ÑÑ5 6
unicode
ÑÑ6 =
=
ÑÑ> ?
$num
ÑÑ@ D
;
ÑÑD E0
"k_HandleVerticalLineBreakingMarker
ÖÖ  B
.
ÖÖB C
End
ÖÖC F
(
ÖÖF G
)
ÖÖG H
;
ÖÖH I,
k_HandleVisibleCharacterMarker
ÜÜ  >
.
ÜÜ> ?
End
ÜÜ? B
(
ÜÜB C
)
ÜÜC D
;
ÜÜD E
continue
áá  (
;
áá( )
case
ââ  
TextOverflowModes
ââ! 2
.
ââ2 3
Page
ââ3 7
:
ââ7 8
if
ãã  "
(
ãã# $
i
ãã$ %
<
ãã& '
$num
ãã( )
||
ãã* ,"
testedCharacterCount
ãã- A
==
ããB D
$num
ããE F
)
ããF G
{
åå  !
i
çç$ %
=
çç& '
-
çç( )
$num
çç) *
;
çç* +
m_characterCount
éé$ 4
=
éé5 6
$num
éé7 8
;
éé8 9#
characterToSubstitute
èè$ 9
.
èè9 :
index
èè: ?
=
èè@ A
$num
èèB C
;
èèC D#
characterToSubstitute
êê$ 9
.
êê9 :
unicode
êê: A
=
êêB C
$num
êêD H
;
êêH I0
"k_HandleVerticalLineBreakingMarker
ëë$ F
.
ëëF G
End
ëëG J
(
ëëJ K
)
ëëK L
;
ëëL M,
k_HandleVisibleCharacterMarker
íí$ B
.
ííB C
End
ííC F
(
ííF G
)
ííG H
;
ííH I
continue
ìì$ ,
;
ìì, -
}
îî  !
else
ïï  $
if
ïï% '
(
ïï( )
m_maxLineAscender
ïï) :
-
ïï; < 
m_maxLineDescender
ïï= O
>
ïïP Q
marginHeight
ïïR ^
+
ïï_ `
$num
ïïa h
)
ïïh i
{
ññ  !
i
ôô$ %
=
ôô& '&
RestoreWordWrappingState
ôô( @
(
ôô@ A
ref
ôôA D
m_SavedLineState
ôôE U
)
ôôU V
;
ôôV W#
characterToSubstitute
õõ$ 9
.
õõ9 :
index
õõ: ?
=
õõ@ A"
testedCharacterCount
õõB V
;
õõV W#
characterToSubstitute
úú$ 9
.
úú9 :
unicode
úú: A
=
úúB C
$num
úúD H
;
úúH I0
"k_HandleVerticalLineBreakingMarker
ùù$ F
.
ùùF G
End
ùùG J
(
ùùJ K
)
ùùK L
;
ùùL M,
k_HandleVisibleCharacterMarker
ûû$ B
.
ûûB C
End
ûûC F
(
ûûF G
)
ûûG H
;
ûûH I
continue
üü$ ,
;
üü, -
}
††  !
i
££  !
=
££" #&
RestoreWordWrappingState
££$ <
(
££< =
ref
££= @
m_SavedLineState
££A Q
)
££Q R
;
££R S
m_isNewPage
••  +
=
••, -
true
••. 2
;
••2 3$
m_firstCharacterOfLine
¶¶  6
=
¶¶7 8
m_characterCount
¶¶9 I
;
¶¶I J
m_maxLineAscender
ßß  1
=
ßß2 3"
k_LargeNegativeFloat
ßß4 H
;
ßßH I 
m_maxLineDescender
®®  2
=
®®3 4"
k_LargePositiveFloat
®®5 I
;
®®I J#
m_startOfLineAscender
©©  5
=
©©6 7
$num
©©8 9
;
©©9 :

m_xAdvance
´´  *
=
´´+ ,
$num
´´- .
+
´´/ 0

tag_Indent
´´1 ;
;
´´; <
m_lineOffset
¨¨  ,
=
¨¨- .
$num
¨¨/ 0
;
¨¨0 1
m_maxTextAscender
≠≠  1
=
≠≠2 3
$num
≠≠4 5
;
≠≠5 6
m_PageAscender
ÆÆ  .
=
ÆÆ/ 0
$num
ÆÆ1 2
;
ÆÆ2 3
m_lineNumber
ØØ  ,
+=
ØØ- /
$num
ØØ0 1
;
ØØ1 2
m_pageNumber
∞∞  ,
+=
∞∞- /
$num
∞∞0 1
;
∞∞1 20
"k_HandleVerticalLineBreakingMarker
≥≥  B
.
≥≥B C
End
≥≥C F
(
≥≥F G
)
≥≥G H
;
≥≥H I,
k_HandleVisibleCharacterMarker
¥¥  >
.
¥¥> ?
End
¥¥? B
(
¥¥B C
)
¥¥C D
;
¥¥D E
continue
µµ  (
;
µµ( )
}
∂∂ 0
"k_HandleVerticalLineBreakingMarker
∏∏ :
.
∏∏: ;
End
∏∏; >
(
∏∏> ?
)
∏∏? @
;
∏∏@ A
}
ππ 
if
øø 
(
øø 
	textWidth
øø !
>
øø" #
widthOfTextArea
øø$ 3
*
øø4 5
(
øø6 7 
isJustifiedOrFlush
øø7 I
?
øøJ K
$num
øøL Q
:
øøR S
$num
øøT X
)
øøX Y
)
øøY Z
{
¿¿ 2
$k_HandleHorizontalLineBreakingMarker
¡¡ <
.
¡¡< =
Begin
¡¡= B
(
¡¡B C
)
¡¡C D
;
¡¡D E
if
ƒƒ 
(
ƒƒ "
m_enableWordWrapping
ƒƒ 0
&&
ƒƒ1 3
m_characterCount
ƒƒ4 D
!=
ƒƒE G$
m_firstCharacterOfLine
ƒƒH ^
)
ƒƒ^ _
{
≈≈ 
i
«« 
=
«« &
RestoreWordWrappingState
««  8
(
««8 9
ref
««9 <"
m_SavedWordWrapState
««= Q
)
««Q R
;
««R S
float
   !
lineOffsetDelta
  " 1
=
  2 3
$num
  4 5
;
  5 6
if
ÀÀ 
(
ÀÀ  
m_lineHeight
ÀÀ  ,
==
ÀÀ- /
TMP_Math
ÀÀ0 8
.
ÀÀ8 9
FLOAT_UNSET
ÀÀ9 D
)
ÀÀD E
{
ÃÃ 
float
ÕÕ  %
ascender
ÕÕ& .
=
ÕÕ/ 0

m_textInfo
ÕÕ1 ;
.
ÕÕ; <
characterInfo
ÕÕ< I
[
ÕÕI J
m_characterCount
ÕÕJ Z
]
ÕÕZ [
.
ÕÕ[ \
adjustedAscender
ÕÕ\ l
;
ÕÕl m
lineOffsetDelta
ŒŒ  /
=
ŒŒ0 1
(
ŒŒ2 3
m_lineOffset
ŒŒ3 ?
>
ŒŒ@ A
$num
ŒŒB C
&&
ŒŒD F#
m_IsDrivenLineSpacing
ŒŒG \
==
ŒŒ] _
false
ŒŒ` e
?
ŒŒf g
m_maxLineAscender
ŒŒh y
-
ŒŒz {$
m_startOfLineAscenderŒŒ| ë
:ŒŒí ì
$numŒŒî ï
)ŒŒï ñ
-ŒŒó ò"
m_maxLineDescenderŒŒô ´
+ŒŒ¨ ≠
ascenderŒŒÆ ∂
+ŒŒ∑ ∏
(ŒŒπ ∫
lineGapŒŒ∫ ¡
+ŒŒ¬ √"
m_lineSpacingDeltaŒŒƒ ÷
)ŒŒ÷ ◊
*ŒŒÿ Ÿ
	baseScaleŒŒ⁄ „
+ŒŒ‰ Â
m_lineSpacingŒŒÊ Û
*ŒŒÙ ı
currentEmScaleŒŒˆ Ñ
;ŒŒÑ Ö
}
œœ 
else
––  
{
—— 
lineOffsetDelta
““  /
=
““0 1
m_lineHeight
““2 >
+
““? @
m_lineSpacing
““A N
*
““O P
currentEmScale
““Q _
;
““_ `#
m_IsDrivenLineSpacing
””  5
=
””6 7
true
””8 <
;
””< =
}
‘‘ 
float
◊◊ !
newTextHeight
◊◊" /
=
◊◊0 1
m_maxTextAscender
◊◊2 C
+
◊◊D E
lineOffsetDelta
◊◊F U
+
◊◊V W
m_lineOffset
◊◊X d
-
◊◊e f

m_textInfo
◊◊g q
.
◊◊q r
characterInfo
◊◊r 
[◊◊ Ä 
m_characterCount◊◊Ä ê
]◊◊ê ë
.◊◊ë í!
adjustedDescender◊◊í £
;◊◊£ §
if
€€ 
(
€€  

m_textInfo
€€  *
.
€€* +
characterInfo
€€+ 8
[
€€8 9
m_characterCount
€€9 I
-
€€J K
$num
€€L M
]
€€M N
.
€€N O
	character
€€O X
==
€€Y [
$num
€€\ `
&&
€€a c!
isSoftHyphenIgnored
€€d w
==
€€x z
false€€{ Ä
)€€Ä Å
{
‹‹ 
if
ﬁﬁ  "
(
ﬁﬁ# $
m_overflowMode
ﬁﬁ$ 2
==
ﬁﬁ3 5
TextOverflowModes
ﬁﬁ6 G
.
ﬁﬁG H
Overflow
ﬁﬁH P
||
ﬁﬁQ S
newTextHeight
ﬁﬁT a
<
ﬁﬁb c
marginHeight
ﬁﬁd p
+
ﬁﬁq r
$num
ﬁﬁs z
)
ﬁﬁz {
{
ﬂﬂ  !#
characterToSubstitute
‡‡$ 9
.
‡‡9 :
index
‡‡: ?
=
‡‡@ A
m_characterCount
‡‡B R
-
‡‡S T
$num
‡‡U V
;
‡‡V W#
characterToSubstitute
··$ 9
.
··9 :
unicode
··: A
=
··B C
$num
··D H
;
··H I
i
„„$ %
-=
„„& (
$num
„„) *
;
„„* +
m_characterCount
‰‰$ 4
-=
‰‰5 7
$num
‰‰8 9
;
‰‰9 :2
$k_HandleHorizontalLineBreakingMarker
ÂÂ$ H
.
ÂÂH I
End
ÂÂI L
(
ÂÂL M
)
ÂÂM N
;
ÂÂN O,
k_HandleVisibleCharacterMarker
ÊÊ$ B
.
ÊÊB C
End
ÊÊC F
(
ÊÊF G
)
ÊÊG H
;
ÊÊH I
continue
ÁÁ$ ,
;
ÁÁ, -
}
ËË  !
}
ÈÈ !
isSoftHyphenIgnored
ÎÎ /
=
ÎÎ0 1
false
ÎÎ2 7
;
ÎÎ7 8
if
ÓÓ 
(
ÓÓ  

m_textInfo
ÓÓ  *
.
ÓÓ* +
characterInfo
ÓÓ+ 8
[
ÓÓ8 9
m_characterCount
ÓÓ9 I
]
ÓÓI J
.
ÓÓJ K
	character
ÓÓK T
==
ÓÓU W
$num
ÓÓX \
)
ÓÓ\ ]
{
ÔÔ !
isSoftHyphenIgnored
  3
=
4 5
true
6 :
;
: ;2
$k_HandleHorizontalLineBreakingMarker
ÒÒ  D
.
ÒÒD E
End
ÒÒE H
(
ÒÒH I
)
ÒÒI J
;
ÒÒJ K,
k_HandleVisibleCharacterMarker
ÚÚ  >
.
ÚÚ> ?
End
ÚÚ? B
(
ÚÚB C
)
ÚÚC D
;
ÚÚD E
continue
ÛÛ  (
;
ÛÛ( )
}
ÙÙ 
if
¯¯ 
(
¯¯   
m_enableAutoSizing
¯¯  2
&&
¯¯3 5
isFirstWordOfLine
¯¯6 G
)
¯¯G H
{
˘˘ 
if
¸¸  "
(
¸¸# $!
m_charWidthAdjDelta
¸¸$ 7
<
¸¸8 9
m_charWidthMaxAdj
¸¸: K
/
¸¸L M
$num
¸¸N Q
&&
¸¸R T&
m_AutoSizeIterationCount
¸¸U m
<
¸¸n o*
m_AutoSizeMaxIterationCount¸¸p ã
)¸¸ã å
{
˝˝  !
float
˛˛$ )
adjustedTextWidth
˛˛* ;
=
˛˛< =
	textWidth
˛˛> G
;
˛˛G H
if
ÅÅ$ &
(
ÅÅ' (!
m_charWidthAdjDelta
ÅÅ( ;
>
ÅÅ< =
$num
ÅÅ> ?
)
ÅÅ? @
adjustedTextWidth
ÇÇ( 9
/=
ÇÇ: <
$num
ÇÇ= ?
-
ÇÇ@ A!
m_charWidthAdjDelta
ÇÇB U
;
ÇÇU V
float
ÑÑ$ )
adjustmentDelta
ÑÑ* 9
=
ÑÑ: ;
	textWidth
ÑÑ< E
-
ÑÑF G
(
ÑÑH I
widthOfTextArea
ÑÑI X
-
ÑÑY Z
$num
ÑÑ[ b
)
ÑÑb c
*
ÑÑd e
(
ÑÑf g 
isJustifiedOrFlush
ÑÑg y
?
ÑÑz {
$numÑÑ| Å
:ÑÑÇ É
$numÑÑÑ à
)ÑÑà â
;ÑÑâ ä!
m_charWidthAdjDelta
ÖÖ$ 7
+=
ÖÖ8 :
adjustmentDelta
ÖÖ; J
/
ÖÖK L
adjustedTextWidth
ÖÖM ^
;
ÖÖ^ _!
m_charWidthAdjDelta
ÜÜ$ 7
=
ÜÜ8 9
Mathf
ÜÜ: ?
.
ÜÜ? @
Min
ÜÜ@ C
(
ÜÜC D!
m_charWidthAdjDelta
ÜÜD W
,
ÜÜW X
m_charWidthMaxAdj
ÜÜY j
/
ÜÜk l
$num
ÜÜm p
)
ÜÜp q
;
ÜÜq r2
$k_HandleHorizontalLineBreakingMarker
ââ$ H
.
ââH I
End
ââI L
(
ââL M
)
ââM N
;
ââN O,
k_HandleVisibleCharacterMarker
ää$ B
.
ääB C
End
ääC F
(
ääF G
)
ääG H
;
ääH I(
k_GenerateTextPhaseIMarker
ãã$ >
.
ãã> ?
End
ãã? B
(
ããB C
)
ããC D
;
ããD E"
k_GenerateTextMarker
åå$ 8
.
åå8 9
End
åå9 <
(
åå< =
)
åå= >
;
åå> ?
return
çç$ *
;
çç* +
}
éé  !
if
ìì  "
(
ìì# $

m_fontSize
ìì$ .
>
ìì/ 0
m_fontSizeMin
ìì1 >
&&
ìì? A&
m_AutoSizeIterationCount
ììB Z
<
ìì[ \)
m_AutoSizeMaxIterationCount
ìì] x
)
ììx y
{
îî  !
m_maxFontSize
ïï$ 1
=
ïï2 3

m_fontSize
ïï4 >
;
ïï> ?
float
óó$ )
	sizeDelta
óó* 3
=
óó4 5
Mathf
óó6 ;
.
óó; <
Max
óó< ?
(
óó? @
(
óó@ A

m_fontSize
óóA K
-
óóL M
m_minFontSize
óóN [
)
óó[ \
/
óó] ^
$num
óó_ `
,
óó` a
$num
óób g
)
óóg h
;
óóh i

m_fontSize
òò$ .
-=
òò/ 1
	sizeDelta
òò2 ;
;
òò; <

m_fontSize
ôô$ .
=
ôô/ 0
Mathf
ôô1 6
.
ôô6 7
Max
ôô7 :
(
ôô: ;
(
ôô; <
int
ôô< ?
)
ôô? @
(
ôô@ A

m_fontSize
ôôA K
*
ôôL M
$num
ôôN P
+
ôôQ R
$num
ôôS W
)
ôôW X
/
ôôY Z
$num
ôô[ ^
,
ôô^ _
m_fontSizeMin
ôô` m
)
ôôm n
;
ôôn o2
$k_HandleHorizontalLineBreakingMarker
úú$ H
.
úúH I
End
úúI L
(
úúL M
)
úúM N
;
úúN O,
k_HandleVisibleCharacterMarker
ùù$ B
.
ùùB C
End
ùùC F
(
ùùF G
)
ùùG H
;
ùùH I(
k_GenerateTextPhaseIMarker
ûû$ >
.
ûû> ?
End
ûû? B
(
ûûB C
)
ûûC D
;
ûûD E"
k_GenerateTextMarker
üü$ 8
.
üü8 9
End
üü9 <
(
üü< =
)
üü= >
;
üü> ?
return
††$ *
;
††* +
}
°°  !
}
££ 
int
ßß (
savedSoftLineBreakingSpace
ßß  :
=
ßß; <'
m_SavedSoftLineBreakState
ßß= V
.
ßßV W 
previous_WordBreak
ßßW i
;
ßßi j
if
®® 
(
®®  
isFirstWordOfLine
®®  1
&&
®®2 4(
savedSoftLineBreakingSpace
®®5 O
!=
®®P R
-
®®S T
$num
®®T U
)
®®U V
{
©© 
if
™™  "
(
™™# $(
savedSoftLineBreakingSpace
™™$ >
!=
™™? A
lastSoftLineBreak
™™B S
)
™™S T
{
´´  !
i
¨¨$ %
=
¨¨& '&
RestoreWordWrappingState
¨¨( @
(
¨¨@ A
ref
¨¨A D'
m_SavedSoftLineBreakState
¨¨E ^
)
¨¨^ _
;
¨¨_ `
lastSoftLineBreak
≠≠$ 5
=
≠≠6 7(
savedSoftLineBreakingSpace
≠≠8 R
;
≠≠R S
if
∞∞$ &
(
∞∞' (

m_textInfo
∞∞( 2
.
∞∞2 3
characterInfo
∞∞3 @
[
∞∞@ A
m_characterCount
∞∞A Q
-
∞∞R S
$num
∞∞T U
]
∞∞U V
.
∞∞V W
	character
∞∞W `
==
∞∞a c
$num
∞∞d h
)
∞∞h i
{
±±$ %#
characterToSubstitute
≤≤( =
.
≤≤= >
index
≤≤> C
=
≤≤D E
m_characterCount
≤≤F V
-
≤≤W X
$num
≤≤Y Z
;
≤≤Z [#
characterToSubstitute
≥≥( =
.
≥≥= >
unicode
≥≥> E
=
≥≥F G
$num
≥≥H L
;
≥≥L M
i
µµ( )
-=
µµ* ,
$num
µµ- .
;
µµ. /
m_characterCount
∂∂( 8
-=
∂∂9 ;
$num
∂∂< =
;
∂∂= >2
$k_HandleHorizontalLineBreakingMarker
∑∑( L
.
∑∑L M
End
∑∑M P
(
∑∑P Q
)
∑∑Q R
;
∑∑R S,
k_HandleVisibleCharacterMarker
∏∏( F
.
∏∏F G
End
∏∏G J
(
∏∏J K
)
∏∏K L
;
∏∏L M
continue
ππ( 0
;
ππ0 1
}
∫∫$ %
}
ªª  !
}
ºº 
if
øø 
(
øø  
newTextHeight
øø  -
>
øø. /
marginHeight
øø0 <
+
øø= >
$num
øø? F
)
øøF G
{
¿¿ 0
"k_HandleVerticalLineBreakingMarker
¡¡  B
.
¡¡B C
Begin
¡¡C H
(
¡¡H I
)
¡¡I J
;
¡¡J K
if
ƒƒ  "
(
ƒƒ# $+
m_firstOverflowCharacterIndex
ƒƒ$ A
==
ƒƒB D
-
ƒƒE F
$num
ƒƒF G
)
ƒƒG H+
m_firstOverflowCharacterIndex
≈≈$ A
=
≈≈B C
m_characterCount
≈≈D T
;
≈≈T U
if
»»  "
(
»»# $ 
m_enableAutoSizing
»»$ 6
)
»»6 7
{
……  !
if
ÃÃ$ &
(
ÃÃ' ( 
m_lineSpacingDelta
ÃÃ( :
>
ÃÃ; <
m_lineSpacingMax
ÃÃ= M
&&
ÃÃN P&
m_AutoSizeIterationCount
ÃÃQ i
<
ÃÃj k*
m_AutoSizeMaxIterationCountÃÃl á
)ÃÃá à
{
ÕÕ$ %
float
ŒŒ( -
adjustmentDelta
ŒŒ. =
=
ŒŒ> ?
(
ŒŒ@ A
marginHeight
ŒŒA M
-
ŒŒN O
newTextHeight
ŒŒP ]
)
ŒŒ] ^
/
ŒŒ_ `
(
ŒŒa b
m_lineNumber
ŒŒb n
+
ŒŒo p
$num
ŒŒq r
)
ŒŒr s
;
ŒŒs t 
m_lineSpacingDelta
––( :
=
––; <
Mathf
––= B
.
––B C
Max
––C F
(
––F G 
m_lineSpacingDelta
––G Y
+
––Z [
adjustmentDelta
––\ k
/
––l m
	baseScale
––n w
,
––w x
m_lineSpacingMax––y â
)––â ä
;––ä ã0
"k_HandleVerticalLineBreakingMarker
””( J
.
””J K
End
””K N
(
””N O
)
””O P
;
””P Q2
$k_HandleHorizontalLineBreakingMarker
‘‘( L
.
‘‘L M
End
‘‘M P
(
‘‘P Q
)
‘‘Q R
;
‘‘R S,
k_HandleVisibleCharacterMarker
’’( F
.
’’F G
End
’’G J
(
’’J K
)
’’K L
;
’’L M(
k_GenerateTextPhaseIMarker
÷÷( B
.
÷÷B C
End
÷÷C F
(
÷÷F G
)
÷÷G H
;
÷÷H I"
k_GenerateTextMarker
◊◊( <
.
◊◊< =
End
◊◊= @
(
◊◊@ A
)
◊◊A B
;
◊◊B C
return
ÿÿ( .
;
ÿÿ. /
}
ŸŸ$ %
if
ﬁﬁ$ &
(
ﬁﬁ' (!
m_charWidthAdjDelta
ﬁﬁ( ;
<
ﬁﬁ< =
m_charWidthMaxAdj
ﬁﬁ> O
/
ﬁﬁP Q
$num
ﬁﬁR U
&&
ﬁﬁV X&
m_AutoSizeIterationCount
ﬁﬁY q
<
ﬁﬁr s*
m_AutoSizeMaxIterationCountﬁﬁt è
)ﬁﬁè ê
{
ﬂﬂ$ %
float
‡‡( -
adjustedTextWidth
‡‡. ?
=
‡‡@ A
	textWidth
‡‡B K
;
‡‡K L
if
„„( *
(
„„+ ,!
m_charWidthAdjDelta
„„, ?
>
„„@ A
$num
„„B C
)
„„C D
adjustedTextWidth
‰‰, =
/=
‰‰> @
$num
‰‰A C
-
‰‰D E!
m_charWidthAdjDelta
‰‰F Y
;
‰‰Y Z
float
ÊÊ( -
adjustmentDelta
ÊÊ. =
=
ÊÊ> ?
	textWidth
ÊÊ@ I
-
ÊÊJ K
(
ÊÊL M
widthOfTextArea
ÊÊM \
-
ÊÊ] ^
$num
ÊÊ_ f
)
ÊÊf g
*
ÊÊh i
(
ÊÊj k 
isJustifiedOrFlush
ÊÊk }
?
ÊÊ~ 
$numÊÊÄ Ö
:ÊÊÜ á
$numÊÊà å
)ÊÊå ç
;ÊÊç é!
m_charWidthAdjDelta
ÁÁ( ;
+=
ÁÁ< >
adjustmentDelta
ÁÁ? N
/
ÁÁO P
adjustedTextWidth
ÁÁQ b
;
ÁÁb c!
m_charWidthAdjDelta
ËË( ;
=
ËË< =
Mathf
ËË> C
.
ËËC D
Min
ËËD G
(
ËËG H!
m_charWidthAdjDelta
ËËH [
,
ËË[ \
m_charWidthMaxAdj
ËË] n
/
ËËo p
$num
ËËq t
)
ËËt u
;
ËËu v0
"k_HandleVerticalLineBreakingMarker
ÎÎ( J
.
ÎÎJ K
End
ÎÎK N
(
ÎÎN O
)
ÎÎO P
;
ÎÎP Q2
$k_HandleHorizontalLineBreakingMarker
ÏÏ( L
.
ÏÏL M
End
ÏÏM P
(
ÏÏP Q
)
ÏÏQ R
;
ÏÏR S,
k_HandleVisibleCharacterMarker
ÌÌ( F
.
ÌÌF G
End
ÌÌG J
(
ÌÌJ K
)
ÌÌK L
;
ÌÌL M(
k_GenerateTextPhaseIMarker
ÓÓ( B
.
ÓÓB C
End
ÓÓC F
(
ÓÓF G
)
ÓÓG H
;
ÓÓH I"
k_GenerateTextMarker
ÔÔ( <
.
ÔÔ< =
End
ÔÔ= @
(
ÔÔ@ A
)
ÔÔA B
;
ÔÔB C
return
( .
;
. /
}
ÒÒ$ %
if
ˆˆ$ &
(
ˆˆ' (

m_fontSize
ˆˆ( 2
>
ˆˆ3 4
m_fontSizeMin
ˆˆ5 B
&&
ˆˆC E&
m_AutoSizeIterationCount
ˆˆF ^
<
ˆˆ_ `)
m_AutoSizeMaxIterationCount
ˆˆa |
)
ˆˆ| }
{
˜˜$ %
m_maxFontSize
¯¯( 5
=
¯¯6 7

m_fontSize
¯¯8 B
;
¯¯B C
float
˙˙( -
	sizeDelta
˙˙. 7
=
˙˙8 9
Mathf
˙˙: ?
.
˙˙? @
Max
˙˙@ C
(
˙˙C D
(
˙˙D E

m_fontSize
˙˙E O
-
˙˙P Q
m_minFontSize
˙˙R _
)
˙˙_ `
/
˙˙a b
$num
˙˙c d
,
˙˙d e
$num
˙˙f k
)
˙˙k l
;
˙˙l m

m_fontSize
˚˚( 2
-=
˚˚3 5
	sizeDelta
˚˚6 ?
;
˚˚? @

m_fontSize
¸¸( 2
=
¸¸3 4
Mathf
¸¸5 :
.
¸¸: ;
Max
¸¸; >
(
¸¸> ?
(
¸¸? @
int
¸¸@ C
)
¸¸C D
(
¸¸D E

m_fontSize
¸¸E O
*
¸¸P Q
$num
¸¸R T
+
¸¸U V
$num
¸¸W [
)
¸¸[ \
/
¸¸] ^
$num
¸¸_ b
,
¸¸b c
m_fontSizeMin
¸¸d q
)
¸¸q r
;
¸¸r s0
"k_HandleVerticalLineBreakingMarker
ˇˇ( J
.
ˇˇJ K
End
ˇˇK N
(
ˇˇN O
)
ˇˇO P
;
ˇˇP Q2
$k_HandleHorizontalLineBreakingMarker
ÄÄ( L
.
ÄÄL M
End
ÄÄM P
(
ÄÄP Q
)
ÄÄQ R
;
ÄÄR S,
k_HandleVisibleCharacterMarker
ÅÅ( F
.
ÅÅF G
End
ÅÅG J
(
ÅÅJ K
)
ÅÅK L
;
ÅÅL M(
k_GenerateTextPhaseIMarker
ÇÇ( B
.
ÇÇB C
End
ÇÇC F
(
ÇÇF G
)
ÇÇG H
;
ÇÇH I"
k_GenerateTextMarker
ÉÉ( <
.
ÉÉ< =
End
ÉÉ= @
(
ÉÉ@ A
)
ÉÉA B
;
ÉÉB C
return
ÑÑ( .
;
ÑÑ. /
}
ÖÖ$ %
}
áá  !
switch
ää  &
(
ää' (
m_overflowMode
ää( 6
)
ää6 7
{
ãã  !
case
åå$ (
TextOverflowModes
åå) :
.
åå: ;
Overflow
åå; C
:
ååC D
case
çç$ (
TextOverflowModes
çç) :
.
çç: ;

ScrollRect
çç; E
:
ççE F
case
éé$ (
TextOverflowModes
éé) :
.
éé: ;
Masking
éé; B
:
ééB C
InsertNewLine
èè( 5
(
èè5 6
i
èè6 7
,
èè7 8
	baseScale
èè9 B
,
èèB C!
currentElementScale
èèD W
,
èèW X
currentEmScale
èèY g
,
èèg h1
"m_GlyphHorizontalAdvanceAdjustmentèèi ã
,èèã å%
boldSpacingAdjustmentèèç ¢
,èè¢ £*
characterSpacingAdjustmentèè§ æ
,èèæ ø
widthOfTextAreaèè¿ œ
,èèœ –
lineGapèè— ÿ
,èèÿ Ÿ
refèè⁄ ›(
isMaxVisibleDescenderSetèèﬁ ˆ
,èèˆ ˜
refèè¯ ˚#
maxVisibleDescenderèè¸ è
)èèè ê
;èèê ë
isStartOfNewLine
êê( 8
=
êê9 :
true
êê; ?
;
êê? @
isFirstWordOfLine
ëë( 9
=
ëë: ;
true
ëë< @
;
ëë@ A0
"k_HandleVerticalLineBreakingMarker
íí( J
.
ííJ K
End
ííK N
(
ííN O
)
ííO P
;
ííP Q2
$k_HandleHorizontalLineBreakingMarker
ìì( L
.
ììL M
End
ììM P
(
ììP Q
)
ììQ R
;
ììR S,
k_HandleVisibleCharacterMarker
îî( F
.
îîF G
End
îîG J
(
îîJ K
)
îîK L
;
îîL M
continue
ïï( 0
;
ïï0 1
case
óó$ (
TextOverflowModes
óó) :
.
óó: ;
Truncate
óó; C
:
óóC D
i
òò( )
=
òò* +&
RestoreWordWrappingState
òò, D
(
òòD E
ref
òòE H#
m_SavedLastValidState
òòI ^
)
òò^ _
;
òò_ `#
characterToSubstitute
öö( =
.
öö= >
index
öö> C
=
ööD E"
testedCharacterCount
ööF Z
;
ööZ [#
characterToSubstitute
õõ( =
.
õõ= >
unicode
õõ> E
=
õõF G
$num
õõH L
;
õõL M0
"k_HandleVerticalLineBreakingMarker
úú( J
.
úúJ K
End
úúK N
(
úúN O
)
úúO P
;
úúP Q2
$k_HandleHorizontalLineBreakingMarker
ùù( L
.
ùùL M
End
ùùM P
(
ùùP Q
)
ùùQ R
;
ùùR S,
k_HandleVisibleCharacterMarker
ûû( F
.
ûûF G
End
ûûG J
(
ûûJ K
)
ûûK L
;
ûûL M
continue
üü( 0
;
üü0 1
case
°°$ (
TextOverflowModes
°°) :
.
°°: ;
Ellipsis
°°; C
:
°°C D
if
¢¢( *
(
¢¢+ ,/
!m_EllipsisInsertionCandidateStack
¢¢, M
.
¢¢M N
Count
¢¢N S
==
¢¢T V
$num
¢¢W X
)
¢¢X Y
{
££( )
i
§§, -
=
§§. /
-
§§0 1
$num
§§1 2
;
§§2 3
m_characterCount
••, <
=
••= >
$num
••? @
;
••@ A#
characterToSubstitute
¶¶, A
.
¶¶A B
index
¶¶B G
=
¶¶H I
$num
¶¶J K
;
¶¶K L#
characterToSubstitute
ßß, A
.
ßßA B
unicode
ßßB I
=
ßßJ K
$num
ßßL P
;
ßßP Q$
m_firstCharacterOfLine
®®, B
=
®®C D
$num
®®E F
;
®®F G0
"k_HandleVerticalLineBreakingMarker
©©, N
.
©©N O
End
©©O R
(
©©R S
)
©©S T
;
©©T U2
$k_HandleHorizontalLineBreakingMarker
™™, P
.
™™P Q
End
™™Q T
(
™™T U
)
™™U V
;
™™V W,
k_HandleVisibleCharacterMarker
´´, J
.
´´J K
End
´´K N
(
´´N O
)
´´O P
;
´´P Q
continue
¨¨, 4
;
¨¨4 5
}
≠≠( )
var
ØØ( +
ellipsisState
ØØ, 9
=
ØØ: ;/
!m_EllipsisInsertionCandidateStack
ØØ< ]
.
ØØ] ^
Pop
ØØ^ a
(
ØØa b
)
ØØb c
;
ØØc d
i
∞∞( )
=
∞∞* +&
RestoreWordWrappingState
∞∞, D
(
∞∞D E
ref
∞∞E H
ellipsisState
∞∞I V
)
∞∞V W
;
∞∞W X
i
≤≤( )
-=
≤≤* ,
$num
≤≤- .
;
≤≤. /
m_characterCount
≥≥( 8
-=
≥≥9 ;
$num
≥≥< =
;
≥≥= >#
characterToSubstitute
¥¥( =
.
¥¥= >
index
¥¥> C
=
¥¥D E
m_characterCount
¥¥F V
;
¥¥V W#
characterToSubstitute
µµ( =
.
µµ= >
unicode
µµ> E
=
µµF G
$num
µµH N
;
µµN O
restoreCount
∑∑( 4
+=
∑∑5 7
$num
∑∑8 9
;
∑∑9 :0
"k_HandleVerticalLineBreakingMarker
∏∏( J
.
∏∏J K
End
∏∏K N
(
∏∏N O
)
∏∏O P
;
∏∏P Q2
$k_HandleHorizontalLineBreakingMarker
ππ( L
.
ππL M
End
ππM P
(
ππP Q
)
ππQ R
;
ππR S,
k_HandleVisibleCharacterMarker
∫∫( F
.
∫∫F G
End
∫∫G J
(
∫∫J K
)
∫∫K L
;
∫∫L M
continue
ªª( 0
;
ªª0 1
case
ΩΩ$ (
TextOverflowModes
ΩΩ) :
.
ΩΩ: ;
Linked
ΩΩ; A
:
ΩΩA B
if
ææ( *
(
ææ+ ,#
m_linkedTextComponent
ææ, A
!=
ææB D
null
ææE I
)
ææI J
{
øø( )#
m_linkedTextComponent
¿¿, A
.
¿¿A B
text
¿¿B F
=
¿¿G H
text
¿¿I M
;
¿¿M N#
m_linkedTextComponent
¡¡, A
.
¡¡A B
m_inputSource
¡¡B O
=
¡¡P Q
m_inputSource
¡¡R _
;
¡¡_ `#
m_linkedTextComponent
¬¬, A
.
¬¬A B#
firstVisibleCharacter
¬¬B W
=
¬¬X Y
m_characterCount
¬¬Z j
;
¬¬j k#
m_linkedTextComponent
√√, A
.
√√A B
ForceMeshUpdate
√√B Q
(
√√Q R
)
√√R S
;
√√S T
m_isTextTruncated
≈≈, =
=
≈≈> ?
true
≈≈@ D
;
≈≈D E
}
∆∆( )#
characterToSubstitute
……( =
.
……= >
index
……> C
=
……D E
m_characterCount
……F V
;
……V W#
characterToSubstitute
  ( =
.
  = >
unicode
  > E
=
  F G
$num
  H L
;
  L M0
"k_HandleVerticalLineBreakingMarker
ÀÀ( J
.
ÀÀJ K
End
ÀÀK N
(
ÀÀN O
)
ÀÀO P
;
ÀÀP Q2
$k_HandleHorizontalLineBreakingMarker
ÃÃ( L
.
ÃÃL M
End
ÃÃM P
(
ÃÃP Q
)
ÃÃQ R
;
ÃÃR S,
k_HandleVisibleCharacterMarker
ÕÕ( F
.
ÕÕF G
End
ÕÕG J
(
ÕÕJ K
)
ÕÕK L
;
ÕÕL M
continue
ŒŒ( 0
;
ŒŒ0 1
case
––$ (
TextOverflowModes
––) :
.
––: ;
Page
––; ?
:
––? @
m_isNewPage
““( 3
=
““4 5
true
““6 :
;
““: ;
InsertNewLine
‘‘( 5
(
‘‘5 6
i
‘‘6 7
,
‘‘7 8
	baseScale
‘‘9 B
,
‘‘B C!
currentElementScale
‘‘D W
,
‘‘W X
currentEmScale
‘‘Y g
,
‘‘g h1
"m_GlyphHorizontalAdvanceAdjustment‘‘i ã
,‘‘ã å%
boldSpacingAdjustment‘‘ç ¢
,‘‘¢ £*
characterSpacingAdjustment‘‘§ æ
,‘‘æ ø
widthOfTextArea‘‘¿ œ
,‘‘œ –
lineGap‘‘— ÿ
,‘‘ÿ Ÿ
ref‘‘⁄ ›(
isMaxVisibleDescenderSet‘‘ﬁ ˆ
,‘‘ˆ ˜
ref‘‘¯ ˚#
maxVisibleDescender‘‘¸ è
)‘‘è ê
;‘‘ê ë#
m_startOfLineAscender
÷÷( =
=
÷÷> ?
$num
÷÷@ A
;
÷÷A B
m_lineOffset
◊◊( 4
=
◊◊5 6
$num
◊◊7 8
;
◊◊8 9
m_maxTextAscender
ÿÿ( 9
=
ÿÿ: ;
$num
ÿÿ< =
;
ÿÿ= >
m_PageAscender
ŸŸ( 6
=
ŸŸ7 8
$num
ŸŸ9 :
;
ŸŸ: ;
m_pageNumber
⁄⁄( 4
+=
⁄⁄5 7
$num
⁄⁄8 9
;
⁄⁄9 :
isStartOfNewLine
‹‹( 8
=
‹‹9 :
true
‹‹; ?
;
‹‹? @
isFirstWordOfLine
››( 9
=
››: ;
true
››< @
;
››@ A0
"k_HandleVerticalLineBreakingMarker
ﬁﬁ( J
.
ﬁﬁJ K
End
ﬁﬁK N
(
ﬁﬁN O
)
ﬁﬁO P
;
ﬁﬁP Q2
$k_HandleHorizontalLineBreakingMarker
ﬂﬂ( L
.
ﬂﬂL M
End
ﬂﬂM P
(
ﬂﬂP Q
)
ﬂﬂQ R
;
ﬂﬂR S,
k_HandleVisibleCharacterMarker
‡‡( F
.
‡‡F G
End
‡‡G J
(
‡‡J K
)
‡‡K L
;
‡‡L M
continue
··( 0
;
··0 1
}
‚‚  !
}
„„ 
else
‰‰  
{
ÂÂ 
InsertNewLine
ÄÄ  -
(
ÄÄ- .
i
ÄÄ. /
,
ÄÄ/ 0
	baseScale
ÄÄ1 :
,
ÄÄ: ;!
currentElementScale
ÄÄ< O
,
ÄÄO P
currentEmScale
ÄÄQ _
,
ÄÄ_ `1
"m_GlyphHorizontalAdvanceAdjustmentÄÄa É
,ÄÄÉ Ñ%
boldSpacingAdjustmentÄÄÖ ö
,ÄÄö õ*
characterSpacingAdjustmentÄÄú ∂
,ÄÄ∂ ∑
widthOfTextAreaÄÄ∏ «
,ÄÄ« »
lineGapÄÄ… –
,ÄÄ– —
refÄÄ“ ’(
isMaxVisibleDescenderSetÄÄ÷ Ó
,ÄÄÓ Ô
refÄÄ Û#
maxVisibleDescenderÄÄÙ á
)ÄÄá à
;ÄÄà â
isStartOfNewLine
ÅÅ  0
=
ÅÅ1 2
true
ÅÅ3 7
;
ÅÅ7 8
isFirstWordOfLine
ÇÇ  1
=
ÇÇ2 3
true
ÇÇ4 8
;
ÇÇ8 92
$k_HandleHorizontalLineBreakingMarker
ÉÉ  D
.
ÉÉD E
End
ÉÉE H
(
ÉÉH I
)
ÉÉI J
;
ÉÉJ K,
k_HandleVisibleCharacterMarker
ÑÑ  >
.
ÑÑ> ?
End
ÑÑ? B
(
ÑÑB C
)
ÑÑC D
;
ÑÑD E
continue
ÖÖ  (
;
ÖÖ( )
}
ÜÜ 
}
áá 
else
àà 
{
ââ 
if
ää 
(
ää   
m_enableAutoSizing
ää  2
&&
ää3 5&
m_AutoSizeIterationCount
ää6 N
<
ääO P)
m_AutoSizeMaxIterationCount
ääQ l
)
ääl m
{
ãã 
if
éé  "
(
éé# $!
m_charWidthAdjDelta
éé$ 7
<
éé8 9
m_charWidthMaxAdj
éé: K
/
ééL M
$num
ééN Q
)
ééQ R
{
èè  !
float
êê$ )
adjustedTextWidth
êê* ;
=
êê< =
	textWidth
êê> G
;
êêG H
if
ìì$ &
(
ìì' (!
m_charWidthAdjDelta
ìì( ;
>
ìì< =
$num
ìì> ?
)
ìì? @
adjustedTextWidth
îî( 9
/=
îî: <
$num
îî= ?
-
îî@ A!
m_charWidthAdjDelta
îîB U
;
îîU V
float
ññ$ )
adjustmentDelta
ññ* 9
=
ññ: ;
	textWidth
ññ< E
-
ññF G
(
ññH I
widthOfTextArea
ññI X
-
ññY Z
$num
ññ[ b
)
ññb c
*
ññd e
(
ññf g 
isJustifiedOrFlush
ññg y
?
ññz {
$numññ| Å
:ññÇ É
$numññÑ à
)ññà â
;ññâ ä!
m_charWidthAdjDelta
óó$ 7
+=
óó8 :
adjustmentDelta
óó; J
/
óóK L
adjustedTextWidth
óóM ^
;
óó^ _!
m_charWidthAdjDelta
òò$ 7
=
òò8 9
Mathf
òò: ?
.
òò? @
Min
òò@ C
(
òòC D!
m_charWidthAdjDelta
òòD W
,
òòW X
m_charWidthMaxAdj
òòY j
/
òòk l
$num
òòm p
)
òòp q
;
òòq r2
$k_HandleHorizontalLineBreakingMarker
õõ$ H
.
õõH I
End
õõI L
(
õõL M
)
õõM N
;
õõN O,
k_HandleVisibleCharacterMarker
úú$ B
.
úúB C
End
úúC F
(
úúF G
)
úúG H
;
úúH I(
k_GenerateTextPhaseIMarker
ùù$ >
.
ùù> ?
End
ùù? B
(
ùùB C
)
ùùC D
;
ùùD E"
k_GenerateTextMarker
ûû$ 8
.
ûû8 9
End
ûû9 <
(
ûû< =
)
ûû= >
;
ûû> ?
return
üü$ *
;
üü* +
}
††  !
if
••  "
(
••# $

m_fontSize
••$ .
>
••/ 0
m_fontSizeMin
••1 >
)
••> ?
{
¶¶  !
m_maxFontSize
´´$ 1
=
´´2 3

m_fontSize
´´4 >
;
´´> ?
float
≠≠$ )
	sizeDelta
≠≠* 3
=
≠≠4 5
Mathf
≠≠6 ;
.
≠≠; <
Max
≠≠< ?
(
≠≠? @
(
≠≠@ A

m_fontSize
≠≠A K
-
≠≠L M
m_minFontSize
≠≠N [
)
≠≠[ \
/
≠≠] ^
$num
≠≠_ `
,
≠≠` a
$num
≠≠b g
)
≠≠g h
;
≠≠h i

m_fontSize
ÆÆ$ .
-=
ÆÆ/ 1
	sizeDelta
ÆÆ2 ;
;
ÆÆ; <

m_fontSize
ØØ$ .
=
ØØ/ 0
Mathf
ØØ1 6
.
ØØ6 7
Max
ØØ7 :
(
ØØ: ;
(
ØØ; <
int
ØØ< ?
)
ØØ? @
(
ØØ@ A

m_fontSize
ØØA K
*
ØØL M
$num
ØØN P
+
ØØQ R
$num
ØØS W
)
ØØW X
/
ØØY Z
$num
ØØ[ ^
,
ØØ^ _
m_fontSizeMin
ØØ` m
)
ØØm n
;
ØØn o2
$k_HandleHorizontalLineBreakingMarker
≤≤$ H
.
≤≤H I
End
≤≤I L
(
≤≤L M
)
≤≤M N
;
≤≤N O,
k_HandleVisibleCharacterMarker
≥≥$ B
.
≥≥B C
End
≥≥C F
(
≥≥F G
)
≥≥G H
;
≥≥H I(
k_GenerateTextPhaseIMarker
¥¥$ >
.
¥¥> ?
End
¥¥? B
(
¥¥B C
)
¥¥C D
;
¥¥D E"
k_GenerateTextMarker
µµ$ 8
.
µµ8 9
End
µµ9 <
(
µµ< =
)
µµ= >
;
µµ> ?
return
∂∂$ *
;
∂∂* +
}
∑∑  !
}
∫∫ 
switch
ΩΩ "
(
ΩΩ# $
m_overflowMode
ΩΩ$ 2
)
ΩΩ2 3
{
ææ 
case
øø  $
TextOverflowModes
øø% 6
.
øø6 7
Overflow
øø7 ?
:
øø? @
case
¿¿  $
TextOverflowModes
¿¿% 6
.
¿¿6 7

ScrollRect
¿¿7 A
:
¿¿A B
case
¡¡  $
TextOverflowModes
¡¡% 6
.
¡¡6 7
Masking
¡¡7 >
:
¡¡> ?
break
√√$ )
;
√√) *
case
≈≈  $
TextOverflowModes
≈≈% 6
.
≈≈6 7
Truncate
≈≈7 ?
:
≈≈? @
i
∆∆$ %
=
∆∆& '&
RestoreWordWrappingState
∆∆( @
(
∆∆@ A
ref
∆∆A D"
m_SavedWordWrapState
∆∆E Y
)
∆∆Y Z
;
∆∆Z [#
characterToSubstitute
»»$ 9
.
»»9 :
index
»»: ?
=
»»@ A"
testedCharacterCount
»»B V
;
»»V W#
characterToSubstitute
……$ 9
.
……9 :
unicode
……: A
=
……B C
$num
……D H
;
……H I2
$k_HandleHorizontalLineBreakingMarker
  $ H
.
  H I
End
  I L
(
  L M
)
  M N
;
  N O,
k_HandleVisibleCharacterMarker
ÀÀ$ B
.
ÀÀB C
End
ÀÀC F
(
ÀÀF G
)
ÀÀG H
;
ÀÀH I
continue
ÃÃ$ ,
;
ÃÃ, -
case
ŒŒ  $
TextOverflowModes
ŒŒ% 6
.
ŒŒ6 7
Ellipsis
ŒŒ7 ?
:
ŒŒ? @
if
œœ$ &
(
œœ' (/
!m_EllipsisInsertionCandidateStack
œœ( I
.
œœI J
Count
œœJ O
==
œœP R
$num
œœS T
)
œœT U
{
––$ %
i
——( )
=
——* +
-
——, -
$num
——- .
;
——. /
m_characterCount
““( 8
=
““9 :
$num
““; <
;
““< =#
characterToSubstitute
””( =
.
””= >
index
””> C
=
””D E
$num
””F G
;
””G H#
characterToSubstitute
‘‘( =
.
‘‘= >
unicode
‘‘> E
=
‘‘F G
$num
‘‘H L
;
‘‘L M$
m_firstCharacterOfLine
’’( >
=
’’? @
$num
’’A B
;
’’B C2
$k_HandleHorizontalLineBreakingMarker
÷÷( L
.
÷÷L M
End
÷÷M P
(
÷÷P Q
)
÷÷Q R
;
÷÷R S,
k_HandleVisibleCharacterMarker
◊◊( F
.
◊◊F G
End
◊◊G J
(
◊◊J K
)
◊◊K L
;
◊◊L M
continue
ÿÿ( 0
;
ÿÿ0 1
}
ŸŸ$ %
var
€€$ '
ellipsisState
€€( 5
=
€€6 7/
!m_EllipsisInsertionCandidateStack
€€8 Y
.
€€Y Z
Pop
€€Z ]
(
€€] ^
)
€€^ _
;
€€_ `
i
‹‹$ %
=
‹‹& '&
RestoreWordWrappingState
‹‹( @
(
‹‹@ A
ref
‹‹A D
ellipsisState
‹‹E R
)
‹‹R S
;
‹‹S T
i
ﬁﬁ$ %
-=
ﬁﬁ& (
$num
ﬁﬁ) *
;
ﬁﬁ* +
m_characterCount
ﬂﬂ$ 4
-=
ﬂﬂ5 7
$num
ﬂﬂ8 9
;
ﬂﬂ9 :#
characterToSubstitute
‡‡$ 9
.
‡‡9 :
index
‡‡: ?
=
‡‡@ A
m_characterCount
‡‡B R
;
‡‡R S#
characterToSubstitute
··$ 9
.
··9 :
unicode
··: A
=
··B C
$num
··D J
;
··J K
restoreCount
„„$ 0
+=
„„1 3
$num
„„4 5
;
„„5 62
$k_HandleHorizontalLineBreakingMarker
‰‰$ H
.
‰‰H I
End
‰‰I L
(
‰‰L M
)
‰‰M N
;
‰‰N O,
k_HandleVisibleCharacterMarker
ÂÂ$ B
.
ÂÂB C
End
ÂÂC F
(
ÂÂF G
)
ÂÂG H
;
ÂÂH I
continue
ÊÊ$ ,
;
ÊÊ, -
case
ËË  $
TextOverflowModes
ËË% 6
.
ËË6 7
Linked
ËË7 =
:
ËË= >
i
ÈÈ$ %
=
ÈÈ& '&
RestoreWordWrappingState
ÈÈ( @
(
ÈÈ@ A
ref
ÈÈA D"
m_SavedWordWrapState
ÈÈE Y
)
ÈÈY Z
;
ÈÈZ [
if
ÎÎ$ &
(
ÎÎ' (#
m_linkedTextComponent
ÎÎ( =
!=
ÎÎ> @
null
ÎÎA E
)
ÎÎE F
{
ÏÏ$ %#
m_linkedTextComponent
ÌÌ( =
.
ÌÌ= >
text
ÌÌ> B
=
ÌÌC D
text
ÌÌE I
;
ÌÌI J#
m_linkedTextComponent
ÓÓ( =
.
ÓÓ= >
m_inputSource
ÓÓ> K
=
ÓÓL M
m_inputSource
ÓÓN [
;
ÓÓ[ \#
m_linkedTextComponent
ÔÔ( =
.
ÔÔ= >#
firstVisibleCharacter
ÔÔ> S
=
ÔÔT U
m_characterCount
ÔÔV f
;
ÔÔf g#
m_linkedTextComponent
( =
.
= >
ForceMeshUpdate
> M
(
M N
)
N O
;
O P
m_isTextTruncated
ÚÚ( 9
=
ÚÚ: ;
true
ÚÚ< @
;
ÚÚ@ A
}
ÛÛ$ %#
characterToSubstitute
ˆˆ$ 9
.
ˆˆ9 :
index
ˆˆ: ?
=
ˆˆ@ A
m_characterCount
ˆˆB R
;
ˆˆR S#
characterToSubstitute
˜˜$ 9
.
˜˜9 :
unicode
˜˜: A
=
˜˜B C
$num
˜˜D H
;
˜˜H I2
$k_HandleHorizontalLineBreakingMarker
¯¯$ H
.
¯¯H I
End
¯¯I L
(
¯¯L M
)
¯¯M N
;
¯¯N O,
k_HandleVisibleCharacterMarker
˘˘$ B
.
˘˘B C
End
˘˘C F
(
˘˘F G
)
˘˘G H
;
˘˘H I
continue
˙˙$ ,
;
˙˙, -
}
˚˚ 
}
˝˝ 2
$k_HandleHorizontalLineBreakingMarker
ˇˇ <
.
ˇˇ< =
End
ˇˇ= @
(
ˇˇ@ A
)
ˇˇA B
;
ˇˇB C
}
ÄÄ 
if
ÖÖ 
(
ÖÖ 
charCode
ÖÖ  
==
ÖÖ! #
$num
ÖÖ$ %
)
ÖÖ% &
{
ÜÜ 

m_textInfo
áá "
.
áá" #
characterInfo
áá# 0
[
áá0 1
m_characterCount
áá1 A
]
ááA B
.
ááB C
	isVisible
ááC L
=
ááM N
false
ááO T
;
ááT U*
m_lastVisibleCharacterOfLine
àà 4
=
àà5 6
m_characterCount
àà7 G
;
ààG H

m_textInfo
ââ "
.
ââ" #
lineInfo
ââ# +
[
ââ+ ,
m_lineNumber
ââ, 8
]
ââ8 9
.
ââ9 :

spaceCount
ââ: D
+=
ââE G
$num
ââH I
;
ââI J

m_textInfo
ää "
.
ää" #

spaceCount
ää# -
+=
ää. 0
$num
ää1 2
;
ää2 3
}
ãã 
else
åå 
if
åå 
(
åå 
charCode
åå %
==
åå& (
$num
åå) -
)
åå- .
{
çç 

m_textInfo
éé "
.
éé" #
characterInfo
éé# 0
[
éé0 1
m_characterCount
éé1 A
]
ééA B
.
ééB C
	isVisible
ééC L
=
ééM N
false
ééO T
;
ééT U
}
èè 
else
êê 
{
ëë 
if
ìì 
(
ìì "
m_overrideHtmlColors
ìì 0
)
ìì0 1
vertexColor
îî '
=
îî( )
m_fontColor32
îî* 7
;
îî7 8
else
ïï 
vertexColor
ññ '
=
ññ( )
m_htmlColor
ññ* 5
;
ññ5 6)
k_SaveGlyphVertexDataMarker
òò 3
.
òò3 4
Begin
òò4 9
(
òò9 :
)
òò: ;
;
òò; <
if
öö 
(
öö 
m_textElementType
öö -
==
öö. 0!
TMP_TextElementType
öö1 D
.
ööD E
	Character
ööE N
)
ööN O
{
õõ !
SaveGlyphVertexInfo
ùù /
(
ùù/ 0
padding
ùù0 7
,
ùù7 8
style_padding
ùù9 F
,
ùùF G
vertexColor
ùùH S
)
ùùS T
;
ùùT U
}
ûû 
else
üü 
if
üü 
(
üü  !
m_textElementType
üü! 2
==
üü3 5!
TMP_TextElementType
üü6 I
.
üüI J
Sprite
üüJ P
)
üüP Q
{
†† "
SaveSpriteVertexInfo
°° 0
(
°°0 1
vertexColor
°°1 <
)
°°< =
;
°°= >
}
¢¢ )
k_SaveGlyphVertexDataMarker
££ 3
.
££3 4
End
££4 7
(
££7 8
)
££8 9
;
££9 :
if
•• 
(
•• 
isStartOfNewLine
•• ,
)
••, -
{
¶¶ 
isStartOfNewLine
ßß ,
=
ßß- .
false
ßß/ 4
;
ßß4 5+
m_firstVisibleCharacterOfLine
®® 9
=
®®: ;
m_characterCount
®®< L
;
®®L M
}
©© )
m_lineVisibleCharacterCount
´´ 3
+=
´´4 6
$num
´´7 8
;
´´8 9*
m_lastVisibleCharacterOfLine
¨¨ 4
=
¨¨5 6
m_characterCount
¨¨7 G
;
¨¨G H

m_textInfo
≠≠ "
.
≠≠" #
lineInfo
≠≠# +
[
≠≠+ ,
m_lineNumber
≠≠, 8
]
≠≠8 9
.
≠≠9 :

marginLeft
≠≠: D
=
≠≠E F

marginLeft
≠≠G Q
;
≠≠Q R

m_textInfo
ÆÆ "
.
ÆÆ" #
lineInfo
ÆÆ# +
[
ÆÆ+ ,
m_lineNumber
ÆÆ, 8
]
ÆÆ8 9
.
ÆÆ9 :
marginRight
ÆÆ: E
=
ÆÆF G
marginRight
ÆÆH S
;
ÆÆS T
}
ØØ ,
k_HandleVisibleCharacterMarker
±± 2
.
±±2 3
End
±±3 6
(
±±6 7
)
±±7 8
;
±±8 9
}
≤≤ 
else
≥≥ 
{
¥¥ '
k_HandleWhiteSpacesMarker
µµ -
.
µµ- .
Begin
µµ. 3
(
µµ3 4
)
µµ4 5
;
µµ5 6
if
ππ 
(
ππ 
m_overflowMode
ππ &
==
ππ' )
TextOverflowModes
ππ* ;
.
ππ; <
Linked
ππ< B
&&
ππC E
(
ππF G
charCode
ππG O
==
ππP R
$num
ππS U
||
ππV X
charCode
ππY a
==
ππb d
$num
ππe g
)
ππg h
)
ππh i
{
∫∫ 
float
ªª 

textHeight
ªª (
=
ªª) *
m_maxTextAscender
ªª+ <
-
ªª= >
(
ªª? @ 
m_maxLineDescender
ªª@ R
-
ªªS T
m_lineOffset
ªªU a
)
ªªa b
+
ªªc d
(
ªªe f
m_lineOffset
ªªf r
>
ªªs t
$num
ªªu v
&&
ªªw y$
m_IsDrivenLineSpacingªªz è
==ªªê í
falseªªì ò
?ªªô ö!
m_maxLineAscenderªªõ ¨
-ªª≠ Æ%
m_startOfLineAscenderªªØ ƒ
:ªª≈ ∆
$numªª« »
)ªª» …
;ªª…  
int
ΩΩ "
testedCharacterCount
ΩΩ 0
=
ΩΩ1 2
m_characterCount
ΩΩ3 C
;
ΩΩC D
if
øø 
(
øø 

textHeight
øø &
>
øø' (
marginHeight
øø) 5
+
øø6 7
$num
øø8 ?
)
øø? @
{
¿¿ 
if
¬¬ 
(
¬¬  +
m_firstOverflowCharacterIndex
¬¬  =
==
¬¬> @
-
¬¬A B
$num
¬¬B C
)
¬¬C D+
m_firstOverflowCharacterIndex
√√  =
=
√√> ?
m_characterCount
√√@ P
;
√√P Q
i
≈≈ 
=
≈≈ &
RestoreWordWrappingState
≈≈  8
(
≈≈8 9
ref
≈≈9 <#
m_SavedLastValidState
≈≈= R
)
≈≈R S
;
≈≈S T
if
«« 
(
««  #
m_linkedTextComponent
««  5
!=
««6 8
null
««9 =
)
««= >
{
»» #
m_linkedTextComponent
……  5
.
……5 6
text
……6 :
=
……; <
text
……= A
;
……A B#
m_linkedTextComponent
    5
.
  5 6
m_inputSource
  6 C
=
  D E
m_inputSource
  F S
;
  S T#
m_linkedTextComponent
ÀÀ  5
.
ÀÀ5 6#
firstVisibleCharacter
ÀÀ6 K
=
ÀÀL M
m_characterCount
ÀÀN ^
;
ÀÀ^ _#
m_linkedTextComponent
ÃÃ  5
.
ÃÃ5 6
ForceMeshUpdate
ÃÃ6 E
(
ÃÃE F
)
ÃÃF G
;
ÃÃG H
m_isTextTruncated
ŒŒ  1
=
ŒŒ2 3
true
ŒŒ4 8
;
ŒŒ8 9
}
œœ #
characterToSubstitute
““ 1
.
““1 2
index
““2 7
=
““8 9"
testedCharacterCount
““: N
;
““N O#
characterToSubstitute
”” 1
.
””1 2
unicode
””2 9
=
””: ;
$num
””< @
;
””@ A'
k_HandleWhiteSpacesMarker
‘‘ 5
.
‘‘5 6
End
‘‘6 9
(
‘‘9 :
)
‘‘: ;
;
‘‘; <
continue
’’ $
;
’’$ %
}
÷÷ 
}
◊◊ 
if
€€ 
(
€€ 
(
€€ 
charCode
€€ !
==
€€" $
$num
€€% '
||
€€( *
charCode
€€+ 3
==
€€4 6
$num
€€7 9
||
€€: <
charCode
€€= E
==
€€F H
$num
€€I M
||
€€N P
charCode
€€Q Y
==
€€Z \
$num
€€] c
||
€€d f
charCode
€€g o
==
€€p r
$num
€€s y
||
€€z |
charCode€€} Ö
==€€Ü à
$num€€â è
||€€ê í
char€€ì ó
.€€ó ò
IsSeparator€€ò £
(€€£ §
(€€§ •
char€€• ©
)€€© ™
charCode€€™ ≤
)€€≤ ≥
)€€≥ ¥
&&€€µ ∑
charCode€€∏ ¿
!=€€¡ √
$num€€ƒ »
&&€€… À
charCode€€Ã ‘
!=€€’ ◊
$num€€ÿ ﬁ
&&€€ﬂ ·
charCode€€‚ Í
!=€€Î Ì
$num€€Ó Ù
)€€Ù ı
{
‹‹ 

m_textInfo
›› "
.
››" #
lineInfo
››# +
[
››+ ,
m_lineNumber
››, 8
]
››8 9
.
››9 :

spaceCount
››: D
+=
››E G
$num
››H I
;
››I J

m_textInfo
ﬁﬁ "
.
ﬁﬁ" #

spaceCount
ﬁﬁ# -
+=
ﬁﬁ. 0
$num
ﬁﬁ1 2
;
ﬁﬁ2 3
}
ﬂﬂ 
if
·· 
(
·· 
charCode
··  
==
··! #
$num
··$ (
)
··( )

m_textInfo
‚‚ "
.
‚‚" #
lineInfo
‚‚# +
[
‚‚+ ,
m_lineNumber
‚‚, 8
]
‚‚8 9
.
‚‚9 :#
controlCharacterCount
‚‚: O
+=
‚‚P R
$num
‚‚S T
;
‚‚T U'
k_HandleWhiteSpacesMarker
‰‰ -
.
‰‰- .
End
‰‰. 1
(
‰‰1 2
)
‰‰2 3
;
‰‰3 4
}
ÂÂ 
if
ÎÎ 
(
ÎÎ 
m_overflowMode
ÎÎ "
==
ÎÎ# %
TextOverflowModes
ÎÎ& 7
.
ÎÎ7 8
Ellipsis
ÎÎ8 @
&&
ÎÎA C
(
ÎÎD E"
isInjectingCharacter
ÎÎE Y
==
ÎÎZ \
false
ÎÎ] b
||
ÎÎc e
charCode
ÎÎf n
==
ÎÎo q
$num
ÎÎr v
)
ÎÎv w
)
ÎÎw x
{
ÏÏ 
float
ÌÌ 
	fontScale
ÌÌ #
=
ÌÌ$ %
m_currentFontSize
ÌÌ& 7
/
ÌÌ8 9

m_Ellipsis
ÌÌ: D
.
ÌÌD E
	fontAsset
ÌÌE N
.
ÌÌN O

m_FaceInfo
ÌÌO Y
.
ÌÌY Z
	pointSize
ÌÌZ c
*
ÌÌd e

m_Ellipsis
ÌÌf p
.
ÌÌp q
	fontAsset
ÌÌq z
.
ÌÌz {

m_FaceInfoÌÌ{ Ö
.ÌÌÖ Ü
scaleÌÌÜ ã
*ÌÌå ç
(ÌÌé è 
m_isOrthographicÌÌè ü
?ÌÌ† °
$numÌÌ¢ £
:ÌÌ§ •
$numÌÌ¶ ™
)ÌÌ™ ´
;ÌÌ´ ¨
float
ÓÓ 
scale
ÓÓ 
=
ÓÓ  !
	fontScale
ÓÓ" +
*
ÓÓ, -#
m_fontScaleMultiplier
ÓÓ. C
*
ÓÓD E

m_Ellipsis
ÓÓF P
.
ÓÓP Q
	character
ÓÓQ Z
.
ÓÓZ [
m_Scale
ÓÓ[ b
*
ÓÓc d

m_Ellipsis
ÓÓe o
.
ÓÓo p
	character
ÓÓp y
.
ÓÓy z
m_GlyphÓÓz Å
.ÓÓÅ Ç
scaleÓÓÇ á
;ÓÓá à
float
ÔÔ 

marginLeft
ÔÔ $
=
ÔÔ% &
m_marginLeft
ÔÔ' 3
;
ÔÔ3 4
float
 
marginRight
 %
=
& '
m_marginRight
( 5
;
5 6
if
ÛÛ 
(
ÛÛ 
charCode
ÛÛ  
==
ÛÛ! #
$num
ÛÛ$ (
&&
ÛÛ) +
m_characterCount
ÛÛ, <
!=
ÛÛ= ?$
m_firstCharacterOfLine
ÛÛ@ V
)
ÛÛV W
{
ÙÙ 
	fontScale
ıı !
=
ıı" #

m_textInfo
ıı$ .
.
ıı. /
characterInfo
ıı/ <
[
ıı< =
m_characterCount
ıı= M
-
ııN O
$num
ııP Q
]
ııQ R
.
ııR S
	pointSize
ııS \
/
ıı] ^

m_Ellipsis
ıı_ i
.
ııi j
	fontAsset
ııj s
.
ııs t

m_FaceInfo
ııt ~
.
ıı~ 
	pointSizeıı à
*ııâ ä

m_Ellipsisııã ï
.ııï ñ
	fontAssetııñ ü
.ııü †

m_FaceInfoıı† ™
.ıı™ ´
scaleıı´ ∞
*ıı± ≤
(ıı≥ ¥ 
m_isOrthographicıı¥ ƒ
?ıı≈ ∆
$numıı« »
:ıı…  
$numııÀ œ
)ııœ –
;ıı– —
scale
ˆˆ 
=
ˆˆ 
	fontScale
ˆˆ  )
*
ˆˆ* +#
m_fontScaleMultiplier
ˆˆ, A
*
ˆˆB C

m_Ellipsis
ˆˆD N
.
ˆˆN O
	character
ˆˆO X
.
ˆˆX Y
m_Scale
ˆˆY `
*
ˆˆa b

m_Ellipsis
ˆˆc m
.
ˆˆm n
	character
ˆˆn w
.
ˆˆw x
m_Glyph
ˆˆx 
.ˆˆ Ä
scaleˆˆÄ Ö
;ˆˆÖ Ü

marginLeft
˜˜ "
=
˜˜# $

m_textInfo
˜˜% /
.
˜˜/ 0
lineInfo
˜˜0 8
[
˜˜8 9
m_lineNumber
˜˜9 E
]
˜˜E F
.
˜˜F G

marginLeft
˜˜G Q
;
˜˜Q R
marginRight
¯¯ #
=
¯¯$ %

m_textInfo
¯¯& 0
.
¯¯0 1
lineInfo
¯¯1 9
[
¯¯9 :
m_lineNumber
¯¯: F
]
¯¯F G
.
¯¯G H
marginRight
¯¯H S
;
¯¯S T
}
˘˘ 
float
˚˚ 

textHeight
˚˚ $
=
˚˚% &
m_maxTextAscender
˚˚' 8
-
˚˚9 :
(
˚˚; < 
m_maxLineDescender
˚˚< N
-
˚˚O P
m_lineOffset
˚˚Q ]
)
˚˚] ^
+
˚˚_ `
(
˚˚a b
m_lineOffset
˚˚b n
>
˚˚o p
$num
˚˚q r
&&
˚˚s u$
m_IsDrivenLineSpacing˚˚v ã
==˚˚å é
false˚˚è î
?˚˚ï ñ!
m_maxLineAscender˚˚ó ®
-˚˚© ™%
m_startOfLineAscender˚˚´ ¿
:˚˚¡ ¬
$num˚˚√ ƒ
)˚˚ƒ ≈
;˚˚≈ ∆
float
¸¸ 
	textWidth
¸¸ #
=
¸¸$ %
Mathf
¸¸& +
.
¸¸+ ,
Abs
¸¸, /
(
¸¸/ 0

m_xAdvance
¸¸0 :
)
¸¸: ;
+
¸¸< =
(
¸¸> ?
!
¸¸? @
m_isRightToLeft
¸¸@ O
?
¸¸P Q

m_Ellipsis
¸¸R \
.
¸¸\ ]
	character
¸¸] f
.
¸¸f g
m_Glyph
¸¸g n
.
¸¸n o
metrics
¸¸o v
.
¸¸v w 
horizontalAdvance¸¸w à
:¸¸â ä
$num¸¸ã å
)¸¸å ç
*¸¸é è
(¸¸ê ë
$num¸¸ë í
-¸¸ì î#
m_charWidthAdjDelta¸¸ï ®
)¸¸® ©
*¸¸™ ´
scale¸¸¨ ±
;¸¸± ≤
float
˝˝ (
widthOfTextAreaForEllipsis
˝˝ 4
=
˝˝5 6
m_width
˝˝7 >
!=
˝˝? A
-
˝˝B C
$num
˝˝C D
?
˝˝E F
Mathf
˝˝G L
.
˝˝L M
Min
˝˝M P
(
˝˝P Q
marginWidth
˝˝Q \
+
˝˝] ^
$num
˝˝_ f
-
˝˝g h

marginLeft
˝˝i s
-
˝˝t u
marginRight˝˝v Å
,˝˝Å Ç
m_width˝˝É ä
)˝˝ä ã
:˝˝å ç
marginWidth˝˝é ô
+˝˝ö õ
$num˝˝ú £
-˝˝§ •

marginLeft˝˝¶ ∞
-˝˝± ≤
marginRight˝˝≥ æ
;˝˝æ ø
if
ˇˇ 
(
ˇˇ 
	textWidth
ˇˇ !
<
ˇˇ" #(
widthOfTextAreaForEllipsis
ˇˇ$ >
*
ˇˇ? @
(
ˇˇA B 
isJustifiedOrFlush
ˇˇB T
?
ˇˇU V
$num
ˇˇW \
:
ˇˇ] ^
$num
ˇˇ_ c
)
ˇˇc d
&&
ˇˇe g

textHeight
ˇˇh r
<
ˇˇs t
marginHeightˇˇu Å
+ˇˇÇ É
$numˇˇÑ ã
)ˇˇã å
{
ÄÄ #
SaveWordWrappingState
ÅÅ -
(
ÅÅ- .
ref
ÅÅ. 1"
m_SavedEllipsisState
ÅÅ2 F
,
ÅÅF G
i
ÅÅH I
,
ÅÅI J
m_characterCount
ÅÅK [
)
ÅÅ[ \
;
ÅÅ\ ]/
!m_EllipsisInsertionCandidateStack
ÇÇ 9
.
ÇÇ9 :
Push
ÇÇ: >
(
ÇÇ> ?"
m_SavedEllipsisState
ÇÇ? S
)
ÇÇS T
;
ÇÇT U
}
ÉÉ 
}
ÑÑ 

m_textInfo
ää 
.
ää 
characterInfo
ää (
[
ää( )
m_characterCount
ää) 9
]
ää9 :
.
ää: ;

lineNumber
ää; E
=
ääF G
m_lineNumber
ääH T
;
ääT U

m_textInfo
ãã 
.
ãã 
characterInfo
ãã (
[
ãã( )
m_characterCount
ãã) 9
]
ãã9 :
.
ãã: ;

pageNumber
ãã; E
=
ããF G
m_pageNumber
ããH T
;
ããT U
if
çç 
(
çç 
charCode
çç 
!=
çç 
$num
çç  "
&&
çç# %
charCode
çç& .
!=
çç/ 1
$num
çç2 4
&&
çç5 7
charCode
çç8 @
!=
ççA C
$num
ççD F
&&
ççG I"
isInjectingCharacter
ççJ ^
==
çç_ a
false
ççb g
||ççÇ Ñ

m_textInfoççÖ è
.ççè ê
lineInfoççê ò
[ççò ô
m_lineNumberççô •
]çç• ¶
.çç¶ ß
characterCountççß µ
==çç∂ ∏
$numççπ ∫
)çç∫ ª

m_textInfo
éé 
.
éé 
lineInfo
éé '
[
éé' (
m_lineNumber
éé( 4
]
éé4 5
.
éé5 6
	alignment
éé6 ?
=
éé@ A!
m_lineJustification
ééB U
;
ééU V-
k_ComputeCharacterAdvanceMarker
îî /
.
îî/ 0
Begin
îî0 5
(
îî5 6
)
îî6 7
;
îî7 8
if
ïï 
(
ïï 
charCode
ïï 
==
ïï 
$num
ïï  !
)
ïï! "
{
ññ 
float
óó 
tabSize
óó !
=
óó" # 
m_currentFontAsset
óó$ 6
.
óó6 7

m_FaceInfo
óó7 A
.
óóA B
tabWidth
óóB J
*
óóK L 
m_currentFontAsset
óóM _
.
óó_ `
tabSize
óó` g
*
óóh i!
currentElementScale
óój }
;
óó} ~
float
òò 
tabs
òò 
=
òò  
Mathf
òò! &
.
òò& '
Ceil
òò' +
(
òò+ ,

m_xAdvance
òò, 6
/
òò7 8
tabSize
òò9 @
)
òò@ A
*
òòB C
tabSize
òòD K
;
òòK L

m_xAdvance
ôô 
=
ôô  
tabs
ôô! %
>
ôô& '

m_xAdvance
ôô( 2
?
ôô3 4
tabs
ôô5 9
:
ôô: ;

m_xAdvance
ôô< F
+
ôôG H
tabSize
ôôI P
;
ôôP Q
}
öö 
else
õõ 
if
õõ 
(
õõ 
m_monoSpacing
õõ &
!=
õõ' )
$num
õõ* +
)
õõ+ ,
{
úú 

m_xAdvance
ùù 
+=
ùù !
(
ùù" #
m_monoSpacing
ùù# 0
-
ùù1 2
monoAdvance
ùù3 >
+
ùù? @
(
ùùA B
(
ùùB C 
m_currentFontAsset
ùùC U
.
ùùU V!
normalSpacingOffset
ùùV i
+
ùùj k)
characterSpacingAdjustmentùùl Ü
)ùùÜ á
*ùùà â
currentEmScaleùùä ò
)ùùò ô
+ùùö õ

m_cSpacingùùú ¶
)ùù¶ ß
*ùù® ©
(ùù™ ´
$numùù´ ¨
-ùù≠ Æ#
m_charWidthAdjDeltaùùØ ¬
)ùù¬ √
;ùù√ ƒ
if
üü 
(
üü 
isWhiteSpace
üü $
||
üü% '
charCode
üü( 0
==
üü1 3
$num
üü4 :
)
üü: ;

m_xAdvance
†† "
+=
††# %
m_wordSpacing
††& 3
*
††4 5
currentEmScale
††6 D
;
††D E
}
°° 
else
¢¢ 
if
¢¢ 
(
¢¢ 
m_isRightToLeft
¢¢ (
)
¢¢( )
{
££ 

m_xAdvance
§§ 
-=
§§ !
(
§§" #
(
§§# $
glyphAdjustments
§§$ 4
.
§§4 5

m_XAdvance
§§5 ?
*
§§@ A!
currentElementScale
§§B U
+
§§V W
(
§§X Y 
m_currentFontAsset
§§Y k
.
§§k l!
normalSpacingOffset
§§l 
+§§Ä Å*
characterSpacingAdjustment§§Ç ú
+§§ù û%
boldSpacingAdjustment§§ü ¥
)§§¥ µ
*§§∂ ∑
currentEmScale§§∏ ∆
+§§« »

m_cSpacing§§… ”
)§§” ‘
*§§’ ÷
(§§◊ ÿ
$num§§ÿ Ÿ
-§§⁄ €#
m_charWidthAdjDelta§§‹ Ô
)§§Ô 
)§§ Ò
;§§Ò Ú
if
¶¶ 
(
¶¶ 
isWhiteSpace
¶¶ $
||
¶¶% '
charCode
¶¶( 0
==
¶¶1 3
$num
¶¶4 :
)
¶¶: ;

m_xAdvance
ßß "
-=
ßß# %
m_wordSpacing
ßß& 3
*
ßß4 5
currentEmScale
ßß6 D
;
ßßD E
}
®® 
else
©© 
{
™™ 
float
´´ 
scaleFXMultiplier
´´ +
=
´´, -
$num
´´. /
;
´´/ 0
if
¨¨ 
(
¨¨ 
m_isFXMatrixSet
¨¨ '
)
¨¨' (
scaleFXMultiplier
¨¨) :
=
¨¨; <

m_FXMatrix
¨¨= G
.
¨¨G H

lossyScale
¨¨H R
.
¨¨R S
x
¨¨S T
;
¨¨T U

m_xAdvance
ÆÆ 
+=
ÆÆ !
(
ÆÆ" #
(
ÆÆ# $!
currentGlyphMetrics
ÆÆ$ 7
.
ÆÆ7 8
horizontalAdvance
ÆÆ8 I
*
ÆÆJ K
scaleFXMultiplier
ÆÆL ]
+
ÆÆ^ _
glyphAdjustments
ÆÆ` p
.
ÆÆp q

m_XAdvance
ÆÆq {
)
ÆÆ{ |
*
ÆÆ} ~"
currentElementScaleÆÆ í
+ÆÆì î
(ÆÆï ñ"
m_currentFontAssetÆÆñ ®
.ÆÆ® ©#
normalSpacingOffsetÆÆ© º
+ÆÆΩ æ*
characterSpacingAdjustmentÆÆø Ÿ
+ÆÆ⁄ €%
boldSpacingAdjustmentÆÆ‹ Ò
)ÆÆÒ Ú
*ÆÆÛ Ù
currentEmScaleÆÆı É
+ÆÆÑ Ö

m_cSpacingÆÆÜ ê
)ÆÆê ë
*ÆÆí ì
(ÆÆî ï
$numÆÆï ñ
-ÆÆó ò#
m_charWidthAdjDeltaÆÆô ¨
)ÆÆ¨ ≠
;ÆÆ≠ Æ
if
∞∞ 
(
∞∞ 
isWhiteSpace
∞∞ $
||
∞∞% '
charCode
∞∞( 0
==
∞∞1 3
$num
∞∞4 :
)
∞∞: ;

m_xAdvance
±± "
+=
±±# %
m_wordSpacing
±±& 3
*
±±4 5
currentEmScale
±±6 D
;
±±D E
}
≤≤ 

m_textInfo
µµ 
.
µµ 
characterInfo
µµ (
[
µµ( )
m_characterCount
µµ) 9
]
µµ9 :
.
µµ: ;
xAdvance
µµ; C
=
µµD E

m_xAdvance
µµF P
;
µµP Q-
k_ComputeCharacterAdvanceMarker
∂∂ /
.
∂∂/ 0
End
∂∂0 3
(
∂∂3 4
)
∂∂4 5
;
∂∂5 6
if
ºº 
(
ºº 
charCode
ºº 
==
ºº 
$num
ºº  "
)
ºº" #
{
ΩΩ *
k_HandleCarriageReturnMarker
ææ 0
.
ææ0 1
Begin
ææ1 6
(
ææ6 7
)
ææ7 8
;
ææ8 9

m_xAdvance
øø 
=
øø  
$num
øø! "
+
øø# $

tag_Indent
øø% /
;
øø/ 0*
k_HandleCarriageReturnMarker
¿¿ 0
.
¿¿0 1
End
¿¿1 4
(
¿¿4 5
)
¿¿5 6
;
¿¿6 7
}
¡¡ 
if
«« 
(
«« 
charCode
«« 
==
«« 
$num
««  "
||
««# %
charCode
««& .
==
««/ 1
$num
««2 4
||
««5 7
charCode
««8 @
==
««A C
$num
««D H
||
««I K
charCode
««L T
==
««U W
$num
««X ^
||
««_ a
charCode
««b j
==
««k m
$num
««n t
||
««u w
(
««x y
charCode««y Å
==««Ç Ñ
$num««Ö â
&&««ä å$
isInjectingCharacter««ç °
)««° ¢
||««£ • 
m_characterCount««¶ ∂
==««∑ π#
totalCharacterCount««∫ Õ
-««Œ œ
$num««– —
)««— “
{
»» +
k_HandleLineTerminationMarker
…… 1
.
……1 2
Begin
……2 7
(
……7 8
)
……8 9
;
……9 :
float
ÃÃ %
baselineAdjustmentDelta
ÃÃ 1
=
ÃÃ2 3
m_maxLineAscender
ÃÃ4 E
-
ÃÃF G#
m_startOfLineAscender
ÃÃH ]
;
ÃÃ] ^
if
ÕÕ 
(
ÕÕ 
m_lineOffset
ÕÕ $
>
ÕÕ% &
$num
ÕÕ' (
&&
ÕÕ) +
Math
ÕÕ, 0
.
ÕÕ0 1
Abs
ÕÕ1 4
(
ÕÕ4 5%
baselineAdjustmentDelta
ÕÕ5 L
)
ÕÕL M
>
ÕÕN O
$num
ÕÕP U
&&
ÕÕV X#
m_IsDrivenLineSpacing
ÕÕY n
==
ÕÕo q
false
ÕÕr w
&&
ÕÕx z
!
ÕÕ{ |
m_isNewPageÕÕ| á
)ÕÕá à
{
ŒŒ 
AdjustLineOffset
–– (
(
––( )$
m_firstCharacterOfLine
––) ?
,
––? @
m_characterCount
––A Q
,
––Q R%
baselineAdjustmentDelta
––S j
)
––j k
;
––k l 
m_ElementDescender
—— *
-=
——+ -%
baselineAdjustmentDelta
——. E
;
——E F
m_lineOffset
““ $
+=
““% '%
baselineAdjustmentDelta
““( ?
;
““? @
if
’’ 
(
’’ "
m_SavedEllipsisState
’’ 0
.
’’0 1

lineNumber
’’1 ;
==
’’< >
m_lineNumber
’’? K
)
’’K L
{
÷÷ "
m_SavedEllipsisState
◊◊ 0
=
◊◊1 2/
!m_EllipsisInsertionCandidateStack
◊◊3 T
.
◊◊T U
Pop
◊◊U X
(
◊◊X Y
)
◊◊Y Z
;
◊◊Z ["
m_SavedEllipsisState
ÿÿ 0
.
ÿÿ0 1!
startOfLineAscender
ÿÿ1 D
+=
ÿÿE G%
baselineAdjustmentDelta
ÿÿH _
;
ÿÿ_ `"
m_SavedEllipsisState
ŸŸ 0
.
ŸŸ0 1

lineOffset
ŸŸ1 ;
+=
ŸŸ< >%
baselineAdjustmentDelta
ŸŸ? V
;
ŸŸV W/
!m_EllipsisInsertionCandidateStack
⁄⁄ =
.
⁄⁄= >
Push
⁄⁄> B
(
⁄⁄B C"
m_SavedEllipsisState
⁄⁄C W
)
⁄⁄W X
;
⁄⁄X Y
}
€€ 
}
‹‹ 
m_isNewPage
›› 
=
››  !
false
››" '
;
››' (
float
‡‡ 
lineAscender
‡‡ &
=
‡‡' (
m_maxLineAscender
‡‡) :
-
‡‡; <
m_lineOffset
‡‡= I
;
‡‡I J
float
·· 
lineDescender
·· '
=
··( ) 
m_maxLineDescender
··* <
-
··= >
m_lineOffset
··? K
;
··K L 
m_ElementDescender
‰‰ &
=
‰‰' ( 
m_ElementDescender
‰‰) ;
<
‰‰< =
lineDescender
‰‰> K
?
‰‰L M 
m_ElementDescender
‰‰N `
:
‰‰a b
lineDescender
‰‰c p
;
‰‰p q
if
ÂÂ 
(
ÂÂ 
!
ÂÂ &
isMaxVisibleDescenderSet
ÂÂ 1
)
ÂÂ1 2!
maxVisibleDescender
ÊÊ +
=
ÊÊ, - 
m_ElementDescender
ÊÊ. @
;
ÊÊ@ A
if
ËË 
(
ËË &
m_useMaxVisibleDescender
ËË 0
&&
ËË1 3
(
ËË4 5
m_characterCount
ËË5 E
>=
ËËF H$
m_maxVisibleCharacters
ËËI _
||
ËË` b
m_lineNumber
ËËc o
>=
ËËp r 
m_maxVisibleLinesËËs Ñ
)ËËÑ Ö
)ËËÖ Ü&
isMaxVisibleDescenderSet
ÈÈ 0
=
ÈÈ1 2
true
ÈÈ3 7
;
ÈÈ7 8

m_textInfo
ÏÏ 
.
ÏÏ 
lineInfo
ÏÏ '
[
ÏÏ' (
m_lineNumber
ÏÏ( 4
]
ÏÏ4 5
.
ÏÏ5 6!
firstCharacterIndex
ÏÏ6 I
=
ÏÏJ K$
m_firstCharacterOfLine
ÏÏL b
;
ÏÏb c

m_textInfo
ÌÌ 
.
ÌÌ 
lineInfo
ÌÌ '
[
ÌÌ' (
m_lineNumber
ÌÌ( 4
]
ÌÌ4 5
.
ÌÌ5 6(
firstVisibleCharacterIndex
ÌÌ6 P
=
ÌÌQ R+
m_firstVisibleCharacterOfLine
ÌÌS p
=
ÌÌq r%
m_firstCharacterOfLineÌÌs â
>ÌÌä ã-
m_firstVisibleCharacterOfLineÌÌå ©
?ÌÌ™ ´&
m_firstCharacterOfLineÌÌ¨ ¬
:ÌÌ√ ƒ-
m_firstVisibleCharacterOfLineÌÌ≈ ‚
;ÌÌ‚ „

m_textInfo
ÓÓ 
.
ÓÓ 
lineInfo
ÓÓ '
[
ÓÓ' (
m_lineNumber
ÓÓ( 4
]
ÓÓ4 5
.
ÓÓ5 6 
lastCharacterIndex
ÓÓ6 H
=
ÓÓI J#
m_lastCharacterOfLine
ÓÓK `
=
ÓÓa b
m_characterCount
ÓÓc s
;
ÓÓs t

m_textInfo
ÔÔ 
.
ÔÔ 
lineInfo
ÔÔ '
[
ÔÔ' (
m_lineNumber
ÔÔ( 4
]
ÔÔ4 5
.
ÔÔ5 6'
lastVisibleCharacterIndex
ÔÔ6 O
=
ÔÔP Q*
m_lastVisibleCharacterOfLine
ÔÔR n
=
ÔÔo p+
m_lastVisibleCharacterOfLineÔÔq ç
<ÔÔé è-
m_firstVisibleCharacterOfLineÔÔê ≠
?ÔÔÆ Ø-
m_firstVisibleCharacterOfLineÔÔ∞ Õ
:ÔÔŒ œ,
m_lastVisibleCharacterOfLineÔÔ– Ï
;ÔÔÏ Ì

m_textInfo
ÒÒ 
.
ÒÒ 
lineInfo
ÒÒ '
[
ÒÒ' (
m_lineNumber
ÒÒ( 4
]
ÒÒ4 5
.
ÒÒ5 6
characterCount
ÒÒ6 D
=
ÒÒE F

m_textInfo
ÒÒG Q
.
ÒÒQ R
lineInfo
ÒÒR Z
[
ÒÒZ [
m_lineNumber
ÒÒ[ g
]
ÒÒg h
.
ÒÒh i 
lastCharacterIndex
ÒÒi {
-
ÒÒ| }

m_textInfoÒÒ~ à
.ÒÒà â
lineInfoÒÒâ ë
[ÒÒë í
m_lineNumberÒÒí û
]ÒÒû ü
.ÒÒü †#
firstCharacterIndexÒÒ† ≥
+ÒÒ¥ µ
$numÒÒ∂ ∑
;ÒÒ∑ ∏

m_textInfo
ÚÚ 
.
ÚÚ 
lineInfo
ÚÚ '
[
ÚÚ' (
m_lineNumber
ÚÚ( 4
]
ÚÚ4 5
.
ÚÚ5 6#
visibleCharacterCount
ÚÚ6 K
=
ÚÚL M)
m_lineVisibleCharacterCount
ÚÚN i
;
ÚÚi j

m_textInfo
ÛÛ 
.
ÛÛ 
lineInfo
ÛÛ '
[
ÛÛ' (
m_lineNumber
ÛÛ( 4
]
ÛÛ4 5
.
ÛÛ5 6
lineExtents
ÛÛ6 A
.
ÛÛA B
min
ÛÛB E
=
ÛÛF G
new
ÛÛH K
Vector2
ÛÛL S
(
ÛÛS T

m_textInfo
ÛÛT ^
.
ÛÛ^ _
characterInfo
ÛÛ_ l
[
ÛÛl m,
m_firstVisibleCharacterOfLineÛÛm ä
]ÛÛä ã
.ÛÛã å

bottomLeftÛÛå ñ
.ÛÛñ ó
xÛÛó ò
,ÛÛò ô
lineDescenderÛÛö ß
)ÛÛß ®
;ÛÛ® ©

m_textInfo
ÙÙ 
.
ÙÙ 
lineInfo
ÙÙ '
[
ÙÙ' (
m_lineNumber
ÙÙ( 4
]
ÙÙ4 5
.
ÙÙ5 6
lineExtents
ÙÙ6 A
.
ÙÙA B
max
ÙÙB E
=
ÙÙF G
new
ÙÙH K
Vector2
ÙÙL S
(
ÙÙS T

m_textInfo
ÙÙT ^
.
ÙÙ^ _
characterInfo
ÙÙ_ l
[
ÙÙl m+
m_lastVisibleCharacterOfLineÙÙm â
]ÙÙâ ä
.ÙÙä ã
topRightÙÙã ì
.ÙÙì î
xÙÙî ï
,ÙÙï ñ
lineAscenderÙÙó £
)ÙÙ£ §
;ÙÙ§ •

m_textInfo
ıı 
.
ıı 
lineInfo
ıı '
[
ıı' (
m_lineNumber
ıı( 4
]
ıı4 5
.
ıı5 6
length
ıı6 <
=
ıı= >

m_textInfo
ıı? I
.
ııI J
lineInfo
ııJ R
[
ııR S
m_lineNumber
ııS _
]
ıı_ `
.
ıı` a
lineExtents
ııa l
.
ııl m
max
ıım p
.
ııp q
x
ııq r
-
ııs t
(
ııu v
padding
ııv }
*
ıı~ #
currentElementScaleııÄ ì
)ııì î
;ııî ï

m_textInfo
ˆˆ 
.
ˆˆ 
lineInfo
ˆˆ '
[
ˆˆ' (
m_lineNumber
ˆˆ( 4
]
ˆˆ4 5
.
ˆˆ5 6
width
ˆˆ6 ;
=
ˆˆ< =
widthOfTextArea
ˆˆ> M
;
ˆˆM N
if
¯¯ 
(
¯¯ 

m_textInfo
¯¯ "
.
¯¯" #
lineInfo
¯¯# +
[
¯¯+ ,
m_lineNumber
¯¯, 8
]
¯¯8 9
.
¯¯9 :
characterCount
¯¯: H
==
¯¯I K
$num
¯¯L M
)
¯¯M N

m_textInfo
˘˘ "
.
˘˘" #
lineInfo
˘˘# +
[
˘˘+ ,
m_lineNumber
˘˘, 8
]
˘˘8 9
.
˘˘9 :
	alignment
˘˘: C
=
˘˘D E!
m_lineJustification
˘˘F Y
;
˘˘Y Z
float
˚˚ 
maxAdvanceOffset
˚˚ *
=
˚˚+ ,
(
˚˚- .
(
˚˚. / 
m_currentFontAsset
˚˚/ A
.
˚˚A B!
normalSpacingOffset
˚˚B U
+
˚˚V W(
characterSpacingAdjustment
˚˚X r
+
˚˚s t$
boldSpacingAdjustment˚˚u ä
)˚˚ä ã
*˚˚å ç
currentEmScale˚˚é ú
-˚˚ù û

m_cSpacing˚˚ü ©
)˚˚© ™
*˚˚´ ¨
(˚˚≠ Æ
$num˚˚Æ Ø
-˚˚∞ ±#
m_charWidthAdjDelta˚˚≤ ≈
)˚˚≈ ∆
;˚˚∆ «
if
¸¸ 
(
¸¸ 

m_textInfo
¸¸ "
.
¸¸" #
characterInfo
¸¸# 0
[
¸¸0 1*
m_lastVisibleCharacterOfLine
¸¸1 M
]
¸¸M N
.
¸¸N O
	isVisible
¸¸O X
)
¸¸X Y

m_textInfo
˝˝ "
.
˝˝" #
lineInfo
˝˝# +
[
˝˝+ ,
m_lineNumber
˝˝, 8
]
˝˝8 9
.
˝˝9 :

maxAdvance
˝˝: D
=
˝˝E F

m_textInfo
˝˝G Q
.
˝˝Q R
characterInfo
˝˝R _
[
˝˝_ `*
m_lastVisibleCharacterOfLine
˝˝` |
]
˝˝| }
.
˝˝} ~
xAdvance˝˝~ Ü
+˝˝á à
(˝˝â ä
m_isRightToLeft˝˝ä ô
?˝˝ö õ 
maxAdvanceOffset˝˝ú ¨
:˝˝≠ Æ
-˝˝Ø ∞ 
maxAdvanceOffset˝˝± ¡
)˝˝¡ ¬
;˝˝¬ √
else
˛˛ 

m_textInfo
ˇˇ "
.
ˇˇ" #
lineInfo
ˇˇ# +
[
ˇˇ+ ,
m_lineNumber
ˇˇ, 8
]
ˇˇ8 9
.
ˇˇ9 :

maxAdvance
ˇˇ: D
=
ˇˇE F

m_textInfo
ˇˇG Q
.
ˇˇQ R
characterInfo
ˇˇR _
[
ˇˇ_ `#
m_lastCharacterOfLine
ˇˇ` u
]
ˇˇu v
.
ˇˇv w
xAdvance
ˇˇw 
+ˇˇÄ Å
(ˇˇÇ É
m_isRightToLeftˇˇÉ í
?ˇˇì î 
maxAdvanceOffsetˇˇï •
:ˇˇ¶ ß
-ˇˇ® © 
maxAdvanceOffsetˇˇ™ ∫
)ˇˇ∫ ª
;ˇˇª º

m_textInfo
ÅÅ 
.
ÅÅ 
lineInfo
ÅÅ '
[
ÅÅ' (
m_lineNumber
ÅÅ( 4
]
ÅÅ4 5
.
ÅÅ5 6
baseline
ÅÅ6 >
=
ÅÅ? @
$num
ÅÅA B
-
ÅÅC D
m_lineOffset
ÅÅE Q
;
ÅÅQ R

m_textInfo
ÇÇ 
.
ÇÇ 
lineInfo
ÇÇ '
[
ÇÇ' (
m_lineNumber
ÇÇ( 4
]
ÇÇ4 5
.
ÇÇ5 6
ascender
ÇÇ6 >
=
ÇÇ? @
lineAscender
ÇÇA M
;
ÇÇM N

m_textInfo
ÉÉ 
.
ÉÉ 
lineInfo
ÉÉ '
[
ÉÉ' (
m_lineNumber
ÉÉ( 4
]
ÉÉ4 5
.
ÉÉ5 6
	descender
ÉÉ6 ?
=
ÉÉ@ A
lineDescender
ÉÉB O
;
ÉÉO P

m_textInfo
ÑÑ 
.
ÑÑ 
lineInfo
ÑÑ '
[
ÑÑ' (
m_lineNumber
ÑÑ( 4
]
ÑÑ4 5
.
ÑÑ5 6

lineHeight
ÑÑ6 @
=
ÑÑA B
lineAscender
ÑÑC O
-
ÑÑP Q
lineDescender
ÑÑR _
+
ÑÑ` a
lineGap
ÑÑb i
*
ÑÑj k
	baseScale
ÑÑl u
;
ÑÑu v
if
áá 
(
áá 
charCode
áá  
==
áá! #
$num
áá$ &
||
áá' )
charCode
áá* 2
==
áá3 5
$num
áá6 8
||
áá9 ;
charCode
áá< D
==
ááE G
$num
ááH L
||
ááM O
charCode
ááP X
==
ááY [
$num
áá\ b
||
áác e
charCode
ááf n
==
ááo q
$num
áár x
)
ááx y
{
àà #
SaveWordWrappingState
ää -
(
ää- .
ref
ää. 1
m_SavedLineState
ää2 B
,
ääB C
i
ääD E
,
ääE F
m_characterCount
ääG W
)
ääW X
;
ääX Y
m_lineNumber
åå $
+=
åå% '
$num
åå( )
;
åå) *
isStartOfNewLine
çç (
=
çç) *
true
çç+ /
;
çç/ 0$
ignoreNonBreakingSpace
éé .
=
éé/ 0
false
éé1 6
;
éé6 7
isFirstWordOfLine
èè )
=
èè* +
true
èè, 0
;
èè0 1$
m_firstCharacterOfLine
ëë .
=
ëë/ 0
m_characterCount
ëë1 A
+
ëëB C
$num
ëëD E
;
ëëE F)
m_lineVisibleCharacterCount
íí 3
=
íí4 5
$num
íí6 7
;
íí7 8
if
ïï 
(
ïï 
m_lineNumber
ïï (
>=
ïï) +

m_textInfo
ïï, 6
.
ïï6 7
lineInfo
ïï7 ?
.
ïï? @
Length
ïï@ F
)
ïïF G
ResizeLineExtents
ññ -
(
ññ- .
m_lineNumber
ññ. :
)
ññ: ;
;
ññ; <
float
òò !
lastVisibleAscender
òò 1
=
òò2 3

m_textInfo
òò4 >
.
òò> ?
characterInfo
òò? L
[
òòL M
m_characterCount
òòM ]
]
òò] ^
.
òò^ _
adjustedAscender
òò_ o
;
òòo p
if
õõ 
(
õõ 
m_lineHeight
õõ (
==
õõ) +
TMP_Math
õõ, 4
.
õõ4 5
FLOAT_UNSET
õõ5 @
)
õõ@ A
{
úú 
float
ùù !
lineOffsetDelta
ùù" 1
=
ùù2 3
$num
ùù4 5
-
ùù6 7 
m_maxLineDescender
ùù8 J
+
ùùK L!
lastVisibleAscender
ùùM `
+
ùùa b
(
ùùc d
lineGap
ùùd k
+
ùùl m!
m_lineSpacingDeltaùùn Ä
)ùùÄ Å
*ùùÇ É
	baseScaleùùÑ ç
+ùùé è
(ùùê ë
m_lineSpacingùùë û
+ùùü †
(ùù° ¢
charCodeùù¢ ™
==ùù´ ≠
$numùùÆ ∞
||ùù± ≥
charCodeùù¥ º
==ùùΩ ø
$numùù¿ ∆
?ùù« »"
m_paragraphSpacingùù… €
:ùù‹ ›
$numùùﬁ ﬂ
)ùùﬂ ‡
)ùù‡ ·
*ùù‚ „
currentEmScaleùù‰ Ú
;ùùÚ Û
m_lineOffset
ûû (
+=
ûû) +
lineOffsetDelta
ûû, ;
;
ûû; <#
m_IsDrivenLineSpacing
üü 1
=
üü2 3
false
üü4 9
;
üü9 :
}
†† 
else
°° 
{
¢¢ 
m_lineOffset
££ (
+=
££) +
m_lineHeight
££, 8
+
££9 :
(
££; <
m_lineSpacing
££< I
+
££J K
(
££L M
charCode
££M U
==
££V X
$num
££Y [
||
££\ ^
charCode
££_ g
==
££h j
$num
££k q
?
££r s!
m_paragraphSpacing££t Ü
:££á à
$num££â ä
)££ä ã
)££ã å
*££ç é
currentEmScale££è ù
;££ù û#
m_IsDrivenLineSpacing
§§ 1
=
§§2 3
true
§§4 8
;
§§8 9
}
•• 
m_maxLineAscender
ßß )
=
ßß* +"
k_LargeNegativeFloat
ßß, @
;
ßß@ A 
m_maxLineDescender
®® *
=
®®+ ,"
k_LargePositiveFloat
®®- A
;
®®A B#
m_startOfLineAscender
©© -
=
©©. /!
lastVisibleAscender
©©0 C
;
©©C D

m_xAdvance
´´ "
=
´´# $
$num
´´% &
+
´´' (
tag_LineIndent
´´) 7
+
´´8 9

tag_Indent
´´: D
;
´´D E#
SaveWordWrappingState
≠≠ -
(
≠≠- .
ref
≠≠. 1"
m_SavedWordWrapState
≠≠2 F
,
≠≠F G
i
≠≠H I
,
≠≠I J
m_characterCount
≠≠K [
)
≠≠[ \
;
≠≠\ ]#
SaveWordWrappingState
ÆÆ -
(
ÆÆ- .
ref
ÆÆ. 1#
m_SavedLastValidState
ÆÆ2 G
,
ÆÆG H
i
ÆÆI J
,
ÆÆJ K
m_characterCount
ÆÆL \
)
ÆÆ\ ]
;
ÆÆ] ^
m_characterCount
∞∞ (
+=
∞∞) +
$num
∞∞, -
;
∞∞- .+
k_HandleLineTerminationMarker
≤≤ 5
.
≤≤5 6
End
≤≤6 9
(
≤≤9 :
)
≤≤: ;
;
≤≤; <
continue
¥¥  
;
¥¥  !
}
µµ 
if
∏∏ 
(
∏∏ 
charCode
∏∏  
==
∏∏! #
$num
∏∏$ (
)
∏∏( )
i
ππ 
=
ππ #
m_TextProcessingArray
ππ 1
.
ππ1 2
Length
ππ2 8
;
ππ8 9+
k_HandleLineTerminationMarker
ªª 1
.
ªª1 2
End
ªª2 5
(
ªª5 6
)
ªª6 7
;
ªª7 8
}
ºº "
k_SavePageInfoMarker
¬¬ $
.
¬¬$ %
Begin
¬¬% *
(
¬¬* +
)
¬¬+ ,
;
¬¬, -
if
ƒƒ 
(
ƒƒ 

m_textInfo
ƒƒ 
.
ƒƒ 
characterInfo
ƒƒ ,
[
ƒƒ, -
m_characterCount
ƒƒ- =
]
ƒƒ= >
.
ƒƒ> ?
	isVisible
ƒƒ? H
)
ƒƒH I
{
≈≈ 
m_meshExtents
∆∆ !
.
∆∆! "
min
∆∆" %
.
∆∆% &
x
∆∆& '
=
∆∆( )
Mathf
∆∆* /
.
∆∆/ 0
Min
∆∆0 3
(
∆∆3 4
m_meshExtents
∆∆4 A
.
∆∆A B
min
∆∆B E
.
∆∆E F
x
∆∆F G
,
∆∆G H

m_textInfo
∆∆I S
.
∆∆S T
characterInfo
∆∆T a
[
∆∆a b
m_characterCount
∆∆b r
]
∆∆r s
.
∆∆s t

bottomLeft
∆∆t ~
.
∆∆~ 
x∆∆ Ä
)∆∆Ä Å
;∆∆Å Ç
m_meshExtents
«« !
.
««! "
min
««" %
.
««% &
y
««& '
=
««( )
Mathf
««* /
.
««/ 0
Min
««0 3
(
««3 4
m_meshExtents
««4 A
.
««A B
min
««B E
.
««E F
y
««F G
,
««G H

m_textInfo
««I S
.
««S T
characterInfo
««T a
[
««a b
m_characterCount
««b r
]
««r s
.
««s t

bottomLeft
««t ~
.
««~ 
y«« Ä
)««Ä Å
;««Å Ç
m_meshExtents
…… !
.
……! "
max
……" %
.
……% &
x
……& '
=
……( )
Mathf
……* /
.
……/ 0
Max
……0 3
(
……3 4
m_meshExtents
……4 A
.
……A B
max
……B E
.
……E F
x
……F G
,
……G H

m_textInfo
……I S
.
……S T
characterInfo
……T a
[
……a b
m_characterCount
……b r
]
……r s
.
……s t
topRight
……t |
.
……| }
x
……} ~
)
……~ 
;…… Ä
m_meshExtents
   !
.
  ! "
max
  " %
.
  % &
y
  & '
=
  ( )
Mathf
  * /
.
  / 0
Max
  0 3
(
  3 4
m_meshExtents
  4 A
.
  A B
max
  B E
.
  E F
y
  F G
,
  G H

m_textInfo
  I S
.
  S T
characterInfo
  T a
[
  a b
m_characterCount
  b r
]
  r s
.
  s t
topRight
  t |
.
  | }
y
  } ~
)
  ~ 
;   Ä
}
ŒŒ 
if
““ 
(
““ 
m_overflowMode
““ "
==
““# %
TextOverflowModes
““& 7
.
““7 8
Page
““8 <
&&
““= ?
charCode
““@ H
!=
““I K
$num
““L N
&&
““O Q
charCode
““R Z
!=
““[ ]
$num
““^ `
&&
““a c
charCode
““d l
!=
““m o
$num
““p r
&&
““s u
charCode
““v ~
!=““ Å
$num““Ç à
&&““â ã
charCode““å î
!=““ï ó
$num““ò û
)““û ü
{
”” 
if
’’ 
(
’’ 
m_pageNumber
’’ $
+
’’% &
$num
’’' (
>
’’) *

m_textInfo
’’+ 5
.
’’5 6
pageInfo
’’6 >
.
’’> ?
Length
’’? E
)
’’E F
TMP_TextInfo
÷÷ $
.
÷÷$ %
Resize
÷÷% +
(
÷÷+ ,
ref
÷÷, /

m_textInfo
÷÷0 :
.
÷÷: ;
pageInfo
÷÷; C
,
÷÷C D
m_pageNumber
÷÷E Q
+
÷÷R S
$num
÷÷T U
,
÷÷U V
true
÷÷W [
)
÷÷[ \
;
÷÷\ ]

m_textInfo
ÿÿ 
.
ÿÿ 
pageInfo
ÿÿ '
[
ÿÿ' (
m_pageNumber
ÿÿ( 4
]
ÿÿ4 5
.
ÿÿ5 6
ascender
ÿÿ6 >
=
ÿÿ? @
m_PageAscender
ÿÿA O
;
ÿÿO P

m_textInfo
ŸŸ 
.
ŸŸ 
pageInfo
ŸŸ '
[
ŸŸ' (
m_pageNumber
ŸŸ( 4
]
ŸŸ4 5
.
ŸŸ5 6
	descender
ŸŸ6 ?
=
ŸŸ@ A 
m_ElementDescender
ŸŸB T
<
ŸŸU V

m_textInfo
ŸŸW a
.
ŸŸa b
pageInfo
ŸŸb j
[
ŸŸj k
m_pageNumber
ŸŸk w
]
ŸŸw x
.
ŸŸx y
	descenderŸŸy Ç
?
⁄⁄  
m_ElementDescender
⁄⁄ ,
:
€€ 

m_textInfo
€€ $
.
€€$ %
pageInfo
€€% -
[
€€- .
m_pageNumber
€€. :
]
€€: ;
.
€€; <
	descender
€€< E
;
€€E F
if
›› 
(
›› 
m_pageNumber
›› $
==
››% '
$num
››( )
&&
››* ,
m_characterCount
››- =
==
››> @
$num
››A B
)
››B C

m_textInfo
ﬁﬁ "
.
ﬁﬁ" #
pageInfo
ﬁﬁ# +
[
ﬁﬁ+ ,
m_pageNumber
ﬁﬁ, 8
]
ﬁﬁ8 9
.
ﬁﬁ9 :!
firstCharacterIndex
ﬁﬁ: M
=
ﬁﬁN O
m_characterCount
ﬁﬁP `
;
ﬁﬁ` a
else
ﬂﬂ 
if
ﬂﬂ 
(
ﬂﬂ 
m_characterCount
ﬂﬂ -
>
ﬂﬂ. /
$num
ﬂﬂ0 1
&&
ﬂﬂ2 4
m_pageNumber
ﬂﬂ5 A
!=
ﬂﬂB D

m_textInfo
ﬂﬂE O
.
ﬂﬂO P
characterInfo
ﬂﬂP ]
[
ﬂﬂ] ^
m_characterCount
ﬂﬂ^ n
-
ﬂﬂo p
$num
ﬂﬂq r
]
ﬂﬂr s
.
ﬂﬂs t

pageNumber
ﬂﬂt ~
)
ﬂﬂ~ 
{
‡‡ 

m_textInfo
·· "
.
··" #
pageInfo
··# +
[
··+ ,
m_pageNumber
··, 8
-
··9 :
$num
··; <
]
··< =
.
··= > 
lastCharacterIndex
··> P
=
··Q R
m_characterCount
··S c
-
··d e
$num
··f g
;
··g h

m_textInfo
‚‚ "
.
‚‚" #
pageInfo
‚‚# +
[
‚‚+ ,
m_pageNumber
‚‚, 8
]
‚‚8 9
.
‚‚9 :!
firstCharacterIndex
‚‚: M
=
‚‚N O
m_characterCount
‚‚P `
;
‚‚` a
}
„„ 
else
‰‰ 
if
‰‰ 
(
‰‰ 
m_characterCount
‰‰ -
==
‰‰. 0!
totalCharacterCount
‰‰1 D
-
‰‰E F
$num
‰‰G H
)
‰‰H I

m_textInfo
ÂÂ "
.
ÂÂ" #
pageInfo
ÂÂ# +
[
ÂÂ+ ,
m_pageNumber
ÂÂ, 8
]
ÂÂ8 9
.
ÂÂ9 : 
lastCharacterIndex
ÂÂ: L
=
ÂÂM N
m_characterCount
ÂÂO _
;
ÂÂ_ `
}
ÊÊ "
k_SavePageInfoMarker
ÁÁ $
.
ÁÁ$ %
End
ÁÁ% (
(
ÁÁ( )
)
ÁÁ) *
;
ÁÁ* +
if
ÌÌ 
(
ÌÌ "
m_enableWordWrapping
ÌÌ (
||
ÌÌ) +
m_overflowMode
ÌÌ, :
==
ÌÌ; =
TextOverflowModes
ÌÌ> O
.
ÌÌO P
Truncate
ÌÌP X
||
ÌÌY [
m_overflowMode
ÌÌ\ j
==
ÌÌk m
TextOverflowModes
ÌÌn 
.ÌÌ Ä
EllipsisÌÌÄ à
||ÌÌâ ã
m_overflowModeÌÌå ö
==ÌÌõ ù!
TextOverflowModesÌÌû Ø
.ÌÌØ ∞
LinkedÌÌ∞ ∂
)ÌÌ∂ ∑
{
ÓÓ *
k_SaveProcessingStatesMarker
ÔÔ 0
.
ÔÔ0 1
Begin
ÔÔ1 6
(
ÔÔ6 7
)
ÔÔ7 8
;
ÔÔ8 9
if
ÒÒ 
(
ÒÒ 
(
ÒÒ 
isWhiteSpace
ÒÒ %
||
ÒÒ& (
charCode
ÒÒ) 1
==
ÒÒ2 4
$num
ÒÒ5 ;
||
ÒÒ< >
charCode
ÒÒ? G
==
ÒÒH J
$num
ÒÒK O
||
ÒÒP R
charCode
ÒÒS [
==
ÒÒ\ ^
$num
ÒÒ_ c
)
ÒÒc d
&&
ÒÒe g
(
ÒÒh i
!
ÒÒi j"
m_isNonBreakingSpace
ÒÒj ~
||ÒÒ Å&
ignoreNonBreakingSpaceÒÒÇ ò
)ÒÒò ô
&&ÒÒö ú
charCodeÒÒù •
!=ÒÒ¶ ®
$numÒÒ© ≠
&&ÒÒÆ ∞
charCodeÒÒ± π
!=ÒÒ∫ º
$numÒÒΩ √
&&ÒÒƒ ∆
charCodeÒÒ« œ
!=ÒÒ– “
$numÒÒ” Ÿ
&&ÒÒ⁄ ‹
charCodeÒÒ› Â
!=ÒÒÊ Ë
$numÒÒÈ Ô
&&ÒÒ Ú
charCodeÒÒÛ ˚
!=ÒÒ¸ ˛
$numÒÒˇ Ö
)ÒÒÖ Ü
{
ÚÚ #
SaveWordWrappingState
ıı -
(
ıı- .
ref
ıı. 1"
m_SavedWordWrapState
ıı2 F
,
ııF G
i
ııH I
,
ııI J
m_characterCount
ııK [
)
ıı[ \
;
ıı\ ]
isFirstWordOfLine
ˆˆ )
=
ˆˆ* +
false
ˆˆ, 1
;
ˆˆ1 2'
m_SavedSoftLineBreakState
˙˙ 1
.
˙˙1 2 
previous_WordBreak
˙˙2 D
=
˙˙E F
-
˙˙G H
$num
˙˙H I
;
˙˙I J
}
˚˚ 
else
˝˝ 
if
˝˝ 
(
˝˝ "
m_isNonBreakingSpace
˝˝ 1
==
˝˝2 4
false
˝˝5 :
&&
˝˝; =
(
˛˛ 
(
˛˛ 
charCode
˛˛ '
>
˛˛( )
$num
˛˛* 0
&&
˛˛1 3
charCode
˛˛4 <
<
˛˛= >
$num
˛˛? E
||
˛˛F H
charCode
ˇˇ '
>
ˇˇ( )
$num
ˇˇ* 0
&&
ˇˇ1 3
charCode
ˇˇ4 <
<
ˇˇ= >
$num
ˇˇ? E
||
ˇˇF H
charCode
ÄÄ '
>
ÄÄ( )
$num
ÄÄ* 0
&&
ÄÄ1 3
charCode
ÄÄ4 <
<
ÄÄ= >
$num
ÄÄ? E
)
ÄÄE F
&&
ÄÄF H
TMP_Settings
ÅÅ *
.
ÅÅ* +.
 useModernHangulLineBreakingRules
ÅÅ+ K
==
ÅÅL N
false
ÅÅO T
||
ÅÅU W
(
ÉÉ 
charCode
ÉÉ '
>
ÉÉ( )
$num
ÉÉ* 0
&&
ÉÉ1 3
charCode
ÉÉ4 <
<
ÉÉ= >
$num
ÉÉ? E
||
ÉÉF H
charCode
ÑÑ '
>
ÑÑ( )
$num
ÑÑ* 0
&&
ÑÑ1 3
charCode
ÑÑ4 <
<
ÑÑ= >
$num
ÑÑ? E
||
ÑÑF H
charCode
ÖÖ '
>
ÖÖ( )
$num
ÖÖ* 0
&&
ÖÖ1 3
charCode
ÖÖ4 <
<
ÖÖ= >
$num
ÖÖ? E
||
ÖÖF H
charCode
ÜÜ '
>
ÜÜ( )
$num
ÜÜ* 0
&&
ÜÜ1 3
charCode
ÜÜ4 <
<
ÜÜ= >
$num
ÜÜ? E
)
ÜÜE F
)
ÜÜF G
)
ÜÜG H
{
áá 
bool
àà '
isCurrentLeadingCharacter
àà 6
=
àà7 8
TMP_Settings
àà9 E
.
ààE F
linebreakingRules
ààF W
.
ààW X
leadingCharacters
ààX i
.
àài j
ContainsKey
ààj u
(
ààu v
charCode
ààv ~
)
àà~ 
;àà Ä
bool
ââ &
isNextFollowingCharacter
ââ 5
=
ââ6 7
m_characterCount
ââ8 H
<
ââI J!
totalCharacterCount
ââK ^
-
ââ_ `
$num
ââa b
&&
ââc e
TMP_Settings
ââf r
.
ââr s 
linebreakingRulesââs Ñ
.ââÑ Ö#
followingCharactersââÖ ò
.ââò ô
ContainsKeyââô §
(ââ§ •

m_textInfoââ• Ø
.ââØ ∞
characterInfoââ∞ Ω
[ââΩ æ 
m_characterCountââæ Œ
+ââœ –
$numââ— “
]ââ“ ”
.ââ” ‘
	characterââ‘ ›
)ââ› ﬁ
;ââﬁ ﬂ
if
ãã 
(
ãã '
isCurrentLeadingCharacter
ãã 5
==
ãã6 8
false
ãã9 >
)
ãã> ?
{
åå 
if
çç 
(
çç  &
isNextFollowingCharacter
çç  8
==
çç9 ;
false
çç< A
)
ççA B
{
éé #
SaveWordWrappingState
èè  5
(
èè5 6
ref
èè6 9"
m_SavedWordWrapState
èè: N
,
èèN O
i
èèP Q
,
èèQ R
m_characterCount
èèS c
)
èèc d
;
èèd e
isFirstWordOfLine
êê  1
=
êê2 3
false
êê4 9
;
êê9 :
}
ëë 
if
ìì 
(
ìì  
isFirstWordOfLine
ìì  1
)
ìì1 2
{
îî 
if
ññ  "
(
ññ# $
isWhiteSpace
ññ$ 0
)
ññ0 1#
SaveWordWrappingState
óó$ 9
(
óó9 :
ref
óó: ='
m_SavedSoftLineBreakState
óó> W
,
óóW X
i
óóY Z
,
óóZ [
m_characterCount
óó\ l
)
óól m
;
óóm n#
SaveWordWrappingState
ôô  5
(
ôô5 6
ref
ôô6 9"
m_SavedWordWrapState
ôô: N
,
ôôN O
i
ôôP Q
,
ôôQ R
m_characterCount
ôôS c
)
ôôc d
;
ôôd e
}
öö 
}
õõ 
else
úú 
{
ùù 
if
ûû 
(
ûû  
isFirstWordOfLine
ûû  1
&&
ûû2 4$
isFirstCharacterOfLine
ûû5 K
)
ûûK L
{
üü 
if
°°  "
(
°°# $
isWhiteSpace
°°$ 0
)
°°0 1#
SaveWordWrappingState
¢¢$ 9
(
¢¢9 :
ref
¢¢: ='
m_SavedSoftLineBreakState
¢¢> W
,
¢¢W X
i
¢¢Y Z
,
¢¢Z [
m_characterCount
¢¢\ l
)
¢¢l m
;
¢¢m n#
SaveWordWrappingState
§§  5
(
§§5 6
ref
§§6 9"
m_SavedWordWrapState
§§: N
,
§§N O
i
§§P Q
,
§§Q R
m_characterCount
§§S c
)
§§c d
;
§§d e
}
•• 
}
¶¶ 
}
©© 
else
™™ 
if
™™ 
(
™™ 
isFirstWordOfLine
™™ .
)
™™. /
{
´´ 
if
≠≠ 
(
≠≠ 
isWhiteSpace
≠≠ (
||
≠≠) +
(
≠≠, -
charCode
≠≠- 5
==
≠≠6 8
$num
≠≠9 =
&&
≠≠> @!
isSoftHyphenIgnored
≠≠A T
==
≠≠U W
false
≠≠X ]
)
≠≠] ^
)
≠≠^ _#
SaveWordWrappingState
ÆÆ 1
(
ÆÆ1 2
ref
ÆÆ2 5'
m_SavedSoftLineBreakState
ÆÆ6 O
,
ÆÆO P
i
ÆÆQ R
,
ÆÆR S
m_characterCount
ÆÆT d
)
ÆÆd e
;
ÆÆe f#
SaveWordWrappingState
∞∞ -
(
∞∞- .
ref
∞∞. 1"
m_SavedWordWrapState
∞∞2 F
,
∞∞F G
i
∞∞H I
,
∞∞I J
m_characterCount
∞∞K [
)
∞∞[ \
;
∞∞\ ]
}
≤≤ *
k_SaveProcessingStatesMarker
¥¥ 0
.
¥¥0 1
End
¥¥1 4
(
¥¥4 5
)
¥¥5 6
;
¥¥6 7
}
µµ #
SaveWordWrappingState
∏∏ %
(
∏∏% &
ref
∏∏& )#
m_SavedLastValidState
∏∏* ?
,
∏∏? @
i
∏∏A B
,
∏∏B C
m_characterCount
∏∏D T
)
∏∏T U
;
∏∏U V
m_characterCount
∫∫  
+=
∫∫! #
$num
∫∫$ %
;
∫∫% &
}
ªª 
fontSizeDelta
øø 
=
øø 
m_maxFontSize
øø )
-
øø* +
m_minFontSize
øø, 9
;
øø9 :
if
¿¿ 
(
¿¿  
m_enableAutoSizing
¿¿7 I
&&
¿¿J L
fontSizeDelta
¿¿M Z
>
¿¿[ \
$num
¿¿] c
&&
¿¿d f

m_fontSize
¿¿g q
<
¿¿r s
m_fontSizeMax¿¿t Å
&&¿¿Ç Ñ(
m_AutoSizeIterationCount¿¿Ö ù
<¿¿û ü+
m_AutoSizeMaxIterationCount¿¿† ª
)¿¿ª º
{
¡¡ 
if
√√ 
(
√√ !
m_charWidthAdjDelta
√√ '
<
√√( )
m_charWidthMaxAdj
√√* ;
/
√√< =
$num
√√> A
)
√√A B!
m_charWidthAdjDelta
ƒƒ '
=
ƒƒ( )
$num
ƒƒ* +
;
ƒƒ+ ,
m_minFontSize
∆∆ 
=
∆∆ 

m_fontSize
∆∆  *
;
∆∆* +
float
»» 
	sizeDelta
»» 
=
»»  !
Mathf
»»" '
.
»»' (
Max
»»( +
(
»»+ ,
(
»», -
m_maxFontSize
»»- :
-
»»; <

m_fontSize
»»= G
)
»»G H
/
»»I J
$num
»»K L
,
»»L M
$num
»»N S
)
»»S T
;
»»T U

m_fontSize
…… 
+=
…… 
	sizeDelta
…… '
;
……' (

m_fontSize
   
=
   
Mathf
   "
.
  " #
Min
  # &
(
  & '
(
  ' (
int
  ( +
)
  + ,
(
  , -

m_fontSize
  - 7
*
  8 9
$num
  : <
+
  = >
$num
  ? C
)
  C D
/
  E F
$num
  G J
,
  J K
m_fontSizeMax
  L Y
)
  Y Z
;
  Z [(
k_GenerateTextPhaseIMarker
ÕÕ *
.
ÕÕ* +
End
ÕÕ+ .
(
ÕÕ. /
)
ÕÕ/ 0
;
ÕÕ0 1"
k_GenerateTextMarker
ŒŒ $
.
ŒŒ$ %
End
ŒŒ% (
(
ŒŒ( )
)
ŒŒ) *
;
ŒŒ* +
return
œœ 
;
œœ 
}
–– &
m_IsAutoSizePointSizeSet
”” $
=
””% &
true
””' +
;
””+ ,
if
’’ 
(
’’ &
m_AutoSizeIterationCount
’’ (
>=
’’) +)
m_AutoSizeMaxIterationCount
’’, G
)
’’G H
Debug
÷÷ 
.
÷÷ 
Log
÷÷ 
(
÷÷ 
$str
÷÷ 7
+
÷÷8 9&
m_AutoSizeIterationCount
÷÷: R
+
÷÷S T
$str
÷÷U k
+
÷÷l m

m_fontSize
÷÷n x
)
÷÷x y
;
÷÷y z
if
ŸŸ 
(
ŸŸ 
m_characterCount
ŸŸ  
==
ŸŸ! #
$num
ŸŸ$ %
||
ŸŸ& (
(
ŸŸ) *
m_characterCount
ŸŸ* :
==
ŸŸ; =
$num
ŸŸ> ?
&&
ŸŸ@ B
charCode
ŸŸC K
==
ŸŸL N
$num
ŸŸO S
)
ŸŸS T
)
ŸŸT U
{
⁄⁄ 
	ClearMesh
€€ 
(
€€ 
)
€€ 
;
€€  
TMPro_EventManager
ﬁﬁ "
.
ﬁﬁ" #
ON_TEXT_CHANGED
ﬁﬁ# 2
(
ﬁﬁ2 3
this
ﬁﬁ3 7
)
ﬁﬁ7 8
;
ﬁﬁ8 9(
k_GenerateTextPhaseIMarker
ﬂﬂ *
.
ﬂﬂ* +
End
ﬂﬂ+ .
(
ﬂﬂ. /
)
ﬂﬂ/ 0
;
ﬂﬂ0 1"
k_GenerateTextMarker
‡‡ $
.
‡‡$ %
End
‡‡% (
(
‡‡( )
)
‡‡) *
;
‡‡* +
return
·· 
;
·· 
}
‚‚ (
k_GenerateTextPhaseIMarker
ÂÂ &
.
ÂÂ& '
End
ÂÂ' *
(
ÂÂ* +
)
ÂÂ+ ,
;
ÂÂ, -)
k_GenerateTextPhaseIIMarker
ËË '
.
ËË' (
Begin
ËË( -
(
ËË- .
)
ËË. /
;
ËË/ 0
int
ÈÈ 
last_vert_index
ÈÈ 
=
ÈÈ  !"
m_materialReferences
ÈÈ" 6
[
ÈÈ6 7
m_Underline
ÈÈ7 B
.
ÈÈB C
materialIndex
ÈÈC P
]
ÈÈP Q
.
ÈÈQ R
referenceCount
ÈÈR `
*
ÈÈa b
$num
ÈÈc d
;
ÈÈd e

m_textInfo
ÏÏ 
.
ÏÏ 
meshInfo
ÏÏ 
[
ÏÏ  
$num
ÏÏ  !
]
ÏÏ! "
.
ÏÏ" #
Clear
ÏÏ# (
(
ÏÏ( )
false
ÏÏ) .
)
ÏÏ. /
;
ÏÏ/ 0
Vector3
 
anchorOffset
  
=
! "
Vector3
# *
.
* +
zero
+ /
;
/ 0
Vector3
ÒÒ 
[
ÒÒ 
]
ÒÒ 
corners
ÒÒ 
=
ÒÒ $
m_RectTransformCorners
ÒÒ  6
;
ÒÒ6 7
switch
ÙÙ 
(
ÙÙ !
m_VerticalAlignment
ÙÙ '
)
ÙÙ' (
{
ıı 
case
˜˜ &
VerticalAlignmentOptions
˜˜ -
.
˜˜- .
Top
˜˜. 1
:
˜˜1 2
if
¯¯ 
(
¯¯ 
m_overflowMode
¯¯ &
!=
¯¯' )
TextOverflowModes
¯¯* ;
.
¯¯; <
Page
¯¯< @
)
¯¯@ A
anchorOffset
˘˘ $
=
˘˘% &
corners
˘˘' .
[
˘˘. /
$num
˘˘/ 0
]
˘˘0 1
+
˘˘2 3
new
˘˘4 7
Vector3
˘˘8 ?
(
˘˘? @
$num
˘˘@ A
+
˘˘B C
margins
˘˘D K
.
˘˘K L
x
˘˘L M
,
˘˘M N
$num
˘˘O P
-
˘˘Q R
m_maxTextAscender
˘˘S d
-
˘˘e f
margins
˘˘g n
.
˘˘n o
y
˘˘o p
,
˘˘p q
$num
˘˘r s
)
˘˘s t
;
˘˘t u
else
˙˙ 
anchorOffset
˚˚ $
=
˚˚% &
corners
˚˚' .
[
˚˚. /
$num
˚˚/ 0
]
˚˚0 1
+
˚˚2 3
new
˚˚4 7
Vector3
˚˚8 ?
(
˚˚? @
$num
˚˚@ A
+
˚˚B C
margins
˚˚D K
.
˚˚K L
x
˚˚L M
,
˚˚M N
$num
˚˚O P
-
˚˚Q R

m_textInfo
˚˚S ]
.
˚˚] ^
pageInfo
˚˚^ f
[
˚˚f g
pageToDisplay
˚˚g t
]
˚˚t u
.
˚˚u v
ascender
˚˚v ~
-˚˚ Ä
margins˚˚Å à
.˚˚à â
y˚˚â ä
,˚˚ä ã
$num˚˚å ç
)˚˚ç é
;˚˚é è
break
¸¸ 
;
¸¸ 
case
ˇˇ &
VerticalAlignmentOptions
ˇˇ -
.
ˇˇ- .
Middle
ˇˇ. 4
:
ˇˇ4 5
if
ÄÄ 
(
ÄÄ 
m_overflowMode
ÄÄ &
!=
ÄÄ' )
TextOverflowModes
ÄÄ* ;
.
ÄÄ; <
Page
ÄÄ< @
)
ÄÄ@ A
anchorOffset
ÅÅ $
=
ÅÅ% &
(
ÅÅ' (
corners
ÅÅ( /
[
ÅÅ/ 0
$num
ÅÅ0 1
]
ÅÅ1 2
+
ÅÅ3 4
corners
ÅÅ5 <
[
ÅÅ< =
$num
ÅÅ= >
]
ÅÅ> ?
)
ÅÅ? @
/
ÅÅA B
$num
ÅÅC D
+
ÅÅE F
new
ÅÅG J
Vector3
ÅÅK R
(
ÅÅR S
$num
ÅÅS T
+
ÅÅU V
margins
ÅÅW ^
.
ÅÅ^ _
x
ÅÅ_ `
,
ÅÅ` a
$num
ÅÅb c
-
ÅÅd e
(
ÅÅf g
m_maxTextAscender
ÅÅg x
+
ÅÅy z
marginsÅÅ{ Ç
.ÅÅÇ É
yÅÅÉ Ñ
+ÅÅÖ Ü#
maxVisibleDescenderÅÅá ö
-ÅÅõ ú
marginsÅÅù §
.ÅÅ§ •
wÅÅ• ¶
)ÅÅ¶ ß
/ÅÅ® ©
$numÅÅ™ ´
,ÅÅ´ ¨
$numÅÅ≠ Æ
)ÅÅÆ Ø
;ÅÅØ ∞
else
ÇÇ 
anchorOffset
ÉÉ $
=
ÉÉ% &
(
ÉÉ' (
corners
ÉÉ( /
[
ÉÉ/ 0
$num
ÉÉ0 1
]
ÉÉ1 2
+
ÉÉ3 4
corners
ÉÉ5 <
[
ÉÉ< =
$num
ÉÉ= >
]
ÉÉ> ?
)
ÉÉ? @
/
ÉÉA B
$num
ÉÉC D
+
ÉÉE F
new
ÉÉG J
Vector3
ÉÉK R
(
ÉÉR S
$num
ÉÉS T
+
ÉÉU V
margins
ÉÉW ^
.
ÉÉ^ _
x
ÉÉ_ `
,
ÉÉ` a
$num
ÉÉb c
-
ÉÉd e
(
ÉÉf g

m_textInfo
ÉÉg q
.
ÉÉq r
pageInfo
ÉÉr z
[
ÉÉz {
pageToDisplayÉÉ{ à
]ÉÉà â
.ÉÉâ ä
ascenderÉÉä í
+ÉÉì î
marginsÉÉï ú
.ÉÉú ù
yÉÉù û
+ÉÉü †

m_textInfoÉÉ° ´
.ÉÉ´ ¨
pageInfoÉÉ¨ ¥
[ÉÉ¥ µ
pageToDisplayÉÉµ ¬
]ÉÉ¬ √
.ÉÉ√ ƒ
	descenderÉÉƒ Õ
-ÉÉŒ œ
marginsÉÉ– ◊
.ÉÉ◊ ÿ
wÉÉÿ Ÿ
)ÉÉŸ ⁄
/ÉÉ€ ‹
$numÉÉ› ﬁ
,ÉÉﬁ ﬂ
$numÉÉ‡ ·
)ÉÉ· ‚
;ÉÉ‚ „
break
ÑÑ 
;
ÑÑ 
case
áá &
VerticalAlignmentOptions
áá -
.
áá- .
Bottom
áá. 4
:
áá4 5
if
àà 
(
àà 
m_overflowMode
àà &
!=
àà' )
TextOverflowModes
àà* ;
.
àà; <
Page
àà< @
)
àà@ A
anchorOffset
ââ $
=
ââ% &
corners
ââ' .
[
ââ. /
$num
ââ/ 0
]
ââ0 1
+
ââ2 3
new
ââ4 7
Vector3
ââ8 ?
(
ââ? @
$num
ââ@ A
+
ââB C
margins
ââD K
.
ââK L
x
ââL M
,
ââM N
$num
ââO P
-
ââQ R!
maxVisibleDescender
ââS f
+
ââg h
margins
ââi p
.
ââp q
w
ââq r
,
ââr s
$num
âât u
)
ââu v
;
ââv w
else
ää 
anchorOffset
ãã $
=
ãã% &
corners
ãã' .
[
ãã. /
$num
ãã/ 0
]
ãã0 1
+
ãã2 3
new
ãã4 7
Vector3
ãã8 ?
(
ãã? @
$num
ãã@ A
+
ããB C
margins
ããD K
.
ããK L
x
ããL M
,
ããM N
$num
ããO P
-
ããQ R

m_textInfo
ããS ]
.
ãã] ^
pageInfo
ãã^ f
[
ããf g
pageToDisplay
ããg t
]
ããt u
.
ããu v
	descender
ããv 
+ããÄ Å
marginsããÇ â
.ããâ ä
wããä ã
,ããã å
$numããç é
)ããé è
;ããè ê
break
åå 
;
åå 
case
èè &
VerticalAlignmentOptions
èè -
.
èè- .
Baseline
èè. 6
:
èè6 7
anchorOffset
êê  
=
êê! "
(
êê# $
corners
êê$ +
[
êê+ ,
$num
êê, -
]
êê- .
+
êê/ 0
corners
êê1 8
[
êê8 9
$num
êê9 :
]
êê: ;
)
êê; <
/
êê= >
$num
êê? @
+
êêA B
new
êêC F
Vector3
êêG N
(
êêN O
$num
êêO P
+
êêQ R
margins
êêS Z
.
êêZ [
x
êê[ \
,
êê\ ]
$num
êê^ _
,
êê_ `
$num
êêa b
)
êêb c
;
êêc d
break
ëë 
;
ëë 
case
îî &
VerticalAlignmentOptions
îî -
.
îî- .
Geometry
îî. 6
:
îî6 7
anchorOffset
ïï  
=
ïï! "
(
ïï# $
corners
ïï$ +
[
ïï+ ,
$num
ïï, -
]
ïï- .
+
ïï/ 0
corners
ïï1 8
[
ïï8 9
$num
ïï9 :
]
ïï: ;
)
ïï; <
/
ïï= >
$num
ïï? @
+
ïïA B
new
ïïC F
Vector3
ïïG N
(
ïïN O
$num
ïïO P
+
ïïQ R
margins
ïïS Z
.
ïïZ [
x
ïï[ \
,
ïï\ ]
$num
ïï^ _
-
ïï` a
(
ïïb c
m_meshExtents
ïïc p
.
ïïp q
max
ïïq t
.
ïït u
y
ïïu v
+
ïïw x
marginsïïy Ä
.ïïÄ Å
yïïÅ Ç
+ïïÉ Ñ
m_meshExtentsïïÖ í
.ïïí ì
minïïì ñ
.ïïñ ó
yïïó ò
-ïïô ö
marginsïïõ ¢
.ïï¢ £
wïï£ §
)ïï§ •
/ïï¶ ß
$numïï® ©
,ïï© ™
$numïï´ ¨
)ïï¨ ≠
;ïï≠ Æ
break
ññ 
;
ññ 
case
ôô &
VerticalAlignmentOptions
ôô -
.
ôô- .
Capline
ôô. 5
:
ôô5 6
anchorOffset
öö  
=
öö! "
(
öö# $
corners
öö$ +
[
öö+ ,
$num
öö, -
]
öö- .
+
öö/ 0
corners
öö1 8
[
öö8 9
$num
öö9 :
]
öö: ;
)
öö; <
/
öö= >
$num
öö? @
+
ööA B
new
ööC F
Vector3
ööG N
(
ööN O
$num
ööO P
+
ööQ R
margins
ööS Z
.
ööZ [
x
öö[ \
,
öö\ ]
$num
öö^ _
-
öö` a
(
ööb c
m_maxCapHeight
ööc q
-
öör s
margins
ööt {
.
öö{ |
y
öö| }
-
öö~ 
marginsööÄ á
.ööá à
wööà â
)ööâ ä
/ööã å
$numööç é
,ööé è
$numööê ë
)ööë í
;ööí ì
break
õõ 
;
õõ 
}
úú 
Vector3
°° !
justificationOffset
°° '
=
°°( )
Vector3
°°* 1
.
°°1 2
zero
°°2 6
;
°°6 7
Vector3
¢¢ 
offset
¢¢ 
=
¢¢ 
Vector3
¢¢ $
.
¢¢$ %
zero
¢¢% )
;
¢¢) *
int
££ 
vert_index_X4
££ 
=
££ 
$num
££  !
;
££! "
int
§§ 
sprite_index_X4
§§ 
=
§§  !
$num
§§" #
;
§§# $
int
¶¶ 
	wordCount
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶ 
int
ßß 
	lineCount
ßß 
=
ßß 
$num
ßß 
;
ßß 
int
®® 
lastLine
®® 
=
®® 
$num
®® 
;
®® 
bool
©© 
isFirstSeperator
©© !
=
©©" #
false
©©$ )
;
©©) *
bool
´´ 
isStartOfWord
´´ 
=
´´  
false
´´! &
;
´´& '
int
¨¨ 
wordFirstChar
¨¨ 
=
¨¨ 
$num
¨¨  !
;
¨¨! "
int
≠≠ 
wordLastChar
≠≠ 
=
≠≠ 
$num
≠≠  
;
≠≠  !
bool
±± 
isCameraAssigned
±± !
=
±±" #
m_canvas
±±$ ,
.
±±, -
worldCamera
±±- 8
==
±±9 ;
null
±±< @
?
±±A B
false
±±C H
:
±±I J
true
±±K O
;
±±O P
float
≤≤ 

lossyScale
≤≤ 
=
≤≤ #
m_previousLossyScaleY
≤≤ 4
=
≤≤5 6
this
≤≤7 ;
.
≤≤; <
	transform
≤≤< E
.
≤≤E F

lossyScale
≤≤F P
.
≤≤P Q
y
≤≤Q R
;
≤≤R S

RenderMode
≥≥ 
canvasRenderMode
≥≥ '
=
≥≥( )
m_canvas
≥≥* 2
.
≥≥2 3

renderMode
≥≥3 =
;
≥≥= >
float
¥¥ 
canvasScaleFactor
¥¥ #
=
¥¥$ %
m_canvas
¥¥& .
.
¥¥. /
scaleFactor
¥¥/ :
;
¥¥: ;
Color32
∂∂ 
underlineColor
∂∂ "
=
∂∂# $
Color
∂∂% *
.
∂∂* +
white
∂∂+ 0
;
∂∂0 1
Color32
∑∑  
strikethroughColor
∑∑ &
=
∑∑' (
Color
∑∑) .
.
∑∑. /
white
∑∑/ 4
;
∑∑4 5
HighlightState
∏∏ 
highlightState
∏∏ )
=
∏∏* +
new
∏∏, /
HighlightState
∏∏0 >
(
∏∏> ?
new
∏∏? B
Color32
∏∏C J
(
∏∏J K
$num
∏∏K N
,
∏∏N O
$num
∏∏P S
,
∏∏S T
$num
∏∏U V
,
∏∏V W
$num
∏∏X Z
)
∏∏Z [
,
∏∏[ \

TMP_Offset
∏∏] g
.
∏∏g h
zero
∏∏h l
)
∏∏l m
;
∏∏m n
float
ππ 
xScale
ππ 
=
ππ 
$num
ππ 
;
ππ 
float
∫∫ 
	xScaleMax
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫  
float
ªª !
underlineStartScale
ªª %
=
ªª& '
$num
ªª( )
;
ªª) *
float
ºº 
underlineEndScale
ºº #
=
ºº$ %
$num
ºº& '
;
ºº' (
float
ΩΩ 
underlineMaxScale
ΩΩ #
=
ΩΩ$ %
$num
ΩΩ& '
;
ΩΩ' (
float
ææ 
underlineBaseLine
ææ #
=
ææ$ %"
k_LargePositiveFloat
ææ& :
;
ææ: ;
int
øø 
lastPage
øø 
=
øø 
$num
øø 
;
øø 
float
¡¡ $
strikethroughPointSize
¡¡ (
=
¡¡) *
$num
¡¡+ ,
;
¡¡, -
float
¬¬  
strikethroughScale
¬¬ $
=
¬¬% &
$num
¬¬' (
;
¬¬( )
float
√√ #
strikethroughBaseline
√√ '
=
√√( )
$num
√√* +
;
√√+ ,
TMP_CharacterInfo
≈≈ 
[
≈≈ 
]
≈≈ 
characterInfos
≈≈  .
=
≈≈/ 0

m_textInfo
≈≈1 ;
.
≈≈; <
characterInfo
≈≈< I
;
≈≈I J
for
«« 
(
«« 
int
«« 
i
«« 
=
«« 
$num
«« 
;
«« 
i
«« 
<
«« 
m_characterCount
««  0
;
««0 1
i
««2 3
++
««3 5
)
««5 6
{
»» 
TMP_FontAsset
…… 
currentFontAsset
…… .
=
……/ 0
characterInfos
……1 ?
[
……? @
i
……@ A
]
……A B
.
……B C
	fontAsset
……C L
;
……L M
char
ÀÀ 
unicode
ÀÀ 
=
ÀÀ 
characterInfos
ÀÀ -
[
ÀÀ- .
i
ÀÀ. /
]
ÀÀ/ 0
.
ÀÀ0 1
	character
ÀÀ1 :
;
ÀÀ: ;
int
ÕÕ 
currentLine
ÕÕ 
=
ÕÕ  !
characterInfos
ÕÕ" 0
[
ÕÕ0 1
i
ÕÕ1 2
]
ÕÕ2 3
.
ÕÕ3 4

lineNumber
ÕÕ4 >
;
ÕÕ> ?
TMP_LineInfo
ŒŒ 
lineInfo
ŒŒ %
=
ŒŒ& '

m_textInfo
ŒŒ( 2
.
ŒŒ2 3
lineInfo
ŒŒ3 ;
[
ŒŒ; <
currentLine
ŒŒ< G
]
ŒŒG H
;
ŒŒH I
	lineCount
œœ 
=
œœ 
currentLine
œœ '
+
œœ( )
$num
œœ* +
;
œœ+ ,(
HorizontalAlignmentOptions
—— *
lineAlignment
——+ 8
=
——9 :
lineInfo
——; C
.
——C D
	alignment
——D M
;
——M N
switch
’’ 
(
’’ 
lineAlignment
’’ %
)
’’% &
{
÷÷ 
case
◊◊ (
HorizontalAlignmentOptions
◊◊ 3
.
◊◊3 4
Left
◊◊4 8
:
◊◊8 9
if
ÿÿ 
(
ÿÿ 
!
ÿÿ 
m_isRightToLeft
ÿÿ ,
)
ÿÿ, -!
justificationOffset
ŸŸ /
=
ŸŸ0 1
new
ŸŸ2 5
Vector3
ŸŸ6 =
(
ŸŸ= >
$num
ŸŸ> ?
+
ŸŸ@ A
lineInfo
ŸŸB J
.
ŸŸJ K

marginLeft
ŸŸK U
,
ŸŸU V
$num
ŸŸW X
,
ŸŸX Y
$num
ŸŸZ [
)
ŸŸ[ \
;
ŸŸ\ ]
else
⁄⁄ !
justificationOffset
€€ /
=
€€0 1
new
€€2 5
Vector3
€€6 =
(
€€= >
$num
€€> ?
-
€€@ A
lineInfo
€€B J
.
€€J K

maxAdvance
€€K U
,
€€U V
$num
€€W X
,
€€X Y
$num
€€Z [
)
€€[ \
;
€€\ ]
break
‹‹ 
;
‹‹ 
case
ﬁﬁ (
HorizontalAlignmentOptions
ﬁﬁ 3
.
ﬁﬁ3 4
Center
ﬁﬁ4 :
:
ﬁﬁ: ;!
justificationOffset
ﬂﬂ +
=
ﬂﬂ, -
new
ﬂﬂ. 1
Vector3
ﬂﬂ2 9
(
ﬂﬂ9 :
lineInfo
ﬂﬂ: B
.
ﬂﬂB C

marginLeft
ﬂﬂC M
+
ﬂﬂN O
lineInfo
ﬂﬂP X
.
ﬂﬂX Y
width
ﬂﬂY ^
/
ﬂﬂ_ `
$num
ﬂﬂa b
-
ﬂﬂc d
lineInfo
ﬂﬂe m
.
ﬂﬂm n

maxAdvance
ﬂﬂn x
/
ﬂﬂy z
$num
ﬂﬂ{ |
,
ﬂﬂ| }
$num
ﬂﬂ~ 
,ﬂﬂ Ä
$numﬂﬂÅ Ç
)ﬂﬂÇ É
;ﬂﬂÉ Ñ
break
‡‡ 
;
‡‡ 
case
‚‚ (
HorizontalAlignmentOptions
‚‚ 3
.
‚‚3 4
Geometry
‚‚4 <
:
‚‚< =!
justificationOffset
„„ +
=
„„, -
new
„„. 1
Vector3
„„2 9
(
„„9 :
lineInfo
„„: B
.
„„B C

marginLeft
„„C M
+
„„N O
lineInfo
„„P X
.
„„X Y
width
„„Y ^
/
„„_ `
$num
„„a b
-
„„c d
(
„„e f
lineInfo
„„f n
.
„„n o
lineExtents
„„o z
.
„„z {
min
„„{ ~
.
„„~ 
x„„ Ä
+„„Å Ç
lineInfo„„É ã
.„„ã å
lineExtents„„å ó
.„„ó ò
max„„ò õ
.„„õ ú
x„„ú ù
)„„ù û
/„„ü †
$num„„° ¢
,„„¢ £
$num„„§ •
,„„• ¶
$num„„ß ®
)„„® ©
;„„© ™
break
‰‰ 
;
‰‰ 
case
ÊÊ (
HorizontalAlignmentOptions
ÊÊ 3
.
ÊÊ3 4
Right
ÊÊ4 9
:
ÊÊ9 :
if
ÁÁ 
(
ÁÁ 
!
ÁÁ 
m_isRightToLeft
ÁÁ ,
)
ÁÁ, -!
justificationOffset
ËË /
=
ËË0 1
new
ËË2 5
Vector3
ËË6 =
(
ËË= >
lineInfo
ËË> F
.
ËËF G

marginLeft
ËËG Q
+
ËËR S
lineInfo
ËËT \
.
ËË\ ]
width
ËË] b
-
ËËc d
lineInfo
ËËe m
.
ËËm n

maxAdvance
ËËn x
,
ËËx y
$num
ËËz {
,
ËË{ |
$num
ËË} ~
)
ËË~ 
;ËË Ä
else
ÈÈ !
justificationOffset
ÍÍ /
=
ÍÍ0 1
new
ÍÍ2 5
Vector3
ÍÍ6 =
(
ÍÍ= >
lineInfo
ÍÍ> F
.
ÍÍF G

marginLeft
ÍÍG Q
+
ÍÍR S
lineInfo
ÍÍT \
.
ÍÍ\ ]
width
ÍÍ] b
,
ÍÍb c
$num
ÍÍd e
,
ÍÍe f
$num
ÍÍg h
)
ÍÍh i
;
ÍÍi j
break
ÎÎ 
;
ÎÎ 
case
ÌÌ (
HorizontalAlignmentOptions
ÌÌ 3
.
ÌÌ3 4
	Justified
ÌÌ4 =
:
ÌÌ= >
case
ÓÓ (
HorizontalAlignmentOptions
ÓÓ 3
.
ÓÓ3 4
Flush
ÓÓ4 9
:
ÓÓ9 :
if
 
(
 
unicode
 #
==
$ &
$num
' +
||
, .
unicode
/ 6
==
7 9
$num
: >
||
? A
unicode
B I
==
J L
$num
M S
||
T V
unicode
W ^
==
_ a
$num
b h
||
i k
unicode
l s
==
t v
$num
w {
)
{ |
break} Ç
;Ç É
char
ÚÚ #
lastCharOfCurrentLine
ÚÚ 2
=
ÚÚ3 4
characterInfos
ÚÚ5 C
[
ÚÚC D
lineInfo
ÚÚD L
.
ÚÚL M 
lastCharacterIndex
ÚÚM _
]
ÚÚ_ `
.
ÚÚ` a
	character
ÚÚa j
;
ÚÚj k
bool
ÙÙ 
isFlush
ÙÙ $
=
ÙÙ% &
(
ÙÙ' (
lineAlignment
ÙÙ( 5
&
ÙÙ6 7(
HorizontalAlignmentOptions
ÙÙ8 R
.
ÙÙR S
Flush
ÙÙS X
)
ÙÙX Y
==
ÙÙZ \(
HorizontalAlignmentOptions
ÙÙ] w
.
ÙÙw x
Flush
ÙÙx }
;
ÙÙ} ~
if
¯¯ 
(
¯¯ 
char
¯¯  
.
¯¯  !
	IsControl
¯¯! *
(
¯¯* +#
lastCharOfCurrentLine
¯¯+ @
)
¯¯@ A
==
¯¯B D
false
¯¯E J
&&
¯¯K M
currentLine
¯¯N Y
<
¯¯Z [
m_lineNumber
¯¯\ h
||
¯¯i k
isFlush
¯¯l s
||
¯¯t v
lineInfo
¯¯w 
.¯¯ Ä

maxAdvance¯¯Ä ä
>¯¯ã å
lineInfo¯¯ç ï
.¯¯ï ñ
width¯¯ñ õ
)¯¯õ ú
{
˘˘ 
if
˚˚ 
(
˚˚  
currentLine
˚˚  +
!=
˚˚, .
lastLine
˚˚/ 7
||
˚˚8 :
i
˚˚; <
==
˚˚= ?
$num
˚˚@ A
||
˚˚B D
i
˚˚E F
==
˚˚G I%
m_firstVisibleCharacter
˚˚J a
)
˚˚a b
{
¸¸ 
if
˝˝  "
(
˝˝# $
!
˝˝$ %
m_isRightToLeft
˝˝% 4
)
˝˝4 5!
justificationOffset
˛˛$ 7
=
˛˛8 9
new
˛˛: =
Vector3
˛˛> E
(
˛˛E F
lineInfo
˛˛F N
.
˛˛N O

marginLeft
˛˛O Y
,
˛˛Y Z
$num
˛˛[ \
,
˛˛\ ]
$num
˛˛^ _
)
˛˛_ `
;
˛˛` a
else
ˇˇ  $!
justificationOffset
ÄÄ$ 7
=
ÄÄ8 9
new
ÄÄ: =
Vector3
ÄÄ> E
(
ÄÄE F
lineInfo
ÄÄF N
.
ÄÄN O

marginLeft
ÄÄO Y
+
ÄÄZ [
lineInfo
ÄÄ\ d
.
ÄÄd e
width
ÄÄe j
,
ÄÄj k
$num
ÄÄl m
,
ÄÄm n
$num
ÄÄo p
)
ÄÄp q
;
ÄÄq r
if
ÇÇ  "
(
ÇÇ# $
char
ÇÇ$ (
.
ÇÇ( )
IsSeparator
ÇÇ) 4
(
ÇÇ4 5
unicode
ÇÇ5 <
)
ÇÇ< =
)
ÇÇ= >
isFirstSeperator
ÉÉ$ 4
=
ÉÉ5 6
true
ÉÉ7 ;
;
ÉÉ; <
else
ÑÑ  $
isFirstSeperator
ÖÖ$ 4
=
ÖÖ5 6
false
ÖÖ7 <
;
ÖÖ< =
}
ÜÜ 
else
áá  
{
àà 
float
ââ  %
gap
ââ& )
=
ââ* +
!
ââ, -
m_isRightToLeft
ââ- <
?
ââ= >
lineInfo
ââ? G
.
ââG H
width
ââH M
-
ââN O
lineInfo
ââP X
.
ââX Y

maxAdvance
ââY c
:
ââd e
lineInfo
ââf n
.
âân o
width
ââo t
+
ââu v
lineInfo
ââw 
.ââ Ä

maxAdvanceââÄ ä
;ââä ã
int
ãã  #
visibleCount
ãã$ 0
=
ãã1 2
lineInfo
ãã3 ;
.
ãã; <#
visibleCharacterCount
ãã< Q
-
ããR S
$num
ããT U
+
ããV W
lineInfo
ããX `
.
ãã` a#
controlCharacterCount
ããa v
;
ããv w
int
éé  #
spaces
éé$ *
=
éé+ ,
(
éé- .
characterInfos
éé. <
[
éé< =
lineInfo
éé= E
.
ééE F 
lastCharacterIndex
ééF X
]
ééX Y
.
ééY Z
	isVisible
ééZ c
?
ééd e
lineInfo
ééf n
.
één o

spaceCount
ééo y
:
ééz {
lineInfoéé| Ñ
.ééÑ Ö

spaceCountééÖ è
-ééê ë
$numééí ì
)ééì î
-ééï ñ
lineInfoééó ü
.ééü †%
controlCharacterCountéé† µ
;ééµ ∂
if
êê  "
(
êê# $
isFirstSeperator
êê$ 4
)
êê4 5
{
êê6 7
spaces
êê8 >
-=
êê? A
$num
êêB C
;
êêC D
visibleCount
êêE Q
+=
êêR T
$num
êêU V
;
êêV W
}
êêX Y
float
íí  %
ratio
íí& +
=
íí, -
spaces
íí. 4
>
íí5 6
$num
íí7 8
?
íí9 :"
m_wordWrappingRatios
íí; O
:
ííP Q
$num
ííR S
;
ííS T
if
îî  "
(
îî# $
spaces
îî$ *
<
îî+ ,
$num
îî- .
)
îî. /
spaces
îî0 6
=
îî7 8
$num
îî9 :
;
îî: ;
if
ññ  "
(
ññ# $
unicode
ññ$ +
!=
ññ, .
$num
ññ/ 3
&&
ññ4 6
(
ññ7 8
unicode
ññ8 ?
==
ññ@ B
$num
ññC D
||
ññE G
char
ññH L
.
ññL M
IsSeparator
ññM X
(
ññX Y
(
ññY Z
char
ññZ ^
)
ññ^ _
unicode
ññ_ f
)
ññf g
)
ññg h
)
ññh i
{
óó  !
if
òò$ &
(
òò' (
!
òò( )
m_isRightToLeft
òò) 8
)
òò8 9!
justificationOffset
ôô( ;
+=
ôô< >
new
ôô? B
Vector3
ôôC J
(
ôôJ K
gap
ôôK N
*
ôôO P
(
ôôQ R
$num
ôôR S
-
ôôT U
ratio
ôôV [
)
ôô[ \
/
ôô] ^
spaces
ôô_ e
,
ôôe f
$num
ôôg h
,
ôôh i
$num
ôôj k
)
ôôk l
;
ôôl m
else
öö$ (!
justificationOffset
õõ( ;
-=
õõ< >
new
õõ? B
Vector3
õõC J
(
õõJ K
gap
õõK N
*
õõO P
(
õõQ R
$num
õõR S
-
õõT U
ratio
õõV [
)
õõ[ \
/
õõ] ^
spaces
õõ_ e
,
õõe f
$num
õõg h
,
õõh i
$num
õõj k
)
õõk l
;
õõl m
}
úú  !
else
ùù  $
{
ûû  !
if
üü$ &
(
üü' (
!
üü( )
m_isRightToLeft
üü) 8
)
üü8 9!
justificationOffset
††( ;
+=
††< >
new
††? B
Vector3
††C J
(
††J K
gap
††K N
*
††O P
ratio
††Q V
/
††W X
visibleCount
††Y e
,
††e f
$num
††g h
,
††h i
$num
††j k
)
††k l
;
††l m
else
°°$ (!
justificationOffset
¢¢( ;
-=
¢¢< >
new
¢¢? B
Vector3
¢¢C J
(
¢¢J K
gap
¢¢K N
*
¢¢O P
ratio
¢¢Q V
/
¢¢W X
visibleCount
¢¢Y e
,
¢¢e f
$num
¢¢g h
,
¢¢h i
$num
¢¢j k
)
¢¢k l
;
¢¢l m
}
££  !
}
§§ 
}
•• 
else
¶¶ 
{
ßß 
if
®® 
(
®®  
!
®®  !
m_isRightToLeft
®®! 0
)
®®0 1!
justificationOffset
©©  3
=
©©4 5
new
©©6 9
Vector3
©©: A
(
©©A B
lineInfo
©©B J
.
©©J K

marginLeft
©©K U
,
©©U V
$num
©©W X
,
©©X Y
$num
©©Z [
)
©©[ \
;
©©\ ]
else
™™  !
justificationOffset
´´  3
=
´´4 5
new
´´6 9
Vector3
´´: A
(
´´A B
lineInfo
´´B J
.
´´J K

marginLeft
´´K U
+
´´V W
lineInfo
´´X `
.
´´` a
width
´´a f
,
´´f g
$num
´´h i
,
´´i j
$num
´´k l
)
´´l m
;
´´m n
}
¨¨ 
break
ÆÆ 
;
ÆÆ 
}
ØØ 
offset
≤≤ 
=
≤≤ 
anchorOffset
≤≤ %
+
≤≤& '!
justificationOffset
≤≤( ;
;
≤≤; <
bool
∂∂  
isCharacterVisible
∂∂ '
=
∂∂( )
characterInfos
∂∂* 8
[
∂∂8 9
i
∂∂9 :
]
∂∂: ;
.
∂∂; <
	isVisible
∂∂< E
;
∂∂E F
if
∑∑ 
(
∑∑  
isCharacterVisible
∑∑ &
)
∑∑& '
{
∏∏ !
TMP_TextElementType
ππ '
elementType
ππ( 3
=
ππ4 5
characterInfos
ππ6 D
[
ππD E
i
ππE F
]
ππF G
.
ππG H
elementType
ππH S
;
ππS T
switch
∫∫ 
(
∫∫ 
elementType
∫∫ '
)
∫∫' (
{
ªª 
case
ΩΩ !
TMP_TextElementType
ΩΩ 0
.
ΩΩ0 1
	Character
ΩΩ1 :
:
ΩΩ: ;
Extents
ææ #
lineExtents
ææ$ /
=
ææ0 1
lineInfo
ææ2 :
.
ææ: ;
lineExtents
ææ; F
;
ææF G
float
øø !
uvOffset
øø" *
=
øø+ ,
(
øø- .
m_uvLineOffset
øø. <
*
øø= >
currentLine
øø? J
)
øøJ K
%
øøL M
$num
øøN O
;
øøO P
switch
√√ "
(
√√# $!
m_horizontalMapping
√√$ 7
)
√√7 8
{
ƒƒ 
case
≈≈  $#
TextureMappingOptions
≈≈% :
.
≈≈: ;
	Character
≈≈; D
:
≈≈D E
characterInfos
∆∆$ 2
[
∆∆2 3
i
∆∆3 4
]
∆∆4 5
.
∆∆5 6
	vertex_BL
∆∆6 ?
.
∆∆? @
uv2
∆∆@ C
.
∆∆C D
x
∆∆D E
=
∆∆F G
$num
∆∆H I
;
∆∆I J
characterInfos
««$ 2
[
««2 3
i
««3 4
]
««4 5
.
««5 6
	vertex_TL
««6 ?
.
««? @
uv2
««@ C
.
««C D
x
««D E
=
««F G
$num
««H I
;
««I J
characterInfos
»»$ 2
[
»»2 3
i
»»3 4
]
»»4 5
.
»»5 6
	vertex_TR
»»6 ?
.
»»? @
uv2
»»@ C
.
»»C D
x
»»D E
=
»»F G
$num
»»H I
;
»»I J
characterInfos
……$ 2
[
……2 3
i
……3 4
]
……4 5
.
……5 6
	vertex_BR
……6 ?
.
……? @
uv2
……@ C
.
……C D
x
……D E
=
……F G
$num
……H I
;
……I J
break
  $ )
;
  ) *
case
ÃÃ  $#
TextureMappingOptions
ÃÃ% :
.
ÃÃ: ;
Line
ÃÃ; ?
:
ÃÃ? @
if
ÕÕ$ &
(
ÕÕ' (
m_textAlignment
ÕÕ( 7
!=
ÕÕ8 :"
TextAlignmentOptions
ÕÕ; O
.
ÕÕO P
	Justified
ÕÕP Y
)
ÕÕY Z
{
ŒŒ$ %
characterInfos
œœ( 6
[
œœ6 7
i
œœ7 8
]
œœ8 9
.
œœ9 :
	vertex_BL
œœ: C
.
œœC D
uv2
œœD G
.
œœG H
x
œœH I
=
œœJ K
(
œœL M
characterInfos
œœM [
[
œœ[ \
i
œœ\ ]
]
œœ] ^
.
œœ^ _
	vertex_BL
œœ_ h
.
œœh i
position
œœi q
.
œœq r
x
œœr s
-
œœt u
lineExtentsœœv Å
.œœÅ Ç
minœœÇ Ö
.œœÖ Ü
xœœÜ á
)œœá à
/œœâ ä
(œœã å
lineExtentsœœå ó
.œœó ò
maxœœò õ
.œœõ ú
xœœú ù
-œœû ü
lineExtentsœœ† ´
.œœ´ ¨
minœœ¨ Ø
.œœØ ∞
xœœ∞ ±
)œœ± ≤
+œœ≥ ¥
uvOffsetœœµ Ω
;œœΩ æ
characterInfos
––( 6
[
––6 7
i
––7 8
]
––8 9
.
––9 :
	vertex_TL
––: C
.
––C D
uv2
––D G
.
––G H
x
––H I
=
––J K
(
––L M
characterInfos
––M [
[
––[ \
i
––\ ]
]
––] ^
.
––^ _
	vertex_TL
––_ h
.
––h i
position
––i q
.
––q r
x
––r s
-
––t u
lineExtents––v Å
.––Å Ç
min––Ç Ö
.––Ö Ü
x––Ü á
)––á à
/––â ä
(––ã å
lineExtents––å ó
.––ó ò
max––ò õ
.––õ ú
x––ú ù
-––û ü
lineExtents––† ´
.––´ ¨
min––¨ Ø
.––Ø ∞
x––∞ ±
)––± ≤
+––≥ ¥
uvOffset––µ Ω
;––Ω æ
characterInfos
——( 6
[
——6 7
i
——7 8
]
——8 9
.
——9 :
	vertex_TR
——: C
.
——C D
uv2
——D G
.
——G H
x
——H I
=
——J K
(
——L M
characterInfos
——M [
[
——[ \
i
——\ ]
]
——] ^
.
——^ _
	vertex_TR
——_ h
.
——h i
position
——i q
.
——q r
x
——r s
-
——t u
lineExtents——v Å
.——Å Ç
min——Ç Ö
.——Ö Ü
x——Ü á
)——á à
/——â ä
(——ã å
lineExtents——å ó
.——ó ò
max——ò õ
.——õ ú
x——ú ù
-——û ü
lineExtents——† ´
.——´ ¨
min——¨ Ø
.——Ø ∞
x——∞ ±
)——± ≤
+——≥ ¥
uvOffset——µ Ω
;——Ω æ
characterInfos
““( 6
[
““6 7
i
““7 8
]
““8 9
.
““9 :
	vertex_BR
““: C
.
““C D
uv2
““D G
.
““G H
x
““H I
=
““J K
(
““L M
characterInfos
““M [
[
““[ \
i
““\ ]
]
““] ^
.
““^ _
	vertex_BR
““_ h
.
““h i
position
““i q
.
““q r
x
““r s
-
““t u
lineExtents““v Å
.““Å Ç
min““Ç Ö
.““Ö Ü
x““Ü á
)““á à
/““â ä
(““ã å
lineExtents““å ó
.““ó ò
max““ò õ
.““õ ú
x““ú ù
-““û ü
lineExtents““† ´
.““´ ¨
min““¨ Ø
.““Ø ∞
x““∞ ±
)““± ≤
+““≥ ¥
uvOffset““µ Ω
;““Ω æ
break
””( -
;
””- .
}
‘‘$ %
else
’’$ (
{
÷÷$ %
characterInfos
◊◊( 6
[
◊◊6 7
i
◊◊7 8
]
◊◊8 9
.
◊◊9 :
	vertex_BL
◊◊: C
.
◊◊C D
uv2
◊◊D G
.
◊◊G H
x
◊◊H I
=
◊◊J K
(
◊◊L M
characterInfos
◊◊M [
[
◊◊[ \
i
◊◊\ ]
]
◊◊] ^
.
◊◊^ _
	vertex_BL
◊◊_ h
.
◊◊h i
position
◊◊i q
.
◊◊q r
x
◊◊r s
+
◊◊t u"
justificationOffset◊◊v â
.◊◊â ä
x◊◊ä ã
-◊◊å ç
m_meshExtents◊◊é õ
.◊◊õ ú
min◊◊ú ü
.◊◊ü †
x◊◊† °
)◊◊° ¢
/◊◊£ §
(◊◊• ¶
m_meshExtents◊◊¶ ≥
.◊◊≥ ¥
max◊◊¥ ∑
.◊◊∑ ∏
x◊◊∏ π
-◊◊∫ ª
m_meshExtents◊◊º …
.◊◊…  
min◊◊  Õ
.◊◊Õ Œ
x◊◊Œ œ
)◊◊œ –
+◊◊— “
uvOffset◊◊” €
;◊◊€ ‹
characterInfos
ÿÿ( 6
[
ÿÿ6 7
i
ÿÿ7 8
]
ÿÿ8 9
.
ÿÿ9 :
	vertex_TL
ÿÿ: C
.
ÿÿC D
uv2
ÿÿD G
.
ÿÿG H
x
ÿÿH I
=
ÿÿJ K
(
ÿÿL M
characterInfos
ÿÿM [
[
ÿÿ[ \
i
ÿÿ\ ]
]
ÿÿ] ^
.
ÿÿ^ _
	vertex_TL
ÿÿ_ h
.
ÿÿh i
position
ÿÿi q
.
ÿÿq r
x
ÿÿr s
+
ÿÿt u"
justificationOffsetÿÿv â
.ÿÿâ ä
xÿÿä ã
-ÿÿå ç
m_meshExtentsÿÿé õ
.ÿÿõ ú
minÿÿú ü
.ÿÿü †
xÿÿ† °
)ÿÿ° ¢
/ÿÿ£ §
(ÿÿ• ¶
m_meshExtentsÿÿ¶ ≥
.ÿÿ≥ ¥
maxÿÿ¥ ∑
.ÿÿ∑ ∏
xÿÿ∏ π
-ÿÿ∫ ª
m_meshExtentsÿÿº …
.ÿÿ…  
minÿÿ  Õ
.ÿÿÕ Œ
xÿÿŒ œ
)ÿÿœ –
+ÿÿ— “
uvOffsetÿÿ” €
;ÿÿ€ ‹
characterInfos
ŸŸ( 6
[
ŸŸ6 7
i
ŸŸ7 8
]
ŸŸ8 9
.
ŸŸ9 :
	vertex_TR
ŸŸ: C
.
ŸŸC D
uv2
ŸŸD G
.
ŸŸG H
x
ŸŸH I
=
ŸŸJ K
(
ŸŸL M
characterInfos
ŸŸM [
[
ŸŸ[ \
i
ŸŸ\ ]
]
ŸŸ] ^
.
ŸŸ^ _
	vertex_TR
ŸŸ_ h
.
ŸŸh i
position
ŸŸi q
.
ŸŸq r
x
ŸŸr s
+
ŸŸt u"
justificationOffsetŸŸv â
.ŸŸâ ä
xŸŸä ã
-ŸŸå ç
m_meshExtentsŸŸé õ
.ŸŸõ ú
minŸŸú ü
.ŸŸü †
xŸŸ† °
)ŸŸ° ¢
/ŸŸ£ §
(ŸŸ• ¶
m_meshExtentsŸŸ¶ ≥
.ŸŸ≥ ¥
maxŸŸ¥ ∑
.ŸŸ∑ ∏
xŸŸ∏ π
-ŸŸ∫ ª
m_meshExtentsŸŸº …
.ŸŸ…  
minŸŸ  Õ
.ŸŸÕ Œ
xŸŸŒ œ
)ŸŸœ –
+ŸŸ— “
uvOffsetŸŸ” €
;ŸŸ€ ‹
characterInfos
⁄⁄( 6
[
⁄⁄6 7
i
⁄⁄7 8
]
⁄⁄8 9
.
⁄⁄9 :
	vertex_BR
⁄⁄: C
.
⁄⁄C D
uv2
⁄⁄D G
.
⁄⁄G H
x
⁄⁄H I
=
⁄⁄J K
(
⁄⁄L M
characterInfos
⁄⁄M [
[
⁄⁄[ \
i
⁄⁄\ ]
]
⁄⁄] ^
.
⁄⁄^ _
	vertex_BR
⁄⁄_ h
.
⁄⁄h i
position
⁄⁄i q
.
⁄⁄q r
x
⁄⁄r s
+
⁄⁄t u"
justificationOffset⁄⁄v â
.⁄⁄â ä
x⁄⁄ä ã
-⁄⁄å ç
m_meshExtents⁄⁄é õ
.⁄⁄õ ú
min⁄⁄ú ü
.⁄⁄ü †
x⁄⁄† °
)⁄⁄° ¢
/⁄⁄£ §
(⁄⁄• ¶
m_meshExtents⁄⁄¶ ≥
.⁄⁄≥ ¥
max⁄⁄¥ ∑
.⁄⁄∑ ∏
x⁄⁄∏ π
-⁄⁄∫ ª
m_meshExtents⁄⁄º …
.⁄⁄…  
min⁄⁄  Õ
.⁄⁄Õ Œ
x⁄⁄Œ œ
)⁄⁄œ –
+⁄⁄— “
uvOffset⁄⁄” €
;⁄⁄€ ‹
break
€€( -
;
€€- .
}
‹‹$ %
case
ﬁﬁ  $#
TextureMappingOptions
ﬁﬁ% :
.
ﬁﬁ: ;
	Paragraph
ﬁﬁ; D
:
ﬁﬁD E
characterInfos
ﬂﬂ$ 2
[
ﬂﬂ2 3
i
ﬂﬂ3 4
]
ﬂﬂ4 5
.
ﬂﬂ5 6
	vertex_BL
ﬂﬂ6 ?
.
ﬂﬂ? @
uv2
ﬂﬂ@ C
.
ﬂﬂC D
x
ﬂﬂD E
=
ﬂﬂF G
(
ﬂﬂH I
characterInfos
ﬂﬂI W
[
ﬂﬂW X
i
ﬂﬂX Y
]
ﬂﬂY Z
.
ﬂﬂZ [
	vertex_BL
ﬂﬂ[ d
.
ﬂﬂd e
position
ﬂﬂe m
.
ﬂﬂm n
x
ﬂﬂn o
+
ﬂﬂp q"
justificationOffsetﬂﬂr Ö
.ﬂﬂÖ Ü
xﬂﬂÜ á
-ﬂﬂà â
m_meshExtentsﬂﬂä ó
.ﬂﬂó ò
minﬂﬂò õ
.ﬂﬂõ ú
xﬂﬂú ù
)ﬂﬂù û
/ﬂﬂü †
(ﬂﬂ° ¢
m_meshExtentsﬂﬂ¢ Ø
.ﬂﬂØ ∞
maxﬂﬂ∞ ≥
.ﬂﬂ≥ ¥
xﬂﬂ¥ µ
-ﬂﬂ∂ ∑
m_meshExtentsﬂﬂ∏ ≈
.ﬂﬂ≈ ∆
minﬂﬂ∆ …
.ﬂﬂ…  
xﬂﬂ  À
)ﬂﬂÀ Ã
+ﬂﬂÕ Œ
uvOffsetﬂﬂœ ◊
;ﬂﬂ◊ ÿ
characterInfos
‡‡$ 2
[
‡‡2 3
i
‡‡3 4
]
‡‡4 5
.
‡‡5 6
	vertex_TL
‡‡6 ?
.
‡‡? @
uv2
‡‡@ C
.
‡‡C D
x
‡‡D E
=
‡‡F G
(
‡‡H I
characterInfos
‡‡I W
[
‡‡W X
i
‡‡X Y
]
‡‡Y Z
.
‡‡Z [
	vertex_TL
‡‡[ d
.
‡‡d e
position
‡‡e m
.
‡‡m n
x
‡‡n o
+
‡‡p q"
justificationOffset‡‡r Ö
.‡‡Ö Ü
x‡‡Ü á
-‡‡à â
m_meshExtents‡‡ä ó
.‡‡ó ò
min‡‡ò õ
.‡‡õ ú
x‡‡ú ù
)‡‡ù û
/‡‡ü †
(‡‡° ¢
m_meshExtents‡‡¢ Ø
.‡‡Ø ∞
max‡‡∞ ≥
.‡‡≥ ¥
x‡‡¥ µ
-‡‡∂ ∑
m_meshExtents‡‡∏ ≈
.‡‡≈ ∆
min‡‡∆ …
.‡‡…  
x‡‡  À
)‡‡À Ã
+‡‡Õ Œ
uvOffset‡‡œ ◊
;‡‡◊ ÿ
characterInfos
··$ 2
[
··2 3
i
··3 4
]
··4 5
.
··5 6
	vertex_TR
··6 ?
.
··? @
uv2
··@ C
.
··C D
x
··D E
=
··F G
(
··H I
characterInfos
··I W
[
··W X
i
··X Y
]
··Y Z
.
··Z [
	vertex_TR
··[ d
.
··d e
position
··e m
.
··m n
x
··n o
+
··p q"
justificationOffset··r Ö
.··Ö Ü
x··Ü á
-··à â
m_meshExtents··ä ó
.··ó ò
min··ò õ
.··õ ú
x··ú ù
)··ù û
/··ü †
(··° ¢
m_meshExtents··¢ Ø
.··Ø ∞
max··∞ ≥
.··≥ ¥
x··¥ µ
-··∂ ∑
m_meshExtents··∏ ≈
.··≈ ∆
min··∆ …
.··…  
x··  À
)··À Ã
+··Õ Œ
uvOffset··œ ◊
;··◊ ÿ
characterInfos
‚‚$ 2
[
‚‚2 3
i
‚‚3 4
]
‚‚4 5
.
‚‚5 6
	vertex_BR
‚‚6 ?
.
‚‚? @
uv2
‚‚@ C
.
‚‚C D
x
‚‚D E
=
‚‚F G
(
‚‚H I
characterInfos
‚‚I W
[
‚‚W X
i
‚‚X Y
]
‚‚Y Z
.
‚‚Z [
	vertex_BR
‚‚[ d
.
‚‚d e
position
‚‚e m
.
‚‚m n
x
‚‚n o
+
‚‚p q"
justificationOffset‚‚r Ö
.‚‚Ö Ü
x‚‚Ü á
-‚‚à â
m_meshExtents‚‚ä ó
.‚‚ó ò
min‚‚ò õ
.‚‚õ ú
x‚‚ú ù
)‚‚ù û
/‚‚ü †
(‚‚° ¢
m_meshExtents‚‚¢ Ø
.‚‚Ø ∞
max‚‚∞ ≥
.‚‚≥ ¥
x‚‚¥ µ
-‚‚∂ ∑
m_meshExtents‚‚∏ ≈
.‚‚≈ ∆
min‚‚∆ …
.‚‚…  
x‚‚  À
)‚‚À Ã
+‚‚Õ Œ
uvOffset‚‚œ ◊
;‚‚◊ ÿ
break
„„$ )
;
„„) *
case
ÂÂ  $#
TextureMappingOptions
ÂÂ% :
.
ÂÂ: ;
MatchAspect
ÂÂ; F
:
ÂÂF G
switch
ÁÁ$ *
(
ÁÁ+ ,
m_verticalMapping
ÁÁ, =
)
ÁÁ= >
{
ËË$ %
case
ÈÈ( ,#
TextureMappingOptions
ÈÈ- B
.
ÈÈB C
	Character
ÈÈC L
:
ÈÈL M
characterInfos
ÍÍ, :
[
ÍÍ: ;
i
ÍÍ; <
]
ÍÍ< =
.
ÍÍ= >
	vertex_BL
ÍÍ> G
.
ÍÍG H
uv2
ÍÍH K
.
ÍÍK L
y
ÍÍL M
=
ÍÍN O
$num
ÍÍP Q
;
ÍÍQ R
characterInfos
ÎÎ, :
[
ÎÎ: ;
i
ÎÎ; <
]
ÎÎ< =
.
ÎÎ= >
	vertex_TL
ÎÎ> G
.
ÎÎG H
uv2
ÎÎH K
.
ÎÎK L
y
ÎÎL M
=
ÎÎN O
$num
ÎÎP Q
;
ÎÎQ R
characterInfos
ÏÏ, :
[
ÏÏ: ;
i
ÏÏ; <
]
ÏÏ< =
.
ÏÏ= >
	vertex_TR
ÏÏ> G
.
ÏÏG H
uv2
ÏÏH K
.
ÏÏK L
y
ÏÏL M
=
ÏÏN O
$num
ÏÏP Q
;
ÏÏQ R
characterInfos
ÌÌ, :
[
ÌÌ: ;
i
ÌÌ; <
]
ÌÌ< =
.
ÌÌ= >
	vertex_BR
ÌÌ> G
.
ÌÌG H
uv2
ÌÌH K
.
ÌÌK L
y
ÌÌL M
=
ÌÌN O
$num
ÌÌP Q
;
ÌÌQ R
break
ÓÓ, 1
;
ÓÓ1 2
case
( ,#
TextureMappingOptions
- B
.
B C
Line
C G
:
G H
characterInfos
ÒÒ, :
[
ÒÒ: ;
i
ÒÒ; <
]
ÒÒ< =
.
ÒÒ= >
	vertex_BL
ÒÒ> G
.
ÒÒG H
uv2
ÒÒH K
.
ÒÒK L
y
ÒÒL M
=
ÒÒN O
(
ÒÒP Q
characterInfos
ÒÒQ _
[
ÒÒ_ `
i
ÒÒ` a
]
ÒÒa b
.
ÒÒb c
	vertex_BL
ÒÒc l
.
ÒÒl m
position
ÒÒm u
.
ÒÒu v
y
ÒÒv w
-
ÒÒx y
lineExtentsÒÒz Ö
.ÒÒÖ Ü
minÒÒÜ â
.ÒÒâ ä
yÒÒä ã
)ÒÒã å
/ÒÒç é
(ÒÒè ê
lineExtentsÒÒê õ
.ÒÒõ ú
maxÒÒú ü
.ÒÒü †
yÒÒ† °
-ÒÒ¢ £
lineExtentsÒÒ§ Ø
.ÒÒØ ∞
minÒÒ∞ ≥
.ÒÒ≥ ¥
yÒÒ¥ µ
)ÒÒµ ∂
+ÒÒ∑ ∏
uvOffsetÒÒπ ¡
;ÒÒ¡ ¬
characterInfos
ÚÚ, :
[
ÚÚ: ;
i
ÚÚ; <
]
ÚÚ< =
.
ÚÚ= >
	vertex_TL
ÚÚ> G
.
ÚÚG H
uv2
ÚÚH K
.
ÚÚK L
y
ÚÚL M
=
ÚÚN O
(
ÚÚP Q
characterInfos
ÚÚQ _
[
ÚÚ_ `
i
ÚÚ` a
]
ÚÚa b
.
ÚÚb c
	vertex_TL
ÚÚc l
.
ÚÚl m
position
ÚÚm u
.
ÚÚu v
y
ÚÚv w
-
ÚÚx y
lineExtentsÚÚz Ö
.ÚÚÖ Ü
minÚÚÜ â
.ÚÚâ ä
yÚÚä ã
)ÚÚã å
/ÚÚç é
(ÚÚè ê
lineExtentsÚÚê õ
.ÚÚõ ú
maxÚÚú ü
.ÚÚü †
yÚÚ† °
-ÚÚ¢ £
lineExtentsÚÚ§ Ø
.ÚÚØ ∞
minÚÚ∞ ≥
.ÚÚ≥ ¥
yÚÚ¥ µ
)ÚÚµ ∂
+ÚÚ∑ ∏
uvOffsetÚÚπ ¡
;ÚÚ¡ ¬
characterInfos
ÛÛ, :
[
ÛÛ: ;
i
ÛÛ; <
]
ÛÛ< =
.
ÛÛ= >
	vertex_TR
ÛÛ> G
.
ÛÛG H
uv2
ÛÛH K
.
ÛÛK L
y
ÛÛL M
=
ÛÛN O
characterInfos
ÛÛP ^
[
ÛÛ^ _
i
ÛÛ_ `
]
ÛÛ` a
.
ÛÛa b
	vertex_BL
ÛÛb k
.
ÛÛk l
uv2
ÛÛl o
.
ÛÛo p
y
ÛÛp q
;
ÛÛq r
characterInfos
ÙÙ, :
[
ÙÙ: ;
i
ÙÙ; <
]
ÙÙ< =
.
ÙÙ= >
	vertex_BR
ÙÙ> G
.
ÙÙG H
uv2
ÙÙH K
.
ÙÙK L
y
ÙÙL M
=
ÙÙN O
characterInfos
ÙÙP ^
[
ÙÙ^ _
i
ÙÙ_ `
]
ÙÙ` a
.
ÙÙa b
	vertex_TL
ÙÙb k
.
ÙÙk l
uv2
ÙÙl o
.
ÙÙo p
y
ÙÙp q
;
ÙÙq r
break
ıı, 1
;
ıı1 2
case
˜˜( ,#
TextureMappingOptions
˜˜- B
.
˜˜B C
	Paragraph
˜˜C L
:
˜˜L M
characterInfos
¯¯, :
[
¯¯: ;
i
¯¯; <
]
¯¯< =
.
¯¯= >
	vertex_BL
¯¯> G
.
¯¯G H
uv2
¯¯H K
.
¯¯K L
y
¯¯L M
=
¯¯N O
(
¯¯P Q
characterInfos
¯¯Q _
[
¯¯_ `
i
¯¯` a
]
¯¯a b
.
¯¯b c
	vertex_BL
¯¯c l
.
¯¯l m
position
¯¯m u
.
¯¯u v
y
¯¯v w
-
¯¯x y
m_meshExtents¯¯z á
.¯¯á à
min¯¯à ã
.¯¯ã å
y¯¯å ç
)¯¯ç é
/¯¯è ê
(¯¯ë í
m_meshExtents¯¯í ü
.¯¯ü †
max¯¯† £
.¯¯£ §
y¯¯§ •
-¯¯¶ ß
m_meshExtents¯¯® µ
.¯¯µ ∂
min¯¯∂ π
.¯¯π ∫
y¯¯∫ ª
)¯¯ª º
+¯¯Ω æ
uvOffset¯¯ø «
;¯¯« »
characterInfos
˘˘, :
[
˘˘: ;
i
˘˘; <
]
˘˘< =
.
˘˘= >
	vertex_TL
˘˘> G
.
˘˘G H
uv2
˘˘H K
.
˘˘K L
y
˘˘L M
=
˘˘N O
(
˘˘P Q
characterInfos
˘˘Q _
[
˘˘_ `
i
˘˘` a
]
˘˘a b
.
˘˘b c
	vertex_TL
˘˘c l
.
˘˘l m
position
˘˘m u
.
˘˘u v
y
˘˘v w
-
˘˘x y
m_meshExtents˘˘z á
.˘˘á à
min˘˘à ã
.˘˘ã å
y˘˘å ç
)˘˘ç é
/˘˘è ê
(˘˘ë í
m_meshExtents˘˘í ü
.˘˘ü †
max˘˘† £
.˘˘£ §
y˘˘§ •
-˘˘¶ ß
m_meshExtents˘˘® µ
.˘˘µ ∂
min˘˘∂ π
.˘˘π ∫
y˘˘∫ ª
)˘˘ª º
+˘˘Ω æ
uvOffset˘˘ø «
;˘˘« »
characterInfos
˙˙, :
[
˙˙: ;
i
˙˙; <
]
˙˙< =
.
˙˙= >
	vertex_TR
˙˙> G
.
˙˙G H
uv2
˙˙H K
.
˙˙K L
y
˙˙L M
=
˙˙N O
characterInfos
˙˙P ^
[
˙˙^ _
i
˙˙_ `
]
˙˙` a
.
˙˙a b
	vertex_BL
˙˙b k
.
˙˙k l
uv2
˙˙l o
.
˙˙o p
y
˙˙p q
;
˙˙q r
characterInfos
˚˚, :
[
˚˚: ;
i
˚˚; <
]
˚˚< =
.
˚˚= >
	vertex_BR
˚˚> G
.
˚˚G H
uv2
˚˚H K
.
˚˚K L
y
˚˚L M
=
˚˚N O
characterInfos
˚˚P ^
[
˚˚^ _
i
˚˚_ `
]
˚˚` a
.
˚˚a b
	vertex_TL
˚˚b k
.
˚˚k l
uv2
˚˚l o
.
˚˚o p
y
˚˚p q
;
˚˚q r
break
¸¸, 1
;
¸¸1 2
case
˛˛( ,#
TextureMappingOptions
˛˛- B
.
˛˛B C
MatchAspect
˛˛C N
:
˛˛N O
Debug
ˇˇ, 1
.
ˇˇ1 2
Log
ˇˇ2 5
(
ˇˇ5 6
$str
ˇˇ6 g
)
ˇˇg h
;
ˇˇh i
break
ÄÄ, 1
;
ÄÄ1 2
}
ÅÅ$ %
float
ÑÑ$ )
xDelta
ÑÑ* 0
=
ÑÑ1 2
(
ÑÑ3 4
$num
ÑÑ4 5
-
ÑÑ6 7
(
ÑÑ8 9
(
ÑÑ9 :
characterInfos
ÑÑ: H
[
ÑÑH I
i
ÑÑI J
]
ÑÑJ K
.
ÑÑK L
	vertex_BL
ÑÑL U
.
ÑÑU V
uv2
ÑÑV Y
.
ÑÑY Z
y
ÑÑZ [
+
ÑÑ\ ]
characterInfos
ÑÑ^ l
[
ÑÑl m
i
ÑÑm n
]
ÑÑn o
.
ÑÑo p
	vertex_TL
ÑÑp y
.
ÑÑy z
uv2
ÑÑz }
.
ÑÑ} ~
y
ÑÑ~ 
)ÑÑ Ä
*ÑÑÅ Ç
characterInfosÑÑÉ ë
[ÑÑë í
iÑÑí ì
]ÑÑì î
.ÑÑî ï
aspectRatioÑÑï †
)ÑÑ† °
)ÑÑ° ¢
/ÑÑ£ §
$numÑÑ• ¶
;ÑÑ¶ ß
characterInfos
ÜÜ$ 2
[
ÜÜ2 3
i
ÜÜ3 4
]
ÜÜ4 5
.
ÜÜ5 6
	vertex_BL
ÜÜ6 ?
.
ÜÜ? @
uv2
ÜÜ@ C
.
ÜÜC D
x
ÜÜD E
=
ÜÜF G
(
ÜÜH I
characterInfos
ÜÜI W
[
ÜÜW X
i
ÜÜX Y
]
ÜÜY Z
.
ÜÜZ [
	vertex_BL
ÜÜ[ d
.
ÜÜd e
uv2
ÜÜe h
.
ÜÜh i
y
ÜÜi j
*
ÜÜk l
characterInfos
ÜÜm {
[
ÜÜ{ |
i
ÜÜ| }
]
ÜÜ} ~
.
ÜÜ~ 
aspectRatioÜÜ ä
)ÜÜä ã
+ÜÜå ç
xDeltaÜÜé î
+ÜÜï ñ
uvOffsetÜÜó ü
;ÜÜü †
characterInfos
áá$ 2
[
áá2 3
i
áá3 4
]
áá4 5
.
áá5 6
	vertex_TL
áá6 ?
.
áá? @
uv2
áá@ C
.
ááC D
x
ááD E
=
ááF G
characterInfos
ááH V
[
ááV W
i
ááW X
]
ááX Y
.
ááY Z
	vertex_BL
ááZ c
.
áác d
uv2
áád g
.
áág h
x
ááh i
;
áái j
characterInfos
àà$ 2
[
àà2 3
i
àà3 4
]
àà4 5
.
àà5 6
	vertex_TR
àà6 ?
.
àà? @
uv2
àà@ C
.
ààC D
x
ààD E
=
ààF G
(
ààH I
characterInfos
ààI W
[
ààW X
i
ààX Y
]
ààY Z
.
ààZ [
	vertex_TL
àà[ d
.
ààd e
uv2
ààe h
.
ààh i
y
àài j
*
ààk l
characterInfos
ààm {
[
àà{ |
i
àà| }
]
àà} ~
.
àà~ 
aspectRatioàà ä
)ààä ã
+ààå ç
xDeltaààé î
+ààï ñ
uvOffsetààó ü
;ààü †
characterInfos
ââ$ 2
[
ââ2 3
i
ââ3 4
]
ââ4 5
.
ââ5 6
	vertex_BR
ââ6 ?
.
ââ? @
uv2
ââ@ C
.
ââC D
x
ââD E
=
ââF G
characterInfos
ââH V
[
ââV W
i
ââW X
]
ââX Y
.
ââY Z
	vertex_TR
ââZ c
.
ââc d
uv2
ââd g
.
ââg h
x
ââh i
;
ââi j
break
ää$ )
;
ää) *
}
ãã 
switch
çç "
(
çç# $
m_verticalMapping
çç$ 5
)
çç5 6
{
éé 
case
èè  $#
TextureMappingOptions
èè% :
.
èè: ;
	Character
èè; D
:
èèD E
characterInfos
êê$ 2
[
êê2 3
i
êê3 4
]
êê4 5
.
êê5 6
	vertex_BL
êê6 ?
.
êê? @
uv2
êê@ C
.
êêC D
y
êêD E
=
êêF G
$num
êêH I
;
êêI J
characterInfos
ëë$ 2
[
ëë2 3
i
ëë3 4
]
ëë4 5
.
ëë5 6
	vertex_TL
ëë6 ?
.
ëë? @
uv2
ëë@ C
.
ëëC D
y
ëëD E
=
ëëF G
$num
ëëH I
;
ëëI J
characterInfos
íí$ 2
[
íí2 3
i
íí3 4
]
íí4 5
.
íí5 6
	vertex_TR
íí6 ?
.
íí? @
uv2
íí@ C
.
ííC D
y
ííD E
=
ííF G
$num
ííH I
;
ííI J
characterInfos
ìì$ 2
[
ìì2 3
i
ìì3 4
]
ìì4 5
.
ìì5 6
	vertex_BR
ìì6 ?
.
ìì? @
uv2
ìì@ C
.
ììC D
y
ììD E
=
ììF G
$num
ììH I
;
ììI J
break
îî$ )
;
îî) *
case
ññ  $#
TextureMappingOptions
ññ% :
.
ññ: ;
Line
ññ; ?
:
ññ? @
characterInfos
óó$ 2
[
óó2 3
i
óó3 4
]
óó4 5
.
óó5 6
	vertex_BL
óó6 ?
.
óó? @
uv2
óó@ C
.
óóC D
y
óóD E
=
óóF G
(
óóH I
characterInfos
óóI W
[
óóW X
i
óóX Y
]
óóY Z
.
óóZ [
	vertex_BL
óó[ d
.
óód e
position
óóe m
.
óóm n
y
óón o
-
óóp q
lineInfo
óór z
.
óóz {
	descenderóó{ Ñ
)óóÑ Ö
/óóÜ á
(óóà â
lineInfoóóâ ë
.óóë í
ascenderóóí ö
-óóõ ú
lineInfoóóù •
.óó• ¶
	descenderóó¶ Ø
)óóØ ∞
;óó∞ ±
characterInfos
òò$ 2
[
òò2 3
i
òò3 4
]
òò4 5
.
òò5 6
	vertex_TL
òò6 ?
.
òò? @
uv2
òò@ C
.
òòC D
y
òòD E
=
òòF G
(
òòH I
characterInfos
òòI W
[
òòW X
i
òòX Y
]
òòY Z
.
òòZ [
	vertex_TL
òò[ d
.
òòd e
position
òòe m
.
òòm n
y
òòn o
-
òòp q
lineInfo
òòr z
.
òòz {
	descenderòò{ Ñ
)òòÑ Ö
/òòÜ á
(òòà â
lineInfoòòâ ë
.òòë í
ascenderòòí ö
-òòõ ú
lineInfoòòù •
.òò• ¶
	descenderòò¶ Ø
)òòØ ∞
;òò∞ ±
characterInfos
ôô$ 2
[
ôô2 3
i
ôô3 4
]
ôô4 5
.
ôô5 6
	vertex_TR
ôô6 ?
.
ôô? @
uv2
ôô@ C
.
ôôC D
y
ôôD E
=
ôôF G
characterInfos
ôôH V
[
ôôV W
i
ôôW X
]
ôôX Y
.
ôôY Z
	vertex_TL
ôôZ c
.
ôôc d
uv2
ôôd g
.
ôôg h
y
ôôh i
;
ôôi j
characterInfos
öö$ 2
[
öö2 3
i
öö3 4
]
öö4 5
.
öö5 6
	vertex_BR
öö6 ?
.
öö? @
uv2
öö@ C
.
ööC D
y
ööD E
=
ööF G
characterInfos
ööH V
[
ööV W
i
ööW X
]
ööX Y
.
ööY Z
	vertex_BL
ööZ c
.
ööc d
uv2
ööd g
.
öög h
y
ööh i
;
ööi j
break
õõ$ )
;
õõ) *
case
ùù  $#
TextureMappingOptions
ùù% :
.
ùù: ;
	Paragraph
ùù; D
:
ùùD E
characterInfos
ûû$ 2
[
ûû2 3
i
ûû3 4
]
ûû4 5
.
ûû5 6
	vertex_BL
ûû6 ?
.
ûû? @
uv2
ûû@ C
.
ûûC D
y
ûûD E
=
ûûF G
(
ûûH I
characterInfos
ûûI W
[
ûûW X
i
ûûX Y
]
ûûY Z
.
ûûZ [
	vertex_BL
ûû[ d
.
ûûd e
position
ûûe m
.
ûûm n
y
ûûn o
-
ûûp q
m_meshExtents
ûûr 
.ûû Ä
minûûÄ É
.ûûÉ Ñ
yûûÑ Ö
)ûûÖ Ü
/ûûá à
(ûûâ ä
m_meshExtentsûûä ó
.ûûó ò
maxûûò õ
.ûûõ ú
yûûú ù
-ûûû ü
m_meshExtentsûû† ≠
.ûû≠ Æ
minûûÆ ±
.ûû± ≤
yûû≤ ≥
)ûû≥ ¥
;ûû¥ µ
characterInfos
üü$ 2
[
üü2 3
i
üü3 4
]
üü4 5
.
üü5 6
	vertex_TL
üü6 ?
.
üü? @
uv2
üü@ C
.
üüC D
y
üüD E
=
üüF G
(
üüH I
characterInfos
üüI W
[
üüW X
i
üüX Y
]
üüY Z
.
üüZ [
	vertex_TL
üü[ d
.
üüd e
position
üüe m
.
üüm n
y
üün o
-
üüp q
m_meshExtents
üür 
.üü Ä
minüüÄ É
.üüÉ Ñ
yüüÑ Ö
)üüÖ Ü
/üüá à
(üüâ ä
m_meshExtentsüüä ó
.üüó ò
maxüüò õ
.üüõ ú
yüüú ù
-üüû ü
m_meshExtentsüü† ≠
.üü≠ Æ
minüüÆ ±
.üü± ≤
yüü≤ ≥
)üü≥ ¥
;üü¥ µ
characterInfos
††$ 2
[
††2 3
i
††3 4
]
††4 5
.
††5 6
	vertex_TR
††6 ?
.
††? @
uv2
††@ C
.
††C D
y
††D E
=
††F G
characterInfos
††H V
[
††V W
i
††W X
]
††X Y
.
††Y Z
	vertex_TL
††Z c
.
††c d
uv2
††d g
.
††g h
y
††h i
;
††i j
characterInfos
°°$ 2
[
°°2 3
i
°°3 4
]
°°4 5
.
°°5 6
	vertex_BR
°°6 ?
.
°°? @
uv2
°°@ C
.
°°C D
y
°°D E
=
°°F G
characterInfos
°°H V
[
°°V W
i
°°W X
]
°°X Y
.
°°Y Z
	vertex_BL
°°Z c
.
°°c d
uv2
°°d g
.
°°g h
y
°°h i
;
°°i j
break
¢¢$ )
;
¢¢) *
case
§§  $#
TextureMappingOptions
§§% :
.
§§: ;
MatchAspect
§§; F
:
§§F G
float
••$ )
yDelta
••* 0
=
••1 2
(
••3 4
$num
••4 5
-
••6 7
(
••8 9
(
••9 :
characterInfos
••: H
[
••H I
i
••I J
]
••J K
.
••K L
	vertex_BL
••L U
.
••U V
uv2
••V Y
.
••Y Z
x
••Z [
+
••\ ]
characterInfos
••^ l
[
••l m
i
••m n
]
••n o
.
••o p
	vertex_TR
••p y
.
••y z
uv2
••z }
.
••} ~
x
••~ 
)•• Ä
/••Å Ç
characterInfos••É ë
[••ë í
i••í ì
]••ì î
.••î ï
aspectRatio••ï †
)••† °
)••° ¢
/••£ §
$num••• ¶
;••¶ ß
characterInfos
ßß$ 2
[
ßß2 3
i
ßß3 4
]
ßß4 5
.
ßß5 6
	vertex_BL
ßß6 ?
.
ßß? @
uv2
ßß@ C
.
ßßC D
y
ßßD E
=
ßßF G
yDelta
ßßH N
+
ßßO P
(
ßßQ R
characterInfos
ßßR `
[
ßß` a
i
ßßa b
]
ßßb c
.
ßßc d
	vertex_BL
ßßd m
.
ßßm n
uv2
ßßn q
.
ßßq r
x
ßßr s
/
ßßt u
characterInfosßßv Ñ
[ßßÑ Ö
ißßÖ Ü
]ßßÜ á
.ßßá à
aspectRatioßßà ì
)ßßì î
;ßßî ï
characterInfos
®®$ 2
[
®®2 3
i
®®3 4
]
®®4 5
.
®®5 6
	vertex_TL
®®6 ?
.
®®? @
uv2
®®@ C
.
®®C D
y
®®D E
=
®®F G
yDelta
®®H N
+
®®O P
(
®®Q R
characterInfos
®®R `
[
®®` a
i
®®a b
]
®®b c
.
®®c d
	vertex_TR
®®d m
.
®®m n
uv2
®®n q
.
®®q r
x
®®r s
/
®®t u
characterInfos®®v Ñ
[®®Ñ Ö
i®®Ö Ü
]®®Ü á
.®®á à
aspectRatio®®à ì
)®®ì î
;®®î ï
characterInfos
©©$ 2
[
©©2 3
i
©©3 4
]
©©4 5
.
©©5 6
	vertex_BR
©©6 ?
.
©©? @
uv2
©©@ C
.
©©C D
y
©©D E
=
©©F G
characterInfos
©©H V
[
©©V W
i
©©W X
]
©©X Y
.
©©Y Z
	vertex_BL
©©Z c
.
©©c d
uv2
©©d g
.
©©g h
y
©©h i
;
©©i j
characterInfos
™™$ 2
[
™™2 3
i
™™3 4
]
™™4 5
.
™™5 6
	vertex_TR
™™6 ?
.
™™? @
uv2
™™@ C
.
™™C D
y
™™D E
=
™™F G
characterInfos
™™H V
[
™™V W
i
™™W X
]
™™X Y
.
™™Y Z
	vertex_TL
™™Z c
.
™™c d
uv2
™™d g
.
™™g h
y
™™h i
;
™™i j
break
´´$ )
;
´´) *
}
¨¨ 
xScale
±± "
=
±±# $
characterInfos
±±% 3
[
±±3 4
i
±±4 5
]
±±5 6
.
±±6 7
scale
±±7 <
*
±±= >
(
±±? @
$num
±±@ A
-
±±B C!
m_charWidthAdjDelta
±±D W
)
±±W X
;
±±X Y
if
≤≤ 
(
≤≤  
!
≤≤  !
characterInfos
≤≤! /
[
≤≤/ 0
i
≤≤0 1
]
≤≤1 2
.
≤≤2 3&
isUsingAlternateTypeface
≤≤3 K
&&
≤≤L N
(
≤≤O P
characterInfos
≤≤P ^
[
≤≤^ _
i
≤≤_ `
]
≤≤` a
.
≤≤a b
style
≤≤b g
&
≤≤h i

FontStyles
≤≤j t
.
≤≤t u
Bold
≤≤u y
)
≤≤y z
==
≤≤{ }

FontStyles≤≤~ à
.≤≤à â
Bold≤≤â ç
)≤≤ç é
xScale≤≤è ï
*=≤≤ñ ò
-≤≤ô ö
$num≤≤ö õ
;≤≤õ ú
switch
¥¥ "
(
¥¥# $
canvasRenderMode
¥¥$ 4
)
¥¥4 5
{
µµ 
case
∂∂  $

RenderMode
∂∂% /
.
∂∂/ 0 
ScreenSpaceOverlay
∂∂0 B
:
∂∂B C
xScale
∑∑$ *
*=
∑∑+ -
Mathf
∑∑. 3
.
∑∑3 4
Abs
∑∑4 7
(
∑∑7 8

lossyScale
∑∑8 B
)
∑∑B C
/
∑∑D E
canvasScaleFactor
∑∑F W
;
∑∑W X
break
∏∏$ )
;
∏∏) *
case
ππ  $

RenderMode
ππ% /
.
ππ/ 0
ScreenSpaceCamera
ππ0 A
:
ππA B
xScale
∫∫$ *
*=
∫∫+ -
isCameraAssigned
∫∫. >
?
∫∫? @
Mathf
∫∫A F
.
∫∫F G
Abs
∫∫G J
(
∫∫J K

lossyScale
∫∫K U
)
∫∫U V
:
∫∫W X
$num
∫∫Y Z
;
∫∫Z [
break
ªª$ )
;
ªª) *
case
ºº  $

RenderMode
ºº% /
.
ºº/ 0

WorldSpace
ºº0 :
:
ºº: ;
xScale
ΩΩ$ *
*=
ΩΩ+ -
Mathf
ΩΩ. 3
.
ΩΩ3 4
Abs
ΩΩ4 7
(
ΩΩ7 8

lossyScale
ΩΩ8 B
)
ΩΩB C
;
ΩΩC D
break
ææ$ )
;
ææ) *
}
øø 
float
»» !
x0
»»" $
=
»»% &
characterInfos
»»' 5
[
»»5 6
i
»»6 7
]
»»7 8
.
»»8 9
	vertex_BL
»»9 B
.
»»B C
uv2
»»C F
.
»»F G
x
»»G H
;
»»H I
float
…… !
y0
……" $
=
……% &
characterInfos
……' 5
[
……5 6
i
……6 7
]
……7 8
.
……8 9
	vertex_BL
……9 B
.
……B C
uv2
……C F
.
……F G
y
……G H
;
……H I
float
   !
x1
  " $
=
  % &
characterInfos
  ' 5
[
  5 6
i
  6 7
]
  7 8
.
  8 9
	vertex_TR
  9 B
.
  B C
uv2
  C F
.
  F G
x
  G H
;
  H I
float
ÀÀ !
y1
ÀÀ" $
=
ÀÀ% &
characterInfos
ÀÀ' 5
[
ÀÀ5 6
i
ÀÀ6 7
]
ÀÀ7 8
.
ÀÀ8 9
	vertex_TR
ÀÀ9 B
.
ÀÀB C
uv2
ÀÀC F
.
ÀÀF G
y
ÀÀG H
;
ÀÀH I
float
ÕÕ !
dx
ÕÕ" $
=
ÕÕ% &
(
ÕÕ' (
int
ÕÕ( +
)
ÕÕ+ ,
x0
ÕÕ, .
;
ÕÕ. /
float
ŒŒ !
dy
ŒŒ" $
=
ŒŒ% &
(
ŒŒ' (
int
ŒŒ( +
)
ŒŒ+ ,
y0
ŒŒ, .
;
ŒŒ. /
x0
–– 
=
––  
x0
––! #
-
––$ %
dx
––& (
;
––( )
x1
—— 
=
——  
x1
——! #
-
——$ %
dx
——& (
;
——( )
y0
““ 
=
““  
y0
““! #
-
““$ %
dy
““& (
;
““( )
y1
”” 
=
””  
y1
””! #
-
””$ %
dy
””& (
;
””( )
characterInfos
÷÷ *
[
÷÷* +
i
÷÷+ ,
]
÷÷, -
.
÷÷- .
	vertex_BL
÷÷. 7
.
÷÷7 8
uv2
÷÷8 ;
.
÷÷; <
x
÷÷< =
=
÷÷> ?
PackUV
÷÷@ F
(
÷÷F G
x0
÷÷G I
,
÷÷I J
y0
÷÷K M
)
÷÷M N
;
÷÷N O
characterInfos
÷÷P ^
[
÷÷^ _
i
÷÷_ `
]
÷÷` a
.
÷÷a b
	vertex_BL
÷÷b k
.
÷÷k l
uv2
÷÷l o
.
÷÷o p
y
÷÷p q
=
÷÷r s
xScale
÷÷t z
;
÷÷z {
characterInfos
◊◊ *
[
◊◊* +
i
◊◊+ ,
]
◊◊, -
.
◊◊- .
	vertex_TL
◊◊. 7
.
◊◊7 8
uv2
◊◊8 ;
.
◊◊; <
x
◊◊< =
=
◊◊> ?
PackUV
◊◊@ F
(
◊◊F G
x0
◊◊G I
,
◊◊I J
y1
◊◊K M
)
◊◊M N
;
◊◊N O
characterInfos
◊◊P ^
[
◊◊^ _
i
◊◊_ `
]
◊◊` a
.
◊◊a b
	vertex_TL
◊◊b k
.
◊◊k l
uv2
◊◊l o
.
◊◊o p
y
◊◊p q
=
◊◊r s
xScale
◊◊t z
;
◊◊z {
characterInfos
ÿÿ *
[
ÿÿ* +
i
ÿÿ+ ,
]
ÿÿ, -
.
ÿÿ- .
	vertex_TR
ÿÿ. 7
.
ÿÿ7 8
uv2
ÿÿ8 ;
.
ÿÿ; <
x
ÿÿ< =
=
ÿÿ> ?
PackUV
ÿÿ@ F
(
ÿÿF G
x1
ÿÿG I
,
ÿÿI J
y1
ÿÿK M
)
ÿÿM N
;
ÿÿN O
characterInfos
ÿÿP ^
[
ÿÿ^ _
i
ÿÿ_ `
]
ÿÿ` a
.
ÿÿa b
	vertex_TR
ÿÿb k
.
ÿÿk l
uv2
ÿÿl o
.
ÿÿo p
y
ÿÿp q
=
ÿÿr s
xScale
ÿÿt z
;
ÿÿz {
characterInfos
ŸŸ *
[
ŸŸ* +
i
ŸŸ+ ,
]
ŸŸ, -
.
ŸŸ- .
	vertex_BR
ŸŸ. 7
.
ŸŸ7 8
uv2
ŸŸ8 ;
.
ŸŸ; <
x
ŸŸ< =
=
ŸŸ> ?
PackUV
ŸŸ@ F
(
ŸŸF G
x1
ŸŸG I
,
ŸŸI J
y0
ŸŸK M
)
ŸŸM N
;
ŸŸN O
characterInfos
ŸŸP ^
[
ŸŸ^ _
i
ŸŸ_ `
]
ŸŸ` a
.
ŸŸa b
	vertex_BR
ŸŸb k
.
ŸŸk l
uv2
ŸŸl o
.
ŸŸo p
y
ŸŸp q
=
ŸŸr s
xScale
ŸŸt z
;
ŸŸz {
break
€€ !
;
€€! "
case
ﬁﬁ !
TMP_TextElementType
ﬁﬁ 0
.
ﬁﬁ0 1
Sprite
ﬁﬁ1 7
:
ﬁﬁ7 8
break
‡‡ !
;
‡‡! "
}
·· 
if
ÂÂ 
(
ÂÂ 
i
ÂÂ 
<
ÂÂ $
m_maxVisibleCharacters
ÂÂ 2
&&
ÂÂ3 5
	wordCount
ÂÂ6 ?
<
ÂÂ@ A
m_maxVisibleWords
ÂÂB S
&&
ÂÂT V
currentLine
ÂÂW b
<
ÂÂc d
m_maxVisibleLines
ÂÂe v
&&
ÂÂw y
m_overflowModeÂÂz à
!=ÂÂâ ã!
TextOverflowModesÂÂå ù
.ÂÂù û
PageÂÂû ¢
)ÂÂ¢ £
{
ÊÊ 
characterInfos
ÁÁ &
[
ÁÁ& '
i
ÁÁ' (
]
ÁÁ( )
.
ÁÁ) *
	vertex_BL
ÁÁ* 3
.
ÁÁ3 4
position
ÁÁ4 <
+=
ÁÁ= ?
offset
ÁÁ@ F
;
ÁÁF G
characterInfos
ËË &
[
ËË& '
i
ËË' (
]
ËË( )
.
ËË) *
	vertex_TL
ËË* 3
.
ËË3 4
position
ËË4 <
+=
ËË= ?
offset
ËË@ F
;
ËËF G
characterInfos
ÈÈ &
[
ÈÈ& '
i
ÈÈ' (
]
ÈÈ( )
.
ÈÈ) *
	vertex_TR
ÈÈ* 3
.
ÈÈ3 4
position
ÈÈ4 <
+=
ÈÈ= ?
offset
ÈÈ@ F
;
ÈÈF G
characterInfos
ÍÍ &
[
ÍÍ& '
i
ÍÍ' (
]
ÍÍ( )
.
ÍÍ) *
	vertex_BR
ÍÍ* 3
.
ÍÍ3 4
position
ÍÍ4 <
+=
ÍÍ= ?
offset
ÍÍ@ F
;
ÍÍF G
}
ÎÎ 
else
ÏÏ 
if
ÏÏ 
(
ÏÏ 
i
ÏÏ 
<
ÏÏ  $
m_maxVisibleCharacters
ÏÏ! 7
&&
ÏÏ8 :
	wordCount
ÏÏ; D
<
ÏÏE F
m_maxVisibleWords
ÏÏG X
&&
ÏÏY [
currentLine
ÏÏ\ g
<
ÏÏh i
m_maxVisibleLines
ÏÏj {
&&
ÏÏ| ~
m_overflowModeÏÏ ç
==ÏÏé ê!
TextOverflowModesÏÏë ¢
.ÏÏ¢ £
PageÏÏ£ ß
&&ÏÏ® ™
characterInfosÏÏ´ π
[ÏÏπ ∫
iÏÏ∫ ª
]ÏÏª º
.ÏÏº Ω

pageNumberÏÏΩ «
==ÏÏ»  
pageToDisplayÏÏÀ ÿ
)ÏÏÿ Ÿ
{
ÌÌ 
characterInfos
ÓÓ &
[
ÓÓ& '
i
ÓÓ' (
]
ÓÓ( )
.
ÓÓ) *
	vertex_BL
ÓÓ* 3
.
ÓÓ3 4
position
ÓÓ4 <
+=
ÓÓ= ?
offset
ÓÓ@ F
;
ÓÓF G
characterInfos
ÔÔ &
[
ÔÔ& '
i
ÔÔ' (
]
ÔÔ( )
.
ÔÔ) *
	vertex_TL
ÔÔ* 3
.
ÔÔ3 4
position
ÔÔ4 <
+=
ÔÔ= ?
offset
ÔÔ@ F
;
ÔÔF G
characterInfos
 &
[
& '
i
' (
]
( )
.
) *
	vertex_TR
* 3
.
3 4
position
4 <
+=
= ?
offset
@ F
;
F G
characterInfos
ÒÒ &
[
ÒÒ& '
i
ÒÒ' (
]
ÒÒ( )
.
ÒÒ) *
	vertex_BR
ÒÒ* 3
.
ÒÒ3 4
position
ÒÒ4 <
+=
ÒÒ= ?
offset
ÒÒ@ F
;
ÒÒF G
}
ÚÚ 
else
ÛÛ 
{
ÙÙ 
characterInfos
ıı &
[
ıı& '
i
ıı' (
]
ıı( )
.
ıı) *
	vertex_BL
ıı* 3
.
ıı3 4
position
ıı4 <
=
ıı= >
Vector3
ıı? F
.
ııF G
zero
ııG K
;
ııK L
characterInfos
ˆˆ &
[
ˆˆ& '
i
ˆˆ' (
]
ˆˆ( )
.
ˆˆ) *
	vertex_TL
ˆˆ* 3
.
ˆˆ3 4
position
ˆˆ4 <
=
ˆˆ= >
Vector3
ˆˆ? F
.
ˆˆF G
zero
ˆˆG K
;
ˆˆK L
characterInfos
˜˜ &
[
˜˜& '
i
˜˜' (
]
˜˜( )
.
˜˜) *
	vertex_TR
˜˜* 3
.
˜˜3 4
position
˜˜4 <
=
˜˜= >
Vector3
˜˜? F
.
˜˜F G
zero
˜˜G K
;
˜˜K L
characterInfos
¯¯ &
[
¯¯& '
i
¯¯' (
]
¯¯( )
.
¯¯) *
	vertex_BR
¯¯* 3
.
¯¯3 4
position
¯¯4 <
=
¯¯= >
Vector3
¯¯? F
.
¯¯F G
zero
¯¯G K
;
¯¯K L
characterInfos
˘˘ &
[
˘˘& '
i
˘˘' (
]
˘˘( )
.
˘˘) *
	isVisible
˘˘* 3
=
˘˘4 5
false
˘˘6 ;
;
˘˘; <
}
˙˙ 
if
ˇˇ 
(
ˇˇ 
elementType
ˇˇ #
==
ˇˇ$ &!
TMP_TextElementType
ˇˇ' :
.
ˇˇ: ;
	Character
ˇˇ; D
)
ˇˇD E
{
ÄÄ (
FillCharacterVertexBuffers
ÅÅ 2
(
ÅÅ2 3
i
ÅÅ3 4
,
ÅÅ4 5
vert_index_X4
ÅÅ6 C
)
ÅÅC D
;
ÅÅD E
}
ÇÇ 
else
ÉÉ 
if
ÉÉ 
(
ÉÉ 
elementType
ÉÉ (
==
ÉÉ) +!
TMP_TextElementType
ÉÉ, ?
.
ÉÉ? @
Sprite
ÉÉ@ F
)
ÉÉF G
{
ÑÑ %
FillSpriteVertexBuffers
ÖÖ /
(
ÖÖ/ 0
i
ÖÖ0 1
,
ÖÖ1 2
sprite_index_X4
ÖÖ3 B
)
ÖÖB C
;
ÖÖC D
}
ÜÜ 
}
áá 

m_textInfo
ãã 
.
ãã 
characterInfo
ãã (
[
ãã( )
i
ãã) *
]
ãã* +
.
ãã+ ,

bottomLeft
ãã, 6
+=
ãã7 9
offset
ãã: @
;
ãã@ A

m_textInfo
åå 
.
åå 
characterInfo
åå (
[
åå( )
i
åå) *
]
åå* +
.
åå+ ,
topLeft
åå, 3
+=
åå4 6
offset
åå7 =
;
åå= >

m_textInfo
çç 
.
çç 
characterInfo
çç (
[
çç( )
i
çç) *
]
çç* +
.
çç+ ,
topRight
çç, 4
+=
çç5 7
offset
çç8 >
;
çç> ?

m_textInfo
éé 
.
éé 
characterInfo
éé (
[
éé( )
i
éé) *
]
éé* +
.
éé+ ,
bottomRight
éé, 7
+=
éé8 :
offset
éé; A
;
ééA B

m_textInfo
êê 
.
êê 
characterInfo
êê (
[
êê( )
i
êê) *
]
êê* +
.
êê+ ,
origin
êê, 2
+=
êê3 5
offset
êê6 <
.
êê< =
x
êê= >
;
êê> ?

m_textInfo
ëë 
.
ëë 
characterInfo
ëë (
[
ëë( )
i
ëë) *
]
ëë* +
.
ëë+ ,
xAdvance
ëë, 4
+=
ëë5 7
offset
ëë8 >
.
ëë> ?
x
ëë? @
;
ëë@ A

m_textInfo
ìì 
.
ìì 
characterInfo
ìì (
[
ìì( )
i
ìì) *
]
ìì* +
.
ìì+ ,
ascender
ìì, 4
+=
ìì5 7
offset
ìì8 >
.
ìì> ?
y
ìì? @
;
ìì@ A

m_textInfo
îî 
.
îî 
characterInfo
îî (
[
îî( )
i
îî) *
]
îî* +
.
îî+ ,
	descender
îî, 5
+=
îî6 8
offset
îî9 ?
.
îî? @
y
îî@ A
;
îîA B

m_textInfo
ïï 
.
ïï 
characterInfo
ïï (
[
ïï( )
i
ïï) *
]
ïï* +
.
ïï+ ,
baseLine
ïï, 4
+=
ïï5 7
offset
ïï8 >
.
ïï> ?
y
ïï? @
;
ïï@ A
if
òò 
(
òò  
isCharacterVisible
òò &
)
òò& '
{
ôô 
}
úú 
if
†† 
(
†† 
currentLine
†† 
!=
††  "
lastLine
††# +
||
††, .
i
††/ 0
==
††1 3
m_characterCount
††4 D
-
††E F
$num
††G H
)
††H I
{
°° 
if
££ 
(
££ 
currentLine
££ #
!=
££$ &
lastLine
££' /
)
££/ 0
{
§§ 

m_textInfo
•• "
.
••" #
lineInfo
••# +
[
••+ ,
lastLine
••, 4
]
••4 5
.
••5 6
baseline
••6 >
+=
••? A
offset
••B H
.
••H I
y
••I J
;
••J K

m_textInfo
¶¶ "
.
¶¶" #
lineInfo
¶¶# +
[
¶¶+ ,
lastLine
¶¶, 4
]
¶¶4 5
.
¶¶5 6
ascender
¶¶6 >
+=
¶¶? A
offset
¶¶B H
.
¶¶H I
y
¶¶I J
;
¶¶J K

m_textInfo
ßß "
.
ßß" #
lineInfo
ßß# +
[
ßß+ ,
lastLine
ßß, 4
]
ßß4 5
.
ßß5 6
	descender
ßß6 ?
+=
ßß@ B
offset
ßßC I
.
ßßI J
y
ßßJ K
;
ßßK L

m_textInfo
©© "
.
©©" #
lineInfo
©©# +
[
©©+ ,
lastLine
©©, 4
]
©©4 5
.
©©5 6

maxAdvance
©©6 @
+=
©©A C
offset
©©D J
.
©©J K
x
©©K L
;
©©L M

m_textInfo
´´ "
.
´´" #
lineInfo
´´# +
[
´´+ ,
lastLine
´´, 4
]
´´4 5
.
´´5 6
lineExtents
´´6 A
.
´´A B
min
´´B E
=
´´F G
new
´´H K
Vector2
´´L S
(
´´S T

m_textInfo
´´T ^
.
´´^ _
characterInfo
´´_ l
[
´´l m

m_textInfo
´´m w
.
´´w x
lineInfo´´x Ä
[´´Ä Å
lastLine´´Å â
]´´â ä
.´´ä ã#
firstCharacterIndex´´ã û
]´´û ü
.´´ü †

bottomLeft´´† ™
.´´™ ´
x´´´ ¨
,´´¨ ≠

m_textInfo´´Æ ∏
.´´∏ π
lineInfo´´π ¡
[´´¡ ¬
lastLine´´¬  
]´´  À
.´´À Ã
	descender´´Ã ’
)´´’ ÷
;´´÷ ◊

m_textInfo
¨¨ "
.
¨¨" #
lineInfo
¨¨# +
[
¨¨+ ,
lastLine
¨¨, 4
]
¨¨4 5
.
¨¨5 6
lineExtents
¨¨6 A
.
¨¨A B
max
¨¨B E
=
¨¨F G
new
¨¨H K
Vector2
¨¨L S
(
¨¨S T

m_textInfo
¨¨T ^
.
¨¨^ _
characterInfo
¨¨_ l
[
¨¨l m

m_textInfo
¨¨m w
.
¨¨w x
lineInfo¨¨x Ä
[¨¨Ä Å
lastLine¨¨Å â
]¨¨â ä
.¨¨ä ã)
lastVisibleCharacterIndex¨¨ã §
]¨¨§ •
.¨¨• ¶
topRight¨¨¶ Æ
.¨¨Æ Ø
x¨¨Ø ∞
,¨¨∞ ±

m_textInfo¨¨≤ º
.¨¨º Ω
lineInfo¨¨Ω ≈
[¨¨≈ ∆
lastLine¨¨∆ Œ
]¨¨Œ œ
.¨¨œ –
ascender¨¨– ÿ
)¨¨ÿ Ÿ
;¨¨Ÿ ⁄
}
≠≠ 
if
∞∞ 
(
∞∞ 
i
∞∞ 
==
∞∞ 
m_characterCount
∞∞ -
-
∞∞. /
$num
∞∞0 1
)
∞∞1 2
{
±± 

m_textInfo
≤≤ "
.
≤≤" #
lineInfo
≤≤# +
[
≤≤+ ,
currentLine
≤≤, 7
]
≤≤7 8
.
≤≤8 9
baseline
≤≤9 A
+=
≤≤B D
offset
≤≤E K
.
≤≤K L
y
≤≤L M
;
≤≤M N

m_textInfo
≥≥ "
.
≥≥" #
lineInfo
≥≥# +
[
≥≥+ ,
currentLine
≥≥, 7
]
≥≥7 8
.
≥≥8 9
ascender
≥≥9 A
+=
≥≥B D
offset
≥≥E K
.
≥≥K L
y
≥≥L M
;
≥≥M N

m_textInfo
¥¥ "
.
¥¥" #
lineInfo
¥¥# +
[
¥¥+ ,
currentLine
¥¥, 7
]
¥¥7 8
.
¥¥8 9
	descender
¥¥9 B
+=
¥¥C E
offset
¥¥F L
.
¥¥L M
y
¥¥M N
;
¥¥N O

m_textInfo
∂∂ "
.
∂∂" #
lineInfo
∂∂# +
[
∂∂+ ,
currentLine
∂∂, 7
]
∂∂7 8
.
∂∂8 9

maxAdvance
∂∂9 C
+=
∂∂D F
offset
∂∂G M
.
∂∂M N
x
∂∂N O
;
∂∂O P

m_textInfo
∏∏ "
.
∏∏" #
lineInfo
∏∏# +
[
∏∏+ ,
currentLine
∏∏, 7
]
∏∏7 8
.
∏∏8 9
lineExtents
∏∏9 D
.
∏∏D E
min
∏∏E H
=
∏∏I J
new
∏∏K N
Vector2
∏∏O V
(
∏∏V W

m_textInfo
∏∏W a
.
∏∏a b
characterInfo
∏∏b o
[
∏∏o p

m_textInfo
∏∏p z
.
∏∏z {
lineInfo∏∏{ É
[∏∏É Ñ
currentLine∏∏Ñ è
]∏∏è ê
.∏∏ê ë#
firstCharacterIndex∏∏ë §
]∏∏§ •
.∏∏• ¶

bottomLeft∏∏¶ ∞
.∏∏∞ ±
x∏∏± ≤
,∏∏≤ ≥

m_textInfo∏∏¥ æ
.∏∏æ ø
lineInfo∏∏ø «
[∏∏« »
currentLine∏∏» ”
]∏∏” ‘
.∏∏‘ ’
	descender∏∏’ ﬁ
)∏∏ﬁ ﬂ
;∏∏ﬂ ‡

m_textInfo
ππ "
.
ππ" #
lineInfo
ππ# +
[
ππ+ ,
currentLine
ππ, 7
]
ππ7 8
.
ππ8 9
lineExtents
ππ9 D
.
ππD E
max
ππE H
=
ππI J
new
ππK N
Vector2
ππO V
(
ππV W

m_textInfo
ππW a
.
ππa b
characterInfo
ππb o
[
ππo p

m_textInfo
ππp z
.
ππz {
lineInfoππ{ É
[ππÉ Ñ
currentLineππÑ è
]ππè ê
.ππê ë)
lastVisibleCharacterIndexππë ™
]ππ™ ´
.ππ´ ¨
topRightππ¨ ¥
.ππ¥ µ
xππµ ∂
,ππ∂ ∑

m_textInfoππ∏ ¬
.ππ¬ √
lineInfoππ√ À
[ππÀ Ã
currentLineππÃ ◊
]ππ◊ ÿ
.ππÿ Ÿ
ascenderππŸ ·
)ππ· ‚
;ππ‚ „
}
∫∫ 
}
ªª 
if
¡¡ 
(
¡¡ 
char
¡¡ 
.
¡¡ 
IsLetterOrDigit
¡¡ (
(
¡¡( )
unicode
¡¡) 0
)
¡¡0 1
||
¡¡2 4
unicode
¡¡5 <
==
¡¡= ?
$num
¡¡@ D
||
¡¡E G
unicode
¡¡H O
==
¡¡P R
$num
¡¡S W
||
¡¡X Z
unicode
¡¡[ b
==
¡¡c e
$num
¡¡f l
||
¡¡m o
unicode
¡¡p w
==
¡¡x z
$num¡¡{ Å
)¡¡Å Ç
{
¬¬ 
if
√√ 
(
√√ 
isStartOfWord
√√ %
==
√√& (
false
√√) .
)
√√. /
{
ƒƒ 
isStartOfWord
≈≈ %
=
≈≈& '
true
≈≈( ,
;
≈≈, -
wordFirstChar
∆∆ %
=
∆∆& '
i
∆∆( )
;
∆∆) *
}
«« 
if
   
(
   
isStartOfWord
   %
&&
  & (
i
  ) *
==
  + -
m_characterCount
  . >
-
  ? @
$num
  A B
)
  B C
{
ÀÀ 
int
ÃÃ 
size
ÃÃ  
=
ÃÃ! "

m_textInfo
ÃÃ# -
.
ÃÃ- .
wordInfo
ÃÃ. 6
.
ÃÃ6 7
Length
ÃÃ7 =
;
ÃÃ= >
int
ÕÕ 
index
ÕÕ !
=
ÕÕ" #

m_textInfo
ÕÕ$ .
.
ÕÕ. /
	wordCount
ÕÕ/ 8
;
ÕÕ8 9
if
œœ 
(
œœ 

m_textInfo
œœ &
.
œœ& '
	wordCount
œœ' 0
+
œœ1 2
$num
œœ3 4
>
œœ5 6
size
œœ7 ;
)
œœ; <
TMP_TextInfo
–– (
.
––( )
Resize
––) /
(
––/ 0
ref
––0 3

m_textInfo
––4 >
.
––> ?
wordInfo
––? G
,
––G H
size
––I M
+
––N O
$num
––P Q
)
––Q R
;
––R S
wordLastChar
““ $
=
““% &
i
““' (
;
““( )

m_textInfo
‘‘ "
.
‘‘" #
wordInfo
‘‘# +
[
‘‘+ ,
index
‘‘, 1
]
‘‘1 2
.
‘‘2 3!
firstCharacterIndex
‘‘3 F
=
‘‘G H
wordFirstChar
‘‘I V
;
‘‘V W

m_textInfo
’’ "
.
’’" #
wordInfo
’’# +
[
’’+ ,
index
’’, 1
]
’’1 2
.
’’2 3 
lastCharacterIndex
’’3 E
=
’’F G
wordLastChar
’’H T
;
’’T U

m_textInfo
÷÷ "
.
÷÷" #
wordInfo
÷÷# +
[
÷÷+ ,
index
÷÷, 1
]
÷÷1 2
.
÷÷2 3
characterCount
÷÷3 A
=
÷÷B C
wordLastChar
÷÷D P
-
÷÷Q R
wordFirstChar
÷÷S `
+
÷÷a b
$num
÷÷c d
;
÷÷d e

m_textInfo
◊◊ "
.
◊◊" #
wordInfo
◊◊# +
[
◊◊+ ,
index
◊◊, 1
]
◊◊1 2
.
◊◊2 3
textComponent
◊◊3 @
=
◊◊A B
this
◊◊C G
;
◊◊G H
	wordCount
ŸŸ !
+=
ŸŸ" $
$num
ŸŸ% &
;
ŸŸ& '

m_textInfo
⁄⁄ "
.
⁄⁄" #
	wordCount
⁄⁄# ,
+=
⁄⁄- /
$num
⁄⁄0 1
;
⁄⁄1 2

m_textInfo
€€ "
.
€€" #
lineInfo
€€# +
[
€€+ ,
currentLine
€€, 7
]
€€7 8
.
€€8 9
	wordCount
€€9 B
+=
€€C E
$num
€€F G
;
€€G H
}
‹‹ 
}
›› 
else
ﬁﬁ 
if
ﬁﬁ 
(
ﬁﬁ 
isStartOfWord
ﬁﬁ &
||
ﬁﬁ' )
i
ﬁﬁ* +
==
ﬁﬁ, .
$num
ﬁﬁ/ 0
&&
ﬁﬁ1 3
(
ﬁﬁ4 5
!
ﬁﬁ5 6
char
ﬁﬁ6 :
.
ﬁﬁ: ;
IsPunctuation
ﬁﬁ; H
(
ﬁﬁH I
unicode
ﬁﬁI P
)
ﬁﬁP Q
||
ﬁﬁR T
char
ﬁﬁU Y
.
ﬁﬁY Z
IsWhiteSpace
ﬁﬁZ f
(
ﬁﬁf g
unicode
ﬁﬁg n
)
ﬁﬁn o
||
ﬁﬁp r
unicode
ﬁﬁs z
==
ﬁﬁ{ }
$numﬁﬁ~ Ñ
||ﬁﬁÖ á
iﬁﬁà â
==ﬁﬁä å 
m_characterCountﬁﬁç ù
-ﬁﬁû ü
$numﬁﬁ† °
)ﬁﬁ° ¢
)ﬁﬁ¢ £
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
i
‡‡ 
>
‡‡ 
$num
‡‡ 
&&
‡‡  
i
‡‡! "
<
‡‡# $
characterInfos
‡‡% 3
.
‡‡3 4
Length
‡‡4 :
-
‡‡; <
$num
‡‡= >
&&
‡‡? A
i
‡‡B C
<
‡‡D E
m_characterCount
‡‡F V
&&
‡‡W Y
(
‡‡Z [
unicode
‡‡[ b
==
‡‡c e
$num
‡‡f h
||
‡‡i k
unicode
‡‡l s
==
‡‡t v
$num
‡‡w {
)
‡‡{ |
&&
‡‡} 
char‡‡Ä Ñ
.‡‡Ñ Ö
IsLetterOrDigit‡‡Ö î
(‡‡î ï
characterInfos‡‡ï £
[‡‡£ §
i‡‡§ •
-‡‡¶ ß
$num‡‡® ©
]‡‡© ™
.‡‡™ ´
	character‡‡´ ¥
)‡‡¥ µ
&&‡‡∂ ∏
char‡‡π Ω
.‡‡Ω æ
IsLetterOrDigit‡‡æ Õ
(‡‡Õ Œ
characterInfos‡‡Œ ‹
[‡‡‹ ›
i‡‡› ﬁ
+‡‡ﬂ ‡
$num‡‡· ‚
]‡‡‚ „
.‡‡„ ‰
	character‡‡‰ Ì
)‡‡Ì Ó
)‡‡Ó Ô
{
·· 
}
„„ 
else
‰‰ 
{
ÂÂ 
wordLastChar
ÊÊ $
=
ÊÊ% &
i
ÊÊ' (
==
ÊÊ) +
m_characterCount
ÊÊ, <
-
ÊÊ= >
$num
ÊÊ? @
&&
ÊÊA C
char
ÊÊD H
.
ÊÊH I
IsLetterOrDigit
ÊÊI X
(
ÊÊX Y
unicode
ÊÊY `
)
ÊÊ` a
?
ÊÊb c
i
ÊÊd e
:
ÊÊf g
i
ÊÊh i
-
ÊÊj k
$num
ÊÊl m
;
ÊÊm n
isStartOfWord
ÁÁ %
=
ÁÁ& '
false
ÁÁ( -
;
ÁÁ- .
int
ÈÈ 
size
ÈÈ  
=
ÈÈ! "

m_textInfo
ÈÈ# -
.
ÈÈ- .
wordInfo
ÈÈ. 6
.
ÈÈ6 7
Length
ÈÈ7 =
;
ÈÈ= >
int
ÍÍ 
index
ÍÍ !
=
ÍÍ" #

m_textInfo
ÍÍ$ .
.
ÍÍ. /
	wordCount
ÍÍ/ 8
;
ÍÍ8 9
if
ÏÏ 
(
ÏÏ 

m_textInfo
ÏÏ &
.
ÏÏ& '
	wordCount
ÏÏ' 0
+
ÏÏ1 2
$num
ÏÏ3 4
>
ÏÏ5 6
size
ÏÏ7 ;
)
ÏÏ; <
TMP_TextInfo
ÌÌ (
.
ÌÌ( )
Resize
ÌÌ) /
(
ÌÌ/ 0
ref
ÌÌ0 3

m_textInfo
ÌÌ4 >
.
ÌÌ> ?
wordInfo
ÌÌ? G
,
ÌÌG H
size
ÌÌI M
+
ÌÌN O
$num
ÌÌP Q
)
ÌÌQ R
;
ÌÌR S

m_textInfo
ÔÔ "
.
ÔÔ" #
wordInfo
ÔÔ# +
[
ÔÔ+ ,
index
ÔÔ, 1
]
ÔÔ1 2
.
ÔÔ2 3!
firstCharacterIndex
ÔÔ3 F
=
ÔÔG H
wordFirstChar
ÔÔI V
;
ÔÔV W

m_textInfo
 "
.
" #
wordInfo
# +
[
+ ,
index
, 1
]
1 2
.
2 3 
lastCharacterIndex
3 E
=
F G
wordLastChar
H T
;
T U

m_textInfo
ÒÒ "
.
ÒÒ" #
wordInfo
ÒÒ# +
[
ÒÒ+ ,
index
ÒÒ, 1
]
ÒÒ1 2
.
ÒÒ2 3
characterCount
ÒÒ3 A
=
ÒÒB C
wordLastChar
ÒÒD P
-
ÒÒQ R
wordFirstChar
ÒÒS `
+
ÒÒa b
$num
ÒÒc d
;
ÒÒd e

m_textInfo
ÚÚ "
.
ÚÚ" #
wordInfo
ÚÚ# +
[
ÚÚ+ ,
index
ÚÚ, 1
]
ÚÚ1 2
.
ÚÚ2 3
textComponent
ÚÚ3 @
=
ÚÚA B
this
ÚÚC G
;
ÚÚG H
	wordCount
ÙÙ !
+=
ÙÙ" $
$num
ÙÙ% &
;
ÙÙ& '

m_textInfo
ıı "
.
ıı" #
	wordCount
ıı# ,
+=
ıı- /
$num
ıı0 1
;
ıı1 2

m_textInfo
ˆˆ "
.
ˆˆ" #
lineInfo
ˆˆ# +
[
ˆˆ+ ,
currentLine
ˆˆ, 7
]
ˆˆ7 8
.
ˆˆ8 9
	wordCount
ˆˆ9 B
+=
ˆˆC E
$num
ˆˆF G
;
ˆˆG H
}
˜˜ 
}
¯¯ 
bool
ˇˇ 
isUnderline
ˇˇ  
=
ˇˇ! "
(
ˇˇ# $

m_textInfo
ˇˇ$ .
.
ˇˇ. /
characterInfo
ˇˇ/ <
[
ˇˇ< =
i
ˇˇ= >
]
ˇˇ> ?
.
ˇˇ? @
style
ˇˇ@ E
&
ˇˇF G

FontStyles
ˇˇH R
.
ˇˇR S
	Underline
ˇˇS \
)
ˇˇ\ ]
==
ˇˇ^ `

FontStyles
ˇˇa k
.
ˇˇk l
	Underline
ˇˇl u
;
ˇˇu v
if
Ä Ä  
(
Ä Ä  
isUnderline
Ä Ä  
)
Ä Ä   
{
Å Å  
bool
Ç Ç   
isUnderlineVisible
Ç Ç  +
=
Ç Ç , -
true
Ç Ç . 2
;
Ç Ç 2 3
int
É É  
currentPage
É É  #
=
É É $ %

m_textInfo
É É & 0
.
É É 0 1
characterInfo
É É 1 >
[
É É > ?
i
É É ? @
]
É É @ A
.
É É A B

pageNumber
É É B L
;
É É L M

m_textInfo
Ñ Ñ  
.
Ñ Ñ  
characterInfo
Ñ Ñ  ,
[
Ñ Ñ , -
i
Ñ Ñ - .
]
Ñ Ñ . /
.
Ñ Ñ / 0"
underlineVertexIndex
Ñ Ñ 0 D
=
Ñ Ñ E F
last_vert_index
Ñ Ñ G V
;
Ñ Ñ V W
if
Ü Ü  
(
Ü Ü  
i
Ü Ü  
>
Ü Ü  $
m_maxVisibleCharacters
Ü Ü  2
||
Ü Ü 3 5
currentLine
Ü Ü 6 A
>
Ü Ü B C
m_maxVisibleLines
Ü Ü D U
||
Ü Ü V X
(
Ü Ü Y Z
m_overflowMode
Ü Ü Z h
==
Ü Ü i k
TextOverflowModes
Ü Ü l }
.
Ü Ü } ~
PageÜ Ü ~ Ç
&&Ü Ü É Ö
currentPageÜ Ü Ü ë
+Ü Ü í ì
$numÜ Ü î ï
!=Ü Ü ñ ò
m_pageToDisplayÜ Ü ô ®
)Ü Ü ® ©
)Ü Ü © ™ 
isUnderlineVisible
á á  *
=
á á + ,
false
á á - 2
;
á á 2 3
if
ä ä  
(
ä ä  
!
ä ä  
char
ä ä  
.
ä ä  
IsWhiteSpace
ä ä  *
(
ä ä * +
unicode
ä ä + 2
)
ä ä 2 3
&&
ä ä 4 6
unicode
ä ä 7 >
!=
ä ä ? A
$num
ä ä B H
)
ä ä H I
{
ã ã  
underlineMaxScale
å å  )
=
å å * +
Mathf
å å , 1
.
å å 1 2
Max
å å 2 5
(
å å 5 6
underlineMaxScale
å å 6 G
,
å å G H

m_textInfo
å å I S
.
å å S T
characterInfo
å å T a
[
å å a b
i
å å b c
]
å å c d
.
å å d e
scale
å å e j
)
å å j k
;
å å k l
	xScaleMax
ç ç  !
=
ç ç " #
Mathf
ç ç $ )
.
ç ç ) *
Max
ç ç * -
(
ç ç - .
	xScaleMax
ç ç . 7
,
ç ç 7 8
Mathf
ç ç 9 >
.
ç ç > ?
Abs
ç ç ? B
(
ç ç B C
xScale
ç ç C I
)
ç ç I J
)
ç ç J K
;
ç ç K L
underlineBaseLine
é é  )
=
é é * +
Mathf
é é , 1
.
é é 1 2
Min
é é 2 5
(
é é 5 6
currentPage
é é 6 A
==
é é B D
lastPage
é é E M
?
é é N O
underlineBaseLine
é é P a
:
é é b c"
k_LargePositiveFloat
é é d x
,
é é x y

m_textInfoé é z Ñ
.é é Ñ Ö
characterInfoé é Ö í
[é é í ì
ié é ì î
]é é î ï
.é é ï ñ
baseLineé é ñ û
+é é ü †
fonté é ° •
.é é • ¶

m_FaceInfoé é ¶ ∞
.é é ∞ ±
underlineOffseté é ± ¿
*é é ¡ ¬!
underlineMaxScaleé é √ ‘
)é é ‘ ’
;é é ’ ÷
lastPage
è è   
=
è è ! "
currentPage
è è # .
;
è è . /
}
ê ê  
if
í í  
(
í í  
beginUnderline
í í  &
==
í í ' )
false
í í * /
&&
í í 0 2 
isUnderlineVisible
í í 3 E
==
í í F H
true
í í I M
&&
í í N P
i
í í Q R
<=
í í S U
lineInfo
í í V ^
.
í í ^ _'
lastVisibleCharacterIndex
í í _ x
&&
í í y {
unicodeí í | É
!=í í Ñ Ü
$numí í á â
&&í í ä å
unicodeí í ç î
!=í í ï ó
$numí í ò ö
&&í í õ ù
unicodeí í û •
!=í í ¶ ®
$numí í © ´
)í í ´ ¨
{
ì ì  
if
î î  
(
î î  
i
î î  
==
î î   
lineInfo
î î ! )
.
î î ) *'
lastVisibleCharacterIndex
î î * C
&&
î î D F
char
î î G K
.
î î K L
IsSeparator
î î L W
(
î î W X
unicode
î î X _
)
î î _ `
)
î î ` a
{
ï ï  
}
ï ï  
else
ñ ñ  
{
ó ó  
beginUnderline
ò ò  *
=
ò ò + ,
true
ò ò - 1
;
ò ò 1 2!
underlineStartScale
ô ô  /
=
ô ô 0 1

m_textInfo
ô ô 2 <
.
ô ô < =
characterInfo
ô ô = J
[
ô ô J K
i
ô ô K L
]
ô ô L M
.
ô ô M N
scale
ô ô N S
;
ô ô S T
if
ö ö  
(
ö ö   
underlineMaxScale
ö ö   1
==
ö ö 2 4
$num
ö ö 5 6
)
ö ö 6 7
{
õ õ  
underlineMaxScale
ú ú   1
=
ú ú 2 3!
underlineStartScale
ú ú 4 G
;
ú ú G H
	xScaleMax
ù ù   )
=
ù ù * +
xScale
ù ù , 2
;
ù ù 2 3
}
û û  
underline_start
ü ü  +
=
ü ü , -
new
ü ü . 1
Vector3
ü ü 2 9
(
ü ü 9 :

m_textInfo
ü ü : D
.
ü ü D E
characterInfo
ü ü E R
[
ü ü R S
i
ü ü S T
]
ü ü T U
.
ü ü U V

bottomLeft
ü ü V `
.
ü ü ` a
x
ü ü a b
,
ü ü b c
underlineBaseLine
ü ü d u
,
ü ü u v
$num
ü ü w x
)
ü ü x y
;
ü ü y z
underlineColor
† †  *
=
† † + ,

m_textInfo
† † - 7
.
† † 7 8
characterInfo
† † 8 E
[
† † E F
i
† † F G
]
† † G H
.
† † H I
underlineColor
† † I W
;
† † W X
}
° °  
}
¢ ¢  
if
• •  
(
• •  
beginUnderline
• •  &
&&
• • ' )
m_characterCount
• • * :
==
• • ; =
$num
• • > ?
)
• • ? @
{
¶ ¶  
beginUnderline
ß ß  &
=
ß ß ' (
false
ß ß ) .
;
ß ß . /
underline_end
® ®  %
=
® ® & '
new
® ® ( +
Vector3
® ® , 3
(
® ® 3 4

m_textInfo
® ® 4 >
.
® ® > ?
characterInfo
® ® ? L
[
® ® L M
i
® ® M N
]
® ® N O
.
® ® O P
topRight
® ® P X
.
® ® X Y
x
® ® Y Z
,
® ® Z [
underlineBaseLine
® ® \ m
,
® ® m n
$num
® ® o p
)
® ® p q
;
® ® q r
underlineEndScale
© ©  )
=
© © * +

m_textInfo
© © , 6
.
© © 6 7
characterInfo
© © 7 D
[
© © D E
i
© © E F
]
© © F G
.
© © G H
scale
© © H M
;
© © M N
DrawUnderlineMesh
´ ´  )
(
´ ´ ) *
underline_start
´ ´ * 9
,
´ ´ 9 :
underline_end
´ ´ ; H
,
´ ´ H I
ref
´ ´ J M
last_vert_index
´ ´ N ]
,
´ ´ ] ^!
underlineStartScale
´ ´ _ r
,
´ ´ r s 
underlineEndScale´ ´ t Ö
,´ ´ Ö Ü!
underlineMaxScale´ ´ á ò
,´ ´ ò ô
	xScaleMax´ ´ ö £
,´ ´ £ §
underlineColor´ ´ • ≥
)´ ´ ≥ ¥
;´ ´ ¥ µ
underlineMaxScale
¨ ¨  )
=
¨ ¨ * +
$num
¨ ¨ , -
;
¨ ¨ - .
	xScaleMax
≠ ≠  !
=
≠ ≠ " #
$num
≠ ≠ $ %
;
≠ ≠ % &
underlineBaseLine
Æ Æ  )
=
Æ Æ * +"
k_LargePositiveFloat
Æ Æ , @
;
Æ Æ @ A
}
Ø Ø  
else
∞ ∞  
if
∞ ∞  
(
∞ ∞  
beginUnderline
∞ ∞  +
&&
∞ ∞ , .
(
∞ ∞ / 0
i
∞ ∞ 0 1
==
∞ ∞ 2 4
lineInfo
∞ ∞ 5 =
.
∞ ∞ = > 
lastCharacterIndex
∞ ∞ > P
||
∞ ∞ Q S
i
∞ ∞ T U
>=
∞ ∞ V X
lineInfo
∞ ∞ Y a
.
∞ ∞ a b'
lastVisibleCharacterIndex
∞ ∞ b {
)
∞ ∞ { |
)
∞ ∞ | }
{
± ±  
if
≥ ≥  
(
≥ ≥  
char
≥ ≥   
.
≥ ≥   !
IsWhiteSpace
≥ ≥ ! -
(
≥ ≥ - .
unicode
≥ ≥ . 5
)
≥ ≥ 5 6
||
≥ ≥ 7 9
unicode
≥ ≥ : A
==
≥ ≥ B D
$num
≥ ≥ E K
)
≥ ≥ K L
{
¥ ¥  
int
µ µ  '
lastVisibleCharacterIndex
µ µ   9
=
µ µ : ;
lineInfo
µ µ < D
.
µ µ D E'
lastVisibleCharacterIndex
µ µ E ^
;
µ µ ^ _
underline_end
∂ ∂  )
=
∂ ∂ * +
new
∂ ∂ , /
Vector3
∂ ∂ 0 7
(
∂ ∂ 7 8

m_textInfo
∂ ∂ 8 B
.
∂ ∂ B C
characterInfo
∂ ∂ C P
[
∂ ∂ P Q'
lastVisibleCharacterIndex
∂ ∂ Q j
]
∂ ∂ j k
.
∂ ∂ k l
topRight
∂ ∂ l t
.
∂ ∂ t u
x
∂ ∂ u v
,
∂ ∂ v w 
underlineBaseLine∂ ∂ x â
,∂ ∂ â ä
$num∂ ∂ ã å
)∂ ∂ å ç
;∂ ∂ ç é
underlineEndScale
∑ ∑  -
=
∑ ∑ . /

m_textInfo
∑ ∑ 0 :
.
∑ ∑ : ;
characterInfo
∑ ∑ ; H
[
∑ ∑ H I'
lastVisibleCharacterIndex
∑ ∑ I b
]
∑ ∑ b c
.
∑ ∑ c d
scale
∑ ∑ d i
;
∑ ∑ i j
}
∏ ∏  
else
π π  
{
∫ ∫  
underline_end
ª ª  )
=
ª ª * +
new
ª ª , /
Vector3
ª ª 0 7
(
ª ª 7 8

m_textInfo
ª ª 8 B
.
ª ª B C
characterInfo
ª ª C P
[
ª ª P Q
i
ª ª Q R
]
ª ª R S
.
ª ª S T
topRight
ª ª T \
.
ª ª \ ]
x
ª ª ] ^
,
ª ª ^ _
underlineBaseLine
ª ª ` q
,
ª ª q r
$num
ª ª s t
)
ª ª t u
;
ª ª u v
underlineEndScale
º º  -
=
º º . /

m_textInfo
º º 0 :
.
º º : ;
characterInfo
º º ; H
[
º º H I
i
º º I J
]
º º J K
.
º º K L
scale
º º L Q
;
º º Q R
}
Ω Ω  
beginUnderline
ø ø  &
=
ø ø ' (
false
ø ø ) .
;
ø ø . /
DrawUnderlineMesh
¿ ¿  )
(
¿ ¿ ) *
underline_start
¿ ¿ * 9
,
¿ ¿ 9 :
underline_end
¿ ¿ ; H
,
¿ ¿ H I
ref
¿ ¿ J M
last_vert_index
¿ ¿ N ]
,
¿ ¿ ] ^!
underlineStartScale
¿ ¿ _ r
,
¿ ¿ r s 
underlineEndScale¿ ¿ t Ö
,¿ ¿ Ö Ü!
underlineMaxScale¿ ¿ á ò
,¿ ¿ ò ô
	xScaleMax¿ ¿ ö £
,¿ ¿ £ §
underlineColor¿ ¿ • ≥
)¿ ¿ ≥ ¥
;¿ ¿ ¥ µ
underlineMaxScale
¡ ¡  )
=
¡ ¡ * +
$num
¡ ¡ , -
;
¡ ¡ - .
	xScaleMax
¬ ¬  !
=
¬ ¬ " #
$num
¬ ¬ $ %
;
¬ ¬ % &
underlineBaseLine
√ √  )
=
√ √ * +"
k_LargePositiveFloat
√ √ , @
;
√ √ @ A
}
ƒ ƒ  
else
≈ ≈  
if
≈ ≈  
(
≈ ≈  
beginUnderline
≈ ≈  +
&&
≈ ≈ , .
!
≈ ≈ / 0 
isUnderlineVisible
≈ ≈ 0 B
)
≈ ≈ B C
{
∆ ∆  
beginUnderline
« «  &
=
« « ' (
false
« « ) .
;
« « . /
underline_end
» »  %
=
» » & '
new
» » ( +
Vector3
» » , 3
(
» » 3 4

m_textInfo
» » 4 >
.
» » > ?
characterInfo
» » ? L
[
» » L M
i
» » M N
-
» » O P
$num
» » Q R
]
» » R S
.
» » S T
topRight
» » T \
.
» » \ ]
x
» » ] ^
,
» » ^ _
underlineBaseLine
» » ` q
,
» » q r
$num
» » s t
)
» » t u
;
» » u v
underlineEndScale
… …  )
=
… … * +

m_textInfo
… … , 6
.
… … 6 7
characterInfo
… … 7 D
[
… … D E
i
… … E F
-
… … G H
$num
… … I J
]
… … J K
.
… … K L
scale
… … L Q
;
… … Q R
DrawUnderlineMesh
À À  )
(
À À ) *
underline_start
À À * 9
,
À À 9 :
underline_end
À À ; H
,
À À H I
ref
À À J M
last_vert_index
À À N ]
,
À À ] ^!
underlineStartScale
À À _ r
,
À À r s 
underlineEndScaleÀ À t Ö
,À À Ö Ü!
underlineMaxScaleÀ À á ò
,À À ò ô
	xScaleMaxÀ À ö £
,À À £ §
underlineColorÀ À • ≥
)À À ≥ ¥
;À À ¥ µ
underlineMaxScale
Ã Ã  )
=
Ã Ã * +
$num
Ã Ã , -
;
Ã Ã - .
	xScaleMax
Õ Õ  !
=
Õ Õ " #
$num
Õ Õ $ %
;
Õ Õ % &
underlineBaseLine
Œ Œ  )
=
Œ Œ * +"
k_LargePositiveFloat
Œ Œ , @
;
Œ Œ @ A
}
œ œ  
else
– –  
if
– –  
(
– –  
beginUnderline
– –  +
&&
– – , .
i
– – / 0
<
– – 1 2
m_characterCount
– – 3 C
-
– – D E
$num
– – F G
&&
– – H J
!
– – K L
underlineColor
– – L Z
.
– – Z [
Compare
– – [ b
(
– – b c

m_textInfo
– – c m
.
– – m n
characterInfo
– – n {
[
– – { |
i
– – | }
+
– – ~ 
$num– – Ä Å
]– – Å Ç
.– – Ç É
underlineColor– – É ë
)– – ë í
)– – í ì
{
— —  
beginUnderline
” ”  &
=
” ” ' (
false
” ” ) .
;
” ” . /
underline_end
‘ ‘  %
=
‘ ‘ & '
new
‘ ‘ ( +
Vector3
‘ ‘ , 3
(
‘ ‘ 3 4

m_textInfo
‘ ‘ 4 >
.
‘ ‘ > ?
characterInfo
‘ ‘ ? L
[
‘ ‘ L M
i
‘ ‘ M N
]
‘ ‘ N O
.
‘ ‘ O P
topRight
‘ ‘ P X
.
‘ ‘ X Y
x
‘ ‘ Y Z
,
‘ ‘ Z [
underlineBaseLine
‘ ‘ \ m
,
‘ ‘ m n
$num
‘ ‘ o p
)
‘ ‘ p q
;
‘ ‘ q r
underlineEndScale
’ ’  )
=
’ ’ * +

m_textInfo
’ ’ , 6
.
’ ’ 6 7
characterInfo
’ ’ 7 D
[
’ ’ D E
i
’ ’ E F
]
’ ’ F G
.
’ ’ G H
scale
’ ’ H M
;
’ ’ M N
DrawUnderlineMesh
◊ ◊  )
(
◊ ◊ ) *
underline_start
◊ ◊ * 9
,
◊ ◊ 9 :
underline_end
◊ ◊ ; H
,
◊ ◊ H I
ref
◊ ◊ J M
last_vert_index
◊ ◊ N ]
,
◊ ◊ ] ^!
underlineStartScale
◊ ◊ _ r
,
◊ ◊ r s 
underlineEndScale◊ ◊ t Ö
,◊ ◊ Ö Ü!
underlineMaxScale◊ ◊ á ò
,◊ ◊ ò ô
	xScaleMax◊ ◊ ö £
,◊ ◊ £ §
underlineColor◊ ◊ • ≥
)◊ ◊ ≥ ¥
;◊ ◊ ¥ µ
underlineMaxScale
ÿ ÿ  )
=
ÿ ÿ * +
$num
ÿ ÿ , -
;
ÿ ÿ - .
	xScaleMax
Ÿ Ÿ  !
=
Ÿ Ÿ " #
$num
Ÿ Ÿ $ %
;
Ÿ Ÿ % &
underlineBaseLine
⁄ ⁄  )
=
⁄ ⁄ * +"
k_LargePositiveFloat
⁄ ⁄ , @
;
⁄ ⁄ @ A
}
€ €  
}
‹ ‹  
else
› ›  
{
ﬁ ﬁ  
if
‡ ‡  
(
‡ ‡  
beginUnderline
‡ ‡  &
==
‡ ‡ ' )
true
‡ ‡ * .
)
‡ ‡ . /
{
· ·  
beginUnderline
‚ ‚  &
=
‚ ‚ ' (
false
‚ ‚ ) .
;
‚ ‚ . /
underline_end
„ „  %
=
„ „ & '
new
„ „ ( +
Vector3
„ „ , 3
(
„ „ 3 4

m_textInfo
„ „ 4 >
.
„ „ > ?
characterInfo
„ „ ? L
[
„ „ L M
i
„ „ M N
-
„ „ O P
$num
„ „ Q R
]
„ „ R S
.
„ „ S T
topRight
„ „ T \
.
„ „ \ ]
x
„ „ ] ^
,
„ „ ^ _
underlineBaseLine
„ „ ` q
,
„ „ q r
$num
„ „ s t
)
„ „ t u
;
„ „ u v
underlineEndScale
‰ ‰  )
=
‰ ‰ * +

m_textInfo
‰ ‰ , 6
.
‰ ‰ 6 7
characterInfo
‰ ‰ 7 D
[
‰ ‰ D E
i
‰ ‰ E F
-
‰ ‰ G H
$num
‰ ‰ I J
]
‰ ‰ J K
.
‰ ‰ K L
scale
‰ ‰ L Q
;
‰ ‰ Q R
DrawUnderlineMesh
Ê Ê  )
(
Ê Ê ) *
underline_start
Ê Ê * 9
,
Ê Ê 9 :
underline_end
Ê Ê ; H
,
Ê Ê H I
ref
Ê Ê J M
last_vert_index
Ê Ê N ]
,
Ê Ê ] ^!
underlineStartScale
Ê Ê _ r
,
Ê Ê r s 
underlineEndScaleÊ Ê t Ö
,Ê Ê Ö Ü!
underlineMaxScaleÊ Ê á ò
,Ê Ê ò ô
	xScaleMaxÊ Ê ö £
,Ê Ê £ §
underlineColorÊ Ê • ≥
)Ê Ê ≥ ¥
;Ê Ê ¥ µ
underlineMaxScale
Á Á  )
=
Á Á * +
$num
Á Á , -
;
Á Á - .
	xScaleMax
Ë Ë  !
=
Ë Ë " #
$num
Ë Ë $ %
;
Ë Ë % &
underlineBaseLine
È È  )
=
È È * +"
k_LargePositiveFloat
È È , @
;
È È @ A
}
Í Í  
}
Î Î  
bool
Ú Ú  
isStrikethrough
Ú Ú  $
=
Ú Ú % &
(
Ú Ú ' (

m_textInfo
Ú Ú ( 2
.
Ú Ú 2 3
characterInfo
Ú Ú 3 @
[
Ú Ú @ A
i
Ú Ú A B
]
Ú Ú B C
.
Ú Ú C D
style
Ú Ú D I
&
Ú Ú J K

FontStyles
Ú Ú L V
.
Ú Ú V W
Strikethrough
Ú Ú W d
)
Ú Ú d e
==
Ú Ú f h

FontStyles
Ú Ú i s
.
Ú Ú s t
StrikethroughÚ Ú t Å
;Ú Ú Å Ç
float
Û Û  !
strikethroughOffset
Û Û  )
=
Û Û * +
currentFontAsset
Û Û , <
.
Û Û < =

m_FaceInfo
Û Û = G
.
Û Û G H!
strikethroughOffset
Û Û H [
;
Û Û [ \
if
ı ı  
(
ı ı  
isStrikethrough
ı ı  #
)
ı ı # $
{
ˆ ˆ  
bool
˜ ˜  $
isStrikeThroughVisible
˜ ˜  /
=
˜ ˜ 0 1
true
˜ ˜ 2 6
;
˜ ˜ 6 7

m_textInfo
¯ ¯  
.
¯ ¯  
characterInfo
¯ ¯  ,
[
¯ ¯ , -
i
¯ ¯ - .
]
¯ ¯ . /
.
¯ ¯ / 0&
strikethroughVertexIndex
¯ ¯ 0 H
=
¯ ¯ I J
last_vert_index
¯ ¯ K Z
;
¯ ¯ Z [
if
˙ ˙  
(
˙ ˙  
i
˙ ˙  
>
˙ ˙  $
m_maxVisibleCharacters
˙ ˙  2
||
˙ ˙ 3 5
currentLine
˙ ˙ 6 A
>
˙ ˙ B C
m_maxVisibleLines
˙ ˙ D U
||
˙ ˙ V X
(
˙ ˙ Y Z
m_overflowMode
˙ ˙ Z h
==
˙ ˙ i k
TextOverflowModes
˙ ˙ l }
.
˙ ˙ } ~
Page˙ ˙ ~ Ç
&&˙ ˙ É Ö

m_textInfo˙ ˙ Ü ê
.˙ ˙ ê ë
characterInfo˙ ˙ ë û
[˙ ˙ û ü
i˙ ˙ ü †
]˙ ˙ † °
.˙ ˙ ° ¢

pageNumber˙ ˙ ¢ ¨
+˙ ˙ ≠ Æ
$num˙ ˙ Ø ∞
!=˙ ˙ ± ≥
m_pageToDisplay˙ ˙ ¥ √
)˙ ˙ √ ƒ
)˙ ˙ ƒ ≈$
isStrikeThroughVisible
˚ ˚  .
=
˚ ˚ / 0
false
˚ ˚ 1 6
;
˚ ˚ 6 7
if
˝ ˝  
(
˝ ˝   
beginStrikethrough
˝ ˝  *
==
˝ ˝ + -
false
˝ ˝ . 3
&&
˝ ˝ 4 6$
isStrikeThroughVisible
˝ ˝ 7 M
&&
˝ ˝ N P
i
˝ ˝ Q R
<=
˝ ˝ S U
lineInfo
˝ ˝ V ^
.
˝ ˝ ^ _'
lastVisibleCharacterIndex
˝ ˝ _ x
&&
˝ ˝ y {
unicode˝ ˝ | É
!=˝ ˝ Ñ Ü
$num˝ ˝ á â
&&˝ ˝ ä å
unicode˝ ˝ ç î
!=˝ ˝ ï ó
$num˝ ˝ ò ö
&&˝ ˝ õ ù
unicode˝ ˝ û •
!=˝ ˝ ¶ ®
$num˝ ˝ © ´
)˝ ˝ ´ ¨
{
˛ ˛  
if
ˇ ˇ  
(
ˇ ˇ  
i
ˇ ˇ  
==
ˇ ˇ   
lineInfo
ˇ ˇ ! )
.
ˇ ˇ ) *'
lastVisibleCharacterIndex
ˇ ˇ * C
&&
ˇ ˇ D F
char
ˇ ˇ G K
.
ˇ ˇ K L
IsSeparator
ˇ ˇ L W
(
ˇ ˇ W X
unicode
ˇ ˇ X _
)
ˇ ˇ _ `
)
ˇ ˇ ` a
{
Ä!Ä! 
}
Ä!Ä! 
else
Å!Å! 
{
Ç!Ç!  
beginStrikethrough
É!É! .
=
É!É!/ 0
true
É!É!1 5
;
É!É!5 6$
strikethroughPointSize
Ñ!Ñ! 2
=
Ñ!Ñ!3 4

m_textInfo
Ñ!Ñ!5 ?
.
Ñ!Ñ!? @
characterInfo
Ñ!Ñ!@ M
[
Ñ!Ñ!M N
i
Ñ!Ñ!N O
]
Ñ!Ñ!O P
.
Ñ!Ñ!P Q
	pointSize
Ñ!Ñ!Q Z
;
Ñ!Ñ!Z [ 
strikethroughScale
Ö!Ö! .
=
Ö!Ö!/ 0

m_textInfo
Ö!Ö!1 ;
.
Ö!Ö!; <
characterInfo
Ö!Ö!< I
[
Ö!Ö!I J
i
Ö!Ö!J K
]
Ö!Ö!K L
.
Ö!Ö!L M
scale
Ö!Ö!M R
;
Ö!Ö!R S!
strikethrough_start
Ü!Ü! /
=
Ü!Ü!0 1
new
Ü!Ü!2 5
Vector3
Ü!Ü!6 =
(
Ü!Ü!= >

m_textInfo
Ü!Ü!> H
.
Ü!Ü!H I
characterInfo
Ü!Ü!I V
[
Ü!Ü!V W
i
Ü!Ü!W X
]
Ü!Ü!X Y
.
Ü!Ü!Y Z

bottomLeft
Ü!Ü!Z d
.
Ü!Ü!d e
x
Ü!Ü!e f
,
Ü!Ü!f g

m_textInfo
Ü!Ü!h r
.
Ü!Ü!r s
characterInfoÜ!Ü!s Ä
[Ü!Ü!Ä Å
iÜ!Ü!Å Ç
]Ü!Ü!Ç É
.Ü!Ü!É Ñ
baseLineÜ!Ü!Ñ å
+Ü!Ü!ç é#
strikethroughOffsetÜ!Ü!è ¢
*Ü!Ü!£ §"
strikethroughScaleÜ!Ü!• ∑
,Ü!Ü!∑ ∏
$numÜ!Ü!π ∫
)Ü!Ü!∫ ª
;Ü!Ü!ª º 
strikethroughColor
á!á! .
=
á!á!/ 0

m_textInfo
á!á!1 ;
.
á!á!; <
characterInfo
á!á!< I
[
á!á!I J
i
á!á!J K
]
á!á!K L
.
á!á!L M 
strikethroughColor
á!á!M _
;
á!á!_ `#
strikethroughBaseline
à!à! 1
=
à!à!2 3

m_textInfo
à!à!4 >
.
à!à!> ?
characterInfo
à!à!? L
[
à!à!L M
i
à!à!M N
]
à!à!N O
.
à!à!O P
baseLine
à!à!P X
;
à!à!X Y
}
ä!ä! 
}
ã!ã! 
if
é!é! 
(
é!é!  
beginStrikethrough
é!é! *
&&
é!é!+ -
m_characterCount
é!é!. >
==
é!é!? A
$num
é!é!B C
)
é!é!C D
{
è!è!  
beginStrikethrough
ê!ê! *
=
ê!ê!+ ,
false
ê!ê!- 2
;
ê!ê!2 3
strikethrough_end
ë!ë! )
=
ë!ë!* +
new
ë!ë!, /
Vector3
ë!ë!0 7
(
ë!ë!7 8

m_textInfo
ë!ë!8 B
.
ë!ë!B C
characterInfo
ë!ë!C P
[
ë!ë!P Q
i
ë!ë!Q R
]
ë!ë!R S
.
ë!ë!S T
topRight
ë!ë!T \
.
ë!ë!\ ]
x
ë!ë!] ^
,
ë!ë!^ _

m_textInfo
ë!ë!` j
.
ë!ë!j k
characterInfo
ë!ë!k x
[
ë!ë!x y
i
ë!ë!y z
]
ë!ë!z {
.
ë!ë!{ |
baseLineë!ë!| Ñ
+ë!ë!Ö Ü#
strikethroughOffsetë!ë!á ö
*ë!ë!õ ú"
strikethroughScaleë!ë!ù Ø
,ë!ë!Ø ∞
$numë!ë!± ≤
)ë!ë!≤ ≥
;ë!ë!≥ ¥
DrawUnderlineMesh
ì!ì! )
(
ì!ì!) *!
strikethrough_start
ì!ì!* =
,
ì!ì!= >
strikethrough_end
ì!ì!? P
,
ì!ì!P Q
ref
ì!ì!R U
last_vert_index
ì!ì!V e
,
ì!ì!e f 
strikethroughScale
ì!ì!g y
,
ì!ì!y z!
strikethroughScaleì!ì!{ ç
,ì!ì!ç é"
strikethroughScaleì!ì!è °
,ì!ì!° ¢
xScaleì!ì!£ ©
,ì!ì!© ™"
strikethroughColorì!ì!´ Ω
)ì!ì!Ω æ
;ì!ì!æ ø
}
î!î! 
else
ï!ï! 
if
ï!ï! 
(
ï!ï!  
beginStrikethrough
ï!ï! /
&&
ï!ï!0 2
i
ï!ï!3 4
==
ï!ï!5 7
lineInfo
ï!ï!8 @
.
ï!ï!@ A 
lastCharacterIndex
ï!ï!A S
)
ï!ï!S T
{
ñ!ñ! 
if
ò!ò! 
(
ò!ò! 
char
ò!ò!  
.
ò!ò!  !
IsWhiteSpace
ò!ò!! -
(
ò!ò!- .
unicode
ò!ò!. 5
)
ò!ò!5 6
||
ò!ò!7 9
unicode
ò!ò!: A
==
ò!ò!B D
$num
ò!ò!E K
)
ò!ò!K L
{
ô!ô! 
int
ö!ö! '
lastVisibleCharacterIndex
ö!ö!  9
=
ö!ö!: ;
lineInfo
ö!ö!< D
.
ö!ö!D E'
lastVisibleCharacterIndex
ö!ö!E ^
;
ö!ö!^ _
strikethrough_end
õ!õ! -
=
õ!õ!. /
new
õ!õ!0 3
Vector3
õ!õ!4 ;
(
õ!õ!; <

m_textInfo
õ!õ!< F
.
õ!õ!F G
characterInfo
õ!õ!G T
[
õ!õ!T U'
lastVisibleCharacterIndex
õ!õ!U n
]
õ!õ!n o
.
õ!õ!o p
topRight
õ!õ!p x
.
õ!õ!x y
x
õ!õ!y z
,
õ!õ!z {

m_textInfoõ!õ!| Ü
.õ!õ!Ü á
characterInfoõ!õ!á î
[õ!õ!î ï)
lastVisibleCharacterIndexõ!õ!ï Æ
]õ!õ!Æ Ø
.õ!õ!Ø ∞
baseLineõ!õ!∞ ∏
+õ!õ!π ∫#
strikethroughOffsetõ!õ!ª Œ
*õ!õ!œ –"
strikethroughScaleõ!õ!— „
,õ!õ!„ ‰
$numõ!õ!Â Ê
)õ!õ!Ê Á
;õ!õ!Á Ë
}
ú!ú! 
else
ù!ù! 
{
û!û! 
strikethrough_end
†!†! -
=
†!†!. /
new
†!†!0 3
Vector3
†!†!4 ;
(
†!†!; <

m_textInfo
†!†!< F
.
†!†!F G
characterInfo
†!†!G T
[
†!†!T U
i
†!†!U V
]
†!†!V W
.
†!†!W X
topRight
†!†!X `
.
†!†!` a
x
†!†!a b
,
†!†!b c

m_textInfo
†!†!d n
.
†!†!n o
characterInfo
†!†!o |
[
†!†!| }
i
†!†!} ~
]
†!†!~ 
.†!†! Ä
baseLine†!†!Ä à
+†!†!â ä#
strikethroughOffset†!†!ã û
*†!†!ü †"
strikethroughScale†!†!° ≥
,†!†!≥ ¥
$num†!†!µ ∂
)†!†!∂ ∑
;†!†!∑ ∏
}
°!°!  
beginStrikethrough
£!£! *
=
£!£!+ ,
false
£!£!- 2
;
£!£!2 3
DrawUnderlineMesh
§!§! )
(
§!§!) *!
strikethrough_start
§!§!* =
,
§!§!= >
strikethrough_end
§!§!? P
,
§!§!P Q
ref
§!§!R U
last_vert_index
§!§!V e
,
§!§!e f 
strikethroughScale
§!§!g y
,
§!§!y z!
strikethroughScale§!§!{ ç
,§!§!ç é"
strikethroughScale§!§!è °
,§!§!° ¢
xScale§!§!£ ©
,§!§!© ™"
strikethroughColor§!§!´ Ω
)§!§!Ω æ
;§!§!æ ø
}
•!•! 
else
¶!¶! 
if
¶!¶! 
(
¶!¶!  
beginStrikethrough
¶!¶! /
&&
¶!¶!0 2
i
¶!¶!3 4
<
¶!¶!5 6
m_characterCount
¶!¶!7 G
&&
¶!¶!H J
(
¶!¶!K L

m_textInfo
¶!¶!L V
.
¶!¶!V W
characterInfo
¶!¶!W d
[
¶!¶!d e
i
¶!¶!e f
+
¶!¶!g h
$num
¶!¶!i j
]
¶!¶!j k
.
¶!¶!k l
	pointSize
¶!¶!l u
!=
¶!¶!v x%
strikethroughPointSize¶!¶!y è
||¶!¶!ê í
!¶!¶!ì î
TMP_Math¶!¶!î ú
.¶!¶!ú ù
Approximately¶!¶!ù ™
(¶!¶!™ ´

m_textInfo¶!¶!´ µ
.¶!¶!µ ∂
characterInfo¶!¶!∂ √
[¶!¶!√ ƒ
i¶!¶!ƒ ≈
+¶!¶!∆ «
$num¶!¶!» …
]¶!¶!…  
.¶!¶!  À
baseLine¶!¶!À ”
+¶!¶!‘ ’
offset¶!¶!÷ ‹
.¶!¶!‹ ›
y¶!¶!› ﬁ
,¶!¶!ﬁ ﬂ%
strikethroughBaseline¶!¶!‡ ı
)¶!¶!ı ˆ
)¶!¶!ˆ ˜
)¶!¶!˜ ¯
{
ß!ß!  
beginStrikethrough
©!©! *
=
©!©!+ ,
false
©!©!- 2
;
©!©!2 3
int
´!´! '
lastVisibleCharacterIndex
´!´! 5
=
´!´!6 7
lineInfo
´!´!8 @
.
´!´!@ A'
lastVisibleCharacterIndex
´!´!A Z
;
´!´!Z [
if
¨!¨! 
(
¨!¨! 
i
¨!¨! 
>
¨!¨! '
lastVisibleCharacterIndex
¨!¨!  9
)
¨!¨!9 :
strikethrough_end
≠!≠! -
=
≠!≠!. /
new
≠!≠!0 3
Vector3
≠!≠!4 ;
(
≠!≠!; <

m_textInfo
≠!≠!< F
.
≠!≠!F G
characterInfo
≠!≠!G T
[
≠!≠!T U'
lastVisibleCharacterIndex
≠!≠!U n
]
≠!≠!n o
.
≠!≠!o p
topRight
≠!≠!p x
.
≠!≠!x y
x
≠!≠!y z
,
≠!≠!z {

m_textInfo≠!≠!| Ü
.≠!≠!Ü á
characterInfo≠!≠!á î
[≠!≠!î ï)
lastVisibleCharacterIndex≠!≠!ï Æ
]≠!≠!Æ Ø
.≠!≠!Ø ∞
baseLine≠!≠!∞ ∏
+≠!≠!π ∫#
strikethroughOffset≠!≠!ª Œ
*≠!≠!œ –"
strikethroughScale≠!≠!— „
,≠!≠!„ ‰
$num≠!≠!Â Ê
)≠!≠!Ê Á
;≠!≠!Á Ë
else
Æ!Æ! 
strikethrough_end
Ø!Ø! -
=
Ø!Ø!. /
new
Ø!Ø!0 3
Vector3
Ø!Ø!4 ;
(
Ø!Ø!; <

m_textInfo
Ø!Ø!< F
.
Ø!Ø!F G
characterInfo
Ø!Ø!G T
[
Ø!Ø!T U
i
Ø!Ø!U V
]
Ø!Ø!V W
.
Ø!Ø!W X
topRight
Ø!Ø!X `
.
Ø!Ø!` a
x
Ø!Ø!a b
,
Ø!Ø!b c

m_textInfo
Ø!Ø!d n
.
Ø!Ø!n o
characterInfo
Ø!Ø!o |
[
Ø!Ø!| }
i
Ø!Ø!} ~
]
Ø!Ø!~ 
.Ø!Ø! Ä
baseLineØ!Ø!Ä à
+Ø!Ø!â ä#
strikethroughOffsetØ!Ø!ã û
*Ø!Ø!ü †"
strikethroughScaleØ!Ø!° ≥
,Ø!Ø!≥ ¥
$numØ!Ø!µ ∂
)Ø!Ø!∂ ∑
;Ø!Ø!∑ ∏
DrawUnderlineMesh
±!±! )
(
±!±!) *!
strikethrough_start
±!±!* =
,
±!±!= >
strikethrough_end
±!±!? P
,
±!±!P Q
ref
±!±!R U
last_vert_index
±!±!V e
,
±!±!e f 
strikethroughScale
±!±!g y
,
±!±!y z!
strikethroughScale±!±!{ ç
,±!±!ç é"
strikethroughScale±!±!è °
,±!±!° ¢
xScale±!±!£ ©
,±!±!© ™"
strikethroughColor±!±!´ Ω
)±!±!Ω æ
;±!±!æ ø
}
≥!≥! 
else
¥!¥! 
if
¥!¥! 
(
¥!¥!  
beginStrikethrough
¥!¥! /
&&
¥!¥!0 2
i
¥!¥!3 4
<
¥!¥!5 6
m_characterCount
¥!¥!7 G
&&
¥!¥!H J
currentFontAsset
¥!¥!K [
.
¥!¥![ \
GetInstanceID
¥!¥!\ i
(
¥!¥!i j
)
¥!¥!j k
!=
¥!¥!l n
characterInfos
¥!¥!o }
[
¥!¥!} ~
i
¥!¥!~ 
+¥!¥!Ä Å
$num¥!¥!Ç É
]¥!¥!É Ñ
.¥!¥!Ñ Ö
	fontAsset¥!¥!Ö é
.¥!¥!é è
GetInstanceID¥!¥!è ú
(¥!¥!ú ù
)¥!¥!ù û
)¥!¥!û ü
{
µ!µ!  
beginStrikethrough
∑!∑! *
=
∑!∑!+ ,
false
∑!∑!- 2
;
∑!∑!2 3
strikethrough_end
∏!∏! )
=
∏!∏!* +
new
∏!∏!, /
Vector3
∏!∏!0 7
(
∏!∏!7 8

m_textInfo
∏!∏!8 B
.
∏!∏!B C
characterInfo
∏!∏!C P
[
∏!∏!P Q
i
∏!∏!Q R
]
∏!∏!R S
.
∏!∏!S T
topRight
∏!∏!T \
.
∏!∏!\ ]
x
∏!∏!] ^
,
∏!∏!^ _

m_textInfo
∏!∏!` j
.
∏!∏!j k
characterInfo
∏!∏!k x
[
∏!∏!x y
i
∏!∏!y z
]
∏!∏!z {
.
∏!∏!{ |
baseLine∏!∏!| Ñ
+∏!∏!Ö Ü#
strikethroughOffset∏!∏!á ö
*∏!∏!õ ú"
strikethroughScale∏!∏!ù Ø
,∏!∏!Ø ∞
$num∏!∏!± ≤
)∏!∏!≤ ≥
;∏!∏!≥ ¥
DrawUnderlineMesh
∫!∫! )
(
∫!∫!) *!
strikethrough_start
∫!∫!* =
,
∫!∫!= >
strikethrough_end
∫!∫!? P
,
∫!∫!P Q
ref
∫!∫!R U
last_vert_index
∫!∫!V e
,
∫!∫!e f 
strikethroughScale
∫!∫!g y
,
∫!∫!y z!
strikethroughScale∫!∫!{ ç
,∫!∫!ç é"
strikethroughScale∫!∫!è °
,∫!∫!° ¢
xScale∫!∫!£ ©
,∫!∫!© ™"
strikethroughColor∫!∫!´ Ω
)∫!∫!Ω æ
;∫!∫!æ ø
}
ª!ª! 
else
º!º! 
if
º!º! 
(
º!º!  
beginStrikethrough
º!º! /
&&
º!º!0 2
!
º!º!3 4$
isStrikeThroughVisible
º!º!4 J
)
º!º!J K
{
Ω!Ω!  
beginStrikethrough
ø!ø! *
=
ø!ø!+ ,
false
ø!ø!- 2
;
ø!ø!2 3
strikethrough_end
¿!¿! )
=
¿!¿!* +
new
¿!¿!, /
Vector3
¿!¿!0 7
(
¿!¿!7 8

m_textInfo
¿!¿!8 B
.
¿!¿!B C
characterInfo
¿!¿!C P
[
¿!¿!P Q
i
¿!¿!Q R
-
¿!¿!S T
$num
¿!¿!U V
]
¿!¿!V W
.
¿!¿!W X
topRight
¿!¿!X `
.
¿!¿!` a
x
¿!¿!a b
,
¿!¿!b c

m_textInfo
¿!¿!d n
.
¿!¿!n o
characterInfo
¿!¿!o |
[
¿!¿!| }
i
¿!¿!} ~
-¿!¿! Ä
$num¿!¿!Å Ç
]¿!¿!Ç É
.¿!¿!É Ñ
baseLine¿!¿!Ñ å
+¿!¿!ç é#
strikethroughOffset¿!¿!è ¢
*¿!¿!£ §"
strikethroughScale¿!¿!• ∑
,¿!¿!∑ ∏
$num¿!¿!π ∫
)¿!¿!∫ ª
;¿!¿!ª º
DrawUnderlineMesh
¬!¬! )
(
¬!¬!) *!
strikethrough_start
¬!¬!* =
,
¬!¬!= >
strikethrough_end
¬!¬!? P
,
¬!¬!P Q
ref
¬!¬!R U
last_vert_index
¬!¬!V e
,
¬!¬!e f 
strikethroughScale
¬!¬!g y
,
¬!¬!y z!
strikethroughScale¬!¬!{ ç
,¬!¬!ç é"
strikethroughScale¬!¬!è °
,¬!¬!° ¢
xScale¬!¬!£ ©
,¬!¬!© ™"
strikethroughColor¬!¬!´ Ω
)¬!¬!Ω æ
;¬!¬!æ ø
}
√!√! 
}
ƒ!ƒ! 
else
≈!≈! 
{
∆!∆! 
if
»!»! 
(
»!»!  
beginStrikethrough
»!»! *
==
»!»!+ -
true
»!»!. 2
)
»!»!2 3
{
…!…!  
beginStrikethrough
 ! ! *
=
 ! !+ ,
false
 ! !- 2
;
 ! !2 3
strikethrough_end
À!À! )
=
À!À!* +
new
À!À!, /
Vector3
À!À!0 7
(
À!À!7 8

m_textInfo
À!À!8 B
.
À!À!B C
characterInfo
À!À!C P
[
À!À!P Q
i
À!À!Q R
-
À!À!S T
$num
À!À!U V
]
À!À!V W
.
À!À!W X
topRight
À!À!X `
.
À!À!` a
x
À!À!a b
,
À!À!b c

m_textInfo
À!À!d n
.
À!À!n o
characterInfo
À!À!o |
[
À!À!| }
i
À!À!} ~
-À!À! Ä
$numÀ!À!Å Ç
]À!À!Ç É
.À!À!É Ñ
baseLineÀ!À!Ñ å
+À!À!ç é#
strikethroughOffsetÀ!À!è ¢
*À!À!£ §"
strikethroughScaleÀ!À!• ∑
,À!À!∑ ∏
$numÀ!À!π ∫
)À!À!∫ ª
;À!À!ª º
DrawUnderlineMesh
Õ!Õ! )
(
Õ!Õ!) *!
strikethrough_start
Õ!Õ!* =
,
Õ!Õ!= >
strikethrough_end
Õ!Õ!? P
,
Õ!Õ!P Q
ref
Õ!Õ!R U
last_vert_index
Õ!Õ!V e
,
Õ!Õ!e f 
strikethroughScale
Õ!Õ!g y
,
Õ!Õ!y z!
strikethroughScaleÕ!Õ!{ ç
,Õ!Õ!ç é"
strikethroughScaleÕ!Õ!è °
,Õ!Õ!° ¢
xScaleÕ!Õ!£ ©
,Õ!Õ!© ™"
strikethroughColorÕ!Õ!´ Ω
)Õ!Õ!Ω æ
;Õ!Õ!æ ø
}
Œ!Œ! 
}
œ!œ! 
bool
’!’! 
isHighlight
’!’!  
=
’!’!! "
(
’!’!# $

m_textInfo
’!’!$ .
.
’!’!. /
characterInfo
’!’!/ <
[
’!’!< =
i
’!’!= >
]
’!’!> ?
.
’!’!? @
style
’!’!@ E
&
’!’!F G

FontStyles
’!’!H R
.
’!’!R S
	Highlight
’!’!S \
)
’!’!\ ]
==
’!’!^ `

FontStyles
’!’!a k
.
’!’!k l
	Highlight
’!’!l u
;
’!’!u v
if
÷!÷! 
(
÷!÷! 
isHighlight
÷!÷! 
)
÷!÷!  
{
◊!◊! 
bool
ÿ!ÿ!  
isHighlightVisible
ÿ!ÿ! +
=
ÿ!ÿ!, -
true
ÿ!ÿ!. 2
;
ÿ!ÿ!2 3
int
Ÿ!Ÿ! 
currentPage
Ÿ!Ÿ! #
=
Ÿ!Ÿ!$ %

m_textInfo
Ÿ!Ÿ!& 0
.
Ÿ!Ÿ!0 1
characterInfo
Ÿ!Ÿ!1 >
[
Ÿ!Ÿ!> ?
i
Ÿ!Ÿ!? @
]
Ÿ!Ÿ!@ A
.
Ÿ!Ÿ!A B

pageNumber
Ÿ!Ÿ!B L
;
Ÿ!Ÿ!L M
if
€!€! 
(
€!€! 
i
€!€! 
>
€!€! $
m_maxVisibleCharacters
€!€! 2
||
€!€!3 5
currentLine
€!€!6 A
>
€!€!B C
m_maxVisibleLines
€!€!D U
||
€!€!V X
(
€!€!Y Z
m_overflowMode
€!€!Z h
==
€!€!i k
TextOverflowModes
€!€!l }
.
€!€!} ~
Page€!€!~ Ç
&&€!€!É Ö
currentPage€!€!Ü ë
+€!€!í ì
$num€!€!î ï
!=€!€!ñ ò
m_pageToDisplay€!€!ô ®
)€!€!® ©
)€!€!© ™ 
isHighlightVisible
‹!‹! *
=
‹!‹!+ ,
false
‹!‹!- 2
;
‹!‹!2 3
if
ﬁ!ﬁ! 
(
ﬁ!ﬁ! 
beginHighlight
ﬁ!ﬁ! &
==
ﬁ!ﬁ!' )
false
ﬁ!ﬁ!* /
&&
ﬁ!ﬁ!0 2 
isHighlightVisible
ﬁ!ﬁ!3 E
==
ﬁ!ﬁ!F H
true
ﬁ!ﬁ!I M
&&
ﬁ!ﬁ!N P
i
ﬁ!ﬁ!Q R
<=
ﬁ!ﬁ!S U
lineInfo
ﬁ!ﬁ!V ^
.
ﬁ!ﬁ!^ _'
lastVisibleCharacterIndex
ﬁ!ﬁ!_ x
&&
ﬁ!ﬁ!y {
unicodeﬁ!ﬁ!| É
!=ﬁ!ﬁ!Ñ Ü
$numﬁ!ﬁ!á â
&&ﬁ!ﬁ!ä å
unicodeﬁ!ﬁ!ç î
!=ﬁ!ﬁ!ï ó
$numﬁ!ﬁ!ò ö
&&ﬁ!ﬁ!õ ù
unicodeﬁ!ﬁ!û •
!=ﬁ!ﬁ!¶ ®
$numﬁ!ﬁ!© ´
)ﬁ!ﬁ!´ ¨
{
ﬂ!ﬂ! 
if
‡!‡! 
(
‡!‡! 
i
‡!‡! 
==
‡!‡!  
lineInfo
‡!‡!! )
.
‡!‡!) *'
lastVisibleCharacterIndex
‡!‡!* C
&&
‡!‡!D F
char
‡!‡!G K
.
‡!‡!K L
IsSeparator
‡!‡!L W
(
‡!‡!W X
unicode
‡!‡!X _
)
‡!‡!_ `
)
‡!‡!` a
{
·!·! 
}
·!·! 
else
‚!‚! 
{
„!„! 
beginHighlight
‰!‰! *
=
‰!‰!+ ,
true
‰!‰!- 1
;
‰!‰!1 2
highlight_start
Â!Â! +
=
Â!Â!, -$
k_LargePositiveVector2
Â!Â!. D
;
Â!Â!D E
highlight_end
Ê!Ê! )
=
Ê!Ê!* +$
k_LargeNegativeVector2
Ê!Ê!, B
;
Ê!Ê!B C
highlightState
Á!Á! *
=
Á!Á!+ ,

m_textInfo
Á!Á!- 7
.
Á!Á!7 8
characterInfo
Á!Á!8 E
[
Á!Á!E F
i
Á!Á!F G
]
Á!Á!G H
.
Á!Á!H I
highlightState
Á!Á!I W
;
Á!Á!W X
}
Ë!Ë! 
}
È!È! 
if
Î!Î! 
(
Î!Î! 
beginHighlight
Î!Î! &
)
Î!Î!& '
{
Ï!Ï! 
TMP_CharacterInfo
Ì!Ì! )
currentCharacter
Ì!Ì!* :
=
Ì!Ì!; <

m_textInfo
Ì!Ì!= G
.
Ì!Ì!G H
characterInfo
Ì!Ì!H U
[
Ì!Ì!U V
i
Ì!Ì!V W
]
Ì!Ì!W X
;
Ì!Ì!X Y
HighlightState
Ó!Ó! &
currentState
Ó!Ó!' 3
=
Ó!Ó!4 5
currentCharacter
Ó!Ó!6 F
.
Ó!Ó!F G
highlightState
Ó!Ó!G U
;
Ó!Ó!U V
bool
!! 
isColorTransition
!! .
=
!!/ 0
false
!!1 6
;
!!6 7
if
Û!Û! 
(
Û!Û! 
highlightState
Û!Û! *
!=
Û!Û!+ -
currentCharacter
Û!Û!. >
.
Û!Û!> ?
highlightState
Û!Û!? M
)
Û!Û!M N
{
Ù!Ù! 
highlight_end
ˆ!ˆ! )
.
ˆ!ˆ!) *
x
ˆ!ˆ!* +
=
ˆ!ˆ!, -
(
ˆ!ˆ!. /
highlight_end
ˆ!ˆ!/ <
.
ˆ!ˆ!< =
x
ˆ!ˆ!= >
-
ˆ!ˆ!? @
highlightState
ˆ!ˆ!A O
.
ˆ!ˆ!O P
padding
ˆ!ˆ!P W
.
ˆ!ˆ!W X
right
ˆ!ˆ!X ]
+
ˆ!ˆ!^ _
currentCharacter
ˆ!ˆ!` p
.
ˆ!ˆ!p q

bottomLeft
ˆ!ˆ!q {
.
ˆ!ˆ!{ |
x
ˆ!ˆ!| }
)
ˆ!ˆ!} ~
/ˆ!ˆ! Ä
$numˆ!ˆ!Å Ç
;ˆ!ˆ!Ç É
highlight_start
¯!¯! +
.
¯!¯!+ ,
y
¯!¯!, -
=
¯!¯!. /
Mathf
¯!¯!0 5
.
¯!¯!5 6
Min
¯!¯!6 9
(
¯!¯!9 :
highlight_start
¯!¯!: I
.
¯!¯!I J
y
¯!¯!J K
,
¯!¯!K L
currentCharacter
¯!¯!M ]
.
¯!¯!] ^
	descender
¯!¯!^ g
)
¯!¯!g h
;
¯!¯!h i
highlight_end
˘!˘! )
.
˘!˘!) *
y
˘!˘!* +
=
˘!˘!, -
Mathf
˘!˘!. 3
.
˘!˘!3 4
Max
˘!˘!4 7
(
˘!˘!7 8
highlight_end
˘!˘!8 E
.
˘!˘!E F
y
˘!˘!F G
,
˘!˘!G H
currentCharacter
˘!˘!I Y
.
˘!˘!Y Z
ascender
˘!˘!Z b
)
˘!˘!b c
;
˘!˘!c d
DrawTextHighlight
˚!˚! -
(
˚!˚!- .
highlight_start
˚!˚!. =
,
˚!˚!= >
highlight_end
˚!˚!? L
,
˚!˚!L M
ref
˚!˚!N Q
last_vert_index
˚!˚!R a
,
˚!˚!a b
highlightState
˚!˚!c q
.
˚!˚!q r
color
˚!˚!r w
)
˚!˚!w x
;
˚!˚!x y
beginHighlight
˝!˝! *
=
˝!˝!+ ,
true
˝!˝!- 1
;
˝!˝!1 2
highlight_start
˛!˛! +
=
˛!˛!, -
new
˛!˛!. 1
Vector2
˛!˛!2 9
(
˛!˛!9 :
highlight_end
˛!˛!: G
.
˛!˛!G H
x
˛!˛!H I
,
˛!˛!I J
currentCharacter
˛!˛!K [
.
˛!˛![ \
	descender
˛!˛!\ e
-
˛!˛!f g
currentState
˛!˛!h t
.
˛!˛!t u
padding
˛!˛!u |
.
˛!˛!| }
bottom˛!˛!} É
)˛!˛!É Ñ
;˛!˛!Ñ Ö
highlight_end
ˇ!ˇ! )
=
ˇ!ˇ!* +
new
ˇ!ˇ!, /
Vector2
ˇ!ˇ!0 7
(
ˇ!ˇ!7 8
currentCharacter
ˇ!ˇ!8 H
.
ˇ!ˇ!H I
topRight
ˇ!ˇ!I Q
.
ˇ!ˇ!Q R
x
ˇ!ˇ!R S
+
ˇ!ˇ!T U
currentState
ˇ!ˇ!V b
.
ˇ!ˇ!b c
padding
ˇ!ˇ!c j
.
ˇ!ˇ!j k
right
ˇ!ˇ!k p
,
ˇ!ˇ!p q
currentCharacterˇ!ˇ!r Ç
.ˇ!ˇ!Ç É
ascenderˇ!ˇ!É ã
+ˇ!ˇ!å ç
currentStateˇ!ˇ!é ö
.ˇ!ˇ!ö õ
paddingˇ!ˇ!õ ¢
.ˇ!ˇ!¢ £
topˇ!ˇ!£ ¶
)ˇ!ˇ!¶ ß
;ˇ!ˇ!ß ®
highlightState
Å"Å" *
=
Å"Å"+ ,
currentCharacter
Å"Å"- =
.
Å"Å"= >
highlightState
Å"Å"> L
;
Å"Å"L M
isColorTransition
É"É" -
=
É"É". /
true
É"É"0 4
;
É"É"4 5
}
Ñ"Ñ" 
if
Ü"Ü" 
(
Ü"Ü" 
!
Ü"Ü" 
isColorTransition
Ü"Ü" .
)
Ü"Ü". /
{
á"á" 
highlight_start
â"â" +
.
â"â"+ ,
x
â"â", -
=
â"â". /
Mathf
â"â"0 5
.
â"â"5 6
Min
â"â"6 9
(
â"â"9 :
highlight_start
â"â": I
.
â"â"I J
x
â"â"J K
,
â"â"K L
currentCharacter
â"â"M ]
.
â"â"] ^

bottomLeft
â"â"^ h
.
â"â"h i
x
â"â"i j
-
â"â"k l
highlightState
â"â"m {
.
â"â"{ |
paddingâ"â"| É
.â"â"É Ñ
leftâ"â"Ñ à
)â"â"à â
;â"â"â ä
highlight_start
ä"ä" +
.
ä"ä"+ ,
y
ä"ä", -
=
ä"ä". /
Mathf
ä"ä"0 5
.
ä"ä"5 6
Min
ä"ä"6 9
(
ä"ä"9 :
highlight_start
ä"ä": I
.
ä"ä"I J
y
ä"ä"J K
,
ä"ä"K L
currentCharacter
ä"ä"M ]
.
ä"ä"] ^
	descender
ä"ä"^ g
-
ä"ä"h i
highlightState
ä"ä"j x
.
ä"ä"x y
paddingä"ä"y Ä
.ä"ä"Ä Å
bottomä"ä"Å á
)ä"ä"á à
;ä"ä"à â
highlight_end
å"å" )
.
å"å") *
x
å"å"* +
=
å"å", -
Mathf
å"å". 3
.
å"å"3 4
Max
å"å"4 7
(
å"å"7 8
highlight_end
å"å"8 E
.
å"å"E F
x
å"å"F G
,
å"å"G H
currentCharacter
å"å"I Y
.
å"å"Y Z
topRight
å"å"Z b
.
å"å"b c
x
å"å"c d
+
å"å"e f
highlightState
å"å"g u
.
å"å"u v
padding
å"å"v }
.
å"å"} ~
rightå"å"~ É
)å"å"É Ñ
;å"å"Ñ Ö
highlight_end
ç"ç" )
.
ç"ç") *
y
ç"ç"* +
=
ç"ç", -
Mathf
ç"ç". 3
.
ç"ç"3 4
Max
ç"ç"4 7
(
ç"ç"7 8
highlight_end
ç"ç"8 E
.
ç"ç"E F
y
ç"ç"F G
,
ç"ç"G H
currentCharacter
ç"ç"I Y
.
ç"ç"Y Z
ascender
ç"ç"Z b
+
ç"ç"c d
highlightState
ç"ç"e s
.
ç"ç"s t
padding
ç"ç"t {
.
ç"ç"{ |
top
ç"ç"| 
)ç"ç" Ä
;ç"ç"Ä Å
}
é"é" 
}
è"è" 
if
í"í" 
(
í"í" 
beginHighlight
í"í" &
&&
í"í"' )
m_characterCount
í"í"* :
==
í"í"; =
$num
í"í"> ?
)
í"í"? @
{
ì"ì" 
beginHighlight
î"î" &
=
î"î"' (
false
î"î") .
;
î"î". /
DrawTextHighlight
ñ"ñ" )
(
ñ"ñ") *
highlight_start
ñ"ñ"* 9
,
ñ"ñ"9 :
highlight_end
ñ"ñ"; H
,
ñ"ñ"H I
ref
ñ"ñ"J M
last_vert_index
ñ"ñ"N ]
,
ñ"ñ"] ^
highlightState
ñ"ñ"_ m
.
ñ"ñ"m n
color
ñ"ñ"n s
)
ñ"ñ"s t
;
ñ"ñ"t u
}
ó"ó" 
else
ò"ò" 
if
ò"ò" 
(
ò"ò" 
beginHighlight
ò"ò" +
&&
ò"ò", .
(
ò"ò"/ 0
i
ò"ò"0 1
==
ò"ò"2 4
lineInfo
ò"ò"5 =
.
ò"ò"= > 
lastCharacterIndex
ò"ò"> P
||
ò"ò"Q S
i
ò"ò"T U
>=
ò"ò"V X
lineInfo
ò"ò"Y a
.
ò"ò"a b'
lastVisibleCharacterIndex
ò"ò"b {
)
ò"ò"{ |
)
ò"ò"| }
{
ô"ô" 
beginHighlight
ö"ö" &
=
ö"ö"' (
false
ö"ö") .
;
ö"ö". /
DrawTextHighlight
õ"õ" )
(
õ"õ") *
highlight_start
õ"õ"* 9
,
õ"õ"9 :
highlight_end
õ"õ"; H
,
õ"õ"H I
ref
õ"õ"J M
last_vert_index
õ"õ"N ]
,
õ"õ"] ^
highlightState
õ"õ"_ m
.
õ"õ"m n
color
õ"õ"n s
)
õ"õ"s t
;
õ"õ"t u
}
ú"ú" 
else
ù"ù" 
if
ù"ù" 
(
ù"ù" 
beginHighlight
ù"ù" +
&&
ù"ù", .
!
ù"ù"/ 0 
isHighlightVisible
ù"ù"0 B
)
ù"ù"B C
{
û"û" 
beginHighlight
ü"ü" &
=
ü"ü"' (
false
ü"ü") .
;
ü"ü". /
DrawTextHighlight
†"†" )
(
†"†") *
highlight_start
†"†"* 9
,
†"†"9 :
highlight_end
†"†"; H
,
†"†"H I
ref
†"†"J M
last_vert_index
†"†"N ]
,
†"†"] ^
highlightState
†"†"_ m
.
†"†"m n
color
†"†"n s
)
†"†"s t
;
†"†"t u
}
°"°" 
}
¢"¢" 
else
£"£" 
{
§"§" 
if
¶"¶" 
(
¶"¶" 
beginHighlight
¶"¶" &
==
¶"¶"' )
true
¶"¶"* .
)
¶"¶". /
{
ß"ß" 
beginHighlight
®"®" &
=
®"®"' (
false
®"®") .
;
®"®". /
DrawTextHighlight
©"©" )
(
©"©") *
highlight_start
©"©"* 9
,
©"©"9 :
highlight_end
©"©"; H
,
©"©"H I
ref
©"©"J M
last_vert_index
©"©"N ]
,
©"©"] ^
highlightState
©"©"_ m
.
©"©"m n
color
©"©"n s
)
©"©"s t
;
©"©"t u
}
™"™" 
}
´"´" 
lastLine
Æ"Æ" 
=
Æ"Æ" 
currentLine
Æ"Æ" &
;
Æ"Æ"& '
}
Ø"Ø" 

m_textInfo
∂"∂" 
.
∂"∂" 
characterCount
∂"∂" %
=
∂"∂"& '
m_characterCount
∂"∂"( 8
;
∂"∂"8 9

m_textInfo
∑"∑" 
.
∑"∑" 
spriteCount
∑"∑" "
=
∑"∑"# $
m_spriteCount
∑"∑"% 2
;
∑"∑"2 3

m_textInfo
∏"∏" 
.
∏"∏" 
	lineCount
∏"∏"  
=
∏"∏"! "
	lineCount
∏"∏"# ,
;
∏"∏", -

m_textInfo
π"π" 
.
π"π" 
	wordCount
π"π"  
=
π"π"! "
	wordCount
π"π"# ,
!=
π"π"- /
$num
π"π"0 1
&&
π"π"2 4
m_characterCount
π"π"5 E
>
π"π"F G
$num
π"π"H I
?
π"π"J K
	wordCount
π"π"L U
:
π"π"V W
$num
π"π"X Y
;
π"π"Y Z

m_textInfo
∫"∫" 
.
∫"∫" 
	pageCount
∫"∫"  
=
∫"∫"! "
m_pageNumber
∫"∫"# /
+
∫"∫"0 1
$num
∫"∫"2 3
;
∫"∫"3 4)
k_GenerateTextPhaseIIMarker
Ω"Ω" '
.
Ω"Ω"' (
End
Ω"Ω"( +
(
Ω"Ω"+ ,
)
Ω"Ω", -
;
Ω"Ω"- .*
k_GenerateTextPhaseIIIMarker
¿"¿" (
.
¿"¿"( )
Begin
¿"¿") .
(
¿"¿". /
)
¿"¿"/ 0
;
¿"¿"0 1
if
¬"¬" 
(
¬"¬" 
m_renderMode
¬"¬" 
==
¬"¬" 
TextRenderFlags
¬"¬"  /
.
¬"¬"/ 0
Render
¬"¬"0 6
&&
¬"¬"7 9
IsActive
¬"¬": B
(
¬"¬"B C
)
¬"¬"C D
)
¬"¬"D E
{
√"√" 
OnPreRenderText
≈"≈" 
?
≈"≈"  
.
≈"≈"  !
Invoke
≈"≈"! '
(
≈"≈"' (

m_textInfo
≈"≈"( 2
)
≈"≈"2 3
;
≈"≈"3 4
if
…"…" 
(
…"…" 
m_canvas
…"…" 
.
…"…" &
additionalShaderChannels
…"…" 5
!=
…"…"6 8
(
…"…"9 :,
AdditionalCanvasShaderChannels
…"…": X
)
…"…"X Y
$num
…"…"Y [
)
…"…"[ \
m_canvas
 " " 
.
 " " &
additionalShaderChannels
 " " 5
|=
 " "6 8
(
 " "9 :,
AdditionalCanvasShaderChannels
 " ": X
)
 " "X Y
$num
 " "Y [
;
 " "[ \
if
Õ"Õ" 
(
Õ"Õ" $
m_geometrySortingOrder
Õ"Õ" *
!=
Õ"Õ"+ - 
VertexSortingOrder
Õ"Õ". @
.
Õ"Õ"@ A
Normal
Õ"Õ"A G
)
Õ"Õ"G H

m_textInfo
Œ"Œ" 
.
Œ"Œ" 
meshInfo
Œ"Œ" '
[
Œ"Œ"' (
$num
Œ"Œ"( )
]
Œ"Œ") *
.
Œ"Œ"* +
SortGeometry
Œ"Œ"+ 7
(
Œ"Œ"7 8 
VertexSortingOrder
Œ"Œ"8 J
.
Œ"Œ"J K
Reverse
Œ"Œ"K R
)
Œ"Œ"R S
;
Œ"Œ"S T
m_mesh
—"—" 
.
—"—" 
MarkDynamic
—"—" "
(
—"—"" #
)
—"—"# $
;
—"—"$ %
m_mesh
“"“" 
.
“"“" 
vertices
“"“" 
=
“"“"  !

m_textInfo
“"“"" ,
.
“"“", -
meshInfo
“"“"- 5
[
“"“"5 6
$num
“"“"6 7
]
“"“"7 8
.
“"“"8 9
vertices
“"“"9 A
;
“"“"A B
m_mesh
”"”" 
.
”"”" 
uv
”"”" 
=
”"”" 

m_textInfo
”"”" &
.
”"”"& '
meshInfo
”"”"' /
[
”"”"/ 0
$num
”"”"0 1
]
”"”"1 2
.
”"”"2 3
uvs0
”"”"3 7
;
”"”"7 8
m_mesh
‘"‘" 
.
‘"‘" 
uv2
‘"‘" 
=
‘"‘" 

m_textInfo
‘"‘" '
.
‘"‘"' (
meshInfo
‘"‘"( 0
[
‘"‘"0 1
$num
‘"‘"1 2
]
‘"‘"2 3
.
‘"‘"3 4
uvs2
‘"‘"4 8
;
‘"‘"8 9
m_mesh
÷"÷" 
.
÷"÷" 
colors32
÷"÷" 
=
÷"÷"  !

m_textInfo
÷"÷"" ,
.
÷"÷", -
meshInfo
÷"÷"- 5
[
÷"÷"5 6
$num
÷"÷"6 7
]
÷"÷"7 8
.
÷"÷"8 9
colors32
÷"÷"9 A
;
÷"÷"A B
m_mesh
Ÿ"Ÿ" 
.
Ÿ"Ÿ" 
RecalculateBounds
Ÿ"Ÿ" (
(
Ÿ"Ÿ"( )
)
Ÿ"Ÿ") *
;
Ÿ"Ÿ"* +
m_canvasRenderer
‹"‹"  
.
‹"‹"  !
SetMesh
‹"‹"! (
(
‹"‹"( )
m_mesh
‹"‹") /
)
‹"‹"/ 0
;
‹"‹"0 1
Color
ﬂ"ﬂ" 
parentBaseColor
ﬂ"ﬂ" %
=
ﬂ"ﬂ"& '
m_canvasRenderer
ﬂ"ﬂ"( 8
.
ﬂ"ﬂ"8 9
GetColor
ﬂ"ﬂ"9 A
(
ﬂ"ﬂ"A B
)
ﬂ"ﬂ"B C
;
ﬂ"ﬂ"C D
bool
·"·" *
isCullTransparentMeshEnabled
·"·" 1
=
·"·"2 3
m_canvasRenderer
·"·"4 D
.
·"·"D E!
cullTransparentMesh
·"·"E X
;
·"·"X Y
for
„"„" 
(
„"„" 
int
„"„" 
i
„"„" 
=
„"„" 
$num
„"„" 
;
„"„" 
i
„"„"  !
<
„"„"" #

m_textInfo
„"„"$ .
.
„"„". /
materialCount
„"„"/ <
;
„"„"< =
i
„"„"> ?
++
„"„"? A
)
„"„"A B
{
‰"‰" 

m_textInfo
Ê"Ê" 
.
Ê"Ê" 
meshInfo
Ê"Ê" '
[
Ê"Ê"' (
i
Ê"Ê"( )
]
Ê"Ê") *
.
Ê"Ê"* +!
ClearUnusedVertices
Ê"Ê"+ >
(
Ê"Ê"> ?
)
Ê"Ê"? @
;
Ê"Ê"@ A
if
Ë"Ë" 
(
Ë"Ë" 
m_subTextObjects
Ë"Ë" (
[
Ë"Ë"( )
i
Ë"Ë") *
]
Ë"Ë"* +
==
Ë"Ë", .
null
Ë"Ë"/ 3
)
Ë"Ë"3 4
continue
Ë"Ë"5 =
;
Ë"Ë"= >
if
Î"Î" 
(
Î"Î" $
m_geometrySortingOrder
Î"Î" .
!=
Î"Î"/ 1 
VertexSortingOrder
Î"Î"2 D
.
Î"Î"D E
Normal
Î"Î"E K
)
Î"Î"K L

m_textInfo
Ï"Ï" "
.
Ï"Ï"" #
meshInfo
Ï"Ï"# +
[
Ï"Ï"+ ,
i
Ï"Ï", -
]
Ï"Ï"- .
.
Ï"Ï". /
SortGeometry
Ï"Ï"/ ;
(
Ï"Ï"; < 
VertexSortingOrder
Ï"Ï"< N
.
Ï"Ï"N O
Reverse
Ï"Ï"O V
)
Ï"Ï"V W
;
Ï"Ï"W X
m_subTextObjects
Ô"Ô" $
[
Ô"Ô"$ %
i
Ô"Ô"% &
]
Ô"Ô"& '
.
Ô"Ô"' (
mesh
Ô"Ô"( ,
.
Ô"Ô", -
vertices
Ô"Ô"- 5
=
Ô"Ô"6 7

m_textInfo
Ô"Ô"8 B
.
Ô"Ô"B C
meshInfo
Ô"Ô"C K
[
Ô"Ô"K L
i
Ô"Ô"L M
]
Ô"Ô"M N
.
Ô"Ô"N O
vertices
Ô"Ô"O W
;
Ô"Ô"W X
m_subTextObjects
"" $
[
""$ %
i
""% &
]
""& '
.
""' (
mesh
""( ,
.
"", -
uv
""- /
=
""0 1

m_textInfo
""2 <
.
""< =
meshInfo
""= E
[
""E F
i
""F G
]
""G H
.
""H I
uvs0
""I M
;
""M N
m_subTextObjects
Ò"Ò" $
[
Ò"Ò"$ %
i
Ò"Ò"% &
]
Ò"Ò"& '
.
Ò"Ò"' (
mesh
Ò"Ò"( ,
.
Ò"Ò", -
uv2
Ò"Ò"- 0
=
Ò"Ò"1 2

m_textInfo
Ò"Ò"3 =
.
Ò"Ò"= >
meshInfo
Ò"Ò"> F
[
Ò"Ò"F G
i
Ò"Ò"G H
]
Ò"Ò"H I
.
Ò"Ò"I J
uvs2
Ò"Ò"J N
;
Ò"Ò"N O
m_subTextObjects
Û"Û" $
[
Û"Û"$ %
i
Û"Û"% &
]
Û"Û"& '
.
Û"Û"' (
mesh
Û"Û"( ,
.
Û"Û", -
colors32
Û"Û"- 5
=
Û"Û"6 7

m_textInfo
Û"Û"8 B
.
Û"Û"B C
meshInfo
Û"Û"C K
[
Û"Û"K L
i
Û"Û"L M
]
Û"Û"M N
.
Û"Û"N O
colors32
Û"Û"O W
;
Û"Û"W X
m_subTextObjects
ı"ı" $
[
ı"ı"$ %
i
ı"ı"% &
]
ı"ı"& '
.
ı"ı"' (
mesh
ı"ı"( ,
.
ı"ı", -
RecalculateBounds
ı"ı"- >
(
ı"ı"> ?
)
ı"ı"? @
;
ı"ı"@ A
m_subTextObjects
˜"˜" $
[
˜"˜"$ %
i
˜"˜"% &
]
˜"˜"& '
.
˜"˜"' (
canvasRenderer
˜"˜"( 6
.
˜"˜"6 7
SetMesh
˜"˜"7 >
(
˜"˜"> ?
m_subTextObjects
˜"˜"? O
[
˜"˜"O P
i
˜"˜"P Q
]
˜"˜"Q R
.
˜"˜"R S
mesh
˜"˜"S W
)
˜"˜"W X
;
˜"˜"X Y
m_subTextObjects
˙"˙" $
[
˙"˙"$ %
i
˙"˙"% &
]
˙"˙"& '
.
˙"˙"' (
canvasRenderer
˙"˙"( 6
.
˙"˙"6 7
SetColor
˙"˙"7 ?
(
˙"˙"? @
parentBaseColor
˙"˙"@ O
)
˙"˙"O P
;
˙"˙"P Q
m_subTextObjects
˝"˝" $
[
˝"˝"$ %
i
˝"˝"% &
]
˝"˝"& '
.
˝"˝"' (
canvasRenderer
˝"˝"( 6
.
˝"˝"6 7!
cullTransparentMesh
˝"˝"7 J
=
˝"˝"K L*
isCullTransparentMeshEnabled
˝"˝"M i
;
˝"˝"i j
m_subTextObjects
Ä#Ä# $
[
Ä#Ä#$ %
i
Ä#Ä#% &
]
Ä#Ä#& '
.
Ä#Ä#' (
raycastTarget
Ä#Ä#( 5
=
Ä#Ä#6 7
this
Ä#Ä#8 <
.
Ä#Ä#< =
raycastTarget
Ä#Ä#= J
;
Ä#Ä#J K
}
Å#Å# 
}
Ç#Ç#  
TMPro_EventManager
Ö#Ö# 
.
Ö#Ö# 
ON_TEXT_CHANGED
Ö#Ö# .
(
Ö#Ö#. /
this
Ö#Ö#/ 3
)
Ö#Ö#3 4
;
Ö#Ö#4 5*
k_GenerateTextPhaseIIIMarker
ä#ä# (
.
ä#ä#( )
End
ä#ä#) ,
(
ä#ä#, -
)
ä#ä#- .
;
ä#ä#. /"
k_GenerateTextMarker
ã#ã#  
.
ã#ã#  !
End
ã#ã#! $
(
ã#ã#$ %
)
ã#ã#% &
;
ã#ã#& '
}
å#å# 	
	protected
ì#ì# 
override
ì#ì# 
Vector3
ì#ì# "
[
ì#ì#" #
]
ì#ì## $*
GetTextContainerLocalCorners
ì#ì#% A
(
ì#ì#A B
)
ì#ì#B C
{
î#î# 	
if
ï#ï# 
(
ï#ï# 
m_rectTransform
ï#ï# 
==
ï#ï#  "
null
ï#ï## '
)
ï#ï#' (
m_rectTransform
ï#ï#) 8
=
ï#ï#9 :
this
ï#ï#; ?
.
ï#ï#? @
rectTransform
ï#ï#@ M
;
ï#ï#M N
m_rectTransform
ó#ó# 
.
ó#ó# 
GetLocalCorners
ó#ó# +
(
ó#ó#+ ,$
m_RectTransformCorners
ó#ó#, B
)
ó#ó#B C
;
ó#ó#C D
return
ô#ô# $
m_RectTransformCorners
ô#ô# )
;
ô#ô#) *
}
ö#ö# 	
	protected
°#°# 
override
°#°# 
void
°#°#  
SetActiveSubMeshes
°#°#  2
(
°#°#2 3
bool
°#°#3 7
state
°#°#8 =
)
°#°#= >
{
¢#¢# 	
for
£#£# 
(
£#£# 
int
£#£# 
i
£#£# 
=
£#£# 
$num
£#£# 
;
£#£# 
i
£#£# 
<
£#£# 
m_subTextObjects
£#£#  0
.
£#£#0 1
Length
£#£#1 7
&&
£#£#8 :
m_subTextObjects
£#£#; K
[
£#£#K L
i
£#£#L M
]
£#£#M N
!=
£#£#O Q
null
£#£#R V
;
£#£#V W
i
£#£#X Y
++
£#£#Y [
)
£#£#[ \
{
§#§# 
if
•#•# 
(
•#•# 
m_subTextObjects
•#•# $
[
•#•#$ %
i
•#•#% &
]
•#•#& '
.
•#•#' (
enabled
•#•#( /
!=
•#•#0 2
state
•#•#3 8
)
•#•#8 9
m_subTextObjects
¶#¶# $
[
¶#¶#$ %
i
¶#¶#% &
]
¶#¶#& '
.
¶#¶#' (
enabled
¶#¶#( /
=
¶#¶#0 1
state
¶#¶#2 7
;
¶#¶#7 8
}
ß#ß# 
}
®#®# 	
	protected
Æ#Æ# 
override
Æ#Æ# 
void
Æ#Æ# #
DestroySubMeshObjects
Æ#Æ#  5
(
Æ#Æ#5 6
)
Æ#Æ#6 7
{
Ø#Ø# 	
for
∞#∞# 
(
∞#∞# 
int
∞#∞# 
i
∞#∞# 
=
∞#∞# 
$num
∞#∞# 
;
∞#∞# 
i
∞#∞# 
<
∞#∞# 
m_subTextObjects
∞#∞#  0
.
∞#∞#0 1
Length
∞#∞#1 7
&&
∞#∞#8 :
m_subTextObjects
∞#∞#; K
[
∞#∞#K L
i
∞#∞#L M
]
∞#∞#M N
!=
∞#∞#O Q
null
∞#∞#R V
;
∞#∞#V W
i
∞#∞#X Y
++
∞#∞#Y [
)
∞#∞#[ \
DestroyImmediate
±#±#  
(
±#±#  !
m_subTextObjects
±#±#! 1
[
±#±#1 2
i
±#±#2 3
]
±#±#3 4
)
±#±#4 5
;
±#±#5 6
}
≤#≤# 	
	protected
π#π# 
override
π#π# 
Bounds
π#π# !
GetCompoundBounds
π#π#" 3
(
π#π#3 4
)
π#π#4 5
{
∫#∫# 	
Bounds
ª#ª# 

mainBounds
ª#ª# 
=
ª#ª# 
m_mesh
ª#ª#  &
.
ª#ª#& '
bounds
ª#ª#' -
;
ª#ª#- .
Vector3
º#º# 
min
º#º# 
=
º#º# 

mainBounds
º#º# $
.
º#º#$ %
min
º#º#% (
;
º#º#( )
Vector3
Ω#Ω# 
max
Ω#Ω# 
=
Ω#Ω# 

mainBounds
Ω#Ω# $
.
Ω#Ω#$ %
max
Ω#Ω#% (
;
Ω#Ω#( )
for
ø#ø# 
(
ø#ø# 
int
ø#ø# 
i
ø#ø# 
=
ø#ø# 
$num
ø#ø# 
;
ø#ø# 
i
ø#ø# 
<
ø#ø# 
m_subTextObjects
ø#ø#  0
.
ø#ø#0 1
Length
ø#ø#1 7
&&
ø#ø#8 :
m_subTextObjects
ø#ø#; K
[
ø#ø#K L
i
ø#ø#L M
]
ø#ø#M N
!=
ø#ø#O Q
null
ø#ø#R V
;
ø#ø#V W
i
ø#ø#X Y
++
ø#ø#Y [
)
ø#ø#[ \
{
¿#¿# 
Bounds
¡#¡# 
	subBounds
¡#¡#  
=
¡#¡#! "
m_subTextObjects
¡#¡## 3
[
¡#¡#3 4
i
¡#¡#4 5
]
¡#¡#5 6
.
¡#¡#6 7
mesh
¡#¡#7 ;
.
¡#¡#; <
bounds
¡#¡#< B
;
¡#¡#B C
min
¬#¬# 
.
¬#¬# 
x
¬#¬# 
=
¬#¬# 
min
¬#¬# 
.
¬#¬# 
x
¬#¬# 
<
¬#¬# 
	subBounds
¬#¬#  )
.
¬#¬#) *
min
¬#¬#* -
.
¬#¬#- .
x
¬#¬#. /
?
¬#¬#0 1
min
¬#¬#2 5
.
¬#¬#5 6
x
¬#¬#6 7
:
¬#¬#8 9
	subBounds
¬#¬#: C
.
¬#¬#C D
min
¬#¬#D G
.
¬#¬#G H
x
¬#¬#H I
;
¬#¬#I J
min
√#√# 
.
√#√# 
y
√#√# 
=
√#√# 
min
√#√# 
.
√#√# 
y
√#√# 
<
√#√# 
	subBounds
√#√#  )
.
√#√#) *
min
√#√#* -
.
√#√#- .
y
√#√#. /
?
√#√#0 1
min
√#√#2 5
.
√#√#5 6
y
√#√#6 7
:
√#√#8 9
	subBounds
√#√#: C
.
√#√#C D
min
√#√#D G
.
√#√#G H
y
√#√#H I
;
√#√#I J
max
≈#≈# 
.
≈#≈# 
x
≈#≈# 
=
≈#≈# 
max
≈#≈# 
.
≈#≈# 
x
≈#≈# 
>
≈#≈# 
	subBounds
≈#≈#  )
.
≈#≈#) *
max
≈#≈#* -
.
≈#≈#- .
x
≈#≈#. /
?
≈#≈#0 1
max
≈#≈#2 5
.
≈#≈#5 6
x
≈#≈#6 7
:
≈#≈#8 9
	subBounds
≈#≈#: C
.
≈#≈#C D
max
≈#≈#D G
.
≈#≈#G H
x
≈#≈#H I
;
≈#≈#I J
max
∆#∆# 
.
∆#∆# 
y
∆#∆# 
=
∆#∆# 
max
∆#∆# 
.
∆#∆# 
y
∆#∆# 
>
∆#∆# 
	subBounds
∆#∆#  )
.
∆#∆#) *
max
∆#∆#* -
.
∆#∆#- .
y
∆#∆#. /
?
∆#∆#0 1
max
∆#∆#2 5
.
∆#∆#5 6
y
∆#∆#6 7
:
∆#∆#8 9
	subBounds
∆#∆#: C
.
∆#∆#C D
max
∆#∆#D G
.
∆#∆#G H
y
∆#∆#H I
;
∆#∆#I J
}
«#«# 
Vector3
…#…# 
center
…#…# 
=
…#…# 
(
…#…# 
min
…#…# !
+
…#…#" #
max
…#…#$ '
)
…#…#' (
/
…#…#) *
$num
…#…#+ ,
;
…#…#, -
Vector2
 # # 
size
 # # 
=
 # # 
max
 # # 
-
 # #  
min
 # #! $
;
 # #$ %
return
À#À# 
new
À#À# 
Bounds
À#À# 
(
À#À# 
center
À#À# $
,
À#À#$ %
size
À#À#& *
)
À#À#* +
;
À#À#+ ,
}
Ã#Ã# 	
internal
Œ#Œ# 
override
Œ#Œ# 
Rect
Œ#Œ# (
GetCanvasSpaceClippingRect
Œ#Œ# 9
(
Œ#Œ#9 :
)
Œ#Œ#: ;
{
œ#œ# 	
if
–#–# 
(
–#–# 
m_canvas
–#–# 
==
–#–# 
null
–#–#  
||
–#–#! #
m_canvas
–#–#$ ,
.
–#–#, -

rootCanvas
–#–#- 7
==
–#–#8 :
null
–#–#; ?
||
–#–#@ B
m_mesh
–#–#C I
==
–#–#J L
null
–#–#M Q
)
–#–#Q R
return
—#—# 
Rect
—#—# 
.
—#—# 
zero
—#—#  
;
—#—#  !
	Transform
”#”# !
rootCanvasTransform
”#”# )
=
”#”#* +
m_canvas
”#”#, 4
.
”#”#4 5

rootCanvas
”#”#5 ?
.
”#”#? @
	transform
”#”#@ I
;
”#”#I J
Bounds
‘#‘# 
compoundBounds
‘#‘# !
=
‘#‘#" #
GetCompoundBounds
‘#‘#$ 5
(
‘#‘#5 6
)
‘#‘#6 7
;
‘#‘#7 8
Vector2
÷#÷# 
position
÷#÷# 
=
÷#÷# !
rootCanvasTransform
÷#÷#  3
.
÷#÷#3 4#
InverseTransformPoint
÷#÷#4 I
(
÷#÷#I J
m_rectTransform
÷#÷#J Y
.
÷#÷#Y Z
position
÷#÷#Z b
)
÷#÷#b c
;
÷#÷#c d
Vector2
ÿ#ÿ# 
canvasLossyScale
ÿ#ÿ# $
=
ÿ#ÿ#% &!
rootCanvasTransform
ÿ#ÿ#' :
.
ÿ#ÿ#: ;

lossyScale
ÿ#ÿ#; E
;
ÿ#ÿ#E F
Vector2
Ÿ#Ÿ# 

lossyScale
Ÿ#Ÿ# 
=
Ÿ#Ÿ#  
m_rectTransform
Ÿ#Ÿ#! 0
.
Ÿ#Ÿ#0 1

lossyScale
Ÿ#Ÿ#1 ;
/
Ÿ#Ÿ#< =
canvasLossyScale
Ÿ#Ÿ#> N
;
Ÿ#Ÿ#N O
return
€#€# 
new
€#€# 
Rect
€#€# 
(
€#€# 
position
€#€# $
+
€#€#% &
compoundBounds
€#€#' 5
.
€#€#5 6
min
€#€#6 9
*
€#€#: ;

lossyScale
€#€#< F
,
€#€#F G
compoundBounds
€#€#H V
.
€#€#V W
size
€#€#W [
*
€#€#\ ]

lossyScale
€#€#^ h
)
€#€#h i
;
€#€#i j
}
‹#‹# 	
void
°$°$ 
UpdateSDFScale
°$°$ 
(
°$°$ 
float
°$°$ !

scaleDelta
°$°$" ,
)
°$°$, -
{
¢$¢$ 	
if
£$£$ 
(
£$£$ 

scaleDelta
£$£$ 
==
£$£$ 
$num
£$£$ 
||
£$£$  "

scaleDelta
£$£$# -
==
£$£$. 0
float
£$£$1 6
.
£$£$6 7
PositiveInfinity
£$£$7 G
||
£$£$H J

scaleDelta
£$£$K U
==
£$£$V X
float
£$£$Y ^
.
£$£$^ _
NegativeInfinity
£$£$_ o
)
£$£$o p
{
§$§$ %
m_havePropertiesChanged
•$•$ '
=
•$•$( )
true
•$•$* .
;
•$•$. /
OnPreRenderCanvas
¶$¶$ !
(
¶$¶$! "
)
¶$¶$" #
;
¶$¶$# $
return
ß$ß$ 
;
ß$ß$ 
}
®$®$ 
for
™$™$ 
(
™$™$ 
int
™$™$ 
materialIndex
™$™$ "
=
™$™$# $
$num
™$™$% &
;
™$™$& '
materialIndex
™$™$( 5
<
™$™$6 7

m_textInfo
™$™$8 B
.
™$™$B C
materialCount
™$™$C P
;
™$™$P Q
materialIndex
™$™$R _
++
™$™$` b
)
™$™$b c
{
´$´$ 
TMP_MeshInfo
¨$¨$ 
meshInfo
¨$¨$ %
=
¨$¨$& '

m_textInfo
¨$¨$( 2
.
¨$¨$2 3
meshInfo
¨$¨$3 ;
[
¨$¨$; <
materialIndex
¨$¨$< I
]
¨$¨$I J
;
¨$¨$J K
for
Æ$Æ$ 
(
Æ$Æ$ 
int
Æ$Æ$ 
i
Æ$Æ$ 
=
Æ$Æ$ 
$num
Æ$Æ$ 
;
Æ$Æ$ 
i
Æ$Æ$  !
<
Æ$Æ$" #
meshInfo
Æ$Æ$$ ,
.
Æ$Æ$, -
uvs2
Æ$Æ$- 1
.
Æ$Æ$1 2
Length
Æ$Æ$2 8
;
Æ$Æ$8 9
i
Æ$Æ$: ;
++
Æ$Æ$; =
)
Æ$Æ$= >
{
Ø$Ø$ 
meshInfo
∞$∞$ 
.
∞$∞$ 
uvs2
∞$∞$ !
[
∞$∞$! "
i
∞$∞$" #
]
∞$∞$# $
.
∞$∞$$ %
y
∞$∞$% &
*=
∞$∞$' )
Mathf
∞$∞$* /
.
∞$∞$/ 0
Abs
∞$∞$0 3
(
∞$∞$3 4

scaleDelta
∞$∞$4 >
)
∞$∞$> ?
;
∞$∞$? @
}
±$±$ 
}
≤$≤$ 
for
µ$µ$ 
(
µ$µ$ 
int
µ$µ$ 
i
µ$µ$ 
=
µ$µ$ 
$num
µ$µ$ 
;
µ$µ$ 
i
µ$µ$ 
<
µ$µ$ 

m_textInfo
µ$µ$  *
.
µ$µ$* +
materialCount
µ$µ$+ 8
;
µ$µ$8 9
i
µ$µ$: ;
++
µ$µ$; =
)
µ$µ$= >
{
∂$∂$ 
if
∑$∑$ 
(
∑$∑$ 
i
∑$∑$ 
==
∑$∑$ 
$num
∑$∑$ 
)
∑$∑$ 
{
∏$∏$ 
m_mesh
π$π$ 
.
π$π$ 
uv2
π$π$ 
=
π$π$  

m_textInfo
π$π$! +
.
π$π$+ ,
meshInfo
π$π$, 4
[
π$π$4 5
$num
π$π$5 6
]
π$π$6 7
.
π$π$7 8
uvs2
π$π$8 <
;
π$π$< =
m_canvasRenderer
∫$∫$ $
.
∫$∫$$ %
SetMesh
∫$∫$% ,
(
∫$∫$, -
m_mesh
∫$∫$- 3
)
∫$∫$3 4
;
∫$∫$4 5
}
ª$ª$ 
else
º$º$ 
{
Ω$Ω$ 
m_subTextObjects
æ$æ$ $
[
æ$æ$$ %
i
æ$æ$% &
]
æ$æ$& '
.
æ$æ$' (
mesh
æ$æ$( ,
.
æ$æ$, -
uv2
æ$æ$- 0
=
æ$æ$1 2

m_textInfo
æ$æ$3 =
.
æ$æ$= >
meshInfo
æ$æ$> F
[
æ$æ$F G
i
æ$æ$G H
]
æ$æ$H I
.
æ$æ$I J
uvs2
æ$æ$J N
;
æ$æ$N O
m_subTextObjects
ø$ø$ $
[
ø$ø$$ %
i
ø$ø$% &
]
ø$ø$& '
.
ø$ø$' (
canvasRenderer
ø$ø$( 6
.
ø$ø$6 7
SetMesh
ø$ø$7 >
(
ø$ø$> ?
m_subTextObjects
ø$ø$? O
[
ø$ø$O P
i
ø$ø$P Q
]
ø$ø$Q R
.
ø$ø$R S
mesh
ø$ø$S W
)
ø$ø$W X
;
ø$ø$X Y
}
¿$¿$ 
}
¡$¡$ 
}
¬$¬$ 	
}
ƒ$ƒ$ 
}≈$≈$ ‚¥
aC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_Dropdown.cs
	namespace

 	
TMPro


 
{ 
[ 
AddComponentMenu 
( 
$str 1
,1 2
$num3 5
)5 6
]6 7
[ 
RequireComponent 
( 
typeof 
( 
RectTransform *
)* +
)+ ,
], -
public 

class 
TMP_Dropdown 
: 

Selectable  *
,* + 
IPointerClickHandler, @
,@ A
ISubmitHandlerB P
,P Q
ICancelHandlerR `
{ 
	protected 
internal 
class  
DropdownItem! -
:. /
MonoBehaviour0 =
,= > 
IPointerEnterHandler? S
,S T
ICancelHandlerU c
{ 	
[ 
SerializeField 
] 
private 
TMP_Text 
m_Text #
;# $
[ 
SerializeField 
] 
private 
Image 
m_Image !
;! "
[ 
SerializeField 
] 
private 
RectTransform !
m_RectTransform" 1
;1 2
[   
SerializeField   
]   
private!! 
Toggle!! 
m_Toggle!! #
;!!# $
public## 
TMP_Text## 
text##  
{##! "
get### &
{##' (
return##) /
m_Text##0 6
;##6 7
}##8 9
set##: =
{##> ?
m_Text##@ F
=##G H
value##I N
;##N O
}##P Q
}##R S
public$$ 
Image$$ 
image$$ 
{$$  
get$$! $
{$$% &
return$$' -
m_Image$$. 5
;$$5 6
}$$7 8
set$$9 <
{$$= >
m_Image$$? F
=$$G H
value$$I N
;$$N O
}$$P Q
}$$R S
public%% 
RectTransform%%  
rectTransform%%! .
{%%/ 0
get%%1 4
{%%5 6
return%%7 =
m_RectTransform%%> M
;%%M N
}%%O P
set%%Q T
{%%U V
m_RectTransform%%W f
=%%g h
value%%i n
;%%n o
}%%p q
}%%r s
public&& 
Toggle&& 
toggle&&  
{&&! "
get&&# &
{&&' (
return&&) /
m_Toggle&&0 8
;&&8 9
}&&: ;
set&&< ?
{&&@ A
m_Toggle&&B J
=&&K L
value&&M R
;&&R S
}&&T U
}&&V W
public(( 
virtual(( 
void(( 
OnPointerEnter((  .
(((. /
PointerEventData((/ ?
	eventData((@ I
)((I J
{)) 
EventSystem** 
.** 
current** #
.**# $!
SetSelectedGameObject**$ 9
(**9 :

gameObject**: D
)**D E
;**E F
}++ 
public-- 
virtual-- 
void-- 
OnCancel--  (
(--( )
BaseEventData--) 6
	eventData--7 @
)--@ A
{.. 
TMP_Dropdown// 
dropdown// %
=//& ' 
GetComponentInParent//( <
<//< =
TMP_Dropdown//= I
>//I J
(//J K
)//K L
;//L M
if00 
(00 
dropdown00 
)00 
dropdown11 
.11 
Hide11 !
(11! "
)11" #
;11# $
}22 
}33 	
[55 	
Serializable55	 
]55 
public99 
class99 

OptionData99 
{:: 	
[;; 
SerializeField;; 
];; 
private<< 
string<< 
m_Text<< !
;<<! "
[== 
SerializeField== 
]== 
private>> 
Sprite>> 
m_Image>> "
;>>" #
publicCC 
stringCC 
textCC 
{CC  
getCC! $
{CC% &
returnCC' -
m_TextCC. 4
;CC4 5
}CC6 7
setCC8 ;
{CC< =
m_TextCC> D
=CCE F
valueCCG L
;CCL M
}CCN O
}CCP Q
publicHH 
SpriteHH 
imageHH 
{HH  !
getHH" %
{HH& '
returnHH( .
m_ImageHH/ 6
;HH6 7
}HH8 9
setHH: =
{HH> ?
m_ImageHH@ G
=HHH I
valueHHJ O
;HHO P
}HHQ R
}HHS T
publicJJ 

OptionDataJJ 
(JJ 
)JJ 
{JJ  !
}JJ" #
publicLL 

OptionDataLL 
(LL 
stringLL $
textLL% )
)LL) *
{MM 
thisNN 
.NN 
textNN 
=NN 
textNN  
;NN  !
}OO 
publicQQ 

OptionDataQQ 
(QQ 
SpriteQQ $
imageQQ% *
)QQ* +
{RR 
thisSS 
.SS 
imageSS 
=SS 
imageSS "
;SS" #
}TT 
public[[ 

OptionData[[ 
([[ 
string[[ $
text[[% )
,[[) *
Sprite[[+ 1
image[[2 7
)[[7 8
{\\ 
this]] 
.]] 
text]] 
=]] 
text]]  
;]]  !
this^^ 
.^^ 
image^^ 
=^^ 
image^^ "
;^^" #
}__ 
}`` 	
[bb 	
Serializablebb	 
]bb 
publicii 
classii 
OptionDataListii #
{jj 	
[kk 
SerializeFieldkk 
]kk 
privatell 
Listll 
<ll 

OptionDatall #
>ll# $
	m_Optionsll% .
;ll. /
publicqq 
Listqq 
<qq 

OptionDataqq "
>qq" #
optionsqq$ +
{qq, -
getqq. 1
{qq2 3
returnqq4 :
	m_Optionsqq; D
;qqD E
}qqF G
setqqH K
{qqL M
	m_OptionsqqN W
=qqX Y
valueqqZ _
;qq_ `
}qqa b
}qqc d
publictt 
OptionDataListtt !
(tt! "
)tt" #
{uu 
optionsvv 
=vv 
newvv 
Listvv "
<vv" #

OptionDatavv# -
>vv- .
(vv. /
)vv/ 0
;vv0 1
}ww 
}xx 	
[zz 	
Serializablezz	 
]zz 
public~~ 
class~~ 
DropdownEvent~~ "
:~~# $

UnityEvent~~% /
<~~/ 0
int~~0 3
>~~3 4
{~~5 6
}~~7 8
[
ÅÅ 	
SerializeField
ÅÅ	 
]
ÅÅ 
private
ÇÇ 
RectTransform
ÇÇ 

m_Template
ÇÇ (
;
ÇÇ( )
public
áá 
RectTransform
áá 
template
áá %
{
áá& '
get
áá( +
{
áá, -
return
áá. 4

m_Template
áá5 ?
;
áá? @
}
ááA B
set
ááC F
{
ááG H

m_Template
ááI S
=
ááT U
value
ááV [
;
áá[ \
RefreshShownValue
áá] n
(
áán o
)
ááo p
;
ááp q
}
áár s
}
áát u
[
ää 	
SerializeField
ää	 
]
ää 
private
ãã 
TMP_Text
ãã 
m_CaptionText
ãã &
;
ãã& '
public
êê 
TMP_Text
êê 
captionText
êê #
{
êê$ %
get
êê& )
{
êê* +
return
êê, 2
m_CaptionText
êê3 @
;
êê@ A
}
êêB C
set
êêD G
{
êêH I
m_CaptionText
êêJ W
=
êêX Y
value
êêZ _
;
êê_ `
RefreshShownValue
êêa r
(
êêr s
)
êês t
;
êêt u
}
êêv w
}
êêx y
[
íí 	
SerializeField
íí	 
]
íí 
private
ìì 
Image
ìì 
m_CaptionImage
ìì $
;
ìì$ %
public
òò 
Image
òò 
captionImage
òò !
{
òò" #
get
òò$ '
{
òò( )
return
òò* 0
m_CaptionImage
òò1 ?
;
òò? @
}
òòA B
set
òòC F
{
òòG H
m_CaptionImage
òòI W
=
òòX Y
value
òòZ _
;
òò_ `
RefreshShownValue
òòa r
(
òòr s
)
òòs t
;
òòt u
}
òòv w
}
òòx y
[
öö 	
SerializeField
öö	 
]
öö 
private
õõ 
Graphic
õõ 
m_Placeholder
õõ %
;
õõ% &
public
†† 
Graphic
†† 
placeholder
†† "
{
††# $
get
††% (
{
††) *
return
††+ 1
m_Placeholder
††2 ?
;
††? @
}
††A B
set
††C F
{
††G H
m_Placeholder
††I V
=
††W X
value
††Y ^
;
††^ _
RefreshShownValue
††` q
(
††q r
)
††r s
;
††s t
}
††u v
}
††w x
[
¢¢ 	
Space
¢¢	 
]
¢¢ 
[
§§ 	
SerializeField
§§	 
]
§§ 
private
•• 
TMP_Text
•• 

m_ItemText
•• #
;
••# $
public
™™ 
TMP_Text
™™ 
itemText
™™  
{
™™! "
get
™™# &
{
™™' (
return
™™) /

m_ItemText
™™0 :
;
™™: ;
}
™™< =
set
™™> A
{
™™B C

m_ItemText
™™D N
=
™™O P
value
™™Q V
;
™™V W
RefreshShownValue
™™X i
(
™™i j
)
™™j k
;
™™k l
}
™™m n
}
™™o p
[
¨¨ 	
SerializeField
¨¨	 
]
¨¨ 
private
≠≠ 
Image
≠≠ 
m_ItemImage
≠≠ !
;
≠≠! "
public
≤≤ 
Image
≤≤ 
	itemImage
≤≤ 
{
≤≤  
get
≤≤! $
{
≤≤% &
return
≤≤' -
m_ItemImage
≤≤. 9
;
≤≤9 :
}
≤≤; <
set
≤≤= @
{
≤≤A B
m_ItemImage
≤≤C N
=
≤≤O P
value
≤≤Q V
;
≤≤V W
RefreshShownValue
≤≤X i
(
≤≤i j
)
≤≤j k
;
≤≤k l
}
≤≤m n
}
≤≤o p
[
¥¥ 	
Space
¥¥	 
]
¥¥ 
[
∂∂ 	
SerializeField
∂∂	 
]
∂∂ 
private
∑∑ 
int
∑∑ 
m_Value
∑∑ 
;
∑∑ 
[
ππ 	
Space
ππ	 
]
ππ 
[
ΩΩ 	
SerializeField
ΩΩ	 
]
ΩΩ 
private
ææ 
OptionDataList
ææ 
	m_Options
ææ (
=
ææ) *
new
ææ+ .
OptionDataList
ææ/ =
(
ææ= >
)
ææ> ?
;
ææ? @
public
õõ 
List
õõ 
<
õõ 

OptionData
õõ 
>
õõ 
options
õõ  '
{
úú 	
get
ùù 
{
ùù 
return
ùù 
	m_Options
ùù "
.
ùù" #
options
ùù# *
;
ùù* +
}
ùù, -
set
ûû 
{
ûû 
	m_Options
ûû 
.
ûû 
options
ûû #
=
ûû$ %
value
ûû& +
;
ûû+ ,
RefreshShownValue
ûû- >
(
ûû> ?
)
ûû? @
;
ûû@ A
}
ûûB C
}
üü 	
[
°° 	
Space
°°	 
]
°° 
[
§§ 	
SerializeField
§§	 
]
§§ 
private
•• 
DropdownEvent
•• 
m_OnValueChanged
•• .
=
••/ 0
new
••1 4
DropdownEvent
••5 B
(
••B C
)
••C D
;
••D E
public
–– 
DropdownEvent
–– 
onValueChanged
–– +
{
––, -
get
––. 1
{
––2 3
return
––4 :
m_OnValueChanged
––; K
;
––K L
}
––M N
set
––O R
{
––S T
m_OnValueChanged
––U e
=
––f g
value
––h m
;
––m n
}
––o p
}
––q r
[
““ 	
SerializeField
““	 
]
““ 
private
”” 
float
”” 
m_AlphaFadeSpeed
”” &
=
””' (
$num
””) .
;
””. /
public
ÿÿ 
float
ÿÿ 
alphaFadeSpeed
ÿÿ #
{
ÿÿ$ %
get
ÿÿ& )
{
ÿÿ* +
return
ÿÿ, 2
m_AlphaFadeSpeed
ÿÿ3 C
;
ÿÿC D
}
ÿÿE F
set
ÿÿG J
{
ÿÿK L
m_AlphaFadeSpeed
ÿÿM ]
=
ÿÿ^ _
value
ÿÿ` e
;
ÿÿe f
}
ÿÿg h
}
ÿÿi j
private
⁄⁄ 

GameObject
⁄⁄ 

m_Dropdown
⁄⁄ %
;
⁄⁄% &
private
€€ 

GameObject
€€ 
	m_Blocker
€€ $
;
€€$ %
private
‹‹ 
List
‹‹ 
<
‹‹ 
DropdownItem
‹‹ !
>
‹‹! "
m_Items
‹‹# *
=
‹‹+ ,
new
‹‹- 0
List
‹‹1 5
<
‹‹5 6
DropdownItem
‹‹6 B
>
‹‹B C
(
‹‹C D
)
‹‹D E
;
‹‹E F
private
›› 
TweenRunner
›› 
<
›› 

FloatTween
›› &
>
››& ' 
m_AlphaTweenRunner
››( :
;
››: ;
private
ﬁﬁ 
bool
ﬁﬁ 
validTemplate
ﬁﬁ "
=
ﬁﬁ# $
false
ﬁﬁ% *
;
ﬁﬁ* +
private
ﬂﬂ 
	Coroutine
ﬂﬂ 
m_Coroutine
ﬂﬂ %
=
ﬂﬂ& '
null
ﬂﬂ( ,
;
ﬂﬂ, -
private
·· 
static
·· 

OptionData
·· !
s_NoOptionData
··" 0
=
··1 2
new
··3 6

OptionData
··7 A
(
··A B
)
··B C
;
··C D
public
éé 
int
éé 
value
éé 
{
èè 	
get
êê 
{
ëë 
return
íí 
m_Value
íí 
;
íí 
}
ìì 
set
îî 
{
ïï 
SetValue
ññ 
(
ññ 
value
ññ 
)
ññ 
;
ññ  
}
óó 
}
òò 	
public
ûû 
void
ûû #
SetValueWithoutNotify
ûû )
(
ûû) *
int
ûû* -
input
ûû. 3
)
ûû3 4
{
üü 	
SetValue
†† 
(
†† 
input
†† 
,
†† 
false
†† !
)
††! "
;
††" #
}
°° 	
void
££ 
SetValue
££ 
(
££ 
int
££ 
value
££ 
,
££  
bool
££! %
sendCallback
££& 2
=
££3 4
true
££5 9
)
££9 :
{
§§ 	
if
•• 
(
•• 
Application
•• 
.
•• 
	isPlaying
•• %
&&
••& (
(
••) *
value
••* /
==
••0 2
m_Value
••3 :
||
••; =
options
••> E
.
••E F
Count
••F K
==
••L N
$num
••O P
)
••P Q
)
••Q R
return
¶¶ 
;
¶¶ 
m_Value
®® 
=
®® 
Mathf
®® 
.
®® 
Clamp
®® !
(
®®! "
value
®®" '
,
®®' (
m_Placeholder
®®) 6
?
®®7 8
-
®®9 :
$num
®®: ;
:
®®< =
$num
®®> ?
,
®®? @
options
®®A H
.
®®H I
Count
®®I N
-
®®O P
$num
®®Q R
)
®®R S
;
®®S T
RefreshShownValue
©© 
(
©© 
)
©© 
;
©©  
if
´´ 
(
´´ 
sendCallback
´´ 
)
´´ 
{
¨¨ !
UISystemProfilerApi
ÆÆ #
.
ÆÆ# $
	AddMarker
ÆÆ$ -
(
ÆÆ- .
$str
ÆÆ. >
,
ÆÆ> ?
this
ÆÆ@ D
)
ÆÆD E
;
ÆÆE F
m_OnValueChanged
ØØ  
.
ØØ  !
Invoke
ØØ! '
(
ØØ' (
m_Value
ØØ( /
)
ØØ/ 0
;
ØØ0 1
}
∞∞ 
}
±± 	
public
≥≥ 
bool
≥≥ 

IsExpanded
≥≥ 
{
≥≥  
get
≥≥! $
{
≥≥% &
return
≥≥' -

m_Dropdown
≥≥. 8
!=
≥≥9 ;
null
≥≥< @
;
≥≥@ A
}
≥≥B C
}
≥≥D E
	protected
µµ 
TMP_Dropdown
µµ 
(
µµ 
)
µµ  
{
µµ! "
}
µµ# $
	protected
∑∑ 
override
∑∑ 
void
∑∑ 
Awake
∑∑  %
(
∑∑% &
)
∑∑& '
{
∏∏ 	
if
∫∫ 
(
∫∫ 
!
∫∫ 
Application
∫∫ 
.
∫∫ 
	isPlaying
∫∫ &
)
∫∫& '
return
ªª 
;
ªª 
if
ææ 
(
ææ 
m_CaptionImage
ææ 
)
ææ 
m_CaptionImage
øø 
.
øø 
enabled
øø &
=
øø' (
(
øø) *
m_CaptionImage
øø* 8
.
øø8 9
sprite
øø9 ?
!=
øø@ B
null
øøC G
)
øøG H
;
øøH I
if
¡¡ 
(
¡¡ 

m_Template
¡¡ 
)
¡¡ 

m_Template
¬¬ 
.
¬¬ 

gameObject
¬¬ %
.
¬¬% &
	SetActive
¬¬& /
(
¬¬/ 0
false
¬¬0 5
)
¬¬5 6
;
¬¬6 7
}
√√ 	
	protected
≈≈ 
override
≈≈ 
void
≈≈ 
Start
≈≈  %
(
≈≈% &
)
≈≈& '
{
∆∆ 	 
m_AlphaTweenRunner
«« 
=
««  
new
««! $
TweenRunner
««% 0
<
««0 1

FloatTween
««1 ;
>
««; <
(
««< =
)
««= >
;
««> ? 
m_AlphaTweenRunner
»» 
.
»» 
Init
»» #
(
»»# $
this
»»$ (
)
»»( )
;
»») *
base
…… 
.
…… 
Start
…… 
(
…… 
)
…… 
;
…… 
RefreshShownValue
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ  
}
ÃÃ 	
	protected
œœ 
override
œœ 
void
œœ 

OnValidate
œœ  *
(
œœ* +
)
œœ+ ,
{
–– 	
base
—— 
.
—— 

OnValidate
—— 
(
—— 
)
—— 
;
—— 
if
”” 
(
”” 
!
”” 
IsActive
”” 
(
”” 
)
”” 
)
”” 
return
‘‘ 
;
‘‘ 
RefreshShownValue
÷÷ 
(
÷÷ 
)
÷÷ 
;
÷÷  
}
◊◊ 	
	protected
⁄⁄ 
override
⁄⁄ 
void
⁄⁄ 
	OnDisable
⁄⁄  )
(
⁄⁄) *
)
⁄⁄* +
{
€€ 	*
ImmediateDestroyDropdownList
›› (
(
››( )
)
››) *
;
››* +
if
ﬂﬂ 
(
ﬂﬂ 
	m_Blocker
ﬂﬂ 
!=
ﬂﬂ 
null
ﬂﬂ !
)
ﬂﬂ! "
DestroyBlocker
‡‡ 
(
‡‡ 
	m_Blocker
‡‡ (
)
‡‡( )
;
‡‡) *
	m_Blocker
‚‚ 
=
‚‚ 
null
‚‚ 
;
‚‚ 
base
‰‰ 
.
‰‰ 
	OnDisable
‰‰ 
(
‰‰ 
)
‰‰ 
;
‰‰ 
}
ÂÂ 	
public
ÌÌ 
void
ÌÌ 
RefreshShownValue
ÌÌ %
(
ÌÌ% &
)
ÌÌ& '
{
ÓÓ 	

OptionData
ÔÔ 
data
ÔÔ 
=
ÔÔ 
s_NoOptionData
ÔÔ ,
;
ÔÔ, -
if
ÒÒ 
(
ÒÒ 
options
ÒÒ 
.
ÒÒ 
Count
ÒÒ 
>
ÒÒ 
$num
ÒÒ  !
&&
ÒÒ" $
m_Value
ÒÒ% ,
>=
ÒÒ- /
$num
ÒÒ0 1
)
ÒÒ1 2
data
ÚÚ 
=
ÚÚ 
options
ÚÚ 
[
ÚÚ 
Mathf
ÚÚ $
.
ÚÚ$ %
Clamp
ÚÚ% *
(
ÚÚ* +
m_Value
ÚÚ+ 2
,
ÚÚ2 3
$num
ÚÚ4 5
,
ÚÚ5 6
options
ÚÚ7 >
.
ÚÚ> ?
Count
ÚÚ? D
-
ÚÚE F
$num
ÚÚG H
)
ÚÚH I
]
ÚÚI J
;
ÚÚJ K
if
ÙÙ 
(
ÙÙ 
m_CaptionText
ÙÙ 
)
ÙÙ 
{
ıı 
if
ˆˆ 
(
ˆˆ 
data
ˆˆ 
!=
ˆˆ 
null
ˆˆ  
&&
ˆˆ! #
data
ˆˆ$ (
.
ˆˆ( )
text
ˆˆ) -
!=
ˆˆ. 0
null
ˆˆ1 5
)
ˆˆ5 6
m_CaptionText
˜˜ !
.
˜˜! "
text
˜˜" &
=
˜˜' (
data
˜˜) -
.
˜˜- .
text
˜˜. 2
;
˜˜2 3
else
¯¯ 
m_CaptionText
˘˘ !
.
˘˘! "
text
˘˘" &
=
˘˘' (
$str
˘˘) +
;
˘˘+ ,
}
˙˙ 
if
¸¸ 
(
¸¸ 
m_CaptionImage
¸¸ 
)
¸¸ 
{
˝˝ 
if
˛˛ 
(
˛˛ 
data
˛˛ 
!=
˛˛ 
null
˛˛  
)
˛˛  !
m_CaptionImage
ˇˇ "
.
ˇˇ" #
sprite
ˇˇ# )
=
ˇˇ* +
data
ˇˇ, 0
.
ˇˇ0 1
image
ˇˇ1 6
;
ˇˇ6 7
else
ÄÄ 
m_CaptionImage
ÅÅ "
.
ÅÅ" #
sprite
ÅÅ# )
=
ÅÅ* +
null
ÅÅ, 0
;
ÅÅ0 1
m_CaptionImage
ÇÇ 
.
ÇÇ 
enabled
ÇÇ &
=
ÇÇ' (
(
ÇÇ) *
m_CaptionImage
ÇÇ* 8
.
ÇÇ8 9
sprite
ÇÇ9 ?
!=
ÇÇ@ B
null
ÇÇC G
)
ÇÇG H
;
ÇÇH I
}
ÉÉ 
if
ÖÖ 
(
ÖÖ 
m_Placeholder
ÖÖ 
)
ÖÖ 
{
ÜÜ 
m_Placeholder
áá 
.
áá 
enabled
áá %
=
áá& '
options
áá( /
.
áá/ 0
Count
áá0 5
==
áá6 8
$num
áá9 :
||
áá; =
m_Value
áá> E
==
ááF H
-
ááI J
$num
ááJ K
;
ááK L
}
àà 
}
ââ 	
public
íí 
void
íí 

AddOptions
íí 
(
íí 
List
íí #
<
íí# $

OptionData
íí$ .
>
íí. /
options
íí0 7
)
íí7 8
{
ìì 	
this
îî 
.
îî 
options
îî 
.
îî 
AddRange
îî !
(
îî! "
options
îî" )
)
îî) *
;
îî* +
RefreshShownValue
ïï 
(
ïï 
)
ïï 
;
ïï  
}
ññ 	
public
ªª 
void
ªª 

AddOptions
ªª 
(
ªª 
List
ªª #
<
ªª# $
string
ªª$ *
>
ªª* +
options
ªª, 3
)
ªª3 4
{
ºº 	
for
ΩΩ 
(
ΩΩ 
int
ΩΩ 
i
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
i
ΩΩ 
<
ΩΩ 
options
ΩΩ  '
.
ΩΩ' (
Count
ΩΩ( -
;
ΩΩ- .
i
ΩΩ/ 0
++
ΩΩ0 2
)
ΩΩ2 3
this
ææ 
.
ææ 
options
ææ 
.
ææ 
Add
ææ  
(
ææ  !
new
ææ! $

OptionData
ææ% /
(
ææ/ 0
options
ææ0 7
[
ææ7 8
i
ææ8 9
]
ææ9 :
)
ææ: ;
)
ææ; <
;
ææ< =
RefreshShownValue
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿  
}
¡¡ 	
public
   
void
   

AddOptions
   
(
   
List
   #
<
  # $
Sprite
  $ *
>
  * +
options
  , 3
)
  3 4
{
ÀÀ 	
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ 
<
ÃÃ 
options
ÃÃ  '
.
ÃÃ' (
Count
ÃÃ( -
;
ÃÃ- .
i
ÃÃ/ 0
++
ÃÃ0 2
)
ÃÃ2 3
this
ÕÕ 
.
ÕÕ 
options
ÕÕ 
.
ÕÕ 
Add
ÕÕ  
(
ÕÕ  !
new
ÕÕ! $

OptionData
ÕÕ% /
(
ÕÕ/ 0
options
ÕÕ0 7
[
ÕÕ7 8
i
ÕÕ8 9
]
ÕÕ9 :
)
ÕÕ: ;
)
ÕÕ; <
;
ÕÕ< =
RefreshShownValue
œœ 
(
œœ 
)
œœ 
;
œœ  
}
–– 	
public
’’ 
void
’’ 
ClearOptions
’’  
(
’’  !
)
’’! "
{
÷÷ 	
options
◊◊ 
.
◊◊ 
Clear
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊ 
m_Value
ÿÿ 
=
ÿÿ 
m_Placeholder
ÿÿ #
?
ÿÿ$ %
-
ÿÿ& '
$num
ÿÿ' (
:
ÿÿ) *
$num
ÿÿ+ ,
;
ÿÿ, -
RefreshShownValue
ŸŸ 
(
ŸŸ 
)
ŸŸ 
;
ŸŸ  
}
⁄⁄ 	
private
‹‹ 
void
‹‹ 
SetupTemplate
‹‹ "
(
‹‹" #
)
‹‹# $
{
›› 	
validTemplate
ﬁﬁ 
=
ﬁﬁ 
false
ﬁﬁ !
;
ﬁﬁ! "
if
‡‡ 
(
‡‡ 
!
‡‡ 

m_Template
‡‡ 
)
‡‡ 
{
·· 
Debug
‚‚ 
.
‚‚ 
LogError
‚‚ 
(
‚‚ 
$str‚‚ ∑
,‚‚∑ ∏
this‚‚π Ω
)‚‚Ω æ
;‚‚æ ø
return
„„ 
;
„„ 
}
‰‰ 

GameObject
ÊÊ 

templateGo
ÊÊ !
=
ÊÊ" #

m_Template
ÊÊ$ .
.
ÊÊ. /

gameObject
ÊÊ/ 9
;
ÊÊ9 :

templateGo
ÁÁ 
.
ÁÁ 
	SetActive
ÁÁ  
(
ÁÁ  !
true
ÁÁ! %
)
ÁÁ% &
;
ÁÁ& '
Toggle
ËË 

itemToggle
ËË 
=
ËË 

m_Template
ËË  *
.
ËË* +$
GetComponentInChildren
ËË+ A
<
ËËA B
Toggle
ËËB H
>
ËËH I
(
ËËI J
)
ËËJ K
;
ËËK L
validTemplate
ÍÍ 
=
ÍÍ 
true
ÍÍ  
;
ÍÍ  !
if
ÎÎ 
(
ÎÎ 
!
ÎÎ 

itemToggle
ÎÎ 
||
ÎÎ 

itemToggle
ÎÎ )
.
ÎÎ) *
	transform
ÎÎ* 3
==
ÎÎ4 6
template
ÎÎ7 ?
)
ÎÎ? @
{
ÏÏ 
validTemplate
ÌÌ 
=
ÌÌ 
false
ÌÌ  %
;
ÌÌ% &
Debug
ÓÓ 
.
ÓÓ 
LogError
ÓÓ 
(
ÓÓ 
$strÓÓ õ
,ÓÓõ ú
templateÓÓù •
)ÓÓ• ¶
;ÓÓ¶ ß
}
ÔÔ 
else
 
if
 
(
 
!
 
(
 

itemToggle
 !
.
! "
	transform
" +
.
+ ,
parent
, 2
is
3 5
RectTransform
6 C
)
C D
)
D E
{
ÒÒ 
validTemplate
ÚÚ 
=
ÚÚ 
false
ÚÚ  %
;
ÚÚ% &
Debug
ÛÛ 
.
ÛÛ 
LogError
ÛÛ 
(
ÛÛ 
$strÛÛ •
,ÛÛ• ¶
templateÛÛß Ø
)ÛÛØ ∞
;ÛÛ∞ ±
}
ÙÙ 
else
ıı 
if
ıı 
(
ıı 
itemText
ıı 
!=
ıı  
null
ıı! %
&&
ıı& (
!
ıı) *
itemText
ıı* 2
.
ıı2 3
	transform
ıı3 <
.
ıı< =
	IsChildOf
ıı= F
(
ııF G

itemToggle
ııG Q
.
ııQ R
	transform
ııR [
)
ıı[ \
)
ıı\ ]
{
ˆˆ 
validTemplate
˜˜ 
=
˜˜ 
false
˜˜  %
;
˜˜% &
Debug
¯¯ 
.
¯¯ 
LogError
¯¯ 
(
¯¯ 
$str¯¯ Ñ
,¯¯Ñ Ö
template¯¯Ü é
)¯¯é è
;¯¯è ê
}
˘˘ 
else
˙˙ 
if
˙˙ 
(
˙˙ 
	itemImage
˙˙ 
!=
˙˙ !
null
˙˙" &
&&
˙˙' )
!
˙˙* +
	itemImage
˙˙+ 4
.
˙˙4 5
	transform
˙˙5 >
.
˙˙> ?
	IsChildOf
˙˙? H
(
˙˙H I

itemToggle
˙˙I S
.
˙˙S T
	transform
˙˙T ]
)
˙˙] ^
)
˙˙^ _
{
˚˚ 
validTemplate
¸¸ 
=
¸¸ 
false
¸¸  %
;
¸¸% &
Debug
˝˝ 
.
˝˝ 
LogError
˝˝ 
(
˝˝ 
$str˝˝ Ö
,˝˝Ö Ü
template˝˝á è
)˝˝è ê
;˝˝ê ë
}
˛˛ 
if
ÄÄ 
(
ÄÄ 
!
ÄÄ 
validTemplate
ÄÄ 
)
ÄÄ 
{
ÅÅ 

templateGo
ÇÇ 
.
ÇÇ 
	SetActive
ÇÇ $
(
ÇÇ$ %
false
ÇÇ% *
)
ÇÇ* +
;
ÇÇ+ ,
return
ÉÉ 
;
ÉÉ 
}
ÑÑ 
DropdownItem
ÜÜ 
item
ÜÜ 
=
ÜÜ 

itemToggle
ÜÜ  *
.
ÜÜ* +

gameObject
ÜÜ+ 5
.
ÜÜ5 6
AddComponent
ÜÜ6 B
<
ÜÜB C
DropdownItem
ÜÜC O
>
ÜÜO P
(
ÜÜP Q
)
ÜÜQ R
;
ÜÜR S
item
áá 
.
áá 
text
áá 
=
áá 

m_ItemText
áá "
;
áá" #
item
àà 
.
àà 
image
àà 
=
àà 
m_ItemImage
àà $
;
àà$ %
item
ââ 
.
ââ 
toggle
ââ 
=
ââ 

itemToggle
ââ $
;
ââ$ %
item
ää 
.
ää 
rectTransform
ää 
=
ää  
(
ää! "
RectTransform
ää" /
)
ää/ 0

itemToggle
ää0 :
.
ää: ;
	transform
ää; D
;
ääD E
Canvas
çç 
parentCanvas
çç 
=
çç  !
null
çç" &
;
çç& '
	Transform
éé 
parentTransform
éé %
=
éé& '

m_Template
éé( 2
.
éé2 3
parent
éé3 9
;
éé9 :
while
èè 
(
èè 
parentTransform
èè "
!=
èè# %
null
èè& *
)
èè* +
{
êê 
parentCanvas
ëë 
=
ëë 
parentTransform
ëë .
.
ëë. /
GetComponent
ëë/ ;
<
ëë; <
Canvas
ëë< B
>
ëëB C
(
ëëC D
)
ëëD E
;
ëëE F
if
íí 
(
íí 
parentCanvas
íí  
!=
íí! #
null
íí$ (
)
íí( )
break
ìì 
;
ìì 
parentTransform
ïï 
=
ïï  !
parentTransform
ïï" 1
.
ïï1 2
parent
ïï2 8
;
ïï8 9
}
ññ 
Canvas
òò 
popupCanvas
òò 
=
òò  
GetOrAddComponent
òò! 2
<
òò2 3
Canvas
òò3 9
>
òò9 :
(
òò: ;

templateGo
òò; E
)
òòE F
;
òòF G
popupCanvas
ôô 
.
ôô 
overrideSorting
ôô '
=
ôô( )
true
ôô* .
;
ôô. /
popupCanvas
öö 
.
öö 
sortingOrder
öö $
=
öö% &
$num
öö' ,
;
öö, -
if
ùù 
(
ùù 
parentCanvas
ùù 
!=
ùù 
null
ùù  $
)
ùù$ %
{
ûû 
	Component
üü 
[
üü 
]
üü 

components
üü &
=
üü' (
parentCanvas
üü) 5
.
üü5 6
GetComponents
üü6 C
<
üüC D
BaseRaycaster
üüD Q
>
üüQ R
(
üüR S
)
üüS T
;
üüT U
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
††  !
<
††" #

components
††$ .
.
††. /
Length
††/ 5
;
††5 6
i
††7 8
++
††8 :
)
††: ;
{
°° 
Type
¢¢ 
raycasterType
¢¢ &
=
¢¢' (

components
¢¢) 3
[
¢¢3 4
i
¢¢4 5
]
¢¢5 6
.
¢¢6 7
GetType
¢¢7 >
(
¢¢> ?
)
¢¢? @
;
¢¢@ A
if
££ 
(
££ 

templateGo
££ "
.
££" #
GetComponent
££# /
(
££/ 0
raycasterType
££0 =
)
££= >
==
££? A
null
££B F
)
££F G
{
§§ 

templateGo
•• "
.
••" #
AddComponent
••# /
(
••/ 0
raycasterType
••0 =
)
••= >
;
••> ?
}
¶¶ 
}
ßß 
}
®® 
else
©© 
{
™™ 
GetOrAddComponent
´´ !
<
´´! "
GraphicRaycaster
´´" 2
>
´´2 3
(
´´3 4

templateGo
´´4 >
)
´´> ?
;
´´? @
}
¨¨ 
GetOrAddComponent
ÆÆ 
<
ÆÆ 
CanvasGroup
ÆÆ )
>
ÆÆ) *
(
ÆÆ* +

templateGo
ÆÆ+ 5
)
ÆÆ5 6
;
ÆÆ6 7

templateGo
ØØ 
.
ØØ 
	SetActive
ØØ  
(
ØØ  !
false
ØØ! &
)
ØØ& '
;
ØØ' (
validTemplate
±± 
=
±± 
true
±±  
;
±±  !
}
≤≤ 	
private
¥¥ 
static
¥¥ 
T
¥¥ 
GetOrAddComponent
¥¥ *
<
¥¥* +
T
¥¥+ ,
>
¥¥, -
(
¥¥- .

GameObject
¥¥. 8
go
¥¥9 ;
)
¥¥; <
where
¥¥= B
T
¥¥C D
:
¥¥E F
	Component
¥¥G P
{
µµ 	
T
∂∂ 
comp
∂∂ 
=
∂∂ 
go
∂∂ 
.
∂∂ 
GetComponent
∂∂ $
<
∂∂$ %
T
∂∂% &
>
∂∂& '
(
∂∂' (
)
∂∂( )
;
∂∂) *
if
∑∑ 
(
∑∑ 
!
∑∑ 
comp
∑∑ 
)
∑∑ 
comp
∏∏ 
=
∏∏ 
go
∏∏ 
.
∏∏ 
AddComponent
∏∏ &
<
∏∏& '
T
∏∏' (
>
∏∏( )
(
∏∏) *
)
∏∏* +
;
∏∏+ ,
return
ππ 
comp
ππ 
;
ππ 
}
∫∫ 	
public
¿¿ 
virtual
¿¿ 
void
¿¿ 
OnPointerClick
¿¿ *
(
¿¿* +
PointerEventData
¿¿+ ;
	eventData
¿¿< E
)
¿¿E F
{
¡¡ 	
Show
¬¬ 
(
¬¬ 
)
¬¬ 
;
¬¬ 
}
√√ 	
public
…… 
virtual
…… 
void
…… 
OnSubmit
…… $
(
……$ %
BaseEventData
……% 2
	eventData
……3 <
)
……< =
{
   	
Show
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
public
’’ 
virtual
’’ 
void
’’ 
OnCancel
’’ $
(
’’$ %
BaseEventData
’’% 2
	eventData
’’3 <
)
’’< =
{
÷÷ 	
Hide
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊ 
}
ÿÿ 	
public
‰‰ 
void
‰‰ 
Show
‰‰ 
(
‰‰ 
)
‰‰ 
{
ÂÂ 	
if
ÊÊ 
(
ÊÊ 
m_Coroutine
ÊÊ 
!=
ÊÊ 
null
ÊÊ #
)
ÊÊ# $
{
ÁÁ 
StopCoroutine
ËË 
(
ËË 
m_Coroutine
ËË )
)
ËË) *
;
ËË* +*
ImmediateDestroyDropdownList
ÈÈ ,
(
ÈÈ, -
)
ÈÈ- .
;
ÈÈ. /
}
ÍÍ 
if
ÏÏ 
(
ÏÏ 
!
ÏÏ 
IsActive
ÏÏ 
(
ÏÏ 
)
ÏÏ 
||
ÏÏ 
!
ÏÏ  
IsInteractable
ÏÏ  .
(
ÏÏ. /
)
ÏÏ/ 0
||
ÏÏ1 3

m_Dropdown
ÏÏ4 >
!=
ÏÏ? A
null
ÏÏB F
)
ÏÏF G
return
ÌÌ 
;
ÌÌ 
var
 
list
 
=
 
TMP_ListPool
 #
<
# $
Canvas
$ *
>
* +
.
+ ,
Get
, /
(
/ 0
)
0 1
;
1 2

gameObject
ÒÒ 
.
ÒÒ #
GetComponentsInParent
ÒÒ ,
(
ÒÒ, -
false
ÒÒ- 2
,
ÒÒ2 3
list
ÒÒ4 8
)
ÒÒ8 9
;
ÒÒ9 :
if
ÚÚ 
(
ÚÚ 
list
ÚÚ 
.
ÚÚ 
Count
ÚÚ 
==
ÚÚ 
$num
ÚÚ 
)
ÚÚ  
return
ÛÛ 
;
ÛÛ 
Canvas
ıı 

rootCanvas
ıı 
=
ıı 
list
ıı  $
[
ıı$ %
list
ıı% )
.
ıı) *
Count
ıı* /
-
ıı0 1
$num
ıı2 3
]
ıı3 4
;
ıı4 5
for
ˆˆ 
(
ˆˆ 
int
ˆˆ 
i
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ 
i
ˆˆ 
<
ˆˆ 
list
ˆˆ  $
.
ˆˆ$ %
Count
ˆˆ% *
;
ˆˆ* +
i
ˆˆ, -
++
ˆˆ- /
)
ˆˆ/ 0
{
˜˜ 
if
¯¯ 
(
¯¯ 
list
¯¯ 
[
¯¯ 
i
¯¯ 
]
¯¯ 
.
¯¯ 
isRootCanvas
¯¯ (
)
¯¯( )
{
˘˘ 

rootCanvas
˙˙ 
=
˙˙  
list
˙˙! %
[
˙˙% &
i
˙˙& '
]
˙˙' (
;
˙˙( )
break
˚˚ 
;
˚˚ 
}
¸¸ 
}
˝˝ 
TMP_ListPool
ˇˇ 
<
ˇˇ 
Canvas
ˇˇ 
>
ˇˇ  
.
ˇˇ  !
Release
ˇˇ! (
(
ˇˇ( )
list
ˇˇ) -
)
ˇˇ- .
;
ˇˇ. /
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
validTemplate
ÅÅ 
)
ÅÅ 
{
ÇÇ 
SetupTemplate
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ  
if
ÑÑ 
(
ÑÑ 
!
ÑÑ 
validTemplate
ÑÑ "
)
ÑÑ" #
return
ÖÖ 
;
ÖÖ 
}
ÜÜ 

m_Template
àà 
.
àà 

gameObject
àà !
.
àà! "
	SetActive
àà" +
(
àà+ ,
true
àà, 0
)
àà0 1
;
àà1 2

m_Template
ãã 
.
ãã 
GetComponent
ãã #
<
ãã# $
Canvas
ãã$ *
>
ãã* +
(
ãã+ ,
)
ãã, -
.
ãã- .
sortingLayerID
ãã. <
=
ãã= >

rootCanvas
ãã? I
.
ããI J
sortingLayerID
ããJ X
;
ããX Y

m_Dropdown
éé 
=
éé  
CreateDropdownList
éé +
(
éé+ ,

m_Template
éé, 6
.
éé6 7

gameObject
éé7 A
)
ééA B
;
ééB C

m_Dropdown
èè 
.
èè 
name
èè 
=
èè 
$str
èè -
;
èè- .

m_Dropdown
êê 
.
êê 
	SetActive
êê  
(
êê  !
true
êê! %
)
êê% &
;
êê& '
RectTransform
ìì #
dropdownRectTransform
ìì /
=
ìì0 1

m_Dropdown
ìì2 <
.
ìì< =
	transform
ìì= F
as
ììG I
RectTransform
ììJ W
;
ììW X#
dropdownRectTransform
îî !
.
îî! "
	SetParent
îî" +
(
îî+ ,

m_Template
îî, 6
.
îî6 7
	transform
îî7 @
.
îî@ A
parent
îîA G
,
îîG H
false
îîI N
)
îîN O
;
îîO P
DropdownItem
ôô 
itemTemplate
ôô %
=
ôô& '

m_Dropdown
ôô( 2
.
ôô2 3$
GetComponentInChildren
ôô3 I
<
ôôI J
DropdownItem
ôôJ V
>
ôôV W
(
ôôW X
)
ôôX Y
;
ôôY Z

GameObject
õõ 
content
õõ 
=
õõ  
itemTemplate
õõ! -
.
õõ- .
rectTransform
õõ. ;
.
õõ; <
parent
õõ< B
.
õõB C

gameObject
õõC M
;
õõM N
RectTransform
úú "
contentRectTransform
úú .
=
úú/ 0
content
úú1 8
.
úú8 9
	transform
úú9 B
as
úúC E
RectTransform
úúF S
;
úúS T
itemTemplate
ùù 
.
ùù 
rectTransform
ùù &
.
ùù& '

gameObject
ùù' 1
.
ùù1 2
	SetActive
ùù2 ;
(
ùù; <
true
ùù< @
)
ùù@ A
;
ùùA B
Rect
†† !
dropdownContentRect
†† $
=
††% &"
contentRectTransform
††' ;
.
††; <
rect
††< @
;
††@ A
Rect
°° 
itemTemplateRect
°° !
=
°°" #
itemTemplate
°°$ 0
.
°°0 1
rectTransform
°°1 >
.
°°> ?
rect
°°? C
;
°°C D
Vector2
§§ 
	offsetMin
§§ 
=
§§ 
itemTemplateRect
§§  0
.
§§0 1
min
§§1 4
-
§§5 6!
dropdownContentRect
§§7 J
.
§§J K
min
§§K N
+
§§O P
(
§§Q R
Vector2
§§R Y
)
§§Y Z
itemTemplate
§§Z f
.
§§f g
rectTransform
§§g t
.
§§t u
localPosition§§u Ç
;§§Ç É
Vector2
•• 
	offsetMax
•• 
=
•• 
itemTemplateRect
••  0
.
••0 1
max
••1 4
-
••5 6!
dropdownContentRect
••7 J
.
••J K
max
••K N
+
••O P
(
••Q R
Vector2
••R Y
)
••Y Z
itemTemplate
••Z f
.
••f g
rectTransform
••g t
.
••t u
localPosition••u Ç
;••Ç É
Vector2
¶¶ 
itemSize
¶¶ 
=
¶¶ 
itemTemplateRect
¶¶ /
.
¶¶/ 0
size
¶¶0 4
;
¶¶4 5
m_Items
®® 
.
®® 
Clear
®® 
(
®® 
)
®® 
;
®® 
Toggle
™™ 
prev
™™ 
=
™™ 
null
™™ 
;
™™ 
for
´´ 
(
´´ 
int
´´ 
i
´´ 
=
´´ 
$num
´´ 
;
´´ 
i
´´ 
<
´´ 
options
´´  '
.
´´' (
Count
´´( -
;
´´- .
++
´´/ 1
i
´´1 2
)
´´2 3
{
¨¨ 

OptionData
≠≠ 
data
≠≠ 
=
≠≠  !
options
≠≠" )
[
≠≠) *
i
≠≠* +
]
≠≠+ ,
;
≠≠, -
DropdownItem
ÆÆ 
item
ÆÆ !
=
ÆÆ" #
AddItem
ÆÆ$ +
(
ÆÆ+ ,
data
ÆÆ, 0
,
ÆÆ0 1
value
ÆÆ2 7
==
ÆÆ8 :
i
ÆÆ; <
,
ÆÆ< =
itemTemplate
ÆÆ> J
,
ÆÆJ K
m_Items
ÆÆL S
)
ÆÆS T
;
ÆÆT U
if
ØØ 
(
ØØ 
item
ØØ 
==
ØØ 
null
ØØ  
)
ØØ  !
continue
∞∞ 
;
∞∞ 
item
≥≥ 
.
≥≥ 
toggle
≥≥ 
.
≥≥ 
isOn
≥≥  
=
≥≥! "
value
≥≥# (
==
≥≥) +
i
≥≥, -
;
≥≥- .
item
¥¥ 
.
¥¥ 
toggle
¥¥ 
.
¥¥ 
onValueChanged
¥¥ *
.
¥¥* +
AddListener
¥¥+ 6
(
¥¥6 7
x
¥¥7 8
=>
¥¥9 ;
OnSelectItem
¥¥< H
(
¥¥H I
item
¥¥I M
.
¥¥M N
toggle
¥¥N T
)
¥¥T U
)
¥¥U V
;
¥¥V W
if
∑∑ 
(
∑∑ 
item
∑∑ 
.
∑∑ 
toggle
∑∑ 
.
∑∑  
isOn
∑∑  $
)
∑∑$ %
item
∏∏ 
.
∏∏ 
toggle
∏∏ 
.
∏∏  
Select
∏∏  &
(
∏∏& '
)
∏∏' (
;
∏∏( )
if
ªª 
(
ªª 
prev
ªª 
!=
ªª 
null
ªª  
)
ªª  !
{
ºº 

Navigation
ΩΩ 
prevNav
ΩΩ &
=
ΩΩ' (
prev
ΩΩ) -
.
ΩΩ- .

navigation
ΩΩ. 8
;
ΩΩ8 9

Navigation
ææ 
	toggleNav
ææ (
=
ææ) *
item
ææ+ /
.
ææ/ 0
toggle
ææ0 6
.
ææ6 7

navigation
ææ7 A
;
ææA B
prevNav
øø 
.
øø 
mode
øø  
=
øø! "

Navigation
øø# -
.
øø- .
Mode
øø. 2
.
øø2 3
Explicit
øø3 ;
;
øø; <
	toggleNav
¿¿ 
.
¿¿ 
mode
¿¿ "
=
¿¿# $

Navigation
¿¿% /
.
¿¿/ 0
Mode
¿¿0 4
.
¿¿4 5
Explicit
¿¿5 =
;
¿¿= >
prevNav
¬¬ 
.
¬¬ 
selectOnDown
¬¬ (
=
¬¬) *
item
¬¬+ /
.
¬¬/ 0
toggle
¬¬0 6
;
¬¬6 7
prevNav
√√ 
.
√√ 
selectOnRight
√√ )
=
√√* +
item
√√, 0
.
√√0 1
toggle
√√1 7
;
√√7 8
	toggleNav
ƒƒ 
.
ƒƒ 
selectOnLeft
ƒƒ *
=
ƒƒ+ ,
prev
ƒƒ- 1
;
ƒƒ1 2
	toggleNav
≈≈ 
.
≈≈ 

selectOnUp
≈≈ (
=
≈≈) *
prev
≈≈+ /
;
≈≈/ 0
prev
«« 
.
«« 

navigation
«« #
=
««$ %
prevNav
««& -
;
««- .
item
»» 
.
»» 
toggle
»» 
.
»»  

navigation
»»  *
=
»»+ ,
	toggleNav
»»- 6
;
»»6 7
}
…… 
prev
   
=
   
item
   
.
   
toggle
   "
;
  " #
}
ÀÀ 
Vector2
ŒŒ 
	sizeDelta
ŒŒ 
=
ŒŒ "
contentRectTransform
ŒŒ  4
.
ŒŒ4 5
	sizeDelta
ŒŒ5 >
;
ŒŒ> ?
	sizeDelta
œœ 
.
œœ 
y
œœ 
=
œœ 
itemSize
œœ "
.
œœ" #
y
œœ# $
*
œœ% &
m_Items
œœ' .
.
œœ. /
Count
œœ/ 4
+
œœ5 6
	offsetMin
œœ7 @
.
œœ@ A
y
œœA B
-
œœC D
	offsetMax
œœE N
.
œœN O
y
œœO P
;
œœP Q"
contentRectTransform
––  
.
––  !
	sizeDelta
––! *
=
––+ ,
	sizeDelta
––- 6
;
––6 7
float
““ 

extraSpace
““ 
=
““ #
dropdownRectTransform
““ 4
.
““4 5
rect
““5 9
.
““9 :
height
““: @
-
““A B"
contentRectTransform
““C W
.
““W X
rect
““X \
.
““\ ]
height
““] c
;
““c d
if
”” 
(
”” 

extraSpace
”” 
>
”” 
$num
”” 
)
”” #
dropdownRectTransform
‘‘ %
.
‘‘% &
	sizeDelta
‘‘& /
=
‘‘0 1
new
‘‘2 5
Vector2
‘‘6 =
(
‘‘= >#
dropdownRectTransform
‘‘> S
.
‘‘S T
	sizeDelta
‘‘T ]
.
‘‘] ^
x
‘‘^ _
,
‘‘_ `#
dropdownRectTransform
‘‘a v
.
‘‘v w
	sizeDelta‘‘w Ä
.‘‘Ä Å
y‘‘Å Ç
-‘‘É Ñ

extraSpace‘‘Ö è
)‘‘è ê
;‘‘ê ë
Vector3
ŸŸ 
[
ŸŸ 
]
ŸŸ 
corners
ŸŸ 
=
ŸŸ 
new
ŸŸ  #
Vector3
ŸŸ$ +
[
ŸŸ+ ,
$num
ŸŸ, -
]
ŸŸ- .
;
ŸŸ. /#
dropdownRectTransform
⁄⁄ !
.
⁄⁄! "
GetWorldCorners
⁄⁄" 1
(
⁄⁄1 2
corners
⁄⁄2 9
)
⁄⁄9 :
;
⁄⁄: ;
RectTransform
‹‹ %
rootCanvasRectTransform
‹‹ 1
=
‹‹2 3

rootCanvas
‹‹4 >
.
‹‹> ?
	transform
‹‹? H
as
‹‹I K
RectTransform
‹‹L Y
;
‹‹Y Z
Rect
›› 
rootCanvasRect
›› 
=
››  !%
rootCanvasRectTransform
››" 9
.
››9 :
rect
››: >
;
››> ?
for
ﬁﬁ 
(
ﬁﬁ 
int
ﬁﬁ 
axis
ﬁﬁ 
=
ﬁﬁ 
$num
ﬁﬁ 
;
ﬁﬁ 
axis
ﬁﬁ #
<
ﬁﬁ$ %
$num
ﬁﬁ& '
;
ﬁﬁ' (
axis
ﬁﬁ) -
++
ﬁﬁ- /
)
ﬁﬁ/ 0
{
ﬂﬂ 
bool
‡‡ 
outside
‡‡ 
=
‡‡ 
false
‡‡ $
;
‡‡$ %
for
·· 
(
·· 
int
·· 
i
·· 
=
·· 
$num
·· 
;
·· 
i
··  !
<
··" #
$num
··$ %
;
··% &
i
··' (
++
··( *
)
··* +
{
‚‚ 
Vector3
„„ 
corner
„„ "
=
„„# $%
rootCanvasRectTransform
„„% <
.
„„< =#
InverseTransformPoint
„„= R
(
„„R S
corners
„„S Z
[
„„Z [
i
„„[ \
]
„„\ ]
)
„„] ^
;
„„^ _
if
‰‰ 
(
‰‰ 
(
‰‰ 
corner
‰‰ 
[
‰‰  
axis
‰‰  $
]
‰‰$ %
<
‰‰& '
rootCanvasRect
‰‰( 6
.
‰‰6 7
min
‰‰7 :
[
‰‰: ;
axis
‰‰; ?
]
‰‰? @
&&
‰‰A C
!
‰‰D E
Mathf
‰‰E J
.
‰‰J K
Approximately
‰‰K X
(
‰‰X Y
corner
‰‰Y _
[
‰‰_ `
axis
‰‰` d
]
‰‰d e
,
‰‰e f
rootCanvasRect
‰‰g u
.
‰‰u v
min
‰‰v y
[
‰‰y z
axis
‰‰z ~
]
‰‰~ 
)‰‰ Ä
)‰‰Ä Å
||‰‰Ç Ñ
(
ÂÂ 
corner
ÂÂ 
[
ÂÂ  
axis
ÂÂ  $
]
ÂÂ$ %
>
ÂÂ& '
rootCanvasRect
ÂÂ( 6
.
ÂÂ6 7
max
ÂÂ7 :
[
ÂÂ: ;
axis
ÂÂ; ?
]
ÂÂ? @
&&
ÂÂA C
!
ÂÂD E
Mathf
ÂÂE J
.
ÂÂJ K
Approximately
ÂÂK X
(
ÂÂX Y
corner
ÂÂY _
[
ÂÂ_ `
axis
ÂÂ` d
]
ÂÂd e
,
ÂÂe f
rootCanvasRect
ÂÂg u
.
ÂÂu v
max
ÂÂv y
[
ÂÂy z
axis
ÂÂz ~
]
ÂÂ~ 
)ÂÂ Ä
)ÂÂÄ Å
)ÂÂÅ Ç
{
ÊÊ 
outside
ÁÁ 
=
ÁÁ  !
true
ÁÁ" &
;
ÁÁ& '
break
ËË 
;
ËË 
}
ÈÈ 
}
ÍÍ 
if
ÎÎ 
(
ÎÎ 
outside
ÎÎ 
)
ÎÎ "
RectTransformUtility
ÏÏ (
.
ÏÏ( )
FlipLayoutOnAxis
ÏÏ) 9
(
ÏÏ9 :#
dropdownRectTransform
ÏÏ: O
,
ÏÏO P
axis
ÏÏQ U
,
ÏÏU V
false
ÏÏW \
,
ÏÏ\ ]
false
ÏÏ^ c
)
ÏÏc d
;
ÏÏd e
}
ÌÌ 
for
ÔÔ 
(
ÔÔ 
int
ÔÔ 
i
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ 
i
ÔÔ 
<
ÔÔ 
m_Items
ÔÔ  '
.
ÔÔ' (
Count
ÔÔ( -
;
ÔÔ- .
i
ÔÔ/ 0
++
ÔÔ0 2
)
ÔÔ2 3
{
 
RectTransform
ÒÒ 
itemRect
ÒÒ &
=
ÒÒ' (
m_Items
ÒÒ) 0
[
ÒÒ0 1
i
ÒÒ1 2
]
ÒÒ2 3
.
ÒÒ3 4
rectTransform
ÒÒ4 A
;
ÒÒA B
itemRect
ÚÚ 
.
ÚÚ 
	anchorMin
ÚÚ "
=
ÚÚ# $
new
ÚÚ% (
Vector2
ÚÚ) 0
(
ÚÚ0 1
itemRect
ÚÚ1 9
.
ÚÚ9 :
	anchorMin
ÚÚ: C
.
ÚÚC D
x
ÚÚD E
,
ÚÚE F
$num
ÚÚG H
)
ÚÚH I
;
ÚÚI J
itemRect
ÛÛ 
.
ÛÛ 
	anchorMax
ÛÛ "
=
ÛÛ# $
new
ÛÛ% (
Vector2
ÛÛ) 0
(
ÛÛ0 1
itemRect
ÛÛ1 9
.
ÛÛ9 :
	anchorMax
ÛÛ: C
.
ÛÛC D
x
ÛÛD E
,
ÛÛE F
$num
ÛÛG H
)
ÛÛH I
;
ÛÛI J
itemRect
ÙÙ 
.
ÙÙ 
anchoredPosition
ÙÙ )
=
ÙÙ* +
new
ÙÙ, /
Vector2
ÙÙ0 7
(
ÙÙ7 8
itemRect
ÙÙ8 @
.
ÙÙ@ A
anchoredPosition
ÙÙA Q
.
ÙÙQ R
x
ÙÙR S
,
ÙÙS T
	offsetMin
ÙÙU ^
.
ÙÙ^ _
y
ÙÙ_ `
+
ÙÙa b
itemSize
ÙÙc k
.
ÙÙk l
y
ÙÙl m
*
ÙÙn o
(
ÙÙp q
m_Items
ÙÙq x
.
ÙÙx y
Count
ÙÙy ~
-ÙÙ Ä
$numÙÙÅ Ç
-ÙÙÉ Ñ
iÙÙÖ Ü
)ÙÙÜ á
+ÙÙà â
itemSizeÙÙä í
.ÙÙí ì
yÙÙì î
*ÙÙï ñ
itemRectÙÙó ü
.ÙÙü †
pivotÙÙ† •
.ÙÙ• ¶
yÙÙ¶ ß
)ÙÙß ®
;ÙÙ® ©
itemRect
ıı 
.
ıı 
	sizeDelta
ıı "
=
ıı# $
new
ıı% (
Vector2
ıı) 0
(
ıı0 1
itemRect
ıı1 9
.
ıı9 :
	sizeDelta
ıı: C
.
ııC D
x
ııD E
,
ııE F
itemSize
ııG O
.
ııO P
y
ııP Q
)
ııQ R
;
ııR S
}
ˆˆ 
AlphaFadeList
˘˘ 
(
˘˘ 
m_AlphaFadeSpeed
˘˘ *
,
˘˘* +
$num
˘˘, .
,
˘˘. /
$num
˘˘0 2
)
˘˘2 3
;
˘˘3 4

m_Template
¸¸ 
.
¸¸ 

gameObject
¸¸ !
.
¸¸! "
	SetActive
¸¸" +
(
¸¸+ ,
false
¸¸, 1
)
¸¸1 2
;
¸¸2 3
itemTemplate
˝˝ 
.
˝˝ 

gameObject
˝˝ #
.
˝˝# $
	SetActive
˝˝$ -
(
˝˝- .
false
˝˝. 3
)
˝˝3 4
;
˝˝4 5
	m_Blocker
ˇˇ 
=
ˇˇ 
CreateBlocker
ˇˇ %
(
ˇˇ% &

rootCanvas
ˇˇ& 0
)
ˇˇ0 1
;
ˇˇ1 2
}
ÄÄ 	
	protected
ää 
virtual
ää 

GameObject
ää $
CreateBlocker
ää% 2
(
ää2 3
Canvas
ää3 9

rootCanvas
ää: D
)
ääD E
{
ãã 	

GameObject
çç 
blocker
çç 
=
çç  
new
çç! $

GameObject
çç% /
(
çç/ 0
$str
çç0 9
)
çç9 :
;
çç: ;
RectTransform
êê 
blockerRect
êê %
=
êê& '
blocker
êê( /
.
êê/ 0
AddComponent
êê0 <
<
êê< =
RectTransform
êê= J
>
êêJ K
(
êêK L
)
êêL M
;
êêM N
blockerRect
ëë 
.
ëë 
	SetParent
ëë !
(
ëë! "

rootCanvas
ëë" ,
.
ëë, -
	transform
ëë- 6
,
ëë6 7
false
ëë8 =
)
ëë= >
;
ëë> ?
blockerRect
íí 
.
íí 
	anchorMin
íí !
=
íí" #
Vector3
íí$ +
.
íí+ ,
zero
íí, 0
;
íí0 1
blockerRect
ìì 
.
ìì 
	anchorMax
ìì !
=
ìì" #
Vector3
ìì$ +
.
ìì+ ,
one
ìì, /
;
ìì/ 0
blockerRect
îî 
.
îî 
	sizeDelta
îî !
=
îî" #
Vector2
îî$ +
.
îî+ ,
zero
îî, 0
;
îî0 1
Canvas
óó 
blockerCanvas
óó  
=
óó! "
blocker
óó# *
.
óó* +
AddComponent
óó+ 7
<
óó7 8
Canvas
óó8 >
>
óó> ?
(
óó? @
)
óó@ A
;
óóA B
blockerCanvas
òò 
.
òò 
overrideSorting
òò )
=
òò* +
true
òò, 0
;
òò0 1
Canvas
ôô 
dropdownCanvas
ôô !
=
ôô" #

m_Dropdown
ôô$ .
.
ôô. /
GetComponent
ôô/ ;
<
ôô; <
Canvas
ôô< B
>
ôôB C
(
ôôC D
)
ôôD E
;
ôôE F
blockerCanvas
öö 
.
öö 
sortingLayerID
öö (
=
öö) *
dropdownCanvas
öö+ 9
.
öö9 :
sortingLayerID
öö: H
;
ööH I
blockerCanvas
õõ 
.
õõ 
sortingOrder
õõ &
=
õõ' (
dropdownCanvas
õõ) 7
.
õõ7 8
sortingOrder
õõ8 D
-
õõE F
$num
õõG H
;
õõH I
Canvas
ûû 
parentCanvas
ûû 
=
ûû  !
null
ûû" &
;
ûû& '
	Transform
üü 
parentTransform
üü %
=
üü& '

m_Template
üü( 2
.
üü2 3
parent
üü3 9
;
üü9 :
while
†† 
(
†† 
parentTransform
†† "
!=
††# %
null
††& *
)
††* +
{
°° 
parentCanvas
¢¢ 
=
¢¢ 
parentTransform
¢¢ .
.
¢¢. /
GetComponent
¢¢/ ;
<
¢¢; <
Canvas
¢¢< B
>
¢¢B C
(
¢¢C D
)
¢¢D E
;
¢¢E F
if
££ 
(
££ 
parentCanvas
££  
!=
££! #
null
££$ (
)
££( )
break
§§ 
;
§§ 
parentTransform
¶¶ 
=
¶¶  !
parentTransform
¶¶" 1
.
¶¶1 2
parent
¶¶2 8
;
¶¶8 9
}
ßß 
if
™™ 
(
™™ 
parentCanvas
™™ 
!=
™™ 
null
™™  $
)
™™$ %
{
´´ 
	Component
¨¨ 
[
¨¨ 
]
¨¨ 

components
¨¨ &
=
¨¨' (
parentCanvas
¨¨) 5
.
¨¨5 6
GetComponents
¨¨6 C
<
¨¨C D
BaseRaycaster
¨¨D Q
>
¨¨Q R
(
¨¨R S
)
¨¨S T
;
¨¨T U
for
≠≠ 
(
≠≠ 
int
≠≠ 
i
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
i
≠≠  !
<
≠≠" #

components
≠≠$ .
.
≠≠. /
Length
≠≠/ 5
;
≠≠5 6
i
≠≠7 8
++
≠≠8 :
)
≠≠: ;
{
ÆÆ 
Type
ØØ 
raycasterType
ØØ &
=
ØØ' (

components
ØØ) 3
[
ØØ3 4
i
ØØ4 5
]
ØØ5 6
.
ØØ6 7
GetType
ØØ7 >
(
ØØ> ?
)
ØØ? @
;
ØØ@ A
if
∞∞ 
(
∞∞ 
blocker
∞∞ 
.
∞∞  
GetComponent
∞∞  ,
(
∞∞, -
raycasterType
∞∞- :
)
∞∞: ;
==
∞∞< >
null
∞∞? C
)
∞∞C D
{
±± 
blocker
≤≤ 
.
≤≤  
AddComponent
≤≤  ,
(
≤≤, -
raycasterType
≤≤- :
)
≤≤: ;
;
≤≤; <
}
≥≥ 
}
¥¥ 
}
µµ 
else
∂∂ 
{
∑∑ 
GetOrAddComponent
ππ !
<
ππ! "
GraphicRaycaster
ππ" 2
>
ππ2 3
(
ππ3 4
blocker
ππ4 ;
)
ππ; <
;
ππ< =
}
∫∫ 
Image
ææ 
blockerImage
ææ 
=
ææ  
blocker
ææ! (
.
ææ( )
AddComponent
ææ) 5
<
ææ5 6
Image
ææ6 ;
>
ææ; <
(
ææ< =
)
ææ= >
;
ææ> ?
blockerImage
øø 
.
øø 
color
øø 
=
øø  
Color
øø! &
.
øø& '
clear
øø' ,
;
øø, -
Button
¬¬ 
blockerButton
¬¬  
=
¬¬! "
blocker
¬¬# *
.
¬¬* +
AddComponent
¬¬+ 7
<
¬¬7 8
Button
¬¬8 >
>
¬¬> ?
(
¬¬? @
)
¬¬@ A
;
¬¬A B
blockerButton
√√ 
.
√√ 
onClick
√√ !
.
√√! "
AddListener
√√" -
(
√√- .
Hide
√√. 2
)
√√2 3
;
√√3 4
return
≈≈ 
blocker
≈≈ 
;
≈≈ 
}
∆∆ 	
	protected
œœ 
virtual
œœ 
void
œœ 
DestroyBlocker
œœ -
(
œœ- .

GameObject
œœ. 8
blocker
œœ9 @
)
œœ@ A
{
–– 	
Destroy
—— 
(
—— 
blocker
—— 
)
—— 
;
—— 
}
““ 	
	protected
‹‹ 
virtual
‹‹ 

GameObject
‹‹ $ 
CreateDropdownList
‹‹% 7
(
‹‹7 8

GameObject
‹‹8 B
template
‹‹C K
)
‹‹K L
{
›› 	
return
ﬁﬁ 
(
ﬁﬁ 

GameObject
ﬁﬁ 
)
ﬁﬁ 
Instantiate
ﬁﬁ *
(
ﬁﬁ* +
template
ﬁﬁ+ 3
)
ﬁﬁ3 4
;
ﬁﬁ4 5
}
ﬂﬂ 	
	protected
ËË 
virtual
ËË 
void
ËË !
DestroyDropdownList
ËË 2
(
ËË2 3

GameObject
ËË3 =
dropdownList
ËË> J
)
ËËJ K
{
ÈÈ 	
Destroy
ÍÍ 
(
ÍÍ 
dropdownList
ÍÍ  
)
ÍÍ  !
;
ÍÍ! "
}
ÎÎ 	
	protected
ˆˆ 
virtual
ˆˆ 
DropdownItem
ˆˆ &

CreateItem
ˆˆ' 1
(
ˆˆ1 2
DropdownItem
ˆˆ2 >
itemTemplate
ˆˆ? K
)
ˆˆK L
{
˜˜ 	
return
¯¯ 
(
¯¯ 
DropdownItem
¯¯  
)
¯¯  !
Instantiate
¯¯! ,
(
¯¯, -
itemTemplate
¯¯- 9
)
¯¯9 :
;
¯¯: ;
}
˘˘ 	
	protected
ÉÉ 
virtual
ÉÉ 
void
ÉÉ 
DestroyItem
ÉÉ *
(
ÉÉ* +
DropdownItem
ÉÉ+ 7
item
ÉÉ8 <
)
ÉÉ< =
{
ÉÉ> ?
}
ÉÉ@ A
private
ÜÜ 
DropdownItem
ÜÜ 
AddItem
ÜÜ $
(
ÜÜ$ %

OptionData
ÜÜ% /
data
ÜÜ0 4
,
ÜÜ4 5
bool
ÜÜ6 :
selected
ÜÜ; C
,
ÜÜC D
DropdownItem
ÜÜE Q
itemTemplate
ÜÜR ^
,
ÜÜ^ _
List
ÜÜ` d
<
ÜÜd e
DropdownItem
ÜÜe q
>
ÜÜq r
items
ÜÜs x
)
ÜÜx y
{
áá 	
DropdownItem
ââ 
item
ââ 
=
ââ 

CreateItem
ââ  *
(
ââ* +
itemTemplate
ââ+ 7
)
ââ7 8
;
ââ8 9
item
ää 
.
ää 
rectTransform
ää 
.
ää 
	SetParent
ää (
(
ää( )
itemTemplate
ää) 5
.
ää5 6
rectTransform
ää6 C
.
ääC D
parent
ääD J
,
ääJ K
false
ääL Q
)
ääQ R
;
ääR S
item
åå 
.
åå 

gameObject
åå 
.
åå 
	SetActive
åå %
(
åå% &
true
åå& *
)
åå* +
;
åå+ ,
item
çç 
.
çç 

gameObject
çç 
.
çç 
name
çç  
=
çç! "
$str
çç# *
+
çç+ ,
items
çç- 2
.
çç2 3
Count
çç3 8
+
çç9 :
(
çç; <
data
çç< @
.
çç@ A
text
ççA E
!=
ççF H
null
ççI M
?
ççN O
$str
ççP T
+
ççU V
data
ççW [
.
çç[ \
text
çç\ `
:
çça b
$str
ççc e
)
ççe f
;
ççf g
if
èè 
(
èè 
item
èè 
.
èè 
toggle
èè 
!=
èè 
null
èè #
)
èè# $
{
êê 
item
ëë 
.
ëë 
toggle
ëë 
.
ëë 
isOn
ëë  
=
ëë! "
false
ëë# (
;
ëë( )
}
íí 
if
ïï 
(
ïï 
item
ïï 
.
ïï 
text
ïï 
)
ïï 
item
ññ 
.
ññ 
text
ññ 
.
ññ 
text
ññ 
=
ññ  
data
ññ! %
.
ññ% &
text
ññ& *
;
ññ* +
if
óó 
(
óó 
item
óó 
.
óó 
image
óó 
)
óó 
{
òò 
item
ôô 
.
ôô 
image
ôô 
.
ôô 
sprite
ôô !
=
ôô" #
data
ôô$ (
.
ôô( )
image
ôô) .
;
ôô. /
item
öö 
.
öö 
image
öö 
.
öö 
enabled
öö "
=
öö# $
(
öö% &
item
öö& *
.
öö* +
image
öö+ 0
.
öö0 1
sprite
öö1 7
!=
öö8 :
null
öö; ?
)
öö? @
;
öö@ A
}
õõ 
items
ùù 
.
ùù 
Add
ùù 
(
ùù 
item
ùù 
)
ùù 
;
ùù 
return
ûû 
item
ûû 
;
ûû 
}
üü 	
private
°° 
void
°° 
AlphaFadeList
°° "
(
°°" #
float
°°# (
duration
°°) 1
,
°°1 2
float
°°3 8
alpha
°°9 >
)
°°> ?
{
¢¢ 	
CanvasGroup
££ 
group
££ 
=
££ 

m_Dropdown
££  *
.
££* +
GetComponent
££+ 7
<
££7 8
CanvasGroup
££8 C
>
££C D
(
££D E
)
££E F
;
££F G
AlphaFadeList
§§ 
(
§§ 
duration
§§ "
,
§§" #
group
§§$ )
.
§§) *
alpha
§§* /
,
§§/ 0
alpha
§§1 6
)
§§6 7
;
§§7 8
}
•• 	
private
ßß 
void
ßß 
AlphaFadeList
ßß "
(
ßß" #
float
ßß# (
duration
ßß) 1
,
ßß1 2
float
ßß3 8
start
ßß9 >
,
ßß> ?
float
ßß@ E
end
ßßF I
)
ßßI J
{
®® 	
if
©© 
(
©© 
end
©© 
.
©© 
Equals
©© 
(
©© 
start
©©  
)
©©  !
)
©©! "
return
™™ 
;
™™ 

FloatTween
¨¨ 
tween
¨¨ 
=
¨¨ 
new
¨¨ "

FloatTween
¨¨# -
{
¨¨. /
duration
¨¨0 8
=
¨¨9 :
duration
¨¨; C
,
¨¨C D

startValue
¨¨E O
=
¨¨P Q
start
¨¨R W
,
¨¨W X
targetValue
¨¨Y d
=
¨¨e f
end
¨¨g j
}
¨¨k l
;
¨¨l m
tween
≠≠ 
.
≠≠ "
AddOnChangedCallback
≠≠ &
(
≠≠& '
SetAlpha
≠≠' /
)
≠≠/ 0
;
≠≠0 1
tween
ÆÆ 
.
ÆÆ 
ignoreTimeScale
ÆÆ !
=
ÆÆ" #
true
ÆÆ$ (
;
ÆÆ( ) 
m_AlphaTweenRunner
ØØ 
.
ØØ 

StartTween
ØØ )
(
ØØ) *
tween
ØØ* /
)
ØØ/ 0
;
ØØ0 1
}
∞∞ 	
private
≤≤ 
void
≤≤ 
SetAlpha
≤≤ 
(
≤≤ 
float
≤≤ #
alpha
≤≤$ )
)
≤≤) *
{
≥≥ 	
if
¥¥ 
(
¥¥ 
!
¥¥ 

m_Dropdown
¥¥ 
)
¥¥ 
return
µµ 
;
µµ 
CanvasGroup
∑∑ 
group
∑∑ 
=
∑∑ 

m_Dropdown
∑∑  *
.
∑∑* +
GetComponent
∑∑+ 7
<
∑∑7 8
CanvasGroup
∑∑8 C
>
∑∑C D
(
∑∑D E
)
∑∑E F
;
∑∑F G
group
∏∏ 
.
∏∏ 
alpha
∏∏ 
=
∏∏ 
alpha
∏∏ 
;
∏∏  
}
ππ 	
public
ææ 
void
ææ 
Hide
ææ 
(
ææ 
)
ææ 
{
øø 	
if
¿¿ 
(
¿¿ 
m_Coroutine
¿¿ 
==
¿¿ 
null
¿¿ #
)
¿¿# $
{
¡¡ 
if
¬¬ 
(
¬¬ 

m_Dropdown
¬¬ 
!=
¬¬ !
null
¬¬" &
)
¬¬& '
{
√√ 
AlphaFadeList
ƒƒ !
(
ƒƒ! "
m_AlphaFadeSpeed
ƒƒ" 2
,
ƒƒ2 3
$num
ƒƒ4 6
)
ƒƒ6 7
;
ƒƒ7 8
if
«« 
(
«« 
IsActive
««  
(
««  !
)
««! "
)
««" #
m_Coroutine
»» #
=
»»$ %
StartCoroutine
»»& 4
(
»»4 5(
DelayedDestroyDropdownList
»»5 O
(
»»O P
m_AlphaFadeSpeed
»»P `
)
»»` a
)
»»a b
;
»»b c
}
…… 
if
ÀÀ 
(
ÀÀ 
	m_Blocker
ÀÀ 
!=
ÀÀ  
null
ÀÀ! %
)
ÀÀ% &
DestroyBlocker
ÃÃ "
(
ÃÃ" #
	m_Blocker
ÃÃ# ,
)
ÃÃ, -
;
ÃÃ- .
	m_Blocker
ŒŒ 
=
ŒŒ 
null
ŒŒ  
;
ŒŒ  !
Select
œœ 
(
œœ 
)
œœ 
;
œœ 
}
–– 
}
—— 	
private
”” 
IEnumerator
”” (
DelayedDestroyDropdownList
”” 6
(
””6 7
float
””7 <
delay
””= B
)
””B C
{
‘‘ 	
yield
’’ 
return
’’ 
new
’’ $
WaitForSecondsRealtime
’’ 3
(
’’3 4
delay
’’4 9
)
’’9 :
;
’’: ;*
ImmediateDestroyDropdownList
÷÷ (
(
÷÷( )
)
÷÷) *
;
÷÷* +
}
◊◊ 	
private
ŸŸ 
void
ŸŸ *
ImmediateDestroyDropdownList
ŸŸ 1
(
ŸŸ1 2
)
ŸŸ2 3
{
⁄⁄ 	
for
€€ 
(
€€ 
int
€€ 
i
€€ 
=
€€ 
$num
€€ 
;
€€ 
i
€€ 
<
€€ 
m_Items
€€  '
.
€€' (
Count
€€( -
;
€€- .
i
€€/ 0
++
€€0 2
)
€€2 3
{
‹‹ 
if
›› 
(
›› 
m_Items
›› 
[
›› 
i
›› 
]
›› 
!=
›› !
null
››" &
)
››& '
DestroyItem
ﬁﬁ 
(
ﬁﬁ  
m_Items
ﬁﬁ  '
[
ﬁﬁ' (
i
ﬁﬁ( )
]
ﬁﬁ) *
)
ﬁﬁ* +
;
ﬁﬁ+ ,
}
ﬂﬂ 
m_Items
·· 
.
·· 
Clear
·· 
(
·· 
)
·· 
;
·· 
if
„„ 
(
„„ 

m_Dropdown
„„ 
!=
„„ 
null
„„ "
)
„„" #!
DestroyDropdownList
‰‰ #
(
‰‰# $

m_Dropdown
‰‰$ .
)
‰‰. /
;
‰‰/ 0
if
ÊÊ 
(
ÊÊ  
m_AlphaTweenRunner
ÊÊ "
!=
ÊÊ# %
null
ÊÊ& *
)
ÊÊ* + 
m_AlphaTweenRunner
ÁÁ "
.
ÁÁ" #
	StopTween
ÁÁ# ,
(
ÁÁ, -
)
ÁÁ- .
;
ÁÁ. /

m_Dropdown
ÈÈ 
=
ÈÈ 
null
ÈÈ 
;
ÈÈ 
m_Coroutine
ÍÍ 
=
ÍÍ 
null
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
private
ÓÓ 
void
ÓÓ 
OnSelectItem
ÓÓ !
(
ÓÓ! "
Toggle
ÓÓ" (
toggle
ÓÓ) /
)
ÓÓ/ 0
{
ÔÔ 	
if
 
(
 
!
 
toggle
 
.
 
isOn
 
)
 
toggle
ÒÒ 
.
ÒÒ 
isOn
ÒÒ 
=
ÒÒ 
true
ÒÒ "
;
ÒÒ" #
int
ÛÛ 
selectedIndex
ÛÛ 
=
ÛÛ 
-
ÛÛ  !
$num
ÛÛ! "
;
ÛÛ" #
	Transform
ÙÙ 
tr
ÙÙ 
=
ÙÙ 
toggle
ÙÙ !
.
ÙÙ! "
	transform
ÙÙ" +
;
ÙÙ+ ,
	Transform
ıı 
parent
ıı 
=
ıı 
tr
ıı !
.
ıı! "
parent
ıı" (
;
ıı( )
for
ˆˆ 
(
ˆˆ 
int
ˆˆ 
i
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ 
i
ˆˆ 
<
ˆˆ 
parent
ˆˆ  &
.
ˆˆ& '

childCount
ˆˆ' 1
;
ˆˆ1 2
i
ˆˆ3 4
++
ˆˆ4 6
)
ˆˆ6 7
{
˜˜ 
if
¯¯ 
(
¯¯ 
parent
¯¯ 
.
¯¯ 
GetChild
¯¯ #
(
¯¯# $
i
¯¯$ %
)
¯¯% &
==
¯¯' )
tr
¯¯* ,
)
¯¯, -
{
˘˘ 
selectedIndex
˚˚ !
=
˚˚" #
i
˚˚$ %
-
˚˚& '
$num
˚˚( )
;
˚˚) *
break
¸¸ 
;
¸¸ 
}
˝˝ 
}
˛˛ 
if
Ä	Ä	 
(
Ä	Ä	 
selectedIndex
Ä	Ä	 
<
Ä	Ä	 
$num
Ä	Ä	  !
)
Ä	Ä	! "
return
Å	Å	 
;
Å	Å	 
value
É	É	 
=
É	É	 
selectedIndex
É	É	 !
;
É	É	! "
Hide
Ñ	Ñ	 
(
Ñ	Ñ	 
)
Ñ	Ñ	 
;
Ñ	Ñ	 
}
Ö	Ö	 	
}
Ü	Ü	 
}á	á	 ´Ê-
]C:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_Text.cs
	namespace 	
TMPro
 
{ 
public 

	interface 
ITextElement !
{ 
Material 
sharedMaterial 
{  !
get" %
;% &
}' (
void 
Rebuild 
( 
CanvasUpdate !
update" (
)( )
;) *
int 
GetInstanceID 
( 
) 
; 
} 
public 

enum  
TextAlignmentOptions $
{ 
TopLeft 
= &
HorizontalAlignmentOptions ,
., -
Left- 1
|2 3$
VerticalAlignmentOptions4 L
.L M
TopM P
,P Q
Top 
= &
HorizontalAlignmentOptions (
.( )
Center) /
|0 1$
VerticalAlignmentOptions2 J
.J K
TopK N
,N O
TopRight 
= &
HorizontalAlignmentOptions -
.- .
Right. 3
|4 5$
VerticalAlignmentOptions6 N
.N O
TopO R
,R S
TopJustified 
= &
HorizontalAlignmentOptions 1
.1 2
	Justified2 ;
|< =$
VerticalAlignmentOptions> V
.V W
TopW Z
,Z [
TopFlush 
= &
HorizontalAlignmentOptions -
.- .
Flush. 3
|4 5$
VerticalAlignmentOptions6 N
.N O
TopO R
,R S
TopGeoAligned 
= &
HorizontalAlignmentOptions 2
.2 3
Geometry3 ;
|< =$
VerticalAlignmentOptions> V
.V W
TopW Z
,Z [
Left   
=   &
HorizontalAlignmentOptions   )
.  ) *
Left  * .
|  / 0$
VerticalAlignmentOptions  1 I
.  I J
Middle  J P
,  P Q
Center!! 
=!! &
HorizontalAlignmentOptions!! +
.!!+ ,
Center!!, 2
|!!3 4$
VerticalAlignmentOptions!!5 M
.!!M N
Middle!!N T
,!!T U
Right"" 
="" &
HorizontalAlignmentOptions"" *
.""* +
Right""+ 0
|""1 2$
VerticalAlignmentOptions""3 K
.""K L
Middle""L R
,""R S
	Justified## 
=## &
HorizontalAlignmentOptions## .
.##. /
	Justified##/ 8
|##9 :$
VerticalAlignmentOptions##; S
.##S T
Middle##T Z
,##Z [
Flush$$ 
=$$ &
HorizontalAlignmentOptions$$ *
.$$* +
Flush$$+ 0
|$$1 2$
VerticalAlignmentOptions$$3 K
.$$K L
Middle$$L R
,$$R S
CenterGeoAligned%% 
=%% &
HorizontalAlignmentOptions%% 5
.%%5 6
Geometry%%6 >
|%%? @$
VerticalAlignmentOptions%%A Y
.%%Y Z
Middle%%Z `
,%%` a

BottomLeft'' 
='' &
HorizontalAlignmentOptions'' /
.''/ 0
Left''0 4
|''5 6$
VerticalAlignmentOptions''7 O
.''O P
Bottom''P V
,''V W
Bottom(( 
=(( &
HorizontalAlignmentOptions(( +
.((+ ,
Center((, 2
|((3 4$
VerticalAlignmentOptions((5 M
.((M N
Bottom((N T
,((T U
BottomRight)) 
=)) &
HorizontalAlignmentOptions)) 0
.))0 1
Right))1 6
|))7 8$
VerticalAlignmentOptions))9 Q
.))Q R
Bottom))R X
,))X Y
BottomJustified** 
=** &
HorizontalAlignmentOptions** 4
.**4 5
	Justified**5 >
|**? @$
VerticalAlignmentOptions**A Y
.**Y Z
Bottom**Z `
,**` a
BottomFlush++ 
=++ &
HorizontalAlignmentOptions++ 0
.++0 1
Flush++1 6
|++7 8$
VerticalAlignmentOptions++9 Q
.++Q R
Bottom++R X
,++X Y
BottomGeoAligned,, 
=,, &
HorizontalAlignmentOptions,, 5
.,,5 6
Geometry,,6 >
|,,? @$
VerticalAlignmentOptions,,A Y
.,,Y Z
Bottom,,Z `
,,,` a
BaselineLeft.. 
=.. &
HorizontalAlignmentOptions.. 1
...1 2
Left..2 6
|..7 8$
VerticalAlignmentOptions..9 Q
...Q R
Baseline..R Z
,..Z [
Baseline// 
=// &
HorizontalAlignmentOptions// -
.//- .
Center//. 4
|//5 6$
VerticalAlignmentOptions//7 O
.//O P
Baseline//P X
,//X Y
BaselineRight00 
=00 &
HorizontalAlignmentOptions00 2
.002 3
Right003 8
|009 :$
VerticalAlignmentOptions00; S
.00S T
Baseline00T \
,00\ ]
BaselineJustified11 
=11 &
HorizontalAlignmentOptions11 6
.116 7
	Justified117 @
|11A B$
VerticalAlignmentOptions11C [
.11[ \
Baseline11\ d
,11d e
BaselineFlush22 
=22 &
HorizontalAlignmentOptions22 2
.222 3
Flush223 8
|229 :$
VerticalAlignmentOptions22; S
.22S T
Baseline22T \
,22\ ]
BaselineGeoAligned33 
=33 &
HorizontalAlignmentOptions33 7
.337 8
Geometry338 @
|33A B$
VerticalAlignmentOptions33C [
.33[ \
Baseline33\ d
,33d e
MidlineLeft55 
=55 &
HorizontalAlignmentOptions55 0
.550 1
Left551 5
|556 7$
VerticalAlignmentOptions558 P
.55P Q
Geometry55Q Y
,55Y Z
Midline66 
=66 &
HorizontalAlignmentOptions66 ,
.66, -
Center66- 3
|664 5$
VerticalAlignmentOptions666 N
.66N O
Geometry66O W
,66W X
MidlineRight77 
=77 &
HorizontalAlignmentOptions77 1
.771 2
Right772 7
|778 9$
VerticalAlignmentOptions77: R
.77R S
Geometry77S [
,77[ \
MidlineJustified88 
=88 &
HorizontalAlignmentOptions88 5
.885 6
	Justified886 ?
|88@ A$
VerticalAlignmentOptions88B Z
.88Z [
Geometry88[ c
,88c d
MidlineFlush99 
=99 &
HorizontalAlignmentOptions99 1
.991 2
Flush992 7
|998 9$
VerticalAlignmentOptions99: R
.99R S
Geometry99S [
,99[ \
MidlineGeoAligned:: 
=:: &
HorizontalAlignmentOptions:: 6
.::6 7
Geometry::7 ?
|::@ A$
VerticalAlignmentOptions::B Z
.::Z [
Geometry::[ c
,::c d
CaplineLeft<< 
=<< &
HorizontalAlignmentOptions<< 0
.<<0 1
Left<<1 5
|<<6 7$
VerticalAlignmentOptions<<8 P
.<<P Q
Capline<<Q X
,<<X Y
Capline== 
=== &
HorizontalAlignmentOptions== ,
.==, -
Center==- 3
|==4 5$
VerticalAlignmentOptions==6 N
.==N O
Capline==O V
,==V W
CaplineRight>> 
=>> &
HorizontalAlignmentOptions>> 1
.>>1 2
Right>>2 7
|>>8 9$
VerticalAlignmentOptions>>: R
.>>R S
Capline>>S Z
,>>Z [
CaplineJustified?? 
=?? &
HorizontalAlignmentOptions?? 5
.??5 6
	Justified??6 ?
|??@ A$
VerticalAlignmentOptions??B Z
.??Z [
Capline??[ b
,??b c
CaplineFlush@@ 
=@@ &
HorizontalAlignmentOptions@@ 1
.@@1 2
Flush@@2 7
|@@8 9$
VerticalAlignmentOptions@@: R
.@@R S
Capline@@S Z
,@@Z [
CaplineGeoAlignedAA 
=AA &
HorizontalAlignmentOptionsAA 6
.AA6 7
GeometryAA7 ?
|AA@ A$
VerticalAlignmentOptionsAAB Z
.AAZ [
CaplineAA[ b
,AAb c
	ConvertedCC 
=CC 
$numCC 
}DD 
;DD 
publicII 

enumII &
HorizontalAlignmentOptionsII *
{JJ 
LeftKK 
=KK 
$numKK 
,KK 
CenterKK 
=KK 
$numKK  
,KK  !
RightKK" '
=KK( )
$numKK* -
,KK- .
	JustifiedKK/ 8
=KK9 :
$numKK; >
,KK> ?
FlushKK@ E
=KKF G
$numKKH L
,KKL M
GeometryKKN V
=KKW X
$numKKY ]
}LL 
publicQQ 

enumQQ $
VerticalAlignmentOptionsQQ (
{RR 
TopSS 
=SS 
$numSS 
,SS 
MiddleSS 
=SS 
$numSS #
,SS# $
BottomSS% +
=SS, -
$numSS. 3
,SS3 4
BaselineSS5 =
=SS> ?
$numSS@ E
,SSE F
GeometrySSG O
=SSP Q
$numSSR X
,SSX Y
CaplineSSZ a
=SSb c
$numSSd j
,SSj k
}TT 
publicZZ 

enumZZ 
TextRenderFlagsZZ 
{[[ 

DontRender\\ 
=\\ 
$num\\ 
,\\ 
Render]] 
=]] 
$num]] 
}^^ 
;^^ 
public`` 

enum`` 
TMP_TextElementType`` #
{``$ %
	Character``& /
,``/ 0
Sprite``1 7
}``8 9
;``9 :
publicaa 

enumaa 
MaskingTypesaa 
{aa 
MaskOffaa &
=aa' (
$numaa) *
,aa* +
MaskHardaa, 4
=aa5 6
$numaa7 8
,aa8 9
MaskSoftaa: B
=aaC D
$numaaE F
}aaG H
;aaH I
publicbb 

enumbb 
TextOverflowModesbb !
{bb" #
Overflowbb$ ,
=bb- .
$numbb/ 0
,bb0 1
Ellipsisbb2 :
=bb; <
$numbb= >
,bb> ?
Maskingbb@ G
=bbH I
$numbbJ K
,bbK L
TruncatebbM U
=bbV W
$numbbX Y
,bbY Z

ScrollRectbb[ e
=bbf g
$numbbh i
,bbi j
Pagebbk o
=bbp q
$numbbr s
,bbs t
Linkedbbu {
=bb| }
$numbb~ 
}
bbÄ Å
;
bbÅ Ç
publiccc 

enumcc 
MaskingOffsetModecc !
{cc" #

Percentagecc$ .
=cc/ 0
$numcc1 2
,cc2 3
Pixelcc4 9
=cc: ;
$numcc< =
}cc> ?
;cc? @
publicdd 

enumdd !
TextureMappingOptionsdd %
{dd& '
	Characterdd( 1
=dd2 3
$numdd4 5
,dd5 6
Linedd7 ;
=dd< =
$numdd> ?
,dd? @
	ParagraphddA J
=ddK L
$numddM N
,ddN O
MatchAspectddP [
=dd\ ]
$numdd^ _
}dd` a
;dda b
[ff 
Flagsff 

]ff
 
publicgg 

enumgg 

FontStylesgg 
{gg 
Normalgg #
=gg$ %
$numgg& )
,gg) *
Boldgg+ /
=gg0 1
$numgg2 5
,gg5 6
Italicgg7 =
=gg> ?
$numgg@ C
,ggC D
	UnderlineggE N
=ggO P
$numggQ T
,ggT U
	LowerCaseggV _
=gg` a
$numggb e
,gge f
	UpperCaseggg p
=ggq r
$numggs w
,ggw x
	SmallCaps	ggy Ç
=
ggÉ Ñ
$num
ggÖ â
,
ggâ ä
Strikethrough
ggã ò
=
ggô ö
$num
ggõ ü
,
ggü †
Superscript
gg° ¨
=
gg≠ Æ
$num
ggØ ≥
,
gg≥ ¥
	Subscript
ggµ æ
=
ggø ¿
$num
gg¡ ∆
,
gg∆ «
	Highlight
gg» —
=
gg“ ”
$num
gg‘ Ÿ
}
gg⁄ €
;
gg€ ‹
publichh 

enumhh 

FontWeighthh 
{hh 
Thinhh !
=hh" #
$numhh$ '
,hh' (

ExtraLighthh) 3
=hh4 5
$numhh6 9
,hh9 :
Lighthh; @
=hhA B
$numhhC F
,hhF G
RegularhhH O
=hhP Q
$numhhR U
,hhU V
MediumhhW ]
=hh^ _
$numhh` c
,hhc d
SemiBoldhhe m
=hhn o
$numhhp s
,hhs t
Boldhhu y
=hhz {
$numhh| 
,	hh Ä
Heavy
hhÅ Ü
=
hhá à
$num
hhâ å
,
hhå ç
Black
hhé ì
=
hhî ï
$num
hhñ ô
}
hhö õ
;
hhõ ú
publicmm 

abstractmm 
classmm 
TMP_Textmm "
:mm# $
MaskableGraphicmm% 4
{nn 
publicrr 
virtualrr 
stringrr 
textrr "
{ss 	
gettt 
{uu 
ifvv 
(vv &
m_IsTextBackingStringDirtyvv .
)vv. /
returnww ,
 InternalTextBackingArrayToStringww ;
(ww; <
)ww< =
;ww= >
returnyy 
m_textyy 
;yy 
}zz 
set{{ 
{|| 
if}} 
(}} &
m_IsTextBackingStringDirty}} .
==}}/ 1
false}}2 7
&&}}8 :
m_text}}; A
!=}}B D
null}}E I
&&}}J L
value}}M R
!=}}S U
null}}V Z
&&}}[ ]
m_text}}^ d
.}}d e
Length}}e k
==}}l n
value}}o t
.}}t u
Length}}u {
&&}}| ~
m_text	}} Ö
==
}}Ü à
value
}}â é
)
}}é è
return~~ 
;~~ (
m_IsTextBackingStringDirty
ÄÄ *
=
ÄÄ+ ,
false
ÄÄ- 2
;
ÄÄ2 3
m_text
ÅÅ 
=
ÅÅ 
value
ÅÅ 
;
ÅÅ 
m_inputSource
ÇÇ 
=
ÇÇ 
TextInputSources
ÇÇ  0
.
ÇÇ0 1

TextString
ÇÇ1 ;
;
ÇÇ; <%
m_havePropertiesChanged
ÉÉ '
=
ÉÉ( )
true
ÉÉ* .
;
ÉÉ. /
SetVerticesDirty
ÑÑ  
(
ÑÑ  !
)
ÑÑ! "
;
ÑÑ" #
SetLayoutDirty
ÖÖ 
(
ÖÖ 
)
ÖÖ  
;
ÖÖ  !
}
ÜÜ 
}
áá 	
[
àà 	
SerializeField
àà	 
]
àà 
[
ââ 	
TextArea
ââ	 
(
ââ 
$num
ââ 
,
ââ 
$num
ââ 
)
ââ 
]
ââ 
	protected
ää 
string
ää 
m_text
ää 
;
ää  
private
èè 
bool
èè (
m_IsTextBackingStringDirty
èè /
;
èè/ 0
public
îî 
ITextPreprocessor
îî  
textPreprocessor
îî! 1
{
ïï 	
get
ññ 
{
ññ 
return
ññ  
m_TextPreprocessor
ññ +
;
ññ+ ,
}
ññ- .
set
óó 
{
óó  
m_TextPreprocessor
óó $
=
óó% &
value
óó' ,
;
óó, -
}
óó. /
}
òò 	
[
ôô 	
SerializeField
ôô	 
]
ôô 
	protected
öö 
ITextPreprocessor
öö # 
m_TextPreprocessor
öö$ 6
;
öö6 7
public
üü 
bool
üü 
isRightToLeftText
üü %
{
†† 	
get
°° 
{
°° 
return
°° 
m_isRightToLeft
°° (
;
°°( )
}
°°* +
set
¢¢ 
{
¢¢ 
if
¢¢ 
(
¢¢ 
m_isRightToLeft
¢¢ %
==
¢¢& (
value
¢¢) .
)
¢¢. /
return
¢¢0 6
;
¢¢6 7
m_isRightToLeft
¢¢8 G
=
¢¢H I
value
¢¢J O
;
¢¢O P%
m_havePropertiesChanged
¢¢Q h
=
¢¢i j
true
¢¢k o
;
¢¢o p
SetVerticesDirty¢¢q Å
(¢¢Å Ç
)¢¢Ç É
;¢¢É Ñ
SetLayoutDirty¢¢Ö ì
(¢¢ì î
)¢¢î ï
;¢¢ï ñ
}¢¢ó ò
}
££ 	
[
§§ 	
SerializeField
§§	 
]
§§ 
	protected
•• 
bool
•• 
m_isRightToLeft
•• &
=
••' (
false
••) .
;
••. /
public
´´ 
TMP_FontAsset
´´ 
font
´´ !
{
¨¨ 	
get
≠≠ 
{
≠≠ 
return
≠≠ 
m_fontAsset
≠≠ $
;
≠≠$ %
}
≠≠& '
set
ÆÆ 
{
ÆÆ 
if
ÆÆ 
(
ÆÆ 
m_fontAsset
ÆÆ !
==
ÆÆ" $
value
ÆÆ% *
)
ÆÆ* +
return
ÆÆ, 2
;
ÆÆ2 3
m_fontAsset
ÆÆ4 ?
=
ÆÆ@ A
value
ÆÆB G
;
ÆÆG H
LoadFontAsset
ÆÆI V
(
ÆÆV W
)
ÆÆW X
;
ÆÆX Y%
m_havePropertiesChanged
ÆÆZ q
=
ÆÆr s
true
ÆÆt x
;
ÆÆx y
SetVerticesDirtyÆÆz ä
(ÆÆä ã
)ÆÆã å
;ÆÆå ç
SetLayoutDirtyÆÆé ú
(ÆÆú ù
)ÆÆù û
;ÆÆû ü
}ÆÆ† °
}
ØØ 	
[
∞∞ 	
SerializeField
∞∞	 
]
∞∞ 
	protected
±± 
TMP_FontAsset
±± 
m_fontAsset
±±  +
;
±±+ ,
	protected
≤≤ 
TMP_FontAsset
≤≤  
m_currentFontAsset
≤≤  2
;
≤≤2 3
	protected
≥≥ 
bool
≥≥ 
m_isSDFShader
≥≥ $
;
≥≥$ %
public
ππ 
virtual
ππ 
Material
ππ  
fontSharedMaterial
ππ  2
{
∫∫ 	
get
ªª 
{
ªª 
return
ªª 
m_sharedMaterial
ªª )
;
ªª) *
}
ªª+ ,
set
ºº 
{
ºº 
if
ºº 
(
ºº 
m_sharedMaterial
ºº &
==
ºº' )
value
ºº* /
)
ºº/ 0
return
ºº1 7
;
ºº7 8
SetSharedMaterial
ºº9 J
(
ººJ K
value
ººK P
)
ººP Q
;
ººQ R%
m_havePropertiesChanged
ººS j
=
ººk l
true
ººm q
;
ººq r
SetVerticesDirtyººs É
(ººÉ Ñ
)ººÑ Ö
;ººÖ Ü 
SetMaterialDirtyººá ó
(ººó ò
)ººò ô
;ººô ö
}ººõ ú
}
ΩΩ 	
[
ææ 	
SerializeField
ææ	 
]
ææ 
	protected
øø 
Material
øø 
m_sharedMaterial
øø +
;
øø+ ,
	protected
¿¿ 
Material
¿¿ 
m_currentMaterial
¿¿ ,
;
¿¿, -
	protected
¡¡ 
static
¡¡ 
MaterialReference
¡¡ *
[
¡¡* +
]
¡¡+ ,"
m_materialReferences
¡¡- A
=
¡¡B C
new
¡¡D G
MaterialReference
¡¡H Y
[
¡¡Y Z
$num
¡¡Z [
]
¡¡[ \
;
¡¡\ ]
	protected
¬¬ 
static
¬¬ 

Dictionary
¬¬ #
<
¬¬# $
int
¬¬$ '
,
¬¬' (
int
¬¬) ,
>
¬¬, -,
m_materialReferenceIndexLookup
¬¬. L
=
¬¬M N
new
¬¬O R

Dictionary
¬¬S ]
<
¬¬] ^
int
¬¬^ a
,
¬¬a b
int
¬¬c f
>
¬¬f g
(
¬¬g h
)
¬¬h i
;
¬¬i j
	protected
ƒƒ 
static
ƒƒ %
TMP_TextProcessingStack
ƒƒ 0
<
ƒƒ0 1
MaterialReference
ƒƒ1 B
>
ƒƒB C&
m_materialReferenceStack
ƒƒD \
=
ƒƒ] ^
new
ƒƒ_ b%
TMP_TextProcessingStack
ƒƒc z
<
ƒƒz { 
MaterialReferenceƒƒ{ å
>ƒƒå ç
(ƒƒç é
newƒƒé ë!
MaterialReferenceƒƒí £
[ƒƒ£ §
$numƒƒ§ ¶
]ƒƒ¶ ß
)ƒƒß ®
;ƒƒ® ©
	protected
≈≈ 
int
≈≈ $
m_currentMaterialIndex
≈≈ ,
;
≈≈, -
public
ÀÀ 
virtual
ÀÀ 
Material
ÀÀ 
[
ÀÀ  
]
ÀÀ  !!
fontSharedMaterials
ÀÀ" 5
{
ÃÃ 	
get
ÕÕ 
{
ÕÕ 
return
ÕÕ  
GetSharedMaterials
ÕÕ +
(
ÕÕ+ ,
)
ÕÕ, -
;
ÕÕ- .
}
ÕÕ/ 0
set
ŒŒ 
{
ŒŒ  
SetSharedMaterials
ŒŒ $
(
ŒŒ$ %
value
ŒŒ% *
)
ŒŒ* +
;
ŒŒ+ ,%
m_havePropertiesChanged
ŒŒ- D
=
ŒŒE F
true
ŒŒG K
;
ŒŒK L
SetVerticesDirty
ŒŒM ]
(
ŒŒ] ^
)
ŒŒ^ _
;
ŒŒ_ `
SetMaterialDirty
ŒŒa q
(
ŒŒq r
)
ŒŒr s
;
ŒŒs t
}
ŒŒu v
}
œœ 	
[
–– 	
SerializeField
––	 
]
–– 
	protected
—— 
Material
—— 
[
—— 
]
—— #
m_fontSharedMaterials
—— 2
;
——2 3
public
◊◊ 
Material
◊◊ 
fontMaterial
◊◊ $
{
ÿÿ 	
get
⁄⁄ 
{
⁄⁄ 
return
⁄⁄ 
GetMaterial
⁄⁄ $
(
⁄⁄$ %
m_sharedMaterial
⁄⁄% 5
)
⁄⁄5 6
;
⁄⁄6 7
}
⁄⁄8 9
set
›› 
{
ﬁﬁ 
if
ﬂﬂ 
(
ﬂﬂ 
m_sharedMaterial
ﬂﬂ $
!=
ﬂﬂ% '
null
ﬂﬂ( ,
&&
ﬂﬂ- /
m_sharedMaterial
ﬂﬂ0 @
.
ﬂﬂ@ A
GetInstanceID
ﬂﬂA N
(
ﬂﬂN O
)
ﬂﬂO P
==
ﬂﬂQ S
value
ﬂﬂT Y
.
ﬂﬂY Z
GetInstanceID
ﬂﬂZ g
(
ﬂﬂg h
)
ﬂﬂh i
)
ﬂﬂi j
return
ﬂﬂk q
;
ﬂﬂq r
m_sharedMaterial
··  
=
··! "
value
··# (
;
··( )
	m_padding
„„ 
=
„„ #
GetPaddingForMaterial
„„ 1
(
„„1 2
)
„„2 3
;
„„3 4%
m_havePropertiesChanged
‰‰ '
=
‰‰( )
true
‰‰* .
;
‰‰. /
SetVerticesDirty
ÊÊ  
(
ÊÊ  !
)
ÊÊ! "
;
ÊÊ" #
SetMaterialDirty
ÁÁ  
(
ÁÁ  !
)
ÁÁ! "
;
ÁÁ" #
}
ËË 
}
ÈÈ 	
[
ÍÍ 	
SerializeField
ÍÍ	 
]
ÍÍ 
	protected
ÎÎ 
Material
ÎÎ 
m_fontMaterial
ÎÎ )
;
ÎÎ) *
public
ÒÒ 
virtual
ÒÒ 
Material
ÒÒ 
[
ÒÒ  
]
ÒÒ  !
fontMaterials
ÒÒ" /
{
ÚÚ 	
get
ÛÛ 
{
ÛÛ 
return
ÛÛ 
GetMaterials
ÛÛ %
(
ÛÛ% &#
m_fontSharedMaterials
ÛÛ& ;
)
ÛÛ; <
;
ÛÛ< =
}
ÛÛ> ?
set
ıı 
{
ıı  
SetSharedMaterials
ıı $
(
ıı$ %
value
ıı% *
)
ıı* +
;
ıı+ ,%
m_havePropertiesChanged
ıı- D
=
ııE F
true
ııG K
;
ııK L
SetVerticesDirty
ııM ]
(
ıı] ^
)
ıı^ _
;
ıı_ `
SetMaterialDirty
ııa q
(
ııq r
)
ıır s
;
ııs t
}
ııu v
}
ˆˆ 	
[
˜˜ 	
SerializeField
˜˜	 
]
˜˜ 
	protected
¯¯ 
Material
¯¯ 
[
¯¯ 
]
¯¯ 
m_fontMaterials
¯¯ ,
;
¯¯, -
	protected
˙˙ 
bool
˙˙ 
m_isMaterialDirty
˙˙ (
;
˙˙( )
public
ÄÄ 
override
ÄÄ 
Color
ÄÄ 
color
ÄÄ #
{
ÅÅ 	
get
ÇÇ 
{
ÇÇ 
return
ÇÇ 
m_fontColor
ÇÇ $
;
ÇÇ$ %
}
ÇÇ& '
set
ÉÉ 
{
ÉÉ 
if
ÉÉ 
(
ÉÉ 
m_fontColor
ÉÉ !
==
ÉÉ" $
value
ÉÉ% *
)
ÉÉ* +
return
ÉÉ, 2
;
ÉÉ2 3%
m_havePropertiesChanged
ÉÉ4 K
=
ÉÉL M
true
ÉÉN R
;
ÉÉR S
m_fontColor
ÉÉT _
=
ÉÉ` a
value
ÉÉb g
;
ÉÉg h
SetVerticesDirty
ÉÉi y
(
ÉÉy z
)
ÉÉz {
;
ÉÉ{ |
}
ÉÉ} ~
}
ÑÑ 	
[
ÜÜ 	
SerializeField
ÜÜ	 
]
ÜÜ 
	protected
áá 
Color32
áá 
m_fontColor32
áá '
=
áá( )
Color
áá* /
.
áá/ 0
white
áá0 5
;
áá5 6
[
àà 	
SerializeField
àà	 
]
àà 
	protected
ââ 
Color
ââ 
m_fontColor
ââ #
=
ââ$ %
Color
ââ& +
.
ââ+ ,
white
ââ, 1
;
ââ1 2
	protected
ää 
static
ää 
Color32
ää  
s_colorWhite
ää! -
=
ää. /
new
ää0 3
Color32
ää4 ;
(
ää; <
$num
ää< ?
,
ää? @
$num
ääA D
,
ääD E
$num
ääF I
,
ääI J
$num
ääK N
)
ääN O
;
ääO P
	protected
ãã 
Color32
ãã 
m_underlineColor
ãã *
=
ãã+ ,
s_colorWhite
ãã- 9
;
ãã9 :
	protected
åå 
Color32
åå "
m_strikethroughColor
åå .
=
åå/ 0
s_colorWhite
åå1 =
;
åå= >
public
ëë 
float
ëë 
alpha
ëë 
{
íí 	
get
ìì 
{
ìì 
return
ìì 
m_fontColor
ìì $
.
ìì$ %
a
ìì% &
;
ìì& '
}
ìì( )
set
îî 
{
îî 
if
îî 
(
îî 
m_fontColor
îî !
.
îî! "
a
îî" #
==
îî$ &
value
îî' ,
)
îî, -
return
îî. 4
;
îî4 5
m_fontColor
îî6 A
.
îîA B
a
îîB C
=
îîD E
value
îîF K
;
îîK L%
m_havePropertiesChanged
îîM d
=
îîe f
true
îîg k
;
îîk l
SetVerticesDirty
îîm }
(
îî} ~
)
îî~ 
;îî Ä
}îîÅ Ç
}
ïï 	
public
úú 
bool
úú "
enableVertexGradient
úú (
{
ùù 	
get
ûû 
{
ûû 
return
ûû $
m_enableVertexGradient
ûû /
;
ûû/ 0
}
ûû1 2
set
üü 
{
üü 
if
üü 
(
üü $
m_enableVertexGradient
üü ,
==
üü- /
value
üü0 5
)
üü5 6
return
üü7 =
;
üü= >%
m_havePropertiesChanged
üü? V
=
üüW X
true
üüY ]
;
üü] ^$
m_enableVertexGradient
üü_ u
=
üüv w
value
üüx }
;
üü} ~
SetVerticesDirtyüü è
(üüè ê
)üüê ë
;üüë í
}üüì î
}
†† 	
[
°° 	
SerializeField
°°	 
]
°° 
	protected
¢¢ 
bool
¢¢ $
m_enableVertexGradient
¢¢ -
;
¢¢- .
[
§§ 	
SerializeField
§§	 
]
§§ 
	protected
•• 
	ColorMode
•• 
m_colorMode
•• '
=
••( )
	ColorMode
••* 3
.
••3 4!
FourCornersGradient
••4 G
;
••G H
public
´´ 
VertexGradient
´´ 
colorGradient
´´ +
{
¨¨ 	
get
≠≠ 
{
≠≠ 
return
≠≠ !
m_fontColorGradient
≠≠ ,
;
≠≠, -
}
≠≠. /
set
ÆÆ 
{
ÆÆ %
m_havePropertiesChanged
ÆÆ )
=
ÆÆ* +
true
ÆÆ, 0
;
ÆÆ0 1!
m_fontColorGradient
ÆÆ2 E
=
ÆÆF G
value
ÆÆH M
;
ÆÆM N
SetVerticesDirty
ÆÆO _
(
ÆÆ_ `
)
ÆÆ` a
;
ÆÆa b
}
ÆÆc d
}
ØØ 	
[
∞∞ 	
SerializeField
∞∞	 
]
∞∞ 
	protected
±± 
VertexGradient
±±  !
m_fontColorGradient
±±! 4
=
±±5 6
new
±±7 :
VertexGradient
±±; I
(
±±I J
Color
±±J O
.
±±O P
white
±±P U
)
±±U V
;
±±V W
public
∑∑ 
TMP_ColorGradient
∑∑  !
colorGradientPreset
∑∑! 4
{
∏∏ 	
get
ππ 
{
ππ 
return
ππ '
m_fontColorGradientPreset
ππ 2
;
ππ2 3
}
ππ4 5
set
∫∫ 
{
∫∫ %
m_havePropertiesChanged
∫∫ )
=
∫∫* +
true
∫∫, 0
;
∫∫0 1'
m_fontColorGradientPreset
∫∫2 K
=
∫∫L M
value
∫∫N S
;
∫∫S T
SetVerticesDirty
∫∫U e
(
∫∫e f
)
∫∫f g
;
∫∫g h
}
∫∫i j
}
ªª 	
[
ºº 	
SerializeField
ºº	 
]
ºº 
	protected
ΩΩ 
TMP_ColorGradient
ΩΩ #'
m_fontColorGradientPreset
ΩΩ$ =
;
ΩΩ= >
public
√√ 
TMP_SpriteAsset
√√ 
spriteAsset
√√ *
{
ƒƒ 	
get
≈≈ 
{
≈≈ 
return
≈≈ 
m_spriteAsset
≈≈ &
;
≈≈& '
}
≈≈( )
set
∆∆ 
{
∆∆ 
m_spriteAsset
∆∆ 
=
∆∆  !
value
∆∆" '
;
∆∆' (%
m_havePropertiesChanged
∆∆) @
=
∆∆A B
true
∆∆C G
;
∆∆G H
SetVerticesDirty
∆∆I Y
(
∆∆Y Z
)
∆∆Z [
;
∆∆[ \
SetLayoutDirty
∆∆] k
(
∆∆k l
)
∆∆l m
;
∆∆m n
}
∆∆o p
}
«« 	
[
»» 	
SerializeField
»»	 
]
»» 
	protected
…… 
TMP_SpriteAsset
…… !
m_spriteAsset
……" /
;
……/ 0
public
œœ 
bool
œœ 
tintAllSprites
œœ "
{
–– 	
get
—— 
{
—— 
return
—— 
m_tintAllSprites
—— )
;
——) *
}
——+ ,
set
““ 
{
““ 
if
““ 
(
““ 
m_tintAllSprites
““ &
==
““' )
value
““* /
)
““/ 0
return
““1 7
;
““7 8
m_tintAllSprites
““9 I
=
““J K
value
““L Q
;
““Q R%
m_havePropertiesChanged
““S j
=
““k l
true
““m q
;
““q r
SetVerticesDirty““s É
(““É Ñ
)““Ñ Ö
;““Ö Ü
}““á à
}
”” 	
[
‘‘ 	
SerializeField
‘‘	 
]
‘‘ 
	protected
’’ 
bool
’’ 
m_tintAllSprites
’’ '
;
’’' (
	protected
÷÷ 
bool
÷÷ 
m_tintSprite
÷÷ #
;
÷÷# $
	protected
◊◊ 
Color32
◊◊ 
m_spriteColor
◊◊ '
;
◊◊' (
public
‹‹ 
TMP_StyleSheet
‹‹ 

styleSheet
‹‹ (
{
›› 	
get
ﬁﬁ 
{
ﬁﬁ 
return
ﬁﬁ 
m_StyleSheet
ﬁﬁ %
;
ﬁﬁ% &
}
ﬁﬁ' (
set
ﬂﬂ 
{
ﬂﬂ 
m_StyleSheet
ﬂﬂ 
=
ﬂﬂ  
value
ﬂﬂ! &
;
ﬂﬂ& '%
m_havePropertiesChanged
ﬂﬂ( ?
=
ﬂﬂ@ A
true
ﬂﬂB F
;
ﬂﬂF G
SetVerticesDirty
ﬂﬂH X
(
ﬂﬂX Y
)
ﬂﬂY Z
;
ﬂﬂZ [
SetLayoutDirty
ﬂﬂ\ j
(
ﬂﬂj k
)
ﬂﬂk l
;
ﬂﬂl m
}
ﬂﬂn o
}
‡‡ 	
[
·· 	
SerializeField
··	 
]
·· 
	protected
‚‚ 
TMP_StyleSheet
‚‚  
m_StyleSheet
‚‚! -
;
‚‚- .
public
ÁÁ 
	TMP_Style
ÁÁ 
	textStyle
ÁÁ "
{
ËË 	
get
ÈÈ 
{
ÍÍ 
m_TextStyle
ÎÎ 
=
ÎÎ 
GetStyle
ÎÎ &
(
ÎÎ& '!
m_TextStyleHashCode
ÎÎ' :
)
ÎÎ: ;
;
ÎÎ; <
if
ÌÌ 
(
ÌÌ 
m_TextStyle
ÌÌ 
==
ÌÌ  "
null
ÌÌ# '
)
ÌÌ' (
{
ÓÓ 
m_TextStyle
ÔÔ 
=
ÔÔ  !
	TMP_Style
ÔÔ" +
.
ÔÔ+ ,
NormalStyle
ÔÔ, 7
;
ÔÔ7 8!
m_TextStyleHashCode
 '
=
( )
m_TextStyle
* 5
.
5 6
hashCode
6 >
;
> ?
}
ÒÒ 
return
ÛÛ 
m_TextStyle
ÛÛ "
;
ÛÛ" #
}
ÙÙ 
set
ˆˆ 
{
ˆˆ 
m_TextStyle
ˆˆ 
=
ˆˆ 
value
ˆˆ  %
;
ˆˆ% &!
m_TextStyleHashCode
ˆˆ' :
=
ˆˆ; <
m_TextStyle
ˆˆ= H
.
ˆˆH I
hashCode
ˆˆI Q
;
ˆˆQ R%
m_havePropertiesChanged
ˆˆS j
=
ˆˆk l
true
ˆˆm q
;
ˆˆq r
SetVerticesDirtyˆˆs É
(ˆˆÉ Ñ
)ˆˆÑ Ö
;ˆˆÖ Ü
SetLayoutDirtyˆˆá ï
(ˆˆï ñ
)ˆˆñ ó
;ˆˆó ò
}ˆˆô ö
}
˜˜ 	
internal
¯¯ 
	TMP_Style
¯¯ 
m_TextStyle
¯¯ &
;
¯¯& '
[
˘˘ 	
SerializeField
˘˘	 
]
˘˘ 
	protected
˙˙ 
int
˙˙ !
m_TextStyleHashCode
˙˙ )
;
˙˙) *
public
ˇˇ 
bool
ˇˇ 
overrideColorTags
ˇˇ %
{
ÄÄ 	
get
ÅÅ 
{
ÅÅ 
return
ÅÅ "
m_overrideHtmlColors
ÅÅ -
;
ÅÅ- .
}
ÅÅ/ 0
set
ÇÇ 
{
ÇÇ 
if
ÇÇ 
(
ÇÇ "
m_overrideHtmlColors
ÇÇ *
==
ÇÇ+ -
value
ÇÇ. 3
)
ÇÇ3 4
return
ÇÇ5 ;
;
ÇÇ; <%
m_havePropertiesChanged
ÇÇ= T
=
ÇÇU V
true
ÇÇW [
;
ÇÇ[ \"
m_overrideHtmlColors
ÇÇ] q
=
ÇÇr s
value
ÇÇt y
;
ÇÇy z
SetVerticesDirtyÇÇ{ ã
(ÇÇã å
)ÇÇå ç
;ÇÇç é
}ÇÇè ê
}
ÉÉ 	
[
ÑÑ 	
SerializeField
ÑÑ	 
]
ÑÑ 
	protected
ÖÖ 
bool
ÖÖ "
m_overrideHtmlColors
ÖÖ +
=
ÖÖ, -
false
ÖÖ. 3
;
ÖÖ3 4
public
ãã 
Color32
ãã 
	faceColor
ãã  
{
åå 	
get
çç 
{
éé 
if
èè 
(
èè 
m_sharedMaterial
èè $
==
èè% '
null
èè( ,
)
èè, -
return
èè. 4
m_faceColor
èè5 @
;
èè@ A
m_faceColor
ëë 
=
ëë 
m_sharedMaterial
ëë .
.
ëë. /
GetColor
ëë/ 7
(
ëë7 8
ShaderUtilities
ëë8 G
.
ëëG H
ID_FaceColor
ëëH T
)
ëëT U
;
ëëU V
return
íí 
m_faceColor
íí "
;
íí" #
}
ìì 
set
ïï 
{
ïï 
if
ïï 
(
ïï 
m_faceColor
ïï !
.
ïï! "
Compare
ïï" )
(
ïï) *
value
ïï* /
)
ïï/ 0
)
ïï0 1
return
ïï2 8
;
ïï8 9
SetFaceColor
ïï: F
(
ïïF G
value
ïïG L
)
ïïL M
;
ïïM N%
m_havePropertiesChanged
ïïO f
=
ïïg h
true
ïïi m
;
ïïm n
m_faceColor
ïïo z
=
ïï{ |
valueïï} Ç
;ïïÇ É 
SetVerticesDirtyïïÑ î
(ïïî ï
)ïïï ñ
;ïïñ ó 
SetMaterialDirtyïïò ®
(ïï® ©
)ïï© ™
;ïï™ ´
}ïï¨ ≠
}
ññ 	
[
óó 	
SerializeField
óó	 
]
óó 
	protected
òò 
Color32
òò 
m_faceColor
òò %
=
òò& '
Color
òò( -
.
òò- .
white
òò. 3
;
òò3 4
public
ûû 
Color32
ûû 
outlineColor
ûû #
{
üü 	
get
†† 
{
°° 
if
¢¢ 
(
¢¢ 
m_sharedMaterial
¢¢ $
==
¢¢% '
null
¢¢( ,
)
¢¢, -
return
¢¢. 4
m_outlineColor
¢¢5 C
;
¢¢C D
m_outlineColor
§§ 
=
§§  
m_sharedMaterial
§§! 1
.
§§1 2
GetColor
§§2 :
(
§§: ;
ShaderUtilities
§§; J
.
§§J K
ID_OutlineColor
§§K Z
)
§§Z [
;
§§[ \
return
•• 
m_outlineColor
•• %
;
••% &
}
¶¶ 
set
®® 
{
®® 
if
®® 
(
®® 
m_outlineColor
®® $
.
®®$ %
Compare
®®% ,
(
®®, -
value
®®- 2
)
®®2 3
)
®®3 4
return
®®5 ;
;
®®; <
SetOutlineColor
®®= L
(
®®L M
value
®®M R
)
®®R S
;
®®S T%
m_havePropertiesChanged
®®U l
=
®®m n
true
®®o s
;
®®s t
m_outlineColor®®u É
=®®Ñ Ö
value®®Ü ã
;®®ã å 
SetVerticesDirty®®ç ù
(®®ù û
)®®û ü
;®®ü †
}®®° ¢
}
©© 	
	protected
´´ 
Color32
´´ 
m_outlineColor
´´ (
=
´´) *
Color
´´+ 0
.
´´0 1
black
´´1 6
;
´´6 7
public
±± 
float
±± 
outlineWidth
±± !
{
≤≤ 	
get
≥≥ 
{
¥¥ 
if
µµ 
(
µµ 
m_sharedMaterial
µµ $
==
µµ% '
null
µµ( ,
)
µµ, -
return
µµ. 4
m_outlineWidth
µµ5 C
;
µµC D
m_outlineWidth
∑∑ 
=
∑∑  
m_sharedMaterial
∑∑! 1
.
∑∑1 2
GetFloat
∑∑2 :
(
∑∑: ;
ShaderUtilities
∑∑; J
.
∑∑J K
ID_OutlineWidth
∑∑K Z
)
∑∑Z [
;
∑∑[ \
return
∏∏ 
m_outlineWidth
∏∏ %
;
∏∏% &
}
ππ 
set
∫∫ 
{
∫∫ 
if
∫∫ 
(
∫∫ 
m_outlineWidth
∫∫ $
==
∫∫% '
value
∫∫( -
)
∫∫- .
return
∫∫/ 5
;
∫∫5 6!
SetOutlineThickness
∫∫7 J
(
∫∫J K
value
∫∫K P
)
∫∫P Q
;
∫∫Q R%
m_havePropertiesChanged
∫∫S j
=
∫∫k l
true
∫∫m q
;
∫∫q r
m_outlineWidth∫∫s Å
=∫∫Ç É
value∫∫Ñ â
;∫∫â ä 
SetVerticesDirty∫∫ã õ
(∫∫õ ú
)∫∫ú ù
;∫∫ù û
}∫∫ü †
}
ªª 	
	protected
ºº 
float
ºº 
m_outlineWidth
ºº &
=
ºº' (
$num
ºº) -
;
ºº- .
public
¬¬ 
float
¬¬ 
fontSize
¬¬ 
{
√√ 	
get
ƒƒ 
{
ƒƒ 
return
ƒƒ 

m_fontSize
ƒƒ #
;
ƒƒ# $
}
ƒƒ% &
set
≈≈ 
{
≈≈ 
if
≈≈ 
(
≈≈ 

m_fontSize
≈≈  
==
≈≈! #
value
≈≈$ )
)
≈≈) *
return
≈≈+ 1
;
≈≈1 2%
m_havePropertiesChanged
≈≈3 J
=
≈≈K L
true
≈≈M Q
;
≈≈Q R

m_fontSize
≈≈S ]
=
≈≈^ _
value
≈≈` e
;
≈≈e f
if
≈≈g i
(
≈≈j k
!
≈≈k l 
m_enableAutoSizing
≈≈l ~
)
≈≈~ 
m_fontSizeBase≈≈Ä é
=≈≈è ê

m_fontSize≈≈ë õ
;≈≈õ ú 
SetVerticesDirty≈≈ù ≠
(≈≈≠ Æ
)≈≈Æ Ø
;≈≈Ø ∞
SetLayoutDirty≈≈± ø
(≈≈ø ¿
)≈≈¿ ¡
;≈≈¡ ¬
}≈≈√ ƒ
}
∆∆ 	
[
«« 	
SerializeField
««	 
]
«« 
	protected
»» 
float
»» 

m_fontSize
»» "
=
»»# $
-
»»% &
$num
»»& (
;
»»( )
	protected
…… 
float
…… 
m_currentFontSize
…… )
;
……) *
[
   	
SerializeField
  	 
]
   
	protected
ÀÀ 
float
ÀÀ 
m_fontSizeBase
ÀÀ &
=
ÀÀ' (
$num
ÀÀ) +
;
ÀÀ+ ,
	protected
ÃÃ %
TMP_TextProcessingStack
ÃÃ )
<
ÃÃ) *
float
ÃÃ* /
>
ÃÃ/ 0
m_sizeStack
ÃÃ1 <
=
ÃÃ= >
new
ÃÃ? B%
TMP_TextProcessingStack
ÃÃC Z
<
ÃÃZ [
float
ÃÃ[ `
>
ÃÃ` a
(
ÃÃa b
$num
ÃÃb d
)
ÃÃd e
;
ÃÃe f
public
““ 

FontWeight
““ 

fontWeight
““ $
{
”” 	
get
‘‘ 
{
‘‘ 
return
‘‘ 
m_fontWeight
‘‘ %
;
‘‘% &
}
‘‘' (
set
’’ 
{
’’ 
if
’’ 
(
’’ 
m_fontWeight
’’ "
==
’’# %
value
’’& +
)
’’+ ,
return
’’- 3
;
’’3 4
m_fontWeight
’’5 A
=
’’B C
value
’’D I
;
’’I J%
m_havePropertiesChanged
’’K b
=
’’c d
true
’’e i
;
’’i j
SetVerticesDirty
’’k {
(
’’{ |
)
’’| }
;
’’} ~
SetLayoutDirty’’ ç
(’’ç é
)’’é è
;’’è ê
}’’ë í
}
÷÷ 	
[
◊◊ 	
SerializeField
◊◊	 
]
◊◊ 
	protected
ÿÿ 

FontWeight
ÿÿ 
m_fontWeight
ÿÿ )
=
ÿÿ* +

FontWeight
ÿÿ, 6
.
ÿÿ6 7
Regular
ÿÿ7 >
;
ÿÿ> ?
	protected
ŸŸ 

FontWeight
ŸŸ "
m_FontWeightInternal
ŸŸ 1
=
ŸŸ2 3

FontWeight
ŸŸ4 >
.
ŸŸ> ?
Regular
ŸŸ? F
;
ŸŸF G
	protected
⁄⁄ %
TMP_TextProcessingStack
⁄⁄ )
<
⁄⁄) *

FontWeight
⁄⁄* 4
>
⁄⁄4 5
m_FontWeightStack
⁄⁄6 G
=
⁄⁄H I
new
⁄⁄J M%
TMP_TextProcessingStack
⁄⁄N e
<
⁄⁄e f

FontWeight
⁄⁄f p
>
⁄⁄p q
(
⁄⁄q r
$num
⁄⁄r s
)
⁄⁄s t
;
⁄⁄t u
public
ﬂﬂ 
float
ﬂﬂ 
pixelsPerUnit
ﬂﬂ "
{
‡‡ 	
get
·· 
{
‚‚ 
var
„„ 
localCanvas
„„ 
=
„„  !
canvas
„„" (
;
„„( )
if
‰‰ 
(
‰‰ 
!
‰‰ 
localCanvas
‰‰  
)
‰‰  !
return
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
if
ÁÁ 
(
ÁÁ 
!
ÁÁ 
font
ÁÁ 
)
ÁÁ 
return
ËË 
localCanvas
ËË &
.
ËË& '
scaleFactor
ËË' 2
;
ËË2 3
if
ÍÍ 
(
ÍÍ  
m_currentFontAsset
ÍÍ &
==
ÍÍ' )
null
ÍÍ* .
||
ÍÍ/ 1 
m_currentFontAsset
ÍÍ2 D
.
ÍÍD E
faceInfo
ÍÍE M
.
ÍÍM N
	pointSize
ÍÍN W
<=
ÍÍX Z
$num
ÍÍ[ \
||
ÍÍ] _

m_fontSize
ÍÍ` j
<=
ÍÍk m
$num
ÍÍn o
)
ÍÍo p
return
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
return
ÏÏ 

m_fontSize
ÏÏ !
/
ÏÏ" # 
m_currentFontAsset
ÏÏ$ 6
.
ÏÏ6 7
faceInfo
ÏÏ7 ?
.
ÏÏ? @
	pointSize
ÏÏ@ I
;
ÏÏI J
}
ÌÌ 
}
ÓÓ 	
public
ÙÙ 
bool
ÙÙ 
enableAutoSizing
ÙÙ $
{
ıı 	
get
ˆˆ 
{
ˆˆ 
return
ˆˆ  
m_enableAutoSizing
ˆˆ +
;
ˆˆ+ ,
}
ˆˆ- .
set
˜˜ 
{
˜˜ 
if
˜˜ 
(
˜˜  
m_enableAutoSizing
˜˜ (
==
˜˜) +
value
˜˜, 1
)
˜˜1 2
return
˜˜3 9
;
˜˜9 : 
m_enableAutoSizing
˜˜; M
=
˜˜N O
value
˜˜P U
;
˜˜U V
SetVerticesDirty
˜˜W g
(
˜˜g h
)
˜˜h i
;
˜˜i j
SetLayoutDirty
˜˜k y
(
˜˜y z
)
˜˜z {
;
˜˜{ |
}
˜˜} ~
}
¯¯ 	
[
˘˘ 	
SerializeField
˘˘	 
]
˘˘ 
	protected
˙˙ 
bool
˙˙  
m_enableAutoSizing
˙˙ )
;
˙˙) *
	protected
˚˚ 
float
˚˚ 
m_maxFontSize
˚˚ %
;
˚˚% &
	protected
¸¸ 
float
¸¸ 
m_minFontSize
¸¸ %
;
¸¸% &
	protected
˝˝ 
int
˝˝ &
m_AutoSizeIterationCount
˝˝ .
;
˝˝. /
	protected
˛˛ 
int
˛˛ )
m_AutoSizeMaxIterationCount
˛˛ 1
=
˛˛2 3
$num
˛˛4 7
;
˛˛7 8
	protected
ÄÄ 
bool
ÄÄ &
m_IsAutoSizePointSizeSet
ÄÄ /
;
ÄÄ/ 0
public
ÜÜ 
float
ÜÜ 
fontSizeMin
ÜÜ  
{
áá 	
get
àà 
{
àà 
return
àà 
m_fontSizeMin
àà &
;
àà& '
}
àà( )
set
ââ 
{
ââ 
if
ââ 
(
ââ 
m_fontSizeMin
ââ #
==
ââ$ &
value
ââ' ,
)
ââ, -
return
ââ. 4
;
ââ4 5
m_fontSizeMin
ââ6 C
=
ââD E
value
ââF K
;
ââK L
SetVerticesDirty
ââM ]
(
ââ] ^
)
ââ^ _
;
ââ_ `
SetLayoutDirty
ââa o
(
ââo p
)
ââp q
;
ââq r
}
ââs t
}
ää 	
[
ãã 	
SerializeField
ãã	 
]
ãã 
	protected
åå 
float
åå 
m_fontSizeMin
åå %
=
åå& '
$num
åå( )
;
åå) *
public
íí 
float
íí 
fontSizeMax
íí  
{
ìì 	
get
îî 
{
îî 
return
îî 
m_fontSizeMax
îî &
;
îî& '
}
îî( )
set
ïï 
{
ïï 
if
ïï 
(
ïï 
m_fontSizeMax
ïï #
==
ïï$ &
value
ïï' ,
)
ïï, -
return
ïï. 4
;
ïï4 5
m_fontSizeMax
ïï6 C
=
ïïD E
value
ïïF K
;
ïïK L
SetVerticesDirty
ïïM ]
(
ïï] ^
)
ïï^ _
;
ïï_ `
SetLayoutDirty
ïïa o
(
ïïo p
)
ïïp q
;
ïïq r
}
ïïs t
}
ññ 	
[
óó 	
SerializeField
óó	 
]
óó 
	protected
òò 
float
òò 
m_fontSizeMax
òò %
=
òò& '
$num
òò( )
;
òò) *
public
ûû 

FontStyles
ûû 
	fontStyle
ûû #
{
üü 	
get
†† 
{
†† 
return
†† 
m_fontStyle
†† $
;
††$ %
}
††& '
set
°° 
{
°° 
if
°° 
(
°° 
m_fontStyle
°° !
==
°°" $
value
°°% *
)
°°* +
return
°°, 2
;
°°2 3
m_fontStyle
°°4 ?
=
°°@ A
value
°°B G
;
°°G H%
m_havePropertiesChanged
°°I `
=
°°a b
true
°°c g
;
°°g h
SetVerticesDirty
°°i y
(
°°y z
)
°°z {
;
°°{ |
SetLayoutDirty°°} ã
(°°ã å
)°°å ç
;°°ç é
}°°è ê
}
¢¢ 	
[
££ 	
SerializeField
££	 
]
££ 
	protected
§§ 

FontStyles
§§ 
m_fontStyle
§§ (
=
§§) *

FontStyles
§§+ 5
.
§§5 6
Normal
§§6 <
;
§§< =
	protected
•• 

FontStyles
•• !
m_FontStyleInternal
•• 0
=
••1 2

FontStyles
••3 =
.
••= >
Normal
••> D
;
••D E
	protected
¶¶  
TMP_FontStyleStack
¶¶ $
m_fontStyleStack
¶¶% 5
;
¶¶5 6
public
´´ 
bool
´´ 
isUsingBold
´´ 
{
´´  !
get
´´" %
{
´´& '
return
´´( .
m_isUsingBold
´´/ <
;
´´< =
}
´´> ?
}
´´@ A
	protected
¨¨ 
bool
¨¨ 
m_isUsingBold
¨¨ $
=
¨¨% &
false
¨¨' ,
;
¨¨, -
public
±± (
HorizontalAlignmentOptions
±± )!
horizontalAlignment
±±* =
{
≤≤ 	
get
≥≥ 
{
≥≥ 
return
≥≥ #
m_HorizontalAlignment
≥≥ .
;
≥≥. /
}
≥≥0 1
set
¥¥ 
{
µµ 
if
∂∂ 
(
∂∂ #
m_HorizontalAlignment
∂∂ )
==
∂∂* ,
value
∂∂- 2
)
∂∂2 3
return
∑∑ 
;
∑∑ #
m_HorizontalAlignment
ππ %
=
ππ& '
value
ππ( -
;
ππ- .%
m_havePropertiesChanged
ªª '
=
ªª( )
true
ªª* .
;
ªª. /
SetVerticesDirty
ºº  
(
ºº  !
)
ºº! "
;
ºº" #
}
ΩΩ 
}
ææ 	
[
øø 	
SerializeField
øø	 
]
øø 
	protected
¿¿ (
HorizontalAlignmentOptions
¿¿ ,#
m_HorizontalAlignment
¿¿- B
=
¿¿C D(
HorizontalAlignmentOptions
¿¿E _
.
¿¿_ `
Left
¿¿` d
;
¿¿d e
public
≈≈ &
VerticalAlignmentOptions
≈≈ '
verticalAlignment
≈≈( 9
{
∆∆ 	
get
«« 
{
«« 
return
«« !
m_VerticalAlignment
«« ,
;
««, -
}
««. /
set
»» 
{
…… 
if
   
(
   !
m_VerticalAlignment
   '
==
  ( *
value
  + 0
)
  0 1
return
ÀÀ 
;
ÀÀ !
m_VerticalAlignment
ÕÕ #
=
ÕÕ$ %
value
ÕÕ& +
;
ÕÕ+ ,%
m_havePropertiesChanged
œœ '
=
œœ( )
true
œœ* .
;
œœ. /
SetVerticesDirty
––  
(
––  !
)
––! "
;
––" #
}
—— 
}
““ 	
[
”” 	
SerializeField
””	 
]
”” 
	protected
‘‘ &
VerticalAlignmentOptions
‘‘ *!
m_VerticalAlignment
‘‘+ >
=
‘‘? @&
VerticalAlignmentOptions
‘‘A Y
.
‘‘Y Z
Top
‘‘Z ]
;
‘‘] ^
public
ŸŸ "
TextAlignmentOptions
ŸŸ #
	alignment
ŸŸ$ -
{
⁄⁄ 	
get
€€ 
{
€€ 
return
€€ 
(
€€ "
TextAlignmentOptions
€€ .
)
€€. /
(
€€/ 0
(
€€0 1
int
€€1 4
)
€€4 5#
m_HorizontalAlignment
€€5 J
|
€€K L
(
€€M N
int
€€N Q
)
€€Q R!
m_VerticalAlignment
€€R e
)
€€e f
;
€€f g
}
€€h i
set
‹‹ 
{
›› (
HorizontalAlignmentOptions
ﬁﬁ *!
horizontalAlignment
ﬁﬁ+ >
=
ﬁﬁ? @
(
ﬁﬁA B(
HorizontalAlignmentOptions
ﬁﬁB \
)
ﬁﬁ\ ]
(
ﬁﬁ] ^
(
ﬁﬁ^ _
int
ﬁﬁ_ b
)
ﬁﬁb c
value
ﬁﬁc h
&
ﬁﬁi j
$num
ﬁﬁk o
)
ﬁﬁo p
;
ﬁﬁp q&
VerticalAlignmentOptions
ﬂﬂ (
verticalAlignment
ﬂﬂ) :
=
ﬂﬂ; <
(
ﬂﬂ= >&
VerticalAlignmentOptions
ﬂﬂ> V
)
ﬂﬂV W
(
ﬂﬂW X
(
ﬂﬂX Y
int
ﬂﬂY \
)
ﬂﬂ\ ]
value
ﬂﬂ] b
&
ﬂﬂc d
$num
ﬂﬂe k
)
ﬂﬂk l
;
ﬂﬂl m
if
·· 
(
·· #
m_HorizontalAlignment
·· )
==
··* ,!
horizontalAlignment
··- @
&&
··A C!
m_VerticalAlignment
··D W
==
··X Z
verticalAlignment
··[ l
)
··l m
return
‚‚ 
;
‚‚ #
m_HorizontalAlignment
‰‰ %
=
‰‰& '!
horizontalAlignment
‰‰( ;
;
‰‰; <!
m_VerticalAlignment
ÂÂ #
=
ÂÂ$ %
verticalAlignment
ÂÂ& 7
;
ÂÂ7 8%
m_havePropertiesChanged
ÊÊ '
=
ÊÊ( )
true
ÊÊ* .
;
ÊÊ. /
SetVerticesDirty
ÁÁ  
(
ÁÁ  !
)
ÁÁ! "
;
ÁÁ" #
}
ËË 
}
ÈÈ 	
[
ÍÍ 	
SerializeField
ÍÍ	 
]
ÍÍ 
[
ÎÎ 	
UnityEngine
ÎÎ	 
.
ÎÎ 
Serialization
ÎÎ "
.
ÎÎ" #"
FormerlySerializedAs
ÎÎ# 7
(
ÎÎ7 8
$str
ÎÎ8 M
)
ÎÎM N
]
ÎÎN O
	protected
ÏÏ "
TextAlignmentOptions
ÏÏ &
m_textAlignment
ÏÏ' 6
=
ÏÏ7 8"
TextAlignmentOptions
ÏÏ9 M
.
ÏÏM N
	Converted
ÏÏN W
;
ÏÏW X
	protected
ÓÓ (
HorizontalAlignmentOptions
ÓÓ ,!
m_lineJustification
ÓÓ- @
;
ÓÓ@ A
	protected
ÔÔ %
TMP_TextProcessingStack
ÔÔ )
<
ÔÔ) *(
HorizontalAlignmentOptions
ÔÔ* D
>
ÔÔD E&
m_lineJustificationStack
ÔÔF ^
=
ÔÔ_ `
new
ÔÔa d%
TMP_TextProcessingStack
ÔÔe |
<
ÔÔ| })
HorizontalAlignmentOptionsÔÔ} ó
>ÔÔó ò
(ÔÔò ô
newÔÔô ú*
HorizontalAlignmentOptionsÔÔù ∑
[ÔÔ∑ ∏
$numÔÔ∏ ∫
]ÔÔ∫ ª
)ÔÔª º
;ÔÔº Ω
	protected
 
Vector3
 
[
 
]
 )
m_textContainerLocalCorners
 7
=
8 9
new
: =
Vector3
> E
[
E F
$num
F G
]
G H
;
H I
public
ÅÅ 
float
ÅÅ 
characterSpacing
ÅÅ %
{
ÇÇ 	
get
ÉÉ 
{
ÉÉ 
return
ÉÉ  
m_characterSpacing
ÉÉ +
;
ÉÉ+ ,
}
ÉÉ- .
set
ÑÑ 
{
ÑÑ 
if
ÑÑ 
(
ÑÑ  
m_characterSpacing
ÑÑ (
==
ÑÑ) +
value
ÑÑ, 1
)
ÑÑ1 2
return
ÑÑ3 9
;
ÑÑ9 :%
m_havePropertiesChanged
ÑÑ; R
=
ÑÑS T
true
ÑÑU Y
;
ÑÑY Z 
m_characterSpacing
ÑÑ[ m
=
ÑÑn o
value
ÑÑp u
;
ÑÑu v
SetVerticesDirtyÑÑw á
(ÑÑá à
)ÑÑà â
;ÑÑâ ä
SetLayoutDirtyÑÑã ô
(ÑÑô ö
)ÑÑö õ
;ÑÑõ ú
}ÑÑù û
}
ÖÖ 	
[
ÜÜ 	
SerializeField
ÜÜ	 
]
ÜÜ 
	protected
áá 
float
áá  
m_characterSpacing
áá *
=
áá+ ,
$num
áá- .
;
áá. /
	protected
àà 
float
àà 

m_cSpacing
àà "
=
àà# $
$num
àà% &
;
àà& '
	protected
ââ 
float
ââ 
m_monoSpacing
ââ %
=
ââ& '
$num
ââ( )
;
ââ) *
public
éé 
float
éé 
wordSpacing
éé  
{
èè 	
get
êê 
{
êê 
return
êê 
m_wordSpacing
êê &
;
êê& '
}
êê( )
set
ëë 
{
ëë 
if
ëë 
(
ëë 
m_wordSpacing
ëë #
==
ëë$ &
value
ëë' ,
)
ëë, -
return
ëë. 4
;
ëë4 5%
m_havePropertiesChanged
ëë6 M
=
ëëN O
true
ëëP T
;
ëëT U
m_wordSpacing
ëëV c
=
ëëd e
value
ëëf k
;
ëëk l
SetVerticesDirty
ëëm }
(
ëë} ~
)
ëë~ 
;ëë Ä
SetLayoutDirtyëëÅ è
(ëëè ê
)ëëê ë
;ëëë í
}ëëì î
}
íí 	
[
ìì 	
SerializeField
ìì	 
]
ìì 
	protected
îî 
float
îî 
m_wordSpacing
îî %
=
îî& '
$num
îî( )
;
îî) *
public
ôô 
float
ôô 
lineSpacing
ôô  
{
öö 	
get
õõ 
{
õõ 
return
õõ 
m_lineSpacing
õõ &
;
õõ& '
}
õõ( )
set
úú 
{
úú 
if
úú 
(
úú 
m_lineSpacing
úú #
==
úú$ &
value
úú' ,
)
úú, -
return
úú. 4
;
úú4 5%
m_havePropertiesChanged
úú6 M
=
úúN O
true
úúP T
;
úúT U
m_lineSpacing
úúV c
=
úúd e
value
úúf k
;
úúk l
SetVerticesDirty
úúm }
(
úú} ~
)
úú~ 
;úú Ä
SetLayoutDirtyúúÅ è
(úúè ê
)úúê ë
;úúë í
}úúì î
}
ùù 	
[
ûû 	
SerializeField
ûû	 
]
ûû 
	protected
üü 
float
üü 
m_lineSpacing
üü %
=
üü& '
$num
üü( )
;
üü) *
	protected
†† 
float
††  
m_lineSpacingDelta
†† *
=
††+ ,
$num
††- .
;
††. /
	protected
°° 
float
°° 
m_lineHeight
°° $
=
°°% &
TMP_Math
°°' /
.
°°/ 0
FLOAT_UNSET
°°0 ;
;
°°; <
	protected
¢¢ 
bool
¢¢ #
m_IsDrivenLineSpacing
¢¢ ,
;
¢¢, -
public
®® 
float
®® #
lineSpacingAdjustment
®® *
{
©© 	
get
™™ 
{
™™ 
return
™™ 
m_lineSpacingMax
™™ )
;
™™) *
}
™™+ ,
set
´´ 
{
´´ 
if
´´ 
(
´´ 
m_lineSpacingMax
´´ &
==
´´' )
value
´´* /
)
´´/ 0
return
´´1 7
;
´´7 8%
m_havePropertiesChanged
´´9 P
=
´´Q R
true
´´S W
;
´´W X
m_lineSpacingMax
´´Y i
=
´´j k
value
´´l q
;
´´q r
SetVerticesDirty´´s É
(´´É Ñ
)´´Ñ Ö
;´´Ö Ü
SetLayoutDirty´´á ï
(´´ï ñ
)´´ñ ó
;´´ó ò
}´´ô ö
}
¨¨ 	
[
≠≠ 	
SerializeField
≠≠	 
]
≠≠ 
	protected
ÆÆ 
float
ÆÆ 
m_lineSpacingMax
ÆÆ (
=
ÆÆ) *
$num
ÆÆ+ ,
;
ÆÆ, -
public
¥¥ 
float
¥¥ 
paragraphSpacing
¥¥ %
{
µµ 	
get
∂∂ 
{
∂∂ 
return
∂∂  
m_paragraphSpacing
∂∂ +
;
∂∂+ ,
}
∂∂- .
set
∑∑ 
{
∑∑ 
if
∑∑ 
(
∑∑  
m_paragraphSpacing
∑∑ (
==
∑∑) +
value
∑∑, 1
)
∑∑1 2
return
∑∑3 9
;
∑∑9 :%
m_havePropertiesChanged
∑∑; R
=
∑∑S T
true
∑∑U Y
;
∑∑Y Z 
m_paragraphSpacing
∑∑[ m
=
∑∑n o
value
∑∑p u
;
∑∑u v
SetVerticesDirty∑∑w á
(∑∑á à
)∑∑à â
;∑∑â ä
SetLayoutDirty∑∑ã ô
(∑∑ô ö
)∑∑ö õ
;∑∑õ ú
}∑∑ù û
}
∏∏ 	
[
ππ 	
SerializeField
ππ	 
]
ππ 
	protected
∫∫ 
float
∫∫  
m_paragraphSpacing
∫∫ *
=
∫∫+ ,
$num
∫∫- .
;
∫∫. /
public
¿¿ 
float
¿¿ &
characterWidthAdjustment
¿¿ -
{
¡¡ 	
get
¬¬ 
{
¬¬ 
return
¬¬ 
m_charWidthMaxAdj
¬¬ *
;
¬¬* +
}
¬¬, -
set
√√ 
{
√√ 
if
√√ 
(
√√ 
m_charWidthMaxAdj
√√ '
==
√√( *
value
√√+ 0
)
√√0 1
return
√√2 8
;
√√8 9%
m_havePropertiesChanged
√√: Q
=
√√R S
true
√√T X
;
√√X Y
m_charWidthMaxAdj
√√Z k
=
√√l m
value
√√n s
;
√√s t
SetVerticesDirty√√u Ö
(√√Ö Ü
)√√Ü á
;√√á à
SetLayoutDirty√√â ó
(√√ó ò
)√√ò ô
;√√ô ö
}√√õ ú
}
ƒƒ 	
[
≈≈ 	
SerializeField
≈≈	 
]
≈≈ 
	protected
∆∆ 
float
∆∆ 
m_charWidthMaxAdj
∆∆ )
=
∆∆* +
$num
∆∆, .
;
∆∆. /
	protected
«« 
float
«« !
m_charWidthAdjDelta
«« +
=
««, -
$num
««. /
;
««/ 0
public
ÕÕ 
bool
ÕÕ  
enableWordWrapping
ÕÕ &
{
ŒŒ 	
get
œœ 
{
œœ 
return
œœ "
m_enableWordWrapping
œœ -
;
œœ- .
}
œœ/ 0
set
–– 
{
–– 
if
–– 
(
–– "
m_enableWordWrapping
–– *
==
––+ -
value
––. 3
)
––3 4
return
––5 ;
;
––; <%
m_havePropertiesChanged
––= T
=
––U V
true
––W [
;
––[ \"
m_enableWordWrapping
––] q
=
––r s
value
––t y
;
––y z
SetVerticesDirty––{ ã
(––ã å
)––å ç
;––ç é
SetLayoutDirty––è ù
(––ù û
)––û ü
;––ü †
}––° ¢
}
—— 	
[
““ 	
SerializeField
““	 
]
““ 
	protected
”” 
bool
”” "
m_enableWordWrapping
”” +
=
””, -
false
””. 3
;
””3 4
	protected
‘‘ 
bool
‘‘ *
m_isCharacterWrappingEnabled
‘‘ 3
=
‘‘4 5
false
‘‘6 ;
;
‘‘; <
	protected
’’ 
bool
’’ "
m_isNonBreakingSpace
’’ +
=
’’, -
false
’’. 3
;
’’3 4
	protected
÷÷ 
bool
÷÷ #
m_isIgnoringAlignment
÷÷ ,
;
÷÷, -
public
€€ 
float
€€  
wordWrappingRatios
€€ '
{
‹‹ 	
get
›› 
{
›› 
return
›› "
m_wordWrappingRatios
›› -
;
››- .
}
››/ 0
set
ﬁﬁ 
{
ﬁﬁ 
if
ﬁﬁ 
(
ﬁﬁ "
m_wordWrappingRatios
ﬁﬁ *
==
ﬁﬁ+ -
value
ﬁﬁ. 3
)
ﬁﬁ3 4
return
ﬁﬁ5 ;
;
ﬁﬁ; <"
m_wordWrappingRatios
ﬁﬁ= Q
=
ﬁﬁR S
value
ﬁﬁT Y
;
ﬁﬁY Z%
m_havePropertiesChanged
ﬁﬁ[ r
=
ﬁﬁs t
true
ﬁﬁu y
;
ﬁﬁy z
SetVerticesDirtyﬁﬁ{ ã
(ﬁﬁã å
)ﬁﬁå ç
;ﬁﬁç é
SetLayoutDirtyﬁﬁè ù
(ﬁﬁù û
)ﬁﬁû ü
;ﬁﬁü †
}ﬁﬁ° ¢
}
ﬂﬂ 	
[
‡‡ 	
SerializeField
‡‡	 
]
‡‡ 
	protected
·· 
float
·· "
m_wordWrappingRatios
·· ,
=
··- .
$num
··/ 3
;
··3 4
public
ÙÙ 
TextOverflowModes
ÙÙ  
overflowMode
ÙÙ! -
{
ıı 	
get
ˆˆ 
{
ˆˆ 
return
ˆˆ 
m_overflowMode
ˆˆ '
;
ˆˆ' (
}
ˆˆ) *
set
˜˜ 
{
˜˜ 
if
˜˜ 
(
˜˜ 
m_overflowMode
˜˜ $
==
˜˜% '
value
˜˜( -
)
˜˜- .
return
˜˜/ 5
;
˜˜5 6
m_overflowMode
˜˜7 E
=
˜˜F G
value
˜˜H M
;
˜˜M N%
m_havePropertiesChanged
˜˜O f
=
˜˜g h
true
˜˜i m
;
˜˜m n
SetVerticesDirty
˜˜o 
(˜˜ Ä
)˜˜Ä Å
;˜˜Å Ç
SetLayoutDirty˜˜É ë
(˜˜ë í
)˜˜í ì
;˜˜ì î
}˜˜ï ñ
}
¯¯ 	
[
˘˘ 	
SerializeField
˘˘	 
]
˘˘ 
	protected
˙˙ 
TextOverflowModes
˙˙ #
m_overflowMode
˙˙$ 2
=
˙˙3 4
TextOverflowModes
˙˙5 F
.
˙˙F G
Overflow
˙˙G O
;
˙˙O P
public
ÄÄ 
bool
ÄÄ 
isTextOverflowing
ÄÄ %
{
ÅÅ 	
get
ÇÇ 
{
ÇÇ 
if
ÇÇ 
(
ÇÇ +
m_firstOverflowCharacterIndex
ÇÇ 3
!=
ÇÇ4 6
-
ÇÇ7 8
$num
ÇÇ8 9
)
ÇÇ9 :
return
ÇÇ; A
true
ÇÇB F
;
ÇÇF G
return
ÇÇH N
false
ÇÇO T
;
ÇÇT U
}
ÇÇV W
}
ÉÉ 	
public
ââ 
int
ââ )
firstOverflowCharacterIndex
ââ .
{
ää 	
get
ãã 
{
ãã 
return
ãã +
m_firstOverflowCharacterIndex
ãã 6
;
ãã6 7
}
ãã8 9
}
åå 	
	protected
éé 
int
éé +
m_firstOverflowCharacterIndex
éé 3
=
éé4 5
-
éé6 7
$num
éé7 8
;
éé8 9
public
îî 
TMP_Text
îî !
linkedTextComponent
îî +
{
ïï 	
get
ññ 
{
ññ 
return
ññ #
m_linkedTextComponent
ññ .
;
ññ. /
}
ññ0 1
set
òò 
{
ôô 
if
öö 
(
öö 
value
öö 
==
öö 
null
öö !
)
öö! "
{
õõ (
ReleaseLinkedTextComponent
ùù .
(
ùù. /#
m_linkedTextComponent
ùù/ D
)
ùùD E
;
ùùE F#
m_linkedTextComponent
üü )
=
üü* +
value
üü, 1
;
üü1 2
}
†† 
else
°° 
if
°° 
(
°° $
IsSelfOrLinkedAncestor
°° /
(
°°/ 0
value
°°0 5
)
°°5 6
)
°°6 7
{
¢¢ 
return
§§ 
;
§§ 
}
•• 
else
¶¶ 
{
ßß (
ReleaseLinkedTextComponent
©© .
(
©©. /#
m_linkedTextComponent
©©/ D
)
©©D E
;
©©E F#
m_linkedTextComponent
´´ )
=
´´* +
value
´´, 1
;
´´1 2#
m_linkedTextComponent
¨¨ )
.
¨¨) *#
parentLinkedComponent
¨¨* ?
=
¨¨@ A
this
¨¨B F
;
¨¨F G
}
≠≠ %
m_havePropertiesChanged
ØØ '
=
ØØ( )
true
ØØ* .
;
ØØ. /
SetVerticesDirty
∞∞  
(
∞∞  !
)
∞∞! "
;
∞∞" #
SetLayoutDirty
±± 
(
±± 
)
±±  
;
±±  !
}
≤≤ 
}
≥≥ 	
[
¥¥ 	
SerializeField
¥¥	 
]
¥¥ 
	protected
µµ 
TMP_Text
µµ #
m_linkedTextComponent
µµ 0
;
µµ0 1
[
∂∂ 	
SerializeField
∂∂	 
]
∂∂ 
internal
∑∑ 
TMP_Text
∑∑ #
parentLinkedComponent
∑∑ /
;
∑∑/ 0
public
ΩΩ 
bool
ΩΩ 
isTextTruncated
ΩΩ #
{
ΩΩ$ %
get
ΩΩ& )
{
ΩΩ* +
return
ΩΩ, 2
m_isTextTruncated
ΩΩ3 D
;
ΩΩD E
}
ΩΩF G
}
ΩΩH I
	protected
øø 
bool
øø 
m_isTextTruncated
øø (
;
øø( )
public
≈≈ 
bool
≈≈ 
enableKerning
≈≈ !
{
∆∆ 	
get
«« 
{
«« 
return
«« 
m_enableKerning
«« (
;
««( )
}
««* +
set
»» 
{
»» 
if
»» 
(
»» 
m_enableKerning
»» %
==
»»& (
value
»») .
)
»». /
return
»»0 6
;
»»6 7%
m_havePropertiesChanged
»»8 O
=
»»P Q
true
»»R V
;
»»V W
m_enableKerning
»»X g
=
»»h i
value
»»j o
;
»»o p
SetVerticesDirty»»q Å
(»»Å Ç
)»»Ç É
;»»É Ñ
SetLayoutDirty»»Ö ì
(»»ì î
)»»î ï
;»»ï ñ
}»»ó ò
}
…… 	
[
   	
SerializeField
  	 
]
   
	protected
ÀÀ 
bool
ÀÀ 
m_enableKerning
ÀÀ &
;
ÀÀ& '
	protected
ÃÃ 
float
ÃÃ 0
"m_GlyphHorizontalAdvanceAdjustment
ÃÃ :
;
ÃÃ: ;
public
—— 
bool
—— 
extraPadding
——  
{
““ 	
get
”” 
{
”” 
return
”” "
m_enableExtraPadding
”” -
;
””- .
}
””/ 0
set
‘‘ 
{
‘‘ 
if
‘‘ 
(
‘‘ "
m_enableExtraPadding
‘‘ *
==
‘‘+ -
value
‘‘. 3
)
‘‘3 4
return
‘‘5 ;
;
‘‘; <%
m_havePropertiesChanged
‘‘= T
=
‘‘U V
true
‘‘W [
;
‘‘[ \"
m_enableExtraPadding
‘‘] q
=
‘‘r s
value
‘‘t y
;
‘‘y z 
UpdateMeshPadding‘‘{ å
(‘‘å ç
)‘‘ç é
;‘‘é è 
SetVerticesDirty‘‘ê †
(‘‘† °
)‘‘° ¢
;‘‘¢ £
}‘‘ª º
}
’’ 	
[
÷÷ 	
SerializeField
÷÷	 
]
÷÷ 
	protected
◊◊ 
bool
◊◊ "
m_enableExtraPadding
◊◊ +
=
◊◊, -
false
◊◊. 3
;
◊◊3 4
[
ÿÿ 	
SerializeField
ÿÿ	 
]
ÿÿ 
	protected
ŸŸ 
bool
ŸŸ "
checkPaddingRequired
ŸŸ +
;
ŸŸ+ ,
public
ﬂﬂ 
bool
ﬂﬂ 
richText
ﬂﬂ 
{
‡‡ 	
get
·· 
{
·· 
return
·· 
m_isRichText
·· %
;
··% &
}
··' (
set
‚‚ 
{
‚‚ 
if
‚‚ 
(
‚‚ 
m_isRichText
‚‚ "
==
‚‚# %
value
‚‚& +
)
‚‚+ ,
return
‚‚- 3
;
‚‚3 4
m_isRichText
‚‚5 A
=
‚‚B C
value
‚‚D I
;
‚‚I J%
m_havePropertiesChanged
‚‚K b
=
‚‚c d
true
‚‚e i
;
‚‚i j
SetVerticesDirty
‚‚k {
(
‚‚{ |
)
‚‚| }
;
‚‚} ~
SetLayoutDirty‚‚ ç
(‚‚ç é
)‚‚é è
;‚‚è ê
}‚‚ë í
}
„„ 	
[
‰‰ 	
SerializeField
‰‰	 
]
‰‰ 
	protected
ÂÂ 
bool
ÂÂ 
m_isRichText
ÂÂ #
=
ÂÂ$ %
true
ÂÂ& *
;
ÂÂ* +
public
ÎÎ 
bool
ÎÎ !
parseCtrlCharacters
ÎÎ '
{
ÏÏ 	
get
ÌÌ 
{
ÌÌ 
return
ÌÌ #
m_parseCtrlCharacters
ÌÌ .
;
ÌÌ. /
}
ÌÌ0 1
set
ÓÓ 
{
ÓÓ 
if
ÓÓ 
(
ÓÓ #
m_parseCtrlCharacters
ÓÓ +
==
ÓÓ, .
value
ÓÓ/ 4
)
ÓÓ4 5
return
ÓÓ6 <
;
ÓÓ< =#
m_parseCtrlCharacters
ÓÓ> S
=
ÓÓT U
value
ÓÓV [
;
ÓÓ[ \%
m_havePropertiesChanged
ÓÓ] t
=
ÓÓu v
true
ÓÓw {
;
ÓÓ{ |
SetVerticesDirtyÓÓ} ç
(ÓÓç é
)ÓÓé è
;ÓÓè ê
SetLayoutDirtyÓÓë ü
(ÓÓü †
)ÓÓ† °
;ÓÓ° ¢
}ÓÓ£ §
}
ÔÔ 	
[
 	
SerializeField
	 
]
 
	protected
ÒÒ 
bool
ÒÒ #
m_parseCtrlCharacters
ÒÒ ,
=
ÒÒ- .
true
ÒÒ/ 3
;
ÒÒ3 4
public
˜˜ 
bool
˜˜ 
	isOverlay
˜˜ 
{
¯¯ 	
get
˘˘ 
{
˘˘ 
return
˘˘ 
m_isOverlay
˘˘ $
;
˘˘$ %
}
˘˘& '
set
˙˙ 
{
˙˙ 
if
˙˙ 
(
˙˙ 
m_isOverlay
˙˙ !
==
˙˙" $
value
˙˙% *
)
˙˙* +
return
˙˙, 2
;
˙˙2 3
m_isOverlay
˙˙4 ?
=
˙˙@ A
value
˙˙B G
;
˙˙G H
SetShaderDepth
˙˙I W
(
˙˙W X
)
˙˙X Y
;
˙˙Y Z%
m_havePropertiesChanged
˙˙[ r
=
˙˙s t
true
˙˙u y
;
˙˙y z
SetVerticesDirty˙˙{ ã
(˙˙ã å
)˙˙å ç
;˙˙ç é
}˙˙è ê
}
˚˚ 	
	protected
¸¸ 
bool
¸¸ 
m_isOverlay
¸¸ "
=
¸¸# $
false
¸¸% *
;
¸¸* +
public
ÇÇ 
bool
ÇÇ 
isOrthographic
ÇÇ "
{
ÉÉ 	
get
ÑÑ 
{
ÑÑ 
return
ÑÑ 
m_isOrthographic
ÑÑ )
;
ÑÑ) *
}
ÑÑ+ ,
set
ÖÖ 
{
ÖÖ 
if
ÖÖ 
(
ÖÖ 
m_isOrthographic
ÖÖ &
==
ÖÖ' )
value
ÖÖ* /
)
ÖÖ/ 0
return
ÖÖ1 7
;
ÖÖ7 8%
m_havePropertiesChanged
ÖÖ9 P
=
ÖÖQ R
true
ÖÖS W
;
ÖÖW X
m_isOrthographic
ÖÖY i
=
ÖÖj k
value
ÖÖl q
;
ÖÖq r
SetVerticesDirtyÖÖs É
(ÖÖÉ Ñ
)ÖÖÑ Ö
;ÖÖÖ Ü
}ÖÖá à
}
ÜÜ 	
[
áá 	
SerializeField
áá	 
]
áá 
	protected
àà 
bool
àà 
m_isOrthographic
àà '
=
àà( )
false
àà* /
;
àà/ 0
public
éé 
bool
éé 
enableCulling
éé !
{
èè 	
get
êê 
{
êê 
return
êê  
m_isCullingEnabled
êê +
;
êê+ ,
}
êê- .
set
ëë 
{
ëë 
if
ëë 
(
ëë  
m_isCullingEnabled
ëë (
==
ëë) +
value
ëë, 1
)
ëë1 2
return
ëë3 9
;
ëë9 : 
m_isCullingEnabled
ëë; M
=
ëëN O
value
ëëP U
;
ëëU V

SetCulling
ëëW a
(
ëëa b
)
ëëb c
;
ëëc d%
m_havePropertiesChanged
ëëe |
=
ëë} ~
trueëë É
;ëëÉ Ñ
}ëëÖ Ü
}
íí 	
[
ìì 	
SerializeField
ìì	 
]
ìì 
	protected
îî 
bool
îî  
m_isCullingEnabled
îî )
=
îî* +
false
îî, 1
;
îî1 2
	protected
óó 
bool
óó  
m_isMaskingEnabled
óó )
;
óó) *
	protected
òò 
bool
òò "
isMaskUpdateRequired
òò +
;
òò+ ,
public
ùù 
bool
ùù 
ignoreVisibility
ùù $
{
ûû 	
get
üü 
{
üü 
return
üü 
m_ignoreCulling
üü (
;
üü( )
}
üü* +
set
†† 
{
†† 
if
†† 
(
†† 
m_ignoreCulling
†† %
==
††& (
value
††) .
)
††. /
return
††0 6
;
††6 7%
m_havePropertiesChanged
††8 O
=
††P Q
true
††R V
;
††V W
m_ignoreCulling
††X g
=
††h i
value
††j o
;
††o p
}
††q r
}
°° 	
	protected
££ 
bool
££ 
m_ignoreCulling
££ &
=
££' (
true
££) -
;
££- .
public
©© #
TextureMappingOptions
©© $
horizontalMapping
©©% 6
{
™™ 	
get
´´ 
{
´´ 
return
´´ !
m_horizontalMapping
´´ ,
;
´´, -
}
´´. /
set
¨¨ 
{
¨¨ 
if
¨¨ 
(
¨¨ !
m_horizontalMapping
¨¨ )
==
¨¨* ,
value
¨¨- 2
)
¨¨2 3
return
¨¨4 :
;
¨¨: ;%
m_havePropertiesChanged
¨¨< S
=
¨¨T U
true
¨¨V Z
;
¨¨Z [!
m_horizontalMapping
¨¨\ o
=
¨¨p q
value
¨¨r w
;
¨¨w x
SetVerticesDirty¨¨y â
(¨¨â ä
)¨¨ä ã
;¨¨ã å
}¨¨ç é
}
≠≠ 	
[
ÆÆ 	
SerializeField
ÆÆ	 
]
ÆÆ 
	protected
ØØ #
TextureMappingOptions
ØØ '!
m_horizontalMapping
ØØ( ;
=
ØØ< =#
TextureMappingOptions
ØØ> S
.
ØØS T
	Character
ØØT ]
;
ØØ] ^
public
µµ #
TextureMappingOptions
µµ $
verticalMapping
µµ% 4
{
∂∂ 	
get
∑∑ 
{
∑∑ 
return
∑∑ 
m_verticalMapping
∑∑ *
;
∑∑* +
}
∑∑, -
set
∏∏ 
{
∏∏ 
if
∏∏ 
(
∏∏ 
m_verticalMapping
∏∏ '
==
∏∏( *
value
∏∏+ 0
)
∏∏0 1
return
∏∏2 8
;
∏∏8 9%
m_havePropertiesChanged
∏∏: Q
=
∏∏R S
true
∏∏T X
;
∏∏X Y
m_verticalMapping
∏∏Z k
=
∏∏l m
value
∏∏n s
;
∏∏s t
SetVerticesDirty∏∏u Ö
(∏∏Ö Ü
)∏∏Ü á
;∏∏á à
}∏∏â ä
}
ππ 	
[
∫∫ 	
SerializeField
∫∫	 
]
∫∫ 
	protected
ªª #
TextureMappingOptions
ªª '
m_verticalMapping
ªª( 9
=
ªª: ;#
TextureMappingOptions
ªª< Q
.
ªªQ R
	Character
ªªR [
;
ªª[ \
public
ÕÕ 
float
ÕÕ !
mappingUvLineOffset
ÕÕ (
{
ŒŒ 	
get
œœ 
{
œœ 
return
œœ 
m_uvLineOffset
œœ '
;
œœ' (
}
œœ) *
set
–– 
{
–– 
if
–– 
(
–– 
m_uvLineOffset
–– $
==
––% '
value
––( -
)
––- .
return
––/ 5
;
––5 6%
m_havePropertiesChanged
––7 N
=
––O P
true
––Q U
;
––U V
m_uvLineOffset
––W e
=
––f g
value
––h m
;
––m n
SetVerticesDirty
––o 
(–– Ä
)––Ä Å
;––Å Ç
}––É Ñ
}
—— 	
[
““ 	
SerializeField
““	 
]
““ 
	protected
”” 
float
”” 
m_uvLineOffset
”” &
=
””' (
$num
””) -
;
””- .
public
ŸŸ 
TextRenderFlags
ŸŸ 

renderMode
ŸŸ )
{
⁄⁄ 	
get
€€ 
{
€€ 
return
€€ 
m_renderMode
€€ %
;
€€% &
}
€€' (
set
‹‹ 
{
‹‹ 
if
‹‹ 
(
‹‹ 
m_renderMode
‹‹ "
==
‹‹# %
value
‹‹& +
)
‹‹+ ,
return
‹‹- 3
;
‹‹3 4
m_renderMode
‹‹5 A
=
‹‹B C
value
‹‹D I
;
‹‹I J%
m_havePropertiesChanged
‹‹K b
=
‹‹c d
true
‹‹e i
;
‹‹i j
}
‹‹k l
}
›› 	
	protected
ﬁﬁ 
TextRenderFlags
ﬁﬁ !
m_renderMode
ﬁﬁ" .
=
ﬁﬁ/ 0
TextRenderFlags
ﬁﬁ1 @
.
ﬁﬁ@ A
Render
ﬁﬁA G
;
ﬁﬁG H
public
‰‰  
VertexSortingOrder
‰‰ !"
geometrySortingOrder
‰‰" 6
{
ÂÂ 	
get
ÊÊ 
{
ÊÊ 
return
ÊÊ $
m_geometrySortingOrder
ÊÊ /
;
ÊÊ/ 0
}
ÊÊ1 2
set
ËË 
{
ËË $
m_geometrySortingOrder
ËË (
=
ËË) *
value
ËË+ 0
;
ËË0 1%
m_havePropertiesChanged
ËË2 I
=
ËËJ K
true
ËËL P
;
ËËP Q
SetVerticesDirty
ËËR b
(
ËËb c
)
ËËc d
;
ËËd e
}
ËËf g
}
ÍÍ 	
[
ÎÎ 	
SerializeField
ÎÎ	 
]
ÎÎ 
	protected
ÏÏ  
VertexSortingOrder
ÏÏ $$
m_geometrySortingOrder
ÏÏ% ;
;
ÏÏ; <
public
ÚÚ 
bool
ÚÚ %
isTextObjectScaleStatic
ÚÚ +
{
ÛÛ 	
get
ÙÙ 
{
ÙÙ 
return
ÙÙ '
m_IsTextObjectScaleStatic
ÙÙ 2
;
ÙÙ2 3
}
ÙÙ4 5
set
ıı 
{
ˆˆ '
m_IsTextObjectScaleStatic
˜˜ )
=
˜˜* +
value
˜˜, 1
;
˜˜1 2
if
˘˘ 
(
˘˘ '
m_IsTextObjectScaleStatic
˘˘ -
)
˘˘- .
TMP_UpdateManager
˙˙ %
.
˙˙% &+
UnRegisterTextObjectForUpdate
˙˙& C
(
˙˙C D
this
˙˙D H
)
˙˙H I
;
˙˙I J
else
˚˚ 
TMP_UpdateManager
¸¸ %
.
¸¸% &)
RegisterTextObjectForUpdate
¸¸& A
(
¸¸A B
this
¸¸B F
)
¸¸F G
;
¸¸G H
}
˝˝ 
}
˛˛ 	
[
ˇˇ 	
SerializeField
ˇˇ	 
]
ˇˇ 
	protected
ÄÄ 
bool
ÄÄ '
m_IsTextObjectScaleStatic
ÄÄ 0
;
ÄÄ0 1
public
ÜÜ 
bool
ÜÜ +
vertexBufferAutoSizeReduction
ÜÜ 1
{
áá 	
get
àà 
{
àà 
return
àà -
m_VertexBufferAutoSizeReduction
àà 8
;
àà8 9
}
àà: ;
set
ââ 
{
ââ -
m_VertexBufferAutoSizeReduction
ââ 1
=
ââ2 3
value
ââ4 9
;
ââ9 :%
m_havePropertiesChanged
ââ; R
=
ââS T
true
ââU Y
;
ââY Z
SetVerticesDirty
ââ[ k
(
ââk l
)
ââl m
;
ââm n
}
ââo p
}
ää 	
[
ãã 	
SerializeField
ãã	 
]
ãã 
	protected
åå 
bool
åå -
m_VertexBufferAutoSizeReduction
åå 6
=
åå7 8
false
åå9 >
;
åå> ?
public
ëë 
int
ëë #
firstVisibleCharacter
ëë (
{
íí 	
get
ìì 
{
ìì 
return
ìì %
m_firstVisibleCharacter
ìì 0
;
ìì0 1
}
ìì2 3
set
îî 
{
îî 
if
îî 
(
îî %
m_firstVisibleCharacter
îî -
==
îî. 0
value
îî1 6
)
îî6 7
return
îî8 >
;
îî> ?%
m_havePropertiesChanged
îî@ W
=
îîX Y
true
îîZ ^
;
îî^ _%
m_firstVisibleCharacter
îî` w
=
îîx y
value
îîz 
;îî Ä 
SetVerticesDirtyîîÅ ë
(îîë í
)îîí ì
;îîì î
}îîï ñ
}
ïï 	
	protected
óó 
int
óó %
m_firstVisibleCharacter
óó -
;
óó- .
public
úú 
int
úú "
maxVisibleCharacters
úú '
{
ùù 	
get
ûû 
{
ûû 
return
ûû $
m_maxVisibleCharacters
ûû /
;
ûû/ 0
}
ûû1 2
set
üü 
{
üü 
if
üü 
(
üü $
m_maxVisibleCharacters
üü ,
==
üü- /
value
üü0 5
)
üü5 6
return
üü7 =
;
üü= >%
m_havePropertiesChanged
üü? V
=
üüW X
true
üüY ]
;
üü] ^$
m_maxVisibleCharacters
üü_ u
=
üüv w
value
üüx }
;
üü} ~
SetVerticesDirtyüü è
(üüè ê
)üüê ë
;üüë í
}üüì î
}
†† 	
	protected
°° 
int
°° $
m_maxVisibleCharacters
°° ,
=
°°- .
$num
°°/ 4
;
°°4 5
public
ßß 
int
ßß 
maxVisibleWords
ßß "
{
®® 	
get
©© 
{
©© 
return
©© 
m_maxVisibleWords
©© *
;
©©* +
}
©©, -
set
™™ 
{
™™ 
if
™™ 
(
™™ 
m_maxVisibleWords
™™ '
==
™™( *
value
™™+ 0
)
™™0 1
return
™™2 8
;
™™8 9%
m_havePropertiesChanged
™™: Q
=
™™R S
true
™™T X
;
™™X Y
m_maxVisibleWords
™™Z k
=
™™l m
value
™™n s
;
™™s t
SetVerticesDirty™™u Ö
(™™Ö Ü
)™™Ü á
;™™á à
}™™â ä
}
´´ 	
	protected
¨¨ 
int
¨¨ 
m_maxVisibleWords
¨¨ '
=
¨¨( )
$num
¨¨* /
;
¨¨/ 0
public
≤≤ 
int
≤≤ 
maxVisibleLines
≤≤ "
{
≥≥ 	
get
¥¥ 
{
¥¥ 
return
¥¥ 
m_maxVisibleLines
¥¥ *
;
¥¥* +
}
¥¥, -
set
µµ 
{
µµ 
if
µµ 
(
µµ 
m_maxVisibleLines
µµ '
==
µµ( *
value
µµ+ 0
)
µµ0 1
return
µµ2 8
;
µµ8 9%
m_havePropertiesChanged
µµ: Q
=
µµR S
true
µµT X
;
µµX Y
m_maxVisibleLines
µµZ k
=
µµl m
value
µµn s
;
µµs t
SetVerticesDirtyµµu Ö
(µµÖ Ü
)µµÜ á
;µµá à
}µµâ ä
}
∂∂ 	
	protected
∑∑ 
int
∑∑ 
m_maxVisibleLines
∑∑ '
=
∑∑( )
$num
∑∑* /
;
∑∑/ 0
public
ΩΩ 
bool
ΩΩ $
useMaxVisibleDescender
ΩΩ *
{
ææ 	
get
øø 
{
øø 
return
øø &
m_useMaxVisibleDescender
øø 1
;
øø1 2
}
øø3 4
set
¿¿ 
{
¿¿ 
if
¿¿ 
(
¿¿ &
m_useMaxVisibleDescender
¿¿ .
==
¿¿/ 1
value
¿¿2 7
)
¿¿7 8
return
¿¿9 ?
;
¿¿? @%
m_havePropertiesChanged
¿¿A X
=
¿¿Y Z
true
¿¿[ _
;
¿¿_ `&
m_useMaxVisibleDescender
¿¿a y
=
¿¿z {
value¿¿| Å
;¿¿Å Ç 
SetVerticesDirty¿¿É ì
(¿¿ì î
)¿¿î ï
;¿¿ï ñ
}¿¿ó ò
}
¡¡ 	
[
¬¬ 	
SerializeField
¬¬	 
]
¬¬ 
	protected
√√ 
bool
√√ &
m_useMaxVisibleDescender
√√ /
=
√√0 1
true
√√2 6
;
√√6 7
public
…… 
int
…… 
pageToDisplay
……  
{
   	
get
ÀÀ 
{
ÀÀ 
return
ÀÀ 
m_pageToDisplay
ÀÀ (
;
ÀÀ( )
}
ÀÀ* +
set
ÃÃ 
{
ÃÃ 
if
ÃÃ 
(
ÃÃ 
m_pageToDisplay
ÃÃ %
==
ÃÃ& (
value
ÃÃ) .
)
ÃÃ. /
return
ÃÃ0 6
;
ÃÃ6 7%
m_havePropertiesChanged
ÃÃ8 O
=
ÃÃP Q
true
ÃÃR V
;
ÃÃV W
m_pageToDisplay
ÃÃX g
=
ÃÃh i
value
ÃÃj o
;
ÃÃo p
SetVerticesDirtyÃÃq Å
(ÃÃÅ Ç
)ÃÃÇ É
;ÃÃÉ Ñ
}ÃÃÖ Ü
}
ÕÕ 	
[
ŒŒ 	
SerializeField
ŒŒ	 
]
ŒŒ 
	protected
œœ 
int
œœ 
m_pageToDisplay
œœ %
=
œœ& '
$num
œœ( )
;
œœ) *
	protected
–– 
bool
–– 
m_isNewPage
–– "
=
––# $
false
––% *
;
––* +
public
’’ 
virtual
’’ 
Vector4
’’ 
margin
’’ %
{
÷÷ 	
get
◊◊ 
{
◊◊ 
return
◊◊ 
m_margin
◊◊ !
;
◊◊! "
}
◊◊# $
set
ÿÿ 
{
ÿÿ 
if
ÿÿ 
(
ÿÿ 
m_margin
ÿÿ 
==
ÿÿ !
value
ÿÿ" '
)
ÿÿ' (
return
ÿÿ) /
;
ÿÿ/ 0
m_margin
ÿÿ1 9
=
ÿÿ: ;
value
ÿÿ< A
;
ÿÿA B
ComputeMarginSize
ÿÿC T
(
ÿÿT U
)
ÿÿU V
;
ÿÿV W%
m_havePropertiesChanged
ÿÿX o
=
ÿÿp q
true
ÿÿr v
;
ÿÿv w
SetVerticesDirtyÿÿx à
(ÿÿà â
)ÿÿâ ä
;ÿÿä ã
}ÿÿå ç
}
ŸŸ 	
[
⁄⁄ 	
SerializeField
⁄⁄	 
]
⁄⁄ 
	protected
€€ 
Vector4
€€ 
m_margin
€€ "
=
€€# $
new
€€% (
Vector4
€€) 0
(
€€0 1
$num
€€1 2
,
€€2 3
$num
€€4 5
,
€€5 6
$num
€€7 8
,
€€8 9
$num
€€: ;
)
€€; <
;
€€< =
	protected
‹‹ 
float
‹‹ 
m_marginLeft
‹‹ $
;
‹‹$ %
	protected
›› 
float
›› 
m_marginRight
›› %
;
››% &
	protected
ﬁﬁ 
float
ﬁﬁ 
m_marginWidth
ﬁﬁ %
;
ﬁﬁ% &
	protected
ﬂﬂ 
float
ﬂﬂ 
m_marginHeight
ﬂﬂ &
;
ﬂﬂ& '
	protected
‡‡ 
float
‡‡ 
m_width
‡‡ 
=
‡‡  !
-
‡‡" #
$num
‡‡# $
;
‡‡$ %
public
ÊÊ 
TMP_TextInfo
ÊÊ 
textInfo
ÊÊ $
{
ÁÁ 	
get
ËË 
{
ËË 
return
ËË 

m_textInfo
ËË #
;
ËË# $
}
ËË% &
}
ÈÈ 	
	protected
ÎÎ 
TMP_TextInfo
ÎÎ 

m_textInfo
ÎÎ )
;
ÎÎ) *
public
 
bool
 #
havePropertiesChanged
 )
{
ÒÒ 	
get
ÚÚ 
{
ÚÚ 
return
ÚÚ %
m_havePropertiesChanged
ÚÚ 0
;
ÚÚ0 1
}
ÚÚ2 3
set
ÛÛ 
{
ÛÛ 
if
ÛÛ 
(
ÛÛ %
m_havePropertiesChanged
ÛÛ -
==
ÛÛ. 0
value
ÛÛ1 6
)
ÛÛ6 7
return
ÛÛ8 >
;
ÛÛ> ?%
m_havePropertiesChanged
ÛÛ@ W
=
ÛÛX Y
value
ÛÛZ _
;
ÛÛ_ `
SetAllDirty
ÛÛa l
(
ÛÛl m
)
ÛÛm n
;
ÛÛn o
}
ÛÛp q
}
ÙÙ 	
	protected
ˆˆ 
bool
ˆˆ %
m_havePropertiesChanged
ˆˆ .
;
ˆˆ. /
public
¸¸ 
bool
¸¸ -
isUsingLegacyAnimationComponent
¸¸ 3
{
˝˝ 	
get
˛˛ 
{
˛˛ 
return
˛˛ /
!m_isUsingLegacyAnimationComponent
˛˛ :
;
˛˛: ;
}
˛˛< =
set
ˇˇ 
{
ˇˇ /
!m_isUsingLegacyAnimationComponent
ˇˇ 3
=
ˇˇ4 5
value
ˇˇ6 ;
;
ˇˇ; <
}
ˇˇ= >
}
Ä	Ä	 	
[
Å	Å	 	
SerializeField
Å	Å		 
]
Å	Å	 
	protected
Ç	Ç	 
bool
Ç	Ç	 /
!m_isUsingLegacyAnimationComponent
Ç	Ç	 8
;
Ç	Ç	8 9
public
à	à	 
new
à	à	 
	Transform
à	à	 
	transform
à	à	 &
{
â	â	 	
get
ä	ä	 
{
ã	ã	 
if
å	å	 
(
å	å	 
m_transform
å	å	 
==
å	å	  "
null
å	å	# '
)
å	å	' (
m_transform
ç	ç	 
=
ç	ç	  !
GetComponent
ç	ç	" .
<
ç	ç	. /
	Transform
ç	ç	/ 8
>
ç	ç	8 9
(
ç	ç	9 :
)
ç	ç	: ;
;
ç	ç	; <
return
é	é	 
m_transform
é	é	 "
;
é	é	" #
}
è	è	 
}
ê	ê	 	
	protected
ë	ë	 
	Transform
ë	ë	 
m_transform
ë	ë	 '
;
ë	ë	' (
public
ó	ó	 
new
ó	ó	 
RectTransform
ó	ó	  
rectTransform
ó	ó	! .
{
ò	ò	 	
get
ô	ô	 
{
ö	ö	 
if
õ	õ	 
(
õ	õ	 
m_rectTransform
õ	õ	 #
==
õ	õ	$ &
null
õ	õ	' +
)
õ	õ	+ ,
m_rectTransform
ú	ú	 #
=
ú	ú	$ %
GetComponent
ú	ú	& 2
<
ú	ú	2 3
RectTransform
ú	ú	3 @
>
ú	ú	@ A
(
ú	ú	A B
)
ú	ú	B C
;
ú	ú	C D
return
ù	ù	 
m_rectTransform
ù	ù	 &
;
ù	ù	& '
}
û	û	 
}
ü	ü	 	
	protected
†	†	 
RectTransform
†	†	 
m_rectTransform
†	†	  /
;
†	†	/ 0
	protected
¶	¶	 
Vector2
¶	¶	 )
m_PreviousRectTransformSize
¶	¶	 5
;
¶	¶	5 6
	protected
´	´	 
Vector2
´	´	 %
m_PreviousPivotPosition
´	´	 1
;
´	´	1 2
public
±	±	 
virtual
±	±	 
bool
±	±	 #
autoSizeTextContainer
±	±	 1
{
≤	≤	 	
get
≥	≥	 
;
≥	≥	 
set
¥	¥	 
;
¥	¥	 
}
µ	µ	 	
	protected
∂	∂	 
bool
∂	∂	 %
m_autoSizeTextContainer
∂	∂	 .
;
∂	∂	. /
public
º	º	 
virtual
º	º	 
Mesh
º	º	 
mesh
º	º	  
{
Ω	Ω	 	
get
æ	æ	 
{
æ	æ	 
return
æ	æ	 
m_mesh
æ	æ	 
;
æ	æ	  
}
æ	æ	! "
}
ø	ø	 	
	protected
¿	¿	 
Mesh
¿	¿	 
m_mesh
¿	¿	 
;
¿	¿	 
public
∆	∆	 
bool
∆	∆	 
isVolumetricText
∆	∆	 $
{
«	«	 	
get
»	»	 
{
»	»	 
return
»	»	  
m_isVolumetricText
»	»	 +
;
»	»	+ ,
}
»	»	- .
set
…	…	 
{
…	…	 
if
…	…	 
(
…	…	  
m_isVolumetricText
…	…	 (
==
…	…	) +
value
…	…	, 1
)
…	…	1 2
return
…	…	3 9
;
…	…	9 :%
m_havePropertiesChanged
…	…	; R
=
…	…	S T
value
…	…	U Z
;
…	…	Z [

m_textInfo
…	…	\ f
.
…	…	f g
ResetVertexLayout
…	…	g x
(
…	…	x y
value
…	…	y ~
)
…	…	~ 
;…	…	 Ä 
SetVerticesDirty…	…	Å ë
(…	…	ë í
)…	…	í ì
;…	…	ì î
SetLayoutDirty…	…	ï £
(…	…	£ §
)…	…	§ •
;…	…	• ¶
}…	…	ß ®
}
 	 	 	
[
À	À	 	
SerializeField
À	À		 
]
À	À	 
	protected
Ã	Ã	 
bool
Ã	Ã	  
m_isVolumetricText
Ã	Ã	 )
;
Ã	Ã	) *
public
—	—	 
Bounds
—	—	 
bounds
—	—	 
{
“	“	 	
get
”	”	 
{
‘	‘	 
if
’	’	 
(
’	’	 
m_mesh
’	’	 
==
’	’	 
null
’	’	 "
)
’	’	" #
return
’	’	$ *
new
’	’	+ .
Bounds
’	’	/ 5
(
’	’	5 6
)
’	’	6 7
;
’	’	7 8
return
◊	◊	 
GetCompoundBounds
◊	◊	 (
(
◊	◊	( )
)
◊	◊	) *
;
◊	◊	* +
}
ÿ	ÿ	 
}
Ÿ	Ÿ	 	
public
ﬁ	ﬁ	 
Bounds
ﬁ	ﬁ	 

textBounds
ﬁ	ﬁ	  
{
ﬂ	ﬂ	 	
get
‡	‡	 
{
·	·	 
if
‚	‚	 
(
‚	‚	 

m_textInfo
‚	‚	 
==
‚	‚	 !
null
‚	‚	" &
)
‚	‚	& '
return
‚	‚	( .
new
‚	‚	/ 2
Bounds
‚	‚	3 9
(
‚	‚	9 :
)
‚	‚	: ;
;
‚	‚	; <
return
‰	‰	 
GetTextBounds
‰	‰	 $
(
‰	‰	$ %
)
‰	‰	% &
;
‰	‰	& '
}
Â	Â	 
}
Ê	Ê	 	
public
Ì	Ì	 
static
Ì	Ì	 
event
Ì	Ì	 
Func
Ì	Ì	  
<
Ì	Ì	  !
int
Ì	Ì	! $
,
Ì	Ì	$ %
string
Ì	Ì	& ,
,
Ì	Ì	, -
TMP_FontAsset
Ì	Ì	. ;
>
Ì	Ì	; < 
OnFontAssetRequest
Ì	Ì	= O
;
Ì	Ì	O P
public
Ú	Ú	 
static
Ú	Ú	 
event
Ú	Ú	 
Func
Ú	Ú	  
<
Ú	Ú	  !
int
Ú	Ú	! $
,
Ú	Ú	$ %
string
Ú	Ú	& ,
,
Ú	Ú	, -
TMP_SpriteAsset
Ú	Ú	. =
>
Ú	Ú	= >"
OnSpriteAssetRequest
Ú	Ú	? S
;
Ú	Ú	S T
public
˜	˜	 
virtual
˜	˜	 
event
˜	˜	 
Action
˜	˜	 #
<
˜	˜	# $
TMP_TextInfo
˜	˜	$ 0
>
˜	˜	0 1
OnPreRenderText
˜	˜	2 A
=
˜	˜	B C
delegate
˜	˜	D L
{
˜	˜	M N
}
˜	˜	O P
;
˜	˜	P Q
	protected
é
é
  
TMP_SpriteAnimator
é
é
 $
spriteAnimator
é
é
% 3
{
è
è
 	
get
ê
ê
 
{
ë
ë
 
if
í
í
 
(
í
í
 
m_spriteAnimator
í
í
 $
==
í
í
% '
null
í
í
( ,
)
í
í
, -
{
ì
ì
 
m_spriteAnimator
î
î
 $
=
î
î
% &
GetComponent
î
î
' 3
<
î
î
3 4 
TMP_SpriteAnimator
î
î
4 F
>
î
î
F G
(
î
î
G H
)
î
î
H I
;
î
î
I J
if
ï
ï
 
(
ï
ï
 
m_spriteAnimator
ï
ï
 (
==
ï
ï
) +
null
ï
ï
, 0
)
ï
ï
0 1
m_spriteAnimator
ï
ï
2 B
=
ï
ï
C D

gameObject
ï
ï
E O
.
ï
ï
O P
AddComponent
ï
ï
P \
<
ï
ï
\ ] 
TMP_SpriteAnimator
ï
ï
] o
>
ï
ï
o p
(
ï
ï
p q
)
ï
ï
q r
;
ï
ï
r s
}
ñ
ñ
 
return
ò
ò
 
m_spriteAnimator
ò
ò
 '
;
ò
ò
' (
}
ô
ô
 
}
õ
õ
 	
	protected
ú
ú
  
TMP_SpriteAnimator
ú
ú
 $
m_spriteAnimator
ú
ú
% 5
;
ú
ú
5 6
public
≥
≥
 
float
≥
≥
 
flexibleHeight
≥
≥
 #
{
≥
≥
$ %
get
≥
≥
& )
{
≥
≥
* +
return
≥
≥
, 2
m_flexibleHeight
≥
≥
3 C
;
≥
≥
C D
}
≥
≥
E F
}
≥
≥
G H
	protected
¥
¥
 
float
¥
¥
 
m_flexibleHeight
¥
¥
 (
=
¥
¥
) *
-
¥
¥
+ ,
$num
¥
¥
, .
;
¥
¥
. /
public
π
π
 
float
π
π
 
flexibleWidth
π
π
 "
{
π
π
# $
get
π
π
% (
{
π
π
) *
return
π
π
+ 1
m_flexibleWidth
π
π
2 A
;
π
π
A B
}
π
π
C D
}
π
π
E F
	protected
∫
∫
 
float
∫
∫
 
m_flexibleWidth
∫
∫
 '
=
∫
∫
( )
-
∫
∫
* +
$num
∫
∫
+ -
;
∫
∫
- .
public
ø
ø
 
float
ø
ø
 
minWidth
ø
ø
 
{
ø
ø
 
get
ø
ø
  #
{
ø
ø
$ %
return
ø
ø
& ,

m_minWidth
ø
ø
- 7
;
ø
ø
7 8
}
ø
ø
9 :
}
ø
ø
; <
	protected
¿
¿
 
float
¿
¿
 

m_minWidth
¿
¿
 "
;
¿
¿
" #
public
≈
≈
 
float
≈
≈
 
	minHeight
≈
≈
 
{
≈
≈
  
get
≈
≈
! $
{
≈
≈
% &
return
≈
≈
' -
m_minHeight
≈
≈
. 9
;
≈
≈
9 :
}
≈
≈
; <
}
≈
≈
= >
	protected
∆
∆
 
float
∆
∆
 
m_minHeight
∆
∆
 #
;
∆
∆
# $
public
À
À
 
float
À
À
 
maxWidth
À
À
 
{
À
À
 
get
À
À
  #
{
À
À
$ %
return
À
À
& ,

m_maxWidth
À
À
- 7
;
À
À
7 8
}
À
À
9 :
}
À
À
; <
	protected
Ã
Ã
 
float
Ã
Ã
 

m_maxWidth
Ã
Ã
 "
;
Ã
Ã
" #
public
—
—
 
float
—
—
 
	maxHeight
—
—
 
{
—
—
  
get
—
—
! $
{
—
—
% &
return
—
—
' -
m_maxHeight
—
—
. 9
;
—
—
9 :
}
—
—
; <
}
—
—
= >
	protected
“
“
 
float
“
“
 
m_maxHeight
“
“
 #
;
“
“
# $
	protected
◊
◊
 
LayoutElement
◊
◊
 
layoutElement
◊
◊
  -
{
ÿ
ÿ
 	
get
Ÿ
Ÿ
 
{
⁄
⁄
 
if
€
€
 
(
€
€
 
m_LayoutElement
€
€
 #
==
€
€
$ &
null
€
€
' +
)
€
€
+ ,
{
‹
‹
 
m_LayoutElement
›
›
 #
=
›
›
$ %
GetComponent
›
›
& 2
<
›
›
2 3
LayoutElement
›
›
3 @
>
›
›
@ A
(
›
›
A B
)
›
›
B C
;
›
›
C D
}
ﬁ
ﬁ
 
return
‡
‡
 
m_LayoutElement
‡
‡
 &
;
‡
‡
& '
}
·
·
 
}
‚
‚
 	
	protected
„
„
 
LayoutElement
„
„
 
m_LayoutElement
„
„
  /
;
„
„
/ 0
public
Ë
Ë
 
virtual
Ë
Ë
 
float
Ë
Ë
 
preferredWidth
Ë
Ë
 +
{
Ë
Ë
, -
get
Ë
Ë
. 1
{
Ë
Ë
2 3
m_preferredWidth
Ë
Ë
4 D
=
Ë
Ë
E F
GetPreferredWidth
Ë
Ë
G X
(
Ë
Ë
X Y
)
Ë
Ë
Y Z
;
Ë
Ë
Z [
return
Ë
Ë
\ b
m_preferredWidth
Ë
Ë
c s
;
Ë
Ë
s t
}
Ë
Ë
u v
}
Ë
Ë
w x
	protected
È
È
 
float
È
È
 
m_preferredWidth
È
È
 (
;
È
È
( )
	protected
Í
Í
 
float
Í
Í
 
m_renderedWidth
Í
Í
 '
;
Í
Í
' (
	protected
Î
Î
 
bool
Î
Î
 %
m_isPreferredWidthDirty
Î
Î
 .
;
Î
Î
. /
public


 
virtual


 
float


 
preferredHeight


 ,
{


- .
get


/ 2
{


3 4
m_preferredHeight


5 F
=


G H 
GetPreferredHeight


I [
(


[ \
)


\ ]
;


] ^
return


_ e
m_preferredHeight


f w
;


w x
}


y z
}


{ |
	protected
Ò
Ò
 
float
Ò
Ò
 
m_preferredHeight
Ò
Ò
 )
;
Ò
Ò
) *
	protected
Ú
Ú
 
float
Ú
Ú
 
m_renderedHeight
Ú
Ú
 (
;
Ú
Ú
( )
	protected
Û
Û
 
bool
Û
Û
 &
m_isPreferredHeightDirty
Û
Û
 /
;
Û
Û
/ 0
	protected
ı
ı
 
bool
ı
ı
 ,
m_isCalculatingPreferredValues
ı
ı
 5
;
ı
ı
5 6
public
˚
˚
 
virtual
˚
˚
 
float
˚
˚
 
renderedWidth
˚
˚
 *
{
˚
˚
+ ,
get
˚
˚
- 0
{
˚
˚
1 2
return
˚
˚
3 9
GetRenderedWidth
˚
˚
: J
(
˚
˚
J K
)
˚
˚
K L
;
˚
˚
L M
}
˚
˚
N O
}
˚
˚
P Q
public
ÅÅ 
virtual
ÅÅ 
float
ÅÅ 
renderedHeight
ÅÅ +
{
ÅÅ, -
get
ÅÅ. 1
{
ÅÅ2 3
return
ÅÅ4 :
GetRenderedHeight
ÅÅ; L
(
ÅÅL M
)
ÅÅM N
;
ÅÅN O
}
ÅÅP Q
}
ÅÅR S
public
áá 
int
áá 
layoutPriority
áá !
{
áá" #
get
áá$ '
{
áá( )
return
áá* 0
m_layoutPriority
áá1 A
;
ááA B
}
ááC D
}
ááE F
	protected
àà 
int
àà 
m_layoutPriority
àà &
=
àà' (
$num
àà) *
;
àà* +
	protected
ää 
bool
ää 
m_isLayoutDirty
ää &
;
ää& '
	protected
åå 
bool
åå 
	m_isAwake
åå  
;
åå  !
internal
çç 
bool
çç '
m_isWaitingOnResourceLoad
çç /
;
çç/ 0
	protected
èè 
struct
èè #
CharacterSubstitution
èè .
{
êê 	
public
ëë 
int
ëë 
index
ëë 
;
ëë 
public
íí 
uint
íí 
unicode
íí 
;
íí  
public
îî #
CharacterSubstitution
îî (
(
îî) *
int
îî* -
index
îî. 3
,
îî3 4
uint
îî5 9
unicode
îî: A
)
îîA B
{
ïï 
this
ññ 
.
ññ 
index
ññ 
=
ññ 
index
ññ "
;
ññ" #
this
óó 
.
óó 
unicode
óó 
=
óó 
unicode
óó &
;
óó& '
}
òò 
}
ôô 	
internal
úú 
enum
úú 
TextInputSources
úú &
{
úú' (
TextInputBox
úú) 5
=
úú6 7
$num
úú8 9
,
úú9 :
SetText
úú; B
=
úúC D
$num
úúE F
,
úúF G
SetTextArray
úúH T
=
úúU V
$num
úúW X
,
úúX Y

TextString
úúZ d
=
úúe f
$num
úúg h
}
úúi j
;
úúj k
internal
ûû 
TextInputSources
ûû !
m_inputSource
ûû" /
;
ûû/ 0
	protected
†† 
float
†† #
m_fontScaleMultiplier
†† -
;
††- .
private
¢¢ 
static
¢¢ 
char
¢¢ 
[
¢¢ 
]
¢¢ 
	m_htmlTag
¢¢ '
=
¢¢( )
new
¢¢* -
char
¢¢. 2
[
¢¢2 3
$num
¢¢3 6
]
¢¢6 7
;
¢¢7 8
private
££ 
static
££ "
RichTextTagAttribute
££ +
[
££+ ,
]
££, -
m_xmlAttribute
££. <
=
££= >
new
££? B"
RichTextTagAttribute
££C W
[
££W X
$num
££X Y
]
££Y Z
;
££Z [
private
§§ 
static
§§ 
float
§§ 
[
§§ 
]
§§ (
m_attributeParameterValues
§§ 9
=
§§: ;
new
§§< ?
float
§§@ E
[
§§E F
$num
§§F H
]
§§H I
;
§§I J
	protected
¶¶ 
float
¶¶ 
tag_LineIndent
¶¶ &
=
¶¶' (
$num
¶¶) *
;
¶¶* +
	protected
ßß 
float
ßß 

tag_Indent
ßß "
=
ßß# $
$num
ßß% &
;
ßß& '
	protected
®® %
TMP_TextProcessingStack
®® )
<
®®) *
float
®®* /
>
®®/ 0
m_indentStack
®®1 >
=
®®? @
new
®®A D%
TMP_TextProcessingStack
®®E \
<
®®\ ]
float
®®] b
>
®®b c
(
®®c d
new
®®d g
float
®®h m
[
®®m n
$num
®®n p
]
®®p q
)
®®q r
;
®®r s
	protected
©© 
bool
©© 
tag_NoParsing
©© $
;
©©$ %
	protected
¨¨ 
bool
¨¨ 
m_isParsingText
¨¨ &
;
¨¨& '
	protected
≠≠ 
	Matrix4x4
≠≠ 

m_FXMatrix
≠≠ &
;
≠≠& '
	protected
ÆÆ 
bool
ÆÆ 
m_isFXMatrixSet
ÆÆ &
;
ÆÆ& '
internal
≥≥ 
UnicodeChar
≥≥ 
[
≥≥ 
]
≥≥ #
m_TextProcessingArray
≥≥ 4
=
≥≥5 6
new
≥≥7 :
UnicodeChar
≥≥; F
[
≥≥F G
$num
≥≥G H
]
≥≥H I
;
≥≥I J
internal
∏∏ 
int
∏∏ /
!m_InternalTextProcessingArraySize
∏∏ 6
;
∏∏6 7
[
∫∫ 	
System
∫∫	 
.
∫∫ 
Diagnostics
∫∫ 
.
∫∫ 
DebuggerDisplay
∫∫ +
(
∫∫+ ,
$str
∫∫, T
)
∫∫T U
]
∫∫U V
internal
ªª 
struct
ªª 
UnicodeChar
ªª #
{
ºº 	
public
ΩΩ 
int
ΩΩ 
unicode
ΩΩ 
;
ΩΩ 
public
ææ 
int
ææ 
stringIndex
ææ "
;
ææ" #
public
øø 
int
øø 
length
øø 
;
øø 
}
¿¿ 	
	protected
¬¬ 
struct
¬¬ 
SpecialCharacter
¬¬ )
{
√√ 	
public
ƒƒ 
TMP_Character
ƒƒ  
	character
ƒƒ! *
;
ƒƒ* +
public
≈≈ 
TMP_FontAsset
≈≈  
	fontAsset
≈≈! *
;
≈≈* +
public
∆∆ 
Material
∆∆ 
material
∆∆ $
;
∆∆$ %
public
«« 
int
«« 
materialIndex
«« $
;
««$ %
public
…… 
SpecialCharacter
…… #
(
……# $
TMP_Character
……$ 1
	character
……2 ;
,
……; <
int
……= @
materialIndex
……A N
)
……N O
{
   
this
ÀÀ 
.
ÀÀ 
	character
ÀÀ 
=
ÀÀ  
	character
ÀÀ! *
;
ÀÀ* +
this
ÃÃ 
.
ÃÃ 
	fontAsset
ÃÃ 
=
ÃÃ  
	character
ÃÃ! *
.
ÃÃ* +
	textAsset
ÃÃ+ 4
as
ÃÃ5 7
TMP_FontAsset
ÃÃ8 E
;
ÃÃE F
this
ÕÕ 
.
ÕÕ 
material
ÕÕ 
=
ÕÕ 
this
ÕÕ  $
.
ÕÕ$ %
	fontAsset
ÕÕ% .
!=
ÕÕ/ 1
null
ÕÕ2 6
?
ÕÕ7 8
this
ÕÕ9 =
.
ÕÕ= >
	fontAsset
ÕÕ> G
.
ÕÕG H
material
ÕÕH P
:
ÕÕQ R
null
ÕÕS W
;
ÕÕW X
this
ŒŒ 
.
ŒŒ 
materialIndex
ŒŒ "
=
ŒŒ# $
materialIndex
ŒŒ% 2
;
ŒŒ2 3
}
œœ 
}
–– 	
private
““ 
TMP_CharacterInfo
““ !
[
““! "
]
““" #%
m_internalCharacterInfo
““$ ;
;
““; <
	protected
”” 
int
”” #
m_totalCharacterCount
”” +
;
””+ ,
	protected
÷÷ 
static
÷÷ 
WordWrapState
÷÷ &"
m_SavedWordWrapState
÷÷' ;
=
÷÷< =
new
÷÷> A
WordWrapState
÷÷B O
(
÷÷O P
)
÷÷P Q
;
÷÷Q R
	protected
◊◊ 
static
◊◊ 
WordWrapState
◊◊ &
m_SavedLineState
◊◊' 7
=
◊◊8 9
new
◊◊: =
WordWrapState
◊◊> K
(
◊◊K L
)
◊◊L M
;
◊◊M N
	protected
ÿÿ 
static
ÿÿ 
WordWrapState
ÿÿ &"
m_SavedEllipsisState
ÿÿ' ;
=
ÿÿ< =
new
ÿÿ> A
WordWrapState
ÿÿB O
(
ÿÿO P
)
ÿÿP Q
;
ÿÿQ R
	protected
ŸŸ 
static
ŸŸ 
WordWrapState
ŸŸ &#
m_SavedLastValidState
ŸŸ' <
=
ŸŸ= >
new
ŸŸ? B
WordWrapState
ŸŸC P
(
ŸŸP Q
)
ŸŸQ R
;
ŸŸR S
	protected
⁄⁄ 
static
⁄⁄ 
WordWrapState
⁄⁄ &'
m_SavedSoftLineBreakState
⁄⁄' @
=
⁄⁄A B
new
⁄⁄C F
WordWrapState
⁄⁄G T
(
⁄⁄T U
)
⁄⁄U V
;
⁄⁄V W
internal
›› 
static
›› %
TMP_TextProcessingStack
›› /
<
››/ 0
WordWrapState
››0 =
>
››= >/
!m_EllipsisInsertionCandidateStack
››? `
=
››a b
new
››c f%
TMP_TextProcessingStack
››g ~
<
››~ 
WordWrapState›› å
>››å ç
(››ç é
$num››é è
,››è ê
$num››ë í
)››í ì
;››ì î
	protected
‡‡ 
int
‡‡ 
m_characterCount
‡‡ &
;
‡‡& '
	protected
„„ 
int
„„ $
m_firstCharacterOfLine
„„ ,
;
„„, -
	protected
‰‰ 
int
‰‰ +
m_firstVisibleCharacterOfLine
‰‰ 3
;
‰‰3 4
	protected
ÂÂ 
int
ÂÂ #
m_lastCharacterOfLine
ÂÂ +
;
ÂÂ+ ,
	protected
ÊÊ 
int
ÊÊ *
m_lastVisibleCharacterOfLine
ÊÊ 2
;
ÊÊ2 3
	protected
ÁÁ 
int
ÁÁ 
m_lineNumber
ÁÁ "
;
ÁÁ" #
	protected
ËË 
int
ËË )
m_lineVisibleCharacterCount
ËË 1
;
ËË1 2
	protected
ÈÈ 
int
ÈÈ 
m_pageNumber
ÈÈ "
;
ÈÈ" #
	protected
ÍÍ 
float
ÍÍ 
m_PageAscender
ÍÍ &
;
ÍÍ& '
	protected
ÎÎ 
float
ÎÎ 
m_maxTextAscender
ÎÎ )
;
ÎÎ) *
	protected
ÏÏ 
float
ÏÏ 
m_maxCapHeight
ÏÏ &
;
ÏÏ& '
	protected
ÌÌ 
float
ÌÌ 
m_ElementAscender
ÌÌ )
;
ÌÌ) *
	protected
ÓÓ 
float
ÓÓ  
m_ElementDescender
ÓÓ *
;
ÓÓ* +
	protected
ÔÔ 
float
ÔÔ 
m_maxLineAscender
ÔÔ )
;
ÔÔ) *
	protected
 
float
  
m_maxLineDescender
 *
;
* +
	protected
ÒÒ 
float
ÒÒ #
m_startOfLineAscender
ÒÒ -
;
ÒÒ- .
	protected
ÚÚ 
float
ÚÚ $
m_startOfLineDescender
ÚÚ .
;
ÚÚ. /
	protected
ÙÙ 
float
ÙÙ 
m_lineOffset
ÙÙ $
;
ÙÙ$ %
	protected
ıı 
Extents
ıı 
m_meshExtents
ıı '
;
ıı' (
	protected
˘˘ 
Color32
˘˘ 
m_htmlColor
˘˘ %
=
˘˘& '
new
˘˘( +
Color
˘˘, 1
(
˘˘1 2
$num
˘˘2 5
,
˘˘5 6
$num
˘˘7 :
,
˘˘: ;
$num
˘˘< ?
,
˘˘? @
$num
˘˘A D
)
˘˘D E
;
˘˘E F
	protected
˙˙ %
TMP_TextProcessingStack
˙˙ )
<
˙˙) *
Color32
˙˙* 1
>
˙˙1 2
m_colorStack
˙˙3 ?
=
˙˙@ A
new
˙˙B E%
TMP_TextProcessingStack
˙˙F ]
<
˙˙] ^
Color32
˙˙^ e
>
˙˙e f
(
˙˙f g
new
˙˙g j
Color32
˙˙k r
[
˙˙r s
$num
˙˙s u
]
˙˙u v
)
˙˙v w
;
˙˙w x
	protected
˚˚ %
TMP_TextProcessingStack
˚˚ )
<
˚˚) *
Color32
˚˚* 1
>
˚˚1 2#
m_underlineColorStack
˚˚3 H
=
˚˚I J
new
˚˚K N%
TMP_TextProcessingStack
˚˚O f
<
˚˚f g
Color32
˚˚g n
>
˚˚n o
(
˚˚o p
new
˚˚p s
Color32
˚˚t {
[
˚˚{ |
$num
˚˚| ~
]
˚˚~ 
)˚˚ Ä
;˚˚Ä Å
	protected
¸¸ %
TMP_TextProcessingStack
¸¸ )
<
¸¸) *
Color32
¸¸* 1
>
¸¸1 2'
m_strikethroughColorStack
¸¸3 L
=
¸¸M N
new
¸¸O R%
TMP_TextProcessingStack
¸¸S j
<
¸¸j k
Color32
¸¸k r
>
¸¸r s
(
¸¸s t
new
¸¸t w
Color32
¸¸x 
[¸¸ Ä
$num¸¸Ä Ç
]¸¸Ç É
)¸¸É Ñ
;¸¸Ñ Ö
	protected
˝˝ %
TMP_TextProcessingStack
˝˝ )
<
˝˝) *
HighlightState
˝˝* 8
>
˝˝8 9#
m_HighlightStateStack
˝˝: O
=
˝˝P Q
new
˝˝R U%
TMP_TextProcessingStack
˝˝V m
<
˝˝m n
HighlightState
˝˝n |
>
˝˝| }
(
˝˝} ~
new˝˝~ Å
HighlightState˝˝Ç ê
[˝˝ê ë
$num˝˝ë ì
]˝˝ì î
)˝˝î ï
;˝˝ï ñ
	protected
ˇˇ 
TMP_ColorGradient
ˇˇ ##
m_colorGradientPreset
ˇˇ$ 9
;
ˇˇ9 :
	protected
ÄÄ %
TMP_TextProcessingStack
ÄÄ )
<
ÄÄ) *
TMP_ColorGradient
ÄÄ* ;
>
ÄÄ; <"
m_colorGradientStack
ÄÄ= Q
=
ÄÄR S
new
ÄÄT W%
TMP_TextProcessingStack
ÄÄX o
<
ÄÄo p 
TMP_ColorGradientÄÄp Å
>ÄÄÅ Ç
(ÄÄÇ É
newÄÄÉ Ü!
TMP_ColorGradientÄÄá ò
[ÄÄò ô
$numÄÄô õ
]ÄÄõ ú
)ÄÄú ù
;ÄÄù û
	protected
ÅÅ 
bool
ÅÅ +
m_colorGradientPresetIsTinted
ÅÅ 4
;
ÅÅ4 5
	protected
ÉÉ 
float
ÉÉ 
m_tabSpacing
ÉÉ $
=
ÉÉ% &
$num
ÉÉ' (
;
ÉÉ( )
	protected
ÑÑ 
float
ÑÑ 
	m_spacing
ÑÑ !
=
ÑÑ" #
$num
ÑÑ$ %
;
ÑÑ% &
	protected
áá %
TMP_TextProcessingStack
áá )
<
áá) *
int
áá* -
>
áá- .
[
áá. /
]
áá/ 0
m_TextStyleStacks
áá1 B
=
ááC D
new
ááE H%
TMP_TextProcessingStack
ááI `
<
áá` a
int
ááa d
>
áád e
[
ááe f
$num
ááf g
]
áág h
;
ááh i
	protected
àà 
int
àà #
m_TextStyleStackDepth
àà +
=
àà, -
$num
àà. /
;
àà/ 0
	protected
ää %
TMP_TextProcessingStack
ää )
<
ää) *
int
ää* -
>
ää- . 
m_ItalicAngleStack
ää/ A
=
ääB C
new
ääD G%
TMP_TextProcessingStack
ääH _
<
ää_ `
int
ää` c
>
ääc d
(
ääd e
new
ääe h
int
ääi l
[
ääl m
$num
ääm o
]
ääo p
)
ääp q
;
ääq r
	protected
ãã 
int
ãã 
m_ItalicAngle
ãã #
;
ãã# $
	protected
çç %
TMP_TextProcessingStack
çç )
<
çç) *
int
çç* -
>
çç- .
m_actionStack
çç/ <
=
çç= >
new
çç? B%
TMP_TextProcessingStack
ççC Z
<
ççZ [
int
çç[ ^
>
çç^ _
(
çç_ `
new
çç` c
int
ççd g
[
ççg h
$num
ççh j
]
ççj k
)
ççk l
;
ççl m
	protected
èè 
float
èè 
	m_padding
èè !
=
èè" #
$num
èè$ %
;
èè% &
	protected
êê 
float
êê 
m_baselineOffset
êê (
;
êê( )
	protected
ëë %
TMP_TextProcessingStack
ëë )
<
ëë) *
float
ëë* /
>
ëë/ 0#
m_baselineOffsetStack
ëë1 F
=
ëëG H
new
ëëI L%
TMP_TextProcessingStack
ëëM d
<
ëëd e
float
ëëe j
>
ëëj k
(
ëëk l
new
ëël o
float
ëëp u
[
ëëu v
$num
ëëv x
]
ëëx y
)
ëëy z
;
ëëz {
	protected
íí 
float
íí 

m_xAdvance
íí "
;
íí" #
	protected
îî !
TMP_TextElementType
îî %
m_textElementType
îî& 7
;
îî7 8
	protected
ïï 
TMP_TextElement
ïï !"
m_cached_TextElement
ïï" 6
;
ïï6 7
	protected
óó 
SpecialCharacter
óó "

m_Ellipsis
óó# -
;
óó- .
	protected
òò 
SpecialCharacter
òò "
m_Underline
òò# .
;
òò. /
	protected
öö 
TMP_SpriteAsset
öö !"
m_defaultSpriteAsset
öö" 6
;
öö6 7
	protected
õõ 
TMP_SpriteAsset
õõ !"
m_currentSpriteAsset
õõ" 6
;
õõ6 7
	protected
úú 
int
úú 
m_spriteCount
úú #
=
úú$ %
$num
úú& '
;
úú' (
	protected
ùù 
int
ùù 
m_spriteIndex
ùù #
;
ùù# $
	protected
ûû 
int
ûû !
m_spriteAnimationID
ûû )
;
ûû) *
private
°° 
static
°° 
ProfilerMarker
°° %
k_ParseTextMarker
°°& 7
=
°°8 9
new
°°: =
ProfilerMarker
°°> L
(
°°L M
$str
°°M ]
)
°°] ^
;
°°^ _
private
¢¢ 
static
¢¢ 
ProfilerMarker
¢¢ %#
k_InsertNewLineMarker
¢¢& ;
=
¢¢< =
new
¢¢> A
ProfilerMarker
¢¢B P
(
¢¢P Q
$str
¢¢Q d
)
¢¢d e
;
¢¢e f
	protected
ßß 
virtual
ßß 
void
ßß 
LoadFontAsset
ßß ,
(
ßß, -
)
ßß- .
{
ßß/ 0
}
ßß1 2
	protected
≠≠ 
virtual
≠≠ 
void
≠≠ 
SetSharedMaterial
≠≠ 0
(
≠≠0 1
Material
≠≠1 9
mat
≠≠: =
)
≠≠= >
{
≠≠? @
}
≠≠A B
	protected
≤≤ 
virtual
≤≤ 
Material
≤≤ "
GetMaterial
≤≤# .
(
≤≤. /
Material
≤≤/ 7
mat
≤≤8 ;
)
≤≤; <
{
≤≤= >
return
≤≤? E
null
≤≤F J
;
≤≤J K
}
≤≤L M
	protected
∏∏ 
virtual
∏∏ 
void
∏∏ !
SetFontBaseMaterial
∏∏ 2
(
∏∏2 3
Material
∏∏3 ;
mat
∏∏< ?
)
∏∏? @
{
∏∏A B
}
∏∏C D
	protected
ææ 
virtual
ææ 
Material
ææ "
[
ææ" #
]
ææ# $ 
GetSharedMaterials
ææ% 7
(
ææ7 8
)
ææ8 9
{
ææ: ;
return
ææ< B
null
ææC G
;
ææG H
}
ææI J
	protected
√√ 
virtual
√√ 
void
√√  
SetSharedMaterials
√√ 1
(
√√1 2
Material
√√2 :
[
√√: ;
]
√√; <
	materials
√√= F
)
√√F G
{
√√H I
}
√√J K
	protected
…… 
virtual
…… 
Material
…… "
[
……" #
]
……# $
GetMaterials
……% 1
(
……1 2
Material
……2 :
[
……: ;
]
……; <
mats
……= A
)
……A B
{
……C D
return
……E K
null
……L P
;
……P Q
}
……R S
	protected
÷÷ 
virtual
÷÷ 
Material
÷÷ "$
CreateMaterialInstance
÷÷# 9
(
÷÷9 :
Material
÷÷: B
source
÷÷C I
)
÷÷I J
{
◊◊ 	
Material
ÿÿ 
mat
ÿÿ 
=
ÿÿ 
new
ÿÿ 
Material
ÿÿ '
(
ÿÿ' (
source
ÿÿ( .
)
ÿÿ. /
;
ÿÿ/ 0
mat
ŸŸ 
.
ŸŸ 
shaderKeywords
ŸŸ 
=
ŸŸ  
source
ŸŸ! '
.
ŸŸ' (
shaderKeywords
ŸŸ( 6
;
ŸŸ6 7
mat
⁄⁄ 
.
⁄⁄ 
name
⁄⁄ 
+=
⁄⁄ 
$str
⁄⁄ %
;
⁄⁄% &
return
‹‹ 
mat
‹‹ 
;
‹‹ 
}
›› 	
	protected
ﬂﬂ 
void
ﬂﬂ $
SetVertexColorGradient
ﬂﬂ -
(
ﬂﬂ- .
TMP_ColorGradient
ﬂﬂ. ?
gradient
ﬂﬂ@ H
)
ﬂﬂH I
{
‡‡ 	
if
·· 
(
·· 
gradient
·· 
==
·· 
null
··  
)
··  !
return
··" (
;
··( )!
m_fontColorGradient
„„ 
.
„„  

bottomLeft
„„  *
=
„„+ ,
gradient
„„- 5
.
„„5 6

bottomLeft
„„6 @
;
„„@ A!
m_fontColorGradient
‰‰ 
.
‰‰  
bottomRight
‰‰  +
=
‰‰, -
gradient
‰‰. 6
.
‰‰6 7
bottomRight
‰‰7 B
;
‰‰B C!
m_fontColorGradient
ÂÂ 
.
ÂÂ  
topLeft
ÂÂ  '
=
ÂÂ( )
gradient
ÂÂ* 2
.
ÂÂ2 3
topLeft
ÂÂ3 :
;
ÂÂ: ;!
m_fontColorGradient
ÊÊ 
.
ÊÊ  
topRight
ÊÊ  (
=
ÊÊ) *
gradient
ÊÊ+ 3
.
ÊÊ3 4
topRight
ÊÊ4 <
;
ÊÊ< =
SetVerticesDirty
ËË 
(
ËË 
)
ËË 
;
ËË 
}
ÈÈ 	
	protected
ÓÓ 
void
ÓÓ !
SetTextSortingOrder
ÓÓ *
(
ÓÓ* + 
VertexSortingOrder
ÓÓ+ =
order
ÓÓ> C
)
ÓÓC D
{
ÔÔ 	
}
ÒÒ 	
	protected
˜˜ 
void
˜˜ !
SetTextSortingOrder
˜˜ *
(
˜˜* +
int
˜˜+ .
[
˜˜. /
]
˜˜/ 0
order
˜˜1 6
)
˜˜6 7
{
¯¯ 	
}
˙˙ 	
	protected
ÄÄ 
virtual
ÄÄ 
void
ÄÄ 
SetFaceColor
ÄÄ +
(
ÄÄ+ ,
Color32
ÄÄ, 3
color
ÄÄ4 9
)
ÄÄ9 :
{
ÄÄ; <
}
ÄÄ= >
	protected
ÜÜ 
virtual
ÜÜ 
void
ÜÜ 
SetOutlineColor
ÜÜ .
(
ÜÜ. /
Color32
ÜÜ/ 6
color
ÜÜ7 <
)
ÜÜ< =
{
ÜÜ> ?
}
ÜÜ@ A
	protected
åå 
virtual
åå 
void
åå !
SetOutlineThickness
åå 2
(
åå2 3
float
åå3 8
	thickness
åå9 B
)
ååB C
{
ååD E
}
ååF G
	protected
ëë 
virtual
ëë 
void
ëë 
SetShaderDepth
ëë -
(
ëë- .
)
ëë. /
{
ëë0 1
}
ëë2 3
	protected
ññ 
virtual
ññ 
void
ññ 

SetCulling
ññ )
(
ññ) *
)
ññ* +
{
ññ, -
}
ññ. /
internal
õõ 
virtual
õõ 
void
õõ 
UpdateCulling
õõ +
(
õõ+ ,
)
õõ, -
{
õõ. /
}
õõ/ 0
	protected
°° 
virtual
°° 
float
°° #
GetPaddingForMaterial
°°  5
(
°°5 6
)
°°6 7
{
¢¢ 	
ShaderUtilities
££ 
.
££ "
GetShaderPropertyIDs
££ 0
(
££0 1
)
££1 2
;
££2 3
if
•• 
(
•• 
m_sharedMaterial
••  
==
••! #
null
••$ (
)
••( )
return
••* 0
$num
••1 2
;
••2 3
	m_padding
ßß 
=
ßß 
ShaderUtilities
ßß '
.
ßß' (

GetPadding
ßß( 2
(
ßß2 3
m_sharedMaterial
ßß3 C
,
ßßC D"
m_enableExtraPadding
ßßE Y
,
ßßY Z
m_isUsingBold
ßß[ h
)
ßßh i
;
ßßi j 
m_isMaskingEnabled
®® 
=
®®  
ShaderUtilities
®®! 0
.
®®0 1
IsMaskingEnabled
®®1 A
(
®®A B
m_sharedMaterial
®®B R
)
®®R S
;
®®S T
m_isSDFShader
©© 
=
©© 
m_sharedMaterial
©© ,
.
©©, -
HasProperty
©©- 8
(
©©8 9
ShaderUtilities
©©9 H
.
©©H I
ID_WeightNormal
©©I X
)
©©X Y
;
©©Y Z
return
´´ 
	m_padding
´´ 
;
´´ 
}
¨¨ 	
	protected
≥≥ 
virtual
≥≥ 
float
≥≥ #
GetPaddingForMaterial
≥≥  5
(
≥≥5 6
Material
≥≥6 >
mat
≥≥? B
)
≥≥B C
{
¥¥ 	
if
µµ 
(
µµ 
mat
µµ 
==
µµ 
null
µµ 
)
µµ 
return
∂∂ 
$num
∂∂ 
;
∂∂ 
	m_padding
∏∏ 
=
∏∏ 
ShaderUtilities
∏∏ '
.
∏∏' (

GetPadding
∏∏( 2
(
∏∏2 3
mat
∏∏3 6
,
∏∏6 7"
m_enableExtraPadding
∏∏8 L
,
∏∏L M
m_isUsingBold
∏∏N [
)
∏∏[ \
;
∏∏\ ] 
m_isMaskingEnabled
ππ 
=
ππ  
ShaderUtilities
ππ! 0
.
ππ0 1
IsMaskingEnabled
ππ1 A
(
ππA B
m_sharedMaterial
ππB R
)
ππR S
;
ππS T
m_isSDFShader
∫∫ 
=
∫∫ 
mat
∫∫ 
.
∫∫  
HasProperty
∫∫  +
(
∫∫+ ,
ShaderUtilities
∫∫, ;
.
∫∫; <
ID_WeightNormal
∫∫< K
)
∫∫K L
;
∫∫L M
return
ºº 
	m_padding
ºº 
;
ºº 
}
ΩΩ 	
	protected
ƒƒ 
virtual
ƒƒ 
Vector3
ƒƒ !
[
ƒƒ! "
]
ƒƒ" #*
GetTextContainerLocalCorners
ƒƒ$ @
(
ƒƒ@ A
)
ƒƒA B
{
ƒƒC D
return
ƒƒE K
null
ƒƒL P
;
ƒƒP Q
}
ƒƒR S
	protected
»» 
bool
»» !
m_ignoreActiveState
»» *
;
»»* +
public
ŒŒ 
virtual
ŒŒ 
void
ŒŒ 
ForceMeshUpdate
ŒŒ +
(
ŒŒ+ ,
bool
ŒŒ, 0
ignoreActiveState
ŒŒ1 B
=
ŒŒC D
false
ŒŒE J
,
ŒŒJ K
bool
ŒŒL P 
forceTextReparsing
ŒŒQ c
=
ŒŒd e
false
ŒŒf k
)
ŒŒk l
{
ŒŒm n
}
ŒŒo p
public
÷÷ 
virtual
÷÷ 
void
÷÷ 
UpdateGeometry
÷÷ *
(
÷÷* +
Mesh
÷÷+ /
mesh
÷÷0 4
,
÷÷4 5
int
÷÷6 9
index
÷÷: ?
)
÷÷? @
{
÷÷A B
}
÷÷C D
public
‹‹ 
virtual
‹‹ 
void
‹‹ 
UpdateVertexData
‹‹ ,
(
‹‹, -'
TMP_VertexDataUpdateFlags
‹‹- F
flags
‹‹G L
)
‹‹L M
{
‹‹N O
}
‹‹P Q
public
‚‚ 
virtual
‚‚ 
void
‚‚ 
UpdateVertexData
‚‚ ,
(
‚‚, -
)
‚‚- .
{
‚‚/ 0
}
‚‚1 2
public
ÈÈ 
virtual
ÈÈ 
void
ÈÈ 
SetVertices
ÈÈ '
(
ÈÈ' (
Vector3
ÈÈ( /
[
ÈÈ/ 0
]
ÈÈ0 1
vertices
ÈÈ2 :
)
ÈÈ: ;
{
ÈÈ< =
}
ÈÈ> ?
public
ÔÔ 
virtual
ÔÔ 
void
ÔÔ 
UpdateMeshPadding
ÔÔ -
(
ÔÔ- .
)
ÔÔ. /
{
ÔÔ0 1
}
ÔÔ2 3
public
ˇˇ 
override
ˇˇ 
void
ˇˇ 
CrossFadeColor
ˇˇ +
(
ˇˇ+ ,
Color
ˇˇ, 1
targetColor
ˇˇ2 =
,
ˇˇ= >
float
ˇˇ? D
duration
ˇˇE M
,
ˇˇM N
bool
ˇˇO S
ignoreTimeScale
ˇˇT c
,
ˇˇc d
bool
ˇˇe i
useAlpha
ˇˇj r
)
ˇˇr s
{
ÄÄ 	
base
ÅÅ 
.
ÅÅ 
CrossFadeColor
ÅÅ 
(
ÅÅ  
targetColor
ÅÅ  +
,
ÅÅ+ ,
duration
ÅÅ- 5
,
ÅÅ5 6
ignoreTimeScale
ÅÅ7 F
,
ÅÅF G
useAlpha
ÅÅH P
)
ÅÅP Q
;
ÅÅQ R$
InternalCrossFadeColor
ÇÇ "
(
ÇÇ" #
targetColor
ÇÇ# .
,
ÇÇ. /
duration
ÇÇ0 8
,
ÇÇ8 9
ignoreTimeScale
ÇÇ: I
,
ÇÇI J
useAlpha
ÇÇK S
)
ÇÇS T
;
ÇÇT U
}
ÉÉ 	
public
åå 
override
åå 
void
åå 
CrossFadeAlpha
åå +
(
åå+ ,
float
åå, 1
alpha
åå2 7
,
åå7 8
float
åå9 >
duration
åå? G
,
ååG H
bool
ååI M
ignoreTimeScale
ååN ]
)
åå] ^
{
çç 	
base
éé 
.
éé 
CrossFadeAlpha
éé 
(
éé  
alpha
éé  %
,
éé% &
duration
éé' /
,
éé/ 0
ignoreTimeScale
éé1 @
)
éé@ A
;
ééA B$
InternalCrossFadeAlpha
èè "
(
èè" #
alpha
èè# (
,
èè( )
duration
èè* 2
,
èè2 3
ignoreTimeScale
èè4 C
)
èèC D
;
èèD E
}
êê 	
	protected
õõ 
virtual
õõ 
void
õõ $
InternalCrossFadeColor
õõ 5
(
õõ5 6
Color
õõ6 ;
targetColor
õõ< G
,
õõG H
float
õõI N
duration
õõO W
,
õõW X
bool
õõY ]
ignoreTimeScale
õõ^ m
,
õõm n
bool
õõo s
useAlpha
õõt |
)
õõ| }
{
õõ~ 
}õõÄ Å
	protected
§§ 
virtual
§§ 
void
§§ $
InternalCrossFadeAlpha
§§ 5
(
§§5 6
float
§§6 ;
alpha
§§< A
,
§§A B
float
§§C H
duration
§§I Q
,
§§Q R
bool
§§S W
ignoreTimeScale
§§X g
)
§§g h
{
§§i j
}
§§k l
struct
©© "
TextBackingContainer
©© #
{
™™ 	
public
´´ 
int
´´ 
Capacity
´´ 
{
¨¨ 
get
≠≠ 
{
≠≠ 
return
≠≠ 
m_Array
≠≠ $
.
≠≠$ %
Length
≠≠% +
;
≠≠+ ,
}
≠≠- .
}
ÆÆ 
public
∞∞ 
int
∞∞ 
Count
∞∞ 
{
±± 
get
≤≤ 
{
≤≤ 
return
≤≤ 
m_Count
≤≤ $
;
≤≤$ %
}
≤≤& '
set
≥≥ 
{
≥≥ 
m_Count
≥≥ 
=
≥≥ 
value
≥≥  %
;
≥≥% &
}
≥≥' (
}
¥¥ 
private
∂∂ 
uint
∂∂ 
[
∂∂ 
]
∂∂ 
m_Array
∂∂ "
;
∂∂" #
private
∑∑ 
int
∑∑ 
m_Count
∑∑ 
;
∑∑  
public
ππ 
uint
ππ 
this
ππ 
[
ππ 
int
ππ  
index
ππ! &
]
ππ& '
{
∫∫ 
get
ªª 
{
ªª 
return
ªª 
m_Array
ªª $
[
ªª$ %
index
ªª% *
]
ªª* +
;
ªª+ ,
}
ªª- .
set
ºº 
{
ΩΩ 
if
ææ 
(
ææ 
index
ææ 
>=
ææ  
m_Array
ææ! (
.
ææ( )
Length
ææ) /
)
ææ/ 0
Resize
øø 
(
øø 
index
øø $
)
øø$ %
;
øø% &
m_Array
¡¡ 
[
¡¡ 
index
¡¡ !
]
¡¡! "
=
¡¡# $
value
¡¡% *
;
¡¡* +
}
¬¬ 
}
√√ 
public
≈≈ "
TextBackingContainer
≈≈ '
(
≈≈' (
int
≈≈( +
size
≈≈, 0
)
≈≈0 1
{
∆∆ 
m_Array
«« 
=
«« 
new
«« 
uint
«« "
[
««" #
size
««# '
]
««' (
;
««( )
m_Count
»» 
=
»» 
$num
»» 
;
»» 
}
…… 
public
ÀÀ 
void
ÀÀ 
Resize
ÀÀ 
(
ÀÀ 
int
ÀÀ "
size
ÀÀ# '
)
ÀÀ' (
{
ÃÃ 
size
ÕÕ 
=
ÕÕ 
Mathf
ÕÕ 
.
ÕÕ 
NextPowerOfTwo
ÕÕ +
(
ÕÕ+ ,
size
ÕÕ, 0
+
ÕÕ1 2
$num
ÕÕ3 4
)
ÕÕ4 5
;
ÕÕ5 6
Array
œœ 
.
œœ 
Resize
œœ 
(
œœ 
ref
œœ  
m_Array
œœ! (
,
œœ( )
size
œœ* .
)
œœ. /
;
œœ/ 0
}
–– 
}
““ 	
private
◊◊ "
TextBackingContainer
◊◊ $ 
m_TextBackingArray
◊◊% 7
=
◊◊8 9
new
◊◊: ="
TextBackingContainer
◊◊> R
(
◊◊R S
$num
◊◊S T
)
◊◊T U
;
◊◊U V
	protected
›› 
void
›› 
ParseInputText
›› %
(
››% &
)
››& '
{
ﬁﬁ 	
k_ParseTextMarker
ﬂﬂ 
.
ﬂﬂ 
Begin
ﬂﬂ #
(
ﬂﬂ# $
)
ﬂﬂ$ %
;
ﬂﬂ% &
switch
·· 
(
·· 
m_inputSource
·· !
)
··! "
{
‚‚ 
case
„„ 
TextInputSources
„„ %
.
„„% &

TextString
„„& 0
:
„„0 1
case
‰‰ 
TextInputSources
‰‰ %
.
‰‰% &
TextInputBox
‰‰& 2
:
‰‰2 3&
PopulateTextBackingArray
ÂÂ ,
(
ÂÂ, - 
m_TextPreprocessor
ÂÂ- ?
==
ÂÂ@ B
null
ÂÂC G
?
ÂÂH I
m_text
ÂÂJ P
:
ÂÂQ R 
m_TextPreprocessor
ÂÂS e
.
ÂÂe f
PreprocessText
ÂÂf t
(
ÂÂt u
m_text
ÂÂu {
)
ÂÂ{ |
)
ÂÂ| }
;
ÂÂ} ~)
PopulateTextProcessingArray
ÊÊ /
(
ÊÊ/ 0
)
ÊÊ0 1
;
ÊÊ1 2
break
ÁÁ 
;
ÁÁ 
case
ËË 
TextInputSources
ËË %
.
ËË% &
SetText
ËË& -
:
ËË- .
break
ÈÈ 
;
ÈÈ 
case
ÍÍ 
TextInputSources
ÍÍ %
.
ÍÍ% &
SetTextArray
ÍÍ& 2
:
ÍÍ2 3
break
ÎÎ 
;
ÎÎ 
}
ÏÏ 
SetArraySizes
ÓÓ 
(
ÓÓ #
m_TextProcessingArray
ÓÓ /
)
ÓÓ/ 0
;
ÓÓ0 1
k_ParseTextMarker
 
.
 
End
 !
(
! "
)
" #
;
# $
}
ÒÒ 	
void
¯¯ &
PopulateTextBackingArray
¯¯ %
(
¯¯% &
string
¯¯& ,

sourceText
¯¯- 7
)
¯¯7 8
{
˘˘ 	
int
˙˙ 
	srcLength
˙˙ 
=
˙˙ 

sourceText
˙˙ &
==
˙˙' )
null
˙˙* .
?
˙˙/ 0
$num
˙˙1 2
:
˙˙3 4

sourceText
˙˙5 ?
.
˙˙? @
Length
˙˙@ F
;
˙˙F G&
PopulateTextBackingArray
¸¸ $
(
¸¸$ %

sourceText
¸¸% /
,
¸¸/ 0
$num
¸¸1 2
,
¸¸2 3
	srcLength
¸¸4 =
)
¸¸= >
;
¸¸> ?
}
˝˝ 	
void
ÖÖ &
PopulateTextBackingArray
ÖÖ %
(
ÖÖ% &
string
ÖÖ& ,

sourceText
ÖÖ- 7
,
ÖÖ7 8
int
ÖÖ9 <
start
ÖÖ= B
,
ÖÖB C
int
ÖÖD G
length
ÖÖH N
)
ÖÖN O
{
ÜÜ 	
int
áá 
	readIndex
áá 
;
áá 
int
àà 

writeIndex
àà 
=
àà 
$num
àà 
;
àà 
if
ãã 
(
ãã 

sourceText
ãã 
==
ãã 
null
ãã "
)
ãã" #
{
åå 
	readIndex
çç 
=
çç 
$num
çç 
;
çç 
length
éé 
=
éé 
$num
éé 
;
éé 
}
èè 
else
êê 
{
ëë 
	readIndex
íí 
=
íí 
Mathf
íí !
.
íí! "
Clamp
íí" '
(
íí' (
start
íí( -
,
íí- .
$num
íí/ 0
,
íí0 1

sourceText
íí2 <
.
íí< =
Length
íí= C
)
ííC D
;
ííD E
length
ìì 
=
ìì 
Mathf
ìì 
.
ìì 
Clamp
ìì $
(
ìì$ %
length
ìì% +
,
ìì+ ,
$num
ìì- .
,
ìì. /
start
ìì0 5
+
ìì6 7
length
ìì8 >
<
ìì? @

sourceText
ììA K
.
ììK L
Length
ììL R
?
ììS T
length
ììU [
:
ìì\ ]

sourceText
ìì^ h
.
ììh i
Length
ììi o
-
ììp q
start
ììr w
)
ììw x
;
ììx y
}
îî 
if
óó 
(
óó 
length
óó 
>=
óó  
m_TextBackingArray
óó ,
.
óó, -
Capacity
óó- 5
)
óó5 6 
m_TextBackingArray
òò "
.
òò" #
Resize
òò# )
(
òò) *
(
òò* +
length
òò+ 1
)
òò1 2
)
òò2 3
;
òò3 4
int
öö 
end
öö 
=
öö 
	readIndex
öö 
+
öö  !
length
öö" (
;
öö( )
for
õõ 
(
õõ 
;
õõ 
	readIndex
õõ 
<
õõ 
end
õõ "
;
õõ" #
	readIndex
õõ$ -
++
õõ- /
)
õõ/ 0
{
úú  
m_TextBackingArray
ùù "
[
ùù" #

writeIndex
ùù# -
]
ùù- .
=
ùù/ 0

sourceText
ùù1 ;
[
ùù; <
	readIndex
ùù< E
]
ùùE F
;
ùùF G

writeIndex
ûû 
+=
ûû 
$num
ûû 
;
ûû  
}
üü  
m_TextBackingArray
¢¢ 
[
¢¢ 

writeIndex
¢¢ )
]
¢¢) *
=
¢¢+ ,
$num
¢¢- .
;
¢¢. / 
m_TextBackingArray
££ 
.
££ 
Count
££ $
=
££% &

writeIndex
££' 1
;
££1 2
}
§§ 	
void
¨¨ &
PopulateTextBackingArray
¨¨ %
(
¨¨% &
StringBuilder
¨¨& 3

sourceText
¨¨4 >
,
¨¨> ?
int
¨¨@ C
start
¨¨D I
,
¨¨I J
int
¨¨K N
length
¨¨O U
)
¨¨U V
{
≠≠ 	
int
ÆÆ 
	readIndex
ÆÆ 
;
ÆÆ 
int
ØØ 

writeIndex
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
if
≤≤ 
(
≤≤ 

sourceText
≤≤ 
==
≤≤ 
null
≤≤ "
)
≤≤" #
{
≥≥ 
	readIndex
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥ 
length
µµ 
=
µµ 
$num
µµ 
;
µµ 
}
∂∂ 
else
∑∑ 
{
∏∏ 
	readIndex
ππ 
=
ππ 
Mathf
ππ !
.
ππ! "
Clamp
ππ" '
(
ππ' (
start
ππ( -
,
ππ- .
$num
ππ/ 0
,
ππ0 1

sourceText
ππ2 <
.
ππ< =
Length
ππ= C
)
ππC D
;
ππD E
length
∫∫ 
=
∫∫ 
Mathf
∫∫ 
.
∫∫ 
Clamp
∫∫ $
(
∫∫$ %
length
∫∫% +
,
∫∫+ ,
$num
∫∫- .
,
∫∫. /
start
∫∫0 5
+
∫∫6 7
length
∫∫8 >
<
∫∫? @

sourceText
∫∫A K
.
∫∫K L
Length
∫∫L R
?
∫∫S T
length
∫∫U [
:
∫∫\ ]

sourceText
∫∫^ h
.
∫∫h i
Length
∫∫i o
-
∫∫p q
start
∫∫r w
)
∫∫w x
;
∫∫x y
}
ªª 
if
ææ 
(
ææ 
length
ææ 
>=
ææ  
m_TextBackingArray
ææ ,
.
ææ, -
Capacity
ææ- 5
)
ææ5 6 
m_TextBackingArray
øø "
.
øø" #
Resize
øø# )
(
øø) *
(
øø* +
length
øø+ 1
)
øø1 2
)
øø2 3
;
øø3 4
int
¡¡ 
end
¡¡ 
=
¡¡ 
	readIndex
¡¡ 
+
¡¡  !
length
¡¡" (
;
¡¡( )
for
¬¬ 
(
¬¬ 
;
¬¬ 
	readIndex
¬¬ 
<
¬¬ 
end
¬¬ "
;
¬¬" #
	readIndex
¬¬$ -
++
¬¬- /
)
¬¬/ 0
{
√√  
m_TextBackingArray
ƒƒ "
[
ƒƒ" #

writeIndex
ƒƒ# -
]
ƒƒ- .
=
ƒƒ/ 0

sourceText
ƒƒ1 ;
[
ƒƒ; <
	readIndex
ƒƒ< E
]
ƒƒE F
;
ƒƒF G

writeIndex
≈≈ 
+=
≈≈ 
$num
≈≈ 
;
≈≈  
}
∆∆  
m_TextBackingArray
…… 
[
…… 

writeIndex
…… )
]
……) *
=
……+ ,
$num
……- .
;
……. / 
m_TextBackingArray
   
.
   
Count
   $
=
  % &

writeIndex
  ' 1
;
  1 2
}
ÀÀ 	
void
”” &
PopulateTextBackingArray
”” %
(
””% &
char
””& *
[
””* +
]
””+ ,

sourceText
””- 7
,
””7 8
int
””9 <
start
””= B
,
””B C
int
””D G
length
””H N
)
””N O
{
‘‘ 	
int
’’ 
	readIndex
’’ 
;
’’ 
int
÷÷ 

writeIndex
÷÷ 
=
÷÷ 
$num
÷÷ 
;
÷÷ 
if
ŸŸ 
(
ŸŸ 

sourceText
ŸŸ 
==
ŸŸ 
null
ŸŸ "
)
ŸŸ" #
{
⁄⁄ 
	readIndex
€€ 
=
€€ 
$num
€€ 
;
€€ 
length
‹‹ 
=
‹‹ 
$num
‹‹ 
;
‹‹ 
}
›› 
else
ﬁﬁ 
{
ﬂﬂ 
	readIndex
‡‡ 
=
‡‡ 
Mathf
‡‡ !
.
‡‡! "
Clamp
‡‡" '
(
‡‡' (
start
‡‡( -
,
‡‡- .
$num
‡‡/ 0
,
‡‡0 1

sourceText
‡‡2 <
.
‡‡< =
Length
‡‡= C
)
‡‡C D
;
‡‡D E
length
·· 
=
·· 
Mathf
·· 
.
·· 
Clamp
·· $
(
··$ %
length
··% +
,
··+ ,
$num
··- .
,
··. /
start
··0 5
+
··6 7
length
··8 >
<
··? @

sourceText
··A K
.
··K L
Length
··L R
?
··S T
length
··U [
:
··\ ]

sourceText
··^ h
.
··h i
Length
··i o
-
··p q
start
··r w
)
··w x
;
··x y
}
‚‚ 
if
ÂÂ 
(
ÂÂ 
length
ÂÂ 
>=
ÂÂ  
m_TextBackingArray
ÂÂ ,
.
ÂÂ, -
Capacity
ÂÂ- 5
)
ÂÂ5 6 
m_TextBackingArray
ÊÊ "
.
ÊÊ" #
Resize
ÊÊ# )
(
ÊÊ) *
(
ÊÊ* +
length
ÊÊ+ 1
)
ÊÊ1 2
)
ÊÊ2 3
;
ÊÊ3 4
int
ËË 
end
ËË 
=
ËË 
	readIndex
ËË 
+
ËË  !
length
ËË" (
;
ËË( )
for
ÈÈ 
(
ÈÈ 
;
ÈÈ 
	readIndex
ÈÈ 
<
ÈÈ 
end
ÈÈ "
;
ÈÈ" #
	readIndex
ÈÈ$ -
++
ÈÈ- /
)
ÈÈ/ 0
{
ÍÍ  
m_TextBackingArray
ÎÎ "
[
ÎÎ" #

writeIndex
ÎÎ# -
]
ÎÎ- .
=
ÎÎ/ 0

sourceText
ÎÎ1 ;
[
ÎÎ; <
	readIndex
ÎÎ< E
]
ÎÎE F
;
ÎÎF G

writeIndex
ÏÏ 
+=
ÏÏ 
$num
ÏÏ 
;
ÏÏ  
}
ÌÌ  
m_TextBackingArray
 
[
 

writeIndex
 )
]
) *
=
+ ,
$num
- .
;
. / 
m_TextBackingArray
ÒÒ 
.
ÒÒ 
Count
ÒÒ $
=
ÒÒ% &

writeIndex
ÒÒ' 1
;
ÒÒ1 2
}
ÚÚ 	
void
˜˜ )
PopulateTextProcessingArray
˜˜ (
(
˜˜( )
)
˜˜) *
{
¯¯ 	
int
˘˘ 
	srcLength
˘˘ 
=
˘˘  
m_TextBackingArray
˘˘ .
.
˘˘. /
Count
˘˘/ 4
;
˘˘4 5
if
¸¸ 
(
¸¸ #
m_TextProcessingArray
¸¸ %
.
¸¸% &
Length
¸¸& ,
<
¸¸- .
	srcLength
¸¸/ 8
)
¸¸8 9!
ResizeInternalArray
˝˝ #
(
˝˝# $
ref
˝˝$ '#
m_TextProcessingArray
˝˝( =
,
˝˝= >
	srcLength
˝˝? H
)
˝˝H I
;
˝˝I J%
TMP_TextProcessingStack
ÄÄ #
<
ÄÄ# $
int
ÄÄ$ '
>
ÄÄ' (
.
ÄÄ( )

SetDefault
ÄÄ) 3
(
ÄÄ3 4
m_TextStyleStacks
ÄÄ4 E
,
ÄÄE F
$num
ÄÄG H
)
ÄÄH I
;
ÄÄI J#
m_TextStyleStackDepth
ÇÇ !
=
ÇÇ" #
$num
ÇÇ$ %
;
ÇÇ% &
int
ÉÉ 

writeIndex
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
if
ÜÜ 
(
ÜÜ 
	textStyle
ÜÜ 
.
ÜÜ 
hashCode
ÜÜ "
!=
ÜÜ# %
(
ÜÜ& '
int
ÜÜ' *
)
ÜÜ* +
	MarkupTag
ÜÜ+ 4
.
ÜÜ4 5
NORMAL
ÜÜ5 ;
)
ÜÜ; <#
InsertOpeningStyleTag
áá %
(
áá% &
m_TextStyle
áá& 1
,
áá1 2
$num
áá3 4
,
áá4 5
ref
áá6 9#
m_TextProcessingArray
áá: O
,
ááO P
ref
ááQ T

writeIndex
ááU _
)
áá_ `
;
áá` a
int
ââ 
	readIndex
ââ 
=
ââ 
$num
ââ 
;
ââ 
for
ää 
(
ää 
;
ää 
	readIndex
ää 
<
ää 
	srcLength
ää (
;
ää( )
	readIndex
ää* 3
++
ää3 5
)
ää5 6
{
ãã 
uint
åå 
c
åå 
=
åå  
m_TextBackingArray
åå +
[
åå+ ,
	readIndex
åå, 5
]
åå5 6
;
åå6 7
if
éé 
(
éé 
c
éé 
==
éé 
$num
éé 
)
éé 
break
èè 
;
èè 
if
ëë 
(
ëë 
m_inputSource
ëë !
==
ëë" $
TextInputSources
ëë% 5
.
ëë5 6
TextInputBox
ëë6 B
&&
ëëC E
c
ëëF G
==
ëëH J
$char
ëëK O
&&
ëëP R
	readIndex
ëëS \
<
ëë] ^
	srcLength
ëë_ h
-
ëëi j
$num
ëëk l
)
ëël m
{
íí 
switch
ìì 
(
ìì  
m_TextBackingArray
ìì .
[
ìì. /
	readIndex
ìì/ 8
+
ìì9 :
$num
ìì; <
]
ìì< =
)
ìì= >
{
îî 
case
ïï 
$num
ïï 
:
ïï  
if
ññ 
(
ññ  
!
ññ  !#
m_parseCtrlCharacters
ññ! 6
)
ññ6 7
break
ññ8 =
;
ññ= >
if
òò 
(
òò  
	srcLength
òò  )
<=
òò* ,
	readIndex
òò- 6
+
òò7 8
$num
òò9 :
)
òò: ;
break
òò< A
;
òòA B
if
öö 
(
öö  

writeIndex
öö  *
+
öö+ ,
$num
öö- .
>
öö/ 0#
m_TextProcessingArray
öö1 F
.
ööF G
Length
ööG M
)
ööM N!
ResizeInternalArray
ööO b
(
ööb c
ref
ööc f#
m_TextProcessingArray
öög |
)
öö| }
;
öö} ~#
m_TextProcessingArray
úú 1
[
úú1 2

writeIndex
úú2 <
]
úú< =
.
úú= >
unicode
úú> E
=
úúF G
(
úúH I
int
úúI L
)
úúL M 
m_TextBackingArray
úúM _
[
úú_ `
	readIndex
úú` i
+
úúj k
$num
úúl m
]
úúm n
;
úún o#
m_TextProcessingArray
ùù 1
[
ùù1 2

writeIndex
ùù2 <
]
ùù< =
.
ùù= >
stringIndex
ùù> I
=
ùùJ K
	readIndex
ùùL U
;
ùùU V#
m_TextProcessingArray
ûû 1
[
ûû1 2

writeIndex
ûû2 <
]
ûû< =
.
ûû= >
length
ûû> D
=
ûûE F
$num
ûûG H
;
ûûH I#
m_TextProcessingArray
†† 1
[
††1 2

writeIndex
††2 <
+
††= >
$num
††? @
]
††@ A
.
††A B
unicode
††B I
=
††J K
(
††L M
int
††M P
)
††P Q 
m_TextBackingArray
††Q c
[
††c d
	readIndex
††d m
+
††n o
$num
††p q
]
††q r
;
††r s#
m_TextProcessingArray
°° 1
[
°°1 2

writeIndex
°°2 <
+
°°= >
$num
°°? @
]
°°@ A
.
°°A B
stringIndex
°°B M
=
°°N O
	readIndex
°°P Y
;
°°Y Z#
m_TextProcessingArray
¢¢ 1
[
¢¢1 2

writeIndex
¢¢2 <
+
¢¢= >
$num
¢¢? @
]
¢¢@ A
.
¢¢A B
length
¢¢B H
=
¢¢I J
$num
¢¢K L
;
¢¢L M
	readIndex
§§ %
+=
§§& (
$num
§§) *
;
§§* +

writeIndex
•• &
+=
••' )
$num
••* +
;
••+ ,
continue
¶¶ $
;
¶¶$ %
case
ßß 
$num
ßß  
:
ßß  !
if
®® 
(
®®  
!
®®  !#
m_parseCtrlCharacters
®®! 6
)
®®6 7
break
®®8 =
;
®®= >
if
™™ 
(
™™  

writeIndex
™™  *
==
™™+ -#
m_TextProcessingArray
™™. C
.
™™C D
Length
™™D J
)
™™J K!
ResizeInternalArray
™™L _
(
™™_ `
ref
™™` c#
m_TextProcessingArray
™™d y
)
™™y z
;
™™z {#
m_TextProcessingArray
¨¨ 1
[
¨¨1 2

writeIndex
¨¨2 <
]
¨¨< =
.
¨¨= >
unicode
¨¨> E
=
¨¨F G
$num
¨¨H J
;
¨¨J K#
m_TextProcessingArray
≠≠ 1
[
≠≠1 2

writeIndex
≠≠2 <
]
≠≠< =
.
≠≠= >
stringIndex
≠≠> I
=
≠≠J K
	readIndex
≠≠L U
;
≠≠U V#
m_TextProcessingArray
ÆÆ 1
[
ÆÆ1 2

writeIndex
ÆÆ2 <
]
ÆÆ< =
.
ÆÆ= >
length
ÆÆ> D
=
ÆÆE F
$num
ÆÆG H
;
ÆÆH I
	readIndex
∞∞ %
+=
∞∞& (
$num
∞∞) *
;
∞∞* +

writeIndex
±± &
+=
±±' )
$num
±±* +
;
±±+ ,
continue
≤≤ $
;
≤≤$ %
case
≥≥ 
$num
≥≥  
:
≥≥  !
if
¥¥ 
(
¥¥  
!
¥¥  !#
m_parseCtrlCharacters
¥¥! 6
)
¥¥6 7
break
¥¥8 =
;
¥¥= >
if
∂∂ 
(
∂∂  

writeIndex
∂∂  *
==
∂∂+ -#
m_TextProcessingArray
∂∂. C
.
∂∂C D
Length
∂∂D J
)
∂∂J K!
ResizeInternalArray
∂∂L _
(
∂∂_ `
ref
∂∂` c#
m_TextProcessingArray
∂∂d y
)
∂∂y z
;
∂∂z {#
m_TextProcessingArray
∏∏ 1
[
∏∏1 2

writeIndex
∏∏2 <
]
∏∏< =
.
∏∏= >
unicode
∏∏> E
=
∏∏F G
$num
∏∏H J
;
∏∏J K#
m_TextProcessingArray
ππ 1
[
ππ1 2

writeIndex
ππ2 <
]
ππ< =
.
ππ= >
stringIndex
ππ> I
=
ππJ K
	readIndex
ππL U
;
ππU V#
m_TextProcessingArray
∫∫ 1
[
∫∫1 2

writeIndex
∫∫2 <
]
∫∫< =
.
∫∫= >
length
∫∫> D
=
∫∫E F
$num
∫∫G H
;
∫∫H I
	readIndex
ºº %
+=
ºº& (
$num
ºº) *
;
ºº* +

writeIndex
ΩΩ &
+=
ΩΩ' )
$num
ΩΩ* +
;
ΩΩ+ ,
continue
ææ $
;
ææ$ %
case
øø 
$num
øø  
:
øø  !
if
¿¿ 
(
¿¿  
!
¿¿  !#
m_parseCtrlCharacters
¿¿! 6
)
¿¿6 7
break
¿¿8 =
;
¿¿= >
if
¬¬ 
(
¬¬  

writeIndex
¬¬  *
==
¬¬+ -#
m_TextProcessingArray
¬¬. C
.
¬¬C D
Length
¬¬D J
)
¬¬J K!
ResizeInternalArray
¬¬L _
(
¬¬_ `
ref
¬¬` c#
m_TextProcessingArray
¬¬d y
)
¬¬y z
;
¬¬z {#
m_TextProcessingArray
ƒƒ 1
[
ƒƒ1 2

writeIndex
ƒƒ2 <
]
ƒƒ< =
.
ƒƒ= >
unicode
ƒƒ> E
=
ƒƒF G
$num
ƒƒH I
;
ƒƒI J#
m_TextProcessingArray
≈≈ 1
[
≈≈1 2

writeIndex
≈≈2 <
]
≈≈< =
.
≈≈= >
stringIndex
≈≈> I
=
≈≈J K
	readIndex
≈≈L U
;
≈≈U V#
m_TextProcessingArray
∆∆ 1
[
∆∆1 2

writeIndex
∆∆2 <
]
∆∆< =
.
∆∆= >
length
∆∆> D
=
∆∆E F
$num
∆∆G H
;
∆∆H I
	readIndex
»» %
+=
»»& (
$num
»») *
;
»»* +

writeIndex
…… &
+=
……' )
$num
……* +
;
……+ ,
continue
   $
;
  $ %
case
ÀÀ 
$num
ÀÀ  
:
ÀÀ  !
if
ÃÃ 
(
ÃÃ  
!
ÃÃ  !#
m_parseCtrlCharacters
ÃÃ! 6
)
ÃÃ6 7
break
ÃÃ8 =
;
ÃÃ= >
if
ŒŒ 
(
ŒŒ  

writeIndex
ŒŒ  *
==
ŒŒ+ -#
m_TextProcessingArray
ŒŒ. C
.
ŒŒC D
Length
ŒŒD J
)
ŒŒJ K!
ResizeInternalArray
ŒŒL _
(
ŒŒ_ `
ref
ŒŒ` c#
m_TextProcessingArray
ŒŒd y
)
ŒŒy z
;
ŒŒz {#
m_TextProcessingArray
–– 1
[
––1 2

writeIndex
––2 <
]
––< =
.
––= >
unicode
––> E
=
––F G
$num
––H J
;
––J K#
m_TextProcessingArray
—— 1
[
——1 2

writeIndex
——2 <
]
——< =
.
——= >
stringIndex
——> I
=
——J K
	readIndex
——L U
;
——U V#
m_TextProcessingArray
““ 1
[
““1 2

writeIndex
““2 <
]
““< =
.
““= >
length
““> D
=
““E F
$num
““G H
;
““H I
	readIndex
‘‘ %
+=
‘‘& (
$num
‘‘) *
;
‘‘* +

writeIndex
’’ &
+=
’’' )
$num
’’* +
;
’’+ ,
continue
÷÷ $
;
÷÷$ %
case
◊◊ 
$num
◊◊  
:
◊◊  !
if
ÿÿ 
(
ÿÿ  
	srcLength
ÿÿ  )
>
ÿÿ* +
	readIndex
ÿÿ, 5
+
ÿÿ6 7
$num
ÿÿ8 9
)
ÿÿ9 :
{
ŸŸ 
if
⁄⁄  "
(
⁄⁄# $

writeIndex
⁄⁄$ .
==
⁄⁄/ 1#
m_TextProcessingArray
⁄⁄2 G
.
⁄⁄G H
Length
⁄⁄H N
)
⁄⁄N O!
ResizeInternalArray
⁄⁄P c
(
⁄⁄c d
ref
⁄⁄d g#
m_TextProcessingArray
⁄⁄h }
)
⁄⁄} ~
;
⁄⁄~ #
m_TextProcessingArray
‹‹  5
[
‹‹5 6

writeIndex
‹‹6 @
]
‹‹@ A
.
‹‹A B
unicode
‹‹B I
=
‹‹J K
GetUTF16
‹‹L T
(
‹‹T U 
m_TextBackingArray
‹‹U g
,
‹‹g h
	readIndex
‹‹i r
+
‹‹s t
$num
‹‹u v
)
‹‹v w
;
‹‹w x#
m_TextProcessingArray
››  5
[
››5 6

writeIndex
››6 @
]
››@ A
.
››A B
stringIndex
››B M
=
››N O
	readIndex
››P Y
;
››Y Z#
m_TextProcessingArray
ﬁﬁ  5
[
ﬁﬁ5 6

writeIndex
ﬁﬁ6 @
]
ﬁﬁ@ A
.
ﬁﬁA B
length
ﬁﬁB H
=
ﬁﬁI J
$num
ﬁﬁK L
;
ﬁﬁL M
	readIndex
‡‡  )
+=
‡‡* ,
$num
‡‡- .
;
‡‡. /

writeIndex
··  *
+=
··+ -
$num
··. /
;
··/ 0
continue
‚‚  (
;
‚‚( )
}
„„ 
break
‰‰ !
;
‰‰! "
case
ÂÂ 
$num
ÂÂ 
:
ÂÂ  
if
ÊÊ 
(
ÊÊ  
	srcLength
ÊÊ  )
>
ÊÊ* +
	readIndex
ÊÊ, 5
+
ÊÊ6 7
$num
ÊÊ8 9
)
ÊÊ9 :
{
ÁÁ 
if
ËË  "
(
ËË# $

writeIndex
ËË$ .
==
ËË/ 1#
m_TextProcessingArray
ËË2 G
.
ËËG H
Length
ËËH N
)
ËËN O!
ResizeInternalArray
ËËP c
(
ËËc d
ref
ËËd g#
m_TextProcessingArray
ËËh }
)
ËË} ~
;
ËË~ #
m_TextProcessingArray
ÍÍ  5
[
ÍÍ5 6

writeIndex
ÍÍ6 @
]
ÍÍ@ A
.
ÍÍA B
unicode
ÍÍB I
=
ÍÍJ K
GetUTF32
ÍÍL T
(
ÍÍT U 
m_TextBackingArray
ÍÍU g
,
ÍÍg h
	readIndex
ÍÍi r
+
ÍÍs t
$num
ÍÍu v
)
ÍÍv w
;
ÍÍw x#
m_TextProcessingArray
ÎÎ  5
[
ÎÎ5 6

writeIndex
ÎÎ6 @
]
ÎÎ@ A
.
ÎÎA B
stringIndex
ÎÎB M
=
ÎÎN O
	readIndex
ÎÎP Y
;
ÎÎY Z#
m_TextProcessingArray
ÏÏ  5
[
ÏÏ5 6

writeIndex
ÏÏ6 @
]
ÏÏ@ A
.
ÏÏA B
length
ÏÏB H
=
ÏÏI J
$num
ÏÏK M
;
ÏÏM N
	readIndex
ÓÓ  )
+=
ÓÓ* ,
$num
ÓÓ- .
;
ÓÓ. /

writeIndex
ÔÔ  *
+=
ÔÔ+ -
$num
ÔÔ. /
;
ÔÔ/ 0
continue
  (
;
( )
}
ÒÒ 
break
ÚÚ !
;
ÚÚ! "
}
ÛÛ 
}
ÙÙ 
if
˜˜ 
(
˜˜ 
c
˜˜ 
>=
˜˜ 
	CodePoint
˜˜ "
.
˜˜" #"
HIGH_SURROGATE_START
˜˜# 7
&&
˜˜8 :
c
˜˜; <
<=
˜˜= ?
	CodePoint
˜˜@ I
.
˜˜I J 
HIGH_SURROGATE_END
˜˜J \
&&
˜˜] _
	srcLength
˜˜` i
>
˜˜j k
	readIndex
˜˜l u
+
˜˜v w
$num
˜˜x y
&&
˜˜z |!
m_TextBackingArray˜˜} è
[˜˜è ê
	readIndex˜˜ê ô
+˜˜ö õ
$num˜˜ú ù
]˜˜ù û
>=˜˜ü °
	CodePoint˜˜¢ ´
.˜˜´ ¨#
LOW_SURROGATE_START˜˜¨ ø
&&˜˜¿ ¬"
m_TextBackingArray˜˜√ ’
[˜˜’ ÷
	readIndex˜˜÷ ﬂ
+˜˜‡ ·
$num˜˜‚ „
]˜˜„ ‰
<=˜˜Â Á
	CodePoint˜˜Ë Ò
.˜˜Ò Ú!
LOW_SURROGATE_END˜˜Ú É
)˜˜É Ñ
{
¯¯ 
if
˘˘ 
(
˘˘ 

writeIndex
˘˘ "
==
˘˘# %#
m_TextProcessingArray
˘˘& ;
.
˘˘; <
Length
˘˘< B
)
˘˘B C!
ResizeInternalArray
˘˘D W
(
˘˘W X
ref
˘˘X [#
m_TextProcessingArray
˘˘\ q
)
˘˘q r
;
˘˘r s#
m_TextProcessingArray
˚˚ )
[
˚˚) *

writeIndex
˚˚* 4
]
˚˚4 5
.
˚˚5 6
unicode
˚˚6 =
=
˚˚> ?
(
˚˚@ A
int
˚˚A D
)
˚˚D E&
TMP_TextParsingUtilities
˚˚E ]
.
˚˚] ^
ConvertToUTF32
˚˚^ l
(
˚˚l m
c
˚˚m n
,
˚˚n o!
m_TextBackingArray˚˚p Ç
[˚˚Ç É
	readIndex˚˚É å
+˚˚ç é
$num˚˚è ê
]˚˚ê ë
)˚˚ë í
;˚˚í ì#
m_TextProcessingArray
¸¸ )
[
¸¸) *

writeIndex
¸¸* 4
]
¸¸4 5
.
¸¸5 6
stringIndex
¸¸6 A
=
¸¸B C
	readIndex
¸¸D M
;
¸¸M N#
m_TextProcessingArray
˝˝ )
[
˝˝) *

writeIndex
˝˝* 4
]
˝˝4 5
.
˝˝5 6
length
˝˝6 <
=
˝˝= >
$num
˝˝? @
;
˝˝@ A
	readIndex
ˇˇ 
+=
ˇˇ  
$num
ˇˇ! "
;
ˇˇ" #

writeIndex
ÄÄ 
+=
ÄÄ !
$num
ÄÄ" #
;
ÄÄ# $
continue
ÅÅ 
;
ÅÅ 
}
ÇÇ 
if
ÖÖ 
(
ÖÖ 
c
ÖÖ 
==
ÖÖ 
$char
ÖÖ 
&&
ÖÖ 
m_isRichText
ÖÖ  ,
)
ÖÖ, -
{
ÜÜ 
int
àà 
hashCode
àà  
=
àà! ""
GetMarkupTagHashCode
àà# 7
(
àà7 8 
m_TextBackingArray
àà8 J
,
ààJ K
	readIndex
ààL U
+
ààV W
$num
ààX Y
)
ààY Z
;
ààZ [
switch
ää 
(
ää 
(
ää 
	MarkupTag
ää &
)
ää& '
hashCode
ää' /
)
ää/ 0
{
ãã 
case
åå 
	MarkupTag
åå &
.
åå& '
BR
åå' )
:
åå) *
if
çç 
(
çç  

writeIndex
çç  *
==
çç+ -#
m_TextProcessingArray
çç. C
.
ççC D
Length
ççD J
)
ççJ K!
ResizeInternalArray
ççL _
(
çç_ `
ref
çç` c#
m_TextProcessingArray
ççd y
)
ççy z
;
ççz {#
m_TextProcessingArray
èè 1
[
èè1 2

writeIndex
èè2 <
]
èè< =
.
èè= >
unicode
èè> E
=
èèF G
$num
èèH J
;
èèJ K#
m_TextProcessingArray
êê 1
[
êê1 2

writeIndex
êê2 <
]
êê< =
.
êê= >
stringIndex
êê> I
=
êêJ K
	readIndex
êêL U
;
êêU V#
m_TextProcessingArray
ëë 1
[
ëë1 2

writeIndex
ëë2 <
]
ëë< =
.
ëë= >
length
ëë> D
=
ëëE F
$num
ëëG H
;
ëëH I

writeIndex
ìì &
+=
ìì' )
$num
ìì* +
;
ìì+ ,
	readIndex
îî %
+=
îî& (
$num
îî) *
;
îî* +
continue
ïï $
;
ïï$ %
case
ññ 
	MarkupTag
ññ &
.
ññ& '
NBSP
ññ' +
:
ññ+ ,
if
óó 
(
óó  

writeIndex
óó  *
==
óó+ -#
m_TextProcessingArray
óó. C
.
óóC D
Length
óóD J
)
óóJ K!
ResizeInternalArray
óóL _
(
óó_ `
ref
óó` c#
m_TextProcessingArray
óód y
)
óóy z
;
óóz {#
m_TextProcessingArray
ôô 1
[
ôô1 2

writeIndex
ôô2 <
]
ôô< =
.
ôô= >
unicode
ôô> E
=
ôôF G
$num
ôôH K
;
ôôK L#
m_TextProcessingArray
öö 1
[
öö1 2

writeIndex
öö2 <
]
öö< =
.
öö= >
stringIndex
öö> I
=
ööJ K
	readIndex
ööL U
;
ööU V#
m_TextProcessingArray
õõ 1
[
õõ1 2

writeIndex
õõ2 <
]
õõ< =
.
õõ= >
length
õõ> D
=
õõE F
$num
õõG H
;
õõH I

writeIndex
ùù &
+=
ùù' )
$num
ùù* +
;
ùù+ ,
	readIndex
ûû %
+=
ûû& (
$num
ûû) *
;
ûû* +
continue
üü $
;
üü$ %
case
†† 
	MarkupTag
†† &
.
††& '
ZWSP
††' +
:
††+ ,
if
°° 
(
°°  

writeIndex
°°  *
==
°°+ -#
m_TextProcessingArray
°°. C
.
°°C D
Length
°°D J
)
°°J K!
ResizeInternalArray
°°L _
(
°°_ `
ref
°°` c#
m_TextProcessingArray
°°d y
)
°°y z
;
°°z {#
m_TextProcessingArray
££ 1
[
££1 2

writeIndex
££2 <
]
££< =
.
££= >
unicode
££> E
=
££F G
$num
££H N
;
££N O#
m_TextProcessingArray
§§ 1
[
§§1 2

writeIndex
§§2 <
]
§§< =
.
§§= >
stringIndex
§§> I
=
§§J K
	readIndex
§§L U
;
§§U V#
m_TextProcessingArray
•• 1
[
••1 2

writeIndex
••2 <
]
••< =
.
••= >
length
••> D
=
••E F
$num
••G H
;
••H I

writeIndex
ßß &
+=
ßß' )
$num
ßß* +
;
ßß+ ,
	readIndex
®® %
+=
®®& (
$num
®®) *
;
®®* +
continue
©© $
;
©©$ %
case
™™ 
	MarkupTag
™™ &
.
™™& '
STYLE
™™' ,
:
™™, -
int
´´ 
openWriteIndex
´´  .
=
´´/ 0

writeIndex
´´1 ;
;
´´; <
if
¨¨ 
(
¨¨  $
ReplaceOpeningStyleTag
¨¨  6
(
¨¨6 7
ref
¨¨7 : 
m_TextBackingArray
¨¨; M
,
¨¨M N
	readIndex
¨¨O X
,
¨¨X Y
out
¨¨Z ]
int
¨¨^ a
	srcOffset
¨¨b k
,
¨¨k l
ref
¨¨m p$
m_TextProcessingArray¨¨q Ü
,¨¨Ü á
ref¨¨à ã

writeIndex¨¨å ñ
)¨¨ñ ó
)¨¨ó ò
{
≠≠ 
for
ØØ  #
(
ØØ$ %
;
ØØ% &
openWriteIndex
ØØ' 5
<
ØØ6 7

writeIndex
ØØ8 B
;
ØØB C
openWriteIndex
ØØD R
++
ØØR T
)
ØØT U
{
∞∞  !#
m_TextProcessingArray
±±$ 9
[
±±9 :
openWriteIndex
±±: H
]
±±H I
.
±±I J
stringIndex
±±J U
=
±±V W
	readIndex
±±X a
;
±±a b#
m_TextProcessingArray
≤≤$ 9
[
≤≤9 :
openWriteIndex
≤≤: H
]
≤≤H I
.
≤≤I J
length
≤≤J P
=
≤≤Q R
(
≤≤S T
	srcOffset
≤≤T ]
-
≤≤^ _
	readIndex
≤≤` i
)
≤≤i j
+
≤≤k l
$num
≤≤m n
;
≤≤n o
}
≥≥  !
	readIndex
µµ  )
=
µµ* +
	srcOffset
µµ, 5
;
µµ5 6
continue
∂∂  (
;
∂∂( )
}
∑∑ 
break
∏∏ !
;
∏∏! "
case
ππ 
	MarkupTag
ππ &
.
ππ& '
SLASH_STYLE
ππ' 2
:
ππ2 3
int
∫∫ 
closeWriteIndex
∫∫  /
=
∫∫0 1

writeIndex
∫∫2 <
;
∫∫< =$
ReplaceClosingStyleTag
ªª 2
(
ªª2 3
ref
ªª3 6 
m_TextBackingArray
ªª7 I
,
ªªI J
	readIndex
ªªK T
,
ªªT U
ref
ªªV Y#
m_TextProcessingArray
ªªZ o
,
ªªo p
ref
ªªq t

writeIndex
ªªu 
)ªª Ä
;ªªÄ Å
for
ææ 
(
ææ  !
;
ææ! "
closeWriteIndex
ææ# 2
<
ææ3 4

writeIndex
ææ5 ?
;
ææ? @
closeWriteIndex
ææA P
++
ææP R
)
ææR S
{
øø #
m_TextProcessingArray
¿¿  5
[
¿¿5 6
closeWriteIndex
¿¿6 E
]
¿¿E F
.
¿¿F G
stringIndex
¿¿G R
=
¿¿S T
	readIndex
¿¿U ^
;
¿¿^ _#
m_TextProcessingArray
¡¡  5
[
¡¡5 6
closeWriteIndex
¡¡6 E
]
¡¡E F
.
¡¡F G
length
¡¡G M
=
¡¡N O
$num
¡¡P Q
;
¡¡Q R
}
¬¬ 
	readIndex
ƒƒ %
+=
ƒƒ& (
$num
ƒƒ) *
;
ƒƒ* +
continue
≈≈ $
;
≈≈$ %
}
∆∆ 
}
«« 
if
…… 
(
…… 

writeIndex
…… 
==
…… !#
m_TextProcessingArray
……" 7
.
……7 8
Length
……8 >
)
……> ?!
ResizeInternalArray
……@ S
(
……S T
ref
……T W#
m_TextProcessingArray
……X m
)
……m n
;
……n o#
m_TextProcessingArray
ÀÀ %
[
ÀÀ% &

writeIndex
ÀÀ& 0
]
ÀÀ0 1
.
ÀÀ1 2
unicode
ÀÀ2 9
=
ÀÀ: ;
(
ÀÀ< =
int
ÀÀ= @
)
ÀÀ@ A
c
ÀÀA B
;
ÀÀB C#
m_TextProcessingArray
ÃÃ %
[
ÃÃ% &

writeIndex
ÃÃ& 0
]
ÃÃ0 1
.
ÃÃ1 2
stringIndex
ÃÃ2 =
=
ÃÃ> ?
	readIndex
ÃÃ@ I
;
ÃÃI J#
m_TextProcessingArray
ÕÕ %
[
ÕÕ% &

writeIndex
ÕÕ& 0
]
ÕÕ0 1
.
ÕÕ1 2
length
ÕÕ2 8
=
ÕÕ9 :
$num
ÕÕ; <
;
ÕÕ< =

writeIndex
œœ 
+=
œœ 
$num
œœ 
;
œœ  
}
–– #
m_TextStyleStackDepth
““ !
=
““" #
$num
““$ %
;
““% &
if
’’ 
(
’’ 
	textStyle
’’ 
.
’’ 
hashCode
’’ "
!=
’’# %
(
’’& '
int
’’' *
)
’’* +
	MarkupTag
’’+ 4
.
’’4 5
NORMAL
’’5 ;
)
’’; <#
InsertClosingStyleTag
÷÷ %
(
÷÷% &
ref
÷÷& )#
m_TextProcessingArray
÷÷* ?
,
÷÷? @
ref
÷÷A D

writeIndex
÷÷E O
)
÷÷O P
;
÷÷P Q
if
ÿÿ 
(
ÿÿ 

writeIndex
ÿÿ 
==
ÿÿ #
m_TextProcessingArray
ÿÿ 3
.
ÿÿ3 4
Length
ÿÿ4 :
)
ÿÿ: ;!
ResizeInternalArray
ÿÿ< O
(
ÿÿO P
ref
ÿÿP S#
m_TextProcessingArray
ÿÿT i
)
ÿÿi j
;
ÿÿj k#
m_TextProcessingArray
⁄⁄ !
[
⁄⁄! "

writeIndex
⁄⁄" ,
]
⁄⁄, -
.
⁄⁄- .
unicode
⁄⁄. 5
=
⁄⁄6 7
$num
⁄⁄8 9
;
⁄⁄9 :/
!m_InternalTextProcessingArraySize
€€ -
=
€€. /

writeIndex
€€0 :
;
€€: ;
}
‹‹ 	
void
‚‚ 
SetTextInternal
‚‚ 
(
‚‚ 
string
‚‚ #

sourceText
‚‚$ .
)
‚‚. /
{
„„ 	
int
‰‰ 
	srcLength
‰‰ 
=
‰‰ 

sourceText
‰‰ &
==
‰‰' )
null
‰‰* .
?
‰‰/ 0
$num
‰‰1 2
:
‰‰3 4

sourceText
‰‰5 ?
.
‰‰? @
Length
‰‰@ F
;
‰‰F G&
PopulateTextBackingArray
ÊÊ $
(
ÊÊ$ %

sourceText
ÊÊ% /
,
ÊÊ/ 0
$num
ÊÊ1 2
,
ÊÊ2 3
	srcLength
ÊÊ4 =
)
ÊÊ= >
;
ÊÊ> ?
TextInputSources
ÈÈ  
currentInputSource
ÈÈ /
=
ÈÈ0 1
m_inputSource
ÈÈ2 ?
;
ÈÈ? @
m_inputSource
ÍÍ 
=
ÍÍ 
TextInputSources
ÍÍ ,
.
ÍÍ, -

TextString
ÍÍ- 7
;
ÍÍ7 8)
PopulateTextProcessingArray
ÏÏ '
(
ÏÏ' (
)
ÏÏ( )
;
ÏÏ) *
m_inputSource
ÓÓ 
=
ÓÓ  
currentInputSource
ÓÓ .
;
ÓÓ. /
}
ÔÔ 	
public
ˆˆ 
void
ˆˆ 
SetText
ˆˆ 
(
ˆˆ 
string
ˆˆ "

sourceText
ˆˆ# -
,
ˆˆ- .
bool
ˆˆ/ 3
syncTextInputBox
ˆˆ4 D
=
ˆˆE F
true
ˆˆG K
)
ˆˆK L
{
˜˜ 	
int
¯¯ 
	srcLength
¯¯ 
=
¯¯ 

sourceText
¯¯ &
==
¯¯' )
null
¯¯* .
?
¯¯/ 0
$num
¯¯1 2
:
¯¯3 4

sourceText
¯¯5 ?
.
¯¯? @
Length
¯¯@ F
;
¯¯F G&
PopulateTextBackingArray
˙˙ $
(
˙˙$ %

sourceText
˙˙% /
,
˙˙/ 0
$num
˙˙1 2
,
˙˙2 3
	srcLength
˙˙4 =
)
˙˙= >
;
˙˙> ?
m_text
¸¸ 
=
¸¸ 

sourceText
¸¸ 
;
¸¸  
m_inputSource
ˇˇ 
=
ˇˇ 
TextInputSources
ˇˇ ,
.
ˇˇ, -

TextString
ˇˇ- 7
;
ˇˇ7 8)
PopulateTextProcessingArray
ÅÅ '
(
ÅÅ' (
)
ÅÅ( )
;
ÅÅ) *%
m_havePropertiesChanged
ÉÉ #
=
ÉÉ$ %
true
ÉÉ& *
;
ÉÉ* +
SetVerticesDirty
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
SetLayoutDirty
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 	
public
êê 
void
êê 
SetText
êê 
(
êê 
string
êê "

sourceText
êê# -
,
êê- .
float
êê/ 4
arg0
êê5 9
)
êê9 :
{
ëë 	
SetText
íí 
(
íí 

sourceText
íí 
,
íí 
arg0
íí  $
,
íí$ %
$num
íí& '
,
íí' (
$num
íí) *
,
íí* +
$num
íí, -
,
íí- .
$num
íí/ 0
,
íí0 1
$num
íí2 3
,
íí3 4
$num
íí5 6
,
íí6 7
$num
íí8 9
)
íí9 :
;
íí: ;
}
ìì 	
public
ùù 
void
ùù 
SetText
ùù 
(
ùù 
string
ùù "

sourceText
ùù# -
,
ùù- .
float
ùù/ 4
arg0
ùù5 9
,
ùù9 :
float
ùù; @
arg1
ùùA E
)
ùùE F
{
ûû 	
SetText
üü 
(
üü 

sourceText
üü 
,
üü 
arg0
üü  $
,
üü$ %
arg1
üü& *
,
üü* +
$num
üü, -
,
üü- .
$num
üü/ 0
,
üü0 1
$num
üü2 3
,
üü3 4
$num
üü5 6
,
üü6 7
$num
üü8 9
,
üü9 :
$num
üü; <
)
üü< =
;
üü= >
}
†† 	
public
´´ 
void
´´ 
SetText
´´ 
(
´´ 
string
´´ "

sourceText
´´# -
,
´´- .
float
´´/ 4
arg0
´´5 9
,
´´9 :
float
´´; @
arg1
´´A E
,
´´E F
float
´´G L
arg2
´´M Q
)
´´Q R
{
¨¨ 	
SetText
≠≠ 
(
≠≠ 

sourceText
≠≠ 
,
≠≠ 
arg0
≠≠  $
,
≠≠$ %
arg1
≠≠& *
,
≠≠* +
arg2
≠≠, 0
,
≠≠0 1
$num
≠≠2 3
,
≠≠3 4
$num
≠≠5 6
,
≠≠6 7
$num
≠≠8 9
,
≠≠9 :
$num
≠≠; <
,
≠≠< =
$num
≠≠> ?
)
≠≠? @
;
≠≠@ A
}
ÆÆ 	
public
∫∫ 
void
∫∫ 
SetText
∫∫ 
(
∫∫ 
string
∫∫ "

sourceText
∫∫# -
,
∫∫- .
float
∫∫/ 4
arg0
∫∫5 9
,
∫∫9 :
float
∫∫; @
arg1
∫∫A E
,
∫∫E F
float
∫∫G L
arg2
∫∫M Q
,
∫∫Q R
float
∫∫S X
arg3
∫∫Y ]
)
∫∫] ^
{
ªª 	
SetText
ºº 
(
ºº 

sourceText
ºº 
,
ºº 
arg0
ºº  $
,
ºº$ %
arg1
ºº& *
,
ºº* +
arg2
ºº, 0
,
ºº0 1
arg3
ºº2 6
,
ºº6 7
$num
ºº8 9
,
ºº9 :
$num
ºº; <
,
ºº< =
$num
ºº> ?
,
ºº? @
$num
ººA B
)
ººB C
;
ººC D
}
ΩΩ 	
public
   
void
   
SetText
   
(
   
string
   "

sourceText
  # -
,
  - .
float
  / 4
arg0
  5 9
,
  9 :
float
  ; @
arg1
  A E
,
  E F
float
  G L
arg2
  M Q
,
  Q R
float
  S X
arg3
  Y ]
,
  ] ^
float
  _ d
arg4
  e i
)
  i j
{
ÀÀ 	
SetText
ÃÃ 
(
ÃÃ 

sourceText
ÃÃ 
,
ÃÃ 
arg0
ÃÃ  $
,
ÃÃ$ %
arg1
ÃÃ& *
,
ÃÃ* +
arg2
ÃÃ, 0
,
ÃÃ0 1
arg3
ÃÃ2 6
,
ÃÃ6 7
arg4
ÃÃ8 <
,
ÃÃ< =
$num
ÃÃ> ?
,
ÃÃ? @
$num
ÃÃA B
,
ÃÃB C
$num
ÃÃD E
)
ÃÃE F
;
ÃÃF G
}
ÕÕ 	
public
€€ 
void
€€ 
SetText
€€ 
(
€€ 
string
€€ "

sourceText
€€# -
,
€€- .
float
€€/ 4
arg0
€€5 9
,
€€9 :
float
€€; @
arg1
€€A E
,
€€E F
float
€€G L
arg2
€€M Q
,
€€Q R
float
€€S X
arg3
€€Y ]
,
€€] ^
float
€€_ d
arg4
€€e i
,
€€i j
float
€€k p
arg5
€€q u
)
€€u v
{
‹‹ 	
SetText
›› 
(
›› 

sourceText
›› 
,
›› 
arg0
››  $
,
››$ %
arg1
››& *
,
››* +
arg2
››, 0
,
››0 1
arg3
››2 6
,
››6 7
arg4
››8 <
,
››< =
arg5
››> B
,
››B C
$num
››D E
,
››E F
$num
››G H
)
››H I
;
››I J
}
ﬁﬁ 	
public
ÌÌ 
void
ÌÌ 
SetText
ÌÌ 
(
ÌÌ 
string
ÌÌ "

sourceText
ÌÌ# -
,
ÌÌ- .
float
ÌÌ/ 4
arg0
ÌÌ5 9
,
ÌÌ9 :
float
ÌÌ; @
arg1
ÌÌA E
,
ÌÌE F
float
ÌÌG L
arg2
ÌÌM Q
,
ÌÌQ R
float
ÌÌS X
arg3
ÌÌY ]
,
ÌÌ] ^
float
ÌÌ_ d
arg4
ÌÌe i
,
ÌÌi j
float
ÌÌk p
arg5
ÌÌq u
,
ÌÌu v
float
ÌÌw |
arg6ÌÌ} Å
)ÌÌÅ Ç
{
ÓÓ 	
SetText
ÔÔ 
(
ÔÔ 

sourceText
ÔÔ 
,
ÔÔ 
arg0
ÔÔ  $
,
ÔÔ$ %
arg1
ÔÔ& *
,
ÔÔ* +
arg2
ÔÔ, 0
,
ÔÔ0 1
arg3
ÔÔ2 6
,
ÔÔ6 7
arg4
ÔÔ8 <
,
ÔÔ< =
arg5
ÔÔ> B
,
ÔÔB C
arg6
ÔÔD H
,
ÔÔH I
$num
ÔÔJ K
)
ÔÔK L
;
ÔÔL M
}
 	
public
ÄÄ 
void
ÄÄ 
SetText
ÄÄ 
(
ÄÄ 
string
ÄÄ "

sourceText
ÄÄ# -
,
ÄÄ- .
float
ÄÄ/ 4
arg0
ÄÄ5 9
,
ÄÄ9 :
float
ÄÄ; @
arg1
ÄÄA E
,
ÄÄE F
float
ÄÄG L
arg2
ÄÄM Q
,
ÄÄQ R
float
ÄÄS X
arg3
ÄÄY ]
,
ÄÄ] ^
float
ÄÄ_ d
arg4
ÄÄe i
,
ÄÄi j
float
ÄÄk p
arg5
ÄÄq u
,
ÄÄu v
float
ÄÄw |
arg6ÄÄ} Å
,ÄÄÅ Ç
floatÄÄÉ à
arg7ÄÄâ ç
)ÄÄç é
{
ÅÅ 	
int
ÇÇ 
argIndex
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
int
ÉÉ 
padding
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
int
ÑÑ 
decimalPrecision
ÑÑ  
=
ÑÑ! "
$num
ÑÑ# $
;
ÑÑ$ %
int
ÜÜ 
readFlag
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
int
àà 
	readIndex
àà 
=
àà 
$num
àà 
;
àà 
int
ââ 

writeIndex
ââ 
=
ââ 
$num
ââ 
;
ââ 
for
ãã 
(
ãã 
;
ãã 
	readIndex
ãã 
<
ãã 

sourceText
ãã )
.
ãã) *
Length
ãã* 0
;
ãã0 1
	readIndex
ãã2 ;
++
ãã; =
)
ãã= >
{
åå 
char
çç 
c
çç 
=
çç 

sourceText
çç #
[
çç# $
	readIndex
çç$ -
]
çç- .
;
çç. /
if
èè 
(
èè 
c
èè 
==
èè 
$char
èè 
)
èè 
{
êê 
readFlag
ëë 
=
ëë 
$num
ëë  
;
ëë  !
continue
íí 
;
íí 
}
ìì 
if
ïï 
(
ïï 
c
ïï 
==
ïï 
$char
ïï 
)
ïï 
{
ññ 
switch
òò 
(
òò 
argIndex
òò $
)
òò$ %
{
ôô 
case
öö 
$num
öö 
:
öö 0
"AddFloatToInternalTextBackingArray
õõ >
(
õõ> ?
arg0
õõ? C
,
õõC D
padding
õõE L
,
õõL M
decimalPrecision
õõN ^
,
õõ^ _
ref
õõ` c

writeIndex
õõd n
)
õõn o
;
õõo p
break
úú !
;
úú! "
case
ùù 
$num
ùù 
:
ùù 0
"AddFloatToInternalTextBackingArray
ûû >
(
ûû> ?
arg1
ûû? C
,
ûûC D
padding
ûûE L
,
ûûL M
decimalPrecision
ûûN ^
,
ûû^ _
ref
ûû` c

writeIndex
ûûd n
)
ûûn o
;
ûûo p
break
üü !
;
üü! "
case
†† 
$num
†† 
:
†† 0
"AddFloatToInternalTextBackingArray
°° >
(
°°> ?
arg2
°°? C
,
°°C D
padding
°°E L
,
°°L M
decimalPrecision
°°N ^
,
°°^ _
ref
°°` c

writeIndex
°°d n
)
°°n o
;
°°o p
break
¢¢ !
;
¢¢! "
case
££ 
$num
££ 
:
££ 0
"AddFloatToInternalTextBackingArray
§§ >
(
§§> ?
arg3
§§? C
,
§§C D
padding
§§E L
,
§§L M
decimalPrecision
§§N ^
,
§§^ _
ref
§§` c

writeIndex
§§d n
)
§§n o
;
§§o p
break
•• !
;
••! "
case
¶¶ 
$num
¶¶ 
:
¶¶ 0
"AddFloatToInternalTextBackingArray
ßß >
(
ßß> ?
arg4
ßß? C
,
ßßC D
padding
ßßE L
,
ßßL M
decimalPrecision
ßßN ^
,
ßß^ _
ref
ßß` c

writeIndex
ßßd n
)
ßßn o
;
ßßo p
break
®® !
;
®®! "
case
©© 
$num
©© 
:
©© 0
"AddFloatToInternalTextBackingArray
™™ >
(
™™> ?
arg5
™™? C
,
™™C D
padding
™™E L
,
™™L M
decimalPrecision
™™N ^
,
™™^ _
ref
™™` c

writeIndex
™™d n
)
™™n o
;
™™o p
break
´´ !
;
´´! "
case
¨¨ 
$num
¨¨ 
:
¨¨ 0
"AddFloatToInternalTextBackingArray
≠≠ >
(
≠≠> ?
arg6
≠≠? C
,
≠≠C D
padding
≠≠E L
,
≠≠L M
decimalPrecision
≠≠N ^
,
≠≠^ _
ref
≠≠` c

writeIndex
≠≠d n
)
≠≠n o
;
≠≠o p
break
ÆÆ !
;
ÆÆ! "
case
ØØ 
$num
ØØ 
:
ØØ 0
"AddFloatToInternalTextBackingArray
∞∞ >
(
∞∞> ?
arg7
∞∞? C
,
∞∞C D
padding
∞∞E L
,
∞∞L M
decimalPrecision
∞∞N ^
,
∞∞^ _
ref
∞∞` c

writeIndex
∞∞d n
)
∞∞n o
;
∞∞o p
break
±± !
;
±±! "
}
≤≤ 
argIndex
¥¥ 
=
¥¥ 
$num
¥¥  
;
¥¥  !
readFlag
µµ 
=
µµ 
$num
µµ  
;
µµ  !
padding
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂  
decimalPrecision
∑∑ $
=
∑∑% &
$num
∑∑' (
;
∑∑( )
continue
∏∏ 
;
∏∏ 
}
ππ 
if
ºº 
(
ºº 
readFlag
ºº 
==
ºº 
$num
ºº  !
)
ºº! "
{
ΩΩ 
if
ææ 
(
ææ 
c
ææ 
>=
ææ 
$char
ææ  
&&
ææ! #
c
ææ$ %
<=
ææ& (
$char
ææ) ,
)
ææ, -
{
øø 
argIndex
¿¿  
=
¿¿! "
c
¿¿# $
-
¿¿% &
$num
¿¿' )
;
¿¿) *
readFlag
¡¡  
=
¡¡! "
$num
¡¡# $
;
¡¡$ %
continue
¬¬  
;
¬¬  !
}
√√ 
}
ƒƒ 
if
«« 
(
«« 
readFlag
«« 
==
«« 
$num
««  !
)
««! "
{
»» 
if
   
(
   
c
   
==
   
$char
    
)
    !
continue
ÀÀ  
;
ÀÀ  !
if
ŒŒ 
(
ŒŒ 
c
ŒŒ 
==
ŒŒ 
$char
ŒŒ  
)
ŒŒ  !
{
œœ 
readFlag
––  
=
––! "
$num
––# $
;
––$ %
continue
——  
;
——  !
}
““ 
if
‘‘ 
(
‘‘ 
c
‘‘ 
==
‘‘ 
$char
‘‘  
)
‘‘  !
{
’’ 
continue
◊◊  
;
◊◊  !
}
ÿÿ 
if
⁄⁄ 
(
⁄⁄ 
c
⁄⁄ 
==
⁄⁄ 
$char
⁄⁄  
)
⁄⁄  !
{
€€ 
padding
‹‹ 
+=
‹‹  "
$num
‹‹# $
;
‹‹$ %
continue
››  
;
››  !
}
ﬁﬁ 
if
‡‡ 
(
‡‡ 
c
‡‡ 
==
‡‡ 
$char
‡‡  
)
‡‡  !
{
·· 
continue
„„  
;
„„  !
}
‰‰ 
if
ÁÁ 
(
ÁÁ 
c
ÁÁ 
>=
ÁÁ 
$char
ÁÁ  
&&
ÁÁ! #
c
ÁÁ$ %
<=
ÁÁ& (
$char
ÁÁ) ,
)
ÁÁ, -
{
ËË 
decimalPrecision
ÈÈ (
=
ÈÈ) *
c
ÈÈ+ ,
-
ÈÈ- .
$num
ÈÈ/ 1
;
ÈÈ1 2
continue
ÍÍ  
;
ÍÍ  !
}
ÎÎ 
}
ÏÏ 
if
ÔÔ 
(
ÔÔ 
readFlag
ÔÔ 
==
ÔÔ 
$num
ÔÔ  !
)
ÔÔ! "
{
 
if
ÒÒ 
(
ÒÒ 
c
ÒÒ 
==
ÒÒ 
$char
ÒÒ  
)
ÒÒ  !
{
ÚÚ 
decimalPrecision
ÛÛ (
+=
ÛÛ) +
$num
ÛÛ, -
;
ÛÛ- .
continue
ÙÙ  
;
ÙÙ  !
}
ıı 
}
ˆˆ  
m_TextBackingArray
˘˘ "
[
˘˘" #

writeIndex
˘˘# -
]
˘˘- .
=
˘˘/ 0
c
˘˘1 2
;
˘˘2 3

writeIndex
˙˙ 
+=
˙˙ 
$num
˙˙ 
;
˙˙  
}
˚˚  
m_TextBackingArray
˝˝ 
[
˝˝ 

writeIndex
˝˝ )
]
˝˝) *
=
˝˝+ ,
$num
˝˝- .
;
˝˝. / 
m_TextBackingArray
˛˛ 
.
˛˛ 
Count
˛˛ $
=
˛˛% &

writeIndex
˛˛' 1
;
˛˛1 2(
m_IsTextBackingStringDirty
ÄÄ &
=
ÄÄ' (
true
ÄÄ) -
;
ÄÄ- .
m_text
ÉÉ 
=
ÉÉ .
 InternalTextBackingArrayToString
ÉÉ 5
(
ÉÉ5 6
)
ÉÉ6 7
;
ÉÉ7 8
m_inputSource
ÜÜ 
=
ÜÜ 
TextInputSources
ÜÜ ,
.
ÜÜ, -
SetText
ÜÜ- 4
;
ÜÜ4 5)
PopulateTextProcessingArray
àà '
(
àà' (
)
àà( )
;
àà) *%
m_havePropertiesChanged
ää #
=
ää$ %
true
ää& *
;
ää* +
SetVerticesDirty
åå 
(
åå 
)
åå 
;
åå 
SetLayoutDirty
çç 
(
çç 
)
çç 
;
çç 
}
éé 	
public
òò 
void
òò 
SetText
òò 
(
òò 
StringBuilder
òò )

sourceText
òò* 4
)
òò4 5
{
ôô 	
int
öö 
	srcLength
öö 
=
öö 

sourceText
öö &
==
öö' )
null
öö* .
?
öö/ 0
$num
öö1 2
:
öö3 4

sourceText
öö5 ?
.
öö? @
Length
öö@ F
;
ööF G
SetText
úú 
(
úú 

sourceText
úú 
,
úú 
$num
úú  !
,
úú! "
	srcLength
úú# ,
)
úú, -
;
úú- .
}
ùù 	
void
•• 
SetText
•• 
(
•• 
StringBuilder
•• "

sourceText
••# -
,
••- .
int
••/ 2
start
••3 8
,
••8 9
int
••: =
length
••> D
)
••D E
{
¶¶ 	&
PopulateTextBackingArray
ßß $
(
ßß$ %

sourceText
ßß% /
,
ßß/ 0
start
ßß1 6
,
ßß6 7
length
ßß8 >
)
ßß> ?
;
ßß? @(
m_IsTextBackingStringDirty
©© &
=
©©' (
true
©©) -
;
©©- .
m_text
¨¨ 
=
¨¨ .
 InternalTextBackingArrayToString
¨¨ 5
(
¨¨5 6
)
¨¨6 7
;
¨¨7 8
m_inputSource
∞∞ 
=
∞∞ 
TextInputSources
∞∞ ,
.
∞∞, -
SetTextArray
∞∞- 9
;
∞∞9 :)
PopulateTextProcessingArray
≤≤ '
(
≤≤' (
)
≤≤( )
;
≤≤) *%
m_havePropertiesChanged
¥¥ #
=
¥¥$ %
true
¥¥& *
;
¥¥* +
SetVerticesDirty
∂∂ 
(
∂∂ 
)
∂∂ 
;
∂∂ 
SetLayoutDirty
∑∑ 
(
∑∑ 
)
∑∑ 
;
∑∑ 
}
∏∏ 	
public
øø 
void
øø 
SetText
øø 
(
øø 
char
øø  
[
øø  !
]
øø! "

sourceText
øø# -
)
øø- .
{
¿¿ 	
int
¡¡ 
	srcLength
¡¡ 
=
¡¡ 

sourceText
¡¡ &
==
¡¡' )
null
¡¡* .
?
¡¡/ 0
$num
¡¡1 2
:
¡¡3 4

sourceText
¡¡5 ?
.
¡¡? @
Length
¡¡@ F
;
¡¡F G
SetCharArray
√√ 
(
√√ 

sourceText
√√ #
,
√√# $
$num
√√% &
,
√√& '
	srcLength
√√( 1
)
√√1 2
;
√√2 3
}
ƒƒ 	
public
ÃÃ 
void
ÃÃ 
SetText
ÃÃ 
(
ÃÃ 
char
ÃÃ  
[
ÃÃ  !
]
ÃÃ! "

sourceText
ÃÃ# -
,
ÃÃ- .
int
ÃÃ/ 2
start
ÃÃ3 8
,
ÃÃ8 9
int
ÃÃ: =
length
ÃÃ> D
)
ÃÃD E
{
ÕÕ 	
SetCharArray
ŒŒ 
(
ŒŒ 

sourceText
ŒŒ #
,
ŒŒ# $
start
ŒŒ% *
,
ŒŒ* +
length
ŒŒ, 2
)
ŒŒ2 3
;
ŒŒ3 4
}
œœ 	
public
÷÷ 
void
÷÷ 
SetCharArray
÷÷  
(
÷÷  !
char
÷÷! %
[
÷÷% &
]
÷÷& '

sourceText
÷÷( 2
)
÷÷2 3
{
◊◊ 	
int
ÿÿ 
	srcLength
ÿÿ 
=
ÿÿ 

sourceText
ÿÿ &
==
ÿÿ' )
null
ÿÿ* .
?
ÿÿ/ 0
$num
ÿÿ1 2
:
ÿÿ3 4

sourceText
ÿÿ5 ?
.
ÿÿ? @
Length
ÿÿ@ F
;
ÿÿF G
SetCharArray
⁄⁄ 
(
⁄⁄ 

sourceText
⁄⁄ #
,
⁄⁄# $
$num
⁄⁄% &
,
⁄⁄& '
	srcLength
⁄⁄( 1
)
⁄⁄1 2
;
⁄⁄2 3
}
€€ 	
public
„„ 
void
„„ 
SetCharArray
„„  
(
„„  !
char
„„! %
[
„„% &
]
„„& '

sourceText
„„( 2
,
„„2 3
int
„„4 7
start
„„8 =
,
„„= >
int
„„? B
length
„„C I
)
„„I J
{
‰‰ 	&
PopulateTextBackingArray
ÂÂ $
(
ÂÂ$ %

sourceText
ÂÂ% /
,
ÂÂ/ 0
start
ÂÂ1 6
,
ÂÂ6 7
length
ÂÂ8 >
)
ÂÂ> ?
;
ÂÂ? @(
m_IsTextBackingStringDirty
ÁÁ &
=
ÁÁ' (
true
ÁÁ) -
;
ÁÁ- .
m_text
ÍÍ 
=
ÍÍ .
 InternalTextBackingArrayToString
ÍÍ 5
(
ÍÍ5 6
)
ÍÍ6 7
;
ÍÍ7 8
m_inputSource
ÓÓ 
=
ÓÓ 
TextInputSources
ÓÓ ,
.
ÓÓ, -
SetTextArray
ÓÓ- 9
;
ÓÓ9 :)
PopulateTextProcessingArray
 '
(
' (
)
( )
;
) *%
m_havePropertiesChanged
ÚÚ #
=
ÚÚ$ %
true
ÚÚ& *
;
ÚÚ* +
SetVerticesDirty
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
SetLayoutDirty
ıı 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 	
	TMP_Style
˛˛ 
GetStyle
˛˛ 
(
˛˛ 
int
˛˛ 
hashCode
˛˛ '
)
˛˛' (
{
ˇˇ 	
	TMP_Style
ÄÄ 
style
ÄÄ 
=
ÄÄ 
null
ÄÄ "
;
ÄÄ" #
if
ÉÉ 
(
ÉÉ 
m_StyleSheet
ÉÉ 
!=
ÉÉ 
null
ÉÉ  $
)
ÉÉ$ %
{
ÑÑ 
style
ÖÖ 
=
ÖÖ 
m_StyleSheet
ÖÖ $
.
ÖÖ$ %
GetStyle
ÖÖ% -
(
ÖÖ- .
hashCode
ÖÖ. 6
)
ÖÖ6 7
;
ÖÖ7 8
if
áá 
(
áá 
style
áá 
!=
áá 
null
áá !
)
áá! "
return
àà 
style
àà  
;
àà  !
}
ââ 
if
ãã 
(
ãã 
TMP_Settings
ãã 
.
ãã 
defaultStyleSheet
ãã .
!=
ãã/ 1
null
ãã2 6
)
ãã6 7
style
åå 
=
åå 
TMP_Settings
åå $
.
åå$ %
defaultStyleSheet
åå% 6
.
åå6 7
GetStyle
åå7 ?
(
åå? @
hashCode
åå@ H
)
ååH I
;
ååI J
return
éé 
style
éé 
;
éé 
}
èè 	
bool
õõ $
ReplaceOpeningStyleTag
õõ #
(
õõ# $
ref
õõ$ '"
TextBackingContainer
õõ( <

sourceText
õõ= G
,
õõG H
int
õõI L
srcIndex
õõM U
,
õõU V
out
õõW Z
int
õõ[ ^
	srcOffset
õõ_ h
,
õõh i
ref
õõj m
UnicodeChar
õõn y
[
õõy z
]
õõz {

charBufferõõ| Ü
,õõÜ á
refõõà ã
intõõå è

writeIndexõõê ö
)õõö õ
{
úú 	
int
ûû 
styleHashCode
ûû 
=
ûû 
GetStyleHashCode
ûû  0
(
ûû0 1
ref
ûû1 4

sourceText
ûû5 ?
,
ûû? @
srcIndex
ûûA I
+
ûûJ K
$num
ûûL M
,
ûûM N
out
ûûO R
	srcOffset
ûûS \
)
ûû\ ]
;
ûû] ^
	TMP_Style
üü 
style
üü 
=
üü 
GetStyle
üü &
(
üü& '
styleHashCode
üü' 4
)
üü4 5
;
üü5 6
if
¢¢ 
(
¢¢ 
style
¢¢ 
==
¢¢ 
null
¢¢ 
||
¢¢  
	srcOffset
¢¢! *
==
¢¢+ -
$num
¢¢. /
)
¢¢/ 0
return
¢¢1 7
false
¢¢8 =
;
¢¢= >#
m_TextStyleStackDepth
•• !
+=
••" $
$num
••% &
;
••& '
m_TextStyleStacks
®® 
[
®® #
m_TextStyleStackDepth
®® 3
]
®®3 4
.
®®4 5
Push
®®5 9
(
®®9 :
style
®®: ?
.
®®? @
hashCode
®®@ H
)
®®H I
;
®®I J
int
™™ 
styleLength
™™ 
=
™™ 
style
™™ #
.
™™# $"
styleOpeningTagArray
™™$ 8
.
™™8 9
Length
™™9 ?
;
™™? @
int
≠≠ 
[
≠≠ 
]
≠≠ 
tagDefinition
≠≠ 
=
≠≠  !
style
≠≠" '
.
≠≠' ("
styleOpeningTagArray
≠≠( <
;
≠≠< =
for
ØØ 
(
ØØ 
int
ØØ 
i
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
i
ØØ 
<
ØØ 
styleLength
ØØ  +
;
ØØ+ ,
i
ØØ- .
++
ØØ. 0
)
ØØ0 1
{
∞∞ 
int
±± 
c
±± 
=
±± 
tagDefinition
±± %
[
±±% &
i
±±& '
]
±±' (
;
±±( )
if
≥≥ 
(
≥≥ 
c
≥≥ 
==
≥≥ 
$char
≥≥ 
&&
≥≥  
i
≥≥! "
+
≥≥# $
$num
≥≥% &
<
≥≥' (
styleLength
≥≥) 4
)
≥≥4 5
{
¥¥ 
switch
µµ 
(
µµ 
tagDefinition
µµ )
[
µµ) *
i
µµ* +
+
µµ, -
$num
µµ. /
]
µµ/ 0
)
µµ0 1
{
∂∂ 
case
∑∑ 
$char
∑∑ !
:
∑∑! "
i
∏∏ 
+=
∏∏  
$num
∏∏! "
;
∏∏" #
break
ππ !
;
ππ! "
case
∫∫ 
$char
∫∫  
:
∫∫  !
c
ªª 
=
ªª 
$num
ªª  "
;
ªª" #
i
ºº 
+=
ºº  
$num
ºº! "
;
ºº" #
break
ΩΩ !
;
ΩΩ! "
case
ææ 
$char
ææ  
:
ææ  !
break
øø !
;
øø! "
case
¿¿ 
$char
¿¿  
:
¿¿  !
break
¡¡ !
;
¡¡! "
case
¬¬ 
$char
¬¬  
:
¬¬  !
if
ƒƒ 
(
ƒƒ  
i
ƒƒ  !
+
ƒƒ" #
$num
ƒƒ$ %
<
ƒƒ& '
styleLength
ƒƒ( 3
)
ƒƒ3 4
{
≈≈ 
c
∆∆  !
=
∆∆" #
GetUTF16
∆∆$ ,
(
∆∆, -
tagDefinition
∆∆- :
,
∆∆: ;
i
∆∆< =
+
∆∆> ?
$num
∆∆@ A
)
∆∆A B
;
∆∆B C
i
»»  !
+=
»»" $
$num
»»% &
;
»»& '
}
…… 
break
   !
;
  ! "
case
ÀÀ 
$char
ÀÀ  
:
ÀÀ  !
if
ÕÕ 
(
ÕÕ  
i
ÕÕ  !
+
ÕÕ" #
$num
ÕÕ$ %
<
ÕÕ& '
styleLength
ÕÕ( 3
)
ÕÕ3 4
{
ŒŒ 
c
œœ  !
=
œœ" #
GetUTF32
œœ$ ,
(
œœ, -
tagDefinition
œœ- :
,
œœ: ;
i
œœ< =
+
œœ> ?
$num
œœ@ A
)
œœA B
;
œœB C
i
——  !
+=
——" $
$num
——% &
;
——& '
}
““ 
break
”” !
;
””! "
}
‘‘ 
}
’’ 
if
◊◊ 
(
◊◊ 
c
◊◊ 
==
◊◊ 
$char
◊◊ 
)
◊◊ 
{
ÿÿ 
int
ŸŸ 
hashCode
ŸŸ  
=
ŸŸ! ""
GetMarkupTagHashCode
ŸŸ# 7
(
ŸŸ7 8
tagDefinition
ŸŸ8 E
,
ŸŸE F
i
ŸŸG H
+
ŸŸI J
$num
ŸŸK L
)
ŸŸL M
;
ŸŸM N
switch
€€ 
(
€€ 
(
€€ 
	MarkupTag
€€ &
)
€€& '
hashCode
€€' /
)
€€/ 0
{
‹‹ 
case
›› 
	MarkupTag
›› &
.
››& '
BR
››' )
:
››) *
if
ﬁﬁ 
(
ﬁﬁ  

writeIndex
ﬁﬁ  *
==
ﬁﬁ+ -

charBuffer
ﬁﬁ. 8
.
ﬁﬁ8 9
Length
ﬁﬁ9 ?
)
ﬁﬁ? @!
ResizeInternalArray
ﬁﬁA T
(
ﬁﬁT U
ref
ﬁﬁU X

charBuffer
ﬁﬁY c
)
ﬁﬁc d
;
ﬁﬁd e

charBuffer
‡‡ &
[
‡‡& '

writeIndex
‡‡' 1
]
‡‡1 2
.
‡‡2 3
unicode
‡‡3 :
=
‡‡; <
$num
‡‡= ?
;
‡‡? @

writeIndex
·· &
+=
··' )
$num
··* +
;
··+ ,
i
‚‚ 
+=
‚‚  
$num
‚‚! "
;
‚‚" #
continue
„„ $
;
„„$ %
case
‰‰ 
	MarkupTag
‰‰ &
.
‰‰& '
NBSP
‰‰' +
:
‰‰+ ,
if
ÂÂ 
(
ÂÂ  

writeIndex
ÂÂ  *
==
ÂÂ+ -

charBuffer
ÂÂ. 8
.
ÂÂ8 9
Length
ÂÂ9 ?
)
ÂÂ? @!
ResizeInternalArray
ÂÂA T
(
ÂÂT U
ref
ÂÂU X

charBuffer
ÂÂY c
)
ÂÂc d
;
ÂÂd e

charBuffer
ÁÁ &
[
ÁÁ& '

writeIndex
ÁÁ' 1
]
ÁÁ1 2
.
ÁÁ2 3
unicode
ÁÁ3 :
=
ÁÁ; <
$num
ÁÁ= @
;
ÁÁ@ A

writeIndex
ËË &
+=
ËË' )
$num
ËË* +
;
ËË+ ,
i
ÈÈ 
+=
ÈÈ  
$num
ÈÈ! "
;
ÈÈ" #
continue
ÍÍ $
;
ÍÍ$ %
case
ÎÎ 
	MarkupTag
ÎÎ &
.
ÎÎ& '
ZWSP
ÎÎ' +
:
ÎÎ+ ,
if
ÏÏ 
(
ÏÏ  

writeIndex
ÏÏ  *
==
ÏÏ+ -

charBuffer
ÏÏ. 8
.
ÏÏ8 9
Length
ÏÏ9 ?
)
ÏÏ? @!
ResizeInternalArray
ÏÏA T
(
ÏÏT U
ref
ÏÏU X

charBuffer
ÏÏY c
)
ÏÏc d
;
ÏÏd e

charBuffer
ÓÓ &
[
ÓÓ& '

writeIndex
ÓÓ' 1
]
ÓÓ1 2
.
ÓÓ2 3
unicode
ÓÓ3 :
=
ÓÓ; <
$num
ÓÓ= C
;
ÓÓC D

writeIndex
ÔÔ &
+=
ÔÔ' )
$num
ÔÔ* +
;
ÔÔ+ ,
i
 
+=
  
$num
! "
;
" #
continue
ÒÒ $
;
ÒÒ$ %
case
ÚÚ 
	MarkupTag
ÚÚ &
.
ÚÚ& '
STYLE
ÚÚ' ,
:
ÚÚ, -
if
ÛÛ 
(
ÛÛ  $
ReplaceOpeningStyleTag
ÛÛ  6
(
ÛÛ6 7
ref
ÛÛ7 :
tagDefinition
ÛÛ; H
,
ÛÛH I
i
ÛÛJ K
,
ÛÛK L
out
ÛÛM P
int
ÛÛQ T
offset
ÛÛU [
,
ÛÛ[ \
ref
ÛÛ] `

charBuffer
ÛÛa k
,
ÛÛk l
ref
ÛÛm p

writeIndex
ÛÛq {
)
ÛÛ{ |
)
ÛÛ| }
{
ÙÙ 
i
ıı  !
=
ıı" #
offset
ıı$ *
;
ıı* +
continue
ˆˆ  (
;
ˆˆ( )
}
˜˜ 
break
¯¯ !
;
¯¯! "
case
˘˘ 
	MarkupTag
˘˘ &
.
˘˘& '
SLASH_STYLE
˘˘' 2
:
˘˘2 3$
ReplaceClosingStyleTag
˙˙ 2
(
˙˙2 3
ref
˙˙3 6
tagDefinition
˙˙7 D
,
˙˙D E
i
˙˙F G
,
˙˙G H
ref
˙˙I L

charBuffer
˙˙M W
,
˙˙W X
ref
˙˙Y \

writeIndex
˙˙] g
)
˙˙g h
;
˙˙h i
i
¸¸ 
+=
¸¸  
$num
¸¸! "
;
¸¸" #
continue
˝˝ $
;
˝˝$ %
}
˛˛ 
}
ˇˇ 
if
ÅÅ 
(
ÅÅ 

writeIndex
ÅÅ 
==
ÅÅ !

charBuffer
ÅÅ" ,
.
ÅÅ, -
Length
ÅÅ- 3
)
ÅÅ3 4!
ResizeInternalArray
ÅÅ5 H
(
ÅÅH I
ref
ÅÅI L

charBuffer
ÅÅM W
)
ÅÅW X
;
ÅÅX Y

charBuffer
ÉÉ 
[
ÉÉ 

writeIndex
ÉÉ %
]
ÉÉ% &
.
ÉÉ& '
unicode
ÉÉ' .
=
ÉÉ/ 0
c
ÉÉ1 2
;
ÉÉ2 3

writeIndex
ÑÑ 
+=
ÑÑ 
$num
ÑÑ 
;
ÑÑ  
}
ÖÖ #
m_TextStyleStackDepth
áá !
-=
áá" $
$num
áá% &
;
áá& '
return
ââ 
true
ââ 
;
ââ 
}
ää 	
bool
ïï $
ReplaceOpeningStyleTag
ïï #
(
ïï# $
ref
ïï$ '
int
ïï( +
[
ïï+ ,
]
ïï, -

sourceText
ïï. 8
,
ïï8 9
int
ïï: =
srcIndex
ïï> F
,
ïïF G
out
ïïH K
int
ïïL O
	srcOffset
ïïP Y
,
ïïY Z
ref
ïï[ ^
UnicodeChar
ïï_ j
[
ïïj k
]
ïïk l

charBuffer
ïïm w
,
ïïw x
ref
ïïy |
intïï} Ä

writeIndexïïÅ ã
)ïïã å
{
ññ 	
int
òò 
styleHashCode
òò 
=
òò 
GetStyleHashCode
òò  0
(
òò0 1
ref
òò1 4

sourceText
òò5 ?
,
òò? @
srcIndex
òòA I
+
òòJ K
$num
òòL M
,
òòM N
out
òòO R
	srcOffset
òòS \
)
òò\ ]
;
òò] ^
	TMP_Style
ôô 
style
ôô 
=
ôô 
GetStyle
ôô &
(
ôô& '
styleHashCode
ôô' 4
)
ôô4 5
;
ôô5 6
if
úú 
(
úú 
style
úú 
==
úú 
null
úú 
||
úú  
	srcOffset
úú! *
==
úú+ -
$num
úú. /
)
úú/ 0
return
úú1 7
false
úú8 =
;
úú= >#
m_TextStyleStackDepth
üü !
+=
üü" $
$num
üü% &
;
üü& '
m_TextStyleStacks
¢¢ 
[
¢¢ #
m_TextStyleStackDepth
¢¢ 3
]
¢¢3 4
.
¢¢4 5
Push
¢¢5 9
(
¢¢9 :
style
¢¢: ?
.
¢¢? @
hashCode
¢¢@ H
)
¢¢H I
;
¢¢I J
int
§§ 
styleLength
§§ 
=
§§ 
style
§§ #
.
§§# $"
styleOpeningTagArray
§§$ 8
.
§§8 9
Length
§§9 ?
;
§§? @
int
ßß 
[
ßß 
]
ßß 
tagDefinition
ßß 
=
ßß  !
style
ßß" '
.
ßß' ("
styleOpeningTagArray
ßß( <
;
ßß< =
for
©© 
(
©© 
int
©© 
i
©© 
=
©© 
$num
©© 
;
©© 
i
©© 
<
©© 
styleLength
©©  +
;
©©+ ,
i
©©- .
++
©©. 0
)
©©0 1
{
™™ 
int
´´ 
c
´´ 
=
´´ 
tagDefinition
´´ %
[
´´% &
i
´´& '
]
´´' (
;
´´( )
if
≠≠ 
(
≠≠ 
c
≠≠ 
==
≠≠ 
$char
≠≠ 
&&
≠≠  
i
≠≠! "
+
≠≠# $
$num
≠≠% &
<
≠≠' (
styleLength
≠≠) 4
)
≠≠4 5
{
ÆÆ 
switch
ØØ 
(
ØØ 
tagDefinition
ØØ )
[
ØØ) *
i
ØØ* +
+
ØØ, -
$num
ØØ. /
]
ØØ/ 0
)
ØØ0 1
{
∞∞ 
case
±± 
$char
±± !
:
±±! "
i
≤≤ 
+=
≤≤  
$num
≤≤! "
;
≤≤" #
break
≥≥ !
;
≥≥! "
case
¥¥ 
$char
¥¥  
:
¥¥  !
c
µµ 
=
µµ 
$num
µµ  "
;
µµ" #
i
∂∂ 
+=
∂∂  
$num
∂∂! "
;
∂∂" #
break
∑∑ !
;
∑∑! "
case
∏∏ 
$char
∏∏  
:
∏∏  !
break
ππ !
;
ππ! "
case
∫∫ 
$char
∫∫  
:
∫∫  !
break
ªª !
;
ªª! "
case
ºº 
$char
ºº  
:
ºº  !
if
ææ 
(
ææ  
i
ææ  !
+
ææ" #
$num
ææ$ %
<
ææ& '
styleLength
ææ( 3
)
ææ3 4
{
øø 
c
¿¿  !
=
¿¿" #
GetUTF16
¿¿$ ,
(
¿¿, -
tagDefinition
¿¿- :
,
¿¿: ;
i
¿¿< =
+
¿¿> ?
$num
¿¿@ A
)
¿¿A B
;
¿¿B C
i
¬¬  !
+=
¬¬" $
$num
¬¬% &
;
¬¬& '
}
√√ 
break
ƒƒ !
;
ƒƒ! "
case
≈≈ 
$char
≈≈  
:
≈≈  !
if
«« 
(
««  
i
««  !
+
««" #
$num
««$ %
<
««& '
styleLength
««( 3
)
««3 4
{
»» 
c
……  !
=
……" #
GetUTF32
……$ ,
(
……, -
tagDefinition
……- :
,
……: ;
i
……< =
+
……> ?
$num
……@ A
)
……A B
;
……B C
i
ÀÀ  !
+=
ÀÀ" $
$num
ÀÀ% &
;
ÀÀ& '
}
ÃÃ 
break
ÕÕ !
;
ÕÕ! "
}
ŒŒ 
}
œœ 
if
—— 
(
—— 
c
—— 
==
—— 
$char
—— 
)
—— 
{
““ 
int
”” 
hashCode
””  
=
””! ""
GetMarkupTagHashCode
””# 7
(
””7 8
tagDefinition
””8 E
,
””E F
i
””G H
+
””I J
$num
””K L
)
””L M
;
””M N
switch
’’ 
(
’’ 
(
’’ 
	MarkupTag
’’ &
)
’’& '
hashCode
’’' /
)
’’/ 0
{
÷÷ 
case
◊◊ 
	MarkupTag
◊◊ &
.
◊◊& '
BR
◊◊' )
:
◊◊) *
if
ÿÿ 
(
ÿÿ  

writeIndex
ÿÿ  *
==
ÿÿ+ -

charBuffer
ÿÿ. 8
.
ÿÿ8 9
Length
ÿÿ9 ?
)
ÿÿ? @!
ResizeInternalArray
ÿÿA T
(
ÿÿT U
ref
ÿÿU X

charBuffer
ÿÿY c
)
ÿÿc d
;
ÿÿd e

charBuffer
⁄⁄ &
[
⁄⁄& '

writeIndex
⁄⁄' 1
]
⁄⁄1 2
.
⁄⁄2 3
unicode
⁄⁄3 :
=
⁄⁄; <
$num
⁄⁄= ?
;
⁄⁄? @

writeIndex
€€ &
+=
€€' )
$num
€€* +
;
€€+ ,
i
‹‹ 
+=
‹‹  
$num
‹‹! "
;
‹‹" #
continue
›› $
;
››$ %
case
ﬁﬁ 
	MarkupTag
ﬁﬁ &
.
ﬁﬁ& '
NBSP
ﬁﬁ' +
:
ﬁﬁ+ ,
if
ﬂﬂ 
(
ﬂﬂ  

writeIndex
ﬂﬂ  *
==
ﬂﬂ+ -

charBuffer
ﬂﬂ. 8
.
ﬂﬂ8 9
Length
ﬂﬂ9 ?
)
ﬂﬂ? @!
ResizeInternalArray
ﬂﬂA T
(
ﬂﬂT U
ref
ﬂﬂU X

charBuffer
ﬂﬂY c
)
ﬂﬂc d
;
ﬂﬂd e

charBuffer
·· &
[
··& '

writeIndex
··' 1
]
··1 2
.
··2 3
unicode
··3 :
=
··; <
$num
··= @
;
··@ A

writeIndex
‚‚ &
+=
‚‚' )
$num
‚‚* +
;
‚‚+ ,
i
„„ 
+=
„„  
$num
„„! "
;
„„" #
continue
‰‰ $
;
‰‰$ %
case
ÂÂ 
	MarkupTag
ÂÂ &
.
ÂÂ& '
ZWSP
ÂÂ' +
:
ÂÂ+ ,
if
ÊÊ 
(
ÊÊ  

writeIndex
ÊÊ  *
==
ÊÊ+ -

charBuffer
ÊÊ. 8
.
ÊÊ8 9
Length
ÊÊ9 ?
)
ÊÊ? @!
ResizeInternalArray
ÊÊA T
(
ÊÊT U
ref
ÊÊU X

charBuffer
ÊÊY c
)
ÊÊc d
;
ÊÊd e

charBuffer
ËË &
[
ËË& '

writeIndex
ËË' 1
]
ËË1 2
.
ËË2 3
unicode
ËË3 :
=
ËË; <
$num
ËË= C
;
ËËC D

writeIndex
ÈÈ &
+=
ÈÈ' )
$num
ÈÈ* +
;
ÈÈ+ ,
i
ÍÍ 
+=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
continue
ÎÎ $
;
ÎÎ$ %
case
ÏÏ 
	MarkupTag
ÏÏ &
.
ÏÏ& '
STYLE
ÏÏ' ,
:
ÏÏ, -
if
ÌÌ 
(
ÌÌ  $
ReplaceOpeningStyleTag
ÌÌ  6
(
ÌÌ6 7
ref
ÌÌ7 :
tagDefinition
ÌÌ; H
,
ÌÌH I
i
ÌÌJ K
,
ÌÌK L
out
ÌÌM P
int
ÌÌQ T
offset
ÌÌU [
,
ÌÌ[ \
ref
ÌÌ] `

charBuffer
ÌÌa k
,
ÌÌk l
ref
ÌÌm p

writeIndex
ÌÌq {
)
ÌÌ{ |
)
ÌÌ| }
{
ÓÓ 
i
ÔÔ  !
=
ÔÔ" #
offset
ÔÔ$ *
;
ÔÔ* +
continue
  (
;
( )
}
ÒÒ 
break
ÚÚ !
;
ÚÚ! "
case
ÛÛ 
	MarkupTag
ÛÛ &
.
ÛÛ& '
SLASH_STYLE
ÛÛ' 2
:
ÛÛ2 3$
ReplaceClosingStyleTag
ÙÙ 2
(
ÙÙ2 3
ref
ÙÙ3 6
tagDefinition
ÙÙ7 D
,
ÙÙD E
i
ÙÙF G
,
ÙÙG H
ref
ÙÙI L

charBuffer
ÙÙM W
,
ÙÙW X
ref
ÙÙY \

writeIndex
ÙÙ] g
)
ÙÙg h
;
ÙÙh i
i
ˆˆ 
+=
ˆˆ  
$num
ˆˆ! "
;
ˆˆ" #
continue
˜˜ $
;
˜˜$ %
}
¯¯ 
}
˘˘ 
if
˚˚ 
(
˚˚ 

writeIndex
˚˚ 
==
˚˚ !

charBuffer
˚˚" ,
.
˚˚, -
Length
˚˚- 3
)
˚˚3 4!
ResizeInternalArray
˚˚5 H
(
˚˚H I
ref
˚˚I L

charBuffer
˚˚M W
)
˚˚W X
;
˚˚X Y

charBuffer
˝˝ 
[
˝˝ 

writeIndex
˝˝ %
]
˝˝% &
.
˝˝& '
unicode
˝˝' .
=
˝˝/ 0
c
˝˝1 2
;
˝˝2 3

writeIndex
˛˛ 
+=
˛˛ 
$num
˛˛ 
;
˛˛  
}
ˇˇ #
m_TextStyleStackDepth
ÅÅ !
-=
ÅÅ" $
$num
ÅÅ% &
;
ÅÅ& '
return
ÉÉ 
true
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
void
èè $
ReplaceClosingStyleTag
èè #
(
èè# $
ref
èè$ '"
TextBackingContainer
èè( <

sourceText
èè= G
,
èèG H
int
èèI L
srcIndex
èèM U
,
èèU V
ref
èèW Z
UnicodeChar
èè[ f
[
èèf g
]
èèg h

charBuffer
èèi s
,
èès t
ref
èèu x
int
èèy |

writeIndexèè} á
)èèá à
{
êê 	
int
íí 
styleHashCode
íí 
=
íí 
m_TextStyleStacks
íí  1
[
íí1 2#
m_TextStyleStackDepth
íí2 G
+
ííH I
$num
ííJ K
]
ííK L
.
ííL M
Pop
ííM P
(
ííP Q
)
ííQ R
;
ííR S
	TMP_Style
ìì 
style
ìì 
=
ìì 
GetStyle
ìì &
(
ìì& '
styleHashCode
ìì' 4
)
ìì4 5
;
ìì5 6
if
ññ 
(
ññ 
style
ññ 
==
ññ 
null
ññ 
)
ññ 
return
ññ %
;
ññ% &#
m_TextStyleStackDepth
ôô !
+=
ôô" $
$num
ôô% &
;
ôô& '
int
õõ 
styleLength
õõ 
=
õõ 
style
õõ #
.
õõ# $"
styleClosingTagArray
õõ$ 8
.
õõ8 9
Length
õõ9 ?
;
õõ? @
int
ûû 
[
ûû 
]
ûû 
tagDefinition
ûû 
=
ûû  !
style
ûû" '
.
ûû' ("
styleClosingTagArray
ûû( <
;
ûû< =
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
†† 
<
†† 
styleLength
††  +
;
††+ ,
i
††- .
++
††. 0
)
††0 1
{
°° 
int
¢¢ 
c
¢¢ 
=
¢¢ 
tagDefinition
¢¢ %
[
¢¢% &
i
¢¢& '
]
¢¢' (
;
¢¢( )
if
§§ 
(
§§ 
c
§§ 
==
§§ 
$char
§§ 
&&
§§  
i
§§! "
+
§§# $
$num
§§% &
<
§§' (
styleLength
§§) 4
)
§§4 5
{
•• 
switch
¶¶ 
(
¶¶ 
tagDefinition
¶¶ )
[
¶¶) *
i
¶¶* +
+
¶¶, -
$num
¶¶. /
]
¶¶/ 0
)
¶¶0 1
{
ßß 
case
®® 
$char
®® !
:
®®! "
i
©© 
+=
©©  
$num
©©! "
;
©©" #
break
™™ !
;
™™! "
case
´´ 
$char
´´  
:
´´  !
c
¨¨ 
=
¨¨ 
$num
¨¨  "
;
¨¨" #
i
≠≠ 
+=
≠≠  
$num
≠≠! "
;
≠≠" #
break
ÆÆ !
;
ÆÆ! "
case
ØØ 
$char
ØØ  
:
ØØ  !
break
∞∞ !
;
∞∞! "
case
±± 
$char
±±  
:
±±  !
break
≤≤ !
;
≤≤! "
case
≥≥ 
$char
≥≥  
:
≥≥  !
if
µµ 
(
µµ  
i
µµ  !
+
µµ" #
$num
µµ$ %
<
µµ& '
styleLength
µµ( 3
)
µµ3 4
{
∂∂ 
c
∑∑  !
=
∑∑" #
GetUTF16
∑∑$ ,
(
∑∑, -
tagDefinition
∑∑- :
,
∑∑: ;
i
∑∑< =
+
∑∑> ?
$num
∑∑@ A
)
∑∑A B
;
∑∑B C
i
ππ  !
+=
ππ" $
$num
ππ% &
;
ππ& '
}
∫∫ 
break
ªª !
;
ªª! "
case
ºº 
$char
ºº  
:
ºº  !
if
ææ 
(
ææ  
i
ææ  !
+
ææ" #
$num
ææ$ %
<
ææ& '
styleLength
ææ( 3
)
ææ3 4
{
øø 
c
¿¿  !
=
¿¿" #
GetUTF32
¿¿$ ,
(
¿¿, -
tagDefinition
¿¿- :
,
¿¿: ;
i
¿¿< =
+
¿¿> ?
$num
¿¿@ A
)
¿¿A B
;
¿¿B C
i
¬¬  !
+=
¬¬" $
$num
¬¬% &
;
¬¬& '
}
√√ 
break
ƒƒ !
;
ƒƒ! "
}
≈≈ 
}
∆∆ 
if
»» 
(
»» 
c
»» 
==
»» 
$char
»» 
)
»» 
{
…… 
int
   
hashCode
    
=
  ! ""
GetMarkupTagHashCode
  # 7
(
  7 8
tagDefinition
  8 E
,
  E F
i
  G H
+
  I J
$num
  K L
)
  L M
;
  M N
switch
ÃÃ 
(
ÃÃ 
(
ÃÃ 
	MarkupTag
ÃÃ &
)
ÃÃ& '
hashCode
ÃÃ' /
)
ÃÃ/ 0
{
ÕÕ 
case
ŒŒ 
	MarkupTag
ŒŒ &
.
ŒŒ& '
BR
ŒŒ' )
:
ŒŒ) *
if
œœ 
(
œœ  

writeIndex
œœ  *
==
œœ+ -

charBuffer
œœ. 8
.
œœ8 9
Length
œœ9 ?
)
œœ? @!
ResizeInternalArray
œœA T
(
œœT U
ref
œœU X

charBuffer
œœY c
)
œœc d
;
œœd e

charBuffer
—— &
[
——& '

writeIndex
——' 1
]
——1 2
.
——2 3
unicode
——3 :
=
——; <
$num
——= ?
;
——? @

writeIndex
““ &
+=
““' )
$num
““* +
;
““+ ,
i
”” 
+=
””  
$num
””! "
;
””" #
continue
‘‘ $
;
‘‘$ %
case
’’ 
	MarkupTag
’’ &
.
’’& '
NBSP
’’' +
:
’’+ ,
if
÷÷ 
(
÷÷  

writeIndex
÷÷  *
==
÷÷+ -

charBuffer
÷÷. 8
.
÷÷8 9
Length
÷÷9 ?
)
÷÷? @!
ResizeInternalArray
÷÷A T
(
÷÷T U
ref
÷÷U X

charBuffer
÷÷Y c
)
÷÷c d
;
÷÷d e

charBuffer
ÿÿ &
[
ÿÿ& '

writeIndex
ÿÿ' 1
]
ÿÿ1 2
.
ÿÿ2 3
unicode
ÿÿ3 :
=
ÿÿ; <
$num
ÿÿ= @
;
ÿÿ@ A

writeIndex
ŸŸ &
+=
ŸŸ' )
$num
ŸŸ* +
;
ŸŸ+ ,
i
⁄⁄ 
+=
⁄⁄  
$num
⁄⁄! "
;
⁄⁄" #
continue
€€ $
;
€€$ %
case
‹‹ 
	MarkupTag
‹‹ &
.
‹‹& '
ZWSP
‹‹' +
:
‹‹+ ,
if
›› 
(
››  

writeIndex
››  *
==
››+ -

charBuffer
››. 8
.
››8 9
Length
››9 ?
)
››? @!
ResizeInternalArray
››A T
(
››T U
ref
››U X

charBuffer
››Y c
)
››c d
;
››d e

charBuffer
ﬂﬂ &
[
ﬂﬂ& '

writeIndex
ﬂﬂ' 1
]
ﬂﬂ1 2
.
ﬂﬂ2 3
unicode
ﬂﬂ3 :
=
ﬂﬂ; <
$num
ﬂﬂ= C
;
ﬂﬂC D

writeIndex
‡‡ &
+=
‡‡' )
$num
‡‡* +
;
‡‡+ ,
i
·· 
+=
··  
$num
··! "
;
··" #
continue
‚‚ $
;
‚‚$ %
case
„„ 
	MarkupTag
„„ &
.
„„& '
STYLE
„„' ,
:
„„, -
if
‰‰ 
(
‰‰  $
ReplaceOpeningStyleTag
‰‰  6
(
‰‰6 7
ref
‰‰7 :
tagDefinition
‰‰; H
,
‰‰H I
i
‰‰J K
,
‰‰K L
out
‰‰M P
int
‰‰Q T
offset
‰‰U [
,
‰‰[ \
ref
‰‰] `

charBuffer
‰‰a k
,
‰‰k l
ref
‰‰m p

writeIndex
‰‰q {
)
‰‰{ |
)
‰‰| }
{
ÂÂ 
i
ÊÊ  !
=
ÊÊ" #
offset
ÊÊ$ *
;
ÊÊ* +
continue
ÁÁ  (
;
ÁÁ( )
}
ËË 
break
ÈÈ !
;
ÈÈ! "
case
ÍÍ 
	MarkupTag
ÍÍ &
.
ÍÍ& '
SLASH_STYLE
ÍÍ' 2
:
ÍÍ2 3$
ReplaceClosingStyleTag
ÎÎ 2
(
ÎÎ2 3
ref
ÎÎ3 6
tagDefinition
ÎÎ7 D
,
ÎÎD E
i
ÎÎF G
,
ÎÎG H
ref
ÎÎI L

charBuffer
ÎÎM W
,
ÎÎW X
ref
ÎÎY \

writeIndex
ÎÎ] g
)
ÎÎg h
;
ÎÎh i
i
ÌÌ 
+=
ÌÌ  
$num
ÌÌ! "
;
ÌÌ" #
continue
ÓÓ $
;
ÓÓ$ %
}
ÔÔ 
}
 
if
ÚÚ 
(
ÚÚ 

writeIndex
ÚÚ 
==
ÚÚ !

charBuffer
ÚÚ" ,
.
ÚÚ, -
Length
ÚÚ- 3
)
ÚÚ3 4!
ResizeInternalArray
ÚÚ5 H
(
ÚÚH I
ref
ÚÚI L

charBuffer
ÚÚM W
)
ÚÚW X
;
ÚÚX Y

charBuffer
ÙÙ 
[
ÙÙ 

writeIndex
ÙÙ %
]
ÙÙ% &
.
ÙÙ& '
unicode
ÙÙ' .
=
ÙÙ/ 0
c
ÙÙ1 2
;
ÙÙ2 3

writeIndex
ıı 
+=
ıı 
$num
ıı 
;
ıı  
}
ˆˆ #
m_TextStyleStackDepth
¯¯ !
-=
¯¯" $
$num
¯¯% &
;
¯¯& '
}
˘˘ 	
void
ÉÉ $
ReplaceClosingStyleTag
ÉÉ #
(
ÉÉ# $
ref
ÉÉ$ '
int
ÉÉ( +
[
ÉÉ+ ,
]
ÉÉ, -

sourceText
ÉÉ. 8
,
ÉÉ8 9
int
ÉÉ: =
srcIndex
ÉÉ> F
,
ÉÉF G
ref
ÉÉH K
UnicodeChar
ÉÉL W
[
ÉÉW X
]
ÉÉX Y

charBuffer
ÉÉZ d
,
ÉÉd e
ref
ÉÉf i
int
ÉÉj m

writeIndex
ÉÉn x
)
ÉÉx y
{
ÑÑ 	
int
ÜÜ 
styleHashCode
ÜÜ 
=
ÜÜ 
m_TextStyleStacks
ÜÜ  1
[
ÜÜ1 2#
m_TextStyleStackDepth
ÜÜ2 G
+
ÜÜH I
$num
ÜÜJ K
]
ÜÜK L
.
ÜÜL M
Pop
ÜÜM P
(
ÜÜP Q
)
ÜÜQ R
;
ÜÜR S
	TMP_Style
áá 
style
áá 
=
áá 
GetStyle
áá &
(
áá& '
styleHashCode
áá' 4
)
áá4 5
;
áá5 6
if
ää 
(
ää 
style
ää 
==
ää 
null
ää 
)
ää 
return
ää %
;
ää% &#
m_TextStyleStackDepth
çç !
+=
çç" $
$num
çç% &
;
çç& '
int
èè 
styleLength
èè 
=
èè 
style
èè #
.
èè# $"
styleClosingTagArray
èè$ 8
.
èè8 9
Length
èè9 ?
;
èè? @
int
íí 
[
íí 
]
íí 
tagDefinition
íí 
=
íí  !
style
íí" '
.
íí' ("
styleClosingTagArray
íí( <
;
íí< =
for
îî 
(
îî 
int
îî 
i
îî 
=
îî 
$num
îî 
;
îî 
i
îî 
<
îî 
styleLength
îî  +
;
îî+ ,
i
îî- .
++
îî. 0
)
îî0 1
{
ïï 
int
ññ 
c
ññ 
=
ññ 
tagDefinition
ññ %
[
ññ% &
i
ññ& '
]
ññ' (
;
ññ( )
if
òò 
(
òò 
c
òò 
==
òò 
$char
òò 
&&
òò  
i
òò! "
+
òò# $
$num
òò% &
<
òò' (
styleLength
òò) 4
)
òò4 5
{
ôô 
switch
öö 
(
öö 
tagDefinition
öö )
[
öö) *
i
öö* +
+
öö, -
$num
öö. /
]
öö/ 0
)
öö0 1
{
õõ 
case
úú 
$char
úú !
:
úú! "
i
ùù 
+=
ùù  
$num
ùù! "
;
ùù" #
break
ûû !
;
ûû! "
case
üü 
$char
üü  
:
üü  !
c
†† 
=
†† 
$num
††  "
;
††" #
i
°° 
+=
°°  
$num
°°! "
;
°°" #
break
¢¢ !
;
¢¢! "
case
££ 
$char
££  
:
££  !
break
§§ !
;
§§! "
case
•• 
$char
••  
:
••  !
break
¶¶ !
;
¶¶! "
case
ßß 
$char
ßß  
:
ßß  !
if
©© 
(
©©  
i
©©  !
+
©©" #
$num
©©$ %
<
©©& '
styleLength
©©( 3
)
©©3 4
{
™™ 
c
´´  !
=
´´" #
GetUTF16
´´$ ,
(
´´, -
tagDefinition
´´- :
,
´´: ;
i
´´< =
+
´´> ?
$num
´´@ A
)
´´A B
;
´´B C
i
≠≠  !
+=
≠≠" $
$num
≠≠% &
;
≠≠& '
}
ÆÆ 
break
ØØ !
;
ØØ! "
case
∞∞ 
$char
∞∞  
:
∞∞  !
if
≤≤ 
(
≤≤  
i
≤≤  !
+
≤≤" #
$num
≤≤$ %
<
≤≤& '
styleLength
≤≤( 3
)
≤≤3 4
{
≥≥ 
c
¥¥  !
=
¥¥" #
GetUTF32
¥¥$ ,
(
¥¥, -
tagDefinition
¥¥- :
,
¥¥: ;
i
¥¥< =
+
¥¥> ?
$num
¥¥@ A
)
¥¥A B
;
¥¥B C
i
∂∂  !
+=
∂∂" $
$num
∂∂% &
;
∂∂& '
}
∑∑ 
break
∏∏ !
;
∏∏! "
}
ππ 
}
∫∫ 
if
ºº 
(
ºº 
c
ºº 
==
ºº 
$char
ºº 
)
ºº 
{
ΩΩ 
int
ææ 
hashCode
ææ  
=
ææ! ""
GetMarkupTagHashCode
ææ# 7
(
ææ7 8
tagDefinition
ææ8 E
,
ææE F
i
ææG H
+
ææI J
$num
ææK L
)
ææL M
;
ææM N
switch
¿¿ 
(
¿¿ 
(
¿¿ 
	MarkupTag
¿¿ &
)
¿¿& '
hashCode
¿¿' /
)
¿¿/ 0
{
¡¡ 
case
¬¬ 
	MarkupTag
¬¬ &
.
¬¬& '
BR
¬¬' )
:
¬¬) *
if
√√ 
(
√√  

writeIndex
√√  *
==
√√+ -

charBuffer
√√. 8
.
√√8 9
Length
√√9 ?
)
√√? @!
ResizeInternalArray
√√A T
(
√√T U
ref
√√U X

charBuffer
√√Y c
)
√√c d
;
√√d e

charBuffer
≈≈ &
[
≈≈& '

writeIndex
≈≈' 1
]
≈≈1 2
.
≈≈2 3
unicode
≈≈3 :
=
≈≈; <
$num
≈≈= ?
;
≈≈? @

writeIndex
∆∆ &
+=
∆∆' )
$num
∆∆* +
;
∆∆+ ,
i
«« 
+=
««  
$num
««! "
;
««" #
continue
»» $
;
»»$ %
case
…… 
	MarkupTag
…… &
.
……& '
NBSP
……' +
:
……+ ,
if
   
(
    

writeIndex
    *
==
  + -

charBuffer
  . 8
.
  8 9
Length
  9 ?
)
  ? @!
ResizeInternalArray
  A T
(
  T U
ref
  U X

charBuffer
  Y c
)
  c d
;
  d e

charBuffer
ÃÃ &
[
ÃÃ& '

writeIndex
ÃÃ' 1
]
ÃÃ1 2
.
ÃÃ2 3
unicode
ÃÃ3 :
=
ÃÃ; <
$num
ÃÃ= @
;
ÃÃ@ A

writeIndex
ÕÕ &
+=
ÕÕ' )
$num
ÕÕ* +
;
ÕÕ+ ,
i
ŒŒ 
+=
ŒŒ  
$num
ŒŒ! "
;
ŒŒ" #
continue
œœ $
;
œœ$ %
case
–– 
	MarkupTag
–– &
.
––& '
ZWSP
––' +
:
––+ ,
if
—— 
(
——  

writeIndex
——  *
==
——+ -

charBuffer
——. 8
.
——8 9
Length
——9 ?
)
——? @!
ResizeInternalArray
——A T
(
——T U
ref
——U X

charBuffer
——Y c
)
——c d
;
——d e

charBuffer
”” &
[
””& '

writeIndex
””' 1
]
””1 2
.
””2 3
unicode
””3 :
=
””; <
$num
””= C
;
””C D

writeIndex
‘‘ &
+=
‘‘' )
$num
‘‘* +
;
‘‘+ ,
i
’’ 
+=
’’  
$num
’’! "
;
’’" #
continue
÷÷ $
;
÷÷$ %
case
◊◊ 
	MarkupTag
◊◊ &
.
◊◊& '
STYLE
◊◊' ,
:
◊◊, -
if
ÿÿ 
(
ÿÿ  $
ReplaceOpeningStyleTag
ÿÿ  6
(
ÿÿ6 7
ref
ÿÿ7 :
tagDefinition
ÿÿ; H
,
ÿÿH I
i
ÿÿJ K
,
ÿÿK L
out
ÿÿM P
int
ÿÿQ T
offset
ÿÿU [
,
ÿÿ[ \
ref
ÿÿ] `

charBuffer
ÿÿa k
,
ÿÿk l
ref
ÿÿm p

writeIndex
ÿÿq {
)
ÿÿ{ |
)
ÿÿ| }
{
ŸŸ 
i
⁄⁄  !
=
⁄⁄" #
offset
⁄⁄$ *
;
⁄⁄* +
continue
€€  (
;
€€( )
}
‹‹ 
break
›› !
;
››! "
case
ﬁﬁ 
	MarkupTag
ﬁﬁ &
.
ﬁﬁ& '
SLASH_STYLE
ﬁﬁ' 2
:
ﬁﬁ2 3$
ReplaceClosingStyleTag
ﬂﬂ 2
(
ﬂﬂ2 3
ref
ﬂﬂ3 6
tagDefinition
ﬂﬂ7 D
,
ﬂﬂD E
i
ﬂﬂF G
,
ﬂﬂG H
ref
ﬂﬂI L

charBuffer
ﬂﬂM W
,
ﬂﬂW X
ref
ﬂﬂY \

writeIndex
ﬂﬂ] g
)
ﬂﬂg h
;
ﬂﬂh i
i
·· 
+=
··  
$num
··! "
;
··" #
continue
‚‚ $
;
‚‚$ %
}
„„ 
}
‰‰ 
if
ÊÊ 
(
ÊÊ 

writeIndex
ÊÊ 
==
ÊÊ !

charBuffer
ÊÊ" ,
.
ÊÊ, -
Length
ÊÊ- 3
)
ÊÊ3 4!
ResizeInternalArray
ÊÊ5 H
(
ÊÊH I
ref
ÊÊI L

charBuffer
ÊÊM W
)
ÊÊW X
;
ÊÊX Y

charBuffer
ËË 
[
ËË 

writeIndex
ËË %
]
ËË% &
.
ËË& '
unicode
ËË' .
=
ËË/ 0
c
ËË1 2
;
ËË2 3

writeIndex
ÈÈ 
+=
ÈÈ 
$num
ÈÈ 
;
ÈÈ  
}
ÍÍ #
m_TextStyleStackDepth
ÏÏ !
-=
ÏÏ" $
$num
ÏÏ% &
;
ÏÏ& '
}
ÌÌ 	
bool
¯¯ #
InsertOpeningStyleTag
¯¯ "
(
¯¯" #
	TMP_Style
¯¯# ,
style
¯¯- 2
,
¯¯2 3
int
¯¯4 7
srcIndex
¯¯8 @
,
¯¯@ A
ref
¯¯B E
UnicodeChar
¯¯F Q
[
¯¯Q R
]
¯¯R S

charBuffer
¯¯T ^
,
¯¯^ _
ref
¯¯` c
int
¯¯d g

writeIndex
¯¯h r
)
¯¯r s
{
˘˘ 	
if
˚˚ 
(
˚˚ 
style
˚˚ 
==
˚˚ 
null
˚˚ 
)
˚˚ 
return
˚˚ %
false
˚˚& +
;
˚˚+ ,
m_TextStyleStacks
˝˝ 
[
˝˝ 
$num
˝˝ 
]
˝˝  
.
˝˝  !
Push
˝˝! %
(
˝˝% &
style
˝˝& +
.
˝˝+ ,
hashCode
˝˝, 4
)
˝˝4 5
;
˝˝5 6
int
ˇˇ 
styleLength
ˇˇ 
=
ˇˇ 
style
ˇˇ #
.
ˇˇ# $"
styleOpeningTagArray
ˇˇ$ 8
.
ˇˇ8 9
Length
ˇˇ9 ?
;
ˇˇ? @
int
ÇÇ 
[
ÇÇ 
]
ÇÇ 
tagDefinition
ÇÇ 
=
ÇÇ  !
style
ÇÇ" '
.
ÇÇ' ("
styleOpeningTagArray
ÇÇ( <
;
ÇÇ< =
for
ÑÑ 
(
ÑÑ 
int
ÑÑ 
i
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
i
ÑÑ 
<
ÑÑ 
styleLength
ÑÑ  +
;
ÑÑ+ ,
i
ÑÑ- .
++
ÑÑ. 0
)
ÑÑ0 1
{
ÖÖ 
int
ÜÜ 
c
ÜÜ 
=
ÜÜ 
tagDefinition
ÜÜ %
[
ÜÜ% &
i
ÜÜ& '
]
ÜÜ' (
;
ÜÜ( )
if
àà 
(
àà 
c
àà 
==
àà 
$char
àà 
&&
àà  
i
àà! "
+
àà# $
$num
àà% &
<
àà' (
styleLength
àà) 4
)
àà4 5
{
ââ 
switch
ää 
(
ää 
tagDefinition
ää )
[
ää) *
i
ää* +
+
ää, -
$num
ää. /
]
ää/ 0
)
ää0 1
{
ãã 
case
åå 
$char
åå !
:
åå! "
i
çç 
+=
çç  
$num
çç! "
;
çç" #
break
éé !
;
éé! "
case
èè 
$char
èè  
:
èè  !
c
êê 
=
êê 
$num
êê  "
;
êê" #
i
ëë 
+=
ëë  
$num
ëë! "
;
ëë" #
break
íí !
;
íí! "
case
ìì 
$char
ìì  
:
ìì  !
break
îî !
;
îî! "
case
ïï 
$char
ïï  
:
ïï  !
break
ññ !
;
ññ! "
case
óó 
$char
óó  
:
óó  !
if
ôô 
(
ôô  
i
ôô  !
+
ôô" #
$num
ôô$ %
<
ôô& '
styleLength
ôô( 3
)
ôô3 4
{
öö 
c
õõ  !
=
õõ" #
GetUTF16
õõ$ ,
(
õõ, -
tagDefinition
õõ- :
,
õõ: ;
i
õõ< =
+
õõ> ?
$num
õõ@ A
)
õõA B
;
õõB C
i
ùù  !
+=
ùù" $
$num
ùù% &
;
ùù& '
}
ûû 
break
üü !
;
üü! "
case
†† 
$char
††  
:
††  !
if
¢¢ 
(
¢¢  
i
¢¢  !
+
¢¢" #
$num
¢¢$ %
<
¢¢& '
styleLength
¢¢( 3
)
¢¢3 4
{
££ 
c
§§  !
=
§§" #
GetUTF32
§§$ ,
(
§§, -
tagDefinition
§§- :
,
§§: ;
i
§§< =
+
§§> ?
$num
§§@ A
)
§§A B
;
§§B C
i
¶¶  !
+=
¶¶" $
$num
¶¶% &
;
¶¶& '
}
ßß 
break
®® !
;
®®! "
}
©© 
}
™™ 
if
¨¨ 
(
¨¨ 
c
¨¨ 
==
¨¨ 
$char
¨¨ 
)
¨¨ 
{
≠≠ 
int
ÆÆ 
hashCode
ÆÆ  
=
ÆÆ! ""
GetMarkupTagHashCode
ÆÆ# 7
(
ÆÆ7 8
tagDefinition
ÆÆ8 E
,
ÆÆE F
i
ÆÆG H
+
ÆÆI J
$num
ÆÆK L
)
ÆÆL M
;
ÆÆM N
switch
∞∞ 
(
∞∞ 
(
∞∞ 
	MarkupTag
∞∞ &
)
∞∞& '
hashCode
∞∞' /
)
∞∞/ 0
{
±± 
case
≤≤ 
	MarkupTag
≤≤ &
.
≤≤& '
BR
≤≤' )
:
≤≤) *
if
≥≥ 
(
≥≥  

writeIndex
≥≥  *
==
≥≥+ -

charBuffer
≥≥. 8
.
≥≥8 9
Length
≥≥9 ?
)
≥≥? @!
ResizeInternalArray
≥≥A T
(
≥≥T U
ref
≥≥U X

charBuffer
≥≥Y c
)
≥≥c d
;
≥≥d e

charBuffer
µµ &
[
µµ& '

writeIndex
µµ' 1
]
µµ1 2
.
µµ2 3
unicode
µµ3 :
=
µµ; <
$num
µµ= ?
;
µµ? @

writeIndex
∂∂ &
+=
∂∂' )
$num
∂∂* +
;
∂∂+ ,
i
∑∑ 
+=
∑∑  
$num
∑∑! "
;
∑∑" #
continue
∏∏ $
;
∏∏$ %
case
ππ 
	MarkupTag
ππ &
.
ππ& '
NBSP
ππ' +
:
ππ+ ,
if
∫∫ 
(
∫∫  

writeIndex
∫∫  *
==
∫∫+ -

charBuffer
∫∫. 8
.
∫∫8 9
Length
∫∫9 ?
)
∫∫? @!
ResizeInternalArray
∫∫A T
(
∫∫T U
ref
∫∫U X

charBuffer
∫∫Y c
)
∫∫c d
;
∫∫d e

charBuffer
ºº &
[
ºº& '

writeIndex
ºº' 1
]
ºº1 2
.
ºº2 3
unicode
ºº3 :
=
ºº; <
$num
ºº= @
;
ºº@ A

writeIndex
ΩΩ &
+=
ΩΩ' )
$num
ΩΩ* +
;
ΩΩ+ ,
i
ææ 
+=
ææ  
$num
ææ! "
;
ææ" #
continue
øø $
;
øø$ %
case
¿¿ 
	MarkupTag
¿¿ &
.
¿¿& '
ZWSP
¿¿' +
:
¿¿+ ,
if
¡¡ 
(
¡¡  

writeIndex
¡¡  *
==
¡¡+ -

charBuffer
¡¡. 8
.
¡¡8 9
Length
¡¡9 ?
)
¡¡? @!
ResizeInternalArray
¡¡A T
(
¡¡T U
ref
¡¡U X

charBuffer
¡¡Y c
)
¡¡c d
;
¡¡d e

charBuffer
√√ &
[
√√& '

writeIndex
√√' 1
]
√√1 2
.
√√2 3
unicode
√√3 :
=
√√; <
$num
√√= C
;
√√C D

writeIndex
ƒƒ &
+=
ƒƒ' )
$num
ƒƒ* +
;
ƒƒ+ ,
i
≈≈ 
+=
≈≈  
$num
≈≈! "
;
≈≈" #
continue
∆∆ $
;
∆∆$ %
case
«« 
	MarkupTag
«« &
.
««& '
STYLE
««' ,
:
««, -
if
»» 
(
»»  $
ReplaceOpeningStyleTag
»»  6
(
»»6 7
ref
»»7 :
tagDefinition
»»; H
,
»»H I
i
»»J K
,
»»K L
out
»»M P
int
»»Q T
offset
»»U [
,
»»[ \
ref
»»] `

charBuffer
»»a k
,
»»k l
ref
»»m p

writeIndex
»»q {
)
»»{ |
)
»»| }
{
…… 
i
    !
=
  " #
offset
  $ *
;
  * +
continue
ÀÀ  (
;
ÀÀ( )
}
ÃÃ 
break
ÕÕ !
;
ÕÕ! "
case
ŒŒ 
	MarkupTag
ŒŒ &
.
ŒŒ& '
SLASH_STYLE
ŒŒ' 2
:
ŒŒ2 3$
ReplaceClosingStyleTag
œœ 2
(
œœ2 3
ref
œœ3 6
tagDefinition
œœ7 D
,
œœD E
i
œœF G
,
œœG H
ref
œœI L

charBuffer
œœM W
,
œœW X
ref
œœY \

writeIndex
œœ] g
)
œœg h
;
œœh i
i
—— 
+=
——  
$num
——! "
;
——" #
continue
““ $
;
““$ %
}
”” 
}
‘‘ 
if
÷÷ 
(
÷÷ 

writeIndex
÷÷ 
==
÷÷ !

charBuffer
÷÷" ,
.
÷÷, -
Length
÷÷- 3
)
÷÷3 4!
ResizeInternalArray
÷÷5 H
(
÷÷H I
ref
÷÷I L

charBuffer
÷÷M W
)
÷÷W X
;
÷÷X Y

charBuffer
ÿÿ 
[
ÿÿ 

writeIndex
ÿÿ %
]
ÿÿ% &
.
ÿÿ& '
unicode
ÿÿ' .
=
ÿÿ/ 0
c
ÿÿ1 2
;
ÿÿ2 3

writeIndex
ŸŸ 
+=
ŸŸ 
$num
ŸŸ 
;
ŸŸ  
}
⁄⁄ #
m_TextStyleStackDepth
‹‹ !
=
‹‹" #
$num
‹‹$ %
;
‹‹% &
return
ﬁﬁ 
true
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
void
ÊÊ #
InsertClosingStyleTag
ÊÊ "
(
ÊÊ" #
ref
ÊÊ# &
UnicodeChar
ÊÊ' 2
[
ÊÊ2 3
]
ÊÊ3 4

charBuffer
ÊÊ5 ?
,
ÊÊ? @
ref
ÊÊA D
int
ÊÊE H

writeIndex
ÊÊI S
)
ÊÊS T
{
ÁÁ 	
int
ÈÈ 
styleHashCode
ÈÈ 
=
ÈÈ 
m_TextStyleStacks
ÈÈ  1
[
ÈÈ1 2
$num
ÈÈ2 3
]
ÈÈ3 4
.
ÈÈ4 5
Pop
ÈÈ5 8
(
ÈÈ8 9
)
ÈÈ9 :
;
ÈÈ: ;
	TMP_Style
ÍÍ 
style
ÍÍ 
=
ÍÍ 
GetStyle
ÍÍ &
(
ÍÍ& '
styleHashCode
ÍÍ' 4
)
ÍÍ4 5
;
ÍÍ5 6
int
ÏÏ 
styleLength
ÏÏ 
=
ÏÏ 
style
ÏÏ #
.
ÏÏ# $"
styleClosingTagArray
ÏÏ$ 8
.
ÏÏ8 9
Length
ÏÏ9 ?
;
ÏÏ? @
int
ÔÔ 
[
ÔÔ 
]
ÔÔ 
tagDefinition
ÔÔ 
=
ÔÔ  !
style
ÔÔ" '
.
ÔÔ' ("
styleClosingTagArray
ÔÔ( <
;
ÔÔ< =
for
ÒÒ 
(
ÒÒ 
int
ÒÒ 
i
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ 
<
ÒÒ 
styleLength
ÒÒ  +
;
ÒÒ+ ,
i
ÒÒ- .
++
ÒÒ. 0
)
ÒÒ0 1
{
ÚÚ 
int
ÛÛ 
c
ÛÛ 
=
ÛÛ 
tagDefinition
ÛÛ %
[
ÛÛ% &
i
ÛÛ& '
]
ÛÛ' (
;
ÛÛ( )
if
ıı 
(
ıı 
c
ıı 
==
ıı 
$char
ıı 
&&
ıı  
i
ıı! "
+
ıı# $
$num
ıı% &
<
ıı' (
styleLength
ıı) 4
)
ıı4 5
{
ˆˆ 
switch
˜˜ 
(
˜˜ 
tagDefinition
˜˜ )
[
˜˜) *
i
˜˜* +
+
˜˜, -
$num
˜˜. /
]
˜˜/ 0
)
˜˜0 1
{
¯¯ 
case
˘˘ 
$char
˘˘ !
:
˘˘! "
i
˙˙ 
+=
˙˙  
$num
˙˙! "
;
˙˙" #
break
˚˚ !
;
˚˚! "
case
¸¸ 
$char
¸¸  
:
¸¸  !
c
˝˝ 
=
˝˝ 
$num
˝˝  "
;
˝˝" #
i
˛˛ 
+=
˛˛  
$num
˛˛! "
;
˛˛" #
break
ˇˇ !
;
ˇˇ! "
case
ÄÄ 
$char
ÄÄ  
:
ÄÄ  !
break
ÅÅ !
;
ÅÅ! "
case
ÇÇ 
$char
ÇÇ  
:
ÇÇ  !
break
ÉÉ !
;
ÉÉ! "
case
ÑÑ 
$char
ÑÑ  
:
ÑÑ  !
if
ÜÜ 
(
ÜÜ  
i
ÜÜ  !
+
ÜÜ" #
$num
ÜÜ$ %
<
ÜÜ& '
styleLength
ÜÜ( 3
)
ÜÜ3 4
{
áá 
c
àà  !
=
àà" #
GetUTF16
àà$ ,
(
àà, -
tagDefinition
àà- :
,
àà: ;
i
àà< =
+
àà> ?
$num
àà@ A
)
ààA B
;
ààB C
i
ää  !
+=
ää" $
$num
ää% &
;
ää& '
}
ãã 
break
åå !
;
åå! "
case
çç 
$char
çç  
:
çç  !
if
èè 
(
èè  
i
èè  !
+
èè" #
$num
èè$ %
<
èè& '
styleLength
èè( 3
)
èè3 4
{
êê 
c
ëë  !
=
ëë" #
GetUTF32
ëë$ ,
(
ëë, -
tagDefinition
ëë- :
,
ëë: ;
i
ëë< =
+
ëë> ?
$num
ëë@ A
)
ëëA B
;
ëëB C
i
ìì  !
+=
ìì" $
$num
ìì% &
;
ìì& '
}
îî 
break
ïï !
;
ïï! "
}
ññ 
}
óó 
if
ôô 
(
ôô 
c
ôô 
==
ôô 
$char
ôô 
)
ôô 
{
öö 
int
õõ 
hashCode
õõ  
=
õõ! ""
GetMarkupTagHashCode
õõ# 7
(
õõ7 8
tagDefinition
õõ8 E
,
õõE F
i
õõG H
+
õõI J
$num
õõK L
)
õõL M
;
õõM N
switch
ùù 
(
ùù 
(
ùù 
	MarkupTag
ùù &
)
ùù& '
hashCode
ùù' /
)
ùù/ 0
{
ûû 
case
üü 
	MarkupTag
üü &
.
üü& '
BR
üü' )
:
üü) *
if
†† 
(
††  

writeIndex
††  *
==
††+ -

charBuffer
††. 8
.
††8 9
Length
††9 ?
)
††? @!
ResizeInternalArray
††A T
(
††T U
ref
††U X

charBuffer
††Y c
)
††c d
;
††d e

charBuffer
¢¢ &
[
¢¢& '

writeIndex
¢¢' 1
]
¢¢1 2
.
¢¢2 3
unicode
¢¢3 :
=
¢¢; <
$num
¢¢= ?
;
¢¢? @

writeIndex
££ &
+=
££' )
$num
££* +
;
££+ ,
i
§§ 
+=
§§  
$num
§§! "
;
§§" #
continue
•• $
;
••$ %
case
¶¶ 
	MarkupTag
¶¶ &
.
¶¶& '
NBSP
¶¶' +
:
¶¶+ ,
if
ßß 
(
ßß  

writeIndex
ßß  *
==
ßß+ -

charBuffer
ßß. 8
.
ßß8 9
Length
ßß9 ?
)
ßß? @!
ResizeInternalArray
ßßA T
(
ßßT U
ref
ßßU X

charBuffer
ßßY c
)
ßßc d
;
ßßd e

charBuffer
©© &
[
©©& '

writeIndex
©©' 1
]
©©1 2
.
©©2 3
unicode
©©3 :
=
©©; <
$num
©©= @
;
©©@ A

writeIndex
™™ &
+=
™™' )
$num
™™* +
;
™™+ ,
i
´´ 
+=
´´  
$num
´´! "
;
´´" #
continue
¨¨ $
;
¨¨$ %
case
≠≠ 
	MarkupTag
≠≠ &
.
≠≠& '
ZWSP
≠≠' +
:
≠≠+ ,
if
ÆÆ 
(
ÆÆ  

writeIndex
ÆÆ  *
==
ÆÆ+ -

charBuffer
ÆÆ. 8
.
ÆÆ8 9
Length
ÆÆ9 ?
)
ÆÆ? @!
ResizeInternalArray
ÆÆA T
(
ÆÆT U
ref
ÆÆU X

charBuffer
ÆÆY c
)
ÆÆc d
;
ÆÆd e

charBuffer
∞∞ &
[
∞∞& '

writeIndex
∞∞' 1
]
∞∞1 2
.
∞∞2 3
unicode
∞∞3 :
=
∞∞; <
$num
∞∞= C
;
∞∞C D

writeIndex
±± &
+=
±±' )
$num
±±* +
;
±±+ ,
i
≤≤ 
+=
≤≤  
$num
≤≤! "
;
≤≤" #
continue
≥≥ $
;
≥≥$ %
case
¥¥ 
	MarkupTag
¥¥ &
.
¥¥& '
STYLE
¥¥' ,
:
¥¥, -
if
µµ 
(
µµ  $
ReplaceOpeningStyleTag
µµ  6
(
µµ6 7
ref
µµ7 :
tagDefinition
µµ; H
,
µµH I
i
µµJ K
,
µµK L
out
µµM P
int
µµQ T
offset
µµU [
,
µµ[ \
ref
µµ] `

charBuffer
µµa k
,
µµk l
ref
µµm p

writeIndex
µµq {
)
µµ{ |
)
µµ| }
{
∂∂ 
i
∑∑  !
=
∑∑" #
offset
∑∑$ *
;
∑∑* +
continue
∏∏  (
;
∏∏( )
}
ππ 
break
∫∫ !
;
∫∫! "
case
ªª 
	MarkupTag
ªª &
.
ªª& '
SLASH_STYLE
ªª' 2
:
ªª2 3$
ReplaceClosingStyleTag
ºº 2
(
ºº2 3
ref
ºº3 6
tagDefinition
ºº7 D
,
ººD E
i
ººF G
,
ººG H
ref
ººI L

charBuffer
ººM W
,
ººW X
ref
ººY \

writeIndex
ºº] g
)
ººg h
;
ººh i
i
ææ 
+=
ææ  
$num
ææ! "
;
ææ" #
continue
øø $
;
øø$ %
}
¿¿ 
}
¡¡ 
if
√√ 
(
√√ 

writeIndex
√√ 
==
√√ !

charBuffer
√√" ,
.
√√, -
Length
√√- 3
)
√√3 4!
ResizeInternalArray
√√5 H
(
√√H I
ref
√√I L

charBuffer
√√M W
)
√√W X
;
√√X Y

charBuffer
≈≈ 
[
≈≈ 

writeIndex
≈≈ %
]
≈≈% &
.
≈≈& '
unicode
≈≈' .
=
≈≈/ 0
c
≈≈1 2
;
≈≈2 3

writeIndex
∆∆ 
+=
∆∆ 
$num
∆∆ 
;
∆∆  
}
«« #
m_TextStyleStackDepth
…… !
=
……" #
$num
……$ %
;
……% &
}
   	
int
”” "
GetMarkupTagHashCode
””  
(
””  !
int
””! $
[
””$ %
]
””% &
tagDefinition
””' 4
,
””4 5
int
””6 9
	readIndex
””: C
)
””C D
{
‘‘ 	
int
’’ 
hashCode
’’ 
=
’’ 
$num
’’ 
;
’’ 
int
÷÷ 
maxReadIndex
÷÷ 
=
÷÷ 
	readIndex
÷÷ (
+
÷÷) *
$num
÷÷+ -
;
÷÷- .
int
◊◊ !
tagDefinitionLength
◊◊ #
=
◊◊$ %
tagDefinition
◊◊& 3
.
◊◊3 4
Length
◊◊4 :
;
◊◊: ;
for
ŸŸ 
(
ŸŸ 
;
ŸŸ 
	readIndex
ŸŸ 
<
ŸŸ 
maxReadIndex
ŸŸ +
&&
ŸŸ, .
	readIndex
ŸŸ/ 8
<
ŸŸ9 :!
tagDefinitionLength
ŸŸ; N
;
ŸŸN O
	readIndex
ŸŸP Y
++
ŸŸY [
)
ŸŸ[ \
{
⁄⁄ 
int
€€ 
c
€€ 
=
€€ 
tagDefinition
€€ %
[
€€% &
	readIndex
€€& /
]
€€/ 0
;
€€0 1
if
›› 
(
›› 
c
›› 
==
›› 
$char
›› 
||
›› 
c
››  !
==
››" $
$char
››% (
||
››) +
c
››, -
==
››. 0
$char
››1 4
)
››4 5
return
ﬁﬁ 
hashCode
ﬁﬁ #
;
ﬁﬁ# $
hashCode
‡‡ 
=
‡‡ 
(
‡‡ 
(
‡‡ 
hashCode
‡‡ %
<<
‡‡& (
$num
‡‡) *
)
‡‡* +
+
‡‡, -
hashCode
‡‡. 6
)
‡‡6 7
^
‡‡8 9
(
‡‡: ;
int
‡‡; >
)
‡‡> ?
TMP_TextUtilities
‡‡? P
.
‡‡P Q
ToUpperASCIIFast
‡‡Q a
(
‡‡a b
(
‡‡b c
uint
‡‡c g
)
‡‡g h
c
‡‡h i
)
‡‡i j
;
‡‡j k
}
·· 
return
„„ 
hashCode
„„ 
;
„„ 
}
‰‰ 	
int
ÌÌ "
GetMarkupTagHashCode
ÌÌ  
(
ÌÌ  !"
TextBackingContainer
ÌÌ! 5
tagDefinition
ÌÌ6 C
,
ÌÌC D
int
ÌÌE H
	readIndex
ÌÌI R
)
ÌÌR S
{
ÓÓ 	
int
ÔÔ 
hashCode
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ 
int
 
maxReadIndex
 
=
 
	readIndex
 (
+
) *
$num
+ -
;
- .
int
ÒÒ !
tagDefinitionLength
ÒÒ #
=
ÒÒ$ %
tagDefinition
ÒÒ& 3
.
ÒÒ3 4
Capacity
ÒÒ4 <
;
ÒÒ< =
for
ÛÛ 
(
ÛÛ 
;
ÛÛ 
	readIndex
ÛÛ 
<
ÛÛ 
maxReadIndex
ÛÛ +
&&
ÛÛ, .
	readIndex
ÛÛ/ 8
<
ÛÛ9 :!
tagDefinitionLength
ÛÛ; N
;
ÛÛN O
	readIndex
ÛÛP Y
++
ÛÛY [
)
ÛÛ[ \
{
ÙÙ 
uint
ıı 
c
ıı 
=
ıı 
tagDefinition
ıı &
[
ıı& '
	readIndex
ıı' 0
]
ıı0 1
;
ıı1 2
if
˜˜ 
(
˜˜ 
c
˜˜ 
==
˜˜ 
$char
˜˜ 
||
˜˜ 
c
˜˜  !
==
˜˜" $
$char
˜˜% (
||
˜˜) +
c
˜˜, -
==
˜˜. 0
$char
˜˜1 4
)
˜˜4 5
return
¯¯ 
hashCode
¯¯ #
;
¯¯# $
hashCode
˙˙ 
=
˙˙ 
(
˙˙ 
(
˙˙ 
hashCode
˙˙ %
<<
˙˙& (
$num
˙˙) *
)
˙˙* +
+
˙˙, -
hashCode
˙˙. 6
)
˙˙6 7
^
˙˙8 9
(
˙˙: ;
int
˙˙; >
)
˙˙> ?
TMP_TextUtilities
˙˙? P
.
˙˙P Q
ToUpperASCIIFast
˙˙Q a
(
˙˙a b
(
˙˙b c
uint
˙˙c g
)
˙˙g h
c
˙˙h i
)
˙˙i j
;
˙˙j k
}
˚˚ 
return
˝˝ 
hashCode
˝˝ 
;
˝˝ 
}
˛˛ 	
int
àà 
GetStyleHashCode
àà 
(
àà 
ref
àà  
int
àà! $
[
àà$ %
]
àà% &
text
àà' +
,
àà+ ,
int
àà- 0
index
àà1 6
,
àà6 7
out
àà8 ;
int
àà< ?

closeIndex
àà@ J
)
ààJ K
{
ââ 	
int
ää 
hashCode
ää 
=
ää 
$num
ää 
;
ää 

closeIndex
ãã 
=
ãã 
$num
ãã 
;
ãã 
for
çç 
(
çç 
int
çç 
i
çç 
=
çç 
index
çç 
;
çç 
i
çç  !
<
çç" #
text
çç$ (
.
çç( )
Length
çç) /
;
çç/ 0
i
çç1 2
++
çç2 4
)
çç4 5
{
éé 
if
êê 
(
êê 
text
êê 
[
êê 
i
êê 
]
êê 
==
êê 
$num
êê !
)
êê! "
continue
êê# +
;
êê+ ,
if
ìì 
(
ìì 
text
ìì 
[
ìì 
i
ìì 
]
ìì 
==
ìì 
$num
ìì !
)
ìì! "
{
ìì# $

closeIndex
ìì% /
=
ìì0 1
i
ìì2 3
;
ìì3 4
break
ìì5 :
;
ìì: ;
}
ìì< =
hashCode
ïï 
=
ïï 
(
ïï 
hashCode
ïï $
<<
ïï% '
$num
ïï( )
)
ïï) *
+
ïï+ ,
hashCode
ïï- 5
^
ïï6 7&
TMP_TextParsingUtilities
ïï8 P
.
ïïP Q
ToUpperASCIIFast
ïïQ a
(
ïïa b
(
ïïb c
char
ïïc g
)
ïïg h
text
ïïh l
[
ïïl m
i
ïïm n
]
ïïn o
)
ïïo p
;
ïïp q
}
ññ 
return
òò 
hashCode
òò 
;
òò 
}
ôô 	
int
££ 
GetStyleHashCode
££ 
(
££ 
ref
££  "
TextBackingContainer
££! 5
text
££6 :
,
££: ;
int
££< ?
index
££@ E
,
££E F
out
££G J
int
££K N

closeIndex
££O Y
)
££Y Z
{
§§ 	
int
•• 
hashCode
•• 
=
•• 
$num
•• 
;
•• 

closeIndex
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶ 
for
®® 
(
®® 
int
®® 
i
®® 
=
®® 
index
®® 
;
®® 
i
®®  !
<
®®" #
text
®®$ (
.
®®( )
Capacity
®®) 1
;
®®1 2
i
®®3 4
++
®®4 6
)
®®6 7
{
©© 
if
´´ 
(
´´ 
text
´´ 
[
´´ 
i
´´ 
]
´´ 
==
´´ 
$num
´´ !
)
´´! "
continue
´´# +
;
´´+ ,
if
ÆÆ 
(
ÆÆ 
text
ÆÆ 
[
ÆÆ 
i
ÆÆ 
]
ÆÆ 
==
ÆÆ 
$num
ÆÆ !
)
ÆÆ! "
{
ÆÆ# $

closeIndex
ÆÆ% /
=
ÆÆ0 1
i
ÆÆ2 3
;
ÆÆ3 4
break
ÆÆ5 :
;
ÆÆ: ;
}
ÆÆ< =
hashCode
∞∞ 
=
∞∞ 
(
∞∞ 
hashCode
∞∞ $
<<
∞∞% '
$num
∞∞( )
)
∞∞) *
+
∞∞+ ,
hashCode
∞∞- 5
^
∞∞6 7&
TMP_TextParsingUtilities
∞∞8 P
.
∞∞P Q
ToUpperASCIIFast
∞∞Q a
(
∞∞a b
(
∞∞b c
char
∞∞c g
)
∞∞g h
text
∞∞h l
[
∞∞l m
i
∞∞m n
]
∞∞n o
)
∞∞o p
;
∞∞p q
}
±± 
return
≥≥ 
hashCode
≥≥ 
;
≥≥ 
}
¥¥ 	
void
ππ !
ResizeInternalArray
ππ  
<
ππ! "
T
ππ" #
>
ππ# $
(
ππ$ %
ref
ππ% (
T
ππ) *
[
ππ* +
]
ππ+ ,
array
ππ- 2
)
ππ2 3
{
∫∫ 	
int
ªª 
size
ªª 
=
ªª 
Mathf
ªª 
.
ªª 
NextPowerOfTwo
ªª +
(
ªª+ ,
array
ªª, 1
.
ªª1 2
Length
ªª2 8
+
ªª9 :
$num
ªª; <
)
ªª< =
;
ªª= >
System
ΩΩ 
.
ΩΩ 
Array
ΩΩ 
.
ΩΩ 
Resize
ΩΩ 
(
ΩΩ  
ref
ΩΩ  #
array
ΩΩ$ )
,
ΩΩ) *
size
ΩΩ+ /
)
ΩΩ/ 0
;
ΩΩ0 1
}
ææ 	
void
¿¿ !
ResizeInternalArray
¿¿  
<
¿¿  !
T
¿¿! "
>
¿¿" #
(
¿¿# $
ref
¿¿$ '
T
¿¿( )
[
¿¿) *
]
¿¿* +
array
¿¿, 1
,
¿¿1 2
int
¿¿3 6
size
¿¿7 ;
)
¿¿; <
{
¡¡ 	
size
¬¬ 
=
¬¬ 
Mathf
¬¬ 
.
¬¬ 
NextPowerOfTwo
¬¬ '
(
¬¬' (
size
¬¬( ,
+
¬¬- .
$num
¬¬/ 0
)
¬¬0 1
;
¬¬1 2
System
ƒƒ 
.
ƒƒ 
Array
ƒƒ 
.
ƒƒ 
Resize
ƒƒ 
(
ƒƒ  
ref
ƒƒ  #
array
ƒƒ$ )
,
ƒƒ) *
size
ƒƒ+ /
)
ƒƒ/ 0
;
ƒƒ0 1
}
≈≈ 	
private
»» 
readonly
»» 
decimal
»»  
[
»»  !
]
»»! "
k_Power
»»# *
=
»»+ ,
{
»»- .
$num
»»/ 4
,
»»4 5
$num
»»6 ;
,
»»; <
$num
»»= B
,
»»B C
$num
»»D I
,
»»I J
$num
»»K P
,
»»P Q
$num
»»R W
,
»»W X
$num
»»Y ^
,
»»^ _
$num
»»` e
,
»»e f
$num
»»g l
,
»»l m
$num
»»n t
}
»»u v
;
»»v w
void
ÀÀ 0
"AddFloatToInternalTextBackingArray
ÀÀ /
(
ÀÀ/ 0
float
ÀÀ0 5
value
ÀÀ6 ;
,
ÀÀ; <
int
ÀÀ= @
padding
ÀÀA H
,
ÀÀH I
int
ÀÀJ M
	precision
ÀÀN W
,
ÀÀW X
ref
ÀÀY \
int
ÀÀ] `

writeIndex
ÀÀa k
)
ÀÀk l
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
value
ÕÕ 
<
ÕÕ 
$num
ÕÕ 
)
ÕÕ 
{
ŒŒ  
m_TextBackingArray
œœ "
[
œœ" #

writeIndex
œœ# -
]
œœ- .
=
œœ/ 0
$char
œœ1 4
;
œœ4 5

writeIndex
–– 
+=
–– 
$num
–– 
;
––  
value
—— 
=
—— 
-
—— 
value
—— 
;
—— 
}
““ 
decimal
’’ 
valueD
’’ 
=
’’ 
(
’’ 
decimal
’’ %
)
’’% &
value
’’& +
;
’’+ ,
if
ÿÿ 
(
ÿÿ 
padding
ÿÿ 
==
ÿÿ 
$num
ÿÿ 
&&
ÿÿ 
	precision
ÿÿ  )
==
ÿÿ* ,
$num
ÿÿ- .
)
ÿÿ. /
	precision
ŸŸ 
=
ŸŸ 
$num
ŸŸ 
;
ŸŸ 
else
⁄⁄ 
valueD
€€ 
+=
€€ 
k_Power
€€ !
[
€€! "
Mathf
€€" '
.
€€' (
Min
€€( +
(
€€+ ,
$num
€€, -
,
€€- .
	precision
€€/ 8
)
€€8 9
]
€€9 :
;
€€: ;
long
›› 
integer
›› 
=
›› 
(
›› 
long
››  
)
››  !
valueD
››! '
;
››' (2
$AddIntegerToInternalTextBackingArray
ﬂﬂ 0
(
ﬂﬂ0 1
integer
ﬂﬂ1 8
,
ﬂﬂ8 9
padding
ﬂﬂ: A
,
ﬂﬂA B
ref
ﬂﬂC F

writeIndex
ﬂﬂG Q
)
ﬂﬂQ R
;
ﬂﬂR S
if
·· 
(
·· 
	precision
·· 
>
·· 
$num
·· 
)
·· 
{
‚‚ 
valueD
„„ 
-=
„„ 
integer
„„ !
;
„„! "
if
ÊÊ 
(
ÊÊ 
valueD
ÊÊ 
!=
ÊÊ 
$num
ÊÊ 
)
ÊÊ  
{
ÁÁ  
m_TextBackingArray
ÈÈ &
[
ÈÈ& '

writeIndex
ÈÈ' 1
++
ÈÈ1 3
]
ÈÈ3 4
=
ÈÈ5 6
$char
ÈÈ7 :
;
ÈÈ: ;
for
ÎÎ 
(
ÎÎ 
int
ÎÎ 
p
ÎÎ 
=
ÎÎ  
$num
ÎÎ! "
;
ÎÎ" #
p
ÎÎ$ %
<
ÎÎ& '
	precision
ÎÎ( 1
;
ÎÎ1 2
p
ÎÎ3 4
++
ÎÎ4 6
)
ÎÎ6 7
{
ÏÏ 
valueD
ÌÌ 
*=
ÌÌ !
$num
ÌÌ" $
;
ÌÌ$ %
long
ÓÓ 
d
ÓÓ 
=
ÓÓ  
(
ÓÓ! "
long
ÓÓ" &
)
ÓÓ& '
valueD
ÓÓ' -
;
ÓÓ- . 
m_TextBackingArray
 *
[
* +

writeIndex
+ 5
++
5 7
]
7 8
=
9 :
(
; <
char
< @
)
@ A
(
A B
d
B C
+
D E
$num
F H
)
H I
;
I J
valueD
ÒÒ 
-=
ÒÒ !
d
ÒÒ" #
;
ÒÒ# $
if
ÛÛ 
(
ÛÛ 
valueD
ÛÛ "
==
ÛÛ# %
$num
ÛÛ& '
)
ÛÛ' (
p
ÙÙ 
=
ÙÙ 
	precision
ÙÙ  )
;
ÙÙ) *
}
ıı 
}
ˆˆ 
}
˜˜ 
}
¯¯ 	
void
ÅÅ 2
$AddIntegerToInternalTextBackingArray
ÅÅ 1
(
ÅÅ1 2
double
ÅÅ2 8
number
ÅÅ9 ?
,
ÅÅ? @
int
ÅÅA D
padding
ÅÅE L
,
ÅÅL M
ref
ÅÅN Q
int
ÅÅR U

writeIndex
ÅÅV `
)
ÅÅ` a
{
ÇÇ 	
int
ÉÉ 
integralCount
ÉÉ 
=
ÉÉ 
$num
ÉÉ  !
;
ÉÉ! "
int
ÑÑ 
i
ÑÑ 
=
ÑÑ 

writeIndex
ÑÑ 
;
ÑÑ 
do
ÜÜ 
{
áá  
m_TextBackingArray
àà "
[
àà" #
i
àà# $
++
àà$ &
]
àà& '
=
àà( )
(
àà* +
char
àà+ /
)
àà/ 0
(
àà0 1
number
àà1 7
%
àà8 9
$num
àà: <
+
àà= >
$num
àà? A
)
ààA B
;
ààB C
number
ââ 
/=
ââ 
$num
ââ 
;
ââ 
integralCount
ää 
+=
ää  
$num
ää! "
;
ää" #
}
ãã 
while
ãã 
(
ãã 
number
ãã 
>
ãã 
$num
ãã 0
||
ãã1 3
integralCount
ãã4 A
<
ããB C
padding
ããD K
)
ããK L
;
ããL M
int
çç 
	lastIndex
çç 
=
çç 
i
çç 
;
çç 
while
êê 
(
êê 

writeIndex
êê 
+
êê 
$num
êê  !
<
êê" #
i
êê$ %
)
êê% &
{
ëë 
i
íí 
-=
íí 
$num
íí 
;
íí 
uint
ìì 
t
ìì 
=
ìì  
m_TextBackingArray
ìì +
[
ìì+ ,

writeIndex
ìì, 6
]
ìì6 7
;
ìì7 8 
m_TextBackingArray
îî "
[
îî" #

writeIndex
îî# -
]
îî- .
=
îî/ 0 
m_TextBackingArray
îî1 C
[
îîC D
i
îîD E
]
îîE F
;
îîF G 
m_TextBackingArray
ïï "
[
ïï" #
i
ïï# $
]
ïï$ %
=
ïï& '
t
ïï( )
;
ïï) *

writeIndex
ññ 
+=
ññ 
$num
ññ 
;
ññ  
}
óó 

writeIndex
òò 
=
òò 
	lastIndex
òò "
;
òò" #
}
ôô 	
string
úú .
 InternalTextBackingArrayToString
úú /
(
úú/ 0
)
úú0 1
{
ùù 	
char
ûû 
[
ûû 
]
ûû 
array
ûû 
=
ûû 
new
ûû 
char
ûû #
[
ûû# $ 
m_TextBackingArray
ûû$ 6
.
ûû6 7
Count
ûû7 <
]
ûû< =
;
ûû= >
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
†† 
<
††  
m_TextBackingArray
††  2
.
††2 3
Capacity
††3 ;
;
††; <
i
††= >
++
††> @
)
††@ A
{
°° 
char
¢¢ 
c
¢¢ 
=
¢¢ 
(
¢¢ 
char
¢¢ 
)
¢¢  
m_TextBackingArray
¢¢ 1
[
¢¢1 2
i
¢¢2 3
]
¢¢3 4
;
¢¢4 5
if
§§ 
(
§§ 
c
§§ 
==
§§ 
$num
§§ 
)
§§ 
break
•• 
;
•• 
array
ßß 
[
ßß 
i
ßß 
]
ßß 
=
ßß 
c
ßß 
;
ßß 
}
®® (
m_IsTextBackingStringDirty
™™ &
=
™™' (
false
™™) .
;
™™. /
return
¨¨ 
new
¨¨ 
string
¨¨ 
(
¨¨ 
array
¨¨ #
)
¨¨# $
;
¨¨$ %
}
≠≠ 	
internal
µµ 
virtual
µµ 
int
µµ 
SetArraySizes
µµ *
(
µµ* +
UnicodeChar
µµ+ 6
[
µµ6 7
]
µµ7 8
unicodeChars
µµ9 E
)
µµE F
{
µµG H
return
µµI O
$num
µµP Q
;
µµQ R
}
µµS T
public
ºº 
Vector2
ºº  
GetPreferredValues
ºº )
(
ºº) *
)
ºº* +
{
ΩΩ 	%
m_isPreferredWidthDirty
øø #
=
øø$ %
true
øø& *
;
øø* +
float
¿¿ 
preferredWidth
¿¿  
=
¿¿! "
GetPreferredWidth
¿¿# 4
(
¿¿4 5
)
¿¿5 6
;
¿¿6 7&
m_isPreferredHeightDirty
√√ $
=
√√% &
true
√√' +
;
√√+ ,
float
ƒƒ 
preferredHeight
ƒƒ !
=
ƒƒ" # 
GetPreferredHeight
ƒƒ$ 6
(
ƒƒ6 7
)
ƒƒ7 8
;
ƒƒ8 9%
m_isPreferredWidthDirty
«« #
=
««$ %
true
««& *
;
««* +&
m_isPreferredHeightDirty
»» $
=
»»% &
true
»»' +
;
»»+ ,
return
   
new
   
Vector2
   
(
   
preferredWidth
   -
,
  - .
preferredHeight
  / >
)
  > ?
;
  ? @
}
ÀÀ 	
public
““ 
Vector2
““  
GetPreferredValues
““ )
(
““) *
float
““* /
width
““0 5
,
““5 6
float
““7 <
height
““= C
)
““C D
{
”” 	,
m_isCalculatingPreferredValues
’’ *
=
’’+ ,
true
’’- 1
;
’’1 2
ParseInputText
÷÷ 
(
÷÷ 
)
÷÷ 
;
÷÷ 
Vector2
ÿÿ 
margin
ÿÿ 
=
ÿÿ 
new
ÿÿ  
Vector2
ÿÿ! (
(
ÿÿ( )
width
ÿÿ) .
,
ÿÿ. /
height
ÿÿ0 6
)
ÿÿ6 7
;
ÿÿ7 8
float
€€ 
preferredWidth
€€  
=
€€! "
GetPreferredWidth
€€# 4
(
€€4 5
margin
€€5 ;
)
€€; <
;
€€< =
float
ﬁﬁ 
preferredHeight
ﬁﬁ !
=
ﬁﬁ" # 
GetPreferredHeight
ﬁﬁ$ 6
(
ﬁﬁ6 7
margin
ﬁﬁ7 =
)
ﬁﬁ= >
;
ﬁﬁ> ?
return
‡‡ 
new
‡‡ 
Vector2
‡‡ 
(
‡‡ 
preferredWidth
‡‡ -
,
‡‡- .
preferredHeight
‡‡/ >
)
‡‡> ?
;
‡‡? @
}
·· 	
public
ÈÈ 
Vector2
ÈÈ  
GetPreferredValues
ÈÈ )
(
ÈÈ) *
string
ÈÈ* 0
text
ÈÈ1 5
)
ÈÈ5 6
{
ÍÍ 	,
m_isCalculatingPreferredValues
ÎÎ *
=
ÎÎ+ ,
true
ÎÎ- 1
;
ÎÎ1 2
SetTextInternal
ÌÌ 
(
ÌÌ 
text
ÌÌ  
)
ÌÌ  !
;
ÌÌ! "
SetArraySizes
ÓÓ 
(
ÓÓ #
m_TextProcessingArray
ÓÓ /
)
ÓÓ/ 0
;
ÓÓ0 1
Vector2
 
margin
 
=
 $
k_LargePositiveVector2
 3
;
3 4
float
ÛÛ 
preferredWidth
ÛÛ  
=
ÛÛ! "
GetPreferredWidth
ÛÛ# 4
(
ÛÛ4 5
margin
ÛÛ5 ;
)
ÛÛ; <
;
ÛÛ< =
float
ˆˆ 
preferredHeight
ˆˆ !
=
ˆˆ" # 
GetPreferredHeight
ˆˆ$ 6
(
ˆˆ6 7
margin
ˆˆ7 =
)
ˆˆ= >
;
ˆˆ> ?
return
¯¯ 
new
¯¯ 
Vector2
¯¯ 
(
¯¯ 
preferredWidth
¯¯ -
,
¯¯- .
preferredHeight
¯¯/ >
)
¯¯> ?
;
¯¯? @
}
˘˘ 	
public
ÅÅ 
Vector2
ÅÅ  
GetPreferredValues
ÅÅ )
(
ÅÅ) *
string
ÅÅ* 0
text
ÅÅ1 5
,
ÅÅ5 6
float
ÅÅ7 <
width
ÅÅ= B
,
ÅÅB C
float
ÅÅD I
height
ÅÅJ P
)
ÅÅP Q
{
ÇÇ 	,
m_isCalculatingPreferredValues
ÉÉ *
=
ÉÉ+ ,
true
ÉÉ- 1
;
ÉÉ1 2
SetTextInternal
ÖÖ 
(
ÖÖ 
text
ÖÖ  
)
ÖÖ  !
;
ÖÖ! "
SetArraySizes
ÜÜ 
(
ÜÜ #
m_TextProcessingArray
ÜÜ /
)
ÜÜ/ 0
;
ÜÜ0 1
Vector2
àà 
margin
àà 
=
àà 
new
àà  
Vector2
àà! (
(
àà( )
width
àà) .
,
àà. /
height
àà0 6
)
àà6 7
;
àà7 8
float
ãã 
preferredWidth
ãã  
=
ãã! "
GetPreferredWidth
ãã# 4
(
ãã4 5
margin
ãã5 ;
)
ãã; <
;
ãã< =
float
éé 
preferredHeight
éé !
=
éé" # 
GetPreferredHeight
éé$ 6
(
éé6 7
margin
éé7 =
)
éé= >
;
éé> ?
return
êê 
new
êê 
Vector2
êê 
(
êê 
preferredWidth
êê -
,
êê- .
preferredHeight
êê/ >
)
êê> ?
;
êê? @
}
ëë 	
	protected
òò 
float
òò 
GetPreferredWidth
òò )
(
òò) *
)
òò* +
{
ôô 	
if
öö 
(
öö 
TMP_Settings
öö 
.
öö 
instance
öö %
==
öö& (
null
öö) -
)
öö- .
return
öö/ 5
$num
öö6 7
;
öö7 8
if
ùù 
(
ùù 
!
ùù %
m_isPreferredWidthDirty
ùù (
)
ùù( )
return
ûû 
m_preferredWidth
ûû '
;
ûû' (
float
†† 
fontSize
†† 
=
††  
m_enableAutoSizing
†† /
?
††0 1
m_fontSizeMax
††2 ?
:
††@ A

m_fontSize
††B L
;
††L M
m_minFontSize
££ 
=
££ 
m_fontSizeMin
££ )
;
££) *
m_maxFontSize
§§ 
=
§§ 
m_fontSizeMax
§§ )
;
§§) *!
m_charWidthAdjDelta
•• 
=
••  !
$num
••" #
;
••# $
Vector2
®® 
margin
®® 
=
®® $
k_LargePositiveVector2
®® 3
;
®®3 4,
m_isCalculatingPreferredValues
™™ *
=
™™+ ,
true
™™- 1
;
™™1 2
ParseInputText
´´ 
(
´´ 
)
´´ 
;
´´ &
m_AutoSizeIterationCount
≠≠ $
=
≠≠% &
$num
≠≠' (
;
≠≠( )
float
ÆÆ 
preferredWidth
ÆÆ  
=
ÆÆ! "&
CalculatePreferredValues
ÆÆ# ;
(
ÆÆ; <
ref
ÆÆ< ?
fontSize
ÆÆ@ H
,
ÆÆH I
margin
ÆÆJ P
,
ÆÆP Q
false
ÆÆR W
,
ÆÆW X
false
ÆÆY ^
)
ÆÆ^ _
.
ÆÆ_ `
x
ÆÆ` a
;
ÆÆa b%
m_isPreferredWidthDirty
∞∞ #
=
∞∞$ %
false
∞∞& +
;
∞∞+ ,
return
¥¥ 
preferredWidth
¥¥ !
;
¥¥! "
}
µµ 	
float
ΩΩ 
GetPreferredWidth
ΩΩ 
(
ΩΩ  
Vector2
ΩΩ  '
margin
ΩΩ( .
)
ΩΩ. /
{
ææ 	
float
øø 
fontSize
øø 
=
øø  
m_enableAutoSizing
øø /
?
øø0 1
m_fontSizeMax
øø2 ?
:
øø@ A

m_fontSize
øøB L
;
øøL M
m_minFontSize
¬¬ 
=
¬¬ 
m_fontSizeMin
¬¬ )
;
¬¬) *
m_maxFontSize
√√ 
=
√√ 
m_fontSizeMax
√√ )
;
√√) *!
m_charWidthAdjDelta
ƒƒ 
=
ƒƒ  !
$num
ƒƒ" #
;
ƒƒ# $&
m_AutoSizeIterationCount
∆∆ $
=
∆∆% &
$num
∆∆' (
;
∆∆( )
float
«« 
preferredWidth
««  
=
««! "&
CalculatePreferredValues
««# ;
(
««; <
ref
««< ?
fontSize
««@ H
,
««H I
margin
««J P
,
««P Q
false
««R W
,
««W X
false
««Y ^
)
««^ _
.
««_ `
x
««` a
;
««a b
return
ÀÀ 
preferredWidth
ÀÀ !
;
ÀÀ! "
}
ÃÃ 	
	protected
”” 
float
””  
GetPreferredHeight
”” *
(
””* +
)
””+ ,
{
‘‘ 	
if
’’ 
(
’’ 
TMP_Settings
’’ 
.
’’ 
instance
’’ %
==
’’& (
null
’’) -
)
’’- .
return
’’/ 5
$num
’’6 7
;
’’7 8
if
ÿÿ 
(
ÿÿ 
!
ÿÿ &
m_isPreferredHeightDirty
ÿÿ )
)
ÿÿ) *
return
ŸŸ 
m_preferredHeight
ŸŸ (
;
ŸŸ( )
float
€€ 
fontSize
€€ 
=
€€  
m_enableAutoSizing
€€ /
?
€€0 1
m_fontSizeMax
€€2 ?
:
€€@ A

m_fontSize
€€B L
;
€€L M
m_minFontSize
ﬁﬁ 
=
ﬁﬁ 
m_fontSizeMin
ﬁﬁ )
;
ﬁﬁ) *
m_maxFontSize
ﬂﬂ 
=
ﬂﬂ 
m_fontSizeMax
ﬂﬂ )
;
ﬂﬂ) *!
m_charWidthAdjDelta
‡‡ 
=
‡‡  !
$num
‡‡" #
;
‡‡# $
Vector2
‚‚ 
margin
‚‚ 
=
‚‚ 
new
‚‚  
Vector2
‚‚! (
(
‚‚( )
m_marginWidth
‚‚) 6
!=
‚‚7 9
$num
‚‚: ;
?
‚‚< =
m_marginWidth
‚‚> K
:
‚‚L M"
k_LargePositiveFloat
‚‚N b
,
‚‚b c"
k_LargePositiveFloat
‚‚d x
)
‚‚x y
;
‚‚y z,
m_isCalculatingPreferredValues
‰‰ *
=
‰‰+ ,
true
‰‰- 1
;
‰‰1 2
ParseInputText
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ &
m_IsAutoSizePointSizeSet
ËË $
=
ËË% &
false
ËË' ,
;
ËË, -&
m_AutoSizeIterationCount
ÈÈ $
=
ÈÈ% &
$num
ÈÈ' (
;
ÈÈ( )
float
ÌÌ 
preferredHeight
ÌÌ !
=
ÌÌ" #
$num
ÌÌ$ %
;
ÌÌ% &
while
ÔÔ 
(
ÔÔ &
m_IsAutoSizePointSizeSet
ÔÔ +
==
ÔÔ, .
false
ÔÔ/ 4
)
ÔÔ4 5
{
 
preferredHeight
ÒÒ 
=
ÒÒ  !&
CalculatePreferredValues
ÒÒ" :
(
ÒÒ: ;
ref
ÒÒ; >
fontSize
ÒÒ? G
,
ÒÒG H
margin
ÒÒI O
,
ÒÒO P 
m_enableAutoSizing
ÒÒQ c
,
ÒÒc d"
m_enableWordWrapping
ÒÒe y
)
ÒÒy z
.
ÒÒz {
y
ÒÒ{ |
;
ÒÒ| }&
m_AutoSizeIterationCount
ÚÚ (
+=
ÚÚ) +
$num
ÚÚ, -
;
ÚÚ- .
}
ÛÛ &
m_isPreferredHeightDirty
ıı $
=
ıı% &
false
ıı' ,
;
ıı, -
return
˘˘ 
preferredHeight
˘˘ "
;
˘˘" #
}
˙˙ 	
float
ÇÇ  
GetPreferredHeight
ÇÇ  
(
ÇÇ  !
Vector2
ÇÇ! (
margin
ÇÇ) /
)
ÇÇ/ 0
{
ÉÉ 	
float
ÑÑ 
fontSize
ÑÑ 
=
ÑÑ  
m_enableAutoSizing
ÑÑ /
?
ÑÑ0 1
m_fontSizeMax
ÑÑ2 ?
:
ÑÑ@ A

m_fontSize
ÑÑB L
;
ÑÑL M
m_minFontSize
áá 
=
áá 
m_fontSizeMin
áá )
;
áá) *
m_maxFontSize
àà 
=
àà 
m_fontSizeMax
àà )
;
àà) *!
m_charWidthAdjDelta
ââ 
=
ââ  !
$num
ââ" #
;
ââ# $&
m_IsAutoSizePointSizeSet
åå $
=
åå% &
false
åå' ,
;
åå, -&
m_AutoSizeIterationCount
çç $
=
çç% &
$num
çç' (
;
çç( )
float
ëë 
preferredHeight
ëë !
=
ëë" #
$num
ëë$ %
;
ëë% &
while
ìì 
(
ìì &
m_IsAutoSizePointSizeSet
ìì +
==
ìì, .
false
ìì/ 4
)
ìì4 5
{
îî 
preferredHeight
ïï 
=
ïï  !&
CalculatePreferredValues
ïï" :
(
ïï: ;
ref
ïï; >
fontSize
ïï? G
,
ïïG H
margin
ïïI O
,
ïïO P 
m_enableAutoSizing
ïïQ c
,
ïïc d"
m_enableWordWrapping
ïïe y
)
ïïy z
.
ïïz {
y
ïï{ |
;
ïï| }&
m_AutoSizeIterationCount
ññ (
+=
ññ) +
$num
ññ, -
;
ññ- .
}
óó 
return
õõ 
preferredHeight
õõ "
;
õõ" #
}
úú 	
public
££ 
Vector2
££ 
GetRenderedValues
££ (
(
££( )
)
££) *
{
§§ 	
return
•• 
GetTextBounds
••  
(
••  !
)
••! "
.
••" #
size
••# '
;
••' (
}
¶¶ 	
public
≠≠ 
Vector2
≠≠ 
GetRenderedValues
≠≠ (
(
≠≠( )
bool
≠≠) -#
onlyVisibleCharacters
≠≠. C
)
≠≠C D
{
ÆÆ 	
return
ØØ 
GetTextBounds
ØØ  
(
ØØ  !#
onlyVisibleCharacters
ØØ! 6
)
ØØ6 7
.
ØØ7 8
size
ØØ8 <
;
ØØ< =
}
∞∞ 	
float
∑∑ 
GetRenderedWidth
∑∑ 
(
∑∑ 
)
∑∑  
{
∏∏ 	
return
ππ 
GetRenderedValues
ππ $
(
ππ$ %
)
ππ% &
.
ππ& '
x
ππ' (
;
ππ( )
}
∫∫ 	
	protected
¿¿ 
float
¿¿ 
GetRenderedWidth
¿¿ (
(
¿¿( )
bool
¿¿) -#
onlyVisibleCharacters
¿¿. C
)
¿¿C D
{
¡¡ 	
return
¬¬ 
GetRenderedValues
¬¬ $
(
¬¬$ %#
onlyVisibleCharacters
¬¬% :
)
¬¬: ;
.
¬¬; <
x
¬¬< =
;
¬¬= >
}
√√ 	
float
…… 
GetRenderedHeight
…… 
(
……  
)
……  !
{
   	
return
ÀÀ 
GetRenderedValues
ÀÀ $
(
ÀÀ$ %
)
ÀÀ% &
.
ÀÀ& '
y
ÀÀ' (
;
ÀÀ( )
}
ÃÃ 	
	protected
““ 
float
““ 
GetRenderedHeight
““ )
(
““) *
bool
““* .#
onlyVisibleCharacters
““/ D
)
““D E
{
”” 	
return
‘‘ 
GetRenderedValues
‘‘ $
(
‘‘$ %#
onlyVisibleCharacters
‘‘% :
)
‘‘: ;
.
‘‘; <
y
‘‘< =
;
‘‘= >
}
’’ 	
	protected
‹‹ 
virtual
‹‹ 
Vector2
‹‹ !&
CalculatePreferredValues
‹‹" :
(
‹‹: ;
ref
‹‹; >
float
‹‹? D
fontSize
‹‹E M
,
‹‹M N
Vector2
‹‹O V

marginSize
‹‹W a
,
‹‹a b
bool
‹‹c g%
isTextAutoSizingEnabled
‹‹h 
,‹‹ Ä
bool‹‹Å Ö%
isWordWrappingEnabled‹‹Ü õ
)‹‹õ ú
{
›› 	
if
·· 
(
·· 
m_fontAsset
·· 
==
·· 
null
·· #
||
··$ &
m_fontAsset
··' 2
.
··2 3"
characterLookupTable
··3 G
==
··H J
null
··K O
)
··O P
{
‚‚ 
Debug
„„ 
.
„„ 

LogWarning
„„  
(
„„  !
$str
„„! f
+
„„g h
this
„„i m
.
„„m n
GetInstanceID
„„n {
(
„„{ |
)
„„| }
)
„„} ~
;
„„~ &
m_IsAutoSizePointSizeSet
ÂÂ (
=
ÂÂ) *
true
ÂÂ+ /
;
ÂÂ/ 0
return
ÊÊ 
Vector2
ÊÊ 
.
ÊÊ 
zero
ÊÊ #
;
ÊÊ# $
}
ÁÁ 
if
ÍÍ 
(
ÍÍ #
m_TextProcessingArray
ÍÍ %
==
ÍÍ& (
null
ÍÍ) -
||
ÍÍ. 0#
m_TextProcessingArray
ÍÍ1 F
.
ÍÍF G
Length
ÍÍG M
==
ÍÍN P
$num
ÍÍQ R
||
ÍÍS U#
m_TextProcessingArray
ÍÍV k
[
ÍÍk l
$num
ÍÍl m
]
ÍÍm n
.
ÍÍn o
unicode
ÍÍo v
==
ÍÍw y
(
ÍÍz {
char
ÍÍ{ 
)ÍÍ Ä
$numÍÍÄ Å
)ÍÍÅ Ç
{
ÎÎ &
m_IsAutoSizePointSizeSet
ÏÏ (
=
ÏÏ) *
true
ÏÏ+ /
;
ÏÏ/ 0
return
ÌÌ 
Vector2
ÌÌ 
.
ÌÌ 
zero
ÌÌ #
;
ÌÌ# $
}
ÓÓ  
m_currentFontAsset
 
=
  
m_fontAsset
! ,
;
, -
m_currentMaterial
ÒÒ 
=
ÒÒ 
m_sharedMaterial
ÒÒ  0
;
ÒÒ0 1$
m_currentMaterialIndex
ÚÚ "
=
ÚÚ# $
$num
ÚÚ% &
;
ÚÚ& '&
m_materialReferenceStack
ÛÛ $
.
ÛÛ$ %

SetDefault
ÛÛ% /
(
ÛÛ/ 0
new
ÛÛ0 3
MaterialReference
ÛÛ4 E
(
ÛÛE F
$num
ÛÛF G
,
ÛÛG H 
m_currentFontAsset
ÛÛI [
,
ÛÛ[ \
null
ÛÛ] a
,
ÛÛa b
m_currentMaterial
ÛÛc t
,
ÛÛt u
	m_padding
ÛÛv 
)ÛÛ Ä
)ÛÛÄ Å
;ÛÛÅ Ç
int
ˆˆ !
totalCharacterCount
ˆˆ #
=
ˆˆ$ %#
m_totalCharacterCount
ˆˆ& ;
;
ˆˆ; <
if
¯¯ 
(
¯¯ %
m_internalCharacterInfo
¯¯ '
==
¯¯( *
null
¯¯+ /
||
¯¯0 2!
totalCharacterCount
¯¯3 F
>
¯¯G H%
m_internalCharacterInfo
¯¯I `
.
¯¯` a
Length
¯¯a g
)
¯¯g h%
m_internalCharacterInfo
˘˘ '
=
˘˘( )
new
˘˘* -
TMP_CharacterInfo
˘˘. ?
[
˘˘? @!
totalCharacterCount
˘˘@ S
>
˘˘T U
$num
˘˘V Z
?
˘˘[ \!
totalCharacterCount
˘˘] p
+
˘˘q r
$num
˘˘s v
:
˘˘w x
Mathf
˘˘y ~
.
˘˘~ 
NextPowerOfTwo˘˘ ç
(˘˘ç é#
totalCharacterCount˘˘é °
)˘˘° ¢
]˘˘¢ £
;˘˘£ §
float
˝˝ 
	baseScale
˝˝ 
=
˝˝ 
(
˝˝ 
fontSize
˝˝ '
/
˝˝( )
m_fontAsset
˝˝* 5
.
˝˝5 6
faceInfo
˝˝6 >
.
˝˝> ?
	pointSize
˝˝? H
*
˝˝I J
m_fontAsset
˝˝K V
.
˝˝V W
faceInfo
˝˝W _
.
˝˝_ `
scale
˝˝` e
*
˝˝f g
(
˝˝h i
m_isOrthographic
˝˝i y
?
˝˝z {
$num
˝˝| }
:
˝˝~ 
$num˝˝Ä Ñ
)˝˝Ñ Ö
)˝˝Ö Ü
;˝˝Ü á
float
˛˛ !
currentElementScale
˛˛ %
=
˛˛& '
	baseScale
˛˛( 1
;
˛˛1 2
float
ˇˇ 
currentEmScale
ˇˇ  
=
ˇˇ! "
fontSize
ˇˇ# +
*
ˇˇ, -
$num
ˇˇ. 3
*
ˇˇ4 5
(
ˇˇ6 7
m_isOrthographic
ˇˇ7 G
?
ˇˇH I
$num
ˇˇJ K
:
ˇˇL M
$num
ˇˇN R
)
ˇˇR S
;
ˇˇS T#
m_fontScaleMultiplier
ÄÄ !
=
ÄÄ" #
$num
ÄÄ$ %
;
ÄÄ% &
m_currentFontSize
ÇÇ 
=
ÇÇ 
fontSize
ÇÇ  (
;
ÇÇ( )
m_sizeStack
ÉÉ 
.
ÉÉ 

SetDefault
ÉÉ "
(
ÉÉ" #
m_currentFontSize
ÉÉ# 4
)
ÉÉ4 5
;
ÉÉ5 6
float
ÑÑ 
fontSizeDelta
ÑÑ 
=
ÑÑ  !
$num
ÑÑ" #
;
ÑÑ# $!
m_FontStyleInternal
ÜÜ 
=
ÜÜ  !
m_fontStyle
ÜÜ" -
;
ÜÜ- .!
m_lineJustification
àà 
=
àà  !#
m_HorizontalAlignment
àà" 7
;
àà7 8&
m_lineJustificationStack
ââ $
.
ââ$ %

SetDefault
ââ% /
(
ââ/ 0!
m_lineJustification
ââ0 C
)
ââC D
;
ââD E
m_baselineOffset
ãã 
=
ãã 
$num
ãã  
;
ãã  !#
m_baselineOffsetStack
åå !
.
åå! "
Clear
åå" '
(
åå' (
)
åå( )
;
åå) *
m_lineOffset
éé 
=
éé 
$num
éé 
;
éé 
m_lineHeight
èè 
=
èè 
TMP_Math
èè #
.
èè# $
FLOAT_UNSET
èè$ /
;
èè/ 0
float
êê 
lineGap
êê 
=
êê  
m_currentFontAsset
êê .
.
êê. /
faceInfo
êê/ 7
.
êê7 8

lineHeight
êê8 B
-
êêC D
(
êêE F 
m_currentFontAsset
êêF X
.
êêX Y
faceInfo
êêY a
.
êêa b

ascentLine
êêb l
-
êêm n!
m_currentFontAssetêêo Å
.êêÅ Ç
faceInfoêêÇ ä
.êêä ã
descentLineêêã ñ
)êêñ ó
;êêó ò

m_cSpacing
íí 
=
íí 
$num
íí 
;
íí 
m_monoSpacing
ìì 
=
ìì 
$num
ìì 
;
ìì 

m_xAdvance
ïï 
=
ïï 
$num
ïï 
;
ïï 
float
ññ 
maxXAdvance
ññ 
=
ññ 
$num
ññ  !
;
ññ! "
tag_LineIndent
òò 
=
òò 
$num
òò 
;
òò 

tag_Indent
ôô 
=
ôô 
$num
ôô 
;
ôô 
m_indentStack
öö 
.
öö 

SetDefault
öö $
(
öö$ %
$num
öö% &
)
öö& '
;
öö' (
tag_NoParsing
õõ 
=
õõ 
false
õõ !
;
õõ! "
m_characterCount
ûû 
=
ûû 
$num
ûû  
;
ûû  !$
m_firstCharacterOfLine
¢¢ "
=
¢¢# $
$num
¢¢% &
;
¢¢& '
m_maxLineAscender
££ 
=
££ "
k_LargeNegativeFloat
££  4
;
££4 5 
m_maxLineDescender
§§ 
=
§§  "
k_LargePositiveFloat
§§! 5
;
§§5 6
m_lineNumber
•• 
=
•• 
$num
•• 
;
•• #
m_startOfLineAscender
¶¶ !
=
¶¶" #
$num
¶¶$ %
;
¶¶% &#
m_IsDrivenLineSpacing
ßß !
=
ßß" #
false
ßß$ )
;
ßß) *
float
©© 
marginWidth
©© 
=
©© 

marginSize
©©  *
.
©©* +
x
©©+ ,
;
©©, -
float
™™ 
marginHeight
™™ 
=
™™  

marginSize
™™! +
.
™™+ ,
y
™™, -
;
™™- .
m_marginLeft
´´ 
=
´´ 
$num
´´ 
;
´´ 
m_marginRight
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨ 
float
ÆÆ 
lineMarginLeft
ÆÆ  
=
ÆÆ! "
$num
ÆÆ# $
;
ÆÆ$ %
float
ØØ 
lineMarginRight
ØØ !
=
ØØ" #
$num
ØØ$ %
;
ØØ% &
m_width
±± 
=
±± 
-
±± 
$num
±± 
;
±± 
float
≤≤ 
widthOfTextArea
≤≤ !
=
≤≤" #
marginWidth
≤≤$ /
+
≤≤0 1
$num
≤≤2 9
-
≤≤: ;
m_marginLeft
≤≤< H
-
≤≤I J
m_marginRight
≤≤K X
;
≤≤X Y
float
µµ 
renderedWidth
µµ 
=
µµ  !
$num
µµ" #
;
µµ# $
float
∂∂ 
renderedHeight
∂∂  
=
∂∂! "
$num
∂∂# $
;
∂∂$ %
float
∑∑ 
	textWidth
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑  ,
m_isCalculatingPreferredValues
∏∏ *
=
∏∏+ ,
true
∏∏- 1
;
∏∏1 2
m_maxCapHeight
ªª 
=
ªª 
$num
ªª 
;
ªª 
m_maxTextAscender
ºº 
=
ºº 
$num
ºº  !
;
ºº! " 
m_ElementDescender
ΩΩ 
=
ΩΩ  
$num
ΩΩ! "
;
ΩΩ" #
float
ææ !
maxVisibleDescender
ææ %
=
ææ& '
$num
ææ( )
;
ææ) *
bool
øø &
isMaxVisibleDescenderSet
øø )
=
øø* +
false
øø, 1
;
øø1 2
bool
¬¬ 
isFirstWordOfLine
¬¬ "
=
¬¬# $
true
¬¬% )
;
¬¬) *"
m_isNonBreakingSpace
√√  
=
√√! "
false
√√# (
;
√√( )
bool
≈≈  
isLastCharacterCJK
≈≈ #
=
≈≈$ %
false
≈≈& +
;
≈≈+ ,#
CharacterSubstitution
»» !#
characterToSubstitute
»»" 7
=
»»8 9
new
»»: =#
CharacterSubstitution
»»> S
(
»»S T
-
»»T U
$num
»»U V
,
»»V W
$num
»»X Y
)
»»Y Z
;
»»Z [
bool
…… !
isSoftHyphenIgnored
…… $
=
……% &
false
……' ,
;
……, -
WordWrapState
ÀÀ #
internalWordWrapState
ÀÀ /
=
ÀÀ0 1
new
ÀÀ2 5
WordWrapState
ÀÀ6 C
(
ÀÀC D
)
ÀÀD E
;
ÀÀE F
WordWrapState
ÃÃ 
internalLineState
ÃÃ +
=
ÃÃ, -
new
ÃÃ. 1
WordWrapState
ÃÃ2 ?
(
ÃÃ? @
)
ÃÃ@ A
;
ÃÃA B
WordWrapState
ÕÕ #
internalSoftLineBreak
ÕÕ /
=
ÕÕ0 1
new
ÕÕ2 5
WordWrapState
ÕÕ6 C
(
ÕÕC D
)
ÕÕD E
;
ÕÕE F&
m_AutoSizeIterationCount
–– $
+=
––% '
$num
––( )
;
––) *
for
”” 
(
”” 
int
”” 
i
”” 
=
”” 
$num
”” 
;
”” 
i
”” 
<
”” #
m_TextProcessingArray
””  5
.
””5 6
Length
””6 <
&&
””= ?#
m_TextProcessingArray
””@ U
[
””U V
i
””V W
]
””W X
.
””X Y
unicode
””Y `
!=
””a c
$num
””d e
;
””e f
i
””g h
++
””h j
)
””j k
{
‘‘ 
int
’’ 
charCode
’’ 
=
’’ #
m_TextProcessingArray
’’ 4
[
’’4 5
i
’’5 6
]
’’6 7
.
’’7 8
unicode
’’8 ?
;
’’? @
if
ŸŸ 
(
ŸŸ 
m_isRichText
ŸŸ  
&&
ŸŸ! #
charCode
ŸŸ$ ,
==
ŸŸ- /
$num
ŸŸ0 2
)
ŸŸ2 3
{
⁄⁄ 
m_isParsingText
€€ #
=
€€$ %
true
€€& *
;
€€* +
m_textElementType
‹‹ %
=
‹‹& '!
TMP_TextElementType
‹‹( ;
.
‹‹; <
	Character
‹‹< E
;
‹‹E F
int
›› 
endTagIndex
›› #
;
››# $
if
‡‡ 
(
‡‡ 
ValidateHtmlTag
‡‡ '
(
‡‡' (#
m_TextProcessingArray
‡‡( =
,
‡‡= >
i
‡‡? @
+
‡‡A B
$num
‡‡C D
,
‡‡D E
out
‡‡F I
endTagIndex
‡‡J U
)
‡‡U V
)
‡‡V W
{
·· 
i
‚‚ 
=
‚‚ 
endTagIndex
‚‚ '
;
‚‚' (
if
ÂÂ 
(
ÂÂ 
m_textElementType
ÂÂ -
==
ÂÂ. 0!
TMP_TextElementType
ÂÂ1 D
.
ÂÂD E
	Character
ÂÂE N
)
ÂÂN O
continue
ÊÊ $
;
ÊÊ$ %
}
ÁÁ 
}
ËË 
else
ÈÈ 
{
ÍÍ 
m_textElementType
ÎÎ %
=
ÎÎ& '

m_textInfo
ÎÎ( 2
.
ÎÎ2 3
characterInfo
ÎÎ3 @
[
ÎÎ@ A
m_characterCount
ÎÎA Q
]
ÎÎQ R
.
ÎÎR S
elementType
ÎÎS ^
;
ÎÎ^ _$
m_currentMaterialIndex
ÏÏ *
=
ÏÏ+ ,

m_textInfo
ÏÏ- 7
.
ÏÏ7 8
characterInfo
ÏÏ8 E
[
ÏÏE F
m_characterCount
ÏÏF V
]
ÏÏV W
.
ÏÏW X$
materialReferenceIndex
ÏÏX n
;
ÏÏn o 
m_currentFontAsset
ÌÌ &
=
ÌÌ' (

m_textInfo
ÌÌ) 3
.
ÌÌ3 4
characterInfo
ÌÌ4 A
[
ÌÌA B
m_characterCount
ÌÌB R
]
ÌÌR S
.
ÌÌS T
	fontAsset
ÌÌT ]
;
ÌÌ] ^
}
ÓÓ 
int
ÒÒ  
prev_MaterialIndex
ÒÒ &
=
ÒÒ' ($
m_currentMaterialIndex
ÒÒ) ?
;
ÒÒ? @
bool
ÚÚ  
isUsingAltTypeface
ÚÚ '
=
ÚÚ( )

m_textInfo
ÚÚ* 4
.
ÚÚ4 5
characterInfo
ÚÚ5 B
[
ÚÚB C
m_characterCount
ÚÚC S
]
ÚÚS T
.
ÚÚT U&
isUsingAlternateTypeface
ÚÚU m
;
ÚÚm n
m_isParsingText
ÙÙ 
=
ÙÙ  !
false
ÙÙ" '
;
ÙÙ' (
bool
¯¯ "
isInjectingCharacter
¯¯ )
=
¯¯* +
false
¯¯, 1
;
¯¯1 2
if
˙˙ 
(
˙˙ #
characterToSubstitute
˙˙ )
.
˙˙) *
index
˙˙* /
==
˙˙0 2
m_characterCount
˙˙3 C
)
˙˙C D
{
˚˚ 
charCode
¸¸ 
=
¸¸ 
(
¸¸  
int
¸¸  #
)
¸¸# $#
characterToSubstitute
¸¸$ 9
.
¸¸9 :
unicode
¸¸: A
;
¸¸A B
m_textElementType
˝˝ %
=
˝˝& '!
TMP_TextElementType
˝˝( ;
.
˝˝; <
	Character
˝˝< E
;
˝˝E F"
isInjectingCharacter
˛˛ (
=
˛˛) *
true
˛˛+ /
;
˛˛/ 0
switch
Ä Ä  
(
Ä Ä  
charCode
Ä Ä  $
)
Ä Ä $ %
{
Å Å  
case
Ç Ç  
$num
Ç Ç  !
:
Ç Ç ! "%
m_internalCharacterInfo
É É  3
[
É É 3 4
m_characterCount
É É 4 D
]
É É D E
.
É É E F
textElement
É É F Q
=
É É R S 
m_currentFontAsset
É É T f
.
É É f g"
characterLookupTable
É É g {
[
É É { |
$numÉ É | Ä
]É É Ä Å
;É É Å Ç
m_isTextTruncated
Ñ Ñ  -
=
Ñ Ñ . /
true
Ñ Ñ 0 4
;
Ñ Ñ 4 5
break
Ö Ö  !
;
Ö Ö ! "
case
Ü Ü  
$num
Ü Ü  !
:
Ü Ü ! "
break
à à  !
;
à à ! "
case
â â  
$num
â â  #
:
â â # $%
m_internalCharacterInfo
ä ä  3
[
ä ä 3 4
m_characterCount
ä ä 4 D
]
ä ä D E
.
ä ä E F
textElement
ä ä F Q
=
ä ä R S

m_Ellipsis
ä ä T ^
.
ä ä ^ _
	character
ä ä _ h
;
ä ä h i
;
ä ä j k%
m_internalCharacterInfo
ã ã  3
[
ã ã 3 4
m_characterCount
ã ã 4 D
]
ã ã D E
.
ã ã E F
elementType
ã ã F Q
=
ã ã R S!
TMP_TextElementType
ã ã T g
.
ã ã g h
	Character
ã ã h q
;
ã ã q r%
m_internalCharacterInfo
å å  3
[
å å 3 4
m_characterCount
å å 4 D
]
å å D E
.
å å E F
	fontAsset
å å F O
=
å å P Q

m_Ellipsis
å å R \
.
å å \ ]
	fontAsset
å å ] f
;
å å f g%
m_internalCharacterInfo
ç ç  3
[
ç ç 3 4
m_characterCount
ç ç 4 D
]
ç ç D E
.
ç ç E F
material
ç ç F N
=
ç ç O P

m_Ellipsis
ç ç Q [
.
ç ç [ \
material
ç ç \ d
;
ç ç d e%
m_internalCharacterInfo
é é  3
[
é é 3 4
m_characterCount
é é 4 D
]
é é D E
.
é é E F$
materialReferenceIndex
é é F \
=
é é ] ^

m_Ellipsis
é é _ i
.
é é i j
materialIndex
é é j w
;
é é w x
m_isTextTruncated
ë ë  -
=
ë ë . /
true
ë ë 0 4
;
ë ë 4 5#
characterToSubstitute
î î  1
.
î î 1 2
index
î î 2 7
=
î î 8 9
m_characterCount
î î : J
+
î î K L
$num
î î M N
;
î î N O#
characterToSubstitute
ï ï  1
.
ï ï 1 2
unicode
ï ï 2 9
=
ï ï : ;
$num
ï ï < @
;
ï ï @ A
break
ñ ñ  !
;
ñ ñ ! "
}
ó ó  
}
ò ò  
if
û û  
(
û û  
m_characterCount
û û  $
<
û û % &%
m_firstVisibleCharacter
û û ' >
&&
û û ? A
charCode
û û B J
!=
û û K M
$num
û û N R
)
û û R S
{
ü ü  %
m_internalCharacterInfo
† †  +
[
† † + ,
m_characterCount
† † , <
]
† † < =
.
† † = >
	isVisible
† † > G
=
† † H I
false
† † J O
;
† † O P%
m_internalCharacterInfo
° °  +
[
° ° + ,
m_characterCount
° ° , <
]
° ° < =
.
° ° = >
	character
° ° > G
=
° ° H I
(
° ° J K
char
° ° K O
)
° ° O P
$num
° ° P V
;
° ° V W%
m_internalCharacterInfo
¢ ¢  +
[
¢ ¢ + ,
m_characterCount
¢ ¢ , <
]
¢ ¢ < =
.
¢ ¢ = >

lineNumber
¢ ¢ > H
=
¢ ¢ I J
$num
¢ ¢ K L
;
¢ ¢ L M
m_characterCount
£ £  $
+=
£ £ % '
$num
£ £ ( )
;
£ £ ) *
continue
§ §  
;
§ §  
}
• •  
float
¨ ¨  !
smallCapsMultiplier
¨ ¨  )
=
¨ ¨ * +
$num
¨ ¨ , 0
;
¨ ¨ 0 1
if
Æ Æ  
(
Æ Æ  
m_textElementType
Æ Æ  %
==
Æ Æ & (!
TMP_TextElementType
Æ Æ ) <
.
Æ Æ < =
	Character
Æ Æ = F
)
Æ Æ F G
{
Ø Ø  
if
∞ ∞  
(
∞ ∞  
(
∞ ∞ \ ]!
m_FontStyleInternal
∞ ∞ ] p
&
∞ ∞ q r

FontStyles
∞ ∞ s }
.
∞ ∞ } ~
	UpperCase∞ ∞ ~ á
)∞ ∞ á à
==∞ ∞ â ã

FontStyles∞ ∞ å ñ
.∞ ∞ ñ ó
	UpperCase∞ ∞ ó †
)∞ ∞ † °
{
± ±  
if
≥ ≥  
(
≥ ≥  
char
≥ ≥   
.
≥ ≥   !
IsLower
≥ ≥ ! (
(
≥ ≥ ( )
(
≥ ≥ ) *
char
≥ ≥ * .
)
≥ ≥ . /
charCode
≥ ≥ / 7
)
≥ ≥ 7 8
)
≥ ≥ 8 9
charCode
¥ ¥  $
=
¥ ¥ % &
char
¥ ¥ ' +
.
¥ ¥ + ,
ToUpper
¥ ¥ , 3
(
¥ ¥ 3 4
(
¥ ¥ 4 5
char
¥ ¥ 5 9
)
¥ ¥ 9 :
charCode
¥ ¥ : B
)
¥ ¥ B C
;
¥ ¥ C D
}
∂ ∂  
else
∑ ∑  
if
∑ ∑  
(
∑ ∑  
(
∑ ∑ a b!
m_FontStyleInternal
∑ ∑ b u
&
∑ ∑ v w

FontStyles∑ ∑ x Ç
.∑ ∑ Ç É
	LowerCase∑ ∑ É å
)∑ ∑ å ç
==∑ ∑ é ê

FontStyles∑ ∑ ë õ
.∑ ∑ õ ú
	LowerCase∑ ∑ ú •
)∑ ∑ • ¶
{
∏ ∏  
if
∫ ∫  
(
∫ ∫  
char
∫ ∫   
.
∫ ∫   !
IsUpper
∫ ∫ ! (
(
∫ ∫ ( )
(
∫ ∫ ) *
char
∫ ∫ * .
)
∫ ∫ . /
charCode
∫ ∫ / 7
)
∫ ∫ 7 8
)
∫ ∫ 8 9
charCode
ª ª  $
=
ª ª % &
char
ª ª ' +
.
ª ª + ,
ToLower
ª ª , 3
(
ª ª 3 4
(
ª ª 4 5
char
ª ª 5 9
)
ª ª 9 :
charCode
ª ª : B
)
ª ª B C
;
ª ª C D
}
º º  
else
Ω Ω  
if
Ω Ω  
(
Ω Ω  
(
Ω Ω a b!
m_FontStyleInternal
Ω Ω b u
&
Ω Ω v w

FontStylesΩ Ω x Ç
.Ω Ω Ç É
	SmallCapsΩ Ω É å
)Ω Ω å ç
==Ω Ω é ê

FontStylesΩ Ω ë õ
.Ω Ω õ ú
	SmallCapsΩ Ω ú •
)Ω Ω • ¶
{
æ æ  
if
ø ø  
(
ø ø  
char
ø ø   
.
ø ø   !
IsLower
ø ø ! (
(
ø ø ( )
(
ø ø ) *
char
ø ø * .
)
ø ø . /
charCode
ø ø / 7
)
ø ø 7 8
)
ø ø 8 9
{
¿ ¿  !
smallCapsMultiplier
¡ ¡  /
=
¡ ¡ 0 1
$num
¡ ¡ 2 6
;
¡ ¡ 6 7
charCode
¬ ¬  $
=
¬ ¬ % &
char
¬ ¬ ' +
.
¬ ¬ + ,
ToUpper
¬ ¬ , 3
(
¬ ¬ 3 4
(
¬ ¬ 4 5
char
¬ ¬ 5 9
)
¬ ¬ 9 :
charCode
¬ ¬ : B
)
¬ ¬ B C
;
¬ ¬ C D
}
√ √  
}
ƒ ƒ  
}
≈ ≈  
float
Ã Ã  
elementAscentLine
Ã Ã  '
=
Ã Ã ( )
$num
Ã Ã * +
;
Ã Ã + ,
float
Õ Õ   
elementDescentLine
Õ Õ  (
=
Õ Õ ) *
$num
Õ Õ + ,
;
Õ Õ , -
if
Œ Œ  
(
Œ Œ  
m_textElementType
Œ Œ  %
==
Œ Œ & (!
TMP_TextElementType
Œ Œ ) <
.
Œ Œ < =
Sprite
Œ Œ = C
)
Œ Œ C D
{
œ œ  "
m_currentSpriteAsset
— —  (
=
— — ) *

m_textInfo
— — + 5
.
— — 5 6
characterInfo
— — 6 C
[
— — C D
m_characterCount
— — D T
]
— — T U
.
— — U V
spriteAsset
— — V a
;
— — a b
m_spriteIndex
“ “  !
=
“ “ " #

m_textInfo
“ “ $ .
.
“ “ . /
characterInfo
“ “ / <
[
“ “ < =
m_characterCount
“ “ = M
]
“ “ M N
.
“ “ N O
spriteIndex
“ “ O Z
;
“ “ Z [!
TMP_SpriteCharacter
‘ ‘  '
sprite
‘ ‘ ( .
=
‘ ‘ / 0"
m_currentSpriteAsset
‘ ‘ 1 E
.
‘ ‘ E F"
spriteCharacterTable
‘ ‘ F Z
[
‘ ‘ Z [
m_spriteIndex
‘ ‘ [ h
]
‘ ‘ h i
;
‘ ‘ i j
if
’ ’  
(
’ ’  
sprite
’ ’  
==
’ ’  !
null
’ ’ " &
)
’ ’ & '
continue
’ ’ ( 0
;
’ ’ 0 1
if
ÿ ÿ  
(
ÿ ÿ  
charCode
ÿ ÿ   
==
ÿ ÿ ! #
$num
ÿ ÿ $ &
)
ÿ ÿ & '
charCode
Ÿ Ÿ   
=
Ÿ Ÿ ! "
$num
Ÿ Ÿ # (
+
Ÿ Ÿ ) *
m_spriteIndex
Ÿ Ÿ + 8
;
Ÿ Ÿ 8 9
if
‹ ‹  
(
‹ ‹  "
m_currentSpriteAsset
‹ ‹  ,
.
‹ ‹ , -
faceInfo
‹ ‹ - 5
.
‹ ‹ 5 6
	pointSize
‹ ‹ 6 ?
>
‹ ‹ @ A
$num
‹ ‹ B C
)
‹ ‹ C D
{
› ›  
float
ﬁ ﬁ  
spriteScale
ﬁ ﬁ  )
=
ﬁ ﬁ * +
(
ﬁ ﬁ , -
m_currentFontSize
ﬁ ﬁ - >
/
ﬁ ﬁ ? @"
m_currentSpriteAsset
ﬁ ﬁ A U
.
ﬁ ﬁ U V
faceInfo
ﬁ ﬁ V ^
.
ﬁ ﬁ ^ _
	pointSize
ﬁ ﬁ _ h
*
ﬁ ﬁ i j"
m_currentSpriteAsset
ﬁ ﬁ k 
.ﬁ ﬁ  Ä
faceInfoﬁ ﬁ Ä à
.ﬁ ﬁ à â
scaleﬁ ﬁ â é
*ﬁ ﬁ è ê
(ﬁ ﬁ ë í 
m_isOrthographicﬁ ﬁ í ¢
?ﬁ ﬁ £ §
$numﬁ ﬁ • ¶
:ﬁ ﬁ ß ®
$numﬁ ﬁ © ≠
)ﬁ ﬁ ≠ Æ
)ﬁ ﬁ Æ Ø
;ﬁ ﬁ Ø ∞!
currentElementScale
ﬂ ﬂ  +
=
ﬂ ﬂ , -
sprite
ﬂ ﬂ . 4
.
ﬂ ﬂ 4 5
scale
ﬂ ﬂ 5 :
*
ﬂ ﬂ ; <
sprite
ﬂ ﬂ = C
.
ﬂ ﬂ C D
glyph
ﬂ ﬂ D I
.
ﬂ ﬂ I J
scale
ﬂ ﬂ J O
*
ﬂ ﬂ P Q
spriteScale
ﬂ ﬂ R ]
;
ﬂ ﬂ ] ^
elementAscentLine
‡ ‡  )
=
‡ ‡ * +"
m_currentSpriteAsset
‡ ‡ , @
.
‡ ‡ @ A
faceInfo
‡ ‡ A I
.
‡ ‡ I J

ascentLine
‡ ‡ J T
;
‡ ‡ T U 
elementDescentLine
‚ ‚  *
=
‚ ‚ + ,"
m_currentSpriteAsset
‚ ‚ - A
.
‚ ‚ A B
faceInfo
‚ ‚ B J
.
‚ ‚ J K
descentLine
‚ ‚ K V
;
‚ ‚ V W
}
„ „  
else
‰ ‰  
{
Â Â  
float
Ê Ê  
spriteScale
Ê Ê  )
=
Ê Ê * +
(
Ê Ê , -
m_currentFontSize
Ê Ê - >
/
Ê Ê ? @ 
m_currentFontAsset
Ê Ê A S
.
Ê Ê S T
faceInfo
Ê Ê T \
.
Ê Ê \ ]
	pointSize
Ê Ê ] f
*
Ê Ê g h 
m_currentFontAsset
Ê Ê i {
.
Ê Ê { |
faceInfoÊ Ê | Ñ
.Ê Ê Ñ Ö
scaleÊ Ê Ö ä
*Ê Ê ã å
(Ê Ê ç é 
m_isOrthographicÊ Ê é û
?Ê Ê ü †
$numÊ Ê ° ¢
:Ê Ê £ §
$numÊ Ê • ©
)Ê Ê © ™
)Ê Ê ™ ´
;Ê Ê ´ ¨!
currentElementScale
Á Á  +
=
Á Á , - 
m_currentFontAsset
Á Á . @
.
Á Á @ A
faceInfo
Á Á A I
.
Á Á I J

ascentLine
Á Á J T
/
Á Á U V
sprite
Á Á W ]
.
Á Á ] ^
glyph
Á Á ^ c
.
Á Á c d
metrics
Á Á d k
.
Á Á k l
height
Á Á l r
*
Á Á s t
sprite
Á Á u {
.
Á Á { |
scaleÁ Á | Å
*Á Á Ç É
spriteÁ Á Ñ ä
.Á Á ä ã
glyphÁ Á ã ê
.Á Á ê ë
scaleÁ Á ë ñ
*Á Á ó ò
spriteScaleÁ Á ô §
;Á Á § •
float
Ë Ë  

scaleDelta
Ë Ë  (
=
Ë Ë ) *
spriteScale
Ë Ë + 6
/
Ë Ë 7 8!
currentElementScale
Ë Ë 9 L
;
Ë Ë L M
elementAscentLine
È È  )
=
È È * + 
m_currentFontAsset
È È , >
.
È È > ?
faceInfo
È È ? G
.
È È G H

ascentLine
È È H R
*
È È S T

scaleDelta
È È U _
;
È È _ ` 
elementDescentLine
Î Î  *
=
Î Î + , 
m_currentFontAsset
Î Î - ?
.
Î Î ? @
faceInfo
Î Î @ H
.
Î Î H I
descentLine
Î Î I T
*
Î Î U V

scaleDelta
Î Î W a
;
Î Î a b
}
Ï Ï  "
m_cached_TextElement
Ó Ó  (
=
Ó Ó ) *
sprite
Ó Ó + 1
;
Ó Ó 1 2%
m_internalCharacterInfo
   +
[
  + ,
m_characterCount
  , <
]
  < =
.
  = >
elementType
  > I
=
  J K!
TMP_TextElementType
  L _
.
  _ `
Sprite
  ` f
;
  f g%
m_internalCharacterInfo
Ò Ò  +
[
Ò Ò + ,
m_characterCount
Ò Ò , <
]
Ò Ò < =
.
Ò Ò = >
scale
Ò Ò > C
=
Ò Ò D E!
currentElementScale
Ò Ò F Y
;
Ò Ò Y Z$
m_currentMaterialIndex
Û Û  *
=
Û Û + , 
prev_MaterialIndex
Û Û - ?
;
Û Û ? @
}
Ù Ù  
else
ı ı  
if
ı ı  
(
ı ı  
m_textElementType
ı ı  *
==
ı ı + -!
TMP_TextElementType
ı ı . A
.
ı ı A B
	Character
ı ı B K
)
ı ı K L
{
ˆ ˆ  "
m_cached_TextElement
˜ ˜  (
=
˜ ˜ ) *

m_textInfo
˜ ˜ + 5
.
˜ ˜ 5 6
characterInfo
˜ ˜ 6 C
[
˜ ˜ C D
m_characterCount
˜ ˜ D T
]
˜ ˜ T U
.
˜ ˜ U V
textElement
˜ ˜ V a
;
˜ ˜ a b
if
¯ ¯  
(
¯ ¯  "
m_cached_TextElement
¯ ¯  ,
==
¯ ¯ - /
null
¯ ¯ 0 4
)
¯ ¯ 4 5
continue
¯ ¯ 6 >
;
¯ ¯ > ?$
m_currentMaterialIndex
˙ ˙  *
=
˙ ˙ + ,

m_textInfo
˙ ˙ - 7
.
˙ ˙ 7 8
characterInfo
˙ ˙ 8 E
[
˙ ˙ E F
m_characterCount
˙ ˙ F V
]
˙ ˙ V W
.
˙ ˙ W X$
materialReferenceIndex
˙ ˙ X n
;
˙ ˙ n o
float
¸ ¸  
adjustedScale
¸ ¸  '
;
¸ ¸ ' (
if
˝ ˝  
(
˝ ˝  "
isInjectingCharacter
˝ ˝  ,
&&
˝ ˝ - /#
m_TextProcessingArray
˝ ˝ 0 E
[
˝ ˝ E F
i
˝ ˝ F G
]
˝ ˝ G H
.
˝ ˝ H I
unicode
˝ ˝ I P
==
˝ ˝ Q S
$num
˝ ˝ T X
&&
˝ ˝ Y [
m_characterCount
˝ ˝ \ l
!=
˝ ˝ m o%
m_firstCharacterOfLine˝ ˝ p Ü
)˝ ˝ Ü á
adjustedScale
˛ ˛  %
=
˛ ˛ & '

m_textInfo
˛ ˛ ( 2
.
˛ ˛ 2 3
characterInfo
˛ ˛ 3 @
[
˛ ˛ @ A
m_characterCount
˛ ˛ A Q
-
˛ ˛ R S
$num
˛ ˛ T U
]
˛ ˛ U V
.
˛ ˛ V W
	pointSize
˛ ˛ W `
*
˛ ˛ a b!
smallCapsMultiplier
˛ ˛ c v
/
˛ ˛ w x!
m_currentFontAsset˛ ˛ y ã
.˛ ˛ ã å

m_FaceInfo˛ ˛ å ñ
.˛ ˛ ñ ó
	pointSize˛ ˛ ó †
*˛ ˛ ° ¢"
m_currentFontAsset˛ ˛ £ µ
.˛ ˛ µ ∂

m_FaceInfo˛ ˛ ∂ ¿
.˛ ˛ ¿ ¡
scale˛ ˛ ¡ ∆
*˛ ˛ « »
(˛ ˛ …   
m_isOrthographic˛ ˛   ⁄
?˛ ˛ € ‹
$num˛ ˛ › ﬁ
:˛ ˛ ﬂ ‡
$num˛ ˛ · Â
)˛ ˛ Â Ê
;˛ ˛ Ê Á
else
ˇ ˇ  
adjustedScale
Ä!Ä! %
=
Ä!Ä!& '
m_currentFontSize
Ä!Ä!( 9
*
Ä!Ä!: ;!
smallCapsMultiplier
Ä!Ä!< O
/
Ä!Ä!P Q 
m_currentFontAsset
Ä!Ä!R d
.
Ä!Ä!d e

m_FaceInfo
Ä!Ä!e o
.
Ä!Ä!o p
	pointSize
Ä!Ä!p y
*
Ä!Ä!z {!
m_currentFontAssetÄ!Ä!| é
.Ä!Ä!é è

m_FaceInfoÄ!Ä!è ô
.Ä!Ä!ô ö
scaleÄ!Ä!ö ü
*Ä!Ä!† °
(Ä!Ä!¢ £ 
m_isOrthographicÄ!Ä!£ ≥
?Ä!Ä!¥ µ
$numÄ!Ä!∂ ∑
:Ä!Ä!∏ π
$numÄ!Ä!∫ æ
)Ä!Ä!æ ø
;Ä!Ä!ø ¿
if
É!É! 
(
É!É! "
isInjectingCharacter
É!É! ,
&&
É!É!- /
charCode
É!É!0 8
==
É!É!9 ;
$num
É!É!< B
)
É!É!B C
{
Ñ!Ñ! 
elementAscentLine
Ö!Ö! )
=
Ö!Ö!* +
$num
Ö!Ö!, -
;
Ö!Ö!- . 
elementDescentLine
Ü!Ü! *
=
Ü!Ü!+ ,
$num
Ü!Ü!- .
;
Ü!Ü!. /
}
á!á! 
else
à!à! 
{
â!â! 
elementAscentLine
ä!ä! )
=
ä!ä!* + 
m_currentFontAsset
ä!ä!, >
.
ä!ä!> ?

m_FaceInfo
ä!ä!? I
.
ä!ä!I J

ascentLine
ä!ä!J T
;
ä!ä!T U 
elementDescentLine
ã!ã! *
=
ã!ã!+ , 
m_currentFontAsset
ã!ã!- ?
.
ã!ã!? @

m_FaceInfo
ã!ã!@ J
.
ã!ã!J K
descentLine
ã!ã!K V
;
ã!ã!V W
}
å!å! !
currentElementScale
é!é! '
=
é!é!( )
adjustedScale
é!é!* 7
*
é!é!8 9#
m_fontScaleMultiplier
é!é!: O
*
é!é!P Q"
m_cached_TextElement
é!é!R f
.
é!é!f g
scale
é!é!g l
;
é!é!l m%
m_internalCharacterInfo
ë!ë! +
[
ë!ë!+ ,
m_characterCount
ë!ë!, <
]
ë!ë!< =
.
ë!ë!= >
elementType
ë!ë!> I
=
ë!ë!J K!
TMP_TextElementType
ë!ë!L _
.
ë!ë!_ `
	Character
ë!ë!` i
;
ë!ë!i j
}
í!í! 
float
ò!ò! +
currentElementUnmodifiedScale
ò!ò! 3
=
ò!ò!4 5!
currentElementScale
ò!ò!6 I
;
ò!ò!I J
if
ô!ô! 
(
ô!ô! 
charCode
ô!ô! 
==
ô!ô! 
$num
ô!ô!  $
||
ô!ô!% '
charCode
ô!ô!( 0
==
ô!ô!1 3
$num
ô!ô!4 8
)
ô!ô!8 9!
currentElementScale
ö!ö! '
=
ö!ö!( )
$num
ö!ö!* +
;
ö!ö!+ ,%
m_internalCharacterInfo
ü!ü! '
[
ü!ü!' (
m_characterCount
ü!ü!( 8
]
ü!ü!8 9
.
ü!ü!9 :
	character
ü!ü!: C
=
ü!ü!D E
(
ü!ü!F G
char
ü!ü!G K
)
ü!ü!K L
charCode
ü!ü!L T
;
ü!ü!T U
GlyphMetrics
¢!¢! !
currentGlyphMetrics
¢!¢! 0
=
¢!¢!1 2"
m_cached_TextElement
¢!¢!3 G
.
¢!¢!G H
m_Glyph
¢!¢!H O
.
¢!¢!O P
metrics
¢!¢!P W
;
¢!¢!W X
bool
•!•! 
isWhiteSpace
•!•! !
=
•!•!" #
charCode
•!•!$ ,
<=
•!•!- /
$num
•!•!0 6
&&
•!•!7 9
char
•!•!: >
.
•!•!> ?
IsWhiteSpace
•!•!? K
(
•!•!K L
(
•!•!L M
char
•!•!M Q
)
•!•!Q R
charCode
•!•!R Z
)
•!•!Z [
;
•!•![ \"
TMP_GlyphValueRecord
™!™! $
glyphAdjustments
™!™!% 5
=
™!™!6 7
new
™!™!8 ;"
TMP_GlyphValueRecord
™!™!< P
(
™!™!P Q
)
™!™!Q R
;
™!™!R S
float
´!´! (
characterSpacingAdjustment
´!´! 0
=
´!´!1 2 
m_characterSpacing
´!´!3 E
;
´!´!E F0
"m_GlyphHorizontalAdvanceAdjustment
¨!¨! 2
=
¨!¨!3 4
$num
¨!¨!5 6
;
¨!¨!6 7
if
≠!≠! 
(
≠!≠! 
m_enableKerning
≠!≠! #
)
≠!≠!# $
{
Æ!Æ! +
TMP_GlyphPairAdjustmentRecord
Ø!Ø! 1
adjustmentPair
Ø!Ø!2 @
;
Ø!Ø!@ A
uint
∞!∞! 
baseGlyphIndex
∞!∞! '
=
∞!∞!( )"
m_cached_TextElement
∞!∞!* >
.
∞!∞!> ?
m_GlyphIndex
∞!∞!? K
;
∞!∞!K L
if
≤!≤! 
(
≤!≤! 
m_characterCount
≤!≤! (
<
≤!≤!) *!
totalCharacterCount
≤!≤!+ >
-
≤!≤!? @
$num
≤!≤!A B
)
≤!≤!B C
{
≥!≥! 
uint
¥!¥! 
nextGlyphIndex
¥!¥! +
=
¥!¥!, -

m_textInfo
¥!¥!. 8
.
¥!¥!8 9
characterInfo
¥!¥!9 F
[
¥!¥!F G
m_characterCount
¥!¥!G W
+
¥!¥!X Y
$num
¥!¥!Z [
]
¥!¥![ \
.
¥!¥!\ ]
textElement
¥!¥!] h
.
¥!¥!h i
m_GlyphIndex
¥!¥!i u
;
¥!¥!u v
uint
µ!µ! 
key
µ!µ!  
=
µ!µ!! "
nextGlyphIndex
µ!µ!# 1
<<
µ!µ!2 4
$num
µ!µ!5 7
|
µ!µ!8 9
baseGlyphIndex
µ!µ!: H
;
µ!µ!H I
if
∑!∑! 
(
∑!∑!  
m_currentFontAsset
∑!∑! .
.
∑!∑!. / 
m_FontFeatureTable
∑!∑!/ A
.
∑!∑!A B9
+m_GlyphPairAdjustmentRecordLookupDictionary
∑!∑!B m
.
∑!∑!m n
TryGetValue
∑!∑!n y
(
∑!∑!y z
key
∑!∑!z }
,
∑!∑!} ~
out∑!∑! Ç
adjustmentPair∑!∑!É ë
)∑!∑!ë í
)∑!∑!í ì
{
∏!∏! 
glyphAdjustments
π!π! ,
=
π!π!- .
adjustmentPair
π!π!/ =
.
π!π!= >%
m_FirstAdjustmentRecord
π!π!> U
.
π!π!U V 
m_GlyphValueRecord
π!π!V h
;
π!π!h i(
characterSpacingAdjustment
∫!∫! 6
=
∫!∫!7 8
(
∫!∫!9 :
adjustmentPair
∫!∫!: H
.
∫!∫!H I"
m_FeatureLookupFlags
∫!∫!I ]
&
∫!∫!^ _$
FontFeatureLookupFlags
∫!∫!` v
.
∫!∫!v w'
IgnoreSpacingAdjustments∫!∫!w è
)∫!∫!è ê
==∫!∫!ë ì&
FontFeatureLookupFlags∫!∫!î ™
.∫!∫!™ ´(
IgnoreSpacingAdjustments∫!∫!´ √
?∫!∫!ƒ ≈
$num∫!∫!∆ «
:∫!∫!» …*
characterSpacingAdjustment∫!∫!  ‰
;∫!∫!‰ Â
}
ª!ª! 
}
º!º! 
if
æ!æ! 
(
æ!æ! 
m_characterCount
æ!æ! (
>=
æ!æ!) +
$num
æ!æ!, -
)
æ!æ!- .
{
ø!ø! 
uint
¿!¿!  
previousGlyphIndex
¿!¿! /
=
¿!¿!0 1

m_textInfo
¿!¿!2 <
.
¿!¿!< =
characterInfo
¿!¿!= J
[
¿!¿!J K
m_characterCount
¿!¿!K [
-
¿!¿!\ ]
$num
¿!¿!^ _
]
¿!¿!_ `
.
¿!¿!` a
textElement
¿!¿!a l
.
¿!¿!l m
m_GlyphIndex
¿!¿!m y
;
¿!¿!y z
uint
¡!¡! 
key
¡!¡!  
=
¡!¡!! "
baseGlyphIndex
¡!¡!# 1
<<
¡!¡!2 4
$num
¡!¡!5 7
|
¡!¡!8 9 
previousGlyphIndex
¡!¡!: L
;
¡!¡!L M
if
√!√! 
(
√!√!  
m_currentFontAsset
√!√! .
.
√!√!. / 
m_FontFeatureTable
√!√!/ A
.
√!√!A B9
+m_GlyphPairAdjustmentRecordLookupDictionary
√!√!B m
.
√!√!m n
TryGetValue
√!√!n y
(
√!√!y z
key
√!√!z }
,
√!√!} ~
out√!√! Ç
adjustmentPair√!√!É ë
)√!√!ë í
)√!√!í ì
{
ƒ!ƒ! 
glyphAdjustments
≈!≈! ,
+=
≈!≈!- /
adjustmentPair
≈!≈!0 >
.
≈!≈!> ?&
m_SecondAdjustmentRecord
≈!≈!? W
.
≈!≈!W X 
m_GlyphValueRecord
≈!≈!X j
;
≈!≈!j k(
characterSpacingAdjustment
∆!∆! 6
=
∆!∆!7 8
(
∆!∆!9 :
adjustmentPair
∆!∆!: H
.
∆!∆!H I"
m_FeatureLookupFlags
∆!∆!I ]
&
∆!∆!^ _$
FontFeatureLookupFlags
∆!∆!` v
.
∆!∆!v w'
IgnoreSpacingAdjustments∆!∆!w è
)∆!∆!è ê
==∆!∆!ë ì&
FontFeatureLookupFlags∆!∆!î ™
.∆!∆!™ ´(
IgnoreSpacingAdjustments∆!∆!´ √
?∆!∆!ƒ ≈
$num∆!∆!∆ «
:∆!∆!» …*
characterSpacingAdjustment∆!∆!  ‰
;∆!∆!‰ Â
}
«!«! 
}
»!»! 0
"m_GlyphHorizontalAdvanceAdjustment
 ! ! 6
=
 ! !7 8
glyphAdjustments
 ! !9 I
.
 ! !I J

m_XAdvance
 ! !J T
;
 ! !T U
}
À!À! 
float
›!›! 
monoAdvance
›!›! !
=
›!›!" #
$num
›!›!$ %
;
›!›!% &
if
ﬁ!ﬁ! 
(
ﬁ!ﬁ! 
m_monoSpacing
ﬁ!ﬁ! !
!=
ﬁ!ﬁ!" $
$num
ﬁ!ﬁ!% &
)
ﬁ!ﬁ!& '
{
ﬂ!ﬂ! 
monoAdvance
‡!‡! 
=
‡!‡!  !
(
‡!‡!" #
m_monoSpacing
‡!‡!# 0
/
‡!‡!1 2
$num
‡!‡!3 4
-
‡!‡!5 6
(
‡!‡!7 8"
m_cached_TextElement
‡!‡!8 L
.
‡!‡!L M
glyph
‡!‡!M R
.
‡!‡!R S
metrics
‡!‡!S Z
.
‡!‡!Z [
width
‡!‡![ `
/
‡!‡!a b
$num
‡!‡!c d
+
‡!‡!e f"
m_cached_TextElement
‡!‡!g {
.
‡!‡!{ |
glyph‡!‡!| Å
.‡!‡!Å Ç
metrics‡!‡!Ç â
.‡!‡!â ä"
horizontalBearingX‡!‡!ä ú
)‡!‡!ú ù
*‡!‡!û ü#
currentElementScale‡!‡!† ≥
)‡!‡!≥ ¥
*‡!‡!µ ∂
(‡!‡!∑ ∏
$num‡!‡!∏ π
-‡!‡!∫ ª#
m_charWidthAdjDelta‡!‡!º œ
)‡!‡!œ –
;‡!‡!– —

m_xAdvance
·!·! 
+=
·!·! !
monoAdvance
·!·!" -
;
·!·!- .
}
‚!‚! 
float
Ë!Ë! #
boldSpacingAdjustment
Ë!Ë! +
=
Ë!Ë!, -
$num
Ë!Ë!. /
;
Ë!Ë!/ 0
if
È!È! 
(
È!È! 
m_textElementType
È!È! %
==
È!È!& (!
TMP_TextElementType
È!È!) <
.
È!È!< =
	Character
È!È!= F
&&
È!È!G I
!
È!È!J K 
isUsingAltTypeface
È!È!K ]
&&
È!È!^ `
(
È!È!a b
(
È!È!b c!
m_FontStyleInternal
È!È!c v
&
È!È!w x

FontStylesÈ!È!y É
.È!È!É Ñ
BoldÈ!È!Ñ à
)È!È!à â
==È!È!ä å

FontStylesÈ!È!ç ó
.È!È!ó ò
BoldÈ!È!ò ú
)È!È!ú ù
)È!È!ù û#
boldSpacingAdjustment
Í!Í! )
=
Í!Í!* + 
m_currentFontAsset
Í!Í!, >
.
Í!Í!> ?
boldSpacing
Í!Í!? J
;
Í!Í!J K%
m_internalCharacterInfo
Ì!Ì! '
[
Ì!Ì!' (
m_characterCount
Ì!Ì!( 8
]
Ì!Ì!8 9
.
Ì!Ì!9 :
baseLine
Ì!Ì!: B
=
Ì!Ì!C D
$num
Ì!Ì!E F
-
Ì!Ì!G H
m_lineOffset
Ì!Ì!I U
+
Ì!Ì!V W
m_baselineOffset
Ì!Ì!X h
;
Ì!Ì!h i
float
Ú!Ú! 
elementAscender
Ú!Ú! %
=
Ú!Ú!& '
m_textElementType
Ú!Ú!( 9
==
Ú!Ú!: <!
TMP_TextElementType
Ú!Ú!= P
.
Ú!Ú!P Q
	Character
Ú!Ú!Q Z
?
Û!Û! 
elementAscentLine
Û!Û! '
*
Û!Û!( )!
currentElementScale
Û!Û!* =
/
Û!Û!> ?!
smallCapsMultiplier
Û!Û!@ S
+
Û!Û!T U
m_baselineOffset
Û!Û!V f
:
Ù!Ù! 
elementAscentLine
Ù!Ù! '
*
Ù!Ù!( )!
currentElementScale
Ù!Ù!* =
+
Ù!Ù!> ?
m_baselineOffset
Ù!Ù!@ P
;
Ù!Ù!P Q
float
˜!˜! 
elementDescender
˜!˜! &
=
˜!˜!' (
m_textElementType
˜!˜!) :
==
˜!˜!; =!
TMP_TextElementType
˜!˜!> Q
.
˜!˜!Q R
	Character
˜!˜!R [
?
¯!¯!  
elementDescentLine
¯!¯! (
*
¯!¯!) *!
currentElementScale
¯!¯!+ >
/
¯!¯!? @!
smallCapsMultiplier
¯!¯!A T
+
¯!¯!U V
m_baselineOffset
¯!¯!W g
:
˘!˘!  
elementDescentLine
˘!˘! (
*
˘!˘!) *!
currentElementScale
˘!˘!+ >
+
˘!˘!? @
m_baselineOffset
˘!˘!A Q
;
˘!˘!Q R
float
˚!˚! 
adjustedAscender
˚!˚! &
=
˚!˚!' (
elementAscender
˚!˚!) 8
;
˚!˚!8 9
float
¸!¸! 
adjustedDescender
¸!¸! '
=
¸!¸!( )
elementDescender
¸!¸!* :
;
¸!¸!: ;
bool
˛!˛! $
isFirstCharacterOfLine
˛!˛! +
=
˛!˛!, -
m_characterCount
˛!˛!. >
==
˛!˛!? A$
m_firstCharacterOfLine
˛!˛!B X
;
˛!˛!X Y
if
Ä"Ä" 
(
Ä"Ä" $
isFirstCharacterOfLine
Ä"Ä" *
||
Ä"Ä"+ -
isWhiteSpace
Ä"Ä". :
==
Ä"Ä"; =
false
Ä"Ä"> C
)
Ä"Ä"C D
{
Å"Å" 
if
É"É" 
(
É"É" 
m_baselineOffset
É"É" (
!=
É"É") +
$num
É"É", -
)
É"É"- .
{
Ñ"Ñ" 
adjustedAscender
Ö"Ö" (
=
Ö"Ö") *
Mathf
Ö"Ö"+ 0
.
Ö"Ö"0 1
Max
Ö"Ö"1 4
(
Ö"Ö"4 5
(
Ö"Ö"5 6
elementAscender
Ö"Ö"6 E
-
Ö"Ö"F G
m_baselineOffset
Ö"Ö"H X
)
Ö"Ö"X Y
/
Ö"Ö"Z [#
m_fontScaleMultiplier
Ö"Ö"\ q
,
Ö"Ö"q r
adjustedAscenderÖ"Ö"s É
)Ö"Ö"É Ñ
;Ö"Ö"Ñ Ö
adjustedDescender
Ü"Ü" )
=
Ü"Ü"* +
Mathf
Ü"Ü", 1
.
Ü"Ü"1 2
Min
Ü"Ü"2 5
(
Ü"Ü"5 6
(
Ü"Ü"6 7
elementDescender
Ü"Ü"7 G
-
Ü"Ü"H I
m_baselineOffset
Ü"Ü"J Z
)
Ü"Ü"Z [
/
Ü"Ü"\ ]#
m_fontScaleMultiplier
Ü"Ü"^ s
,
Ü"Ü"s t 
adjustedDescenderÜ"Ü"u Ü
)Ü"Ü"Ü á
;Ü"Ü"á à
}
á"á" 
m_maxLineAscender
â"â" %
=
â"â"& '
Mathf
â"â"( -
.
â"â"- .
Max
â"â". 1
(
â"â"1 2
adjustedAscender
â"â"2 B
,
â"â"B C
m_maxLineAscender
â"â"D U
)
â"â"U V
;
â"â"V W 
m_maxLineDescender
ä"ä" &
=
ä"ä"' (
Mathf
ä"ä") .
.
ä"ä". /
Min
ä"ä"/ 2
(
ä"ä"2 3
adjustedDescender
ä"ä"3 D
,
ä"ä"D E 
m_maxLineDescender
ä"ä"F X
)
ä"ä"X Y
;
ä"ä"Y Z
}
ã"ã" 
if
é"é" 
(
é"é" $
isFirstCharacterOfLine
é"é" *
||
é"é"+ -
isWhiteSpace
é"é". :
==
é"é"; =
false
é"é"> C
)
é"é"C D
{
è"è" %
m_internalCharacterInfo
ê"ê" +
[
ê"ê"+ ,
m_characterCount
ê"ê", <
]
ê"ê"< =
.
ê"ê"= >
adjustedAscender
ê"ê"> N
=
ê"ê"O P
adjustedAscender
ê"ê"Q a
;
ê"ê"a b%
m_internalCharacterInfo
ë"ë" +
[
ë"ë"+ ,
m_characterCount
ë"ë", <
]
ë"ë"< =
.
ë"ë"= >
adjustedDescender
ë"ë"> O
=
ë"ë"P Q
adjustedDescender
ë"ë"R c
;
ë"ë"c d
m_ElementAscender
ì"ì" %
=
ì"ì"& '%
m_internalCharacterInfo
ì"ì"( ?
[
ì"ì"? @
m_characterCount
ì"ì"@ P
]
ì"ì"P Q
.
ì"ì"Q R
ascender
ì"ì"R Z
=
ì"ì"[ \
elementAscender
ì"ì"] l
-
ì"ì"m n
m_lineOffset
ì"ì"o {
;
ì"ì"{ | 
m_ElementDescender
î"î" &
=
î"î"' (%
m_internalCharacterInfo
î"î") @
[
î"î"@ A
m_characterCount
î"î"A Q
]
î"î"Q R
.
î"î"R S
	descender
î"î"S \
=
î"î"] ^
elementDescender
î"î"_ o
-
î"î"p q
m_lineOffset
î"î"r ~
;
î"î"~ 
}
ï"ï" 
else
ñ"ñ" 
{
ó"ó" %
m_internalCharacterInfo
ò"ò" +
[
ò"ò"+ ,
m_characterCount
ò"ò", <
]
ò"ò"< =
.
ò"ò"= >
adjustedAscender
ò"ò"> N
=
ò"ò"O P
m_maxLineAscender
ò"ò"Q b
;
ò"ò"b c%
m_internalCharacterInfo
ô"ô" +
[
ô"ô"+ ,
m_characterCount
ô"ô", <
]
ô"ô"< =
.
ô"ô"= >
adjustedDescender
ô"ô"> O
=
ô"ô"P Q 
m_maxLineDescender
ô"ô"R d
;
ô"ô"d e
m_ElementAscender
õ"õ" %
=
õ"õ"& '%
m_internalCharacterInfo
õ"õ"( ?
[
õ"õ"? @
m_characterCount
õ"õ"@ P
]
õ"õ"P Q
.
õ"õ"Q R
ascender
õ"õ"R Z
=
õ"õ"[ \
m_maxLineAscender
õ"õ"] n
-
õ"õ"o p
m_lineOffset
õ"õ"q }
;
õ"õ"} ~ 
m_ElementDescender
ú"ú" &
=
ú"ú"' (%
m_internalCharacterInfo
ú"ú") @
[
ú"ú"@ A
m_characterCount
ú"ú"A Q
]
ú"ú"Q R
.
ú"ú"R S
	descender
ú"ú"S \
=
ú"ú"] ^ 
m_maxLineDescender
ú"ú"_ q
-
ú"ú"r s
m_lineOffsetú"ú"t Ä
;ú"ú"Ä Å
}
ù"ù" 
if
†"†" 
(
†"†" 
m_lineNumber
†"†"  
==
†"†"! #
$num
†"†"$ %
||
†"†"& (
m_isNewPage
†"†") 4
)
†"†"4 5
{
°"°" 
if
¢"¢" 
(
¢"¢" $
isFirstCharacterOfLine
¢"¢" .
||
¢"¢"/ 1
isWhiteSpace
¢"¢"2 >
==
¢"¢"? A
false
¢"¢"B G
)
¢"¢"G H
{
£"£" 
m_maxTextAscender
§"§" )
=
§"§"* +
m_maxLineAscender
§"§", =
;
§"§"= >
m_maxCapHeight
•"•" &
=
•"•"' (
Mathf
•"•") .
.
•"•". /
Max
•"•"/ 2
(
•"•"2 3
m_maxCapHeight
•"•"3 A
,
•"•"A B 
m_currentFontAsset
•"•"C U
.
•"•"U V

m_FaceInfo
•"•"V `
.
•"•"` a
capLine
•"•"a h
*
•"•"i j!
currentElementScale
•"•"k ~
/•"•" Ä#
smallCapsMultiplier•"•"Å î
)•"•"î ï
;•"•"ï ñ
}
¶"¶" 
}
ß"ß" 
if
™"™" 
(
™"™" 
m_lineOffset
™"™"  
==
™"™"! #
$num
™"™"$ %
)
™"™"% &
{
´"´" 
if
¨"¨" 
(
¨"¨" 
!
¨"¨" 
isWhiteSpace
¨"¨" %
||
¨"¨"& (
m_characterCount
¨"¨") 9
==
¨"¨": <$
m_firstCharacterOfLine
¨"¨"= S
)
¨"¨"S T
m_PageAscender
≠"≠" &
=
≠"≠"' (
m_PageAscender
≠"≠") 7
>
≠"≠"8 9
elementAscender
≠"≠": I
?
≠"≠"J K
m_PageAscender
≠"≠"L Z
:
≠"≠"[ \
elementAscender
≠"≠"] l
;
≠"≠"l m
}
Æ"Æ" 
bool
±"±"  
isJustifiedOrFlush
±"±" '
=
±"±"( )
(
±"±"* +!
m_lineJustification
±"±"+ >
&
±"±"? @(
HorizontalAlignmentOptions
±"±"A [
.
±"±"[ \
Flush
±"±"\ a
)
±"±"a b
==
±"±"c e)
HorizontalAlignmentOptions±"±"f Ä
.±"±"Ä Å
Flush±"±"Å Ü
||±"±"á â
(±"±"ä ã#
m_lineJustification±"±"ã û
&±"±"ü †*
HorizontalAlignmentOptions±"±"° ª
.±"±"ª º
	Justified±"±"º ≈
)±"±"≈ ∆
==±"±"« …*
HorizontalAlignmentOptions±"±"  ‰
.±"±"‰ Â
	Justified±"±"Â Ó
;±"±"Ó Ô
if
µ"µ" 
(
µ"µ" 
charCode
µ"µ" 
==
µ"µ" 
$num
µ"µ"  !
||
µ"µ"" $
(
µ"µ"% &
isWhiteSpace
µ"µ"& 2
==
µ"µ"3 5
false
µ"µ"6 ;
&&
µ"µ"< >
charCode
µ"µ"? G
!=
µ"µ"H J
$num
µ"µ"K Q
&&
µ"µ"R T
charCode
µ"µ"U ]
!=
µ"µ"^ `
$num
µ"µ"a e
&&
µ"µ"f h
charCode
µ"µ"i q
!=
µ"µ"r t
$num
µ"µ"u y
)
µ"µ"y z
||
µ"µ"{ }
(
µ"µ"~ 
charCodeµ"µ" á
==µ"µ"à ä
$numµ"µ"ã è
&&µ"µ"ê í#
isSoftHyphenIgnoredµ"µ"ì ¶
==µ"µ"ß ©
falseµ"µ"™ Ø
)µ"µ"Ø ∞
||µ"µ"± ≥!
m_textElementTypeµ"µ"¥ ≈
==µ"µ"∆ »#
TMP_TextElementTypeµ"µ"… ‹
.µ"µ"‹ ›
Spriteµ"µ"› „
)µ"µ"„ ‰
{
∂"∂" 
widthOfTextArea
¡"¡" #
=
¡"¡"$ %
m_width
¡"¡"& -
!=
¡"¡". 0
-
¡"¡"1 2
$num
¡"¡"2 3
?
¡"¡"4 5
Mathf
¡"¡"6 ;
.
¡"¡"; <
Min
¡"¡"< ?
(
¡"¡"? @
marginWidth
¡"¡"@ K
+
¡"¡"L M
$num
¡"¡"N U
-
¡"¡"V W
m_marginLeft
¡"¡"X d
-
¡"¡"e f
m_marginRight
¡"¡"g t
,
¡"¡"t u
m_width
¡"¡"v }
)
¡"¡"} ~
:¡"¡" Ä
marginWidth¡"¡"Å å
+¡"¡"ç é
$num¡"¡"è ñ
-¡"¡"ó ò
m_marginLeft¡"¡"ô •
-¡"¡"¶ ß
m_marginRight¡"¡"® µ
;¡"¡"µ ∂
	textWidth
ƒ"ƒ" 
=
ƒ"ƒ" 
Mathf
ƒ"ƒ"  %
.
ƒ"ƒ"% &
Abs
ƒ"ƒ"& )
(
ƒ"ƒ") *

m_xAdvance
ƒ"ƒ"* 4
)
ƒ"ƒ"4 5
+
ƒ"ƒ"6 7!
currentGlyphMetrics
ƒ"ƒ"8 K
.
ƒ"ƒ"K L
horizontalAdvance
ƒ"ƒ"L ]
*
ƒ"ƒ"^ _
(
ƒ"ƒ"` a
$num
ƒ"ƒ"a b
-
ƒ"ƒ"c d!
m_charWidthAdjDelta
ƒ"ƒ"e x
)
ƒ"ƒ"x y
*
ƒ"ƒ"z {
(
ƒ"ƒ"| }
charCodeƒ"ƒ"} Ö
==ƒ"ƒ"Ü à
$numƒ"ƒ"â ç
?ƒ"ƒ"é è-
currentElementUnmodifiedScaleƒ"ƒ"ê ≠
:ƒ"ƒ"Æ Ø#
currentElementScaleƒ"ƒ"∞ √
)ƒ"ƒ"√ ƒ
;ƒ"ƒ"ƒ ≈
int
∆"∆" "
testedCharacterCount
∆"∆" ,
=
∆"∆"- .
m_characterCount
∆"∆"/ ?
;
∆"∆"? @
if
 " " 
(
 " " 
	textWidth
 " " !
>
 " "" #
widthOfTextArea
 " "$ 3
*
 " "4 5
(
 " "6 7 
isJustifiedOrFlush
 " "7 I
?
 " "J K
$num
 " "L Q
:
 " "R S
$num
 " "T X
)
 " "X Y
)
 " "Y Z
{
À"À" 
if
Õ"Õ" 
(
Õ"Õ" #
isWordWrappingEnabled
Õ"Õ" 1
&&
Õ"Õ"2 4
m_characterCount
Õ"Õ"5 E
!=
Õ"Õ"F H$
m_firstCharacterOfLine
Õ"Õ"I _
)
Õ"Õ"_ `
{
Œ"Œ" 
i
–"–" 
=
–"–" &
RestoreWordWrappingState
–"–"  8
(
–"–"8 9
ref
–"–"9 <#
internalWordWrapState
–"–"= R
)
–"–"R S
;
–"–"S T
if
‘"‘" 
(
‘"‘"  %
m_internalCharacterInfo
‘"‘"  7
[
‘"‘"7 8
m_characterCount
‘"‘"8 H
-
‘"‘"I J
$num
‘"‘"K L
]
‘"‘"L M
.
‘"‘"M N
	character
‘"‘"N W
==
‘"‘"X Z
$num
‘"‘"[ _
&&
‘"‘"` b!
isSoftHyphenIgnored
‘"‘"c v
==
‘"‘"w y
false
‘"‘"z 
&&‘"‘"Ä Ç
m_overflowMode‘"‘"É ë
==‘"‘"í î!
TextOverflowModes‘"‘"ï ¶
.‘"‘"¶ ß
Overflow‘"‘"ß Ø
)‘"‘"Ø ∞
{
’"’" #
characterToSubstitute
÷"÷"  5
.
÷"÷"5 6
index
÷"÷"6 ;
=
÷"÷"< =
m_characterCount
÷"÷"> N
-
÷"÷"O P
$num
÷"÷"Q R
;
÷"÷"R S#
characterToSubstitute
◊"◊"  5
.
◊"◊"5 6
unicode
◊"◊"6 =
=
◊"◊"> ?
$num
◊"◊"@ D
;
◊"◊"D E
i
Ÿ"Ÿ"  !
-=
Ÿ"Ÿ"" $
$num
Ÿ"Ÿ"% &
;
Ÿ"Ÿ"& '
m_characterCount
⁄"⁄"  0
-=
⁄"⁄"1 3
$num
⁄"⁄"4 5
;
⁄"⁄"5 6
continue
€"€"  (
;
€"€"( )
}
‹"‹" !
isSoftHyphenIgnored
ﬁ"ﬁ" /
=
ﬁ"ﬁ"0 1
false
ﬁ"ﬁ"2 7
;
ﬁ"ﬁ"7 8
if
·"·" 
(
·"·"  %
m_internalCharacterInfo
·"·"  7
[
·"·"7 8
m_characterCount
·"·"8 H
]
·"·"H I
.
·"·"I J
	character
·"·"J S
==
·"·"T V
$num
·"·"W [
)
·"·"[ \
{
‚"‚" !
isSoftHyphenIgnored
„"„"  3
=
„"„"4 5
true
„"„"6 :
;
„"„": ;
continue
‰"‰"  (
;
‰"‰"( )
}
Â"Â" 
if
Í"Í" 
(
Í"Í"  %
isTextAutoSizingEnabled
Í"Í"  7
&&
Í"Í"8 :
isFirstWordOfLine
Í"Í"; L
)
Í"Í"L M
{
Î"Î" 
if
Ó"Ó"  "
(
Ó"Ó"# $!
m_charWidthAdjDelta
Ó"Ó"$ 7
<
Ó"Ó"8 9
m_charWidthMaxAdj
Ó"Ó": K
/
Ó"Ó"L M
$num
Ó"Ó"N Q
&&
Ó"Ó"R T&
m_AutoSizeIterationCount
Ó"Ó"U m
<
Ó"Ó"n o*
m_AutoSizeMaxIterationCountÓ"Ó"p ã
)Ó"Ó"ã å
{
Ô"Ô"  !
float
""$ )
adjustedTextWidth
""* ;
=
""< =
	textWidth
""> G
;
""G H
if
Û"Û"$ &
(
Û"Û"' (!
m_charWidthAdjDelta
Û"Û"( ;
>
Û"Û"< =
$num
Û"Û"> ?
)
Û"Û"? @
adjustedTextWidth
Ù"Ù"( 9
/=
Ù"Ù": <
$num
Ù"Ù"= ?
-
Ù"Ù"@ A!
m_charWidthAdjDelta
Ù"Ù"B U
;
Ù"Ù"U V
float
ˆ"ˆ"$ )
adjustmentDelta
ˆ"ˆ"* 9
=
ˆ"ˆ": ;
	textWidth
ˆ"ˆ"< E
-
ˆ"ˆ"F G
(
ˆ"ˆ"H I
widthOfTextArea
ˆ"ˆ"I X
-
ˆ"ˆ"Y Z
$num
ˆ"ˆ"[ b
)
ˆ"ˆ"b c
*
ˆ"ˆ"d e
(
ˆ"ˆ"f g 
isJustifiedOrFlush
ˆ"ˆ"g y
?
ˆ"ˆ"z {
$numˆ"ˆ"| Å
:ˆ"ˆ"Ç É
$numˆ"ˆ"Ñ à
)ˆ"ˆ"à â
;ˆ"ˆ"â ä!
m_charWidthAdjDelta
˜"˜"$ 7
+=
˜"˜"8 :
adjustmentDelta
˜"˜"; J
/
˜"˜"K L
adjustedTextWidth
˜"˜"M ^
;
˜"˜"^ _!
m_charWidthAdjDelta
¯"¯"$ 7
=
¯"¯"8 9
Mathf
¯"¯": ?
.
¯"¯"? @
Min
¯"¯"@ C
(
¯"¯"C D!
m_charWidthAdjDelta
¯"¯"D W
,
¯"¯"W X
m_charWidthMaxAdj
¯"¯"Y j
/
¯"¯"k l
$num
¯"¯"m p
)
¯"¯"p q
;
¯"¯"q r
return
˚"˚"$ *
Vector2
˚"˚"+ 2
.
˚"˚"2 3
zero
˚"˚"3 7
;
˚"˚"7 8
}
¸"¸"  !
if
Å#Å#  "
(
Å#Å## $
fontSize
Å#Å#$ ,
>
Å#Å#- .
m_fontSizeMin
Å#Å#/ <
&&
Å#Å#= ?&
m_AutoSizeIterationCount
Å#Å#@ X
<
Å#Å#Y Z)
m_AutoSizeMaxIterationCount
Å#Å#[ v
)
Å#Å#v w
{
Ç#Ç#  !
m_maxFontSize
É#É#$ 1
=
É#É#2 3
fontSize
É#É#4 <
;
É#É#< =
float
Ö#Ö#$ )
	sizeDelta
Ö#Ö#* 3
=
Ö#Ö#4 5
Mathf
Ö#Ö#6 ;
.
Ö#Ö#; <
Max
Ö#Ö#< ?
(
Ö#Ö#? @
(
Ö#Ö#@ A
fontSize
Ö#Ö#A I
-
Ö#Ö#J K
m_minFontSize
Ö#Ö#L Y
)
Ö#Ö#Y Z
/
Ö#Ö#[ \
$num
Ö#Ö#] ^
,
Ö#Ö#^ _
$num
Ö#Ö#` e
)
Ö#Ö#e f
;
Ö#Ö#f g
fontSize
Ü#Ü#$ ,
-=
Ü#Ü#- /
	sizeDelta
Ü#Ü#0 9
;
Ü#Ü#9 :
fontSize
á#á#$ ,
=
á#á#- .
Mathf
á#á#/ 4
.
á#á#4 5
Max
á#á#5 8
(
á#á#8 9
(
á#á#9 :
int
á#á#: =
)
á#á#= >
(
á#á#> ?
fontSize
á#á#? G
*
á#á#H I
$num
á#á#J L
+
á#á#M N
$num
á#á#O S
)
á#á#S T
/
á#á#U V
$num
á#á#W Z
,
á#á#Z [
m_fontSizeMin
á#á#\ i
)
á#á#i j
;
á#á#j k
return
ä#ä#$ *
Vector2
ä#ä#+ 2
.
ä#ä#2 3
zero
ä#ä#3 7
;
ä#ä#7 8
}
ã#ã#  !
}
ç#ç# 
float
ë#ë# !%
baselineAdjustmentDelta
ë#ë#" 9
=
ë#ë#: ;
m_maxLineAscender
ë#ë#< M
-
ë#ë#N O#
m_startOfLineAscender
ë#ë#P e
;
ë#ë#e f
if
í#í# 
(
í#í#  
m_lineOffset
í#í#  ,
>
í#í#- .
$num
í#í#/ 0
&&
í#í#1 3
Math
í#í#4 8
.
í#í#8 9
Abs
í#í#9 <
(
í#í#< =%
baselineAdjustmentDelta
í#í#= T
)
í#í#T U
>
í#í#V W
$num
í#í#X ]
&&
í#í#^ `#
m_IsDrivenLineSpacing
í#í#a v
==
í#í#w y
false
í#í#z 
&&í#í#Ä Ç
!í#í#É Ñ
m_isNewPageí#í#Ñ è
)í#í#è ê
{
ì#ì#  
m_ElementDescender
ï#ï#  2
-=
ï#ï#3 5%
baselineAdjustmentDelta
ï#ï#6 M
;
ï#ï#M N
m_lineOffset
ñ#ñ#  ,
+=
ñ#ñ#- /%
baselineAdjustmentDelta
ñ#ñ#0 G
;
ñ#ñ#G H
}
ó#ó# 
float
ö#ö# !
lineAscender
ö#ö#" .
=
ö#ö#/ 0
m_maxLineAscender
ö#ö#1 B
-
ö#ö#C D
m_lineOffset
ö#ö#E Q
;
ö#ö#Q R
float
õ#õ# !
lineDescender
õ#õ#" /
=
õ#õ#0 1 
m_maxLineDescender
õ#õ#2 D
-
õ#õ#E F
m_lineOffset
õ#õ#G S
;
õ#õ#S T 
m_ElementDescender
û#û# .
=
û#û#/ 0 
m_ElementDescender
û#û#1 C
<
û#û#D E
lineDescender
û#û#F S
?
û#û#T U 
m_ElementDescender
û#û#V h
:
û#û#i j
lineDescender
û#û#k x
;
û#û#x y
if
ü#ü# 
(
ü#ü#  
!
ü#ü#  !&
isMaxVisibleDescenderSet
ü#ü#! 9
)
ü#ü#9 :!
maxVisibleDescender
†#†#  3
=
†#†#4 5 
m_ElementDescender
†#†#6 H
;
†#†#H I
if
¢#¢# 
(
¢#¢#  &
m_useMaxVisibleDescender
¢#¢#  8
&&
¢#¢#9 ;
(
¢#¢#< =
m_characterCount
¢#¢#= M
>=
¢#¢#N P$
m_maxVisibleCharacters
¢#¢#Q g
||
¢#¢#h j
m_lineNumber
¢#¢#k w
>=
¢#¢#x z 
m_maxVisibleLines¢#¢#{ å
)¢#¢#å ç
)¢#¢#ç é&
isMaxVisibleDescenderSet
£#£#  8
=
£#£#9 :
true
£#£#; ?
;
£#£#? @$
m_firstCharacterOfLine
¶#¶# 2
=
¶#¶#3 4
m_characterCount
¶#¶#5 E
;
¶#¶#E F)
m_lineVisibleCharacterCount
ß#ß# 7
=
ß#ß#8 9
$num
ß#ß#: ;
;
ß#ß#; <
renderedWidth
™#™# )
+=
™#™#* ,

m_xAdvance
™#™#- 7
;
™#™#7 8
if
¨#¨# 
(
¨#¨#  #
isWordWrappingEnabled
¨#¨#  5
)
¨#¨#5 6
renderedHeight
≠#≠#  .
=
≠#≠#/ 0
m_maxTextAscender
≠#≠#1 B
-
≠#≠#C D 
m_ElementDescender
≠#≠#E W
;
≠#≠#W X
else
Æ#Æ#  
renderedHeight
Ø#Ø#  .
=
Ø#Ø#/ 0
Mathf
Ø#Ø#1 6
.
Ø#Ø#6 7
Max
Ø#Ø#7 :
(
Ø#Ø#: ;
renderedHeight
Ø#Ø#; I
,
Ø#Ø#I J
lineAscender
Ø#Ø#K W
-
Ø#Ø#X Y
lineDescender
Ø#Ø#Z g
)
Ø#Ø#g h
;
Ø#Ø#h i#
SaveWordWrappingState
≤#≤# 1
(
≤#≤#1 2
ref
≤#≤#2 5
internalLineState
≤#≤#6 G
,
≤#≤#G H
i
≤#≤#I J
,
≤#≤#J K
m_characterCount
≤#≤#L \
-
≤#≤#] ^
$num
≤#≤#_ `
)
≤#≤#` a
;
≤#≤#a b
m_lineNumber
¥#¥# (
+=
¥#¥#) +
$num
¥#¥#, -
;
¥#¥#- .
float
∂#∂# !
ascender
∂#∂#" *
=
∂#∂#+ ,%
m_internalCharacterInfo
∂#∂#- D
[
∂#∂#D E
m_characterCount
∂#∂#E U
]
∂#∂#U V
.
∂#∂#V W
adjustedAscender
∂#∂#W g
;
∂#∂#g h
if
π#π# 
(
π#π#  
m_lineHeight
π#π#  ,
==
π#π#- /
TMP_Math
π#π#0 8
.
π#π#8 9
FLOAT_UNSET
π#π#9 D
)
π#π#D E
{
∫#∫# 
m_lineOffset
ª#ª#  ,
+=
ª#ª#- /
$num
ª#ª#0 1
-
ª#ª#2 3 
m_maxLineDescender
ª#ª#4 F
+
ª#ª#G H
ascender
ª#ª#I Q
+
ª#ª#R S
(
ª#ª#T U
lineGap
ª#ª#U \
+
ª#ª#] ^ 
m_lineSpacingDelta
ª#ª#_ q
)
ª#ª#q r
*
ª#ª#s t
	baseScale
ª#ª#u ~
+ª#ª# Ä
m_lineSpacingª#ª#Å é
*ª#ª#è ê
currentEmScaleª#ª#ë ü
;ª#ª#ü †#
m_IsDrivenLineSpacing
º#º#  5
=
º#º#6 7
false
º#º#8 =
;
º#º#= >
}
Ω#Ω# 
else
æ#æ#  
{
ø#ø# 
m_lineOffset
¿#¿#  ,
+=
¿#¿#- /
m_lineHeight
¿#¿#0 <
+
¿#¿#= >
m_lineSpacing
¿#¿#? L
*
¿#¿#M N
currentEmScale
¿#¿#O ]
;
¿#¿#] ^#
m_IsDrivenLineSpacing
¡#¡#  5
=
¡#¡#6 7
true
¡#¡#8 <
;
¡#¡#< =
}
¬#¬# 
m_maxLineAscender
ƒ#ƒ# -
=
ƒ#ƒ#. /"
k_LargeNegativeFloat
ƒ#ƒ#0 D
;
ƒ#ƒ#D E 
m_maxLineDescender
≈#≈# .
=
≈#≈#/ 0"
k_LargePositiveFloat
≈#≈#1 E
;
≈#≈#E F#
m_startOfLineAscender
∆#∆# 1
=
∆#∆#2 3
ascender
∆#∆#4 <
;
∆#∆#< =

m_xAdvance
»#»# &
=
»#»#' (
$num
»#»#) *
+
»#»#+ ,

tag_Indent
»#»#- 7
;
»#»#7 8
isFirstWordOfLine
 # # -
=
 # #. /
true
 # #0 4
;
 # #4 5
continue
À#À# $
;
À#À#$ %
}
Ã#Ã# 
}
Õ#Õ# 
lineMarginLeft
–#–# "
=
–#–## $
m_marginLeft
–#–#% 1
;
–#–#1 2
lineMarginRight
—#—# #
=
—#—#$ %
m_marginRight
—#—#& 3
;
—#—#3 4
}
”#”# 
if
È#È# 
(
È#È# 
charCode
È#È# 
==
È#È# 
$num
È#È#  !
)
È#È#! "
{
Í#Í# 
float
Î#Î# 
tabSize
Î#Î# !
=
Î#Î#" # 
m_currentFontAsset
Î#Î#$ 6
.
Î#Î#6 7
faceInfo
Î#Î#7 ?
.
Î#Î#? @
tabWidth
Î#Î#@ H
*
Î#Î#I J 
m_currentFontAsset
Î#Î#K ]
.
Î#Î#] ^
tabSize
Î#Î#^ e
*
Î#Î#f g!
currentElementScale
Î#Î#h {
;
Î#Î#{ |
float
Ï#Ï# 
tabs
Ï#Ï# 
=
Ï#Ï#  
Mathf
Ï#Ï#! &
.
Ï#Ï#& '
Ceil
Ï#Ï#' +
(
Ï#Ï#+ ,

m_xAdvance
Ï#Ï#, 6
/
Ï#Ï#7 8
tabSize
Ï#Ï#9 @
)
Ï#Ï#@ A
*
Ï#Ï#B C
tabSize
Ï#Ï#D K
;
Ï#Ï#K L

m_xAdvance
Ì#Ì# 
=
Ì#Ì#  
tabs
Ì#Ì#! %
>
Ì#Ì#& '

m_xAdvance
Ì#Ì#( 2
?
Ì#Ì#3 4
tabs
Ì#Ì#5 9
:
Ì#Ì#: ;

m_xAdvance
Ì#Ì#< F
+
Ì#Ì#G H
tabSize
Ì#Ì#I P
;
Ì#Ì#P Q
}
Ó#Ó# 
else
Ô#Ô# 
if
Ô#Ô# 
(
Ô#Ô# 
m_monoSpacing
Ô#Ô# &
!=
Ô#Ô#' )
$num
Ô#Ô#* +
)
Ô#Ô#+ ,
{
## 

m_xAdvance
Ò#Ò# 
+=
Ò#Ò# !
(
Ò#Ò#" #
m_monoSpacing
Ò#Ò## 0
-
Ò#Ò#1 2
monoAdvance
Ò#Ò#3 >
+
Ò#Ò#? @
(
Ò#Ò#A B
(
Ò#Ò#B C 
m_currentFontAsset
Ò#Ò#C U
.
Ò#Ò#U V!
normalSpacingOffset
Ò#Ò#V i
+
Ò#Ò#j k)
characterSpacingAdjustmentÒ#Ò#l Ü
)Ò#Ò#Ü á
*Ò#Ò#à â
currentEmScaleÒ#Ò#ä ò
)Ò#Ò#ò ô
+Ò#Ò#ö õ

m_cSpacingÒ#Ò#ú ¶
)Ò#Ò#¶ ß
*Ò#Ò#® ©
(Ò#Ò#™ ´
$numÒ#Ò#´ ¨
-Ò#Ò#≠ Æ#
m_charWidthAdjDeltaÒ#Ò#Ø ¬
)Ò#Ò#¬ √
;Ò#Ò#√ ƒ
if
Û#Û# 
(
Û#Û# 
isWhiteSpace
Û#Û# $
||
Û#Û#% '
charCode
Û#Û#( 0
==
Û#Û#1 3
$num
Û#Û#4 :
)
Û#Û#: ;

m_xAdvance
Ù#Ù# "
+=
Ù#Ù## %
m_wordSpacing
Ù#Ù#& 3
*
Ù#Ù#4 5
currentEmScale
Ù#Ù#6 D
;
Ù#Ù#D E
}
ı#ı# 
else
ˆ#ˆ# 
{
˜#˜# 

m_xAdvance
¯#¯# 
+=
¯#¯# !
(
¯#¯#" #
(
¯#¯## $!
currentGlyphMetrics
¯#¯#$ 7
.
¯#¯#7 8
horizontalAdvance
¯#¯#8 I
+
¯#¯#J K
glyphAdjustments
¯#¯#L \
.
¯#¯#\ ]
xAdvance
¯#¯#] e
)
¯#¯#e f
*
¯#¯#g h!
currentElementScale
¯#¯#i |
+
¯#¯#} ~
(¯#¯# Ä"
m_currentFontAsset¯#¯#Ä í
.¯#¯#í ì#
normalSpacingOffset¯#¯#ì ¶
+¯#¯#ß ®*
characterSpacingAdjustment¯#¯#© √
+¯#¯#ƒ ≈%
boldSpacingAdjustment¯#¯#∆ €
)¯#¯#€ ‹
*¯#¯#› ﬁ
currentEmScale¯#¯#ﬂ Ì
+¯#¯#Ó Ô

m_cSpacing¯#¯# ˙
)¯#¯#˙ ˚
*¯#¯#¸ ˝
(¯#¯#˛ ˇ
$num¯#¯#ˇ Ä
-¯#¯#Å Ç#
m_charWidthAdjDelta¯#¯#É ñ
)¯#¯#ñ ó
;¯#¯#ó ò
if
˙#˙# 
(
˙#˙# 
isWhiteSpace
˙#˙# $
||
˙#˙#% '
charCode
˙#˙#( 0
==
˙#˙#1 3
$num
˙#˙#4 :
)
˙#˙#: ;

m_xAdvance
˚#˚# "
+=
˚#˚## %
m_wordSpacing
˚#˚#& 3
*
˚#˚#4 5
currentEmScale
˚#˚#6 D
;
˚#˚#D E
}
¸#¸# 
if
Ç$Ç$ 
(
Ç$Ç$ 
charCode
Ç$Ç$ 
==
Ç$Ç$ 
$num
Ç$Ç$  "
)
Ç$Ç$" #
{
É$É$ 
maxXAdvance
Ñ$Ñ$ 
=
Ñ$Ñ$  !
Mathf
Ñ$Ñ$" '
.
Ñ$Ñ$' (
Max
Ñ$Ñ$( +
(
Ñ$Ñ$+ ,
maxXAdvance
Ñ$Ñ$, 7
,
Ñ$Ñ$7 8
renderedWidth
Ñ$Ñ$9 F
+
Ñ$Ñ$G H

m_xAdvance
Ñ$Ñ$I S
)
Ñ$Ñ$S T
;
Ñ$Ñ$T U
renderedWidth
Ö$Ö$ !
=
Ö$Ö$" #
$num
Ö$Ö$$ %
;
Ö$Ö$% &

m_xAdvance
Ü$Ü$ 
=
Ü$Ü$  
$num
Ü$Ü$! "
+
Ü$Ü$# $

tag_Indent
Ü$Ü$% /
;
Ü$Ü$/ 0
}
á$á$ 
if
ç$ç$ 
(
ç$ç$ 
charCode
ç$ç$ 
==
ç$ç$ 
$num
ç$ç$  "
||
ç$ç$# %
charCode
ç$ç$& .
==
ç$ç$/ 1
$num
ç$ç$2 4
||
ç$ç$5 7
charCode
ç$ç$8 @
==
ç$ç$A C
$num
ç$ç$D H
||
ç$ç$I K
charCode
ç$ç$L T
==
ç$ç$U W
$num
ç$ç$X ^
||
ç$ç$_ a
charCode
ç$ç$b j
==
ç$ç$k m
$num
ç$ç$n t
||
ç$ç$u w
m_characterCountç$ç$x à
==ç$ç$â ã#
totalCharacterCountç$ç$å ü
-ç$ç$† °
$numç$ç$¢ £
)ç$ç$£ §
{
é$é$ 
float
ê$ê$ %
baselineAdjustmentDelta
ê$ê$ 1
=
ê$ê$2 3
m_maxLineAscender
ê$ê$4 E
-
ê$ê$F G#
m_startOfLineAscender
ê$ê$H ]
;
ê$ê$] ^
if
ë$ë$ 
(
ë$ë$ 
m_lineOffset
ë$ë$ $
>
ë$ë$% &
$num
ë$ë$' (
&&
ë$ë$) +
Math
ë$ë$, 0
.
ë$ë$0 1
Abs
ë$ë$1 4
(
ë$ë$4 5%
baselineAdjustmentDelta
ë$ë$5 L
)
ë$ë$L M
>
ë$ë$N O
$num
ë$ë$P U
&&
ë$ë$V X#
m_IsDrivenLineSpacing
ë$ë$Y n
==
ë$ë$o q
false
ë$ë$r w
&&
ë$ë$x z
!
ë$ë${ |
m_isNewPageë$ë$| á
)ë$ë$á à
{
í$í$  
m_ElementDescender
ì$ì$ *
-=
ì$ì$+ -%
baselineAdjustmentDelta
ì$ì$. E
;
ì$ì$E F
m_lineOffset
î$î$ $
+=
î$î$% '%
baselineAdjustmentDelta
î$î$( ?
;
î$î$? @
}
ï$ï$ 
m_isNewPage
ñ$ñ$ 
=
ñ$ñ$  !
false
ñ$ñ$" '
;
ñ$ñ$' (
float
ö$ö$ 
lineDescender
ö$ö$ '
=
ö$ö$( ) 
m_maxLineDescender
ö$ö$* <
-
ö$ö$= >
m_lineOffset
ö$ö$? K
;
ö$ö$K L 
m_ElementDescender
ù$ù$ &
=
ù$ù$' ( 
m_ElementDescender
ù$ù$) ;
<
ù$ù$< =
lineDescender
ù$ù$> K
?
ù$ù$L M 
m_ElementDescender
ù$ù$N `
:
ù$ù$a b
lineDescender
ù$ù$c p
;
ù$ù$p q
if
†$†$ 
(
†$†$ 
m_characterCount
†$†$ (
==
†$†$) +!
totalCharacterCount
†$†$, ?
-
†$†$@ A
$num
†$†$B C
)
†$†$C D
renderedWidth
°$°$ %
=
°$°$& '
Mathf
°$°$( -
.
°$°$- .
Max
°$°$. 1
(
°$°$1 2
maxXAdvance
°$°$2 =
,
°$°$= >
renderedWidth
°$°$? L
+
°$°$M N
	textWidth
°$°$O X
+
°$°$Y Z
lineMarginLeft
°$°$[ i
+
°$°$j k
lineMarginRight
°$°$l {
)
°$°${ |
;
°$°$| }
else
¢$¢$ 
{
£$£$ 
maxXAdvance
§$§$ #
=
§$§$$ %
Mathf
§$§$& +
.
§$§$+ ,
Max
§$§$, /
(
§$§$/ 0
maxXAdvance
§$§$0 ;
,
§$§$; <
renderedWidth
§$§$= J
+
§$§$K L
	textWidth
§$§$M V
+
§$§$W X
lineMarginLeft
§$§$Y g
+
§$§$h i
lineMarginRight
§$§$j y
)
§$§$y z
;
§$§$z {
renderedWidth
•$•$ %
=
•$•$& '
$num
•$•$( )
;
•$•$) *
}
¶$¶$ 
renderedHeight
®$®$ "
=
®$®$# $
m_maxTextAscender
®$®$% 6
-
®$®$7 8 
m_ElementDescender
®$®$9 K
;
®$®$K L
if
´$´$ 
(
´$´$ 
charCode
´$´$  
==
´$´$! #
$num
´$´$$ &
||
´$´$' )
charCode
´$´$* 2
==
´$´$3 5
$num
´$´$6 8
||
´$´$9 ;
charCode
´$´$< D
==
´$´$E G
$num
´$´$H L
||
´$´$M O
charCode
´$´$P X
==
´$´$Y [
$num
´$´$\ b
||
´$´$c e
charCode
´$´$f n
==
´$´$o q
$num
´$´$r x
)
´$´$x y
{
¨$¨$ #
SaveWordWrappingState
Æ$Æ$ -
(
Æ$Æ$- .
ref
Æ$Æ$. 1
internalLineState
Æ$Æ$2 C
,
Æ$Æ$C D
i
Æ$Æ$E F
,
Æ$Æ$F G
m_characterCount
Æ$Æ$H X
)
Æ$Æ$X Y
;
Æ$Æ$Y Z#
SaveWordWrappingState
∞$∞$ -
(
∞$∞$- .
ref
∞$∞$. 1#
internalWordWrapState
∞$∞$2 G
,
∞$∞$G H
i
∞$∞$I J
,
∞$∞$J K
m_characterCount
∞$∞$L \
)
∞$∞$\ ]
;
∞$∞$] ^
m_lineNumber
≤$≤$ $
+=
≤$≤$% '
$num
≤$≤$( )
;
≤$≤$) *$
m_firstCharacterOfLine
≥$≥$ .
=
≥$≥$/ 0
m_characterCount
≥$≥$1 A
+
≥$≥$B C
$num
≥$≥$D E
;
≥$≥$E F
float
µ$µ$ 
ascender
µ$µ$ &
=
µ$µ$' (%
m_internalCharacterInfo
µ$µ$) @
[
µ$µ$@ A
m_characterCount
µ$µ$A Q
]
µ$µ$Q R
.
µ$µ$R S
adjustedAscender
µ$µ$S c
;
µ$µ$c d
if
∏$∏$ 
(
∏$∏$ 
m_lineHeight
∏$∏$ (
==
∏$∏$) +
TMP_Math
∏$∏$, 4
.
∏$∏$4 5
FLOAT_UNSET
∏$∏$5 @
)
∏$∏$@ A
{
π$π$ 
float
∫$∫$ !
lineOffsetDelta
∫$∫$" 1
=
∫$∫$2 3
$num
∫$∫$4 5
-
∫$∫$6 7 
m_maxLineDescender
∫$∫$8 J
+
∫$∫$K L
ascender
∫$∫$M U
+
∫$∫$V W
(
∫$∫$X Y
lineGap
∫$∫$Y `
+
∫$∫$a b 
m_lineSpacingDelta
∫$∫$c u
)
∫$∫$u v
*
∫$∫$w x
	baseScale∫$∫$y Ç
+∫$∫$É Ñ
(∫$∫$Ö Ü
m_lineSpacing∫$∫$Ü ì
+∫$∫$î ï
(∫$∫$ñ ó
charCode∫$∫$ó ü
==∫$∫$† ¢
$num∫$∫$£ •
||∫$∫$¶ ®
charCode∫$∫$© ±
==∫$∫$≤ ¥
$num∫$∫$µ ª
?∫$∫$º Ω"
m_paragraphSpacing∫$∫$æ –
:∫$∫$— “
$num∫$∫$” ‘
)∫$∫$‘ ’
)∫$∫$’ ÷
*∫$∫$◊ ÿ
currentEmScale∫$∫$Ÿ Á
;∫$∫$Á Ë
m_lineOffset
ª$ª$ (
+=
ª$ª$) +
lineOffsetDelta
ª$ª$, ;
;
ª$ª$; <#
m_IsDrivenLineSpacing
º$º$ 1
=
º$º$2 3
false
º$º$4 9
;
º$º$9 :
}
Ω$Ω$ 
else
æ$æ$ 
{
ø$ø$ 
m_lineOffset
¿$¿$ (
+=
¿$¿$) +
m_lineHeight
¿$¿$, 8
+
¿$¿$9 :
(
¿$¿$; <
m_lineSpacing
¿$¿$< I
+
¿$¿$J K
(
¿$¿$L M
charCode
¿$¿$M U
==
¿$¿$V X
$num
¿$¿$Y [
||
¿$¿$\ ^
charCode
¿$¿$_ g
==
¿$¿$h j
$num
¿$¿$k q
?
¿$¿$r s!
m_paragraphSpacing¿$¿$t Ü
:¿$¿$á à
$num¿$¿$â ä
)¿$¿$ä ã
)¿$¿$ã å
*¿$¿$ç é
currentEmScale¿$¿$è ù
;¿$¿$ù û#
m_IsDrivenLineSpacing
¡$¡$ 1
=
¡$¡$2 3
true
¡$¡$4 8
;
¡$¡$8 9
}
¬$¬$ 
m_maxLineAscender
ƒ$ƒ$ )
=
ƒ$ƒ$* +"
k_LargeNegativeFloat
ƒ$ƒ$, @
;
ƒ$ƒ$@ A 
m_maxLineDescender
≈$≈$ *
=
≈$≈$+ ,"
k_LargePositiveFloat
≈$≈$- A
;
≈$≈$A B#
m_startOfLineAscender
∆$∆$ -
=
∆$∆$. /
ascender
∆$∆$0 8
;
∆$∆$8 9

m_xAdvance
»$»$ "
=
»$»$# $
$num
»$»$% &
+
»$»$' (
tag_LineIndent
»$»$) 7
+
»$»$8 9

tag_Indent
»$»$: D
;
»$»$D E
m_characterCount
 $ $ (
+=
 $ $) +
$num
 $ $, -
;
 $ $- .
continue
À$À$  
;
À$À$  !
}
Ã$Ã$ 
if
œ$œ$ 
(
œ$œ$ 
charCode
œ$œ$  
==
œ$œ$! #
$num
œ$œ$$ (
)
œ$œ$( )
i
–$–$ 
=
–$–$ #
m_TextProcessingArray
–$–$ 1
.
–$–$1 2
Length
–$–$2 8
;
–$–$8 9
}
—$—$ 
if
◊$◊$ 
(
◊$◊$ #
isWordWrappingEnabled
◊$◊$ )
||
◊$◊$* ,
m_overflowMode
◊$◊$- ;
==
◊$◊$< >
TextOverflowModes
◊$◊$? P
.
◊$◊$P Q
Truncate
◊$◊$Q Y
||
◊$◊$Z \
m_overflowMode
◊$◊$] k
==
◊$◊$l n 
TextOverflowModes◊$◊$o Ä
.◊$◊$Ä Å
Ellipsis◊$◊$Å â
)◊$◊$â ä
{
ÿ$ÿ$ 
if
Ÿ$Ÿ$ 
(
Ÿ$Ÿ$ 
(
Ÿ$Ÿ$ 
isWhiteSpace
Ÿ$Ÿ$ %
||
Ÿ$Ÿ$& (
charCode
Ÿ$Ÿ$) 1
==
Ÿ$Ÿ$2 4
$num
Ÿ$Ÿ$5 ;
||
Ÿ$Ÿ$< >
charCode
Ÿ$Ÿ$? G
==
Ÿ$Ÿ$H J
$num
Ÿ$Ÿ$K O
||
Ÿ$Ÿ$P R
charCode
Ÿ$Ÿ$S [
==
Ÿ$Ÿ$\ ^
$num
Ÿ$Ÿ$_ c
)
Ÿ$Ÿ$c d
&&
Ÿ$Ÿ$e g
!
Ÿ$Ÿ$h i"
m_isNonBreakingSpace
Ÿ$Ÿ$i }
&&Ÿ$Ÿ$~ Ä
charCodeŸ$Ÿ$Å â
!=Ÿ$Ÿ$ä å
$numŸ$Ÿ$ç ë
&&Ÿ$Ÿ$í î
charCodeŸ$Ÿ$ï ù
!=Ÿ$Ÿ$û †
$numŸ$Ÿ$° ß
&&Ÿ$Ÿ$® ™
charCodeŸ$Ÿ$´ ≥
!=Ÿ$Ÿ$¥ ∂
$numŸ$Ÿ$∑ Ω
&&Ÿ$Ÿ$æ ¿
charCodeŸ$Ÿ$¡ …
!=Ÿ$Ÿ$  Ã
$numŸ$Ÿ$Õ ”
&&Ÿ$Ÿ$‘ ÷
charCodeŸ$Ÿ$◊ ﬂ
!=Ÿ$Ÿ$‡ ‚
$numŸ$Ÿ$„ È
)Ÿ$Ÿ$È Í
{
⁄$⁄$ #
SaveWordWrappingState
›$›$ -
(
›$›$- .
ref
›$›$. 1#
internalWordWrapState
›$›$2 G
,
›$›$G H
i
›$›$I J
,
›$›$J K
m_characterCount
›$›$L \
)
›$›$\ ]
;
›$›$] ^
isFirstWordOfLine
ﬁ$ﬁ$ )
=
ﬁ$ﬁ$* +
false
ﬁ$ﬁ$, 1
;
ﬁ$ﬁ$1 2 
isLastCharacterCJK
ﬂ$ﬂ$ *
=
ﬂ$ﬂ$+ ,
false
ﬂ$ﬂ$- 2
;
ﬂ$ﬂ$2 3#
internalSoftLineBreak
‚$‚$ -
.
‚$‚$- . 
previous_WordBreak
‚$‚$. @
=
‚$‚$A B
-
‚$‚$C D
$num
‚$‚$D E
;
‚$‚$E F
}
„$„$ 
else
Â$Â$ 
if
Â$Â$ 
(
Â$Â$ "
m_isNonBreakingSpace
Â$Â$ 1
==
Â$Â$2 4
false
Â$Â$5 :
&&
Â$Â$; =
(
Ê$Ê$ 
(
Ê$Ê$ 
charCode
Ê$Ê$ '
>
Ê$Ê$( )
$num
Ê$Ê$* 0
&&
Ê$Ê$1 3
charCode
Ê$Ê$4 <
<
Ê$Ê$= >
$num
Ê$Ê$? E
||
Ê$Ê$F H
charCode
Á$Á$ '
>
Á$Á$( )
$num
Á$Á$* 0
&&
Á$Á$1 3
charCode
Á$Á$4 <
<
Á$Á$= >
$num
Á$Á$? E
||
Á$Á$F H
charCode
Ë$Ë$ '
>
Ë$Ë$( )
$num
Ë$Ë$* 0
&&
Ë$Ë$1 3
charCode
Ë$Ë$4 <
<
Ë$Ë$= >
$num
Ë$Ë$? E
)
Ë$Ë$E F
&&
Ë$Ë$F H
TMP_Settings
È$È$ *
.
È$È$* +.
 useModernHangulLineBreakingRules
È$È$+ K
==
È$È$L N
false
È$È$O T
||
È$È$U W
(
Î$Î$ 
charCode
Î$Î$ '
>
Î$Î$( )
$num
Î$Î$* 0
&&
Î$Î$1 3
charCode
Î$Î$4 <
<
Î$Î$= >
$num
Î$Î$? E
||
Î$Î$F H
charCode
Ï$Ï$ '
>
Ï$Ï$( )
$num
Ï$Ï$* 0
&&
Ï$Ï$1 3
charCode
Ï$Ï$4 <
<
Ï$Ï$= >
$num
Ï$Ï$? E
||
Ï$Ï$F H
charCode
Ì$Ì$ '
>
Ì$Ì$( )
$num
Ì$Ì$* 0
&&
Ì$Ì$1 3
charCode
Ì$Ì$4 <
<
Ì$Ì$= >
$num
Ì$Ì$? E
||
Ì$Ì$F H
charCode
Ó$Ó$ '
>
Ó$Ó$( )
$num
Ó$Ó$* 0
&&
Ó$Ó$1 3
charCode
Ó$Ó$4 <
<
Ó$Ó$= >
$num
Ó$Ó$? E
)
Ó$Ó$E F
)
Ó$Ó$F G
)
Ó$Ó$G H
{
Ô$Ô$ 
bool
$$  
isLeadingCharacter
$$ /
=
$$0 1
TMP_Settings
$$2 >
.
$$> ?
linebreakingRules
$$? P
.
$$P Q
leadingCharacters
$$Q b
.
$$b c
ContainsKey
$$c n
(
$$n o
charCode
$$o w
)
$$w x
;
$$x y
bool
Ò$Ò$ "
isFollowingCharacter
Ò$Ò$ 1
=
Ò$Ò$2 3
m_characterCount
Ò$Ò$4 D
<
Ò$Ò$E F!
totalCharacterCount
Ò$Ò$G Z
-
Ò$Ò$[ \
$num
Ò$Ò$] ^
&&
Ò$Ò$_ a
TMP_Settings
Ò$Ò$b n
.
Ò$Ò$n o 
linebreakingRulesÒ$Ò$o Ä
.Ò$Ò$Ä Å#
followingCharactersÒ$Ò$Å î
.Ò$Ò$î ï
ContainsKeyÒ$Ò$ï †
(Ò$Ò$† °'
m_internalCharacterInfoÒ$Ò$° ∏
[Ò$Ò$∏ π 
m_characterCountÒ$Ò$π …
+Ò$Ò$  À
$numÒ$Ò$Ã Õ
]Ò$Ò$Õ Œ
.Ò$Ò$Œ œ
	characterÒ$Ò$œ ÿ
)Ò$Ò$ÿ Ÿ
;Ò$Ò$Ÿ ⁄
if
Û$Û$ 
(
Û$Û$ 
isFirstWordOfLine
Û$Û$ -
||
Û$Û$. 0 
isLeadingCharacter
Û$Û$1 C
==
Û$Û$D F
false
Û$Û$G L
)
Û$Û$L M
{
Ù$Ù$ 
if
ı$ı$ 
(
ı$ı$  "
isFollowingCharacter
ı$ı$  4
==
ı$ı$5 7
false
ı$ı$8 =
)
ı$ı$= >
{
ˆ$ˆ$ #
SaveWordWrappingState
˜$˜$  5
(
˜$˜$5 6
ref
˜$˜$6 9#
internalWordWrapState
˜$˜$: O
,
˜$˜$O P
i
˜$˜$Q R
,
˜$˜$R S
m_characterCount
˜$˜$T d
)
˜$˜$d e
;
˜$˜$e f
isFirstWordOfLine
¯$¯$  1
=
¯$¯$2 3
false
¯$¯$4 9
;
¯$¯$9 :
}
˘$˘$ 
if
˚$˚$ 
(
˚$˚$  
isFirstWordOfLine
˚$˚$  1
)
˚$˚$1 2
{
¸$¸$ 
if
˛$˛$  "
(
˛$˛$# $
isWhiteSpace
˛$˛$$ 0
)
˛$˛$0 1#
SaveWordWrappingState
ˇ$ˇ$$ 9
(
ˇ$ˇ$9 :
ref
ˇ$ˇ$: =#
internalSoftLineBreak
ˇ$ˇ$> S
,
ˇ$ˇ$S T
i
ˇ$ˇ$U V
,
ˇ$ˇ$V W
m_characterCount
ˇ$ˇ$X h
)
ˇ$ˇ$h i
;
ˇ$ˇ$i j#
SaveWordWrappingState
Å%Å%  5
(
Å%Å%5 6
ref
Å%Å%6 9#
internalWordWrapState
Å%Å%: O
,
Å%Å%O P
i
Å%Å%Q R
,
Å%Å%R S
m_characterCount
Å%Å%T d
)
Å%Å%d e
;
Å%Å%e f
}
Ç%Ç% 
}
É%É%  
isLastCharacterCJK
Ö%Ö% *
=
Ö%Ö%+ ,
true
Ö%Ö%- 1
;
Ö%Ö%1 2
}
Ü%Ü% 
else
á%á% 
if
á%á% 
(
á%á%  
isLastCharacterCJK
á%á% /
)
á%á%/ 0
{
à%à% 
bool
â%â%  
isLeadingCharacter
â%â% /
=
â%â%0 1
TMP_Settings
â%â%2 >
.
â%â%> ?
linebreakingRules
â%â%? P
.
â%â%P Q
leadingCharacters
â%â%Q b
.
â%â%b c
ContainsKey
â%â%c n
(
â%â%n o
charCode
â%â%o w
)
â%â%w x
;
â%â%x y
if
ã%ã% 
(
ã%ã%  
isLeadingCharacter
ã%ã% .
==
ã%ã%/ 1
false
ã%ã%2 7
)
ã%ã%7 8#
SaveWordWrappingState
å%å% 1
(
å%å%1 2
ref
å%å%2 5#
internalWordWrapState
å%å%6 K
,
å%å%K L
i
å%å%M N
,
å%å%N O
m_characterCount
å%å%P `
)
å%å%` a
;
å%å%a b 
isLastCharacterCJK
é%é% *
=
é%é%+ ,
false
é%é%- 2
;
é%é%2 3
}
è%è% 
else
ê%ê% 
if
ê%ê% 
(
ê%ê% 
isFirstWordOfLine
ê%ê% .
)
ê%ê%. /
{
ë%ë% 
if
ì%ì% 
(
ì%ì% 
isWhiteSpace
ì%ì% (
||
ì%ì%) +
(
ì%ì%, -
charCode
ì%ì%- 5
==
ì%ì%6 8
$num
ì%ì%9 =
&&
ì%ì%> @!
isSoftHyphenIgnored
ì%ì%A T
==
ì%ì%U W
false
ì%ì%X ]
)
ì%ì%] ^
)
ì%ì%^ _#
SaveWordWrappingState
î%î% 1
(
î%î%1 2
ref
î%î%2 5#
internalSoftLineBreak
î%î%6 K
,
î%î%K L
i
î%î%M N
,
î%î%N O
m_characterCount
î%î%P `
)
î%î%` a
;
î%î%a b#
SaveWordWrappingState
ñ%ñ% -
(
ñ%ñ%- .
ref
ñ%ñ%. 1#
internalWordWrapState
ñ%ñ%2 G
,
ñ%ñ%G H
i
ñ%ñ%I J
,
ñ%ñ%J K
m_characterCount
ñ%ñ%L \
)
ñ%ñ%\ ]
;
ñ%ñ%] ^ 
isLastCharacterCJK
ó%ó% *
=
ó%ó%+ ,
false
ó%ó%- 2
;
ó%ó%2 3
}
ò%ò% 
}
ô%ô% 
m_characterCount
ú%ú%  
+=
ú%ú%! #
$num
ú%ú%$ %
;
ú%ú%% &
}
ù%ù% 
fontSizeDelta
°%°% 
=
°%°% 
m_maxFontSize
°%°% )
-
°%°%* +
m_minFontSize
°%°%, 9
;
°%°%9 :
if
¢%¢% 
(
¢%¢% %
isTextAutoSizingEnabled
¢%¢% '
&&
¢%¢%( *
fontSizeDelta
¢%¢%+ 8
>
¢%¢%9 :
$num
¢%¢%; A
&&
¢%¢%B D
fontSize
¢%¢%E M
<
¢%¢%N O
m_fontSizeMax
¢%¢%P ]
&&
¢%¢%^ `&
m_AutoSizeIterationCount
¢%¢%a y
<
¢%¢%z {*
m_AutoSizeMaxIterationCount¢%¢%| ó
)¢%¢%ó ò
{
£%£% 
if
•%•% 
(
•%•% !
m_charWidthAdjDelta
•%•% '
<
•%•%( )
m_charWidthMaxAdj
•%•%* ;
/
•%•%< =
$num
•%•%> A
)
•%•%A B!
m_charWidthAdjDelta
¶%¶% '
=
¶%¶%( )
$num
¶%¶%* +
;
¶%¶%+ ,
m_minFontSize
®%®% 
=
®%®% 
fontSize
®%®%  (
;
®%®%( )
float
™%™% 
	sizeDelta
™%™% 
=
™%™%  !
Mathf
™%™%" '
.
™%™%' (
Max
™%™%( +
(
™%™%+ ,
(
™%™%, -
m_maxFontSize
™%™%- :
-
™%™%; <
fontSize
™%™%= E
)
™%™%E F
/
™%™%G H
$num
™%™%I J
,
™%™%J K
$num
™%™%L Q
)
™%™%Q R
;
™%™%R S
fontSize
´%´% 
+=
´%´% 
	sizeDelta
´%´% %
;
´%´%% &
fontSize
¨%¨% 
=
¨%¨% 
Mathf
¨%¨%  
.
¨%¨%  !
Min
¨%¨%! $
(
¨%¨%$ %
(
¨%¨%% &
int
¨%¨%& )
)
¨%¨%) *
(
¨%¨%* +
fontSize
¨%¨%+ 3
*
¨%¨%4 5
$num
¨%¨%6 8
+
¨%¨%9 :
$num
¨%¨%; ?
)
¨%¨%? @
/
¨%¨%A B
$num
¨%¨%C F
,
¨%¨%F G
m_fontSizeMax
¨%¨%H U
)
¨%¨%U V
;
¨%¨%V W
return
Ø%Ø% 
Vector2
Ø%Ø% 
.
Ø%Ø% 
zero
Ø%Ø% #
;
Ø%Ø%# $
}
∞%∞% &
m_IsAutoSizePointSizeSet
≥%≥% $
=
≥%≥%% &
true
≥%≥%' +
;
≥%≥%+ ,,
m_isCalculatingPreferredValues
µ%µ% *
=
µ%µ%+ ,
false
µ%µ%- 2
;
µ%µ%2 3
renderedWidth
∏%∏% 
+=
∏%∏% 
m_margin
∏%∏% %
.
∏%∏%% &
x
∏%∏%& '
>
∏%∏%( )
$num
∏%∏%* +
?
∏%∏%, -
m_margin
∏%∏%. 6
.
∏%∏%6 7
x
∏%∏%7 8
:
∏%∏%9 :
$num
∏%∏%; <
;
∏%∏%< =
renderedWidth
π%π% 
+=
π%π% 
m_margin
π%π% %
.
π%π%% &
z
π%π%& '
>
π%π%( )
$num
π%π%* +
?
π%π%, -
m_margin
π%π%. 6
.
π%π%6 7
z
π%π%7 8
:
π%π%9 :
$num
π%π%; <
;
π%π%< =
renderedHeight
ª%ª% 
+=
ª%ª% 
m_margin
ª%ª% &
.
ª%ª%& '
y
ª%ª%' (
>
ª%ª%) *
$num
ª%ª%+ ,
?
ª%ª%- .
m_margin
ª%ª%/ 7
.
ª%ª%7 8
y
ª%ª%8 9
:
ª%ª%: ;
$num
ª%ª%< =
;
ª%ª%= >
renderedHeight
º%º% 
+=
º%º% 
m_margin
º%º% &
.
º%º%& '
w
º%º%' (
>
º%º%) *
$num
º%º%+ ,
?
º%º%- .
m_margin
º%º%/ 7
.
º%º%7 8
w
º%º%8 9
:
º%º%: ;
$num
º%º%< =
;
º%º%= >
renderedWidth
ø%ø% 
=
ø%ø% 
(
ø%ø% 
int
ø%ø%  
)
ø%ø%  !
(
ø%ø%! "
renderedWidth
ø%ø%" /
*
ø%ø%0 1
$num
ø%ø%2 5
+
ø%ø%6 7
$num
ø%ø%8 :
)
ø%ø%: ;
/
ø%ø%< =
$num
ø%ø%> B
;
ø%ø%B C
renderedHeight
¿%¿% 
=
¿%¿% 
(
¿%¿% 
int
¿%¿% !
)
¿%¿%! "
(
¿%¿%" #
renderedHeight
¿%¿%# 1
*
¿%¿%2 3
$num
¿%¿%4 7
+
¿%¿%8 9
$num
¿%¿%: <
)
¿%¿%< =
/
¿%¿%> ?
$num
¿%¿%@ D
;
¿%¿%D E
return
ƒ%ƒ% 
new
ƒ%ƒ% 
Vector2
ƒ%ƒ% 
(
ƒ%ƒ% 
renderedWidth
ƒ%ƒ% ,
,
ƒ%ƒ%, -
renderedHeight
ƒ%ƒ%. <
)
ƒ%ƒ%< =
;
ƒ%ƒ%= >
}
≈%≈% 	
	protected
Ã%Ã% 
virtual
Ã%Ã% 
Bounds
Ã%Ã%  
GetCompoundBounds
Ã%Ã%! 2
(
Ã%Ã%2 3
)
Ã%Ã%3 4
{
Ã%Ã%5 6
return
Ã%Ã%7 =
new
Ã%Ã%> A
Bounds
Ã%Ã%B H
(
Ã%Ã%H I
)
Ã%Ã%I J
;
Ã%Ã%J K
}
Ã%Ã%L M
internal
Œ%Œ% 
virtual
Œ%Œ% 
Rect
Œ%Œ% (
GetCanvasSpaceClippingRect
Œ%Œ% 8
(
Œ%Œ%8 9
)
Œ%Œ%9 :
{
Œ%Œ%; <
return
Œ%Œ%= C
Rect
Œ%Œ%D H
.
Œ%Œ%H I
zero
Œ%Œ%I M
;
Œ%Œ%M N
}
Œ%Œ%O P
	protected
‘%‘% 
Bounds
‘%‘% 
GetTextBounds
‘%‘% &
(
‘%‘%& '
)
‘%‘%' (
{
’%’% 	
if
÷%÷% 
(
÷%÷% 

m_textInfo
÷%÷% 
==
÷%÷% 
null
÷%÷% "
||
÷%÷%# %

m_textInfo
÷%÷%& 0
.
÷%÷%0 1
characterCount
÷%÷%1 ?
>
÷%÷%@ A

m_textInfo
÷%÷%B L
.
÷%÷%L M
characterInfo
÷%÷%M Z
.
÷%÷%Z [
Length
÷%÷%[ a
)
÷%÷%a b
return
÷%÷%c i
new
÷%÷%j m
Bounds
÷%÷%n t
(
÷%÷%t u
)
÷%÷%u v
;
÷%÷%v w
Extents
ÿ%ÿ% 
extent
ÿ%ÿ% 
=
ÿ%ÿ% 
new
ÿ%ÿ%  
Extents
ÿ%ÿ%! (
(
ÿ%ÿ%( )$
k_LargePositiveVector2
ÿ%ÿ%) ?
,
ÿ%ÿ%? @$
k_LargeNegativeVector2
ÿ%ÿ%A W
)
ÿ%ÿ%W X
;
ÿ%ÿ%X Y
for
⁄%⁄% 
(
⁄%⁄% 
int
⁄%⁄% 
i
⁄%⁄% 
=
⁄%⁄% 
$num
⁄%⁄% 
;
⁄%⁄% 
i
⁄%⁄% 
<
⁄%⁄% 

m_textInfo
⁄%⁄%  *
.
⁄%⁄%* +
characterCount
⁄%⁄%+ 9
&&
⁄%⁄%: <
i
⁄%⁄%= >
<
⁄%⁄%? @

m_textInfo
⁄%⁄%A K
.
⁄%⁄%K L
characterInfo
⁄%⁄%L Y
.
⁄%⁄%Y Z
Length
⁄%⁄%Z `
;
⁄%⁄%` a
i
⁄%⁄%b c
++
⁄%⁄%c e
)
⁄%⁄%e f
{
€%€% 
if
‹%‹% 
(
‹%‹% 
!
‹%‹% 

m_textInfo
‹%‹% 
.
‹%‹%  
characterInfo
‹%‹%  -
[
‹%‹%- .
i
‹%‹%. /
]
‹%‹%/ 0
.
‹%‹%0 1
	isVisible
‹%‹%1 :
)
‹%‹%: ;
continue
›%›% 
;
›%›% 
extent
ﬂ%ﬂ% 
.
ﬂ%ﬂ% 
min
ﬂ%ﬂ% 
.
ﬂ%ﬂ% 
x
ﬂ%ﬂ% 
=
ﬂ%ﬂ% 
Mathf
ﬂ%ﬂ% $
.
ﬂ%ﬂ%$ %
Min
ﬂ%ﬂ%% (
(
ﬂ%ﬂ%( )
extent
ﬂ%ﬂ%) /
.
ﬂ%ﬂ%/ 0
min
ﬂ%ﬂ%0 3
.
ﬂ%ﬂ%3 4
x
ﬂ%ﬂ%4 5
,
ﬂ%ﬂ%5 6

m_textInfo
ﬂ%ﬂ%7 A
.
ﬂ%ﬂ%A B
characterInfo
ﬂ%ﬂ%B O
[
ﬂ%ﬂ%O P
i
ﬂ%ﬂ%P Q
]
ﬂ%ﬂ%Q R
.
ﬂ%ﬂ%R S
origin
ﬂ%ﬂ%S Y
)
ﬂ%ﬂ%Y Z
;
ﬂ%ﬂ%Z [
extent
‡%‡% 
.
‡%‡% 
min
‡%‡% 
.
‡%‡% 
y
‡%‡% 
=
‡%‡% 
Mathf
‡%‡% $
.
‡%‡%$ %
Min
‡%‡%% (
(
‡%‡%( )
extent
‡%‡%) /
.
‡%‡%/ 0
min
‡%‡%0 3
.
‡%‡%3 4
y
‡%‡%4 5
,
‡%‡%5 6

m_textInfo
‡%‡%7 A
.
‡%‡%A B
characterInfo
‡%‡%B O
[
‡%‡%O P
i
‡%‡%P Q
]
‡%‡%Q R
.
‡%‡%R S
	descender
‡%‡%S \
)
‡%‡%\ ]
;
‡%‡%] ^
extent
‚%‚% 
.
‚%‚% 
max
‚%‚% 
.
‚%‚% 
x
‚%‚% 
=
‚%‚% 
Mathf
‚%‚% $
.
‚%‚%$ %
Max
‚%‚%% (
(
‚%‚%( )
extent
‚%‚%) /
.
‚%‚%/ 0
max
‚%‚%0 3
.
‚%‚%3 4
x
‚%‚%4 5
,
‚%‚%5 6

m_textInfo
‚%‚%7 A
.
‚%‚%A B
characterInfo
‚%‚%B O
[
‚%‚%O P
i
‚%‚%P Q
]
‚%‚%Q R
.
‚%‚%R S
xAdvance
‚%‚%S [
)
‚%‚%[ \
;
‚%‚%\ ]
extent
„%„% 
.
„%„% 
max
„%„% 
.
„%„% 
y
„%„% 
=
„%„% 
Mathf
„%„% $
.
„%„%$ %
Max
„%„%% (
(
„%„%( )
extent
„%„%) /
.
„%„%/ 0
max
„%„%0 3
.
„%„%3 4
y
„%„%4 5
,
„%„%5 6

m_textInfo
„%„%7 A
.
„%„%A B
characterInfo
„%„%B O
[
„%„%O P
i
„%„%P Q
]
„%„%Q R
.
„%„%R S
ascender
„%„%S [
)
„%„%[ \
;
„%„%\ ]
}
‰%‰% 
Vector2
Ê%Ê% 
size
Ê%Ê% 
;
Ê%Ê% 
size
Á%Á% 
.
Á%Á% 
x
Á%Á% 
=
Á%Á% 
extent
Á%Á% 
.
Á%Á% 
max
Á%Á% 
.
Á%Á%  
x
Á%Á%  !
-
Á%Á%" #
extent
Á%Á%$ *
.
Á%Á%* +
min
Á%Á%+ .
.
Á%Á%. /
x
Á%Á%/ 0
;
Á%Á%0 1
size
Ë%Ë% 
.
Ë%Ë% 
y
Ë%Ë% 
=
Ë%Ë% 
extent
Ë%Ë% 
.
Ë%Ë% 
max
Ë%Ë% 
.
Ë%Ë%  
y
Ë%Ë%  !
-
Ë%Ë%" #
extent
Ë%Ë%$ *
.
Ë%Ë%* +
min
Ë%Ë%+ .
.
Ë%Ë%. /
y
Ë%Ë%/ 0
;
Ë%Ë%0 1
Vector3
Í%Í% 
center
Í%Í% 
=
Í%Í% 
(
Í%Í% 
extent
Í%Í% $
.
Í%Í%$ %
min
Í%Í%% (
+
Í%Í%) *
extent
Í%Í%+ 1
.
Í%Í%1 2
max
Í%Í%2 5
)
Í%Í%5 6
/
Í%Í%7 8
$num
Í%Í%9 :
;
Í%Í%: ;
return
Ï%Ï% 
new
Ï%Ï% 
Bounds
Ï%Ï% 
(
Ï%Ï% 
center
Ï%Ï% $
,
Ï%Ï%$ %
size
Ï%Ï%& *
)
Ï%Ï%* +
;
Ï%Ï%+ ,
}
Ì%Ì% 	
	protected
ı%ı% 
Bounds
ı%ı% 
GetTextBounds
ı%ı% &
(
ı%ı%& '
bool
ı%ı%' +#
onlyVisibleCharacters
ı%ı%, A
)
ı%ı%A B
{
ˆ%ˆ% 	
if
˜%˜% 
(
˜%˜% 

m_textInfo
˜%˜% 
==
˜%˜% 
null
˜%˜% "
)
˜%˜%" #
return
˜%˜%$ *
new
˜%˜%+ .
Bounds
˜%˜%/ 5
(
˜%˜%5 6
)
˜%˜%6 7
;
˜%˜%7 8
Extents
˘%˘% 
extent
˘%˘% 
=
˘%˘% 
new
˘%˘%  
Extents
˘%˘%! (
(
˘%˘%( )$
k_LargePositiveVector2
˘%˘%) ?
,
˘%˘%? @$
k_LargeNegativeVector2
˘%˘%A W
)
˘%˘%W X
;
˘%˘%X Y
for
˚%˚% 
(
˚%˚% 
int
˚%˚% 
i
˚%˚% 
=
˚%˚% 
$num
˚%˚% 
;
˚%˚% 
i
˚%˚% 
<
˚%˚% 

m_textInfo
˚%˚%  *
.
˚%˚%* +
characterCount
˚%˚%+ 9
;
˚%˚%9 :
i
˚%˚%; <
++
˚%˚%< >
)
˚%˚%> ?
{
¸%¸% 
if
˝%˝% 
(
˝%˝% 
(
˝%˝% 
i
˝%˝% 
>
˝%˝% "
maxVisibleCharacters
˝%˝% -
||
˝%˝%. 0

m_textInfo
˝%˝%1 ;
.
˝%˝%; <
characterInfo
˝%˝%< I
[
˝%˝%I J
i
˝%˝%J K
]
˝%˝%K L
.
˝%˝%L M

lineNumber
˝%˝%M W
>
˝%˝%X Y
m_maxVisibleLines
˝%˝%Z k
)
˝%˝%k l
&&
˝%˝%m o$
onlyVisibleCharacters˝%˝%p Ö
)˝%˝%Ö Ü
break
˛%˛% 
;
˛%˛% 
if
Ä&Ä& 
(
Ä&Ä& #
onlyVisibleCharacters
Ä&Ä& )
&&
Ä&Ä&* ,
!
Ä&Ä&- .

m_textInfo
Ä&Ä&. 8
.
Ä&Ä&8 9
characterInfo
Ä&Ä&9 F
[
Ä&Ä&F G
i
Ä&Ä&G H
]
Ä&Ä&H I
.
Ä&Ä&I J
	isVisible
Ä&Ä&J S
)
Ä&Ä&S T
continue
Å&Å& 
;
Å&Å& 
extent
É&É& 
.
É&É& 
min
É&É& 
.
É&É& 
x
É&É& 
=
É&É& 
Mathf
É&É& $
.
É&É&$ %
Min
É&É&% (
(
É&É&( )
extent
É&É&) /
.
É&É&/ 0
min
É&É&0 3
.
É&É&3 4
x
É&É&4 5
,
É&É&5 6

m_textInfo
É&É&7 A
.
É&É&A B
characterInfo
É&É&B O
[
É&É&O P
i
É&É&P Q
]
É&É&Q R
.
É&É&R S
origin
É&É&S Y
)
É&É&Y Z
;
É&É&Z [
extent
Ñ&Ñ& 
.
Ñ&Ñ& 
min
Ñ&Ñ& 
.
Ñ&Ñ& 
y
Ñ&Ñ& 
=
Ñ&Ñ& 
Mathf
Ñ&Ñ& $
.
Ñ&Ñ&$ %
Min
Ñ&Ñ&% (
(
Ñ&Ñ&( )
extent
Ñ&Ñ&) /
.
Ñ&Ñ&/ 0
min
Ñ&Ñ&0 3
.
Ñ&Ñ&3 4
y
Ñ&Ñ&4 5
,
Ñ&Ñ&5 6

m_textInfo
Ñ&Ñ&7 A
.
Ñ&Ñ&A B
characterInfo
Ñ&Ñ&B O
[
Ñ&Ñ&O P
i
Ñ&Ñ&P Q
]
Ñ&Ñ&Q R
.
Ñ&Ñ&R S
	descender
Ñ&Ñ&S \
)
Ñ&Ñ&\ ]
;
Ñ&Ñ&] ^
extent
Ü&Ü& 
.
Ü&Ü& 
max
Ü&Ü& 
.
Ü&Ü& 
x
Ü&Ü& 
=
Ü&Ü& 
Mathf
Ü&Ü& $
.
Ü&Ü&$ %
Max
Ü&Ü&% (
(
Ü&Ü&( )
extent
Ü&Ü&) /
.
Ü&Ü&/ 0
max
Ü&Ü&0 3
.
Ü&Ü&3 4
x
Ü&Ü&4 5
,
Ü&Ü&5 6

m_textInfo
Ü&Ü&7 A
.
Ü&Ü&A B
characterInfo
Ü&Ü&B O
[
Ü&Ü&O P
i
Ü&Ü&P Q
]
Ü&Ü&Q R
.
Ü&Ü&R S
xAdvance
Ü&Ü&S [
)
Ü&Ü&[ \
;
Ü&Ü&\ ]
extent
á&á& 
.
á&á& 
max
á&á& 
.
á&á& 
y
á&á& 
=
á&á& 
Mathf
á&á& $
.
á&á&$ %
Max
á&á&% (
(
á&á&( )
extent
á&á&) /
.
á&á&/ 0
max
á&á&0 3
.
á&á&3 4
y
á&á&4 5
,
á&á&5 6

m_textInfo
á&á&7 A
.
á&á&A B
characterInfo
á&á&B O
[
á&á&O P
i
á&á&P Q
]
á&á&Q R
.
á&á&R S
ascender
á&á&S [
)
á&á&[ \
;
á&á&\ ]
}
à&à& 
Vector2
ä&ä& 
size
ä&ä& 
;
ä&ä& 
size
ã&ã& 
.
ã&ã& 
x
ã&ã& 
=
ã&ã& 
extent
ã&ã& 
.
ã&ã& 
max
ã&ã& 
.
ã&ã&  
x
ã&ã&  !
-
ã&ã&" #
extent
ã&ã&$ *
.
ã&ã&* +
min
ã&ã&+ .
.
ã&ã&. /
x
ã&ã&/ 0
;
ã&ã&0 1
size
å&å& 
.
å&å& 
y
å&å& 
=
å&å& 
extent
å&å& 
.
å&å& 
max
å&å& 
.
å&å&  
y
å&å&  !
-
å&å&" #
extent
å&å&$ *
.
å&å&* +
min
å&å&+ .
.
å&å&. /
y
å&å&/ 0
;
å&å&0 1
Vector2
é&é& 
center
é&é& 
=
é&é& 
(
é&é& 
extent
é&é& $
.
é&é&$ %
min
é&é&% (
+
é&é&) *
extent
é&é&+ 1
.
é&é&1 2
max
é&é&2 5
)
é&é&5 6
/
é&é&7 8
$num
é&é&9 :
;
é&é&: ;
return
ê&ê& 
new
ê&ê& 
Bounds
ê&ê& 
(
ê&ê& 
center
ê&ê& $
,
ê&ê&$ %
size
ê&ê&& *
)
ê&ê&* +
;
ê&ê&+ ,
}
ë&ë& 	
	protected
õ&õ& 
void
õ&õ& 
AdjustLineOffset
õ&õ& '
(
õ&õ&' (
int
õ&õ&( +

startIndex
õ&õ&, 6
,
õ&õ&6 7
int
õ&õ&8 ;
endIndex
õ&õ&< D
,
õ&õ&D E
float
õ&õ&F K
offset
õ&õ&L R
)
õ&õ&R S
{
ú&ú& 	
Vector3
ù&ù& 
vertexOffset
ù&ù&  
=
ù&ù&! "
new
ù&ù&# &
Vector3
ù&ù&' .
(
ù&ù&. /
$num
ù&ù&/ 0
,
ù&ù&0 1
offset
ù&ù&2 8
,
ù&ù&8 9
$num
ù&ù&: ;
)
ù&ù&; <
;
ù&ù&< =
for
ü&ü& 
(
ü&ü& 
int
ü&ü& 
i
ü&ü& 
=
ü&ü& 

startIndex
ü&ü& #
;
ü&ü&# $
i
ü&ü&% &
<=
ü&ü&' )
endIndex
ü&ü&* 2
;
ü&ü&2 3
i
ü&ü&4 5
++
ü&ü&5 7
)
ü&ü&7 8
{
†&†& 

m_textInfo
°&°& 
.
°&°& 
characterInfo
°&°& (
[
°&°&( )
i
°&°&) *
]
°&°&* +
.
°&°&+ ,

bottomLeft
°&°&, 6
-=
°&°&7 9
vertexOffset
°&°&: F
;
°&°&F G

m_textInfo
¢&¢& 
.
¢&¢& 
characterInfo
¢&¢& (
[
¢&¢&( )
i
¢&¢&) *
]
¢&¢&* +
.
¢&¢&+ ,
topLeft
¢&¢&, 3
-=
¢&¢&4 6
vertexOffset
¢&¢&7 C
;
¢&¢&C D

m_textInfo
£&£& 
.
£&£& 
characterInfo
£&£& (
[
£&£&( )
i
£&£&) *
]
£&£&* +
.
£&£&+ ,
topRight
£&£&, 4
-=
£&£&5 7
vertexOffset
£&£&8 D
;
£&£&D E

m_textInfo
§&§& 
.
§&§& 
characterInfo
§&§& (
[
§&§&( )
i
§&§&) *
]
§&§&* +
.
§&§&+ ,
bottomRight
§&§&, 7
-=
§&§&8 :
vertexOffset
§&§&; G
;
§&§&G H

m_textInfo
¶&¶& 
.
¶&¶& 
characterInfo
¶&¶& (
[
¶&¶&( )
i
¶&¶&) *
]
¶&¶&* +
.
¶&¶&+ ,
ascender
¶&¶&, 4
-=
¶&¶&5 7
vertexOffset
¶&¶&8 D
.
¶&¶&D E
y
¶&¶&E F
;
¶&¶&F G

m_textInfo
ß&ß& 
.
ß&ß& 
characterInfo
ß&ß& (
[
ß&ß&( )
i
ß&ß&) *
]
ß&ß&* +
.
ß&ß&+ ,
baseLine
ß&ß&, 4
-=
ß&ß&5 7
vertexOffset
ß&ß&8 D
.
ß&ß&D E
y
ß&ß&E F
;
ß&ß&F G

m_textInfo
®&®& 
.
®&®& 
characterInfo
®&®& (
[
®&®&( )
i
®&®&) *
]
®&®&* +
.
®&®&+ ,
	descender
®&®&, 5
-=
®&®&6 8
vertexOffset
®&®&9 E
.
®&®&E F
y
®&®&F G
;
®&®&G H
if
™&™& 
(
™&™& 

m_textInfo
™&™& 
.
™&™& 
characterInfo
™&™& ,
[
™&™&, -
i
™&™&- .
]
™&™&. /
.
™&™&/ 0
	isVisible
™&™&0 9
)
™&™&9 :
{
´&´& 

m_textInfo
¨&¨& 
.
¨&¨& 
characterInfo
¨&¨& ,
[
¨&¨&, -
i
¨&¨&- .
]
¨&¨&. /
.
¨&¨&/ 0
	vertex_BL
¨&¨&0 9
.
¨&¨&9 :
position
¨&¨&: B
-=
¨&¨&C E
vertexOffset
¨&¨&F R
;
¨&¨&R S

m_textInfo
≠&≠& 
.
≠&≠& 
characterInfo
≠&≠& ,
[
≠&≠&, -
i
≠&≠&- .
]
≠&≠&. /
.
≠&≠&/ 0
	vertex_TL
≠&≠&0 9
.
≠&≠&9 :
position
≠&≠&: B
-=
≠&≠&C E
vertexOffset
≠&≠&F R
;
≠&≠&R S

m_textInfo
Æ&Æ& 
.
Æ&Æ& 
characterInfo
Æ&Æ& ,
[
Æ&Æ&, -
i
Æ&Æ&- .
]
Æ&Æ&. /
.
Æ&Æ&/ 0
	vertex_TR
Æ&Æ&0 9
.
Æ&Æ&9 :
position
Æ&Æ&: B
-=
Æ&Æ&C E
vertexOffset
Æ&Æ&F R
;
Æ&Æ&R S

m_textInfo
Ø&Ø& 
.
Ø&Ø& 
characterInfo
Ø&Ø& ,
[
Ø&Ø&, -
i
Ø&Ø&- .
]
Ø&Ø&. /
.
Ø&Ø&/ 0
	vertex_BR
Ø&Ø&0 9
.
Ø&Ø&9 :
position
Ø&Ø&: B
-=
Ø&Ø&C E
vertexOffset
Ø&Ø&F R
;
Ø&Ø&R S
}
∞&∞& 
}
±&±& 
}
≤&≤& 	
	protected
π&π& 
void
π&π& 
ResizeLineExtents
π&π& (
(
π&π&( )
int
π&π&) ,
size
π&π&- 1
)
π&π&1 2
{
∫&∫& 	
size
ª&ª& 
=
ª&ª& 
size
ª&ª& 
>
ª&ª& 
$num
ª&ª& 
?
ª&ª&  
size
ª&ª&! %
+
ª&ª&& '
$num
ª&ª&( +
:
ª&ª&, -
Mathf
ª&ª&. 3
.
ª&ª&3 4
NextPowerOfTwo
ª&ª&4 B
(
ª&ª&B C
size
ª&ª&C G
+
ª&ª&H I
$num
ª&ª&J K
)
ª&ª&K L
;
ª&ª&L M
TMP_LineInfo
Ω&Ω& 
[
Ω&Ω& 
]
Ω&Ω& 
temp_lineInfo
Ω&Ω& (
=
Ω&Ω&) *
new
Ω&Ω&+ .
TMP_LineInfo
Ω&Ω&/ ;
[
Ω&Ω&; <
size
Ω&Ω&< @
]
Ω&Ω&@ A
;
Ω&Ω&A B
for
æ&æ& 
(
æ&æ& 
int
æ&æ& 
i
æ&æ& 
=
æ&æ& 
$num
æ&æ& 
;
æ&æ& 
i
æ&æ& 
<
æ&æ& 
size
æ&æ&  $
;
æ&æ&$ %
i
æ&æ&& '
++
æ&æ&' )
)
æ&æ&) *
{
ø&ø& 
if
¿&¿& 
(
¿&¿& 
i
¿&¿& 
<
¿&¿& 

m_textInfo
¿&¿& "
.
¿&¿&" #
lineInfo
¿&¿&# +
.
¿&¿&+ ,
Length
¿&¿&, 2
)
¿&¿&2 3
temp_lineInfo
¡&¡& !
[
¡&¡&! "
i
¡&¡&" #
]
¡&¡&# $
=
¡&¡&% &

m_textInfo
¡&¡&' 1
.
¡&¡&1 2
lineInfo
¡&¡&2 :
[
¡&¡&: ;
i
¡&¡&; <
]
¡&¡&< =
;
¡&¡&= >
else
¬&¬& 
{
√&√& 
temp_lineInfo
ƒ&ƒ& !
[
ƒ&ƒ&! "
i
ƒ&ƒ&" #
]
ƒ&ƒ&# $
.
ƒ&ƒ&$ %
lineExtents
ƒ&ƒ&% 0
.
ƒ&ƒ&0 1
min
ƒ&ƒ&1 4
=
ƒ&ƒ&5 6$
k_LargePositiveVector2
ƒ&ƒ&7 M
;
ƒ&ƒ&M N
temp_lineInfo
≈&≈& !
[
≈&≈&! "
i
≈&≈&" #
]
≈&≈&# $
.
≈&≈&$ %
lineExtents
≈&≈&% 0
.
≈&≈&0 1
max
≈&≈&1 4
=
≈&≈&5 6$
k_LargeNegativeVector2
≈&≈&7 M
;
≈&≈&M N
temp_lineInfo
«&«& !
[
«&«&! "
i
«&«&" #
]
«&«&# $
.
«&«&$ %
ascender
«&«&% -
=
«&«&. /"
k_LargeNegativeFloat
«&«&0 D
;
«&«&D E
temp_lineInfo
»&»& !
[
»&»&! "
i
»&»&" #
]
»&»&# $
.
»&»&$ %
	descender
»&»&% .
=
»&»&/ 0"
k_LargePositiveFloat
»&»&1 E
;
»&»&E F
}
…&…& 
}
 & & 

m_textInfo
Ã&Ã& 
.
Ã&Ã& 
lineInfo
Ã&Ã& 
=
Ã&Ã&  !
temp_lineInfo
Ã&Ã&" /
;
Ã&Ã&/ 0
}
Õ&Õ& 	
	protected
Œ&Œ& 
static
Œ&Œ& 
Vector2
Œ&Œ&  $
k_LargePositiveVector2
Œ&Œ&! 7
=
Œ&Œ&8 9
new
Œ&Œ&: =
Vector2
Œ&Œ&> E
(
Œ&Œ&E F
TMP_Math
Œ&Œ&F N
.
Œ&Œ&N O
INT_MAX
Œ&Œ&O V
,
Œ&Œ&V W
TMP_Math
Œ&Œ&X `
.
Œ&Œ&` a
INT_MAX
Œ&Œ&a h
)
Œ&Œ&h i
;
Œ&Œ&i j
	protected
œ&œ& 
static
œ&œ& 
Vector2
œ&œ&  $
k_LargeNegativeVector2
œ&œ&! 7
=
œ&œ&8 9
new
œ&œ&: =
Vector2
œ&œ&> E
(
œ&œ&E F
TMP_Math
œ&œ&F N
.
œ&œ&N O
INT_MIN
œ&œ&O V
,
œ&œ&V W
TMP_Math
œ&œ&X `
.
œ&œ&` a
INT_MIN
œ&œ&a h
)
œ&œ&h i
;
œ&œ&i j
	protected
–&–& 
static
–&–& 
float
–&–& "
k_LargePositiveFloat
–&–& 3
=
–&–&4 5
TMP_Math
–&–&6 >
.
–&–&> ?
	FLOAT_MAX
–&–&? H
;
–&–&H I
	protected
—&—& 
static
—&—& 
float
—&—& "
k_LargeNegativeFloat
—&—& 3
=
—&—&4 5
TMP_Math
—&—&6 >
.
—&—&> ?
	FLOAT_MIN
—&—&? H
;
—&—&H I
	protected
“&“& 
static
“&“& 
int
“&“&  
k_LargePositiveInt
“&“& /
=
“&“&0 1
TMP_Math
“&“&2 :
.
“&“&: ;
INT_MAX
“&“&; B
;
“&“&B C
	protected
”&”& 
static
”&”& 
int
”&”&  
k_LargeNegativeInt
”&”& /
=
”&”&0 1
TMP_Math
”&”&2 :
.
”&”&: ;
INT_MIN
”&”&; B
;
”&”&B C
public
⁄&⁄& 
virtual
⁄&⁄& 
TMP_TextInfo
⁄&⁄& #
GetTextInfo
⁄&⁄&$ /
(
⁄&⁄&/ 0
string
⁄&⁄&0 6
text
⁄&⁄&7 ;
)
⁄&⁄&; <
{
⁄&⁄&= >
return
⁄&⁄&? E
null
⁄&⁄&F J
;
⁄&⁄&J K
}
⁄&⁄&L M
public
‡&‡& 
virtual
‡&‡& 
void
‡&‡& 
ComputeMarginSize
‡&‡& -
(
‡&‡&- .
)
‡&‡&. /
{
‡&‡&0 1
}
‡&‡&2 3
	protected
ñ'ñ' 
void
ñ'ñ' 
InsertNewLine
ñ'ñ' $
(
ñ'ñ'$ %
int
ñ'ñ'% (
i
ñ'ñ') *
,
ñ'ñ'* +
float
ñ'ñ', 1
	baseScale
ñ'ñ'2 ;
,
ñ'ñ'; <
float
ñ'ñ'= B!
currentElementScale
ñ'ñ'C V
,
ñ'ñ'V W
float
ñ'ñ'X ]
currentEmScale
ñ'ñ'^ l
,
ñ'ñ'l m
float
ñ'ñ'n s
glyphAdjustmentñ'ñ't É
,ñ'ñ'É Ñ
floatñ'ñ'Ö ä%
boldSpacingAdjustmentñ'ñ'ã †
,ñ'ñ'† °
floatñ'ñ'¢ ß*
characterSpacingAdjustmentñ'ñ'® ¬
,ñ'ñ'¬ √
floatñ'ñ'ƒ …
widthñ'ñ'  œ
,ñ'ñ'œ –
floatñ'ñ'— ÷
lineGapñ'ñ'◊ ﬁ
,ñ'ñ'ﬁ ﬂ
refñ'ñ'‡ „
boolñ'ñ'‰ Ë(
isMaxVisibleDescenderSetñ'ñ'È Å
,ñ'ñ'Å Ç
refñ'ñ'É Ü
floatñ'ñ'á å#
maxVisibleDescenderñ'ñ'ç †
)ñ'ñ'† °
{
ó'ó' 	#
k_InsertNewLineMarker
ò'ò' !
.
ò'ò'! "
Begin
ò'ò'" '
(
ò'ò'' (
)
ò'ò'( )
;
ò'ò') *
float
õ'õ' %
baselineAdjustmentDelta
õ'õ' )
=
õ'õ'* +
m_maxLineAscender
õ'õ', =
-
õ'õ'> ?#
m_startOfLineAscender
õ'õ'@ U
;
õ'õ'U V
if
ú'ú' 
(
ú'ú' 
m_lineOffset
ú'ú' 
>
ú'ú' 
$num
ú'ú'  
&&
ú'ú'! #
Math
ú'ú'$ (
.
ú'ú'( )
Abs
ú'ú') ,
(
ú'ú', -%
baselineAdjustmentDelta
ú'ú'- D
)
ú'ú'D E
>
ú'ú'F G
$num
ú'ú'H M
&&
ú'ú'N P#
m_IsDrivenLineSpacing
ú'ú'Q f
==
ú'ú'g i
false
ú'ú'j o
&&
ú'ú'p r
!
ú'ú's t
m_isNewPage
ú'ú't 
)ú'ú' Ä
{
ù'ù' 
AdjustLineOffset
û'û'  
(
û'û'  !$
m_firstCharacterOfLine
û'û'! 7
,
û'û'7 8
m_characterCount
û'û'9 I
,
û'û'I J%
baselineAdjustmentDelta
û'û'K b
)
û'û'b c
;
û'û'c d 
m_ElementDescender
ü'ü' "
-=
ü'ü'# %%
baselineAdjustmentDelta
ü'ü'& =
;
ü'ü'= >
m_lineOffset
†'†' 
+=
†'†' %
baselineAdjustmentDelta
†'†'  7
;
†'†'7 8
}
°'°' 
float
§'§' 
lineAscender
§'§' 
=
§'§'  
m_maxLineAscender
§'§'! 2
-
§'§'3 4
m_lineOffset
§'§'5 A
;
§'§'A B
float
•'•' 
lineDescender
•'•' 
=
•'•'  ! 
m_maxLineDescender
•'•'" 4
-
•'•'5 6
m_lineOffset
•'•'7 C
;
•'•'C D 
m_ElementDescender
®'®' 
=
®'®'   
m_ElementDescender
®'®'! 3
<
®'®'4 5
lineDescender
®'®'6 C
?
®'®'D E 
m_ElementDescender
®'®'F X
:
®'®'Y Z
lineDescender
®'®'[ h
;
®'®'h i
if
©'©' 
(
©'©' 
!
©'©' &
isMaxVisibleDescenderSet
©'©' )
)
©'©') *!
maxVisibleDescender
™'™' #
=
™'™'$ % 
m_ElementDescender
™'™'& 8
;
™'™'8 9
if
¨'¨' 
(
¨'¨' &
m_useMaxVisibleDescender
¨'¨' (
&&
¨'¨') +
(
¨'¨', -
m_characterCount
¨'¨'- =
>=
¨'¨'> @$
m_maxVisibleCharacters
¨'¨'A W
||
¨'¨'X Z
m_lineNumber
¨'¨'[ g
>=
¨'¨'h j
m_maxVisibleLines
¨'¨'k |
)
¨'¨'| }
)
¨'¨'} ~&
isMaxVisibleDescenderSet
≠'≠' (
=
≠'≠') *
true
≠'≠'+ /
;
≠'≠'/ 0

m_textInfo
∞'∞' 
.
∞'∞' 
lineInfo
∞'∞' 
[
∞'∞'  
m_lineNumber
∞'∞'  ,
]
∞'∞', -
.
∞'∞'- .!
firstCharacterIndex
∞'∞'. A
=
∞'∞'B C$
m_firstCharacterOfLine
∞'∞'D Z
;
∞'∞'Z [

m_textInfo
±'±' 
.
±'±' 
lineInfo
±'±' 
[
±'±'  
m_lineNumber
±'±'  ,
]
±'±', -
.
±'±'- .(
firstVisibleCharacterIndex
±'±'. H
=
±'±'I J+
m_firstVisibleCharacterOfLine
±'±'K h
=
±'±'i j%
m_firstCharacterOfLine±'±'k Å
>±'±'Ç É-
m_firstVisibleCharacterOfLine±'±'Ñ °
?±'±'¢ £&
m_firstCharacterOfLine±'±'§ ∫
:±'±'ª º-
m_firstVisibleCharacterOfLine±'±'Ω ⁄
;±'±'⁄ €
int
≤'≤'  
lastCharacterIndex
≤'≤' "
=
≤'≤'# $

m_textInfo
≤'≤'% /
.
≤'≤'/ 0
lineInfo
≤'≤'0 8
[
≤'≤'8 9
m_lineNumber
≤'≤'9 E
]
≤'≤'E F
.
≤'≤'F G 
lastCharacterIndex
≤'≤'G Y
=
≤'≤'Z [#
m_lastCharacterOfLine
≤'≤'\ q
=
≤'≤'r s
m_characterCount≤'≤'t Ñ
-≤'≤'Ö Ü
$num≤'≤'á à
>≤'≤'â ä
$num≤'≤'ã å
?≤'≤'ç é 
m_characterCount≤'≤'è ü
-≤'≤'† °
$num≤'≤'¢ £
:≤'≤'§ •
$num≤'≤'¶ ß
;≤'≤'ß ®

m_textInfo
≥'≥' 
.
≥'≥' 
lineInfo
≥'≥' 
[
≥'≥'  
m_lineNumber
≥'≥'  ,
]
≥'≥', -
.
≥'≥'- .'
lastVisibleCharacterIndex
≥'≥'. G
=
≥'≥'H I*
m_lastVisibleCharacterOfLine
≥'≥'J f
=
≥'≥'g h+
m_lastVisibleCharacterOfLine≥'≥'i Ö
<≥'≥'Ü á-
m_firstVisibleCharacterOfLine≥'≥'à •
?≥'≥'¶ ß-
m_firstVisibleCharacterOfLine≥'≥'® ≈
:≥'≥'∆ «,
m_lastVisibleCharacterOfLine≥'≥'» ‰
;≥'≥'‰ Â

m_textInfo
µ'µ' 
.
µ'µ' 
lineInfo
µ'µ' 
[
µ'µ'  
m_lineNumber
µ'µ'  ,
]
µ'µ', -
.
µ'µ'- .
characterCount
µ'µ'. <
=
µ'µ'= >

m_textInfo
µ'µ'? I
.
µ'µ'I J
lineInfo
µ'µ'J R
[
µ'µ'R S
m_lineNumber
µ'µ'S _
]
µ'µ'_ `
.
µ'µ'` a 
lastCharacterIndex
µ'µ'a s
-
µ'µ't u

m_textInfoµ'µ'v Ä
.µ'µ'Ä Å
lineInfoµ'µ'Å â
[µ'µ'â ä
m_lineNumberµ'µ'ä ñ
]µ'µ'ñ ó
.µ'µ'ó ò#
firstCharacterIndexµ'µ'ò ´
+µ'µ'¨ ≠
$numµ'µ'Æ Ø
;µ'µ'Ø ∞

m_textInfo
∂'∂' 
.
∂'∂' 
lineInfo
∂'∂' 
[
∂'∂'  
m_lineNumber
∂'∂'  ,
]
∂'∂', -
.
∂'∂'- .#
visibleCharacterCount
∂'∂'. C
=
∂'∂'D E)
m_lineVisibleCharacterCount
∂'∂'F a
;
∂'∂'a b

m_textInfo
∑'∑' 
.
∑'∑' 
lineInfo
∑'∑' 
[
∑'∑'  
m_lineNumber
∑'∑'  ,
]
∑'∑', -
.
∑'∑'- .
lineExtents
∑'∑'. 9
.
∑'∑'9 :
min
∑'∑': =
=
∑'∑'> ?
new
∑'∑'@ C
Vector2
∑'∑'D K
(
∑'∑'K L

m_textInfo
∑'∑'L V
.
∑'∑'V W
characterInfo
∑'∑'W d
[
∑'∑'d e,
m_firstVisibleCharacterOfLine∑'∑'e Ç
]∑'∑'Ç É
.∑'∑'É Ñ

bottomLeft∑'∑'Ñ é
.∑'∑'é è
x∑'∑'è ê
,∑'∑'ê ë
lineDescender∑'∑'í ü
)∑'∑'ü †
;∑'∑'† °

m_textInfo
∏'∏' 
.
∏'∏' 
lineInfo
∏'∏' 
[
∏'∏'  
m_lineNumber
∏'∏'  ,
]
∏'∏', -
.
∏'∏'- .
lineExtents
∏'∏'. 9
.
∏'∏'9 :
max
∏'∏': =
=
∏'∏'> ?
new
∏'∏'@ C
Vector2
∏'∏'D K
(
∏'∏'K L

m_textInfo
∏'∏'L V
.
∏'∏'V W
characterInfo
∏'∏'W d
[
∏'∏'d e+
m_lastVisibleCharacterOfLine∏'∏'e Å
]∏'∏'Å Ç
.∏'∏'Ç É
topRight∏'∏'É ã
.∏'∏'ã å
x∏'∏'å ç
,∏'∏'ç é
lineAscender∏'∏'è õ
)∏'∏'õ ú
;∏'∏'ú ù

m_textInfo
π'π' 
.
π'π' 
lineInfo
π'π' 
[
π'π'  
m_lineNumber
π'π'  ,
]
π'π', -
.
π'π'- .
length
π'π'. 4
=
π'π'5 6

m_textInfo
π'π'7 A
.
π'π'A B
lineInfo
π'π'B J
[
π'π'J K
m_lineNumber
π'π'K W
]
π'π'W X
.
π'π'X Y
lineExtents
π'π'Y d
.
π'π'd e
max
π'π'e h
.
π'π'h i
x
π'π'i j
;
π'π'j k

m_textInfo
∫'∫' 
.
∫'∫' 
lineInfo
∫'∫' 
[
∫'∫'  
m_lineNumber
∫'∫'  ,
]
∫'∫', -
.
∫'∫'- .
width
∫'∫'. 3
=
∫'∫'4 5
width
∫'∫'6 ;
;
∫'∫'; <
float
º'º' 
maxAdvanceOffset
º'º' "
=
º'º'# $
(
º'º'% &
glyphAdjustment
º'º'& 5
*
º'º'6 7!
currentElementScale
º'º'8 K
+
º'º'L M
(
º'º'N O 
m_currentFontAsset
º'º'O a
.
º'º'a b!
normalSpacingOffset
º'º'b u
+
º'º'v w)
characterSpacingAdjustmentº'º'x í
+º'º'ì î%
boldSpacingAdjustmentº'º'ï ™
)º'º'™ ´
*º'º'¨ ≠
currentEmScaleº'º'Æ º
-º'º'Ω æ

m_cSpacingº'º'ø …
)º'º'…  
*º'º'À Ã
(º'º'Õ Œ
$numº'º'Œ œ
-º'º'– —#
m_charWidthAdjDeltaº'º'“ Â
)º'º'Â Ê
;º'º'Ê Á
float
Ω'Ω' '
adjustedHorizontalAdvance
Ω'Ω' +
=
Ω'Ω', -

m_textInfo
Ω'Ω'. 8
.
Ω'Ω'8 9
lineInfo
Ω'Ω'9 A
[
Ω'Ω'A B
m_lineNumber
Ω'Ω'B N
]
Ω'Ω'N O
.
Ω'Ω'O P

maxAdvance
Ω'Ω'P Z
=
Ω'Ω'[ \

m_textInfo
Ω'Ω'] g
.
Ω'Ω'g h
characterInfo
Ω'Ω'h u
[
Ω'Ω'u v+
m_lastVisibleCharacterOfLineΩ'Ω'v í
]Ω'Ω'í ì
.Ω'Ω'ì î
xAdvanceΩ'Ω'î ú
+Ω'Ω'ù û
(Ω'Ω'ü †
m_isRightToLeftΩ'Ω'† Ø
?Ω'Ω'∞ ± 
maxAdvanceOffsetΩ'Ω'≤ ¬
:Ω'Ω'√ ƒ
-Ω'Ω'≈ ∆ 
maxAdvanceOffsetΩ'Ω'« ◊
)Ω'Ω'◊ ÿ
;Ω'Ω'ÿ Ÿ

m_textInfo
æ'æ' 
.
æ'æ' 
characterInfo
æ'æ' $
[
æ'æ'$ % 
lastCharacterIndex
æ'æ'% 7
]
æ'æ'7 8
.
æ'æ'8 9
xAdvance
æ'æ'9 A
=
æ'æ'B C'
adjustedHorizontalAdvance
æ'æ'D ]
;
æ'æ'] ^

m_textInfo
¿'¿' 
.
¿'¿' 
lineInfo
¿'¿' 
[
¿'¿'  
m_lineNumber
¿'¿'  ,
]
¿'¿', -
.
¿'¿'- .
baseline
¿'¿'. 6
=
¿'¿'7 8
$num
¿'¿'9 :
-
¿'¿'; <
m_lineOffset
¿'¿'= I
;
¿'¿'I J

m_textInfo
¡'¡' 
.
¡'¡' 
lineInfo
¡'¡' 
[
¡'¡'  
m_lineNumber
¡'¡'  ,
]
¡'¡', -
.
¡'¡'- .
ascender
¡'¡'. 6
=
¡'¡'7 8
lineAscender
¡'¡'9 E
;
¡'¡'E F

m_textInfo
¬'¬' 
.
¬'¬' 
lineInfo
¬'¬' 
[
¬'¬'  
m_lineNumber
¬'¬'  ,
]
¬'¬', -
.
¬'¬'- .
	descender
¬'¬'. 7
=
¬'¬'8 9
lineDescender
¬'¬': G
;
¬'¬'G H

m_textInfo
√'√' 
.
√'√' 
lineInfo
√'√' 
[
√'√'  
m_lineNumber
√'√'  ,
]
√'√', -
.
√'√'- .

lineHeight
√'√'. 8
=
√'√'9 :
lineAscender
√'√'; G
-
√'√'H I
lineDescender
√'√'J W
+
√'√'X Y
lineGap
√'√'Z a
*
√'√'b c
	baseScale
√'√'d m
;
√'√'m n$
m_firstCharacterOfLine
≈'≈' "
=
≈'≈'# $
m_characterCount
≈'≈'% 5
;
≈'≈'5 6)
m_lineVisibleCharacterCount
∆'∆' '
=
∆'∆'( )
$num
∆'∆'* +
;
∆'∆'+ ,#
SaveWordWrappingState
…'…' !
(
…'…'! "
ref
…'…'" %
m_SavedLineState
…'…'& 6
,
…'…'6 7
i
…'…'8 9
,
…'…'9 :
m_characterCount
…'…'; K
-
…'…'L M
$num
…'…'N O
)
…'…'O P
;
…'…'P Q
m_lineNumber
À'À' 
+=
À'À' 
$num
À'À' 
;
À'À' 
if
Œ'Œ' 
(
Œ'Œ' 
m_lineNumber
Œ'Œ' 
>=
Œ'Œ' 

m_textInfo
Œ'Œ'  *
.
Œ'Œ'* +
lineInfo
Œ'Œ'+ 3
.
Œ'Œ'3 4
Length
Œ'Œ'4 :
)
Œ'Œ': ;
ResizeLineExtents
œ'œ' !
(
œ'œ'! "
m_lineNumber
œ'œ'" .
)
œ'œ'. /
;
œ'œ'/ 0
if
“'“' 
(
“'“' 
m_lineHeight
“'“' 
==
“'“' 
TMP_Math
“'“'  (
.
“'“'( )
FLOAT_UNSET
“'“') 4
)
“'“'4 5
{
”'”' 
float
‘'‘' 
ascender
‘'‘' 
=
‘'‘'  

m_textInfo
‘'‘'! +
.
‘'‘'+ ,
characterInfo
‘'‘', 9
[
‘'‘'9 :
m_characterCount
‘'‘': J
]
‘'‘'J K
.
‘'‘'K L
adjustedAscender
‘'‘'L \
;
‘'‘'\ ]
float
’'’' 
lineOffsetDelta
’'’' %
=
’'’'& '
$num
’'’'( )
-
’'’'* + 
m_maxLineDescender
’'’', >
+
’'’'? @
ascender
’'’'A I
+
’'’'J K
(
’'’'L M
lineGap
’'’'M T
+
’'’'U V 
m_lineSpacingDelta
’'’'W i
)
’'’'i j
*
’'’'k l
	baseScale
’'’'m v
+
’'’'w x
m_lineSpacing’'’'y Ü
*’'’'á à
currentEmScale’'’'â ó
;’'’'ó ò
m_lineOffset
÷'÷' 
+=
÷'÷' 
lineOffsetDelta
÷'÷'  /
;
÷'÷'/ 0#
m_startOfLineAscender
ÿ'ÿ' %
=
ÿ'ÿ'& '
ascender
ÿ'ÿ'( 0
;
ÿ'ÿ'0 1
}
Ÿ'Ÿ' 
else
⁄'⁄' 
{
€'€' 
m_lineOffset
‹'‹' 
+=
‹'‹' 
m_lineHeight
‹'‹'  ,
+
‹'‹'- .
m_lineSpacing
‹'‹'/ <
*
‹'‹'= >
currentEmScale
‹'‹'? M
;
‹'‹'M N
}
›'›' 
m_maxLineAscender
ﬂ'ﬂ' 
=
ﬂ'ﬂ' "
k_LargeNegativeFloat
ﬂ'ﬂ'  4
;
ﬂ'ﬂ'4 5 
m_maxLineDescender
‡'‡' 
=
‡'‡'  "
k_LargePositiveFloat
‡'‡'! 5
;
‡'‡'5 6

m_xAdvance
‚'‚' 
=
‚'‚' 
$num
‚'‚' 
+
‚'‚' 

tag_Indent
‚'‚' '
;
‚'‚'' (#
k_InsertNewLineMarker
„'„' !
.
„'„'! "
End
„'„'" %
(
„'„'% &
)
„'„'& '
;
„'„'' (
}
‰'‰' 	
	protected
Ì'Ì' 
void
Ì'Ì' #
SaveWordWrappingState
Ì'Ì' ,
(
Ì'Ì', -
ref
Ì'Ì'- 0
WordWrapState
Ì'Ì'1 >
state
Ì'Ì'? D
,
Ì'Ì'D E
int
Ì'Ì'F I
index
Ì'Ì'J O
,
Ì'Ì'O P
int
Ì'Ì'Q T
count
Ì'Ì'U Z
)
Ì'Ì'Z [
{
Ó'Ó' 	
state
'' 
.
'' 
currentFontAsset
'' "
=
''# $ 
m_currentFontAsset
''% 7
;
''7 8
state
Ò'Ò' 
.
Ò'Ò'  
currentSpriteAsset
Ò'Ò' $
=
Ò'Ò'% &"
m_currentSpriteAsset
Ò'Ò'' ;
;
Ò'Ò'; <
state
Ú'Ú' 
.
Ú'Ú' 
currentMaterial
Ú'Ú' !
=
Ú'Ú'" #
m_currentMaterial
Ú'Ú'$ 5
;
Ú'Ú'5 6
state
Û'Û' 
.
Û'Û' "
currentMaterialIndex
Û'Û' &
=
Û'Û'' ($
m_currentMaterialIndex
Û'Û') ?
;
Û'Û'? @
state
ı'ı' 
.
ı'ı'  
previous_WordBreak
ı'ı' $
=
ı'ı'% &
index
ı'ı'' ,
;
ı'ı', -
state
ˆ'ˆ' 
.
ˆ'ˆ' "
total_CharacterCount
ˆ'ˆ' &
=
ˆ'ˆ'' (
count
ˆ'ˆ') .
;
ˆ'ˆ'. /
state
˜'˜' 
.
˜'˜' $
visible_CharacterCount
˜'˜' (
=
˜'˜') *)
m_lineVisibleCharacterCount
˜'˜'+ F
;
˜'˜'F G
state
˙'˙' 
.
˙'˙' 
visible_LinkCount
˙'˙' #
=
˙'˙'$ %

m_textInfo
˙'˙'& 0
.
˙'˙'0 1
	linkCount
˙'˙'1 :
;
˙'˙': ;
state
¸'¸' 
.
¸'¸' !
firstCharacterIndex
¸'¸' %
=
¸'¸'& '$
m_firstCharacterOfLine
¸'¸'( >
;
¸'¸'> ?
state
˝'˝' 
.
˝'˝' (
firstVisibleCharacterIndex
˝'˝' ,
=
˝'˝'- .+
m_firstVisibleCharacterOfLine
˝'˝'/ L
;
˝'˝'L M
state
˛'˛' 
.
˛'˛' "
lastVisibleCharIndex
˛'˛' &
=
˛'˛'' (*
m_lastVisibleCharacterOfLine
˛'˛') E
;
˛'˛'E F
state
Ä(Ä( 
.
Ä(Ä( 
	fontStyle
Ä(Ä( 
=
Ä(Ä( !
m_FontStyleInternal
Ä(Ä( 1
;
Ä(Ä(1 2
state
Å(Å( 
.
Å(Å( 
italicAngle
Å(Å( 
=
Å(Å( 
m_ItalicAngle
Å(Å(  -
;
Å(Å(- .
state
É(É( 
.
É(É( !
fontScaleMultiplier
É(É( %
=
É(É(& '#
m_fontScaleMultiplier
É(É(( =
;
É(É(= >
state
Ñ(Ñ( 
.
Ñ(Ñ( 
currentFontSize
Ñ(Ñ( !
=
Ñ(Ñ(" #
m_currentFontSize
Ñ(Ñ($ 5
;
Ñ(Ñ(5 6
state
Ü(Ü( 
.
Ü(Ü( 
xAdvance
Ü(Ü( 
=
Ü(Ü( 

m_xAdvance
Ü(Ü( '
;
Ü(Ü(' (
state
á(á( 
.
á(á( 
maxCapHeight
á(á( 
=
á(á(  
m_maxCapHeight
á(á(! /
;
á(á(/ 0
state
à(à( 
.
à(à( 
maxAscender
à(à( 
=
à(à( 
m_maxTextAscender
à(à(  1
;
à(à(1 2
state
â(â( 
.
â(â( 
maxDescender
â(â( 
=
â(â(   
m_ElementDescender
â(â(! 3
;
â(â(3 4
state
ä(ä( 
.
ä(ä( !
startOfLineAscender
ä(ä( %
=
ä(ä(& '#
m_startOfLineAscender
ä(ä(( =
;
ä(ä(= >
state
ã(ã( 
.
ã(ã( 
maxLineAscender
ã(ã( !
=
ã(ã(" #
m_maxLineAscender
ã(ã($ 5
;
ã(ã(5 6
state
å(å( 
.
å(å( 
maxLineDescender
å(å( "
=
å(å(# $ 
m_maxLineDescender
å(å(% 7
;
å(å(7 8
state
ç(ç( 
.
ç(ç( 
pageAscender
ç(ç( 
=
ç(ç(  
m_PageAscender
ç(ç(! /
;
ç(ç(/ 0
state
è(è( 
.
è(è( 
preferredWidth
è(è(  
=
è(è(! "
m_preferredWidth
è(è(# 3
;
è(è(3 4
state
ê(ê( 
.
ê(ê( 
preferredHeight
ê(ê( !
=
ê(ê(" #
m_preferredHeight
ê(ê($ 5
;
ê(ê(5 6
state
ë(ë( 
.
ë(ë( 
meshExtents
ë(ë( 
=
ë(ë( 
m_meshExtents
ë(ë(  -
;
ë(ë(- .
state
ì(ì( 
.
ì(ì( 

lineNumber
ì(ì( 
=
ì(ì( 
m_lineNumber
ì(ì( +
;
ì(ì(+ ,
state
î(î( 
.
î(î( 

lineOffset
î(î( 
=
î(î( 
m_lineOffset
î(î( +
;
î(î(+ ,
state
ï(ï( 
.
ï(ï( 
baselineOffset
ï(ï(  
=
ï(ï(! "
m_baselineOffset
ï(ï(# 3
;
ï(ï(3 4
state
ñ(ñ( 
.
ñ(ñ( !
isDrivenLineSpacing
ñ(ñ( %
=
ñ(ñ(& '#
m_IsDrivenLineSpacing
ñ(ñ(( =
;
ñ(ñ(= >
state
ó(ó( 
.
ó(ó( .
 glyphHorizontalAdvanceAdjustment
ó(ó( 2
=
ó(ó(3 40
"m_GlyphHorizontalAdvanceAdjustment
ó(ó(5 W
;
ó(ó(W X
state
ô(ô( 
.
ô(ô( 
cSpace
ô(ô( 
=
ô(ô( 

m_cSpacing
ô(ô( %
;
ô(ô(% &
state
ö(ö( 
.
ö(ö( 
mSpace
ö(ö( 
=
ö(ö( 
m_monoSpacing
ö(ö( (
;
ö(ö(( )
state
ú(ú( 
.
ú(ú( !
horizontalAlignment
ú(ú( %
=
ú(ú(& '!
m_lineJustification
ú(ú(( ;
;
ú(ú(; <
state
ù(ù( 
.
ù(ù( 

marginLeft
ù(ù( 
=
ù(ù( 
m_marginLeft
ù(ù( +
;
ù(ù(+ ,
state
û(û( 
.
û(û( 
marginRight
û(û( 
=
û(û( 
m_marginRight
û(û(  -
;
û(û(- .
state
†(†( 
.
†(†( 
vertexColor
†(†( 
=
†(†( 
m_htmlColor
†(†(  +
;
†(†(+ ,
state
°(°( 
.
°(°( 
underlineColor
°(°(  
=
°(°(! "
m_underlineColor
°(°(# 3
;
°(°(3 4
state
¢(¢( 
.
¢(¢(  
strikethroughColor
¢(¢( $
=
¢(¢(% &"
m_strikethroughColor
¢(¢(' ;
;
¢(¢(; <
state
§(§( 
.
§(§(  
isNonBreakingSpace
§(§( $
=
§(§(% &"
m_isNonBreakingSpace
§(§(' ;
;
§(§(; <
state
•(•( 
.
•(•( 
tagNoParsing
•(•( 
=
•(•(  
tag_NoParsing
•(•(! .
;
•(•(. /
state
®(®( 
.
®(®( 
basicStyleStack
®(®( !
=
®(®(" #
m_fontStyleStack
®(®($ 4
;
®(®(4 5
state
©(©( 
.
©(©( 
italicAngleStack
©(©( "
=
©(©(# $ 
m_ItalicAngleStack
©(©(% 7
;
©(©(7 8
state
™(™( 
.
™(™( 

colorStack
™(™( 
=
™(™( 
m_colorStack
™(™( +
;
™(™(+ ,
state
´(´( 
.
´(´( !
underlineColorStack
´(´( %
=
´(´(& '#
m_underlineColorStack
´(´(( =
;
´(´(= >
state
¨(¨( 
.
¨(¨( %
strikethroughColorStack
¨(¨( )
=
¨(¨(* +'
m_strikethroughColorStack
¨(¨(, E
;
¨(¨(E F
state
≠(≠( 
.
≠(≠( !
highlightStateStack
≠(≠( %
=
≠(≠(& '#
m_HighlightStateStack
≠(≠(( =
;
≠(≠(= >
state
Æ(Æ( 
.
Æ(Æ(  
colorGradientStack
Æ(Æ( $
=
Æ(Æ(% &"
m_colorGradientStack
Æ(Æ(' ;
;
Æ(Æ(; <
state
Ø(Ø( 
.
Ø(Ø( 
	sizeStack
Ø(Ø( 
=
Ø(Ø( 
m_sizeStack
Ø(Ø( )
;
Ø(Ø() *
state
∞(∞( 
.
∞(∞( 
indentStack
∞(∞( 
=
∞(∞( 
m_indentStack
∞(∞(  -
;
∞(∞(- .
state
±(±( 
.
±(±( 
fontWeightStack
±(±( !
=
±(±(" #
m_FontWeightStack
±(±($ 5
;
±(±(5 6
state
¥(¥( 
.
¥(¥( 
baselineStack
¥(¥( 
=
¥(¥(  !#
m_baselineOffsetStack
¥(¥(" 7
;
¥(¥(7 8
state
µ(µ( 
.
µ(µ( 
actionStack
µ(µ( 
=
µ(µ( 
m_actionStack
µ(µ(  -
;
µ(µ(- .
state
∂(∂( 
.
∂(∂( $
materialReferenceStack
∂(∂( (
=
∂(∂() *&
m_materialReferenceStack
∂(∂(+ C
;
∂(∂(C D
state
∑(∑( 
.
∑(∑( $
lineJustificationStack
∑(∑( (
=
∑(∑() *&
m_lineJustificationStack
∑(∑(+ C
;
∑(∑(C D
state
∫(∫( 
.
∫(∫( 
spriteAnimationID
∫(∫( #
=
∫(∫($ %!
m_spriteAnimationID
∫(∫(& 9
;
∫(∫(9 :
if
º(º( 
(
º(º( 
m_lineNumber
º(º( 
<
º(º( 

m_textInfo
º(º( )
.
º(º() *
lineInfo
º(º(* 2
.
º(º(2 3
Length
º(º(3 9
)
º(º(9 :
state
Ω(Ω( 
.
Ω(Ω( 
lineInfo
Ω(Ω( 
=
Ω(Ω(  

m_textInfo
Ω(Ω(! +
.
Ω(Ω(+ ,
lineInfo
Ω(Ω(, 4
[
Ω(Ω(4 5
m_lineNumber
Ω(Ω(5 A
]
Ω(Ω(A B
;
Ω(Ω(B C
}
æ(æ( 	
	protected
∆(∆( 
int
∆(∆( &
RestoreWordWrappingState
∆(∆( .
(
∆(∆(. /
ref
∆(∆(/ 2
WordWrapState
∆(∆(3 @
state
∆(∆(A F
)
∆(∆(F G
{
«(«( 	
int
»(»( 
index
»(»( 
=
»(»( 
state
»(»( 
.
»(»(  
previous_WordBreak
»(»( 0
;
»(»(0 1 
m_currentFontAsset
À(À( 
=
À(À(  
state
À(À(! &
.
À(À(& '
currentFontAsset
À(À(' 7
;
À(À(7 8"
m_currentSpriteAsset
Ã(Ã(  
=
Ã(Ã(! "
state
Ã(Ã(# (
.
Ã(Ã(( ) 
currentSpriteAsset
Ã(Ã() ;
;
Ã(Ã(; <
m_currentMaterial
Õ(Õ( 
=
Õ(Õ( 
state
Õ(Õ(  %
.
Õ(Õ(% &
currentMaterial
Õ(Õ(& 5
;
Õ(Õ(5 6$
m_currentMaterialIndex
Œ(Œ( "
=
Œ(Œ(# $
state
Œ(Œ(% *
.
Œ(Œ(* +"
currentMaterialIndex
Œ(Œ(+ ?
;
Œ(Œ(? @
m_characterCount
–(–( 
=
–(–( 
state
–(–( $
.
–(–($ %"
total_CharacterCount
–(–(% 9
+
–(–(: ;
$num
–(–(< =
;
–(–(= >)
m_lineVisibleCharacterCount
—(—( '
=
—(—(( )
state
—(—(* /
.
—(—(/ 0$
visible_CharacterCount
—(—(0 F
;
—(—(F G

m_textInfo
‘(‘( 
.
‘(‘( 
	linkCount
‘(‘(  
=
‘(‘(! "
state
‘(‘(# (
.
‘(‘(( )
visible_LinkCount
‘(‘() :
;
‘(‘(: ;$
m_firstCharacterOfLine
÷(÷( "
=
÷(÷(# $
state
÷(÷(% *
.
÷(÷(* +!
firstCharacterIndex
÷(÷(+ >
;
÷(÷(> ?+
m_firstVisibleCharacterOfLine
◊(◊( )
=
◊(◊(* +
state
◊(◊(, 1
.
◊(◊(1 2(
firstVisibleCharacterIndex
◊(◊(2 L
;
◊(◊(L M*
m_lastVisibleCharacterOfLine
ÿ(ÿ( (
=
ÿ(ÿ() *
state
ÿ(ÿ(+ 0
.
ÿ(ÿ(0 1"
lastVisibleCharIndex
ÿ(ÿ(1 E
;
ÿ(ÿ(E F!
m_FontStyleInternal
⁄(⁄( 
=
⁄(⁄(  !
state
⁄(⁄(" '
.
⁄(⁄(' (
	fontStyle
⁄(⁄(( 1
;
⁄(⁄(1 2
m_ItalicAngle
€(€( 
=
€(€( 
state
€(€( !
.
€(€(! "
italicAngle
€(€(" -
;
€(€(- .#
m_fontScaleMultiplier
‹(‹( !
=
‹(‹(" #
state
‹(‹($ )
.
‹(‹() *!
fontScaleMultiplier
‹(‹(* =
;
‹(‹(= >
m_currentFontSize
ﬁ(ﬁ( 
=
ﬁ(ﬁ( 
state
ﬁ(ﬁ(  %
.
ﬁ(ﬁ(% &
currentFontSize
ﬁ(ﬁ(& 5
;
ﬁ(ﬁ(5 6

m_xAdvance
‡(‡( 
=
‡(‡( 
state
‡(‡( 
.
‡(‡( 
xAdvance
‡(‡( '
;
‡(‡(' (
m_maxCapHeight
·(·( 
=
·(·( 
state
·(·( "
.
·(·(" #
maxCapHeight
·(·(# /
;
·(·(/ 0
m_maxTextAscender
‚(‚( 
=
‚(‚( 
state
‚(‚(  %
.
‚(‚(% &
maxAscender
‚(‚(& 1
;
‚(‚(1 2 
m_ElementDescender
„(„( 
=
„(„(  
state
„(„(! &
.
„(„(& '
maxDescender
„(„(' 3
;
„(„(3 4#
m_startOfLineAscender
‰(‰( !
=
‰(‰(" #
state
‰(‰($ )
.
‰(‰() *!
startOfLineAscender
‰(‰(* =
;
‰(‰(= >
m_maxLineAscender
Â(Â( 
=
Â(Â( 
state
Â(Â(  %
.
Â(Â(% &
maxLineAscender
Â(Â(& 5
;
Â(Â(5 6 
m_maxLineDescender
Ê(Ê( 
=
Ê(Ê(  
state
Ê(Ê(! &
.
Ê(Ê(& '
maxLineDescender
Ê(Ê(' 7
;
Ê(Ê(7 8
m_PageAscender
Á(Á( 
=
Á(Á( 
state
Á(Á( "
.
Á(Á(" #
pageAscender
Á(Á(# /
;
Á(Á(/ 0
m_preferredWidth
È(È( 
=
È(È( 
state
È(È( $
.
È(È($ %
preferredWidth
È(È(% 3
;
È(È(3 4
m_preferredHeight
Í(Í( 
=
Í(Í( 
state
Í(Í(  %
.
Í(Í(% &
preferredHeight
Í(Í(& 5
;
Í(Í(5 6
m_meshExtents
Î(Î( 
=
Î(Î( 
state
Î(Î( !
.
Î(Î(! "
meshExtents
Î(Î(" -
;
Î(Î(- .
m_lineNumber
Ì(Ì( 
=
Ì(Ì( 
state
Ì(Ì(  
.
Ì(Ì(  !

lineNumber
Ì(Ì(! +
;
Ì(Ì(+ ,
m_lineOffset
Ó(Ó( 
=
Ó(Ó( 
state
Ó(Ó(  
.
Ó(Ó(  !

lineOffset
Ó(Ó(! +
;
Ó(Ó(+ ,
m_baselineOffset
Ô(Ô( 
=
Ô(Ô( 
state
Ô(Ô( $
.
Ô(Ô($ %
baselineOffset
Ô(Ô(% 3
;
Ô(Ô(3 4#
m_IsDrivenLineSpacing
(( !
=
((" #
state
(($ )
.
(() *!
isDrivenLineSpacing
((* =
;
((= >0
"m_GlyphHorizontalAdvanceAdjustment
Ò(Ò( .
=
Ò(Ò(/ 0
state
Ò(Ò(1 6
.
Ò(Ò(6 7.
 glyphHorizontalAdvanceAdjustment
Ò(Ò(7 W
;
Ò(Ò(W X

m_cSpacing
Û(Û( 
=
Û(Û( 
state
Û(Û( 
.
Û(Û( 
cSpace
Û(Û( %
;
Û(Û(% &
m_monoSpacing
Ù(Ù( 
=
Ù(Ù( 
state
Ù(Ù( !
.
Ù(Ù(! "
mSpace
Ù(Ù(" (
;
Ù(Ù(( )!
m_lineJustification
ˆ(ˆ( 
=
ˆ(ˆ(  !
state
ˆ(ˆ(" '
.
ˆ(ˆ(' (!
horizontalAlignment
ˆ(ˆ(( ;
;
ˆ(ˆ(; <
m_marginLeft
˜(˜( 
=
˜(˜( 
state
˜(˜(  
.
˜(˜(  !

marginLeft
˜(˜(! +
;
˜(˜(+ ,
m_marginRight
¯(¯( 
=
¯(¯( 
state
¯(¯( !
.
¯(¯(! "
marginRight
¯(¯(" -
;
¯(¯(- .
m_htmlColor
˙(˙( 
=
˙(˙( 
state
˙(˙( 
.
˙(˙(  
vertexColor
˙(˙(  +
;
˙(˙(+ ,
m_underlineColor
˚(˚( 
=
˚(˚( 
state
˚(˚( $
.
˚(˚($ %
underlineColor
˚(˚(% 3
;
˚(˚(3 4"
m_strikethroughColor
¸(¸(  
=
¸(¸(! "
state
¸(¸(# (
.
¸(¸(( ) 
strikethroughColor
¸(¸() ;
;
¸(¸(; <"
m_isNonBreakingSpace
˛(˛(  
=
˛(˛(! "
state
˛(˛(# (
.
˛(˛(( ) 
isNonBreakingSpace
˛(˛() ;
;
˛(˛(; <
tag_NoParsing
ˇ(ˇ( 
=
ˇ(ˇ( 
state
ˇ(ˇ( !
.
ˇ(ˇ(! "
tagNoParsing
ˇ(ˇ(" .
;
ˇ(ˇ(. /
m_fontStyleStack
Ç)Ç) 
=
Ç)Ç) 
state
Ç)Ç) $
.
Ç)Ç)$ %
basicStyleStack
Ç)Ç)% 4
;
Ç)Ç)4 5 
m_ItalicAngleStack
É)É) 
=
É)É)  
state
É)É)! &
.
É)É)& '
italicAngleStack
É)É)' 7
;
É)É)7 8
m_colorStack
Ñ)Ñ) 
=
Ñ)Ñ) 
state
Ñ)Ñ)  
.
Ñ)Ñ)  !

colorStack
Ñ)Ñ)! +
;
Ñ)Ñ)+ ,#
m_underlineColorStack
Ö)Ö) !
=
Ö)Ö)" #
state
Ö)Ö)$ )
.
Ö)Ö)) *!
underlineColorStack
Ö)Ö)* =
;
Ö)Ö)= >'
m_strikethroughColorStack
Ü)Ü) %
=
Ü)Ü)& '
state
Ü)Ü)( -
.
Ü)Ü)- .%
strikethroughColorStack
Ü)Ü). E
;
Ü)Ü)E F#
m_HighlightStateStack
á)á) !
=
á)á)" #
state
á)á)$ )
.
á)á)) *!
highlightStateStack
á)á)* =
;
á)á)= >"
m_colorGradientStack
à)à)  
=
à)à)! "
state
à)à)# (
.
à)à)( ) 
colorGradientStack
à)à)) ;
;
à)à); <
m_sizeStack
â)â) 
=
â)â) 
state
â)â) 
.
â)â)  
	sizeStack
â)â)  )
;
â)â)) *
m_indentStack
ä)ä) 
=
ä)ä) 
state
ä)ä) !
.
ä)ä)! "
indentStack
ä)ä)" -
;
ä)ä)- .
m_FontWeightStack
ã)ã) 
=
ã)ã) 
state
ã)ã)  %
.
ã)ã)% &
fontWeightStack
ã)ã)& 5
;
ã)ã)5 6#
m_baselineOffsetStack
é)é) !
=
é)é)" #
state
é)é)$ )
.
é)é)) *
baselineStack
é)é)* 7
;
é)é)7 8
m_actionStack
è)è) 
=
è)è) 
state
è)è) !
.
è)è)! "
actionStack
è)è)" -
;
è)è)- .&
m_materialReferenceStack
ê)ê) $
=
ê)ê)% &
state
ê)ê)' ,
.
ê)ê), -$
materialReferenceStack
ê)ê)- C
;
ê)ê)C D&
m_lineJustificationStack
ë)ë) $
=
ë)ë)% &
state
ë)ë)' ,
.
ë)ë), -$
lineJustificationStack
ë)ë)- C
;
ë)ë)C D!
m_spriteAnimationID
î)î) 
=
î)î)  !
state
î)î)" '
.
î)î)' (
spriteAnimationID
î)î)( 9
;
î)î)9 :
if
ñ)ñ) 
(
ñ)ñ) 
m_lineNumber
ñ)ñ) 
<
ñ)ñ) 

m_textInfo
ñ)ñ) )
.
ñ)ñ)) *
lineInfo
ñ)ñ)* 2
.
ñ)ñ)2 3
Length
ñ)ñ)3 9
)
ñ)ñ)9 :

m_textInfo
ó)ó) 
.
ó)ó) 
lineInfo
ó)ó) #
[
ó)ó)# $
m_lineNumber
ó)ó)$ 0
]
ó)ó)0 1
=
ó)ó)2 3
state
ó)ó)4 9
.
ó)ó)9 :
lineInfo
ó)ó): B
;
ó)ó)B C
return
ô)ô) 
index
ô)ô) 
;
ô)ô) 
}
ö)ö) 	
	protected
¢)¢) 
virtual
¢)¢) 
void
¢)¢) !
SaveGlyphVertexInfo
¢)¢) 2
(
¢)¢)2 3
float
¢)¢)3 8
padding
¢)¢)9 @
,
¢)¢)@ A
float
¢)¢)B G
style_padding
¢)¢)H U
,
¢)¢)U V
Color32
¢)¢)W ^
vertexColor
¢)¢)_ j
)
¢)¢)j k
{
£)£) 	

m_textInfo
¶)¶) 
.
¶)¶) 
characterInfo
¶)¶) $
[
¶)¶)$ %
m_characterCount
¶)¶)% 5
]
¶)¶)5 6
.
¶)¶)6 7
	vertex_BL
¶)¶)7 @
.
¶)¶)@ A
position
¶)¶)A I
=
¶)¶)J K

m_textInfo
¶)¶)L V
.
¶)¶)V W
characterInfo
¶)¶)W d
[
¶)¶)d e
m_characterCount
¶)¶)e u
]
¶)¶)u v
.
¶)¶)v w

bottomLeft¶)¶)w Å
;¶)¶)Å Ç

m_textInfo
ß)ß) 
.
ß)ß) 
characterInfo
ß)ß) $
[
ß)ß)$ %
m_characterCount
ß)ß)% 5
]
ß)ß)5 6
.
ß)ß)6 7
	vertex_TL
ß)ß)7 @
.
ß)ß)@ A
position
ß)ß)A I
=
ß)ß)J K

m_textInfo
ß)ß)L V
.
ß)ß)V W
characterInfo
ß)ß)W d
[
ß)ß)d e
m_characterCount
ß)ß)e u
]
ß)ß)u v
.
ß)ß)v w
topLeft
ß)ß)w ~
;
ß)ß)~ 

m_textInfo
®)®) 
.
®)®) 
characterInfo
®)®) $
[
®)®)$ %
m_characterCount
®)®)% 5
]
®)®)5 6
.
®)®)6 7
	vertex_TR
®)®)7 @
.
®)®)@ A
position
®)®)A I
=
®)®)J K

m_textInfo
®)®)L V
.
®)®)V W
characterInfo
®)®)W d
[
®)®)d e
m_characterCount
®)®)e u
]
®)®)u v
.
®)®)v w
topRight
®)®)w 
;®)®) Ä

m_textInfo
©)©) 
.
©)©) 
characterInfo
©)©) $
[
©)©)$ %
m_characterCount
©)©)% 5
]
©)©)5 6
.
©)©)6 7
	vertex_BR
©)©)7 @
.
©)©)@ A
position
©)©)A I
=
©)©)J K

m_textInfo
©)©)L V
.
©)©)V W
characterInfo
©)©)W d
[
©)©)d e
m_characterCount
©)©)e u
]
©)©)u v
.
©)©)v w
bottomRight©)©)w Ç
;©)©)Ç É
vertexColor
Ø)Ø) 
.
Ø)Ø) 
a
Ø)Ø) 
=
Ø)Ø) 
m_fontColor32
Ø)Ø) )
.
Ø)Ø)) *
a
Ø)Ø)* +
<
Ø)Ø), -
vertexColor
Ø)Ø). 9
.
Ø)Ø)9 :
a
Ø)Ø): ;
?
Ø)Ø)< =
m_fontColor32
Ø)Ø)> K
.
Ø)Ø)K L
a
Ø)Ø)L M
:
Ø)Ø)N O
vertexColor
Ø)Ø)P [
.
Ø)Ø)[ \
a
Ø)Ø)\ ]
;
Ø)Ø)] ^
if
≤)≤) 
(
≤)≤) 
!
≤)≤) $
m_enableVertexGradient
≤)≤) '
)
≤)≤)' (
{
≥)≥) 

m_textInfo
¥)¥) 
.
¥)¥) 
characterInfo
¥)¥) (
[
¥)¥)( )
m_characterCount
¥)¥)) 9
]
¥)¥)9 :
.
¥)¥): ;
	vertex_BL
¥)¥); D
.
¥)¥)D E
color
¥)¥)E J
=
¥)¥)K L
vertexColor
¥)¥)M X
;
¥)¥)X Y

m_textInfo
µ)µ) 
.
µ)µ) 
characterInfo
µ)µ) (
[
µ)µ)( )
m_characterCount
µ)µ)) 9
]
µ)µ)9 :
.
µ)µ): ;
	vertex_TL
µ)µ); D
.
µ)µ)D E
color
µ)µ)E J
=
µ)µ)K L
vertexColor
µ)µ)M X
;
µ)µ)X Y

m_textInfo
∂)∂) 
.
∂)∂) 
characterInfo
∂)∂) (
[
∂)∂)( )
m_characterCount
∂)∂)) 9
]
∂)∂)9 :
.
∂)∂): ;
	vertex_TR
∂)∂); D
.
∂)∂)D E
color
∂)∂)E J
=
∂)∂)K L
vertexColor
∂)∂)M X
;
∂)∂)X Y

m_textInfo
∑)∑) 
.
∑)∑) 
characterInfo
∑)∑) (
[
∑)∑)( )
m_characterCount
∑)∑)) 9
]
∑)∑)9 :
.
∑)∑): ;
	vertex_BR
∑)∑); D
.
∑)∑)D E
color
∑)∑)E J
=
∑)∑)K L
vertexColor
∑)∑)M X
;
∑)∑)X Y
}
∏)∏) 
else
π)π) 
{
∫)∫) 
if
ª)ª) 
(
ª)ª) 
!
ª)ª) "
m_overrideHtmlColors
ª)ª) )
&&
ª)ª)* ,
m_colorStack
ª)ª)- 9
.
ª)ª)9 :
index
ª)ª): ?
>
ª)ª)@ A
$num
ª)ª)B C
)
ª)ª)C D
{
º)º) 

m_textInfo
Ω)Ω) 
.
Ω)Ω) 
characterInfo
Ω)Ω) ,
[
Ω)Ω), -
m_characterCount
Ω)Ω)- =
]
Ω)Ω)= >
.
Ω)Ω)> ?
	vertex_BL
Ω)Ω)? H
.
Ω)Ω)H I
color
Ω)Ω)I N
=
Ω)Ω)O P
vertexColor
Ω)Ω)Q \
;
Ω)Ω)\ ]

m_textInfo
æ)æ) 
.
æ)æ) 
characterInfo
æ)æ) ,
[
æ)æ), -
m_characterCount
æ)æ)- =
]
æ)æ)= >
.
æ)æ)> ?
	vertex_TL
æ)æ)? H
.
æ)æ)H I
color
æ)æ)I N
=
æ)æ)O P
vertexColor
æ)æ)Q \
;
æ)æ)\ ]

m_textInfo
ø)ø) 
.
ø)ø) 
characterInfo
ø)ø) ,
[
ø)ø), -
m_characterCount
ø)ø)- =
]
ø)ø)= >
.
ø)ø)> ?
	vertex_TR
ø)ø)? H
.
ø)ø)H I
color
ø)ø)I N
=
ø)ø)O P
vertexColor
ø)ø)Q \
;
ø)ø)\ ]

m_textInfo
¿)¿) 
.
¿)¿) 
characterInfo
¿)¿) ,
[
¿)¿), -
m_characterCount
¿)¿)- =
]
¿)¿)= >
.
¿)¿)> ?
	vertex_BR
¿)¿)? H
.
¿)¿)H I
color
¿)¿)I N
=
¿)¿)O P
vertexColor
¿)¿)Q \
;
¿)¿)\ ]
}
¡)¡) 
else
¬)¬) 
{
√)√) 
if
≈)≈) 
(
≈)≈) '
m_fontColorGradientPreset
≈)≈) 1
!=
≈)≈)2 4
null
≈)≈)5 9
)
≈)≈)9 :
{
∆)∆) 

m_textInfo
«)«) "
.
«)«)" #
characterInfo
«)«)# 0
[
«)«)0 1
m_characterCount
«)«)1 A
]
«)«)A B
.
«)«)B C
	vertex_BL
«)«)C L
.
«)«)L M
color
«)«)M R
=
«)«)S T'
m_fontColorGradientPreset
«)«)U n
.
«)«)n o

bottomLeft
«)«)o y
*
«)«)z {
vertexColor«)«)| á
;«)«)á à

m_textInfo
»)») "
.
»)»)" #
characterInfo
»)»)# 0
[
»)»)0 1
m_characterCount
»)»)1 A
]
»)»)A B
.
»)»)B C
	vertex_TL
»)»)C L
.
»)»)L M
color
»)»)M R
=
»)»)S T'
m_fontColorGradientPreset
»)»)U n
.
»)»)n o
topLeft
»)»)o v
*
»)»)w x
vertexColor»)»)y Ñ
;»)»)Ñ Ö

m_textInfo
…)…) "
.
…)…)" #
characterInfo
…)…)# 0
[
…)…)0 1
m_characterCount
…)…)1 A
]
…)…)A B
.
…)…)B C
	vertex_TR
…)…)C L
.
…)…)L M
color
…)…)M R
=
…)…)S T'
m_fontColorGradientPreset
…)…)U n
.
…)…)n o
topRight
…)…)o w
*
…)…)x y
vertexColor…)…)z Ö
;…)…)Ö Ü

m_textInfo
 ) ) "
.
 ) )" #
characterInfo
 ) )# 0
[
 ) )0 1
m_characterCount
 ) )1 A
]
 ) )A B
.
 ) )B C
	vertex_BR
 ) )C L
.
 ) )L M
color
 ) )M R
=
 ) )S T'
m_fontColorGradientPreset
 ) )U n
.
 ) )n o
bottomRight
 ) )o z
*
 ) ){ |
vertexColor ) )} à
; ) )à â
}
À)À) 
else
Ã)Ã) 
{
Õ)Õ) 

m_textInfo
Œ)Œ) "
.
Œ)Œ)" #
characterInfo
Œ)Œ)# 0
[
Œ)Œ)0 1
m_characterCount
Œ)Œ)1 A
]
Œ)Œ)A B
.
Œ)Œ)B C
	vertex_BL
Œ)Œ)C L
.
Œ)Œ)L M
color
Œ)Œ)M R
=
Œ)Œ)S T!
m_fontColorGradient
Œ)Œ)U h
.
Œ)Œ)h i

bottomLeft
Œ)Œ)i s
*
Œ)Œ)t u
vertexColorŒ)Œ)v Å
;Œ)Œ)Å Ç

m_textInfo
œ)œ) "
.
œ)œ)" #
characterInfo
œ)œ)# 0
[
œ)œ)0 1
m_characterCount
œ)œ)1 A
]
œ)œ)A B
.
œ)œ)B C
	vertex_TL
œ)œ)C L
.
œ)œ)L M
color
œ)œ)M R
=
œ)œ)S T!
m_fontColorGradient
œ)œ)U h
.
œ)œ)h i
topLeft
œ)œ)i p
*
œ)œ)q r
vertexColor
œ)œ)s ~
;
œ)œ)~ 

m_textInfo
–)–) "
.
–)–)" #
characterInfo
–)–)# 0
[
–)–)0 1
m_characterCount
–)–)1 A
]
–)–)A B
.
–)–)B C
	vertex_TR
–)–)C L
.
–)–)L M
color
–)–)M R
=
–)–)S T!
m_fontColorGradient
–)–)U h
.
–)–)h i
topRight
–)–)i q
*
–)–)r s
vertexColor
–)–)t 
;–)–) Ä

m_textInfo
—)—) "
.
—)—)" #
characterInfo
—)—)# 0
[
—)—)0 1
m_characterCount
—)—)1 A
]
—)—)A B
.
—)—)B C
	vertex_BR
—)—)C L
.
—)—)L M
color
—)—)M R
=
—)—)S T!
m_fontColorGradient
—)—)U h
.
—)—)h i
bottomRight
—)—)i t
*
—)—)u v
vertexColor—)—)w Ç
;—)—)Ç É
}
“)“) 
}
”)”) 
}
‘)‘) 
if
÷)÷) 
(
÷)÷) #
m_colorGradientPreset
÷)÷) %
!=
÷)÷)& (
null
÷)÷)) -
)
÷)÷)- .
{
◊)◊) 
if
ÿ)ÿ) 
(
ÿ)ÿ) +
m_colorGradientPresetIsTinted
ÿ)ÿ) 1
)
ÿ)ÿ)1 2
{
Ÿ)Ÿ) 

m_textInfo
⁄)⁄) 
.
⁄)⁄) 
characterInfo
⁄)⁄) ,
[
⁄)⁄), -
m_characterCount
⁄)⁄)- =
]
⁄)⁄)= >
.
⁄)⁄)> ?
	vertex_BL
⁄)⁄)? H
.
⁄)⁄)H I
color
⁄)⁄)I N
*=
⁄)⁄)O Q#
m_colorGradientPreset
⁄)⁄)R g
.
⁄)⁄)g h

bottomLeft
⁄)⁄)h r
;
⁄)⁄)r s

m_textInfo
€)€) 
.
€)€) 
characterInfo
€)€) ,
[
€)€), -
m_characterCount
€)€)- =
]
€)€)= >
.
€)€)> ?
	vertex_TL
€)€)? H
.
€)€)H I
color
€)€)I N
*=
€)€)O Q#
m_colorGradientPreset
€)€)R g
.
€)€)g h
topLeft
€)€)h o
;
€)€)o p

m_textInfo
‹)‹) 
.
‹)‹) 
characterInfo
‹)‹) ,
[
‹)‹), -
m_characterCount
‹)‹)- =
]
‹)‹)= >
.
‹)‹)> ?
	vertex_TR
‹)‹)? H
.
‹)‹)H I
color
‹)‹)I N
*=
‹)‹)O Q#
m_colorGradientPreset
‹)‹)R g
.
‹)‹)g h
topRight
‹)‹)h p
;
‹)‹)p q

m_textInfo
›)›) 
.
›)›) 
characterInfo
›)›) ,
[
›)›), -
m_characterCount
›)›)- =
]
›)›)= >
.
›)›)> ?
	vertex_BR
›)›)? H
.
›)›)H I
color
›)›)I N
*=
›)›)O Q#
m_colorGradientPreset
›)›)R g
.
›)›)g h
bottomRight
›)›)h s
;
›)›)s t
}
ﬁ)ﬁ) 
else
ﬂ)ﬂ) 
{
‡)‡) 

m_textInfo
·)·) 
.
·)·) 
characterInfo
·)·) ,
[
·)·), -
m_characterCount
·)·)- =
]
·)·)= >
.
·)·)> ?
	vertex_BL
·)·)? H
.
·)·)H I
color
·)·)I N
=
·)·)O P#
m_colorGradientPreset
·)·)Q f
.
·)·)f g

bottomLeft
·)·)g q
.
·)·)q r
MinAlpha
·)·)r z
(
·)·)z {
vertexColor·)·){ Ü
)·)·)Ü á
;·)·)á à

m_textInfo
‚)‚) 
.
‚)‚) 
characterInfo
‚)‚) ,
[
‚)‚), -
m_characterCount
‚)‚)- =
]
‚)‚)= >
.
‚)‚)> ?
	vertex_TL
‚)‚)? H
.
‚)‚)H I
color
‚)‚)I N
=
‚)‚)O P#
m_colorGradientPreset
‚)‚)Q f
.
‚)‚)f g
topLeft
‚)‚)g n
.
‚)‚)n o
MinAlpha
‚)‚)o w
(
‚)‚)w x
vertexColor‚)‚)x É
)‚)‚)É Ñ
;‚)‚)Ñ Ö

m_textInfo
„)„) 
.
„)„) 
characterInfo
„)„) ,
[
„)„), -
m_characterCount
„)„)- =
]
„)„)= >
.
„)„)> ?
	vertex_TR
„)„)? H
.
„)„)H I
color
„)„)I N
=
„)„)O P#
m_colorGradientPreset
„)„)Q f
.
„)„)f g
topRight
„)„)g o
.
„)„)o p
MinAlpha
„)„)p x
(
„)„)x y
vertexColor„)„)y Ñ
)„)„)Ñ Ö
;„)„)Ö Ü

m_textInfo
‰)‰) 
.
‰)‰) 
characterInfo
‰)‰) ,
[
‰)‰), -
m_characterCount
‰)‰)- =
]
‰)‰)= >
.
‰)‰)> ?
	vertex_BR
‰)‰)? H
.
‰)‰)H I
color
‰)‰)I N
=
‰)‰)O P#
m_colorGradientPreset
‰)‰)Q f
.
‰)‰)f g
bottomRight
‰)‰)g r
.
‰)‰)r s
MinAlpha
‰)‰)s {
(
‰)‰){ |
vertexColor‰)‰)| á
)‰)‰)á à
;‰)‰)à â
}
Â)Â) 
}
Ê)Ê) 
if
Í)Í) 
(
Í)Í) 
!
Í)Í) 
m_isSDFShader
Í)Í) 
)
Í)Í) 
style_padding
Î)Î) 
=
Î)Î) 
$num
Î)Î)  "
;
Î)Î)" #
	GlyphRect
Ò)Ò) 
	glyphRect
Ò)Ò) 
=
Ò)Ò)  !"
m_cached_TextElement
Ò)Ò)" 6
.
Ò)Ò)6 7
m_Glyph
Ò)Ò)7 >
.
Ò)Ò)> ?
	glyphRect
Ò)Ò)? H
;
Ò)Ò)H I
Vector2
Û)Û) 
uv0
Û)Û) 
;
Û)Û) 
uv0
Ù)Ù) 
.
Ù)Ù) 
x
Ù)Ù) 
=
Ù)Ù) 
(
Ù)Ù) 
	glyphRect
Ù)Ù) 
.
Ù)Ù) 
x
Ù)Ù)  
-
Ù)Ù)! "
padding
Ù)Ù)# *
-
Ù)Ù)+ ,
style_padding
Ù)Ù)- :
)
Ù)Ù): ;
/
Ù)Ù)< = 
m_currentFontAsset
Ù)Ù)> P
.
Ù)Ù)P Q
m_AtlasWidth
Ù)Ù)Q ]
;
Ù)Ù)] ^
uv0
ı)ı) 
.
ı)ı) 
y
ı)ı) 
=
ı)ı) 
(
ı)ı) 
	glyphRect
ı)ı) 
.
ı)ı) 
y
ı)ı)  
-
ı)ı)! "
padding
ı)ı)# *
-
ı)ı)+ ,
style_padding
ı)ı)- :
)
ı)ı): ;
/
ı)ı)< = 
m_currentFontAsset
ı)ı)> P
.
ı)ı)P Q
m_AtlasHeight
ı)ı)Q ^
;
ı)ı)^ _
Vector2
˜)˜) 
uv1
˜)˜) 
;
˜)˜) 
uv1
¯)¯) 
.
¯)¯) 
x
¯)¯) 
=
¯)¯) 
uv0
¯)¯) 
.
¯)¯) 
x
¯)¯) 
;
¯)¯) 
uv1
˘)˘) 
.
˘)˘) 
y
˘)˘) 
=
˘)˘) 
(
˘)˘) 
	glyphRect
˘)˘) 
.
˘)˘) 
y
˘)˘)  
+
˘)˘)! "
padding
˘)˘)# *
+
˘)˘)+ ,
style_padding
˘)˘)- :
+
˘)˘); <
	glyphRect
˘)˘)= F
.
˘)˘)F G
height
˘)˘)G M
)
˘)˘)M N
/
˘)˘)O P 
m_currentFontAsset
˘)˘)Q c
.
˘)˘)c d
m_AtlasHeight
˘)˘)d q
;
˘)˘)q r
Vector2
˚)˚) 
uv2
˚)˚) 
;
˚)˚) 
uv2
¸)¸) 
.
¸)¸) 
x
¸)¸) 
=
¸)¸) 
(
¸)¸) 
	glyphRect
¸)¸) 
.
¸)¸) 
x
¸)¸)  
+
¸)¸)! "
padding
¸)¸)# *
+
¸)¸)+ ,
style_padding
¸)¸)- :
+
¸)¸); <
	glyphRect
¸)¸)= F
.
¸)¸)F G
width
¸)¸)G L
)
¸)¸)L M
/
¸)¸)N O 
m_currentFontAsset
¸)¸)P b
.
¸)¸)b c
m_AtlasWidth
¸)¸)c o
;
¸)¸)o p
uv2
˝)˝) 
.
˝)˝) 
y
˝)˝) 
=
˝)˝) 
uv1
˝)˝) 
.
˝)˝) 
y
˝)˝) 
;
˝)˝) 
Vector2
ˇ)ˇ) 
uv3
ˇ)ˇ) 
;
ˇ)ˇ) 
uv3
Ä*Ä* 
.
Ä*Ä* 
x
Ä*Ä* 
=
Ä*Ä* 
uv2
Ä*Ä* 
.
Ä*Ä* 
x
Ä*Ä* 
;
Ä*Ä* 
uv3
Å*Å* 
.
Å*Å* 
y
Å*Å* 
=
Å*Å* 
uv0
Å*Å* 
.
Å*Å* 
y
Å*Å* 
;
Å*Å* 

m_textInfo
Ñ*Ñ* 
.
Ñ*Ñ* 
characterInfo
Ñ*Ñ* $
[
Ñ*Ñ*$ %
m_characterCount
Ñ*Ñ*% 5
]
Ñ*Ñ*5 6
.
Ñ*Ñ*6 7
	vertex_BL
Ñ*Ñ*7 @
.
Ñ*Ñ*@ A
uv
Ñ*Ñ*A C
=
Ñ*Ñ*D E
uv0
Ñ*Ñ*F I
;
Ñ*Ñ*I J

m_textInfo
Ö*Ö* 
.
Ö*Ö* 
characterInfo
Ö*Ö* $
[
Ö*Ö*$ %
m_characterCount
Ö*Ö*% 5
]
Ö*Ö*5 6
.
Ö*Ö*6 7
	vertex_TL
Ö*Ö*7 @
.
Ö*Ö*@ A
uv
Ö*Ö*A C
=
Ö*Ö*D E
uv1
Ö*Ö*F I
;
Ö*Ö*I J

m_textInfo
Ü*Ü* 
.
Ü*Ü* 
characterInfo
Ü*Ü* $
[
Ü*Ü*$ %
m_characterCount
Ü*Ü*% 5
]
Ü*Ü*5 6
.
Ü*Ü*6 7
	vertex_TR
Ü*Ü*7 @
.
Ü*Ü*@ A
uv
Ü*Ü*A C
=
Ü*Ü*D E
uv2
Ü*Ü*F I
;
Ü*Ü*I J

m_textInfo
á*á* 
.
á*á* 
characterInfo
á*á* $
[
á*á*$ %
m_characterCount
á*á*% 5
]
á*á*5 6
.
á*á*6 7
	vertex_BR
á*á*7 @
.
á*á*@ A
uv
á*á*A C
=
á*á*D E
uv3
á*á*F I
;
á*á*I J
}
ö*ö* 	
	protected
£*£* 
virtual
£*£* 
void
£*£* "
SaveSpriteVertexInfo
£*£* 3
(
£*£*3 4
Color32
£*£*4 ;
vertexColor
£*£*< G
)
£*£*G H
{
§*§* 	

m_textInfo
ß*ß* 
.
ß*ß* 
characterInfo
ß*ß* $
[
ß*ß*$ %
m_characterCount
ß*ß*% 5
]
ß*ß*5 6
.
ß*ß*6 7
	vertex_BL
ß*ß*7 @
.
ß*ß*@ A
position
ß*ß*A I
=
ß*ß*J K

m_textInfo
ß*ß*L V
.
ß*ß*V W
characterInfo
ß*ß*W d
[
ß*ß*d e
m_characterCount
ß*ß*e u
]
ß*ß*u v
.
ß*ß*v w

bottomLeftß*ß*w Å
;ß*ß*Å Ç

m_textInfo
®*®* 
.
®*®* 
characterInfo
®*®* $
[
®*®*$ %
m_characterCount
®*®*% 5
]
®*®*5 6
.
®*®*6 7
	vertex_TL
®*®*7 @
.
®*®*@ A
position
®*®*A I
=
®*®*J K

m_textInfo
®*®*L V
.
®*®*V W
characterInfo
®*®*W d
[
®*®*d e
m_characterCount
®*®*e u
]
®*®*u v
.
®*®*v w
topLeft
®*®*w ~
;
®*®*~ 

m_textInfo
©*©* 
.
©*©* 
characterInfo
©*©* $
[
©*©*$ %
m_characterCount
©*©*% 5
]
©*©*5 6
.
©*©*6 7
	vertex_TR
©*©*7 @
.
©*©*@ A
position
©*©*A I
=
©*©*J K

m_textInfo
©*©*L V
.
©*©*V W
characterInfo
©*©*W d
[
©*©*d e
m_characterCount
©*©*e u
]
©*©*u v
.
©*©*v w
topRight
©*©*w 
;©*©* Ä

m_textInfo
™*™* 
.
™*™* 
characterInfo
™*™* $
[
™*™*$ %
m_characterCount
™*™*% 5
]
™*™*5 6
.
™*™*6 7
	vertex_BR
™*™*7 @
.
™*™*@ A
position
™*™*A I
=
™*™*J K

m_textInfo
™*™*L V
.
™*™*V W
characterInfo
™*™*W d
[
™*™*d e
m_characterCount
™*™*e u
]
™*™*u v
.
™*™*v w
bottomRight™*™*w Ç
;™*™*Ç É
if
Æ*Æ* 
(
Æ*Æ* 
m_tintAllSprites
Æ*Æ*  
)
Æ*Æ*  !
m_tintSprite
Æ*Æ*" .
=
Æ*Æ*/ 0
true
Æ*Æ*1 5
;
Æ*Æ*5 6
Color32
Ø*Ø* 
spriteColor
Ø*Ø* 
=
Ø*Ø*  !
m_tintSprite
Ø*Ø*" .
?
Ø*Ø*/ 0
m_spriteColor
Ø*Ø*1 >
.
Ø*Ø*> ?
Multiply
Ø*Ø*? G
(
Ø*Ø*G H
vertexColor
Ø*Ø*H S
)
Ø*Ø*S T
:
Ø*Ø*U V
m_spriteColor
Ø*Ø*W d
;
Ø*Ø*d e
spriteColor
∞*∞* 
.
∞*∞* 
a
∞*∞* 
=
∞*∞* 
spriteColor
∞*∞* '
.
∞*∞*' (
a
∞*∞*( )
<
∞*∞** +
m_fontColor32
∞*∞*, 9
.
∞*∞*9 :
a
∞*∞*: ;
?
∞*∞*< =
spriteColor
∞*∞*> I
.
∞*∞*I J
a
∞*∞*J K
=
∞*∞*L M
spriteColor
∞*∞*N Y
.
∞*∞*Y Z
a
∞*∞*Z [
<
∞*∞*\ ]
vertexColor
∞*∞*^ i
.
∞*∞*i j
a
∞*∞*j k
?
∞*∞*l m
spriteColor
∞*∞*n y
.
∞*∞*y z
a
∞*∞*z {
:
∞*∞*| }
vertexColor∞*∞*~ â
.∞*∞*â ä
a∞*∞*ä ã
:∞*∞*å ç
m_fontColor32∞*∞*é õ
.∞*∞*õ ú
a∞*∞*ú ù
;∞*∞*ù û
Color32
≤*≤* 
c0
≤*≤* 
=
≤*≤* 
spriteColor
≤*≤* $
;
≤*≤*$ %
Color32
≥*≥* 
c1
≥*≥* 
=
≥*≥* 
spriteColor
≥*≥* $
;
≥*≥*$ %
Color32
¥*¥* 
c2
¥*¥* 
=
¥*¥* 
spriteColor
¥*¥* $
;
¥*¥*$ %
Color32
µ*µ* 
c3
µ*µ* 
=
µ*µ* 
spriteColor
µ*µ* $
;
µ*µ*$ %
if
∑*∑* 
(
∑*∑* $
m_enableVertexGradient
∑*∑* &
)
∑*∑*& '
{
∏*∏* 
if
π*π* 
(
π*π* '
m_fontColorGradientPreset
π*π* -
!=
π*π*. 0
null
π*π*1 5
)
π*π*5 6
{
∫*∫* 
c0
ª*ª* 
=
ª*ª* 
m_tintSprite
ª*ª* %
?
ª*ª*& '
c0
ª*ª*( *
.
ª*ª** +
Multiply
ª*ª*+ 3
(
ª*ª*3 4'
m_fontColorGradientPreset
ª*ª*4 M
.
ª*ª*M N

bottomLeft
ª*ª*N X
)
ª*ª*X Y
:
ª*ª*Z [
c0
ª*ª*\ ^
;
ª*ª*^ _
c1
º*º* 
=
º*º* 
m_tintSprite
º*º* %
?
º*º*& '
c1
º*º*( *
.
º*º** +
Multiply
º*º*+ 3
(
º*º*3 4'
m_fontColorGradientPreset
º*º*4 M
.
º*º*M N
topLeft
º*º*N U
)
º*º*U V
:
º*º*W X
c1
º*º*Y [
;
º*º*[ \
c2
Ω*Ω* 
=
Ω*Ω* 
m_tintSprite
Ω*Ω* %
?
Ω*Ω*& '
c2
Ω*Ω*( *
.
Ω*Ω** +
Multiply
Ω*Ω*+ 3
(
Ω*Ω*3 4'
m_fontColorGradientPreset
Ω*Ω*4 M
.
Ω*Ω*M N
topRight
Ω*Ω*N V
)
Ω*Ω*V W
:
Ω*Ω*X Y
c2
Ω*Ω*Z \
;
Ω*Ω*\ ]
c3
æ*æ* 
=
æ*æ* 
m_tintSprite
æ*æ* %
?
æ*æ*& '
c3
æ*æ*( *
.
æ*æ** +
Multiply
æ*æ*+ 3
(
æ*æ*3 4'
m_fontColorGradientPreset
æ*æ*4 M
.
æ*æ*M N
bottomRight
æ*æ*N Y
)
æ*æ*Y Z
:
æ*æ*[ \
c3
æ*æ*] _
;
æ*æ*_ `
}
ø*ø* 
else
¿*¿* 
{
¡*¡* 
c0
¬*¬* 
=
¬*¬* 
m_tintSprite
¬*¬* %
?
¬*¬*& '
c0
¬*¬*( *
.
¬*¬** +
Multiply
¬*¬*+ 3
(
¬*¬*3 4!
m_fontColorGradient
¬*¬*4 G
.
¬*¬*G H

bottomLeft
¬*¬*H R
)
¬*¬*R S
:
¬*¬*T U
c0
¬*¬*V X
;
¬*¬*X Y
c1
√*√* 
=
√*√* 
m_tintSprite
√*√* %
?
√*√*& '
c1
√*√*( *
.
√*√** +
Multiply
√*√*+ 3
(
√*√*3 4!
m_fontColorGradient
√*√*4 G
.
√*√*G H
topLeft
√*√*H O
)
√*√*O P
:
√*√*Q R
c1
√*√*S U
;
√*√*U V
c2
ƒ*ƒ* 
=
ƒ*ƒ* 
m_tintSprite
ƒ*ƒ* %
?
ƒ*ƒ*& '
c2
ƒ*ƒ*( *
.
ƒ*ƒ** +
Multiply
ƒ*ƒ*+ 3
(
ƒ*ƒ*3 4!
m_fontColorGradient
ƒ*ƒ*4 G
.
ƒ*ƒ*G H
topRight
ƒ*ƒ*H P
)
ƒ*ƒ*P Q
:
ƒ*ƒ*R S
c2
ƒ*ƒ*T V
;
ƒ*ƒ*V W
c3
≈*≈* 
=
≈*≈* 
m_tintSprite
≈*≈* %
?
≈*≈*& '
c3
≈*≈*( *
.
≈*≈** +
Multiply
≈*≈*+ 3
(
≈*≈*3 4!
m_fontColorGradient
≈*≈*4 G
.
≈*≈*G H
bottomRight
≈*≈*H S
)
≈*≈*S T
:
≈*≈*U V
c3
≈*≈*W Y
;
≈*≈*Y Z
}
∆*∆* 
}
«*«* 
if
…*…* 
(
…*…* #
m_colorGradientPreset
…*…* %
!=
…*…*& (
null
…*…*) -
)
…*…*- .
{
 * * 
c0
À*À* 
=
À*À* 
m_tintSprite
À*À* !
?
À*À*" #
c0
À*À*$ &
.
À*À*& '
Multiply
À*À*' /
(
À*À*/ 0#
m_colorGradientPreset
À*À*0 E
.
À*À*E F

bottomLeft
À*À*F P
)
À*À*P Q
:
À*À*R S
c0
À*À*T V
;
À*À*V W
c1
Ã*Ã* 
=
Ã*Ã* 
m_tintSprite
Ã*Ã* !
?
Ã*Ã*" #
c1
Ã*Ã*$ &
.
Ã*Ã*& '
Multiply
Ã*Ã*' /
(
Ã*Ã*/ 0#
m_colorGradientPreset
Ã*Ã*0 E
.
Ã*Ã*E F
topLeft
Ã*Ã*F M
)
Ã*Ã*M N
:
Ã*Ã*O P
c1
Ã*Ã*Q S
;
Ã*Ã*S T
c2
Õ*Õ* 
=
Õ*Õ* 
m_tintSprite
Õ*Õ* !
?
Õ*Õ*" #
c2
Õ*Õ*$ &
.
Õ*Õ*& '
Multiply
Õ*Õ*' /
(
Õ*Õ*/ 0#
m_colorGradientPreset
Õ*Õ*0 E
.
Õ*Õ*E F
topRight
Õ*Õ*F N
)
Õ*Õ*N O
:
Õ*Õ*P Q
c2
Õ*Õ*R T
;
Õ*Õ*T U
c3
Œ*Œ* 
=
Œ*Œ* 
m_tintSprite
Œ*Œ* !
?
Œ*Œ*" #
c3
Œ*Œ*$ &
.
Œ*Œ*& '
Multiply
Œ*Œ*' /
(
Œ*Œ*/ 0#
m_colorGradientPreset
Œ*Œ*0 E
.
Œ*Œ*E F
bottomRight
Œ*Œ*F Q
)
Œ*Œ*Q R
:
Œ*Œ*S T
c3
Œ*Œ*U W
;
Œ*Œ*W X
}
œ*œ* 

m_textInfo
—*—* 
.
—*—* 
characterInfo
—*—* $
[
—*—*$ %
m_characterCount
—*—*% 5
]
—*—*5 6
.
—*—*6 7
	vertex_BL
—*—*7 @
.
—*—*@ A
color
—*—*A F
=
—*—*G H
c0
—*—*I K
;
—*—*K L

m_textInfo
“*“* 
.
“*“* 
characterInfo
“*“* $
[
“*“*$ %
m_characterCount
“*“*% 5
]
“*“*5 6
.
“*“*6 7
	vertex_TL
“*“*7 @
.
“*“*@ A
color
“*“*A F
=
“*“*G H
c1
“*“*I K
;
“*“*K L

m_textInfo
”*”* 
.
”*”* 
characterInfo
”*”* $
[
”*”*$ %
m_characterCount
”*”*% 5
]
”*”*5 6
.
”*”*6 7
	vertex_TR
”*”*7 @
.
”*”*@ A
color
”*”*A F
=
”*”*G H
c2
”*”*I K
;
”*”*K L

m_textInfo
‘*‘* 
.
‘*‘* 
characterInfo
‘*‘* $
[
‘*‘*$ %
m_characterCount
‘*‘*% 5
]
‘*‘*5 6
.
‘*‘*6 7
	vertex_BR
‘*‘*7 @
.
‘*‘*@ A
color
‘*‘*A F
=
‘*‘*G H
c3
‘*‘*I K
;
‘*‘*K L
	GlyphRect
Ÿ*Ÿ* 
	glyphRect
Ÿ*Ÿ* 
=
Ÿ*Ÿ*  !"
m_cached_TextElement
Ÿ*Ÿ*" 6
.
Ÿ*Ÿ*6 7
m_Glyph
Ÿ*Ÿ*7 >
.
Ÿ*Ÿ*> ?
	glyphRect
Ÿ*Ÿ*? H
;
Ÿ*Ÿ*H I
Vector2
€*€* 
uv0
€*€* 
=
€*€* 
new
€*€* 
Vector2
€*€* %
(
€*€*% &
(
€*€*& '
float
€*€*' ,
)
€*€*, -
	glyphRect
€*€*- 6
.
€*€*6 7
x
€*€*7 8
/
€*€*9 :"
m_currentSpriteAsset
€*€*; O
.
€*€*O P
spriteSheet
€*€*P [
.
€*€*[ \
width
€*€*\ a
,
€*€*a b
(
€*€*c d
float
€*€*d i
)
€*€*i j
	glyphRect
€*€*j s
.
€*€*s t
y
€*€*t u
/
€*€*v w#
m_currentSpriteAsset€*€*x å
.€*€*å ç
spriteSheet€*€*ç ò
.€*€*ò ô
height€*€*ô ü
)€*€*ü †
;€*€*† °
Vector2
‹*‹* 
uv1
‹*‹* 
=
‹*‹* 
new
‹*‹* 
Vector2
‹*‹* %
(
‹*‹*% &
uv0
‹*‹*& )
.
‹*‹*) *
x
‹*‹** +
,
‹*‹*+ ,
(
‹*‹*- .
float
‹*‹*. 3
)
‹*‹*3 4
(
‹*‹*4 5
	glyphRect
‹*‹*5 >
.
‹*‹*> ?
y
‹*‹*? @
+
‹*‹*A B
	glyphRect
‹*‹*C L
.
‹*‹*L M
height
‹*‹*M S
)
‹*‹*S T
/
‹*‹*U V"
m_currentSpriteAsset
‹*‹*W k
.
‹*‹*k l
spriteSheet
‹*‹*l w
.
‹*‹*w x
height
‹*‹*x ~
)
‹*‹*~ 
;‹*‹* Ä
Vector2
›*›* 
uv2
›*›* 
=
›*›* 
new
›*›* 
Vector2
›*›* %
(
›*›*% &
(
›*›*& '
float
›*›*' ,
)
›*›*, -
(
›*›*- .
	glyphRect
›*›*. 7
.
›*›*7 8
x
›*›*8 9
+
›*›*: ;
	glyphRect
›*›*< E
.
›*›*E F
width
›*›*F K
)
›*›*K L
/
›*›*M N"
m_currentSpriteAsset
›*›*O c
.
›*›*c d
spriteSheet
›*›*d o
.
›*›*o p
width
›*›*p u
,
›*›*u v
uv1
›*›*w z
.
›*›*z {
y
›*›*{ |
)
›*›*| }
;
›*›*} ~
Vector2
ﬁ*ﬁ* 
uv3
ﬁ*ﬁ* 
=
ﬁ*ﬁ* 
new
ﬁ*ﬁ* 
Vector2
ﬁ*ﬁ* %
(
ﬁ*ﬁ*% &
uv2
ﬁ*ﬁ*& )
.
ﬁ*ﬁ*) *
x
ﬁ*ﬁ** +
,
ﬁ*ﬁ*+ ,
uv0
ﬁ*ﬁ*- 0
.
ﬁ*ﬁ*0 1
y
ﬁ*ﬁ*1 2
)
ﬁ*ﬁ*2 3
;
ﬁ*ﬁ*3 4

m_textInfo
·*·* 
.
·*·* 
characterInfo
·*·* $
[
·*·*$ %
m_characterCount
·*·*% 5
]
·*·*5 6
.
·*·*6 7
	vertex_BL
·*·*7 @
.
·*·*@ A
uv
·*·*A C
=
·*·*D E
uv0
·*·*F I
;
·*·*I J

m_textInfo
‚*‚* 
.
‚*‚* 
characterInfo
‚*‚* $
[
‚*‚*$ %
m_characterCount
‚*‚*% 5
]
‚*‚*5 6
.
‚*‚*6 7
	vertex_TL
‚*‚*7 @
.
‚*‚*@ A
uv
‚*‚*A C
=
‚*‚*D E
uv1
‚*‚*F I
;
‚*‚*I J

m_textInfo
„*„* 
.
„*„* 
characterInfo
„*„* $
[
„*„*$ %
m_characterCount
„*„*% 5
]
„*„*5 6
.
„*„*6 7
	vertex_TR
„*„*7 @
.
„*„*@ A
uv
„*„*A C
=
„*„*D E
uv2
„*„*F I
;
„*„*I J

m_textInfo
‰*‰* 
.
‰*‰* 
characterInfo
‰*‰* $
[
‰*‰*$ %
m_characterCount
‰*‰*% 5
]
‰*‰*5 6
.
‰*‰*6 7
	vertex_BR
‰*‰*7 @
.
‰*‰*@ A
uv
‰*‰*A C
=
‰*‰*D E
uv3
‰*‰*F I
;
‰*‰*I J
}
¯*¯* 	
	protected
Ä+Ä+ 
virtual
Ä+Ä+ 
void
Ä+Ä+ (
FillCharacterVertexBuffers
Ä+Ä+ 9
(
Ä+Ä+9 :
int
Ä+Ä+: =
i
Ä+Ä+> ?
,
Ä+Ä+? @
int
Ä+Ä+A D
index_X4
Ä+Ä+E M
)
Ä+Ä+M N
{
Å+Å+ 	
int
Ç+Ç+ 
materialIndex
Ç+Ç+ 
=
Ç+Ç+ 

m_textInfo
Ç+Ç+  *
.
Ç+Ç+* +
characterInfo
Ç+Ç++ 8
[
Ç+Ç+8 9
i
Ç+Ç+9 :
]
Ç+Ç+: ;
.
Ç+Ç+; <$
materialReferenceIndex
Ç+Ç+< R
;
Ç+Ç+R S
index_X4
É+É+ 
=
É+É+ 

m_textInfo
É+É+ !
.
É+É+! "
meshInfo
É+É+" *
[
É+É+* +
materialIndex
É+É++ 8
]
É+É+8 9
.
É+É+9 :
vertexCount
É+É+: E
;
É+É+E F
if
Ü+Ü+ 
(
Ü+Ü+ 
index_X4
Ü+Ü+ 
>=
Ü+Ü+ 

m_textInfo
Ü+Ü+ &
.
Ü+Ü+& '
meshInfo
Ü+Ü+' /
[
Ü+Ü+/ 0
materialIndex
Ü+Ü+0 =
]
Ü+Ü+= >
.
Ü+Ü+> ?
vertices
Ü+Ü+? G
.
Ü+Ü+G H
Length
Ü+Ü+H N
)
Ü+Ü+N O

m_textInfo
á+á+ 
.
á+á+ 
meshInfo
á+á+ #
[
á+á+# $
materialIndex
á+á+$ 1
]
á+á+1 2
.
á+á+2 3
ResizeMeshInfo
á+á+3 A
(
á+á+A B
Mathf
á+á+B G
.
á+á+G H
NextPowerOfTwo
á+á+H V
(
á+á+V W
(
á+á+W X
index_X4
á+á+X `
+
á+á+a b
$num
á+á+c d
)
á+á+d e
/
á+á+f g
$num
á+á+h i
)
á+á+i j
)
á+á+j k
;
á+á+k l
TMP_CharacterInfo
ä+ä+ 
[
ä+ä+ 
]
ä+ä+  
characterInfoArray
ä+ä+  2
=
ä+ä+3 4

m_textInfo
ä+ä+5 ?
.
ä+ä+? @
characterInfo
ä+ä+@ M
;
ä+ä+M N

m_textInfo
ã+ã+ 
.
ã+ã+ 
characterInfo
ã+ã+ $
[
ã+ã+$ %
i
ã+ã+% &
]
ã+ã+& '
.
ã+ã+' (
vertexIndex
ã+ã+( 3
=
ã+ã+4 5
index_X4
ã+ã+6 >
;
ã+ã+> ?

m_textInfo
é+é+ 
.
é+é+ 
meshInfo
é+é+ 
[
é+é+  
materialIndex
é+é+  -
]
é+é+- .
.
é+é+. /
vertices
é+é+/ 7
[
é+é+7 8
$num
é+é+8 9
+
é+é+: ;
index_X4
é+é+< D
]
é+é+D E
=
é+é+F G 
characterInfoArray
é+é+H Z
[
é+é+Z [
i
é+é+[ \
]
é+é+\ ]
.
é+é+] ^
	vertex_BL
é+é+^ g
.
é+é+g h
position
é+é+h p
;
é+é+p q

m_textInfo
è+è+ 
.
è+è+ 
meshInfo
è+è+ 
[
è+è+  
materialIndex
è+è+  -
]
è+è+- .
.
è+è+. /
vertices
è+è+/ 7
[
è+è+7 8
$num
è+è+8 9
+
è+è+: ;
index_X4
è+è+< D
]
è+è+D E
=
è+è+F G 
characterInfoArray
è+è+H Z
[
è+è+Z [
i
è+è+[ \
]
è+è+\ ]
.
è+è+] ^
	vertex_TL
è+è+^ g
.
è+è+g h
position
è+è+h p
;
è+è+p q

m_textInfo
ê+ê+ 
.
ê+ê+ 
meshInfo
ê+ê+ 
[
ê+ê+  
materialIndex
ê+ê+  -
]
ê+ê+- .
.
ê+ê+. /
vertices
ê+ê+/ 7
[
ê+ê+7 8
$num
ê+ê+8 9
+
ê+ê+: ;
index_X4
ê+ê+< D
]
ê+ê+D E
=
ê+ê+F G 
characterInfoArray
ê+ê+H Z
[
ê+ê+Z [
i
ê+ê+[ \
]
ê+ê+\ ]
.
ê+ê+] ^
	vertex_TR
ê+ê+^ g
.
ê+ê+g h
position
ê+ê+h p
;
ê+ê+p q

m_textInfo
ë+ë+ 
.
ë+ë+ 
meshInfo
ë+ë+ 
[
ë+ë+  
materialIndex
ë+ë+  -
]
ë+ë+- .
.
ë+ë+. /
vertices
ë+ë+/ 7
[
ë+ë+7 8
$num
ë+ë+8 9
+
ë+ë+: ;
index_X4
ë+ë+< D
]
ë+ë+D E
=
ë+ë+F G 
characterInfoArray
ë+ë+H Z
[
ë+ë+Z [
i
ë+ë+[ \
]
ë+ë+\ ]
.
ë+ë+] ^
	vertex_BR
ë+ë+^ g
.
ë+ë+g h
position
ë+ë+h p
;
ë+ë+p q

m_textInfo
ï+ï+ 
.
ï+ï+ 
meshInfo
ï+ï+ 
[
ï+ï+  
materialIndex
ï+ï+  -
]
ï+ï+- .
.
ï+ï+. /
uvs0
ï+ï+/ 3
[
ï+ï+3 4
$num
ï+ï+4 5
+
ï+ï+6 7
index_X4
ï+ï+8 @
]
ï+ï+@ A
=
ï+ï+B C 
characterInfoArray
ï+ï+D V
[
ï+ï+V W
i
ï+ï+W X
]
ï+ï+X Y
.
ï+ï+Y Z
	vertex_BL
ï+ï+Z c
.
ï+ï+c d
uv
ï+ï+d f
;
ï+ï+f g

m_textInfo
ñ+ñ+ 
.
ñ+ñ+ 
meshInfo
ñ+ñ+ 
[
ñ+ñ+  
materialIndex
ñ+ñ+  -
]
ñ+ñ+- .
.
ñ+ñ+. /
uvs0
ñ+ñ+/ 3
[
ñ+ñ+3 4
$num
ñ+ñ+4 5
+
ñ+ñ+6 7
index_X4
ñ+ñ+8 @
]
ñ+ñ+@ A
=
ñ+ñ+B C 
characterInfoArray
ñ+ñ+D V
[
ñ+ñ+V W
i
ñ+ñ+W X
]
ñ+ñ+X Y
.
ñ+ñ+Y Z
	vertex_TL
ñ+ñ+Z c
.
ñ+ñ+c d
uv
ñ+ñ+d f
;
ñ+ñ+f g

m_textInfo
ó+ó+ 
.
ó+ó+ 
meshInfo
ó+ó+ 
[
ó+ó+  
materialIndex
ó+ó+  -
]
ó+ó+- .
.
ó+ó+. /
uvs0
ó+ó+/ 3
[
ó+ó+3 4
$num
ó+ó+4 5
+
ó+ó+6 7
index_X4
ó+ó+8 @
]
ó+ó+@ A
=
ó+ó+B C 
characterInfoArray
ó+ó+D V
[
ó+ó+V W
i
ó+ó+W X
]
ó+ó+X Y
.
ó+ó+Y Z
	vertex_TR
ó+ó+Z c
.
ó+ó+c d
uv
ó+ó+d f
;
ó+ó+f g

m_textInfo
ò+ò+ 
.
ò+ò+ 
meshInfo
ò+ò+ 
[
ò+ò+  
materialIndex
ò+ò+  -
]
ò+ò+- .
.
ò+ò+. /
uvs0
ò+ò+/ 3
[
ò+ò+3 4
$num
ò+ò+4 5
+
ò+ò+6 7
index_X4
ò+ò+8 @
]
ò+ò+@ A
=
ò+ò+B C 
characterInfoArray
ò+ò+D V
[
ò+ò+V W
i
ò+ò+W X
]
ò+ò+X Y
.
ò+ò+Y Z
	vertex_BR
ò+ò+Z c
.
ò+ò+c d
uv
ò+ò+d f
;
ò+ò+f g

m_textInfo
ú+ú+ 
.
ú+ú+ 
meshInfo
ú+ú+ 
[
ú+ú+  
materialIndex
ú+ú+  -
]
ú+ú+- .
.
ú+ú+. /
uvs2
ú+ú+/ 3
[
ú+ú+3 4
$num
ú+ú+4 5
+
ú+ú+6 7
index_X4
ú+ú+8 @
]
ú+ú+@ A
=
ú+ú+B C 
characterInfoArray
ú+ú+D V
[
ú+ú+V W
i
ú+ú+W X
]
ú+ú+X Y
.
ú+ú+Y Z
	vertex_BL
ú+ú+Z c
.
ú+ú+c d
uv2
ú+ú+d g
;
ú+ú+g h

m_textInfo
ù+ù+ 
.
ù+ù+ 
meshInfo
ù+ù+ 
[
ù+ù+  
materialIndex
ù+ù+  -
]
ù+ù+- .
.
ù+ù+. /
uvs2
ù+ù+/ 3
[
ù+ù+3 4
$num
ù+ù+4 5
+
ù+ù+6 7
index_X4
ù+ù+8 @
]
ù+ù+@ A
=
ù+ù+B C 
characterInfoArray
ù+ù+D V
[
ù+ù+V W
i
ù+ù+W X
]
ù+ù+X Y
.
ù+ù+Y Z
	vertex_TL
ù+ù+Z c
.
ù+ù+c d
uv2
ù+ù+d g
;
ù+ù+g h

m_textInfo
û+û+ 
.
û+û+ 
meshInfo
û+û+ 
[
û+û+  
materialIndex
û+û+  -
]
û+û+- .
.
û+û+. /
uvs2
û+û+/ 3
[
û+û+3 4
$num
û+û+4 5
+
û+û+6 7
index_X4
û+û+8 @
]
û+û+@ A
=
û+û+B C 
characterInfoArray
û+û+D V
[
û+û+V W
i
û+û+W X
]
û+û+X Y
.
û+û+Y Z
	vertex_TR
û+û+Z c
.
û+û+c d
uv2
û+û+d g
;
û+û+g h

m_textInfo
ü+ü+ 
.
ü+ü+ 
meshInfo
ü+ü+ 
[
ü+ü+  
materialIndex
ü+ü+  -
]
ü+ü+- .
.
ü+ü+. /
uvs2
ü+ü+/ 3
[
ü+ü+3 4
$num
ü+ü+4 5
+
ü+ü+6 7
index_X4
ü+ü+8 @
]
ü+ü+@ A
=
ü+ü+B C 
characterInfoArray
ü+ü+D V
[
ü+ü+V W
i
ü+ü+W X
]
ü+ü+X Y
.
ü+ü+Y Z
	vertex_BR
ü+ü+Z c
.
ü+ü+c d
uv2
ü+ü+d g
;
ü+ü+g h

m_textInfo
™+™+ 
.
™+™+ 
meshInfo
™+™+ 
[
™+™+  
materialIndex
™+™+  -
]
™+™+- .
.
™+™+. /
colors32
™+™+/ 7
[
™+™+7 8
$num
™+™+8 9
+
™+™+: ;
index_X4
™+™+< D
]
™+™+D E
=
™+™+F G 
characterInfoArray
™+™+H Z
[
™+™+Z [
i
™+™+[ \
]
™+™+\ ]
.
™+™+] ^
	vertex_BL
™+™+^ g
.
™+™+g h
color
™+™+h m
;
™+™+m n

m_textInfo
´+´+ 
.
´+´+ 
meshInfo
´+´+ 
[
´+´+  
materialIndex
´+´+  -
]
´+´+- .
.
´+´+. /
colors32
´+´+/ 7
[
´+´+7 8
$num
´+´+8 9
+
´+´+: ;
index_X4
´+´+< D
]
´+´+D E
=
´+´+F G 
characterInfoArray
´+´+H Z
[
´+´+Z [
i
´+´+[ \
]
´+´+\ ]
.
´+´+] ^
	vertex_TL
´+´+^ g
.
´+´+g h
color
´+´+h m
;
´+´+m n

m_textInfo
¨+¨+ 
.
¨+¨+ 
meshInfo
¨+¨+ 
[
¨+¨+  
materialIndex
¨+¨+  -
]
¨+¨+- .
.
¨+¨+. /
colors32
¨+¨+/ 7
[
¨+¨+7 8
$num
¨+¨+8 9
+
¨+¨+: ;
index_X4
¨+¨+< D
]
¨+¨+D E
=
¨+¨+F G 
characterInfoArray
¨+¨+H Z
[
¨+¨+Z [
i
¨+¨+[ \
]
¨+¨+\ ]
.
¨+¨+] ^
	vertex_TR
¨+¨+^ g
.
¨+¨+g h
color
¨+¨+h m
;
¨+¨+m n

m_textInfo
≠+≠+ 
.
≠+≠+ 
meshInfo
≠+≠+ 
[
≠+≠+  
materialIndex
≠+≠+  -
]
≠+≠+- .
.
≠+≠+. /
colors32
≠+≠+/ 7
[
≠+≠+7 8
$num
≠+≠+8 9
+
≠+≠+: ;
index_X4
≠+≠+< D
]
≠+≠+D E
=
≠+≠+F G 
characterInfoArray
≠+≠+H Z
[
≠+≠+Z [
i
≠+≠+[ \
]
≠+≠+\ ]
.
≠+≠+] ^
	vertex_BR
≠+≠+^ g
.
≠+≠+g h
color
≠+≠+h m
;
≠+≠+m n

m_textInfo
Ø+Ø+ 
.
Ø+Ø+ 
meshInfo
Ø+Ø+ 
[
Ø+Ø+  
materialIndex
Ø+Ø+  -
]
Ø+Ø+- .
.
Ø+Ø+. /
vertexCount
Ø+Ø+/ :
=
Ø+Ø+; <
index_X4
Ø+Ø+= E
+
Ø+Ø+F G
$num
Ø+Ø+H I
;
Ø+Ø+I J
}
∞+∞+ 	
	protected
≥+≥+ 
virtual
≥+≥+ 
void
≥+≥+ (
FillCharacterVertexBuffers
≥+≥+ 9
(
≥+≥+9 :
int
≥+≥+: =
i
≥+≥+> ?
,
≥+≥+? @
int
≥+≥+A D
index_X4
≥+≥+E M
,
≥+≥+M N
bool
≥+≥+O S
isVolumetric
≥+≥+T `
)
≥+≥+` a
{
¥+¥+ 	
int
µ+µ+ 
materialIndex
µ+µ+ 
=
µ+µ+ 

m_textInfo
µ+µ+  *
.
µ+µ+* +
characterInfo
µ+µ++ 8
[
µ+µ+8 9
i
µ+µ+9 :
]
µ+µ+: ;
.
µ+µ+; <$
materialReferenceIndex
µ+µ+< R
;
µ+µ+R S
index_X4
∂+∂+ 
=
∂+∂+ 

m_textInfo
∂+∂+ !
.
∂+∂+! "
meshInfo
∂+∂+" *
[
∂+∂+* +
materialIndex
∂+∂++ 8
]
∂+∂+8 9
.
∂+∂+9 :
vertexCount
∂+∂+: E
;
∂+∂+E F
if
π+π+ 
(
π+π+ 
index_X4
π+π+ 
>=
π+π+ 

m_textInfo
π+π+ &
.
π+π+& '
meshInfo
π+π+' /
[
π+π+/ 0
materialIndex
π+π+0 =
]
π+π+= >
.
π+π+> ?
vertices
π+π+? G
.
π+π+G H
Length
π+π+H N
)
π+π+N O

m_textInfo
∫+∫+ 
.
∫+∫+ 
meshInfo
∫+∫+ #
[
∫+∫+# $
materialIndex
∫+∫+$ 1
]
∫+∫+1 2
.
∫+∫+2 3
ResizeMeshInfo
∫+∫+3 A
(
∫+∫+A B
Mathf
∫+∫+B G
.
∫+∫+G H
NextPowerOfTwo
∫+∫+H V
(
∫+∫+V W
(
∫+∫+W X
index_X4
∫+∫+X `
+
∫+∫+a b
(
∫+∫+c d
isVolumetric
∫+∫+d p
?
∫+∫+q r
$num
∫+∫+s t
:
∫+∫+u v
$num
∫+∫+w x
)
∫+∫+x y
)
∫+∫+y z
/
∫+∫+{ |
$num
∫+∫+} ~
)
∫+∫+~ 
)∫+∫+ Ä
;∫+∫+Ä Å
TMP_CharacterInfo
º+º+ 
[
º+º+ 
]
º+º+  
characterInfoArray
º+º+  2
=
º+º+3 4

m_textInfo
º+º+5 ?
.
º+º+? @
characterInfo
º+º+@ M
;
º+º+M N

m_textInfo
Ω+Ω+ 
.
Ω+Ω+ 
characterInfo
Ω+Ω+ $
[
Ω+Ω+$ %
i
Ω+Ω+% &
]
Ω+Ω+& '
.
Ω+Ω+' (
vertexIndex
Ω+Ω+( 3
=
Ω+Ω+4 5
index_X4
Ω+Ω+6 >
;
Ω+Ω+> ?

m_textInfo
¿+¿+ 
.
¿+¿+ 
meshInfo
¿+¿+ 
[
¿+¿+  
materialIndex
¿+¿+  -
]
¿+¿+- .
.
¿+¿+. /
vertices
¿+¿+/ 7
[
¿+¿+7 8
$num
¿+¿+8 9
+
¿+¿+: ;
index_X4
¿+¿+< D
]
¿+¿+D E
=
¿+¿+F G 
characterInfoArray
¿+¿+H Z
[
¿+¿+Z [
i
¿+¿+[ \
]
¿+¿+\ ]
.
¿+¿+] ^
	vertex_BL
¿+¿+^ g
.
¿+¿+g h
position
¿+¿+h p
;
¿+¿+p q

m_textInfo
¡+¡+ 
.
¡+¡+ 
meshInfo
¡+¡+ 
[
¡+¡+  
materialIndex
¡+¡+  -
]
¡+¡+- .
.
¡+¡+. /
vertices
¡+¡+/ 7
[
¡+¡+7 8
$num
¡+¡+8 9
+
¡+¡+: ;
index_X4
¡+¡+< D
]
¡+¡+D E
=
¡+¡+F G 
characterInfoArray
¡+¡+H Z
[
¡+¡+Z [
i
¡+¡+[ \
]
¡+¡+\ ]
.
¡+¡+] ^
	vertex_TL
¡+¡+^ g
.
¡+¡+g h
position
¡+¡+h p
;
¡+¡+p q

m_textInfo
¬+¬+ 
.
¬+¬+ 
meshInfo
¬+¬+ 
[
¬+¬+  
materialIndex
¬+¬+  -
]
¬+¬+- .
.
¬+¬+. /
vertices
¬+¬+/ 7
[
¬+¬+7 8
$num
¬+¬+8 9
+
¬+¬+: ;
index_X4
¬+¬+< D
]
¬+¬+D E
=
¬+¬+F G 
characterInfoArray
¬+¬+H Z
[
¬+¬+Z [
i
¬+¬+[ \
]
¬+¬+\ ]
.
¬+¬+] ^
	vertex_TR
¬+¬+^ g
.
¬+¬+g h
position
¬+¬+h p
;
¬+¬+p q

m_textInfo
√+√+ 
.
√+√+ 
meshInfo
√+√+ 
[
√+√+  
materialIndex
√+√+  -
]
√+√+- .
.
√+√+. /
vertices
√+√+/ 7
[
√+√+7 8
$num
√+√+8 9
+
√+√+: ;
index_X4
√+√+< D
]
√+√+D E
=
√+√+F G 
characterInfoArray
√+√+H Z
[
√+√+Z [
i
√+√+[ \
]
√+√+\ ]
.
√+√+] ^
	vertex_BR
√+√+^ g
.
√+√+g h
position
√+√+h p
;
√+√+p q

m_textInfo
œ+œ+ 
.
œ+œ+ 
meshInfo
œ+œ+ 
[
œ+œ+  
materialIndex
œ+œ+  -
]
œ+œ+- .
.
œ+œ+. /
uvs0
œ+œ+/ 3
[
œ+œ+3 4
$num
œ+œ+4 5
+
œ+œ+6 7
index_X4
œ+œ+8 @
]
œ+œ+@ A
=
œ+œ+B C 
characterInfoArray
œ+œ+D V
[
œ+œ+V W
i
œ+œ+W X
]
œ+œ+X Y
.
œ+œ+Y Z
	vertex_BL
œ+œ+Z c
.
œ+œ+c d
uv
œ+œ+d f
;
œ+œ+f g

m_textInfo
–+–+ 
.
–+–+ 
meshInfo
–+–+ 
[
–+–+  
materialIndex
–+–+  -
]
–+–+- .
.
–+–+. /
uvs0
–+–+/ 3
[
–+–+3 4
$num
–+–+4 5
+
–+–+6 7
index_X4
–+–+8 @
]
–+–+@ A
=
–+–+B C 
characterInfoArray
–+–+D V
[
–+–+V W
i
–+–+W X
]
–+–+X Y
.
–+–+Y Z
	vertex_TL
–+–+Z c
.
–+–+c d
uv
–+–+d f
;
–+–+f g

m_textInfo
—+—+ 
.
—+—+ 
meshInfo
—+—+ 
[
—+—+  
materialIndex
—+—+  -
]
—+—+- .
.
—+—+. /
uvs0
—+—+/ 3
[
—+—+3 4
$num
—+—+4 5
+
—+—+6 7
index_X4
—+—+8 @
]
—+—+@ A
=
—+—+B C 
characterInfoArray
—+—+D V
[
—+—+V W
i
—+—+W X
]
—+—+X Y
.
—+—+Y Z
	vertex_TR
—+—+Z c
.
—+—+c d
uv
—+—+d f
;
—+—+f g

m_textInfo
“+“+ 
.
“+“+ 
meshInfo
“+“+ 
[
“+“+  
materialIndex
“+“+  -
]
“+“+- .
.
“+“+. /
uvs0
“+“+/ 3
[
“+“+3 4
$num
“+“+4 5
+
“+“+6 7
index_X4
“+“+8 @
]
“+“+@ A
=
“+“+B C 
characterInfoArray
“+“+D V
[
“+“+V W
i
“+“+W X
]
“+“+X Y
.
“+“+Y Z
	vertex_BR
“+“+Z c
.
“+“+c d
uv
“+“+d f
;
“+“+f g
if
‘+‘+ 
(
‘+‘+ 
isVolumetric
‘+‘+ 
)
‘+‘+ 
{
’+’+ 

m_textInfo
÷+÷+ 
.
÷+÷+ 
meshInfo
÷+÷+ #
[
÷+÷+# $
materialIndex
÷+÷+$ 1
]
÷+÷+1 2
.
÷+÷+2 3
uvs0
÷+÷+3 7
[
÷+÷+7 8
$num
÷+÷+8 9
+
÷+÷+: ;
index_X4
÷+÷+< D
]
÷+÷+D E
=
÷+÷+F G 
characterInfoArray
÷+÷+H Z
[
÷+÷+Z [
i
÷+÷+[ \
]
÷+÷+\ ]
.
÷+÷+] ^
	vertex_BL
÷+÷+^ g
.
÷+÷+g h
uv
÷+÷+h j
;
÷+÷+j k

m_textInfo
◊+◊+ 
.
◊+◊+ 
meshInfo
◊+◊+ #
[
◊+◊+# $
materialIndex
◊+◊+$ 1
]
◊+◊+1 2
.
◊+◊+2 3
uvs0
◊+◊+3 7
[
◊+◊+7 8
$num
◊+◊+8 9
+
◊+◊+: ;
index_X4
◊+◊+< D
]
◊+◊+D E
=
◊+◊+F G 
characterInfoArray
◊+◊+H Z
[
◊+◊+Z [
i
◊+◊+[ \
]
◊+◊+\ ]
.
◊+◊+] ^
	vertex_TL
◊+◊+^ g
.
◊+◊+g h
uv
◊+◊+h j
;
◊+◊+j k

m_textInfo
ÿ+ÿ+ 
.
ÿ+ÿ+ 
meshInfo
ÿ+ÿ+ #
[
ÿ+ÿ+# $
materialIndex
ÿ+ÿ+$ 1
]
ÿ+ÿ+1 2
.
ÿ+ÿ+2 3
uvs0
ÿ+ÿ+3 7
[
ÿ+ÿ+7 8
$num
ÿ+ÿ+8 9
+
ÿ+ÿ+: ;
index_X4
ÿ+ÿ+< D
]
ÿ+ÿ+D E
=
ÿ+ÿ+F G 
characterInfoArray
ÿ+ÿ+H Z
[
ÿ+ÿ+Z [
i
ÿ+ÿ+[ \
]
ÿ+ÿ+\ ]
.
ÿ+ÿ+] ^
	vertex_TR
ÿ+ÿ+^ g
.
ÿ+ÿ+g h
uv
ÿ+ÿ+h j
;
ÿ+ÿ+j k

m_textInfo
Ÿ+Ÿ+ 
.
Ÿ+Ÿ+ 
meshInfo
Ÿ+Ÿ+ #
[
Ÿ+Ÿ+# $
materialIndex
Ÿ+Ÿ+$ 1
]
Ÿ+Ÿ+1 2
.
Ÿ+Ÿ+2 3
uvs0
Ÿ+Ÿ+3 7
[
Ÿ+Ÿ+7 8
$num
Ÿ+Ÿ+8 9
+
Ÿ+Ÿ+: ;
index_X4
Ÿ+Ÿ+< D
]
Ÿ+Ÿ+D E
=
Ÿ+Ÿ+F G 
characterInfoArray
Ÿ+Ÿ+H Z
[
Ÿ+Ÿ+Z [
i
Ÿ+Ÿ+[ \
]
Ÿ+Ÿ+\ ]
.
Ÿ+Ÿ+] ^
	vertex_BR
Ÿ+Ÿ+^ g
.
Ÿ+Ÿ+g h
uv
Ÿ+Ÿ+h j
;
Ÿ+Ÿ+j k
}
⁄+⁄+ 

m_textInfo
ﬁ+ﬁ+ 
.
ﬁ+ﬁ+ 
meshInfo
ﬁ+ﬁ+ 
[
ﬁ+ﬁ+  
materialIndex
ﬁ+ﬁ+  -
]
ﬁ+ﬁ+- .
.
ﬁ+ﬁ+. /
uvs2
ﬁ+ﬁ+/ 3
[
ﬁ+ﬁ+3 4
$num
ﬁ+ﬁ+4 5
+
ﬁ+ﬁ+6 7
index_X4
ﬁ+ﬁ+8 @
]
ﬁ+ﬁ+@ A
=
ﬁ+ﬁ+B C 
characterInfoArray
ﬁ+ﬁ+D V
[
ﬁ+ﬁ+V W
i
ﬁ+ﬁ+W X
]
ﬁ+ﬁ+X Y
.
ﬁ+ﬁ+Y Z
	vertex_BL
ﬁ+ﬁ+Z c
.
ﬁ+ﬁ+c d
uv2
ﬁ+ﬁ+d g
;
ﬁ+ﬁ+g h

m_textInfo
ﬂ+ﬂ+ 
.
ﬂ+ﬂ+ 
meshInfo
ﬂ+ﬂ+ 
[
ﬂ+ﬂ+  
materialIndex
ﬂ+ﬂ+  -
]
ﬂ+ﬂ+- .
.
ﬂ+ﬂ+. /
uvs2
ﬂ+ﬂ+/ 3
[
ﬂ+ﬂ+3 4
$num
ﬂ+ﬂ+4 5
+
ﬂ+ﬂ+6 7
index_X4
ﬂ+ﬂ+8 @
]
ﬂ+ﬂ+@ A
=
ﬂ+ﬂ+B C 
characterInfoArray
ﬂ+ﬂ+D V
[
ﬂ+ﬂ+V W
i
ﬂ+ﬂ+W X
]
ﬂ+ﬂ+X Y
.
ﬂ+ﬂ+Y Z
	vertex_TL
ﬂ+ﬂ+Z c
.
ﬂ+ﬂ+c d
uv2
ﬂ+ﬂ+d g
;
ﬂ+ﬂ+g h

m_textInfo
‡+‡+ 
.
‡+‡+ 
meshInfo
‡+‡+ 
[
‡+‡+  
materialIndex
‡+‡+  -
]
‡+‡+- .
.
‡+‡+. /
uvs2
‡+‡+/ 3
[
‡+‡+3 4
$num
‡+‡+4 5
+
‡+‡+6 7
index_X4
‡+‡+8 @
]
‡+‡+@ A
=
‡+‡+B C 
characterInfoArray
‡+‡+D V
[
‡+‡+V W
i
‡+‡+W X
]
‡+‡+X Y
.
‡+‡+Y Z
	vertex_TR
‡+‡+Z c
.
‡+‡+c d
uv2
‡+‡+d g
;
‡+‡+g h

m_textInfo
·+·+ 
.
·+·+ 
meshInfo
·+·+ 
[
·+·+  
materialIndex
·+·+  -
]
·+·+- .
.
·+·+. /
uvs2
·+·+/ 3
[
·+·+3 4
$num
·+·+4 5
+
·+·+6 7
index_X4
·+·+8 @
]
·+·+@ A
=
·+·+B C 
characterInfoArray
·+·+D V
[
·+·+V W
i
·+·+W X
]
·+·+X Y
.
·+·+Y Z
	vertex_BR
·+·+Z c
.
·+·+c d
uv2
·+·+d g
;
·+·+g h
if
„+„+ 
(
„+„+ 
isVolumetric
„+„+ 
)
„+„+ 
{
‰+‰+ 

m_textInfo
Â+Â+ 
.
Â+Â+ 
meshInfo
Â+Â+ #
[
Â+Â+# $
materialIndex
Â+Â+$ 1
]
Â+Â+1 2
.
Â+Â+2 3
uvs2
Â+Â+3 7
[
Â+Â+7 8
$num
Â+Â+8 9
+
Â+Â+: ;
index_X4
Â+Â+< D
]
Â+Â+D E
=
Â+Â+F G 
characterInfoArray
Â+Â+H Z
[
Â+Â+Z [
i
Â+Â+[ \
]
Â+Â+\ ]
.
Â+Â+] ^
	vertex_BL
Â+Â+^ g
.
Â+Â+g h
uv2
Â+Â+h k
;
Â+Â+k l

m_textInfo
Ê+Ê+ 
.
Ê+Ê+ 
meshInfo
Ê+Ê+ #
[
Ê+Ê+# $
materialIndex
Ê+Ê+$ 1
]
Ê+Ê+1 2
.
Ê+Ê+2 3
uvs2
Ê+Ê+3 7
[
Ê+Ê+7 8
$num
Ê+Ê+8 9
+
Ê+Ê+: ;
index_X4
Ê+Ê+< D
]
Ê+Ê+D E
=
Ê+Ê+F G 
characterInfoArray
Ê+Ê+H Z
[
Ê+Ê+Z [
i
Ê+Ê+[ \
]
Ê+Ê+\ ]
.
Ê+Ê+] ^
	vertex_TL
Ê+Ê+^ g
.
Ê+Ê+g h
uv2
Ê+Ê+h k
;
Ê+Ê+k l

m_textInfo
Á+Á+ 
.
Á+Á+ 
meshInfo
Á+Á+ #
[
Á+Á+# $
materialIndex
Á+Á+$ 1
]
Á+Á+1 2
.
Á+Á+2 3
uvs2
Á+Á+3 7
[
Á+Á+7 8
$num
Á+Á+8 9
+
Á+Á+: ;
index_X4
Á+Á+< D
]
Á+Á+D E
=
Á+Á+F G 
characterInfoArray
Á+Á+H Z
[
Á+Á+Z [
i
Á+Á+[ \
]
Á+Á+\ ]
.
Á+Á+] ^
	vertex_TR
Á+Á+^ g
.
Á+Á+g h
uv2
Á+Á+h k
;
Á+Á+k l

m_textInfo
Ë+Ë+ 
.
Ë+Ë+ 
meshInfo
Ë+Ë+ #
[
Ë+Ë+# $
materialIndex
Ë+Ë+$ 1
]
Ë+Ë+1 2
.
Ë+Ë+2 3
uvs2
Ë+Ë+3 7
[
Ë+Ë+7 8
$num
Ë+Ë+8 9
+
Ë+Ë+: ;
index_X4
Ë+Ë+< D
]
Ë+Ë+D E
=
Ë+Ë+F G 
characterInfoArray
Ë+Ë+H Z
[
Ë+Ë+Z [
i
Ë+Ë+[ \
]
Ë+Ë+\ ]
.
Ë+Ë+] ^
	vertex_BR
Ë+Ë+^ g
.
Ë+Ë+g h
uv2
Ë+Ë+h k
;
Ë+Ë+k l
}
È+È+ 

m_textInfo
Ù+Ù+ 
.
Ù+Ù+ 
meshInfo
Ù+Ù+ 
[
Ù+Ù+  
materialIndex
Ù+Ù+  -
]
Ù+Ù+- .
.
Ù+Ù+. /
colors32
Ù+Ù+/ 7
[
Ù+Ù+7 8
$num
Ù+Ù+8 9
+
Ù+Ù+: ;
index_X4
Ù+Ù+< D
]
Ù+Ù+D E
=
Ù+Ù+F G 
characterInfoArray
Ù+Ù+H Z
[
Ù+Ù+Z [
i
Ù+Ù+[ \
]
Ù+Ù+\ ]
.
Ù+Ù+] ^
	vertex_BL
Ù+Ù+^ g
.
Ù+Ù+g h
color
Ù+Ù+h m
;
Ù+Ù+m n

m_textInfo
ı+ı+ 
.
ı+ı+ 
meshInfo
ı+ı+ 
[
ı+ı+  
materialIndex
ı+ı+  -
]
ı+ı+- .
.
ı+ı+. /
colors32
ı+ı+/ 7
[
ı+ı+7 8
$num
ı+ı+8 9
+
ı+ı+: ;
index_X4
ı+ı+< D
]
ı+ı+D E
=
ı+ı+F G 
characterInfoArray
ı+ı+H Z
[
ı+ı+Z [
i
ı+ı+[ \
]
ı+ı+\ ]
.
ı+ı+] ^
	vertex_TL
ı+ı+^ g
.
ı+ı+g h
color
ı+ı+h m
;
ı+ı+m n

m_textInfo
ˆ+ˆ+ 
.
ˆ+ˆ+ 
meshInfo
ˆ+ˆ+ 
[
ˆ+ˆ+  
materialIndex
ˆ+ˆ+  -
]
ˆ+ˆ+- .
.
ˆ+ˆ+. /
colors32
ˆ+ˆ+/ 7
[
ˆ+ˆ+7 8
$num
ˆ+ˆ+8 9
+
ˆ+ˆ+: ;
index_X4
ˆ+ˆ+< D
]
ˆ+ˆ+D E
=
ˆ+ˆ+F G 
characterInfoArray
ˆ+ˆ+H Z
[
ˆ+ˆ+Z [
i
ˆ+ˆ+[ \
]
ˆ+ˆ+\ ]
.
ˆ+ˆ+] ^
	vertex_TR
ˆ+ˆ+^ g
.
ˆ+ˆ+g h
color
ˆ+ˆ+h m
;
ˆ+ˆ+m n

m_textInfo
˜+˜+ 
.
˜+˜+ 
meshInfo
˜+˜+ 
[
˜+˜+  
materialIndex
˜+˜+  -
]
˜+˜+- .
.
˜+˜+. /
colors32
˜+˜+/ 7
[
˜+˜+7 8
$num
˜+˜+8 9
+
˜+˜+: ;
index_X4
˜+˜+< D
]
˜+˜+D E
=
˜+˜+F G 
characterInfoArray
˜+˜+H Z
[
˜+˜+Z [
i
˜+˜+[ \
]
˜+˜+\ ]
.
˜+˜+] ^
	vertex_BR
˜+˜+^ g
.
˜+˜+g h
color
˜+˜+h m
;
˜+˜+m n
if
˘+˘+ 
(
˘+˘+ 
isVolumetric
˘+˘+ 
)
˘+˘+ 
{
˙+˙+ 
Color32
˚+˚+ 
	backColor
˚+˚+ !
=
˚+˚+" #
new
˚+˚+$ '
Color32
˚+˚+( /
(
˚+˚+/ 0
$num
˚+˚+0 3
,
˚+˚+3 4
$num
˚+˚+5 8
,
˚+˚+8 9
$num
˚+˚+: =
,
˚+˚+= >
$num
˚+˚+? B
)
˚+˚+B C
;
˚+˚+C D

m_textInfo
¸+¸+ 
.
¸+¸+ 
meshInfo
¸+¸+ #
[
¸+¸+# $
materialIndex
¸+¸+$ 1
]
¸+¸+1 2
.
¸+¸+2 3
colors32
¸+¸+3 ;
[
¸+¸+; <
$num
¸+¸+< =
+
¸+¸+> ?
index_X4
¸+¸+@ H
]
¸+¸+H I
=
¸+¸+J K
	backColor
¸+¸+L U
;
¸+¸+U V

m_textInfo
˝+˝+ 
.
˝+˝+ 
meshInfo
˝+˝+ #
[
˝+˝+# $
materialIndex
˝+˝+$ 1
]
˝+˝+1 2
.
˝+˝+2 3
colors32
˝+˝+3 ;
[
˝+˝+; <
$num
˝+˝+< =
+
˝+˝+> ?
index_X4
˝+˝+@ H
]
˝+˝+H I
=
˝+˝+J K
	backColor
˝+˝+L U
;
˝+˝+U V

m_textInfo
˛+˛+ 
.
˛+˛+ 
meshInfo
˛+˛+ #
[
˛+˛+# $
materialIndex
˛+˛+$ 1
]
˛+˛+1 2
.
˛+˛+2 3
colors32
˛+˛+3 ;
[
˛+˛+; <
$num
˛+˛+< =
+
˛+˛+> ?
index_X4
˛+˛+@ H
]
˛+˛+H I
=
˛+˛+J K
	backColor
˛+˛+L U
;
˛+˛+U V

m_textInfo
ˇ+ˇ+ 
.
ˇ+ˇ+ 
meshInfo
ˇ+ˇ+ #
[
ˇ+ˇ+# $
materialIndex
ˇ+ˇ+$ 1
]
ˇ+ˇ+1 2
.
ˇ+ˇ+2 3
colors32
ˇ+ˇ+3 ;
[
ˇ+ˇ+; <
$num
ˇ+ˇ+< =
+
ˇ+ˇ+> ?
index_X4
ˇ+ˇ+@ H
]
ˇ+ˇ+H I
=
ˇ+ˇ+J K
	backColor
ˇ+ˇ+L U
;
ˇ+ˇ+U V
}
Ä,Ä, 

m_textInfo
Ç,Ç, 
.
Ç,Ç, 
meshInfo
Ç,Ç, 
[
Ç,Ç,  
materialIndex
Ç,Ç,  -
]
Ç,Ç,- .
.
Ç,Ç,. /
vertexCount
Ç,Ç,/ :
=
Ç,Ç,; <
index_X4
Ç,Ç,= E
+
Ç,Ç,F G
(
Ç,Ç,H I
!
Ç,Ç,I J
isVolumetric
Ç,Ç,J V
?
Ç,Ç,W X
$num
Ç,Ç,Y Z
:
Ç,Ç,[ \
$num
Ç,Ç,] ^
)
Ç,Ç,^ _
;
Ç,Ç,_ `
}
É,É, 	
	protected
ã,ã, 
virtual
ã,ã, 
void
ã,ã, %
FillSpriteVertexBuffers
ã,ã, 6
(
ã,ã,6 7
int
ã,ã,7 :
i
ã,ã,; <
,
ã,ã,< =
int
ã,ã,> A
index_X4
ã,ã,B J
)
ã,ã,J K
{
å,å, 	
int
ç,ç, 
materialIndex
ç,ç, 
=
ç,ç, 

m_textInfo
ç,ç,  *
.
ç,ç,* +
characterInfo
ç,ç,+ 8
[
ç,ç,8 9
i
ç,ç,9 :
]
ç,ç,: ;
.
ç,ç,; <$
materialReferenceIndex
ç,ç,< R
;
ç,ç,R S
index_X4
é,é, 
=
é,é, 

m_textInfo
é,é, !
.
é,é,! "
meshInfo
é,é," *
[
é,é,* +
materialIndex
é,é,+ 8
]
é,é,8 9
.
é,é,9 :
vertexCount
é,é,: E
;
é,é,E F
if
ë,ë, 
(
ë,ë, 
index_X4
ë,ë, 
>=
ë,ë, 

m_textInfo
ë,ë, &
.
ë,ë,& '
meshInfo
ë,ë,' /
[
ë,ë,/ 0
materialIndex
ë,ë,0 =
]
ë,ë,= >
.
ë,ë,> ?
vertices
ë,ë,? G
.
ë,ë,G H
Length
ë,ë,H N
)
ë,ë,N O

m_textInfo
í,í, 
.
í,í, 
meshInfo
í,í, #
[
í,í,# $
materialIndex
í,í,$ 1
]
í,í,1 2
.
í,í,2 3
ResizeMeshInfo
í,í,3 A
(
í,í,A B
Mathf
í,í,B G
.
í,í,G H
NextPowerOfTwo
í,í,H V
(
í,í,V W
(
í,í,W X
index_X4
í,í,X `
+
í,í,a b
$num
í,í,c d
)
í,í,d e
/
í,í,f g
$num
í,í,h i
)
í,í,i j
)
í,í,j k
;
í,í,k l
TMP_CharacterInfo
î,î, 
[
î,î, 
]
î,î,  
characterInfoArray
î,î,  2
=
î,î,3 4

m_textInfo
î,î,5 ?
.
î,î,? @
characterInfo
î,î,@ M
;
î,î,M N

m_textInfo
ï,ï, 
.
ï,ï, 
characterInfo
ï,ï, $
[
ï,ï,$ %
i
ï,ï,% &
]
ï,ï,& '
.
ï,ï,' (
vertexIndex
ï,ï,( 3
=
ï,ï,4 5
index_X4
ï,ï,6 >
;
ï,ï,> ?

m_textInfo
ò,ò, 
.
ò,ò, 
meshInfo
ò,ò, 
[
ò,ò,  
materialIndex
ò,ò,  -
]
ò,ò,- .
.
ò,ò,. /
vertices
ò,ò,/ 7
[
ò,ò,7 8
$num
ò,ò,8 9
+
ò,ò,: ;
index_X4
ò,ò,< D
]
ò,ò,D E
=
ò,ò,F G 
characterInfoArray
ò,ò,H Z
[
ò,ò,Z [
i
ò,ò,[ \
]
ò,ò,\ ]
.
ò,ò,] ^
	vertex_BL
ò,ò,^ g
.
ò,ò,g h
position
ò,ò,h p
;
ò,ò,p q

m_textInfo
ô,ô, 
.
ô,ô, 
meshInfo
ô,ô, 
[
ô,ô,  
materialIndex
ô,ô,  -
]
ô,ô,- .
.
ô,ô,. /
vertices
ô,ô,/ 7
[
ô,ô,7 8
$num
ô,ô,8 9
+
ô,ô,: ;
index_X4
ô,ô,< D
]
ô,ô,D E
=
ô,ô,F G 
characterInfoArray
ô,ô,H Z
[
ô,ô,Z [
i
ô,ô,[ \
]
ô,ô,\ ]
.
ô,ô,] ^
	vertex_TL
ô,ô,^ g
.
ô,ô,g h
position
ô,ô,h p
;
ô,ô,p q

m_textInfo
ö,ö, 
.
ö,ö, 
meshInfo
ö,ö, 
[
ö,ö,  
materialIndex
ö,ö,  -
]
ö,ö,- .
.
ö,ö,. /
vertices
ö,ö,/ 7
[
ö,ö,7 8
$num
ö,ö,8 9
+
ö,ö,: ;
index_X4
ö,ö,< D
]
ö,ö,D E
=
ö,ö,F G 
characterInfoArray
ö,ö,H Z
[
ö,ö,Z [
i
ö,ö,[ \
]
ö,ö,\ ]
.
ö,ö,] ^
	vertex_TR
ö,ö,^ g
.
ö,ö,g h
position
ö,ö,h p
;
ö,ö,p q

m_textInfo
õ,õ, 
.
õ,õ, 
meshInfo
õ,õ, 
[
õ,õ,  
materialIndex
õ,õ,  -
]
õ,õ,- .
.
õ,õ,. /
vertices
õ,õ,/ 7
[
õ,õ,7 8
$num
õ,õ,8 9
+
õ,õ,: ;
index_X4
õ,õ,< D
]
õ,õ,D E
=
õ,õ,F G 
characterInfoArray
õ,õ,H Z
[
õ,õ,Z [
i
õ,õ,[ \
]
õ,õ,\ ]
.
õ,õ,] ^
	vertex_BR
õ,õ,^ g
.
õ,õ,g h
position
õ,õ,h p
;
õ,õ,p q

m_textInfo
ü,ü, 
.
ü,ü, 
meshInfo
ü,ü, 
[
ü,ü,  
materialIndex
ü,ü,  -
]
ü,ü,- .
.
ü,ü,. /
uvs0
ü,ü,/ 3
[
ü,ü,3 4
$num
ü,ü,4 5
+
ü,ü,6 7
index_X4
ü,ü,8 @
]
ü,ü,@ A
=
ü,ü,B C 
characterInfoArray
ü,ü,D V
[
ü,ü,V W
i
ü,ü,W X
]
ü,ü,X Y
.
ü,ü,Y Z
	vertex_BL
ü,ü,Z c
.
ü,ü,c d
uv
ü,ü,d f
;
ü,ü,f g

m_textInfo
†,†, 
.
†,†, 
meshInfo
†,†, 
[
†,†,  
materialIndex
†,†,  -
]
†,†,- .
.
†,†,. /
uvs0
†,†,/ 3
[
†,†,3 4
$num
†,†,4 5
+
†,†,6 7
index_X4
†,†,8 @
]
†,†,@ A
=
†,†,B C 
characterInfoArray
†,†,D V
[
†,†,V W
i
†,†,W X
]
†,†,X Y
.
†,†,Y Z
	vertex_TL
†,†,Z c
.
†,†,c d
uv
†,†,d f
;
†,†,f g

m_textInfo
°,°, 
.
°,°, 
meshInfo
°,°, 
[
°,°,  
materialIndex
°,°,  -
]
°,°,- .
.
°,°,. /
uvs0
°,°,/ 3
[
°,°,3 4
$num
°,°,4 5
+
°,°,6 7
index_X4
°,°,8 @
]
°,°,@ A
=
°,°,B C 
characterInfoArray
°,°,D V
[
°,°,V W
i
°,°,W X
]
°,°,X Y
.
°,°,Y Z
	vertex_TR
°,°,Z c
.
°,°,c d
uv
°,°,d f
;
°,°,f g

m_textInfo
¢,¢, 
.
¢,¢, 
meshInfo
¢,¢, 
[
¢,¢,  
materialIndex
¢,¢,  -
]
¢,¢,- .
.
¢,¢,. /
uvs0
¢,¢,/ 3
[
¢,¢,3 4
$num
¢,¢,4 5
+
¢,¢,6 7
index_X4
¢,¢,8 @
]
¢,¢,@ A
=
¢,¢,B C 
characterInfoArray
¢,¢,D V
[
¢,¢,V W
i
¢,¢,W X
]
¢,¢,X Y
.
¢,¢,Y Z
	vertex_BR
¢,¢,Z c
.
¢,¢,c d
uv
¢,¢,d f
;
¢,¢,f g

m_textInfo
¶,¶, 
.
¶,¶, 
meshInfo
¶,¶, 
[
¶,¶,  
materialIndex
¶,¶,  -
]
¶,¶,- .
.
¶,¶,. /
uvs2
¶,¶,/ 3
[
¶,¶,3 4
$num
¶,¶,4 5
+
¶,¶,6 7
index_X4
¶,¶,8 @
]
¶,¶,@ A
=
¶,¶,B C 
characterInfoArray
¶,¶,D V
[
¶,¶,V W
i
¶,¶,W X
]
¶,¶,X Y
.
¶,¶,Y Z
	vertex_BL
¶,¶,Z c
.
¶,¶,c d
uv2
¶,¶,d g
;
¶,¶,g h

m_textInfo
ß,ß, 
.
ß,ß, 
meshInfo
ß,ß, 
[
ß,ß,  
materialIndex
ß,ß,  -
]
ß,ß,- .
.
ß,ß,. /
uvs2
ß,ß,/ 3
[
ß,ß,3 4
$num
ß,ß,4 5
+
ß,ß,6 7
index_X4
ß,ß,8 @
]
ß,ß,@ A
=
ß,ß,B C 
characterInfoArray
ß,ß,D V
[
ß,ß,V W
i
ß,ß,W X
]
ß,ß,X Y
.
ß,ß,Y Z
	vertex_TL
ß,ß,Z c
.
ß,ß,c d
uv2
ß,ß,d g
;
ß,ß,g h

m_textInfo
®,®, 
.
®,®, 
meshInfo
®,®, 
[
®,®,  
materialIndex
®,®,  -
]
®,®,- .
.
®,®,. /
uvs2
®,®,/ 3
[
®,®,3 4
$num
®,®,4 5
+
®,®,6 7
index_X4
®,®,8 @
]
®,®,@ A
=
®,®,B C 
characterInfoArray
®,®,D V
[
®,®,V W
i
®,®,W X
]
®,®,X Y
.
®,®,Y Z
	vertex_TR
®,®,Z c
.
®,®,c d
uv2
®,®,d g
;
®,®,g h

m_textInfo
©,©, 
.
©,©, 
meshInfo
©,©, 
[
©,©,  
materialIndex
©,©,  -
]
©,©,- .
.
©,©,. /
uvs2
©,©,/ 3
[
©,©,3 4
$num
©,©,4 5
+
©,©,6 7
index_X4
©,©,8 @
]
©,©,@ A
=
©,©,B C 
characterInfoArray
©,©,D V
[
©,©,V W
i
©,©,W X
]
©,©,X Y
.
©,©,Y Z
	vertex_BR
©,©,Z c
.
©,©,c d
uv2
©,©,d g
;
©,©,g h

m_textInfo
¥,¥, 
.
¥,¥, 
meshInfo
¥,¥, 
[
¥,¥,  
materialIndex
¥,¥,  -
]
¥,¥,- .
.
¥,¥,. /
colors32
¥,¥,/ 7
[
¥,¥,7 8
$num
¥,¥,8 9
+
¥,¥,: ;
index_X4
¥,¥,< D
]
¥,¥,D E
=
¥,¥,F G 
characterInfoArray
¥,¥,H Z
[
¥,¥,Z [
i
¥,¥,[ \
]
¥,¥,\ ]
.
¥,¥,] ^
	vertex_BL
¥,¥,^ g
.
¥,¥,g h
color
¥,¥,h m
;
¥,¥,m n

m_textInfo
µ,µ, 
.
µ,µ, 
meshInfo
µ,µ, 
[
µ,µ,  
materialIndex
µ,µ,  -
]
µ,µ,- .
.
µ,µ,. /
colors32
µ,µ,/ 7
[
µ,µ,7 8
$num
µ,µ,8 9
+
µ,µ,: ;
index_X4
µ,µ,< D
]
µ,µ,D E
=
µ,µ,F G 
characterInfoArray
µ,µ,H Z
[
µ,µ,Z [
i
µ,µ,[ \
]
µ,µ,\ ]
.
µ,µ,] ^
	vertex_TL
µ,µ,^ g
.
µ,µ,g h
color
µ,µ,h m
;
µ,µ,m n

m_textInfo
∂,∂, 
.
∂,∂, 
meshInfo
∂,∂, 
[
∂,∂,  
materialIndex
∂,∂,  -
]
∂,∂,- .
.
∂,∂,. /
colors32
∂,∂,/ 7
[
∂,∂,7 8
$num
∂,∂,8 9
+
∂,∂,: ;
index_X4
∂,∂,< D
]
∂,∂,D E
=
∂,∂,F G 
characterInfoArray
∂,∂,H Z
[
∂,∂,Z [
i
∂,∂,[ \
]
∂,∂,\ ]
.
∂,∂,] ^
	vertex_TR
∂,∂,^ g
.
∂,∂,g h
color
∂,∂,h m
;
∂,∂,m n

m_textInfo
∑,∑, 
.
∑,∑, 
meshInfo
∑,∑, 
[
∑,∑,  
materialIndex
∑,∑,  -
]
∑,∑,- .
.
∑,∑,. /
colors32
∑,∑,/ 7
[
∑,∑,7 8
$num
∑,∑,8 9
+
∑,∑,: ;
index_X4
∑,∑,< D
]
∑,∑,D E
=
∑,∑,F G 
characterInfoArray
∑,∑,H Z
[
∑,∑,Z [
i
∑,∑,[ \
]
∑,∑,\ ]
.
∑,∑,] ^
	vertex_BR
∑,∑,^ g
.
∑,∑,g h
color
∑,∑,h m
;
∑,∑,m n

m_textInfo
π,π, 
.
π,π, 
meshInfo
π,π, 
[
π,π,  
materialIndex
π,π,  -
]
π,π,- .
.
π,π,. /
vertexCount
π,π,/ :
=
π,π,; <
index_X4
π,π,= E
+
π,π,F G
$num
π,π,H I
;
π,π,I J
}
∫,∫, 	
	protected
∆,∆, 
virtual
∆,∆, 
void
∆,∆, 
DrawUnderlineMesh
∆,∆, 0
(
∆,∆,0 1
Vector3
∆,∆,1 8
start
∆,∆,9 >
,
∆,∆,> ?
Vector3
∆,∆,@ G
end
∆,∆,H K
,
∆,∆,K L
ref
∆,∆,M P
int
∆,∆,Q T
index
∆,∆,U Z
,
∆,∆,Z [
float
∆,∆,\ a

startScale
∆,∆,b l
,
∆,∆,l m
float
∆,∆,n s
endScale
∆,∆,t |
,
∆,∆,| }
float∆,∆,~ É
maxScale∆,∆,Ñ å
,∆,∆,å ç
float∆,∆,é ì
sdfScale∆,∆,î ú
,∆,∆,ú ù
Color32∆,∆,û •
underlineColor∆,∆,¶ ¥
)∆,∆,¥ µ
{
«,«, 	*
GetUnderlineSpecialCharacter
…,…, (
(
…,…,( )
m_fontAsset
…,…,) 4
)
…,…,4 5
;
…,…,5 6
if
À,À, 
(
À,À, 
m_Underline
À,À, 
.
À,À, 
	character
À,À, %
==
À,À,& (
null
À,À,) -
)
À,À,- .
{
Ã,Ã, 
if
Õ,Õ, 
(
Õ,Õ, 
!
Õ,Õ, 
TMP_Settings
Õ,Õ, !
.
Õ,Õ,! "
warningsDisabled
Õ,Õ," 2
)
Õ,Õ,2 3
Debug
Œ,Œ, 
.
Œ,Œ, 

LogWarning
Œ,Œ, $
(
Œ,Œ,$ %
$strŒ,Œ,% Ñ
,Œ,Œ,Ñ Ö
thisŒ,Œ,Ü ä
)Œ,Œ,ä ã
;Œ,Œ,ã å
return
–,–, 
;
–,–, 
}
—,—, 
int
”,”, $
underlineMaterialIndex
”,”, &
=
”,”,' (
m_Underline
”,”,) 4
.
”,”,4 5
materialIndex
”,”,5 B
;
”,”,B C
int
’,’, 
verticesCount
’,’, 
=
’,’, 
index
’,’,  %
+
’,’,& '
$num
’,’,( *
;
’,’,* +
if
ÿ,ÿ, 
(
ÿ,ÿ, 
verticesCount
ÿ,ÿ, 
>
ÿ,ÿ, 

m_textInfo
ÿ,ÿ,  *
.
ÿ,ÿ,* +
meshInfo
ÿ,ÿ,+ 3
[
ÿ,ÿ,3 4$
underlineMaterialIndex
ÿ,ÿ,4 J
]
ÿ,ÿ,J K
.
ÿ,ÿ,K L
vertices
ÿ,ÿ,L T
.
ÿ,ÿ,T U
Length
ÿ,ÿ,U [
)
ÿ,ÿ,[ \
{
Ÿ,Ÿ, 

m_textInfo
€,€, 
.
€,€, 
meshInfo
€,€, #
[
€,€,# $$
underlineMaterialIndex
€,€,$ :
]
€,€,: ;
.
€,€,; <
ResizeMeshInfo
€,€,< J
(
€,€,J K
verticesCount
€,€,K X
/
€,€,Y Z
$num
€,€,[ \
)
€,€,\ ]
;
€,€,] ^
}
‹,‹, 
start
ﬂ,ﬂ, 
.
ﬂ,ﬂ, 
y
ﬂ,ﬂ, 
=
ﬂ,ﬂ, 
Mathf
ﬂ,ﬂ, 
.
ﬂ,ﬂ, 
Min
ﬂ,ﬂ, 
(
ﬂ,ﬂ,  
start
ﬂ,ﬂ,  %
.
ﬂ,ﬂ,% &
y
ﬂ,ﬂ,& '
,
ﬂ,ﬂ,' (
end
ﬂ,ﬂ,) ,
.
ﬂ,ﬂ,, -
y
ﬂ,ﬂ,- .
)
ﬂ,ﬂ,. /
;
ﬂ,ﬂ,/ 0
end
‡,‡, 
.
‡,‡, 
y
‡,‡, 
=
‡,‡, 
Mathf
‡,‡, 
.
‡,‡, 
Min
‡,‡, 
(
‡,‡, 
start
‡,‡, #
.
‡,‡,# $
y
‡,‡,$ %
,
‡,‡,% &
end
‡,‡,' *
.
‡,‡,* +
y
‡,‡,+ ,
)
‡,‡,, -
;
‡,‡,- .
GlyphMetrics
‚,‚, #
underlineGlyphMetrics
‚,‚, .
=
‚,‚,/ 0
m_Underline
‚,‚,1 <
.
‚,‚,< =
	character
‚,‚,= F
.
‚,‚,F G
glyph
‚,‚,G L
.
‚,‚,L M
metrics
‚,‚,M T
;
‚,‚,T U
	GlyphRect
„,„,  
underlineGlyphRect
„,„, (
=
„,„,) *
m_Underline
„,„,+ 6
.
„,„,6 7
	character
„,„,7 @
.
„,„,@ A
glyph
„,„,A F
.
„,„,F G
	glyphRect
„,„,G P
;
„,„,P Q
float
Â,Â, 
segmentWidth
Â,Â, 
=
Â,Â,  #
underlineGlyphMetrics
Â,Â,! 6
.
Â,Â,6 7
width
Â,Â,7 <
/
Â,Â,= >
$num
Â,Â,? @
*
Â,Â,A B
maxScale
Â,Â,C K
;
Â,Â,K L
if
Á,Á, 
(
Á,Á, 
end
Á,Á, 
.
Á,Á, 
x
Á,Á, 
-
Á,Á, 
start
Á,Á, 
.
Á,Á, 
x
Á,Á, 
<
Á,Á,  !#
underlineGlyphMetrics
Á,Á," 7
.
Á,Á,7 8
width
Á,Á,8 =
*
Á,Á,> ?
maxScale
Á,Á,@ H
)
Á,Á,H I
{
Ë,Ë, 
segmentWidth
È,È, 
=
È,È, 
(
È,È,  
end
È,È,  #
.
È,È,# $
x
È,È,$ %
-
È,È,& '
start
È,È,( -
.
È,È,- .
x
È,È,. /
)
È,È,/ 0
/
È,È,1 2
$num
È,È,3 5
;
È,È,5 6
}
Í,Í, 
float
Ï,Ï, 
startPadding
Ï,Ï, 
=
Ï,Ï,  
	m_padding
Ï,Ï,! *
*
Ï,Ï,+ ,

startScale
Ï,Ï,- 7
/
Ï,Ï,8 9
maxScale
Ï,Ï,: B
;
Ï,Ï,B C
float
Ì,Ì, 

endPadding
Ì,Ì, 
=
Ì,Ì, 
	m_padding
Ì,Ì, (
*
Ì,Ì,) *
endScale
Ì,Ì,+ 3
/
Ì,Ì,4 5
maxScale
Ì,Ì,6 >
;
Ì,Ì,> ?
float
Ô,Ô,  
underlineThickness
Ô,Ô, $
=
Ô,Ô,% &
m_Underline
Ô,Ô,' 2
.
Ô,Ô,2 3
	fontAsset
Ô,Ô,3 <
.
Ô,Ô,< =
faceInfo
Ô,Ô,= E
.
Ô,Ô,E F 
underlineThickness
Ô,Ô,F X
;
Ô,Ô,X Y
Vector3
Û,Û, 
[
Û,Û, 
]
Û,Û, 
vertices
Û,Û, 
=
Û,Û,  

m_textInfo
Û,Û,! +
.
Û,Û,+ ,
meshInfo
Û,Û,, 4
[
Û,Û,4 5$
underlineMaterialIndex
Û,Û,5 K
]
Û,Û,K L
.
Û,Û,L M
vertices
Û,Û,M U
;
Û,Û,U V
vertices
ˆ,ˆ, 
[
ˆ,ˆ, 
index
ˆ,ˆ, 
+
ˆ,ˆ, 
$num
ˆ,ˆ, 
]
ˆ,ˆ, 
=
ˆ,ˆ,  !
start
ˆ,ˆ," '
+
ˆ,ˆ,( )
new
ˆ,ˆ,* -
Vector3
ˆ,ˆ,. 5
(
ˆ,ˆ,5 6
$num
ˆ,ˆ,6 7
,
ˆ,ˆ,7 8
$num
ˆ,ˆ,9 :
-
ˆ,ˆ,; <
(
ˆ,ˆ,= > 
underlineThickness
ˆ,ˆ,> P
+
ˆ,ˆ,Q R
	m_padding
ˆ,ˆ,S \
)
ˆ,ˆ,\ ]
*
ˆ,ˆ,^ _
maxScale
ˆ,ˆ,` h
,
ˆ,ˆ,h i
$num
ˆ,ˆ,j k
)
ˆ,ˆ,k l
;
ˆ,ˆ,l m
vertices
˜,˜, 
[
˜,˜, 
index
˜,˜, 
+
˜,˜, 
$num
˜,˜, 
]
˜,˜, 
=
˜,˜,  !
start
˜,˜," '
+
˜,˜,( )
new
˜,˜,* -
Vector3
˜,˜,. 5
(
˜,˜,5 6
$num
˜,˜,6 7
,
˜,˜,7 8
	m_padding
˜,˜,9 B
*
˜,˜,C D
maxScale
˜,˜,E M
,
˜,˜,M N
$num
˜,˜,O P
)
˜,˜,P Q
;
˜,˜,Q R
vertices
¯,¯, 
[
¯,¯, 
index
¯,¯, 
+
¯,¯, 
$num
¯,¯, 
]
¯,¯, 
=
¯,¯,  !
vertices
¯,¯," *
[
¯,¯,* +
index
¯,¯,+ 0
+
¯,¯,1 2
$num
¯,¯,3 4
]
¯,¯,4 5
+
¯,¯,6 7
new
¯,¯,8 ;
Vector3
¯,¯,< C
(
¯,¯,C D
segmentWidth
¯,¯,D P
,
¯,¯,P Q
$num
¯,¯,R S
,
¯,¯,S T
$num
¯,¯,U V
)
¯,¯,V W
;
¯,¯,W X
vertices
˘,˘, 
[
˘,˘, 
index
˘,˘, 
+
˘,˘, 
$num
˘,˘, 
]
˘,˘, 
=
˘,˘,  !
vertices
˘,˘," *
[
˘,˘,* +
index
˘,˘,+ 0
+
˘,˘,1 2
$num
˘,˘,3 4
]
˘,˘,4 5
+
˘,˘,6 7
new
˘,˘,8 ;
Vector3
˘,˘,< C
(
˘,˘,C D
segmentWidth
˘,˘,D P
,
˘,˘,P Q
$num
˘,˘,R S
,
˘,˘,S T
$num
˘,˘,U V
)
˘,˘,V W
;
˘,˘,W X
vertices
¸,¸, 
[
¸,¸, 
index
¸,¸, 
+
¸,¸, 
$num
¸,¸, 
]
¸,¸, 
=
¸,¸,  !
vertices
¸,¸," *
[
¸,¸,* +
index
¸,¸,+ 0
+
¸,¸,1 2
$num
¸,¸,3 4
]
¸,¸,4 5
;
¸,¸,5 6
vertices
˝,˝, 
[
˝,˝, 
index
˝,˝, 
+
˝,˝, 
$num
˝,˝, 
]
˝,˝, 
=
˝,˝,  !
vertices
˝,˝," *
[
˝,˝,* +
index
˝,˝,+ 0
+
˝,˝,1 2
$num
˝,˝,3 4
]
˝,˝,4 5
;
˝,˝,5 6
vertices
˛,˛, 
[
˛,˛, 
index
˛,˛, 
+
˛,˛, 
$num
˛,˛, 
]
˛,˛, 
=
˛,˛,  !
end
˛,˛," %
+
˛,˛,& '
new
˛,˛,( +
Vector3
˛,˛,, 3
(
˛,˛,3 4
-
˛,˛,4 5
segmentWidth
˛,˛,5 A
,
˛,˛,A B
	m_padding
˛,˛,C L
*
˛,˛,M N
maxScale
˛,˛,O W
,
˛,˛,W X
$num
˛,˛,Y Z
)
˛,˛,Z [
;
˛,˛,[ \
vertices
ˇ,ˇ, 
[
ˇ,ˇ, 
index
ˇ,ˇ, 
+
ˇ,ˇ, 
$num
ˇ,ˇ, 
]
ˇ,ˇ, 
=
ˇ,ˇ,  !
end
ˇ,ˇ," %
+
ˇ,ˇ,& '
new
ˇ,ˇ,( +
Vector3
ˇ,ˇ,, 3
(
ˇ,ˇ,3 4
-
ˇ,ˇ,4 5
segmentWidth
ˇ,ˇ,5 A
,
ˇ,ˇ,A B
-
ˇ,ˇ,C D
(
ˇ,ˇ,D E 
underlineThickness
ˇ,ˇ,E W
+
ˇ,ˇ,X Y
	m_padding
ˇ,ˇ,Z c
)
ˇ,ˇ,c d
*
ˇ,ˇ,e f
maxScale
ˇ,ˇ,g o
,
ˇ,ˇ,o p
$num
ˇ,ˇ,q r
)
ˇ,ˇ,r s
;
ˇ,ˇ,s t
vertices
Ç-Ç- 
[
Ç-Ç- 
index
Ç-Ç- 
+
Ç-Ç- 
$num
Ç-Ç- 
]
Ç-Ç- 
=
Ç-Ç-  !
vertices
Ç-Ç-" *
[
Ç-Ç-* +
index
Ç-Ç-+ 0
+
Ç-Ç-1 2
$num
Ç-Ç-3 4
]
Ç-Ç-4 5
;
Ç-Ç-5 6
vertices
É-É- 
[
É-É- 
index
É-É- 
+
É-É- 
$num
É-É- 
]
É-É- 
=
É-É-  !
vertices
É-É-" *
[
É-É-* +
index
É-É-+ 0
+
É-É-1 2
$num
É-É-3 4
]
É-É-4 5
;
É-É-5 6
vertices
Ñ-Ñ- 
[
Ñ-Ñ- 
index
Ñ-Ñ- 
+
Ñ-Ñ- 
$num
Ñ-Ñ- 
]
Ñ-Ñ-  
=
Ñ-Ñ-! "
end
Ñ-Ñ-# &
+
Ñ-Ñ-' (
new
Ñ-Ñ-) ,
Vector3
Ñ-Ñ-- 4
(
Ñ-Ñ-4 5
$num
Ñ-Ñ-5 6
,
Ñ-Ñ-6 7
	m_padding
Ñ-Ñ-8 A
*
Ñ-Ñ-B C
maxScale
Ñ-Ñ-D L
,
Ñ-Ñ-L M
$num
Ñ-Ñ-N O
)
Ñ-Ñ-O P
;
Ñ-Ñ-P Q
vertices
Ö-Ö- 
[
Ö-Ö- 
index
Ö-Ö- 
+
Ö-Ö- 
$num
Ö-Ö- 
]
Ö-Ö-  
=
Ö-Ö-! "
end
Ö-Ö-# &
+
Ö-Ö-' (
new
Ö-Ö-) ,
Vector3
Ö-Ö-- 4
(
Ö-Ö-4 5
$num
Ö-Ö-5 6
,
Ö-Ö-6 7
-
Ö-Ö-8 9
(
Ö-Ö-9 : 
underlineThickness
Ö-Ö-: L
+
Ö-Ö-M N
	m_padding
Ö-Ö-O X
)
Ö-Ö-X Y
*
Ö-Ö-Z [
maxScale
Ö-Ö-\ d
,
Ö-Ö-d e
$num
Ö-Ö-f g
)
Ö-Ö-g h
;
Ö-Ö-h i
Vector2
ä-ä- 
[
ä-ä- 
]
ä-ä- 
uvs0
ä-ä- 
=
ä-ä- 

m_textInfo
ä-ä- '
.
ä-ä-' (
meshInfo
ä-ä-( 0
[
ä-ä-0 1$
underlineMaterialIndex
ä-ä-1 G
]
ä-ä-G H
.
ä-ä-H I
uvs0
ä-ä-I M
;
ä-ä-M N
int
å-å- 

atlasWidth
å-å- 
=
å-å- 
m_Underline
å-å- (
.
å-å-( )
	fontAsset
å-å-) 2
.
å-å-2 3

atlasWidth
å-å-3 =
;
å-å-= >
int
ç-ç- 
atlasHeight
ç-ç- 
=
ç-ç- 
m_Underline
ç-ç- )
.
ç-ç-) *
	fontAsset
ç-ç-* 3
.
ç-ç-3 4
atlasHeight
ç-ç-4 ?
;
ç-ç-? @
Vector2
ê-ê- 
uv0
ê-ê- 
=
ê-ê- 
new
ê-ê- 
Vector2
ê-ê- %
(
ê-ê-% &
(
ê-ê-& ' 
underlineGlyphRect
ê-ê-' 9
.
ê-ê-9 :
x
ê-ê-: ;
-
ê-ê-< =
startPadding
ê-ê-> J
)
ê-ê-J K
/
ê-ê-L M

atlasWidth
ê-ê-N X
,
ê-ê-X Y
(
ê-ê-Z [ 
underlineGlyphRect
ê-ê-[ m
.
ê-ê-m n
y
ê-ê-n o
-
ê-ê-p q
	m_padding
ê-ê-r {
)
ê-ê-{ |
/
ê-ê-} ~
atlasHeightê-ê- ä
)ê-ê-ä ã
;ê-ê-ã å
Vector2
ë-ë- 
uv1
ë-ë- 
=
ë-ë- 
new
ë-ë- 
Vector2
ë-ë- %
(
ë-ë-% &
uv0
ë-ë-& )
.
ë-ë-) *
x
ë-ë-* +
,
ë-ë-+ ,
(
ë-ë-- . 
underlineGlyphRect
ë-ë-. @
.
ë-ë-@ A
y
ë-ë-A B
+
ë-ë-C D 
underlineGlyphRect
ë-ë-E W
.
ë-ë-W X
height
ë-ë-X ^
+
ë-ë-_ `
	m_padding
ë-ë-a j
)
ë-ë-j k
/
ë-ë-l m
atlasHeight
ë-ë-n y
)
ë-ë-y z
;
ë-ë-z {
Vector2
í-í- 
uv2
í-í- 
=
í-í- 
new
í-í- 
Vector2
í-í- %
(
í-í-% &
(
í-í-& ' 
underlineGlyphRect
í-í-' 9
.
í-í-9 :
x
í-í-: ;
-
í-í-< =
startPadding
í-í-> J
+
í-í-K L
(
í-í-M N
float
í-í-N S
)
í-í-S T 
underlineGlyphRect
í-í-T f
.
í-í-f g
width
í-í-g l
/
í-í-m n
$num
í-í-o p
)
í-í-p q
/
í-í-r s

atlasWidth
í-í-t ~
,
í-í-~ 
uv1í-í-Ä É
.í-í-É Ñ
yí-í-Ñ Ö
)í-í-Ö Ü
;í-í-Ü á
Vector2
ì-ì- 
uv3
ì-ì- 
=
ì-ì- 
new
ì-ì- 
Vector2
ì-ì- %
(
ì-ì-% &
uv2
ì-ì-& )
.
ì-ì-) *
x
ì-ì-* +
,
ì-ì-+ ,
uv0
ì-ì-- 0
.
ì-ì-0 1
y
ì-ì-1 2
)
ì-ì-2 3
;
ì-ì-3 4
Vector2
î-î- 
uv4
î-î- 
=
î-î- 
new
î-î- 
Vector2
î-î- %
(
î-î-% &
(
î-î-& ' 
underlineGlyphRect
î-î-' 9
.
î-î-9 :
x
î-î-: ;
+
î-î-< =

endPadding
î-î-> H
+
î-î-I J
(
î-î-K L
float
î-î-L Q
)
î-î-Q R 
underlineGlyphRect
î-î-R d
.
î-î-d e
width
î-î-e j
/
î-î-k l
$num
î-î-m n
)
î-î-n o
/
î-î-p q

atlasWidth
î-î-r |
,
î-î-| }
uv1î-î-~ Å
.î-î-Å Ç
yî-î-Ç É
)î-î-É Ñ
;î-î-Ñ Ö
Vector2
ï-ï- 
uv5
ï-ï- 
=
ï-ï- 
new
ï-ï- 
Vector2
ï-ï- %
(
ï-ï-% &
uv4
ï-ï-& )
.
ï-ï-) *
x
ï-ï-* +
,
ï-ï-+ ,
uv0
ï-ï-- 0
.
ï-ï-0 1
y
ï-ï-1 2
)
ï-ï-2 3
;
ï-ï-3 4
Vector2
ñ-ñ- 
uv6
ñ-ñ- 
=
ñ-ñ- 
new
ñ-ñ- 
Vector2
ñ-ñ- %
(
ñ-ñ-% &
(
ñ-ñ-& ' 
underlineGlyphRect
ñ-ñ-' 9
.
ñ-ñ-9 :
x
ñ-ñ-: ;
+
ñ-ñ-< =

endPadding
ñ-ñ-> H
+
ñ-ñ-I J 
underlineGlyphRect
ñ-ñ-K ]
.
ñ-ñ-] ^
width
ñ-ñ-^ c
)
ñ-ñ-c d
/
ñ-ñ-e f

atlasWidth
ñ-ñ-g q
,
ñ-ñ-q r
uv1
ñ-ñ-s v
.
ñ-ñ-v w
y
ñ-ñ-w x
)
ñ-ñ-x y
;
ñ-ñ-y z
Vector2
ó-ó- 
uv7
ó-ó- 
=
ó-ó- 
new
ó-ó- 
Vector2
ó-ó- %
(
ó-ó-% &
uv6
ó-ó-& )
.
ó-ó-) *
x
ó-ó-* +
,
ó-ó-+ ,
uv0
ó-ó-- 0
.
ó-ó-0 1
y
ó-ó-1 2
)
ó-ó-2 3
;
ó-ó-3 4
uvs0
ö-ö- 
[
ö-ö- 
$num
ö-ö- 
+
ö-ö- 
index
ö-ö- 
]
ö-ö- 
=
ö-ö- 
uv0
ö-ö- !
;
ö-ö-! "
uvs0
õ-õ- 
[
õ-õ- 
$num
õ-õ- 
+
õ-õ- 
index
õ-õ- 
]
õ-õ- 
=
õ-õ- 
uv1
õ-õ- !
;
õ-õ-! "
uvs0
ú-ú- 
[
ú-ú- 
$num
ú-ú- 
+
ú-ú- 
index
ú-ú- 
]
ú-ú- 
=
ú-ú- 
uv2
ú-ú- !
;
ú-ú-! "
uvs0
ù-ù- 
[
ù-ù- 
$num
ù-ù- 
+
ù-ù- 
index
ù-ù- 
]
ù-ù- 
=
ù-ù- 
uv3
ù-ù- !
;
ù-ù-! "
uvs0
†-†- 
[
†-†- 
$num
†-†- 
+
†-†- 
index
†-†- 
]
†-†- 
=
†-†- 
new
†-†- !
Vector2
†-†-" )
(
†-†-) *
uv2
†-†-* -
.
†-†-- .
x
†-†-. /
-
†-†-0 1
uv2
†-†-2 5
.
†-†-5 6
x
†-†-6 7
*
†-†-8 9
$num
†-†-: @
,
†-†-@ A
uv0
†-†-B E
.
†-†-E F
y
†-†-F G
)
†-†-G H
;
†-†-H I
uvs0
°-°- 
[
°-°- 
$num
°-°- 
+
°-°- 
index
°-°- 
]
°-°- 
=
°-°- 
new
°-°- !
Vector2
°-°-" )
(
°-°-) *
uv2
°-°-* -
.
°-°-- .
x
°-°-. /
-
°-°-0 1
uv2
°-°-2 5
.
°-°-5 6
x
°-°-6 7
*
°-°-8 9
$num
°-°-: @
,
°-°-@ A
uv1
°-°-B E
.
°-°-E F
y
°-°-F G
)
°-°-G H
;
°-°-H I
uvs0
¢-¢- 
[
¢-¢- 
$num
¢-¢- 
+
¢-¢- 
index
¢-¢- 
]
¢-¢- 
=
¢-¢- 
new
¢-¢- !
Vector2
¢-¢-" )
(
¢-¢-) *
uv2
¢-¢-* -
.
¢-¢-- .
x
¢-¢-. /
+
¢-¢-0 1
uv2
¢-¢-2 5
.
¢-¢-5 6
x
¢-¢-6 7
*
¢-¢-8 9
$num
¢-¢-: @
,
¢-¢-@ A
uv1
¢-¢-B E
.
¢-¢-E F
y
¢-¢-F G
)
¢-¢-G H
;
¢-¢-H I
uvs0
£-£- 
[
£-£- 
$num
£-£- 
+
£-£- 
index
£-£- 
]
£-£- 
=
£-£- 
new
£-£- !
Vector2
£-£-" )
(
£-£-) *
uv2
£-£-* -
.
£-£-- .
x
£-£-. /
+
£-£-0 1
uv2
£-£-2 5
.
£-£-5 6
x
£-£-6 7
*
£-£-8 9
$num
£-£-: @
,
£-£-@ A
uv0
£-£-B E
.
£-£-E F
y
£-£-F G
)
£-£-G H
;
£-£-H I
uvs0
¶-¶- 
[
¶-¶- 
$num
¶-¶- 
+
¶-¶- 
index
¶-¶- 
]
¶-¶- 
=
¶-¶- 
uv5
¶-¶- !
;
¶-¶-! "
uvs0
ß-ß- 
[
ß-ß- 
$num
ß-ß- 
+
ß-ß- 
index
ß-ß- 
]
ß-ß- 
=
ß-ß- 
uv4
ß-ß- !
;
ß-ß-! "
uvs0
®-®- 
[
®-®- 
$num
®-®- 
+
®-®- 
index
®-®- 
]
®-®- 
=
®-®- 
uv6
®-®- "
;
®-®-" #
uvs0
©-©- 
[
©-©- 
$num
©-©- 
+
©-©- 
index
©-©- 
]
©-©- 
=
©-©- 
uv7
©-©- "
;
©-©-" #
float
Ø-Ø- 
min_UvX
Ø-Ø- 
=
Ø-Ø- 
$num
Ø-Ø- 
;
Ø-Ø- 
float
∞-∞- 
max_UvX
∞-∞- 
=
∞-∞- 
(
∞-∞- 
vertices
∞-∞- %
[
∞-∞-% &
index
∞-∞-& +
+
∞-∞-, -
$num
∞-∞-. /
]
∞-∞-/ 0
.
∞-∞-0 1
x
∞-∞-1 2
-
∞-∞-3 4
start
∞-∞-5 :
.
∞-∞-: ;
x
∞-∞-; <
)
∞-∞-< =
/
∞-∞-> ?
(
∞-∞-@ A
end
∞-∞-A D
.
∞-∞-D E
x
∞-∞-E F
-
∞-∞-G H
start
∞-∞-I N
.
∞-∞-N O
x
∞-∞-O P
)
∞-∞-P Q
;
∞-∞-Q R
float
≥-≥- 
xScale
≥-≥- 
=
≥-≥- 
Mathf
≥-≥-  
.
≥-≥-  !
Abs
≥-≥-! $
(
≥-≥-$ %
sdfScale
≥-≥-% -
)
≥-≥-- .
;
≥-≥-. /
Vector2
µ-µ- 
[
µ-µ- 
]
µ-µ- 
uvs2
µ-µ- 
=
µ-µ- 

m_textInfo
µ-µ- '
.
µ-µ-' (
meshInfo
µ-µ-( 0
[
µ-µ-0 1$
underlineMaterialIndex
µ-µ-1 G
]
µ-µ-G H
.
µ-µ-H I
uvs2
µ-µ-I M
;
µ-µ-M N
uvs2
∑-∑- 
[
∑-∑- 
$num
∑-∑- 
+
∑-∑- 
index
∑-∑- 
]
∑-∑- 
=
∑-∑- 
PackUV
∑-∑- $
(
∑-∑-$ %
$num
∑-∑-% &
,
∑-∑-& '
$num
∑-∑-( )
,
∑-∑-) *
xScale
∑-∑-+ 1
)
∑-∑-1 2
;
∑-∑-2 3
uvs2
∏-∏- 
[
∏-∏- 
$num
∏-∏- 
+
∏-∏- 
index
∏-∏- 
]
∏-∏- 
=
∏-∏- 
PackUV
∏-∏- $
(
∏-∏-$ %
$num
∏-∏-% &
,
∏-∏-& '
$num
∏-∏-( )
,
∏-∏-) *
xScale
∏-∏-+ 1
)
∏-∏-1 2
;
∏-∏-2 3
uvs2
π-π- 
[
π-π- 
$num
π-π- 
+
π-π- 
index
π-π- 
]
π-π- 
=
π-π- 
PackUV
π-π- $
(
π-π-$ %
max_UvX
π-π-% ,
,
π-π-, -
$num
π-π-. /
,
π-π-/ 0
xScale
π-π-1 7
)
π-π-7 8
;
π-π-8 9
uvs2
∫-∫- 
[
∫-∫- 
$num
∫-∫- 
+
∫-∫- 
index
∫-∫- 
]
∫-∫- 
=
∫-∫- 
PackUV
∫-∫- $
(
∫-∫-$ %
max_UvX
∫-∫-% ,
,
∫-∫-, -
$num
∫-∫-. /
,
∫-∫-/ 0
xScale
∫-∫-1 7
)
∫-∫-7 8
;
∫-∫-8 9
min_UvX
º-º- 
=
º-º- 
(
º-º- 
vertices
º-º- 
[
º-º-  
index
º-º-  %
+
º-º-& '
$num
º-º-( )
]
º-º-) *
.
º-º-* +
x
º-º-+ ,
-
º-º-- .
start
º-º-/ 4
.
º-º-4 5
x
º-º-5 6
)
º-º-6 7
/
º-º-8 9
(
º-º-: ;
end
º-º-; >
.
º-º-> ?
x
º-º-? @
-
º-º-A B
start
º-º-C H
.
º-º-H I
x
º-º-I J
)
º-º-J K
;
º-º-K L
max_UvX
Ω-Ω- 
=
Ω-Ω- 
(
Ω-Ω- 
vertices
Ω-Ω- 
[
Ω-Ω-  
index
Ω-Ω-  %
+
Ω-Ω-& '
$num
Ω-Ω-( )
]
Ω-Ω-) *
.
Ω-Ω-* +
x
Ω-Ω-+ ,
-
Ω-Ω-- .
start
Ω-Ω-/ 4
.
Ω-Ω-4 5
x
Ω-Ω-5 6
)
Ω-Ω-6 7
/
Ω-Ω-8 9
(
Ω-Ω-: ;
end
Ω-Ω-; >
.
Ω-Ω-> ?
x
Ω-Ω-? @
-
Ω-Ω-A B
start
Ω-Ω-C H
.
Ω-Ω-H I
x
Ω-Ω-I J
)
Ω-Ω-J K
;
Ω-Ω-K L
uvs2
ø-ø- 
[
ø-ø- 
$num
ø-ø- 
+
ø-ø- 
index
ø-ø- 
]
ø-ø- 
=
ø-ø- 
PackUV
ø-ø- $
(
ø-ø-$ %
min_UvX
ø-ø-% ,
,
ø-ø-, -
$num
ø-ø-. /
,
ø-ø-/ 0
xScale
ø-ø-1 7
)
ø-ø-7 8
;
ø-ø-8 9
uvs2
¿-¿- 
[
¿-¿- 
$num
¿-¿- 
+
¿-¿- 
index
¿-¿- 
]
¿-¿- 
=
¿-¿- 
PackUV
¿-¿- $
(
¿-¿-$ %
min_UvX
¿-¿-% ,
,
¿-¿-, -
$num
¿-¿-. /
,
¿-¿-/ 0
xScale
¿-¿-1 7
)
¿-¿-7 8
;
¿-¿-8 9
uvs2
¡-¡- 
[
¡-¡- 
$num
¡-¡- 
+
¡-¡- 
index
¡-¡- 
]
¡-¡- 
=
¡-¡- 
PackUV
¡-¡- $
(
¡-¡-$ %
max_UvX
¡-¡-% ,
,
¡-¡-, -
$num
¡-¡-. /
,
¡-¡-/ 0
xScale
¡-¡-1 7
)
¡-¡-7 8
;
¡-¡-8 9
uvs2
¬-¬- 
[
¬-¬- 
$num
¬-¬- 
+
¬-¬- 
index
¬-¬- 
]
¬-¬- 
=
¬-¬- 
PackUV
¬-¬- $
(
¬-¬-$ %
max_UvX
¬-¬-% ,
,
¬-¬-, -
$num
¬-¬-. /
,
¬-¬-/ 0
xScale
¬-¬-1 7
)
¬-¬-7 8
;
¬-¬-8 9
min_UvX
ƒ-ƒ- 
=
ƒ-ƒ- 
(
ƒ-ƒ- 
vertices
ƒ-ƒ- 
[
ƒ-ƒ-  
index
ƒ-ƒ-  %
+
ƒ-ƒ-& '
$num
ƒ-ƒ-( )
]
ƒ-ƒ-) *
.
ƒ-ƒ-* +
x
ƒ-ƒ-+ ,
-
ƒ-ƒ-- .
start
ƒ-ƒ-/ 4
.
ƒ-ƒ-4 5
x
ƒ-ƒ-5 6
)
ƒ-ƒ-6 7
/
ƒ-ƒ-8 9
(
ƒ-ƒ-: ;
end
ƒ-ƒ-; >
.
ƒ-ƒ-> ?
x
ƒ-ƒ-? @
-
ƒ-ƒ-A B
start
ƒ-ƒ-C H
.
ƒ-ƒ-H I
x
ƒ-ƒ-I J
)
ƒ-ƒ-J K
;
ƒ-ƒ-K L
uvs2
∆-∆- 
[
∆-∆- 
$num
∆-∆- 
+
∆-∆- 
index
∆-∆- 
]
∆-∆- 
=
∆-∆- 
PackUV
∆-∆- $
(
∆-∆-$ %
min_UvX
∆-∆-% ,
,
∆-∆-, -
$num
∆-∆-. /
,
∆-∆-/ 0
xScale
∆-∆-1 7
)
∆-∆-7 8
;
∆-∆-8 9
uvs2
«-«- 
[
«-«- 
$num
«-«- 
+
«-«- 
index
«-«- 
]
«-«- 
=
«-«- 
PackUV
«-«- $
(
«-«-$ %
min_UvX
«-«-% ,
,
«-«-, -
$num
«-«-. /
,
«-«-/ 0
xScale
«-«-1 7
)
«-«-7 8
;
«-«-8 9
uvs2
»-»- 
[
»-»- 
$num
»-»- 
+
»-»- 
index
»-»- 
]
»-»- 
=
»-»- 
PackUV
»-»- %
(
»-»-% &
$num
»-»-& '
,
»-»-' (
$num
»-»-) *
,
»-»-* +
xScale
»-»-, 2
)
»-»-2 3
;
»-»-3 4
uvs2
…-…- 
[
…-…- 
$num
…-…- 
+
…-…- 
index
…-…- 
]
…-…- 
=
…-…- 
PackUV
…-…- %
(
…-…-% &
$num
…-…-& '
,
…-…-' (
$num
…-…-) *
,
…-…-* +
xScale
…-…-, 2
)
…-…-2 3
;
…-…-3 4
underlineColor
œ-œ- 
.
œ-œ- 
a
œ-œ- 
=
œ-œ- 
m_fontColor32
œ-œ- ,
.
œ-œ-, -
a
œ-œ-- .
<
œ-œ-/ 0
underlineColor
œ-œ-1 ?
.
œ-œ-? @
a
œ-œ-@ A
?
œ-œ-B C
m_fontColor32
œ-œ-D Q
.
œ-œ-Q R
a
œ-œ-R S
:
œ-œ-T U
underlineColor
œ-œ-V d
.
œ-œ-d e
a
œ-œ-e f
;
œ-œ-f g
Color32
—-—- 
[
—-—- 
]
—-—- 
colors32
—-—- 
=
—-—-  

m_textInfo
—-—-! +
.
—-—-+ ,
meshInfo
—-—-, 4
[
—-—-4 5$
underlineMaterialIndex
—-—-5 K
]
—-—-K L
.
—-—-L M
colors32
—-—-M U
;
—-—-U V
colors32
“-“- 
[
“-“- 
$num
“-“- 
+
“-“- 
index
“-“- 
]
“-“- 
=
“-“-  !
underlineColor
“-“-" 0
;
“-“-0 1
colors32
”-”- 
[
”-”- 
$num
”-”- 
+
”-”- 
index
”-”- 
]
”-”- 
=
”-”-  !
underlineColor
”-”-" 0
;
”-”-0 1
colors32
‘-‘- 
[
‘-‘- 
$num
‘-‘- 
+
‘-‘- 
index
‘-‘- 
]
‘-‘- 
=
‘-‘-  !
underlineColor
‘-‘-" 0
;
‘-‘-0 1
colors32
’-’- 
[
’-’- 
$num
’-’- 
+
’-’- 
index
’-’- 
]
’-’- 
=
’-’-  !
underlineColor
’-’-" 0
;
’-’-0 1
colors32
◊-◊- 
[
◊-◊- 
$num
◊-◊- 
+
◊-◊- 
index
◊-◊- 
]
◊-◊- 
=
◊-◊-  !
underlineColor
◊-◊-" 0
;
◊-◊-0 1
colors32
ÿ-ÿ- 
[
ÿ-ÿ- 
$num
ÿ-ÿ- 
+
ÿ-ÿ- 
index
ÿ-ÿ- 
]
ÿ-ÿ- 
=
ÿ-ÿ-  !
underlineColor
ÿ-ÿ-" 0
;
ÿ-ÿ-0 1
colors32
Ÿ-Ÿ- 
[
Ÿ-Ÿ- 
$num
Ÿ-Ÿ- 
+
Ÿ-Ÿ- 
index
Ÿ-Ÿ- 
]
Ÿ-Ÿ- 
=
Ÿ-Ÿ-  !
underlineColor
Ÿ-Ÿ-" 0
;
Ÿ-Ÿ-0 1
colors32
⁄-⁄- 
[
⁄-⁄- 
$num
⁄-⁄- 
+
⁄-⁄- 
index
⁄-⁄- 
]
⁄-⁄- 
=
⁄-⁄-  !
underlineColor
⁄-⁄-" 0
;
⁄-⁄-0 1
colors32
‹-‹- 
[
‹-‹- 
$num
‹-‹- 
+
‹-‹- 
index
‹-‹- 
]
‹-‹- 
=
‹-‹-  !
underlineColor
‹-‹-" 0
;
‹-‹-0 1
colors32
›-›- 
[
›-›- 
$num
›-›- 
+
›-›- 
index
›-›- 
]
›-›- 
=
›-›-  !
underlineColor
›-›-" 0
;
›-›-0 1
colors32
ﬁ-ﬁ- 
[
ﬁ-ﬁ- 
$num
ﬁ-ﬁ- 
+
ﬁ-ﬁ- 
index
ﬁ-ﬁ- 
]
ﬁ-ﬁ-  
=
ﬁ-ﬁ-! "
underlineColor
ﬁ-ﬁ-# 1
;
ﬁ-ﬁ-1 2
colors32
ﬂ-ﬂ- 
[
ﬂ-ﬂ- 
$num
ﬂ-ﬂ- 
+
ﬂ-ﬂ- 
index
ﬂ-ﬂ- 
]
ﬂ-ﬂ-  
=
ﬂ-ﬂ-! "
underlineColor
ﬂ-ﬂ-# 1
;
ﬂ-ﬂ-1 2
index
‚-‚- 
+=
‚-‚- 
$num
‚-‚- 
;
‚-‚- 
}
„-„- 	
	protected
Ê-Ê- 
virtual
Ê-Ê- 
void
Ê-Ê- 
DrawTextHighlight
Ê-Ê- 0
(
Ê-Ê-0 1
Vector3
Ê-Ê-1 8
start
Ê-Ê-9 >
,
Ê-Ê-> ?
Vector3
Ê-Ê-@ G
end
Ê-Ê-H K
,
Ê-Ê-K L
ref
Ê-Ê-M P
int
Ê-Ê-Q T
index
Ê-Ê-U Z
,
Ê-Ê-Z [
Color32
Ê-Ê-\ c
highlightColor
Ê-Ê-d r
)
Ê-Ê-r s
{
Á-Á- 	
if
Ë-Ë- 
(
Ë-Ë- 
m_Underline
Ë-Ë- 
.
Ë-Ë- 
	character
Ë-Ë- %
==
Ë-Ë-& (
null
Ë-Ë-) -
)
Ë-Ë-- .
{
È-È- *
GetUnderlineSpecialCharacter
Í-Í- ,
(
Í-Í-, -
m_fontAsset
Í-Í-- 8
)
Í-Í-8 9
;
Í-Í-9 :
if
Ï-Ï- 
(
Ï-Ï- 
m_Underline
Ï-Ï- 
.
Ï-Ï-  
	character
Ï-Ï-  )
==
Ï-Ï-* ,
null
Ï-Ï-- 1
)
Ï-Ï-1 2
{
Ì-Ì- 
if
Ó-Ó- 
(
Ó-Ó- 
!
Ó-Ó- 
TMP_Settings
Ó-Ó- %
.
Ó-Ó-% &
warningsDisabled
Ó-Ó-& 6
)
Ó-Ó-6 7
Debug
Ô-Ô- 
.
Ô-Ô- 

LogWarning
Ô-Ô- (
(
Ô-Ô-( )
$strÔ-Ô-) à
,Ô-Ô-à â
thisÔ-Ô-ä é
)Ô-Ô-é è
;Ô-Ô-è ê
return
Ò-Ò- 
;
Ò-Ò- 
}
Ú-Ú- 
}
Û-Û- 
int
ı-ı- $
underlineMaterialIndex
ı-ı- &
=
ı-ı-' (
m_Underline
ı-ı-) 4
.
ı-ı-4 5
materialIndex
ı-ı-5 B
;
ı-ı-B C
int
˜-˜- 
verticesCount
˜-˜- 
=
˜-˜- 
index
˜-˜-  %
+
˜-˜-& '
$num
˜-˜-( )
;
˜-˜-) *
if
˙-˙- 
(
˙-˙- 
verticesCount
˙-˙- 
>
˙-˙- 

m_textInfo
˙-˙-  *
.
˙-˙-* +
meshInfo
˙-˙-+ 3
[
˙-˙-3 4$
underlineMaterialIndex
˙-˙-4 J
]
˙-˙-J K
.
˙-˙-K L
vertices
˙-˙-L T
.
˙-˙-T U
Length
˙-˙-U [
)
˙-˙-[ \
{
˚-˚- 

m_textInfo
˝-˝- 
.
˝-˝- 
meshInfo
˝-˝- #
[
˝-˝-# $$
underlineMaterialIndex
˝-˝-$ :
]
˝-˝-: ;
.
˝-˝-; <
ResizeMeshInfo
˝-˝-< J
(
˝-˝-J K
verticesCount
˝-˝-K X
/
˝-˝-Y Z
$num
˝-˝-[ \
)
˝-˝-\ ]
;
˝-˝-] ^
}
˛-˛- 
Vector3
Ç.Ç. 
[
Ç.Ç. 
]
Ç.Ç. 
vertices
Ç.Ç. 
=
Ç.Ç.  

m_textInfo
Ç.Ç.! +
.
Ç.Ç.+ ,
meshInfo
Ç.Ç., 4
[
Ç.Ç.4 5$
underlineMaterialIndex
Ç.Ç.5 K
]
Ç.Ç.K L
.
Ç.Ç.L M
vertices
Ç.Ç.M U
;
Ç.Ç.U V
vertices
Ö.Ö. 
[
Ö.Ö. 
index
Ö.Ö. 
+
Ö.Ö. 
$num
Ö.Ö. 
]
Ö.Ö. 
=
Ö.Ö.  !
start
Ö.Ö." '
;
Ö.Ö.' (
vertices
Ü.Ü. 
[
Ü.Ü. 
index
Ü.Ü. 
+
Ü.Ü. 
$num
Ü.Ü. 
]
Ü.Ü. 
=
Ü.Ü.  !
new
Ü.Ü." %
Vector3
Ü.Ü.& -
(
Ü.Ü.- .
start
Ü.Ü.. 3
.
Ü.Ü.3 4
x
Ü.Ü.4 5
,
Ü.Ü.5 6
end
Ü.Ü.7 :
.
Ü.Ü.: ;
y
Ü.Ü.; <
,
Ü.Ü.< =
$num
Ü.Ü.> ?
)
Ü.Ü.? @
;
Ü.Ü.@ A
vertices
á.á. 
[
á.á. 
index
á.á. 
+
á.á. 
$num
á.á. 
]
á.á. 
=
á.á.  !
end
á.á." %
;
á.á.% &
vertices
à.à. 
[
à.à. 
index
à.à. 
+
à.à. 
$num
à.à. 
]
à.à. 
=
à.à.  !
new
à.à." %
Vector3
à.à.& -
(
à.à.- .
end
à.à.. 1
.
à.à.1 2
x
à.à.2 3
,
à.à.3 4
start
à.à.5 :
.
à.à.: ;
y
à.à.; <
,
à.à.< =
$num
à.à.> ?
)
à.à.? @
;
à.à.@ A
Vector2
ç.ç. 
[
ç.ç. 
]
ç.ç. 
uvs0
ç.ç. 
=
ç.ç. 

m_textInfo
ç.ç. '
.
ç.ç.' (
meshInfo
ç.ç.( 0
[
ç.ç.0 1$
underlineMaterialIndex
ç.ç.1 G
]
ç.ç.G H
.
ç.ç.H I
uvs0
ç.ç.I M
;
ç.ç.M N
int
è.è. 

atlasWidth
è.è. 
=
è.è. 
m_Underline
è.è. (
.
è.è.( )
	fontAsset
è.è.) 2
.
è.è.2 3

atlasWidth
è.è.3 =
;
è.è.= >
int
ê.ê. 
atlasHeight
ê.ê. 
=
ê.ê. 
m_Underline
ê.ê. )
.
ê.ê.) *
	fontAsset
ê.ê.* 3
.
ê.ê.3 4
atlasHeight
ê.ê.4 ?
;
ê.ê.? @
	GlyphRect
ë.ë. 
	glyphRect
ë.ë. 
=
ë.ë.  !
m_Underline
ë.ë." -
.
ë.ë.- .
	character
ë.ë.. 7
.
ë.ë.7 8
glyph
ë.ë.8 =
.
ë.ë.= >
	glyphRect
ë.ë.> G
;
ë.ë.G H
Vector2
î.î. 
uv0
î.î. 
=
î.î. 
new
î.î. 
Vector2
î.î. %
(
î.î.% &
(
î.î.& '
(
î.î.' (
float
î.î.( -
)
î.î.- .
	glyphRect
î.î.. 7
.
î.î.7 8
x
î.î.8 9
+
î.î.: ;
	glyphRect
î.î.< E
.
î.î.E F
width
î.î.F K
/
î.î.L M
$num
î.î.N O
)
î.î.O P
/
î.î.Q R

atlasWidth
î.î.S ]
,
î.î.] ^
(
î.î._ `
	glyphRect
î.î.` i
.
î.î.i j
y
î.î.j k
+
î.î.l m
(
î.î.n o
float
î.î.o t
)
î.î.t u
	glyphRect
î.î.u ~
.
î.î.~ 
heightî.î. Ö
/î.î.Ü á
$numî.î.à â
)î.î.â ä
/î.î.ã å
atlasHeightî.î.ç ò
)î.î.ò ô
;î.î.ô ö
uvs0
ó.ó. 
[
ó.ó. 
$num
ó.ó. 
+
ó.ó. 
index
ó.ó. 
]
ó.ó. 
=
ó.ó. 
uv0
ó.ó. !
;
ó.ó.! "
uvs0
ò.ò. 
[
ò.ò. 
$num
ò.ò. 
+
ò.ò. 
index
ò.ò. 
]
ò.ò. 
=
ò.ò. 
uv0
ò.ò. !
;
ò.ò.! "
uvs0
ô.ô. 
[
ô.ô. 
$num
ô.ô. 
+
ô.ô. 
index
ô.ô. 
]
ô.ô. 
=
ô.ô. 
uv0
ô.ô. !
;
ô.ô.! "
uvs0
ö.ö. 
[
ö.ö. 
$num
ö.ö. 
+
ö.ö. 
index
ö.ö. 
]
ö.ö. 
=
ö.ö. 
uv0
ö.ö. !
;
ö.ö.! "
Vector2
ü.ü. 
[
ü.ü. 
]
ü.ü. 
uvs2
ü.ü. 
=
ü.ü. 

m_textInfo
ü.ü. '
.
ü.ü.' (
meshInfo
ü.ü.( 0
[
ü.ü.0 1$
underlineMaterialIndex
ü.ü.1 G
]
ü.ü.G H
.
ü.ü.H I
uvs2
ü.ü.I M
;
ü.ü.M N
Vector2
†.†. 
customUV
†.†. 
=
†.†. 
new
†.†. "
Vector2
†.†.# *
(
†.†.* +
$num
†.†.+ ,
,
†.†., -
$num
†.†.. /
)
†.†./ 0
;
†.†.0 1
uvs2
°.°. 
[
°.°. 
$num
°.°. 
+
°.°. 
index
°.°. 
]
°.°. 
=
°.°. 
customUV
°.°. &
;
°.°.& '
uvs2
¢.¢. 
[
¢.¢. 
$num
¢.¢. 
+
¢.¢. 
index
¢.¢. 
]
¢.¢. 
=
¢.¢. 
customUV
¢.¢. &
;
¢.¢.& '
uvs2
£.£. 
[
£.£. 
$num
£.£. 
+
£.£. 
index
£.£. 
]
£.£. 
=
£.£. 
customUV
£.£. &
;
£.£.& '
uvs2
§.§. 
[
§.§. 
$num
§.§. 
+
§.§. 
index
§.§. 
]
§.§. 
=
§.§. 
customUV
§.§. &
;
§.§.& '
highlightColor
™.™. 
.
™.™. 
a
™.™. 
=
™.™. 
m_fontColor32
™.™. ,
.
™.™., -
a
™.™.- .
<
™.™./ 0
highlightColor
™.™.1 ?
.
™.™.? @
a
™.™.@ A
?
™.™.B C
m_fontColor32
™.™.D Q
.
™.™.Q R
a
™.™.R S
:
™.™.T U
highlightColor
™.™.V d
.
™.™.d e
a
™.™.e f
;
™.™.f g
Color32
¨.¨. 
[
¨.¨. 
]
¨.¨. 
colors32
¨.¨. 
=
¨.¨.  

m_textInfo
¨.¨.! +
.
¨.¨.+ ,
meshInfo
¨.¨., 4
[
¨.¨.4 5$
underlineMaterialIndex
¨.¨.5 K
]
¨.¨.K L
.
¨.¨.L M
colors32
¨.¨.M U
;
¨.¨.U V
colors32
≠.≠. 
[
≠.≠. 
$num
≠.≠. 
+
≠.≠. 
index
≠.≠. 
]
≠.≠. 
=
≠.≠.  !
highlightColor
≠.≠." 0
;
≠.≠.0 1
colors32
Æ.Æ. 
[
Æ.Æ. 
$num
Æ.Æ. 
+
Æ.Æ. 
index
Æ.Æ. 
]
Æ.Æ. 
=
Æ.Æ.  !
highlightColor
Æ.Æ." 0
;
Æ.Æ.0 1
colors32
Ø.Ø. 
[
Ø.Ø. 
$num
Ø.Ø. 
+
Ø.Ø. 
index
Ø.Ø. 
]
Ø.Ø. 
=
Ø.Ø.  !
highlightColor
Ø.Ø." 0
;
Ø.Ø.0 1
colors32
∞.∞. 
[
∞.∞. 
$num
∞.∞. 
+
∞.∞. 
index
∞.∞. 
]
∞.∞. 
=
∞.∞.  !
highlightColor
∞.∞." 0
;
∞.∞.0 1
index
≥.≥. 
+=
≥.≥. 
$num
≥.≥. 
;
≥.≥. 
}
¥.¥. 	
	protected
∫.∫. 
void
∫.∫. !
LoadDefaultSettings
∫.∫. *
(
∫.∫.* +
)
∫.∫.+ ,
{
ª.ª. 	
if
º.º. 
(
º.º. 

m_fontSize
º.º. 
==
º.º. 
-
º.º. 
$num
º.º. !
||
º.º." $'
m_isWaitingOnResourceLoad
º.º.% >
)
º.º.> ?
{
Ω.Ω. 
m_rectTransform
æ.æ. 
=
æ.æ.  !
this
æ.æ." &
.
æ.æ.& '
rectTransform
æ.æ.' 4
;
æ.æ.4 5
if
¿.¿. 
(
¿.¿. 
TMP_Settings
¿.¿.  
.
¿.¿.  !#
autoSizeTextContainer
¿.¿.! 6
)
¿.¿.6 7
{
¡.¡. #
autoSizeTextContainer
¬.¬. )
=
¬.¬.* +
true
¬.¬., 0
;
¬.¬.0 1
}
√.√. 
else
ƒ.ƒ. 
{
≈.≈. 
if
∆.∆. 
(
∆.∆. 
GetType
∆.∆. 
(
∆.∆.  
)
∆.∆.  !
==
∆.∆." $
typeof
∆.∆.% +
(
∆.∆.+ ,
TextMeshPro
∆.∆., 7
)
∆.∆.7 8
)
∆.∆.8 9
{
«.«. 
if
».». 
(
».». 
m_rectTransform
».». +
.
».».+ ,
	sizeDelta
».»., 5
==
».».6 8
new
».».9 <
Vector2
».».= D
(
».».D E
$num
».».E H
,
».».H I
$num
».».J M
)
».».M N
)
».».N O
m_rectTransform
….…. +
.
….….+ ,
	sizeDelta
….…., 5
=
….….6 7
TMP_Settings
….….8 D
.
….….D E1
#defaultTextMeshProTextContainerSize
….….E h
;
….….h i
}
 . . 
else
À.À. 
{
Ã.Ã. 
if
Õ.Õ. 
(
Õ.Õ. 
m_rectTransform
Õ.Õ. +
.
Õ.Õ.+ ,
	sizeDelta
Õ.Õ., 5
==
Õ.Õ.6 8
new
Õ.Õ.9 <
Vector2
Õ.Õ.= D
(
Õ.Õ.D E
$num
Õ.Õ.E H
,
Õ.Õ.H I
$num
Õ.Õ.J M
)
Õ.Õ.M N
)
Õ.Õ.N O
m_rectTransform
Œ.Œ. +
.
Œ.Œ.+ ,
	sizeDelta
Œ.Œ., 5
=
Œ.Œ.6 7
TMP_Settings
Œ.Œ.8 D
.
Œ.Œ.D E3
%defaultTextMeshProUITextContainerSize
Œ.Œ.E j
;
Œ.Œ.j k
}
œ.œ. 
}
—.—. "
m_enableWordWrapping
”.”. $
=
”.”.% &
TMP_Settings
”.”.' 3
.
”.”.3 4 
enableWordWrapping
”.”.4 F
;
”.”.F G
m_enableKerning
‘.‘. 
=
‘.‘.  !
TMP_Settings
‘.‘." .
.
‘.‘.. /
enableKerning
‘.‘./ <
;
‘.‘.< ="
m_enableExtraPadding
’.’. $
=
’.’.% &
TMP_Settings
’.’.' 3
.
’.’.3 4 
enableExtraPadding
’.’.4 F
;
’.’.F G
m_tintAllSprites
÷.÷.  
=
÷.÷.! "
TMP_Settings
÷.÷.# /
.
÷.÷./ 0"
enableTintAllSprites
÷.÷.0 D
;
÷.÷.D E#
m_parseCtrlCharacters
◊.◊. %
=
◊.◊.& '
TMP_Settings
◊.◊.( 4
.
◊.◊.4 5)
enableParseEscapeCharacters
◊.◊.5 P
;
◊.◊.P Q

m_fontSize
ÿ.ÿ. 
=
ÿ.ÿ. 
m_fontSizeBase
ÿ.ÿ. +
=
ÿ.ÿ., -
TMP_Settings
ÿ.ÿ.. :
.
ÿ.ÿ.: ;
defaultFontSize
ÿ.ÿ.; J
;
ÿ.ÿ.J K
m_fontSizeMin
Ÿ.Ÿ. 
=
Ÿ.Ÿ. 

m_fontSize
Ÿ.Ÿ.  *
*
Ÿ.Ÿ.+ ,
TMP_Settings
Ÿ.Ÿ.- 9
.
Ÿ.Ÿ.9 :+
defaultTextAutoSizingMinRatio
Ÿ.Ÿ.: W
;
Ÿ.Ÿ.W X
m_fontSizeMax
⁄.⁄. 
=
⁄.⁄. 

m_fontSize
⁄.⁄.  *
*
⁄.⁄.+ ,
TMP_Settings
⁄.⁄.- 9
.
⁄.⁄.9 :+
defaultTextAutoSizingMaxRatio
⁄.⁄.: W
;
⁄.⁄.W X'
m_isWaitingOnResourceLoad
€.€. )
=
€.€.* +
false
€.€., 1
;
€.€.1 2
raycastTarget
‹.‹. 
=
‹.‹. 
TMP_Settings
‹.‹.  ,
.
‹.‹., -!
enableRaycastTarget
‹.‹.- @
;
‹.‹.@ A'
m_IsTextObjectScaleStatic
›.›. )
=
›.›.* +
TMP_Settings
›.›., 8
.
›.›.8 9%
isTextObjectScaleStatic
›.›.9 P
;
›.›.P Q
}
ﬁ.ﬁ. 
else
ﬂ.ﬂ. 
if
ﬂ.ﬂ. 
(
ﬂ.ﬂ. 
(
ﬂ.ﬂ. 
int
ﬂ.ﬂ. 
)
ﬂ.ﬂ. 
m_textAlignment
ﬂ.ﬂ. )
<
ﬂ.ﬂ.* +
$num
ﬂ.ﬂ., 0
)
ﬂ.ﬂ.0 1
{
‡.‡. 
m_textAlignment
‚.‚. 
=
‚.‚.  !
TMP_Compatibility
‚.‚." 3
.
‚.‚.3 4,
ConvertTextAlignmentEnumValues
‚.‚.4 R
(
‚.‚.R S
m_textAlignment
‚.‚.S b
)
‚.‚.b c
;
‚.‚.c d
}
„.„. 
if
Ê.Ê. 
(
Ê.Ê. 
m_textAlignment
Ê.Ê. 
!=
Ê.Ê.  ""
TextAlignmentOptions
Ê.Ê.# 7
.
Ê.Ê.7 8
	Converted
Ê.Ê.8 A
)
Ê.Ê.A B
{
Á.Á. #
m_HorizontalAlignment
Ë.Ë. %
=
Ë.Ë.& '
(
Ë.Ë.( )(
HorizontalAlignmentOptions
Ë.Ë.) C
)
Ë.Ë.C D
(
Ë.Ë.D E
(
Ë.Ë.E F
int
Ë.Ë.F I
)
Ë.Ë.I J
m_textAlignment
Ë.Ë.J Y
&
Ë.Ë.Z [
$num
Ë.Ë.\ `
)
Ë.Ë.` a
;
Ë.Ë.a b!
m_VerticalAlignment
È.È. #
=
È.È.$ %
(
È.È.& '&
VerticalAlignmentOptions
È.È.' ?
)
È.È.? @
(
È.È.@ A
(
È.È.A B
int
È.È.B E
)
È.È.E F
m_textAlignment
È.È.F U
&
È.È.V W
$num
È.È.X ^
)
È.È.^ _
;
È.È._ `
m_textAlignment
Í.Í. 
=
Í.Í.  !"
TextAlignmentOptions
Í.Í." 6
.
Í.Í.6 7
	Converted
Í.Í.7 @
;
Í.Í.@ A
}
Î.Î. 
}
Ï.Ï. 	
	protected
Û.Û. 
void
Û.Û. "
GetSpecialCharacters
Û.Û. +
(
Û.Û.+ ,
TMP_FontAsset
Û.Û., 9
	fontAsset
Û.Û.: C
)
Û.Û.C D
{
Ù.Ù. 	)
GetEllipsisSpecialCharacter
ı.ı. '
(
ı.ı.' (
	fontAsset
ı.ı.( 1
)
ı.ı.1 2
;
ı.ı.2 3*
GetUnderlineSpecialCharacter
˜.˜. (
(
˜.˜.( )
	fontAsset
˜.˜.) 2
)
˜.˜.2 3
;
˜.˜.3 4
}
¯.¯. 	
	protected
˚.˚. 
void
˚.˚. )
GetEllipsisSpecialCharacter
˚.˚. 2
(
˚.˚.2 3
TMP_FontAsset
˚.˚.3 @
	fontAsset
˚.˚.A J
)
˚.˚.J K
{
¸.¸. 	
bool
˝.˝. (
isUsingAlternativeTypeface
˝.˝. +
;
˝.˝.+ ,
TMP_Character
Ä/Ä/ 
	character
Ä/Ä/ #
=
Ä/Ä/$ %$
TMP_FontAssetUtilities
Ä/Ä/& <
.
Ä/Ä/< ='
GetCharacterFromFontAsset
Ä/Ä/= V
(
Ä/Ä/V W
$num
Ä/Ä/W ]
,
Ä/Ä/] ^
	fontAsset
Ä/Ä/_ h
,
Ä/Ä/h i
false
Ä/Ä/j o
,
Ä/Ä/o p"
m_FontStyleInternalÄ/Ä/q Ñ
,Ä/Ä/Ñ Ö$
m_FontWeightInternalÄ/Ä/Ü ö
,Ä/Ä/ö õ
outÄ/Ä/ú ü*
isUsingAlternativeTypefaceÄ/Ä/† ∫
)Ä/Ä/∫ ª
;Ä/Ä/ª º
if
Ç/Ç/ 
(
Ç/Ç/ 
	character
Ç/Ç/ 
==
Ç/Ç/ 
null
Ç/Ç/ !
)
Ç/Ç/! "
{
É/É/ 
if
Ö/Ö/ 
(
Ö/Ö/ 
	fontAsset
Ö/Ö/ 
.
Ö/Ö/ &
m_FallbackFontAssetTable
Ö/Ö/ 6
!=
Ö/Ö/7 9
null
Ö/Ö/: >
&&
Ö/Ö/? A
	fontAsset
Ö/Ö/B K
.
Ö/Ö/K L&
m_FallbackFontAssetTable
Ö/Ö/L d
.
Ö/Ö/d e
Count
Ö/Ö/e j
>
Ö/Ö/k l
$num
Ö/Ö/m n
)
Ö/Ö/n o
	character
Ü/Ü/ 
=
Ü/Ü/ $
TMP_FontAssetUtilities
Ü/Ü/  6
.
Ü/Ü/6 7(
GetCharacterFromFontAssets
Ü/Ü/7 Q
(
Ü/Ü/Q R
$num
Ü/Ü/R X
,
Ü/Ü/X Y
	fontAsset
Ü/Ü/Z c
,
Ü/Ü/c d
	fontAsset
Ü/Ü/e n
.
Ü/Ü/n o'
m_FallbackFontAssetTableÜ/Ü/o á
,Ü/Ü/á à
trueÜ/Ü/â ç
,Ü/Ü/ç é#
m_FontStyleInternalÜ/Ü/è ¢
,Ü/Ü/¢ £$
m_FontWeightInternalÜ/Ü/§ ∏
,Ü/Ü/∏ π
outÜ/Ü/∫ Ω*
isUsingAlternativeTypefaceÜ/Ü/æ ÿ
)Ü/Ü/ÿ Ÿ
;Ü/Ü/Ÿ ⁄
}
á/á/ 
if
ä/ä/ 
(
ä/ä/ 
	character
ä/ä/ 
==
ä/ä/ 
null
ä/ä/ !
)
ä/ä/! "
{
ã/ã/ 
if
å/å/ 
(
å/å/ 
TMP_Settings
å/å/  
.
å/å/  ! 
fallbackFontAssets
å/å/! 3
!=
å/å/4 6
null
å/å/7 ;
&&
å/å/< >
TMP_Settings
å/å/? K
.
å/å/K L 
fallbackFontAssets
å/å/L ^
.
å/å/^ _
Count
å/å/_ d
>
å/å/e f
$num
å/å/g h
)
å/å/h i
	character
ç/ç/ 
=
ç/ç/ $
TMP_FontAssetUtilities
ç/ç/  6
.
ç/ç/6 7(
GetCharacterFromFontAssets
ç/ç/7 Q
(
ç/ç/Q R
$num
ç/ç/R X
,
ç/ç/X Y
	fontAsset
ç/ç/Z c
,
ç/ç/c d
TMP_Settings
ç/ç/e q
.
ç/ç/q r!
fallbackFontAssetsç/ç/r Ñ
,ç/ç/Ñ Ö
trueç/ç/Ü ä
,ç/ç/ä ã#
m_FontStyleInternalç/ç/å ü
,ç/ç/ü †$
m_FontWeightInternalç/ç/° µ
,ç/ç/µ ∂
outç/ç/∑ ∫*
isUsingAlternativeTypefaceç/ç/ª ’
)ç/ç/’ ÷
;ç/ç/÷ ◊
}
é/é/ 
if
ë/ë/ 
(
ë/ë/ 
	character
ë/ë/ 
==
ë/ë/ 
null
ë/ë/ !
)
ë/ë/! "
{
í/í/ 
if
ì/ì/ 
(
ì/ì/ 
TMP_Settings
ì/ì/  
.
ì/ì/  !
defaultFontAsset
ì/ì/! 1
!=
ì/ì/2 4
null
ì/ì/5 9
)
ì/ì/9 :
	character
î/î/ 
=
î/î/ $
TMP_FontAssetUtilities
î/î/  6
.
î/î/6 7'
GetCharacterFromFontAsset
î/î/7 P
(
î/î/P Q
$num
î/î/Q W
,
î/î/W X
TMP_Settings
î/î/Y e
.
î/î/e f
defaultFontAsset
î/î/f v
,
î/î/v w
true
î/î/x |
,
î/î/| }"
m_FontStyleInternalî/î/~ ë
,î/î/ë í$
m_FontWeightInternalî/î/ì ß
,î/î/ß ®
outî/î/© ¨*
isUsingAlternativeTypefaceî/î/≠ «
)î/î/« »
;î/î/» …
}
ï/ï/ 
if
ó/ó/ 
(
ó/ó/ 
	character
ó/ó/ 
!=
ó/ó/ 
null
ó/ó/ !
)
ó/ó/! "

m_Ellipsis
ò/ò/ 
=
ò/ò/ 
new
ò/ò/  
SpecialCharacter
ò/ò/! 1
(
ò/ò/1 2
	character
ò/ò/2 ;
,
ò/ò/; <
$num
ò/ò/= >
)
ò/ò/> ?
;
ò/ò/? @
}
ô/ô/ 	
	protected
ú/ú/ 
void
ú/ú/ *
GetUnderlineSpecialCharacter
ú/ú/ 3
(
ú/ú/3 4
TMP_FontAsset
ú/ú/4 A
	fontAsset
ú/ú/B K
)
ú/ú/K L
{
ù/ù/ 	
bool
û/û/ (
isUsingAlternativeTypeface
û/û/ +
;
û/û/+ ,
TMP_Character
°/°/ 
	character
°/°/ #
=
°/°/$ %$
TMP_FontAssetUtilities
°/°/& <
.
°/°/< ='
GetCharacterFromFontAsset
°/°/= V
(
°/°/V W
$num
°/°/W [
,
°/°/[ \
	fontAsset
°/°/] f
,
°/°/f g
false
°/°/h m
,
°/°/m n

FontStyles
°/°/o y
.
°/°/y z
Normal°/°/z Ä
,°/°/Ä Å

FontWeight°/°/Ç å
.°/°/å ç
Regular°/°/ç î
,°/°/î ï
out°/°/ñ ô*
isUsingAlternativeTypeface°/°/ö ¥
)°/°/¥ µ
;°/°/µ ∂
if
∫/∫/ 
(
∫/∫/ 
	character
∫/∫/ 
!=
∫/∫/ 
null
∫/∫/ !
)
∫/∫/! "
{
ª/ª/ 
m_Underline
º/º/ 
=
º/º/ 
new
º/º/ !
SpecialCharacter
º/º/" 2
(
º/º/2 3
	character
º/º/3 <
,
º/º/< =
$num
º/º/> ?
)
º/º/? @
;
º/º/@ A
}
Ω/Ω/ 
else
æ/æ/ 
{
ø/ø/ 
if
¿/¿/ 
(
¿/¿/ 
!
¿/¿/ 
TMP_Settings
¿/¿/ !
.
¿/¿/! "
warningsDisabled
¿/¿/" 2
)
¿/¿/2 3
Debug
¡/¡/ 
.
¡/¡/ 

LogWarning
¡/¡/ $
(
¡/¡/$ %
$str
¡/¡/% h
+
¡/¡/i j
	fontAsset
¡/¡/k t
.
¡/¡/t u
name
¡/¡/u y
+
¡/¡/z {
$str¡/¡/| Ä
,¡/¡/Ä Å
this¡/¡/Ç Ü
)¡/¡/Ü á
;¡/¡/á à
}
¬/¬/ 
}
√/√/ 	
	protected
Õ/Õ/ 
void
Õ/Õ/ %
ReplaceTagWithCharacter
Õ/Õ/ .
(
Õ/Õ/. /
int
Õ/Õ// 2
[
Õ/Õ/2 3
]
Õ/Õ/3 4
chars
Õ/Õ/5 :
,
Õ/Õ/: ;
int
Õ/Õ/< ?
insertionIndex
Õ/Õ/@ N
,
Õ/Õ/N O
int
Õ/Õ/P S
	tagLength
Õ/Õ/T ]
,
Õ/Õ/] ^
char
Õ/Õ/_ c
c
Õ/Õ/d e
)
Õ/Õ/e f
{
Œ/Œ/ 	
chars
œ/œ/ 
[
œ/œ/ 
insertionIndex
œ/œ/  
]
œ/œ/  !
=
œ/œ/" #
c
œ/œ/$ %
;
œ/œ/% &
for
—/—/ 
(
—/—/ 
int
—/—/ 
i
—/—/ 
=
—/—/ 
insertionIndex
—/—/ '
+
—/—/( )
	tagLength
—/—/* 3
;
—/—/3 4
i
—/—/5 6
<
—/—/7 8
chars
—/—/9 >
.
—/—/> ?
Length
—/—/? E
;
—/—/E F
i
—/—/G H
++
—/—/H J
)
—/—/J K
{
“/“/ 
chars
”/”/ 
[
”/”/ 
i
”/”/ 
-
”/”/ 
$num
”/”/ 
]
”/”/ 
=
”/”/ 
chars
”/”/ $
[
”/”/$ %
i
”/”/% &
]
”/”/& '
;
”/”/' (
}
‘/‘/ 
}
’/’/ 	
	protected
Í/Í/ 
TMP_FontAsset
Í/Í/ #
GetFontAssetForWeight
Í/Í/  5
(
Í/Í/5 6
int
Í/Í/6 9

fontWeight
Í/Í/: D
)
Í/Í/D E
{
Î/Î/ 	
bool
Ï/Ï/ 
isItalic
Ï/Ï/ 
=
Ï/Ï/ 
(
Ï/Ï/ !
m_FontStyleInternal
Ï/Ï/ 0
&
Ï/Ï/1 2

FontStyles
Ï/Ï/3 =
.
Ï/Ï/= >
Italic
Ï/Ï/> D
)
Ï/Ï/D E
==
Ï/Ï/F H

FontStyles
Ï/Ï/I S
.
Ï/Ï/S T
Italic
Ï/Ï/T Z
||
Ï/Ï/[ ]
(
Ï/Ï/^ _
m_fontStyle
Ï/Ï/_ j
&
Ï/Ï/k l

FontStyles
Ï/Ï/m w
.
Ï/Ï/w x
Italic
Ï/Ï/x ~
)
Ï/Ï/~ 
==Ï/Ï/Ä Ç

FontStylesÏ/Ï/É ç
.Ï/Ï/ç é
ItalicÏ/Ï/é î
;Ï/Ï/î ï
TMP_FontAsset
Ó/Ó/ 
	fontAsset
Ó/Ó/ #
=
Ó/Ó/$ %
null
Ó/Ó/& *
;
Ó/Ó/* +
int
// 
weightIndex
// 
=
// 

fontWeight
// (
/
//) *
$num
//+ .
;
//. /
if
Ú/Ú/ 
(
Ú/Ú/ 
isItalic
Ú/Ú/ 
)
Ú/Ú/ 
	fontAsset
Û/Û/ 
=
Û/Û/  
m_currentFontAsset
Û/Û/ .
.
Û/Û/. /
fontWeightTable
Û/Û// >
[
Û/Û/> ?
weightIndex
Û/Û/? J
]
Û/Û/J K
.
Û/Û/K L
italicTypeface
Û/Û/L Z
;
Û/Û/Z [
else
Ù/Ù/ 
	fontAsset
ı/ı/ 
=
ı/ı/  
m_currentFontAsset
ı/ı/ .
.
ı/ı/. /
fontWeightTable
ı/ı// >
[
ı/ı/> ?
weightIndex
ı/ı/? J
]
ı/ı/J K
.
ı/ı/K L
regularTypeface
ı/ı/L [
;
ı/ı/[ \
return
˜/˜/ 
	fontAsset
˜/˜/ 
;
˜/˜/ 
}
¯/¯/ 	
internal
˙/˙/ 
TMP_TextElement
˙/˙/  
GetTextElement
˙/˙/! /
(
˙/˙// 0
uint
˙/˙/0 4
unicode
˙/˙/5 <
,
˙/˙/< =
TMP_FontAsset
˙/˙/> K
	fontAsset
˙/˙/L U
,
˙/˙/U V

FontStyles
˙/˙/W a
	fontStyle
˙/˙/b k
,
˙/˙/k l

FontWeight
˙/˙/m w

fontWeight˙/˙/x Ç
,˙/˙/Ç É
out˙/˙/Ñ á
bool˙/˙/à å*
isUsingAlternativeTypeface˙/˙/ç ß
)˙/˙/ß ®
{
˚/˚/ 	
TMP_Character
¸/¸/ 
	character
¸/¸/ #
=
¸/¸/$ %$
TMP_FontAssetUtilities
¸/¸/& <
.
¸/¸/< ='
GetCharacterFromFontAsset
¸/¸/= V
(
¸/¸/V W
unicode
¸/¸/W ^
,
¸/¸/^ _
	fontAsset
¸/¸/` i
,
¸/¸/i j
false
¸/¸/k p
,
¸/¸/p q
	fontStyle
¸/¸/r {
,
¸/¸/{ |

fontWeight¸/¸/} á
,¸/¸/á à
out¸/¸/â å*
isUsingAlternativeTypeface¸/¸/ç ß
)¸/¸/ß ®
;¸/¸/® ©
if
˛/˛/ 
(
˛/˛/ 
	character
˛/˛/ 
!=
˛/˛/ 
null
˛/˛/ !
)
˛/˛/! "
return
ˇ/ˇ/ 
	character
ˇ/ˇ/  
;
ˇ/ˇ/  !
if
Ç0Ç0 
(
Ç0Ç0 
	fontAsset
Ç0Ç0 
.
Ç0Ç0 &
m_FallbackFontAssetTable
Ç0Ç0 2
!=
Ç0Ç03 5
null
Ç0Ç06 :
&&
Ç0Ç0; =
	fontAsset
Ç0Ç0> G
.
Ç0Ç0G H&
m_FallbackFontAssetTable
Ç0Ç0H `
.
Ç0Ç0` a
Count
Ç0Ç0a f
>
Ç0Ç0g h
$num
Ç0Ç0i j
)
Ç0Ç0j k
	character
É0É0 
=
É0É0 $
TMP_FontAssetUtilities
É0É0 2
.
É0É02 3(
GetCharacterFromFontAssets
É0É03 M
(
É0É0M N
unicode
É0É0N U
,
É0É0U V
	fontAsset
É0É0W `
,
É0É0` a
	fontAsset
É0É0b k
.
É0É0k l'
m_FallbackFontAssetTableÉ0É0l Ñ
,É0É0Ñ Ö
trueÉ0É0Ü ä
,É0É0ä ã
	fontStyleÉ0É0å ï
,É0É0ï ñ

fontWeightÉ0É0ó °
,É0É0° ¢
outÉ0É0£ ¶*
isUsingAlternativeTypefaceÉ0É0ß ¡
)É0É0¡ ¬
;É0É0¬ √
if
Ö0Ö0 
(
Ö0Ö0 
	character
Ö0Ö0 
!=
Ö0Ö0 
null
Ö0Ö0 !
)
Ö0Ö0! "
{
Ü0Ü0 
return
ä0ä0 
	character
ä0ä0  
;
ä0ä0  !
}
ã0ã0 
if
é0é0 
(
é0é0 
	fontAsset
é0é0 
.
é0é0 

instanceID
é0é0 $
!=
é0é0% '
m_fontAsset
é0é0( 3
.
é0é03 4

instanceID
é0é04 >
)
é0é0> ?
{
è0è0 
	character
ë0ë0 
=
ë0ë0 $
TMP_FontAssetUtilities
ë0ë0 2
.
ë0ë02 3'
GetCharacterFromFontAsset
ë0ë03 L
(
ë0ë0L M
unicode
ë0ë0M T
,
ë0ë0T U
m_fontAsset
ë0ë0V a
,
ë0ë0a b
false
ë0ë0c h
,
ë0ë0h i
	fontStyle
ë0ë0j s
,
ë0ë0s t

fontWeight
ë0ë0u 
,ë0ë0 Ä
outë0ë0Å Ñ*
isUsingAlternativeTypefaceë0ë0Ö ü
)ë0ë0ü †
;ë0ë0† °
if
î0î0 
(
î0î0 
	character
î0î0 
!=
î0î0  
null
î0î0! %
)
î0î0% &
{
ï0ï0 $
m_currentMaterialIndex
ñ0ñ0 *
=
ñ0ñ0+ ,
$num
ñ0ñ0- .
;
ñ0ñ0. /
m_currentMaterial
ó0ó0 %
=
ó0ó0& '"
m_materialReferences
ó0ó0( <
[
ó0ó0< =
$num
ó0ó0= >
]
ó0ó0> ?
.
ó0ó0? @
material
ó0ó0@ H
;
ó0ó0H I
return
ú0ú0 
	character
ú0ú0 $
;
ú0ú0$ %
}
ù0ù0 
if
†0†0 
(
†0†0 
m_fontAsset
†0†0 
.
†0†0  &
m_FallbackFontAssetTable
†0†0  8
!=
†0†09 ;
null
†0†0< @
&&
†0†0A C
m_fontAsset
†0†0D O
.
†0†0O P&
m_FallbackFontAssetTable
†0†0P h
.
†0†0h i
Count
†0†0i n
>
†0†0o p
$num
†0†0q r
)
†0†0r s
	character
°0°0 
=
°0°0 $
TMP_FontAssetUtilities
°0°0  6
.
°0°06 7(
GetCharacterFromFontAssets
°0°07 Q
(
°0°0Q R
unicode
°0°0R Y
,
°0°0Y Z
	fontAsset
°0°0[ d
,
°0°0d e
m_fontAsset
°0°0f q
.
°0°0q r'
m_FallbackFontAssetTable°0°0r ä
,°0°0ä ã
true°0°0å ê
,°0°0ê ë
	fontStyle°0°0í õ
,°0°0õ ú

fontWeight°0°0ù ß
,°0°0ß ®
out°0°0© ¨*
isUsingAlternativeTypeface°0°0≠ «
)°0°0« »
;°0°0» …
if
£0£0 
(
£0£0 
	character
£0£0 
!=
£0£0  
null
£0£0! %
)
£0£0% &
{
§0§0 
return
®0®0 
	character
®0®0 $
;
®0®0$ %
}
©0©0 
}
™0™0 
if
≠0≠0 
(
≠0≠0 
m_spriteAsset
≠0≠0 
!=
≠0≠0  
null
≠0≠0! %
)
≠0≠0% &
{
Æ0Æ0 !
TMP_SpriteCharacter
Ø0Ø0 #
spriteCharacter
Ø0Ø0$ 3
=
Ø0Ø04 5$
TMP_FontAssetUtilities
Ø0Ø06 L
.
Ø0Ø0L M/
!GetSpriteCharacterFromSpriteAsset
Ø0Ø0M n
(
Ø0Ø0n o
unicode
Ø0Ø0o v
,
Ø0Ø0v w
m_spriteAssetØ0Ø0x Ö
,Ø0Ø0Ö Ü
trueØ0Ø0á ã
)Ø0Ø0ã å
;Ø0Ø0å ç
if
±0±0 
(
±0±0 
spriteCharacter
±0±0 #
!=
±0±0$ &
null
±0±0' +
)
±0±0+ ,
return
≤0≤0 
spriteCharacter
≤0≤0 *
;
≤0≤0* +
}
≥0≥0 
if
∂0∂0 
(
∂0∂0 
TMP_Settings
∂0∂0 
.
∂0∂0  
fallbackFontAssets
∂0∂0 /
!=
∂0∂00 2
null
∂0∂03 7
&&
∂0∂08 :
TMP_Settings
∂0∂0; G
.
∂0∂0G H 
fallbackFontAssets
∂0∂0H Z
.
∂0∂0Z [
Count
∂0∂0[ `
>
∂0∂0a b
$num
∂0∂0c d
)
∂0∂0d e
	character
∑0∑0 
=
∑0∑0 $
TMP_FontAssetUtilities
∑0∑0 2
.
∑0∑02 3(
GetCharacterFromFontAssets
∑0∑03 M
(
∑0∑0M N
unicode
∑0∑0N U
,
∑0∑0U V
	fontAsset
∑0∑0W `
,
∑0∑0` a
TMP_Settings
∑0∑0b n
.
∑0∑0n o!
fallbackFontAssets∑0∑0o Å
,∑0∑0Å Ç
true∑0∑0É á
,∑0∑0á à
	fontStyle∑0∑0â í
,∑0∑0í ì

fontWeight∑0∑0î û
,∑0∑0û ü
out∑0∑0† £*
isUsingAlternativeTypeface∑0∑0§ æ
)∑0∑0æ ø
;∑0∑0ø ¿
if
π0π0 
(
π0π0 
	character
π0π0 
!=
π0π0 
null
π0π0 !
)
π0π0! "
{
∫0∫0 
return
æ0æ0 
	character
æ0æ0  
;
æ0æ0  !
}
ø0ø0 
if
¬0¬0 
(
¬0¬0 
TMP_Settings
¬0¬0 
.
¬0¬0 
defaultFontAsset
¬0¬0 -
!=
¬0¬0. 0
null
¬0¬01 5
)
¬0¬05 6
	character
√0√0 
=
√0√0 $
TMP_FontAssetUtilities
√0√0 2
.
√0√02 3'
GetCharacterFromFontAsset
√0√03 L
(
√0√0L M
unicode
√0√0M T
,
√0√0T U
TMP_Settings
√0√0V b
.
√0√0b c
defaultFontAsset
√0√0c s
,
√0√0s t
true
√0√0u y
,
√0√0y z
	fontStyle√0√0{ Ñ
,√0√0Ñ Ö

fontWeight√0√0Ü ê
,√0√0ê ë
out√0√0í ï*
isUsingAlternativeTypeface√0√0ñ ∞
)√0√0∞ ±
;√0√0± ≤
if
≈0≈0 
(
≈0≈0 
	character
≈0≈0 
!=
≈0≈0 
null
≈0≈0 !
)
≈0≈0! "
{
∆0∆0 
return
 0 0 
	character
 0 0  
;
 0 0  !
}
À0À0 
if
Œ0Œ0 
(
Œ0Œ0 
TMP_Settings
Œ0Œ0 
.
Œ0Œ0  
defaultSpriteAsset
Œ0Œ0 /
!=
Œ0Œ00 2
null
Œ0Œ03 7
)
Œ0Œ07 8
{
œ0œ0 !
TMP_SpriteCharacter
–0–0 #
spriteCharacter
–0–0$ 3
=
–0–04 5$
TMP_FontAssetUtilities
–0–06 L
.
–0–0L M/
!GetSpriteCharacterFromSpriteAsset
–0–0M n
(
–0–0n o
unicode
–0–0o v
,
–0–0v w
TMP_Settings–0–0x Ñ
.–0–0Ñ Ö"
defaultSpriteAsset–0–0Ö ó
,–0–0ó ò
true–0–0ô ù
)–0–0ù û
;–0–0û ü
if
“0“0 
(
“0“0 
spriteCharacter
“0“0 #
!=
“0“0$ &
null
“0“0' +
)
“0“0+ ,
return
”0”0 
spriteCharacter
”0”0 *
;
”0”0* +
}
‘0‘0 
return
÷0÷0 
null
÷0÷0 
;
÷0÷0 
}
◊0◊0 	
	protected
ﬁ0ﬁ0 
virtual
ﬁ0ﬁ0 
void
ﬁ0ﬁ0  
SetActiveSubMeshes
ﬁ0ﬁ0 1
(
ﬁ0ﬁ01 2
bool
ﬁ0ﬁ02 6
state
ﬁ0ﬁ07 <
)
ﬁ0ﬁ0< =
{
ﬁ0ﬁ0> ?
}
ﬁ0ﬁ0@ A
	protected
‰0‰0 
virtual
‰0‰0 
void
‰0‰0 #
DestroySubMeshObjects
‰0‰0 4
(
‰0‰04 5
)
‰0‰05 6
{
‰0‰07 8
}
‰0‰09 :
public
Í0Í0 
virtual
Í0Í0 
void
Í0Í0 
	ClearMesh
Í0Í0 %
(
Í0Í0% &
)
Í0Í0& '
{
Í0Í0( )
}
Í0Í0* +
public
00 
virtual
00 
void
00 
	ClearMesh
00 %
(
00% &
bool
00& *
uploadGeometry
00+ 9
)
009 :
{
00; <
}
00= >
public
˜0˜0 
virtual
˜0˜0 
string
˜0˜0 
GetParsedText
˜0˜0 +
(
˜0˜0+ ,
)
˜0˜0, -
{
¯0¯0 	
if
˘0˘0 
(
˘0˘0 

m_textInfo
˘0˘0 
==
˘0˘0 
null
˘0˘0 "
)
˘0˘0" #
return
˙0˙0 
string
˙0˙0 
.
˙0˙0 
Empty
˙0˙0 #
;
˙0˙0# $
int
¸0¸0 
characterCount
¸0¸0 
=
¸0¸0  

m_textInfo
¸0¸0! +
.
¸0¸0+ ,
characterCount
¸0¸0, :
;
¸0¸0: ;
char
ˇ0ˇ0 
[
ˇ0ˇ0 
]
ˇ0ˇ0 
buffer
ˇ0ˇ0 
=
ˇ0ˇ0 
new
ˇ0ˇ0 
char
ˇ0ˇ0  $
[
ˇ0ˇ0$ %
characterCount
ˇ0ˇ0% 3
]
ˇ0ˇ03 4
;
ˇ0ˇ04 5
for
Å1Å1 
(
Å1Å1 
int
Å1Å1 
i
Å1Å1 
=
Å1Å1 
$num
Å1Å1 
;
Å1Å1 
i
Å1Å1 
<
Å1Å1 
characterCount
Å1Å1  .
&&
Å1Å1/ 1
i
Å1Å12 3
<
Å1Å14 5

m_textInfo
Å1Å16 @
.
Å1Å1@ A
characterInfo
Å1Å1A N
.
Å1Å1N O
Length
Å1Å1O U
;
Å1Å1U V
i
Å1Å1W X
++
Å1Å1X Z
)
Å1Å1Z [
{
Ç1Ç1 
buffer
É1É1 
[
É1É1 
i
É1É1 
]
É1É1 
=
É1É1 

m_textInfo
É1É1 &
.
É1É1& '
characterInfo
É1É1' 4
[
É1É14 5
i
É1É15 6
]
É1É16 7
.
É1É17 8
	character
É1É18 A
;
É1É1A B
}
Ñ1Ñ1 
return
Ü1Ü1 
new
Ü1Ü1 
string
Ü1Ü1 
(
Ü1Ü1 
buffer
Ü1Ü1 $
)
Ü1Ü1$ %
;
Ü1Ü1% &
}
á1á1 	
internal
ä1ä1 
bool
ä1ä1 $
IsSelfOrLinkedAncestor
ä1ä1 ,
(
ä1ä1, -
TMP_Text
ä1ä1- 5!
targetTextComponent
ä1ä16 I
)
ä1ä1I J
{
ã1ã1 	
if
å1å1 
(
å1å1 !
targetTextComponent
å1å1 #
==
å1å1$ &
null
å1å1' +
)
å1å1+ ,
return
ç1ç1 
true
ç1ç1 
;
ç1ç1 
if
è1è1 
(
è1è1 #
parentLinkedComponent
è1è1 %
!=
è1è1& (
null
è1è1) -
)
è1è1- .
{
ê1ê1 
if
ë1ë1 
(
ë1ë1 #
parentLinkedComponent
ë1ë1 )
.
ë1ë1) *$
IsSelfOrLinkedAncestor
ë1ë1* @
(
ë1ë1@ A!
targetTextComponent
ë1ë1A T
)
ë1ë1T U
)
ë1ë1U V
return
í1í1 
true
í1í1 
;
í1í1  
}
ì1ì1 
if
ï1ï1 
(
ï1ï1 
this
ï1ï1 
.
ï1ï1 
GetInstanceID
ï1ï1 "
(
ï1ï1" #
)
ï1ï1# $
==
ï1ï1% '!
targetTextComponent
ï1ï1( ;
.
ï1ï1; <
GetInstanceID
ï1ï1< I
(
ï1ï1I J
)
ï1ï1J K
)
ï1ï1K L
return
ñ1ñ1 
true
ñ1ñ1 
;
ñ1ñ1 
return
ò1ò1 
false
ò1ò1 
;
ò1ò1 
}
ô1ô1 	
internal
õ1õ1 
void
õ1õ1 (
ReleaseLinkedTextComponent
õ1õ1 0
(
õ1õ10 1
TMP_Text
õ1õ11 9!
targetTextComponent
õ1õ1: M
)
õ1õ1M N
{
ú1ú1 	
if
ù1ù1 
(
ù1ù1 !
targetTextComponent
ù1ù1 #
==
ù1ù1$ &
null
ù1ù1' +
)
ù1ù1+ ,
return
û1û1 
;
û1û1 
TMP_Text
†1†1 "
childLinkedComponent
†1†1 )
=
†1†1* +!
targetTextComponent
†1†1, ?
.
†1†1? @!
linkedTextComponent
†1†1@ S
;
†1†1S T
if
¢1¢1 
(
¢1¢1 "
childLinkedComponent
¢1¢1 $
!=
¢1¢1% '
null
¢1¢1( ,
)
¢1¢1, -(
ReleaseLinkedTextComponent
£1£1 *
(
£1£1* +"
childLinkedComponent
£1£1+ ?
)
£1£1? @
;
£1£1@ A!
targetTextComponent
•1•1 
.
•1•1  
text
•1•1  $
=
•1•1% &
string
•1•1' -
.
•1•1- .
Empty
•1•1. 3
;
•1•13 4!
targetTextComponent
¶1¶1 
.
¶1¶1  #
firstVisibleCharacter
¶1¶1  5
=
¶1¶16 7
$num
¶1¶18 9
;
¶1¶19 :!
targetTextComponent
ß1ß1 
.
ß1ß1  !
linkedTextComponent
ß1ß1  3
=
ß1ß14 5
null
ß1ß16 :
;
ß1ß1: ;!
targetTextComponent
®1®1 
.
®1®1  #
parentLinkedComponent
®1®1  5
=
®1®16 7
null
®1®18 <
;
®1®1< =
}
©1©1 	
	protected
«1«1 
Vector2
«1«1 
PackUV
«1«1  
(
«1«1  !
float
«1«1! &
x
«1«1' (
,
«1«1( )
float
«1«1* /
y
«1«10 1
,
«1«11 2
float
«1«13 8
scale
«1«19 >
)
«1«1> ?
{
»1»1 	
Vector2
…1…1 
output
…1…1 
;
…1…1 
output
À1À1 
.
À1À1 
x
À1À1 
=
À1À1 
(
À1À1 
int
À1À1 
)
À1À1 
(
À1À1 
x
À1À1 
*
À1À1  
$num
À1À1! $
)
À1À1$ %
;
À1À1% &
output
Ã1Ã1 
.
Ã1Ã1 
y
Ã1Ã1 
=
Ã1Ã1 
(
Ã1Ã1 
int
Ã1Ã1 
)
Ã1Ã1 
(
Ã1Ã1 
y
Ã1Ã1 
*
Ã1Ã1  
$num
Ã1Ã1! $
)
Ã1Ã1$ %
;
Ã1Ã1% &
output
Œ1Œ1 
.
Œ1Œ1 
x
Œ1Œ1 
=
Œ1Œ1 
(
Œ1Œ1 
output
Œ1Œ1 
.
Œ1Œ1 
x
Œ1Œ1  
*
Œ1Œ1! "
$num
Œ1Œ1# '
)
Œ1Œ1' (
+
Œ1Œ1) *
output
Œ1Œ1+ 1
.
Œ1Œ11 2
y
Œ1Œ12 3
;
Œ1Œ13 4
output
œ1œ1 
.
œ1œ1 
y
œ1œ1 
=
œ1œ1 
scale
œ1œ1 
;
œ1œ1 
return
—1—1 
output
—1—1 
;
—1—1 
}
“1“1 	
	protected
€1€1 
float
€1€1 
PackUV
€1€1 
(
€1€1 
float
€1€1 $
x
€1€1% &
,
€1€1& '
float
€1€1( -
y
€1€1. /
)
€1€1/ 0
{
‹1‹1 	
double
›1›1 
x0
›1›1 
=
›1›1 
(
›1›1 
int
›1›1 
)
›1›1 
(
›1›1 
x
›1›1 
*
›1›1  !
$num
›1›1" %
)
›1›1% &
;
›1›1& '
double
ﬁ1ﬁ1 
y0
ﬁ1ﬁ1 
=
ﬁ1ﬁ1 
(
ﬁ1ﬁ1 
int
ﬁ1ﬁ1 
)
ﬁ1ﬁ1 
(
ﬁ1ﬁ1 
y
ﬁ1ﬁ1 
*
ﬁ1ﬁ1  !
$num
ﬁ1ﬁ1" %
)
ﬁ1ﬁ1% &
;
ﬁ1ﬁ1& '
return
‡1‡1 
(
‡1‡1 
float
‡1‡1 
)
‡1‡1 
(
‡1‡1 
(
‡1‡1 
x0
‡1‡1 
*
‡1‡1  
$num
‡1‡1! %
)
‡1‡1% &
+
‡1‡1' (
y0
‡1‡1) +
)
‡1‡1+ ,
;
‡1‡1, -
}
·1·1 	
internal
Á1Á1 
virtual
Á1Á1 
void
Á1Á1 
InternalUpdate
Á1Á1 ,
(
Á1Á1, -
)
Á1Á1- .
{
Á1Á1/ 0
}
Á1Á11 2
	protected
ê2ê2 
int
ê2ê2 
HexToInt
ê2ê2 
(
ê2ê2 
char
ê2ê2 #
hex
ê2ê2$ '
)
ê2ê2' (
{
ë2ë2 	
switch
í2í2 
(
í2í2 
hex
í2í2 
)
í2í2 
{
ì2ì2 
case
î2î2 
$char
î2î2 
:
î2î2 
return
î2î2  
$num
î2î2! "
;
î2î2" #
case
ï2ï2 
$char
ï2ï2 
:
ï2ï2 
return
ï2ï2  
$num
ï2ï2! "
;
ï2ï2" #
case
ñ2ñ2 
$char
ñ2ñ2 
:
ñ2ñ2 
return
ñ2ñ2  
$num
ñ2ñ2! "
;
ñ2ñ2" #
case
ó2ó2 
$char
ó2ó2 
:
ó2ó2 
return
ó2ó2  
$num
ó2ó2! "
;
ó2ó2" #
case
ò2ò2 
$char
ò2ò2 
:
ò2ò2 
return
ò2ò2  
$num
ò2ò2! "
;
ò2ò2" #
case
ô2ô2 
$char
ô2ô2 
:
ô2ô2 
return
ô2ô2  
$num
ô2ô2! "
;
ô2ô2" #
case
ö2ö2 
$char
ö2ö2 
:
ö2ö2 
return
ö2ö2  
$num
ö2ö2! "
;
ö2ö2" #
case
õ2õ2 
$char
õ2õ2 
:
õ2õ2 
return
õ2õ2  
$num
õ2õ2! "
;
õ2õ2" #
case
ú2ú2 
$char
ú2ú2 
:
ú2ú2 
return
ú2ú2  
$num
ú2ú2! "
;
ú2ú2" #
case
ù2ù2 
$char
ù2ù2 
:
ù2ù2 
return
ù2ù2  
$num
ù2ù2! "
;
ù2ù2" #
case
û2û2 
$char
û2û2 
:
û2û2 
return
û2û2  
$num
û2û2! #
;
û2û2# $
case
ü2ü2 
$char
ü2ü2 
:
ü2ü2 
return
ü2ü2  
$num
ü2ü2! #
;
ü2ü2# $
case
†2†2 
$char
†2†2 
:
†2†2 
return
†2†2  
$num
†2†2! #
;
†2†2# $
case
°2°2 
$char
°2°2 
:
°2°2 
return
°2°2  
$num
°2°2! #
;
°2°2# $
case
¢2¢2 
$char
¢2¢2 
:
¢2¢2 
return
¢2¢2  
$num
¢2¢2! #
;
¢2¢2# $
case
£2£2 
$char
£2£2 
:
£2£2 
return
£2£2  
$num
£2£2! #
;
£2£2# $
case
§2§2 
$char
§2§2 
:
§2§2 
return
§2§2  
$num
§2§2! #
;
§2§2# $
case
•2•2 
$char
•2•2 
:
•2•2 
return
•2•2  
$num
•2•2! #
;
•2•2# $
case
¶2¶2 
$char
¶2¶2 
:
¶2¶2 
return
¶2¶2  
$num
¶2¶2! #
;
¶2¶2# $
case
ß2ß2 
$char
ß2ß2 
:
ß2ß2 
return
ß2ß2  
$num
ß2ß2! #
;
ß2ß2# $
case
®2®2 
$char
®2®2 
:
®2®2 
return
®2®2  
$num
®2®2! #
;
®2®2# $
case
©2©2 
$char
©2©2 
:
©2©2 
return
©2©2  
$num
©2©2! #
;
©2©2# $
}
™2™2 
return
´2´2 
$num
´2´2 
;
´2´2 
}
¨2¨2 	
	protected
¥2¥2 
int
¥2¥2 
GetUTF16
¥2¥2 
(
¥2¥2 
string
¥2¥2 %
text
¥2¥2& *
,
¥2¥2* +
int
¥2¥2, /
i
¥2¥20 1
)
¥2¥21 2
{
µ2µ2 	
int
∂2∂2 
unicode
∂2∂2 
=
∂2∂2 
$num
∂2∂2 
;
∂2∂2 
unicode
∑2∑2 
+=
∑2∑2 
HexToInt
∑2∑2 
(
∑2∑2  
text
∑2∑2  $
[
∑2∑2$ %
i
∑2∑2% &
]
∑2∑2& '
)
∑2∑2' (
<<
∑2∑2) +
$num
∑2∑2, .
;
∑2∑2. /
unicode
∏2∏2 
+=
∏2∏2 
HexToInt
∏2∏2 
(
∏2∏2  
text
∏2∏2  $
[
∏2∏2$ %
i
∏2∏2% &
+
∏2∏2' (
$num
∏2∏2) *
]
∏2∏2* +
)
∏2∏2+ ,
<<
∏2∏2- /
$num
∏2∏20 1
;
∏2∏21 2
unicode
π2π2 
+=
π2π2 
HexToInt
π2π2 
(
π2π2  
text
π2π2  $
[
π2π2$ %
i
π2π2% &
+
π2π2' (
$num
π2π2) *
]
π2π2* +
)
π2π2+ ,
<<
π2π2- /
$num
π2π20 1
;
π2π21 2
unicode
∫2∫2 
+=
∫2∫2 
HexToInt
∫2∫2 
(
∫2∫2  
text
∫2∫2  $
[
∫2∫2$ %
i
∫2∫2% &
+
∫2∫2' (
$num
∫2∫2) *
]
∫2∫2* +
)
∫2∫2+ ,
;
∫2∫2, -
return
ª2ª2 
unicode
ª2ª2 
;
ª2ª2 
}
º2º2 	
	protected
æ2æ2 
int
æ2æ2 
GetUTF16
æ2æ2 
(
æ2æ2 
int
æ2æ2 "
[
æ2æ2" #
]
æ2æ2# $
text
æ2æ2% )
,
æ2æ2) *
int
æ2æ2+ .
i
æ2æ2/ 0
)
æ2æ20 1
{
ø2ø2 	
int
¿2¿2 
unicode
¿2¿2 
=
¿2¿2 
$num
¿2¿2 
;
¿2¿2 
unicode
¡2¡2 
+=
¡2¡2 
HexToInt
¡2¡2 
(
¡2¡2  
(
¡2¡2  !
char
¡2¡2! %
)
¡2¡2% &
text
¡2¡2& *
[
¡2¡2* +
i
¡2¡2+ ,
]
¡2¡2, -
)
¡2¡2- .
<<
¡2¡2/ 1
$num
¡2¡22 4
;
¡2¡24 5
unicode
¬2¬2 
+=
¬2¬2 
HexToInt
¬2¬2 
(
¬2¬2  
(
¬2¬2  !
char
¬2¬2! %
)
¬2¬2% &
text
¬2¬2& *
[
¬2¬2* +
i
¬2¬2+ ,
+
¬2¬2- .
$num
¬2¬2/ 0
]
¬2¬20 1
)
¬2¬21 2
<<
¬2¬23 5
$num
¬2¬26 7
;
¬2¬27 8
unicode
√2√2 
+=
√2√2 
HexToInt
√2√2 
(
√2√2  
(
√2√2  !
char
√2√2! %
)
√2√2% &
text
√2√2& *
[
√2√2* +
i
√2√2+ ,
+
√2√2- .
$num
√2√2/ 0
]
√2√20 1
)
√2√21 2
<<
√2√23 5
$num
√2√26 7
;
√2√27 8
unicode
ƒ2ƒ2 
+=
ƒ2ƒ2 
HexToInt
ƒ2ƒ2 
(
ƒ2ƒ2  
(
ƒ2ƒ2  !
char
ƒ2ƒ2! %
)
ƒ2ƒ2% &
text
ƒ2ƒ2& *
[
ƒ2ƒ2* +
i
ƒ2ƒ2+ ,
+
ƒ2ƒ2- .
$num
ƒ2ƒ2/ 0
]
ƒ2ƒ20 1
)
ƒ2ƒ21 2
;
ƒ2ƒ22 3
return
≈2≈2 
unicode
≈2≈2 
;
≈2≈2 
}
∆2∆2 	
internal
»2»2 
int
»2»2 
GetUTF16
»2»2 
(
»2»2 
uint
»2»2 "
[
»2»2" #
]
»2»2# $
text
»2»2% )
,
»2»2) *
int
»2»2+ .
i
»2»2/ 0
)
»2»20 1
{
…2…2 	
int
 2 2 
unicode
 2 2 
=
 2 2 
$num
 2 2 
;
 2 2 
unicode
À2À2 
+=
À2À2 
HexToInt
À2À2 
(
À2À2  
(
À2À2  !
char
À2À2! %
)
À2À2% &
text
À2À2& *
[
À2À2* +
i
À2À2+ ,
]
À2À2, -
)
À2À2- .
<<
À2À2/ 1
$num
À2À22 4
;
À2À24 5
unicode
Ã2Ã2 
+=
Ã2Ã2 
HexToInt
Ã2Ã2 
(
Ã2Ã2  
(
Ã2Ã2  !
char
Ã2Ã2! %
)
Ã2Ã2% &
text
Ã2Ã2& *
[
Ã2Ã2* +
i
Ã2Ã2+ ,
+
Ã2Ã2- .
$num
Ã2Ã2/ 0
]
Ã2Ã20 1
)
Ã2Ã21 2
<<
Ã2Ã23 5
$num
Ã2Ã26 7
;
Ã2Ã27 8
unicode
Õ2Õ2 
+=
Õ2Õ2 
HexToInt
Õ2Õ2 
(
Õ2Õ2  
(
Õ2Õ2  !
char
Õ2Õ2! %
)
Õ2Õ2% &
text
Õ2Õ2& *
[
Õ2Õ2* +
i
Õ2Õ2+ ,
+
Õ2Õ2- .
$num
Õ2Õ2/ 0
]
Õ2Õ20 1
)
Õ2Õ21 2
<<
Õ2Õ23 5
$num
Õ2Õ26 7
;
Õ2Õ27 8
unicode
Œ2Œ2 
+=
Œ2Œ2 
HexToInt
Œ2Œ2 
(
Œ2Œ2  
(
Œ2Œ2  !
char
Œ2Œ2! %
)
Œ2Œ2% &
text
Œ2Œ2& *
[
Œ2Œ2* +
i
Œ2Œ2+ ,
+
Œ2Œ2- .
$num
Œ2Œ2/ 0
]
Œ2Œ20 1
)
Œ2Œ21 2
;
Œ2Œ22 3
return
œ2œ2 
unicode
œ2œ2 
;
œ2œ2 
}
–2–2 	
	protected
◊2◊2 
int
◊2◊2 
GetUTF16
◊2◊2 
(
◊2◊2 
StringBuilder
◊2◊2 ,
text
◊2◊2- 1
,
◊2◊21 2
int
◊2◊23 6
i
◊2◊27 8
)
◊2◊28 9
{
ÿ2ÿ2 	
int
Ÿ2Ÿ2 
unicode
Ÿ2Ÿ2 
=
Ÿ2Ÿ2 
$num
Ÿ2Ÿ2 
;
Ÿ2Ÿ2 
unicode
⁄2⁄2 
+=
⁄2⁄2 
HexToInt
⁄2⁄2 
(
⁄2⁄2  
text
⁄2⁄2  $
[
⁄2⁄2$ %
i
⁄2⁄2% &
]
⁄2⁄2& '
)
⁄2⁄2' (
<<
⁄2⁄2) +
$num
⁄2⁄2, .
;
⁄2⁄2. /
unicode
€2€2 
+=
€2€2 
HexToInt
€2€2 
(
€2€2  
text
€2€2  $
[
€2€2$ %
i
€2€2% &
+
€2€2' (
$num
€2€2) *
]
€2€2* +
)
€2€2+ ,
<<
€2€2- /
$num
€2€20 1
;
€2€21 2
unicode
‹2‹2 
+=
‹2‹2 
HexToInt
‹2‹2 
(
‹2‹2  
text
‹2‹2  $
[
‹2‹2$ %
i
‹2‹2% &
+
‹2‹2' (
$num
‹2‹2) *
]
‹2‹2* +
)
‹2‹2+ ,
<<
‹2‹2- /
$num
‹2‹20 1
;
‹2‹21 2
unicode
›2›2 
+=
›2›2 
HexToInt
›2›2 
(
›2›2  
text
›2›2  $
[
›2›2$ %
i
›2›2% &
+
›2›2' (
$num
›2›2) *
]
›2›2* +
)
›2›2+ ,
;
›2›2, -
return
ﬁ2ﬁ2 
unicode
ﬁ2ﬁ2 
;
ﬁ2ﬁ2 
}
ﬂ2ﬂ2 	
private
·2·2 
int
·2·2 
GetUTF16
·2·2 
(
·2·2 "
TextBackingContainer
·2·2 1
text
·2·22 6
,
·2·26 7
int
·2·28 ;
i
·2·2< =
)
·2·2= >
{
‚2‚2 	
int
„2„2 
unicode
„2„2 
=
„2„2 
$num
„2„2 
;
„2„2 
unicode
‰2‰2 
+=
‰2‰2 
HexToInt
‰2‰2 
(
‰2‰2  
(
‰2‰2  !
char
‰2‰2! %
)
‰2‰2% &
text
‰2‰2& *
[
‰2‰2* +
i
‰2‰2+ ,
]
‰2‰2, -
)
‰2‰2- .
<<
‰2‰2/ 1
$num
‰2‰22 4
;
‰2‰24 5
unicode
Â2Â2 
+=
Â2Â2 
HexToInt
Â2Â2 
(
Â2Â2  
(
Â2Â2  !
char
Â2Â2! %
)
Â2Â2% &
text
Â2Â2& *
[
Â2Â2* +
i
Â2Â2+ ,
+
Â2Â2- .
$num
Â2Â2/ 0
]
Â2Â20 1
)
Â2Â21 2
<<
Â2Â23 5
$num
Â2Â26 7
;
Â2Â27 8
unicode
Ê2Ê2 
+=
Ê2Ê2 
HexToInt
Ê2Ê2 
(
Ê2Ê2  
(
Ê2Ê2  !
char
Ê2Ê2! %
)
Ê2Ê2% &
text
Ê2Ê2& *
[
Ê2Ê2* +
i
Ê2Ê2+ ,
+
Ê2Ê2- .
$num
Ê2Ê2/ 0
]
Ê2Ê20 1
)
Ê2Ê21 2
<<
Ê2Ê23 5
$num
Ê2Ê26 7
;
Ê2Ê27 8
unicode
Á2Á2 
+=
Á2Á2 
HexToInt
Á2Á2 
(
Á2Á2  
(
Á2Á2  !
char
Á2Á2! %
)
Á2Á2% &
text
Á2Á2& *
[
Á2Á2* +
i
Á2Á2+ ,
+
Á2Á2- .
$num
Á2Á2/ 0
]
Á2Á20 1
)
Á2Á21 2
;
Á2Á22 3
return
Ë2Ë2 
unicode
Ë2Ë2 
;
Ë2Ë2 
}
È2È2 	
	protected
Ò2Ò2 
int
Ò2Ò2 
GetUTF32
Ò2Ò2 
(
Ò2Ò2 
string
Ò2Ò2 %
text
Ò2Ò2& *
,
Ò2Ò2* +
int
Ò2Ò2, /
i
Ò2Ò20 1
)
Ò2Ò21 2
{
Ú2Ú2 	
int
Û2Û2 
unicode
Û2Û2 
=
Û2Û2 
$num
Û2Û2 
;
Û2Û2 
unicode
Ù2Ù2 
+=
Ù2Ù2 
HexToInt
Ù2Ù2 
(
Ù2Ù2  
text
Ù2Ù2  $
[
Ù2Ù2$ %
i
Ù2Ù2% &
]
Ù2Ù2& '
)
Ù2Ù2' (
<<
Ù2Ù2) +
$num
Ù2Ù2, .
;
Ù2Ù2. /
unicode
ı2ı2 
+=
ı2ı2 
HexToInt
ı2ı2 
(
ı2ı2  
text
ı2ı2  $
[
ı2ı2$ %
i
ı2ı2% &
+
ı2ı2' (
$num
ı2ı2) *
]
ı2ı2* +
)
ı2ı2+ ,
<<
ı2ı2- /
$num
ı2ı20 2
;
ı2ı22 3
unicode
ˆ2ˆ2 
+=
ˆ2ˆ2 
HexToInt
ˆ2ˆ2 
(
ˆ2ˆ2  
text
ˆ2ˆ2  $
[
ˆ2ˆ2$ %
i
ˆ2ˆ2% &
+
ˆ2ˆ2' (
$num
ˆ2ˆ2) *
]
ˆ2ˆ2* +
)
ˆ2ˆ2+ ,
<<
ˆ2ˆ2- /
$num
ˆ2ˆ20 2
;
ˆ2ˆ22 3
unicode
˜2˜2 
+=
˜2˜2 
HexToInt
˜2˜2 
(
˜2˜2  
text
˜2˜2  $
[
˜2˜2$ %
i
˜2˜2% &
+
˜2˜2' (
$num
˜2˜2) *
]
˜2˜2* +
)
˜2˜2+ ,
<<
˜2˜2- /
$num
˜2˜20 2
;
˜2˜22 3
unicode
¯2¯2 
+=
¯2¯2 
HexToInt
¯2¯2 
(
¯2¯2  
text
¯2¯2  $
[
¯2¯2$ %
i
¯2¯2% &
+
¯2¯2' (
$num
¯2¯2) *
]
¯2¯2* +
)
¯2¯2+ ,
<<
¯2¯2- /
$num
¯2¯20 2
;
¯2¯22 3
unicode
˘2˘2 
+=
˘2˘2 
HexToInt
˘2˘2 
(
˘2˘2  
text
˘2˘2  $
[
˘2˘2$ %
i
˘2˘2% &
+
˘2˘2' (
$num
˘2˘2) *
]
˘2˘2* +
)
˘2˘2+ ,
<<
˘2˘2- /
$num
˘2˘20 1
;
˘2˘21 2
unicode
˙2˙2 
+=
˙2˙2 
HexToInt
˙2˙2 
(
˙2˙2  
text
˙2˙2  $
[
˙2˙2$ %
i
˙2˙2% &
+
˙2˙2' (
$num
˙2˙2) *
]
˙2˙2* +
)
˙2˙2+ ,
<<
˙2˙2- /
$num
˙2˙20 1
;
˙2˙21 2
unicode
˚2˚2 
+=
˚2˚2 
HexToInt
˚2˚2 
(
˚2˚2  
text
˚2˚2  $
[
˚2˚2$ %
i
˚2˚2% &
+
˚2˚2' (
$num
˚2˚2) *
]
˚2˚2* +
)
˚2˚2+ ,
;
˚2˚2, -
return
¸2¸2 
unicode
¸2¸2 
;
¸2¸2 
}
˝2˝2 	
	protected
ˇ2ˇ2 
int
ˇ2ˇ2 
GetUTF32
ˇ2ˇ2 
(
ˇ2ˇ2 
int
ˇ2ˇ2 "
[
ˇ2ˇ2" #
]
ˇ2ˇ2# $
text
ˇ2ˇ2% )
,
ˇ2ˇ2) *
int
ˇ2ˇ2+ .
i
ˇ2ˇ2/ 0
)
ˇ2ˇ20 1
{
Ä3Ä3 	
int
Å3Å3 
unicode
Å3Å3 
=
Å3Å3 
$num
Å3Å3 
;
Å3Å3 
unicode
Ç3Ç3 
+=
Ç3Ç3 
HexToInt
Ç3Ç3 
(
Ç3Ç3  
(
Ç3Ç3  !
char
Ç3Ç3! %
)
Ç3Ç3% &
text
Ç3Ç3& *
[
Ç3Ç3* +
i
Ç3Ç3+ ,
]
Ç3Ç3, -
)
Ç3Ç3- .
<<
Ç3Ç3/ 1
$num
Ç3Ç32 4
;
Ç3Ç34 5
unicode
É3É3 
+=
É3É3 
HexToInt
É3É3 
(
É3É3  
(
É3É3  !
char
É3É3! %
)
É3É3% &
text
É3É3& *
[
É3É3* +
i
É3É3+ ,
+
É3É3- .
$num
É3É3/ 0
]
É3É30 1
)
É3É31 2
<<
É3É33 5
$num
É3É36 8
;
É3É38 9
unicode
Ñ3Ñ3 
+=
Ñ3Ñ3 
HexToInt
Ñ3Ñ3 
(
Ñ3Ñ3  
(
Ñ3Ñ3  !
char
Ñ3Ñ3! %
)
Ñ3Ñ3% &
text
Ñ3Ñ3& *
[
Ñ3Ñ3* +
i
Ñ3Ñ3+ ,
+
Ñ3Ñ3- .
$num
Ñ3Ñ3/ 0
]
Ñ3Ñ30 1
)
Ñ3Ñ31 2
<<
Ñ3Ñ33 5
$num
Ñ3Ñ36 8
;
Ñ3Ñ38 9
unicode
Ö3Ö3 
+=
Ö3Ö3 
HexToInt
Ö3Ö3 
(
Ö3Ö3  
(
Ö3Ö3  !
char
Ö3Ö3! %
)
Ö3Ö3% &
text
Ö3Ö3& *
[
Ö3Ö3* +
i
Ö3Ö3+ ,
+
Ö3Ö3- .
$num
Ö3Ö3/ 0
]
Ö3Ö30 1
)
Ö3Ö31 2
<<
Ö3Ö33 5
$num
Ö3Ö36 8
;
Ö3Ö38 9
unicode
Ü3Ü3 
+=
Ü3Ü3 
HexToInt
Ü3Ü3 
(
Ü3Ü3  
(
Ü3Ü3  !
char
Ü3Ü3! %
)
Ü3Ü3% &
text
Ü3Ü3& *
[
Ü3Ü3* +
i
Ü3Ü3+ ,
+
Ü3Ü3- .
$num
Ü3Ü3/ 0
]
Ü3Ü30 1
)
Ü3Ü31 2
<<
Ü3Ü33 5
$num
Ü3Ü36 8
;
Ü3Ü38 9
unicode
á3á3 
+=
á3á3 
HexToInt
á3á3 
(
á3á3  
(
á3á3  !
char
á3á3! %
)
á3á3% &
text
á3á3& *
[
á3á3* +
i
á3á3+ ,
+
á3á3- .
$num
á3á3/ 0
]
á3á30 1
)
á3á31 2
<<
á3á33 5
$num
á3á36 7
;
á3á37 8
unicode
à3à3 
+=
à3à3 
HexToInt
à3à3 
(
à3à3  
(
à3à3  !
char
à3à3! %
)
à3à3% &
text
à3à3& *
[
à3à3* +
i
à3à3+ ,
+
à3à3- .
$num
à3à3/ 0
]
à3à30 1
)
à3à31 2
<<
à3à33 5
$num
à3à36 7
;
à3à37 8
unicode
â3â3 
+=
â3â3 
HexToInt
â3â3 
(
â3â3  
(
â3â3  !
char
â3â3! %
)
â3â3% &
text
â3â3& *
[
â3â3* +
i
â3â3+ ,
+
â3â3- .
$num
â3â3/ 0
]
â3â30 1
)
â3â31 2
;
â3â32 3
return
ä3ä3 
unicode
ä3ä3 
;
ä3ä3 
}
ã3ã3 	
internal
ç3ç3 
int
ç3ç3 
GetUTF32
ç3ç3 
(
ç3ç3 
uint
ç3ç3 "
[
ç3ç3" #
]
ç3ç3# $
text
ç3ç3% )
,
ç3ç3) *
int
ç3ç3+ .
i
ç3ç3/ 0
)
ç3ç30 1
{
é3é3 	
int
è3è3 
unicode
è3è3 
=
è3è3 
$num
è3è3 
;
è3è3 
unicode
ê3ê3 
+=
ê3ê3 
HexToInt
ê3ê3 
(
ê3ê3  
(
ê3ê3  !
char
ê3ê3! %
)
ê3ê3% &
text
ê3ê3& *
[
ê3ê3* +
i
ê3ê3+ ,
]
ê3ê3, -
)
ê3ê3- .
<<
ê3ê3/ 1
$num
ê3ê32 4
;
ê3ê34 5
unicode
ë3ë3 
+=
ë3ë3 
HexToInt
ë3ë3 
(
ë3ë3  
(
ë3ë3  !
char
ë3ë3! %
)
ë3ë3% &
text
ë3ë3& *
[
ë3ë3* +
i
ë3ë3+ ,
+
ë3ë3- .
$num
ë3ë3/ 0
]
ë3ë30 1
)
ë3ë31 2
<<
ë3ë33 5
$num
ë3ë36 8
;
ë3ë38 9
unicode
í3í3 
+=
í3í3 
HexToInt
í3í3 
(
í3í3  
(
í3í3  !
char
í3í3! %
)
í3í3% &
text
í3í3& *
[
í3í3* +
i
í3í3+ ,
+
í3í3- .
$num
í3í3/ 0
]
í3í30 1
)
í3í31 2
<<
í3í33 5
$num
í3í36 8
;
í3í38 9
unicode
ì3ì3 
+=
ì3ì3 
HexToInt
ì3ì3 
(
ì3ì3  
(
ì3ì3  !
char
ì3ì3! %
)
ì3ì3% &
text
ì3ì3& *
[
ì3ì3* +
i
ì3ì3+ ,
+
ì3ì3- .
$num
ì3ì3/ 0
]
ì3ì30 1
)
ì3ì31 2
<<
ì3ì33 5
$num
ì3ì36 8
;
ì3ì38 9
unicode
î3î3 
+=
î3î3 
HexToInt
î3î3 
(
î3î3  
(
î3î3  !
char
î3î3! %
)
î3î3% &
text
î3î3& *
[
î3î3* +
i
î3î3+ ,
+
î3î3- .
$num
î3î3/ 0
]
î3î30 1
)
î3î31 2
<<
î3î33 5
$num
î3î36 8
;
î3î38 9
unicode
ï3ï3 
+=
ï3ï3 
HexToInt
ï3ï3 
(
ï3ï3  
(
ï3ï3  !
char
ï3ï3! %
)
ï3ï3% &
text
ï3ï3& *
[
ï3ï3* +
i
ï3ï3+ ,
+
ï3ï3- .
$num
ï3ï3/ 0
]
ï3ï30 1
)
ï3ï31 2
<<
ï3ï33 5
$num
ï3ï36 7
;
ï3ï37 8
unicode
ñ3ñ3 
+=
ñ3ñ3 
HexToInt
ñ3ñ3 
(
ñ3ñ3  
(
ñ3ñ3  !
char
ñ3ñ3! %
)
ñ3ñ3% &
text
ñ3ñ3& *
[
ñ3ñ3* +
i
ñ3ñ3+ ,
+
ñ3ñ3- .
$num
ñ3ñ3/ 0
]
ñ3ñ30 1
)
ñ3ñ31 2
<<
ñ3ñ33 5
$num
ñ3ñ36 7
;
ñ3ñ37 8
unicode
ó3ó3 
+=
ó3ó3 
HexToInt
ó3ó3 
(
ó3ó3  
(
ó3ó3  !
char
ó3ó3! %
)
ó3ó3% &
text
ó3ó3& *
[
ó3ó3* +
i
ó3ó3+ ,
+
ó3ó3- .
$num
ó3ó3/ 0
]
ó3ó30 1
)
ó3ó31 2
;
ó3ó32 3
return
ò3ò3 
unicode
ò3ò3 
;
ò3ò3 
}
ô3ô3 	
	protected
†3†3 
int
†3†3 
GetUTF32
†3†3 
(
†3†3 
StringBuilder
†3†3 ,
text
†3†3- 1
,
†3†31 2
int
†3†33 6
i
†3†37 8
)
†3†38 9
{
°3°3 	
int
¢3¢3 
unicode
¢3¢3 
=
¢3¢3 
$num
¢3¢3 
;
¢3¢3 
unicode
£3£3 
+=
£3£3 
HexToInt
£3£3 
(
£3£3  
text
£3£3  $
[
£3£3$ %
i
£3£3% &
]
£3£3& '
)
£3£3' (
<<
£3£3) +
$num
£3£3, .
;
£3£3. /
unicode
§3§3 
+=
§3§3 
HexToInt
§3§3 
(
§3§3  
text
§3§3  $
[
§3§3$ %
i
§3§3% &
+
§3§3' (
$num
§3§3) *
]
§3§3* +
)
§3§3+ ,
<<
§3§3- /
$num
§3§30 2
;
§3§32 3
unicode
•3•3 
+=
•3•3 
HexToInt
•3•3 
(
•3•3  
text
•3•3  $
[
•3•3$ %
i
•3•3% &
+
•3•3' (
$num
•3•3) *
]
•3•3* +
)
•3•3+ ,
<<
•3•3- /
$num
•3•30 2
;
•3•32 3
unicode
¶3¶3 
+=
¶3¶3 
HexToInt
¶3¶3 
(
¶3¶3  
text
¶3¶3  $
[
¶3¶3$ %
i
¶3¶3% &
+
¶3¶3' (
$num
¶3¶3) *
]
¶3¶3* +
)
¶3¶3+ ,
<<
¶3¶3- /
$num
¶3¶30 2
;
¶3¶32 3
unicode
ß3ß3 
+=
ß3ß3 
HexToInt
ß3ß3 
(
ß3ß3  
text
ß3ß3  $
[
ß3ß3$ %
i
ß3ß3% &
+
ß3ß3' (
$num
ß3ß3) *
]
ß3ß3* +
)
ß3ß3+ ,
<<
ß3ß3- /
$num
ß3ß30 2
;
ß3ß32 3
unicode
®3®3 
+=
®3®3 
HexToInt
®3®3 
(
®3®3  
text
®3®3  $
[
®3®3$ %
i
®3®3% &
+
®3®3' (
$num
®3®3) *
]
®3®3* +
)
®3®3+ ,
<<
®3®3- /
$num
®3®30 1
;
®3®31 2
unicode
©3©3 
+=
©3©3 
HexToInt
©3©3 
(
©3©3  
text
©3©3  $
[
©3©3$ %
i
©3©3% &
+
©3©3' (
$num
©3©3) *
]
©3©3* +
)
©3©3+ ,
<<
©3©3- /
$num
©3©30 1
;
©3©31 2
unicode
™3™3 
+=
™3™3 
HexToInt
™3™3 
(
™3™3  
text
™3™3  $
[
™3™3$ %
i
™3™3% &
+
™3™3' (
$num
™3™3) *
]
™3™3* +
)
™3™3+ ,
;
™3™3, -
return
´3´3 
unicode
´3´3 
;
´3´3 
}
¨3¨3 	
int
Æ3Æ3 
GetUTF32
Æ3Æ3 
(
Æ3Æ3 "
TextBackingContainer
Æ3Æ3 )
text
Æ3Æ3* .
,
Æ3Æ3. /
int
Æ3Æ30 3
i
Æ3Æ34 5
)
Æ3Æ35 6
{
Ø3Ø3 	
int
∞3∞3 
unicode
∞3∞3 
=
∞3∞3 
$num
∞3∞3 
;
∞3∞3 
unicode
±3±3 
+=
±3±3 
HexToInt
±3±3 
(
±3±3  
(
±3±3  !
char
±3±3! %
)
±3±3% &
text
±3±3& *
[
±3±3* +
i
±3±3+ ,
]
±3±3, -
)
±3±3- .
<<
±3±3/ 1
$num
±3±32 4
;
±3±34 5
unicode
≤3≤3 
+=
≤3≤3 
HexToInt
≤3≤3 
(
≤3≤3  
(
≤3≤3  !
char
≤3≤3! %
)
≤3≤3% &
text
≤3≤3& *
[
≤3≤3* +
i
≤3≤3+ ,
+
≤3≤3- .
$num
≤3≤3/ 0
]
≤3≤30 1
)
≤3≤31 2
<<
≤3≤33 5
$num
≤3≤36 8
;
≤3≤38 9
unicode
≥3≥3 
+=
≥3≥3 
HexToInt
≥3≥3 
(
≥3≥3  
(
≥3≥3  !
char
≥3≥3! %
)
≥3≥3% &
text
≥3≥3& *
[
≥3≥3* +
i
≥3≥3+ ,
+
≥3≥3- .
$num
≥3≥3/ 0
]
≥3≥30 1
)
≥3≥31 2
<<
≥3≥33 5
$num
≥3≥36 8
;
≥3≥38 9
unicode
¥3¥3 
+=
¥3¥3 
HexToInt
¥3¥3 
(
¥3¥3  
(
¥3¥3  !
char
¥3¥3! %
)
¥3¥3% &
text
¥3¥3& *
[
¥3¥3* +
i
¥3¥3+ ,
+
¥3¥3- .
$num
¥3¥3/ 0
]
¥3¥30 1
)
¥3¥31 2
<<
¥3¥33 5
$num
¥3¥36 8
;
¥3¥38 9
unicode
µ3µ3 
+=
µ3µ3 
HexToInt
µ3µ3 
(
µ3µ3  
(
µ3µ3  !
char
µ3µ3! %
)
µ3µ3% &
text
µ3µ3& *
[
µ3µ3* +
i
µ3µ3+ ,
+
µ3µ3- .
$num
µ3µ3/ 0
]
µ3µ30 1
)
µ3µ31 2
<<
µ3µ33 5
$num
µ3µ36 8
;
µ3µ38 9
unicode
∂3∂3 
+=
∂3∂3 
HexToInt
∂3∂3 
(
∂3∂3  
(
∂3∂3  !
char
∂3∂3! %
)
∂3∂3% &
text
∂3∂3& *
[
∂3∂3* +
i
∂3∂3+ ,
+
∂3∂3- .
$num
∂3∂3/ 0
]
∂3∂30 1
)
∂3∂31 2
<<
∂3∂33 5
$num
∂3∂36 7
;
∂3∂37 8
unicode
∑3∑3 
+=
∑3∑3 
HexToInt
∑3∑3 
(
∑3∑3  
(
∑3∑3  !
char
∑3∑3! %
)
∑3∑3% &
text
∑3∑3& *
[
∑3∑3* +
i
∑3∑3+ ,
+
∑3∑3- .
$num
∑3∑3/ 0
]
∑3∑30 1
)
∑3∑31 2
<<
∑3∑33 5
$num
∑3∑36 7
;
∑3∑37 8
unicode
∏3∏3 
+=
∏3∏3 
HexToInt
∏3∏3 
(
∏3∏3  
(
∏3∏3  !
char
∏3∏3! %
)
∏3∏3% &
text
∏3∏3& *
[
∏3∏3* +
i
∏3∏3+ ,
+
∏3∏3- .
$num
∏3∏3/ 0
]
∏3∏30 1
)
∏3∏31 2
;
∏3∏32 3
return
π3π3 
unicode
π3π3 
;
π3π3 
}
∫3∫3 	
	protected
√3√3 
Color32
√3√3 
HexCharsToColor
√3√3 )
(
√3√3) *
char
√3√3* .
[
√3√3. /
]
√3√3/ 0
hexChars
√3√31 9
,
√3√39 :
int
√3√3; >
tagCount
√3√3? G
)
√3√3G H
{
ƒ3ƒ3 	
if
≈3≈3 
(
≈3≈3 
tagCount
≈3≈3 
==
≈3≈3 
$num
≈3≈3 
)
≈3≈3 
{
∆3∆3 
byte
«3«3 
r
«3«3 
=
«3«3 
(
«3«3 
byte
«3«3 
)
«3«3 
(
«3«3  
HexToInt
«3«3  (
(
«3«3( )
hexChars
«3«3) 1
[
«3«31 2
$num
«3«32 3
]
«3«33 4
)
«3«34 5
*
«3«36 7
$num
«3«38 :
+
«3«3; <
HexToInt
«3«3= E
(
«3«3E F
hexChars
«3«3F N
[
«3«3N O
$num
«3«3O P
]
«3«3P Q
)
«3«3Q R
)
«3«3R S
;
«3«3S T
byte
»3»3 
g
»3»3 
=
»3»3 
(
»3»3 
byte
»3»3 
)
»3»3 
(
»3»3  
HexToInt
»3»3  (
(
»3»3( )
hexChars
»3»3) 1
[
»3»31 2
$num
»3»32 3
]
»3»33 4
)
»3»34 5
*
»3»36 7
$num
»3»38 :
+
»3»3; <
HexToInt
»3»3= E
(
»3»3E F
hexChars
»3»3F N
[
»3»3N O
$num
»3»3O P
]
»3»3P Q
)
»3»3Q R
)
»3»3R S
;
»3»3S T
byte
…3…3 
b
…3…3 
=
…3…3 
(
…3…3 
byte
…3…3 
)
…3…3 
(
…3…3  
HexToInt
…3…3  (
(
…3…3( )
hexChars
…3…3) 1
[
…3…31 2
$num
…3…32 3
]
…3…33 4
)
…3…34 5
*
…3…36 7
$num
…3…38 :
+
…3…3; <
HexToInt
…3…3= E
(
…3…3E F
hexChars
…3…3F N
[
…3…3N O
$num
…3…3O P
]
…3…3P Q
)
…3…3Q R
)
…3…3R S
;
…3…3S T
return
À3À3 
new
À3À3 
Color32
À3À3 "
(
À3À3" #
r
À3À3# $
,
À3À3$ %
g
À3À3& '
,
À3À3' (
b
À3À3) *
,
À3À3* +
$num
À3À3, /
)
À3À3/ 0
;
À3À30 1
}
Ã3Ã3 
else
Õ3Õ3 
if
Õ3Õ3 
(
Õ3Õ3 
tagCount
Õ3Õ3 
==
Õ3Õ3  
$num
Õ3Õ3! "
)
Õ3Õ3" #
{
Œ3Œ3 
byte
œ3œ3 
r
œ3œ3 
=
œ3œ3 
(
œ3œ3 
byte
œ3œ3 
)
œ3œ3 
(
œ3œ3  
HexToInt
œ3œ3  (
(
œ3œ3( )
hexChars
œ3œ3) 1
[
œ3œ31 2
$num
œ3œ32 3
]
œ3œ33 4
)
œ3œ34 5
*
œ3œ36 7
$num
œ3œ38 :
+
œ3œ3; <
HexToInt
œ3œ3= E
(
œ3œ3E F
hexChars
œ3œ3F N
[
œ3œ3N O
$num
œ3œ3O P
]
œ3œ3P Q
)
œ3œ3Q R
)
œ3œ3R S
;
œ3œ3S T
byte
–3–3 
g
–3–3 
=
–3–3 
(
–3–3 
byte
–3–3 
)
–3–3 
(
–3–3  
HexToInt
–3–3  (
(
–3–3( )
hexChars
–3–3) 1
[
–3–31 2
$num
–3–32 3
]
–3–33 4
)
–3–34 5
*
–3–36 7
$num
–3–38 :
+
–3–3; <
HexToInt
–3–3= E
(
–3–3E F
hexChars
–3–3F N
[
–3–3N O
$num
–3–3O P
]
–3–3P Q
)
–3–3Q R
)
–3–3R S
;
–3–3S T
byte
—3—3 
b
—3—3 
=
—3—3 
(
—3—3 
byte
—3—3 
)
—3—3 
(
—3—3  
HexToInt
—3—3  (
(
—3—3( )
hexChars
—3—3) 1
[
—3—31 2
$num
—3—32 3
]
—3—33 4
)
—3—34 5
*
—3—36 7
$num
—3—38 :
+
—3—3; <
HexToInt
—3—3= E
(
—3—3E F
hexChars
—3—3F N
[
—3—3N O
$num
—3—3O P
]
—3—3P Q
)
—3—3Q R
)
—3—3R S
;
—3—3S T
byte
“3“3 
a
“3“3 
=
“3“3 
(
“3“3 
byte
“3“3 
)
“3“3 
(
“3“3  
HexToInt
“3“3  (
(
“3“3( )
hexChars
“3“3) 1
[
“3“31 2
$num
“3“32 3
]
“3“33 4
)
“3“34 5
*
“3“36 7
$num
“3“38 :
+
“3“3; <
HexToInt
“3“3= E
(
“3“3E F
hexChars
“3“3F N
[
“3“3N O
$num
“3“3O P
]
“3“3P Q
)
“3“3Q R
)
“3“3R S
;
“3“3S T
return
‘3‘3 
new
‘3‘3 
Color32
‘3‘3 "
(
‘3‘3" #
r
‘3‘3# $
,
‘3‘3$ %
g
‘3‘3& '
,
‘3‘3' (
b
‘3‘3) *
,
‘3‘3* +
a
‘3‘3, -
)
‘3‘3- .
;
‘3‘3. /
}
’3’3 
else
÷3÷3 
if
÷3÷3 
(
÷3÷3 
tagCount
÷3÷3 
==
÷3÷3  
$num
÷3÷3! "
)
÷3÷3" #
{
◊3◊3 
byte
ÿ3ÿ3 
r
ÿ3ÿ3 
=
ÿ3ÿ3 
(
ÿ3ÿ3 
byte
ÿ3ÿ3 
)
ÿ3ÿ3 
(
ÿ3ÿ3  
HexToInt
ÿ3ÿ3  (
(
ÿ3ÿ3( )
hexChars
ÿ3ÿ3) 1
[
ÿ3ÿ31 2
$num
ÿ3ÿ32 3
]
ÿ3ÿ33 4
)
ÿ3ÿ34 5
*
ÿ3ÿ36 7
$num
ÿ3ÿ38 :
+
ÿ3ÿ3; <
HexToInt
ÿ3ÿ3= E
(
ÿ3ÿ3E F
hexChars
ÿ3ÿ3F N
[
ÿ3ÿ3N O
$num
ÿ3ÿ3O P
]
ÿ3ÿ3P Q
)
ÿ3ÿ3Q R
)
ÿ3ÿ3R S
;
ÿ3ÿ3S T
byte
Ÿ3Ÿ3 
g
Ÿ3Ÿ3 
=
Ÿ3Ÿ3 
(
Ÿ3Ÿ3 
byte
Ÿ3Ÿ3 
)
Ÿ3Ÿ3 
(
Ÿ3Ÿ3  
HexToInt
Ÿ3Ÿ3  (
(
Ÿ3Ÿ3( )
hexChars
Ÿ3Ÿ3) 1
[
Ÿ3Ÿ31 2
$num
Ÿ3Ÿ32 3
]
Ÿ3Ÿ33 4
)
Ÿ3Ÿ34 5
*
Ÿ3Ÿ36 7
$num
Ÿ3Ÿ38 :
+
Ÿ3Ÿ3; <
HexToInt
Ÿ3Ÿ3= E
(
Ÿ3Ÿ3E F
hexChars
Ÿ3Ÿ3F N
[
Ÿ3Ÿ3N O
$num
Ÿ3Ÿ3O P
]
Ÿ3Ÿ3P Q
)
Ÿ3Ÿ3Q R
)
Ÿ3Ÿ3R S
;
Ÿ3Ÿ3S T
byte
⁄3⁄3 
b
⁄3⁄3 
=
⁄3⁄3 
(
⁄3⁄3 
byte
⁄3⁄3 
)
⁄3⁄3 
(
⁄3⁄3  
HexToInt
⁄3⁄3  (
(
⁄3⁄3( )
hexChars
⁄3⁄3) 1
[
⁄3⁄31 2
$num
⁄3⁄32 3
]
⁄3⁄33 4
)
⁄3⁄34 5
*
⁄3⁄36 7
$num
⁄3⁄38 :
+
⁄3⁄3; <
HexToInt
⁄3⁄3= E
(
⁄3⁄3E F
hexChars
⁄3⁄3F N
[
⁄3⁄3N O
$num
⁄3⁄3O P
]
⁄3⁄3P Q
)
⁄3⁄3Q R
)
⁄3⁄3R S
;
⁄3⁄3S T
return
‹3‹3 
new
‹3‹3 
Color32
‹3‹3 "
(
‹3‹3" #
r
‹3‹3# $
,
‹3‹3$ %
g
‹3‹3& '
,
‹3‹3' (
b
‹3‹3) *
,
‹3‹3* +
$num
‹3‹3, /
)
‹3‹3/ 0
;
‹3‹30 1
}
›3›3 
else
ﬁ3ﬁ3 
if
ﬁ3ﬁ3 
(
ﬁ3ﬁ3 
tagCount
ﬁ3ﬁ3 
==
ﬁ3ﬁ3  
$num
ﬁ3ﬁ3! "
)
ﬁ3ﬁ3" #
{
ﬂ3ﬂ3 
byte
‡3‡3 
r
‡3‡3 
=
‡3‡3 
(
‡3‡3 
byte
‡3‡3 
)
‡3‡3 
(
‡3‡3  
HexToInt
‡3‡3  (
(
‡3‡3( )
hexChars
‡3‡3) 1
[
‡3‡31 2
$num
‡3‡32 3
]
‡3‡33 4
)
‡3‡34 5
*
‡3‡36 7
$num
‡3‡38 :
+
‡3‡3; <
HexToInt
‡3‡3= E
(
‡3‡3E F
hexChars
‡3‡3F N
[
‡3‡3N O
$num
‡3‡3O P
]
‡3‡3P Q
)
‡3‡3Q R
)
‡3‡3R S
;
‡3‡3S T
byte
·3·3 
g
·3·3 
=
·3·3 
(
·3·3 
byte
·3·3 
)
·3·3 
(
·3·3  
HexToInt
·3·3  (
(
·3·3( )
hexChars
·3·3) 1
[
·3·31 2
$num
·3·32 3
]
·3·33 4
)
·3·34 5
*
·3·36 7
$num
·3·38 :
+
·3·3; <
HexToInt
·3·3= E
(
·3·3E F
hexChars
·3·3F N
[
·3·3N O
$num
·3·3O P
]
·3·3P Q
)
·3·3Q R
)
·3·3R S
;
·3·3S T
byte
‚3‚3 
b
‚3‚3 
=
‚3‚3 
(
‚3‚3 
byte
‚3‚3 
)
‚3‚3 
(
‚3‚3  
HexToInt
‚3‚3  (
(
‚3‚3( )
hexChars
‚3‚3) 1
[
‚3‚31 2
$num
‚3‚32 3
]
‚3‚33 4
)
‚3‚34 5
*
‚3‚36 7
$num
‚3‚38 :
+
‚3‚3; <
HexToInt
‚3‚3= E
(
‚3‚3E F
hexChars
‚3‚3F N
[
‚3‚3N O
$num
‚3‚3O P
]
‚3‚3P Q
)
‚3‚3Q R
)
‚3‚3R S
;
‚3‚3S T
byte
„3„3 
a
„3„3 
=
„3„3 
(
„3„3 
byte
„3„3 
)
„3„3 
(
„3„3  
HexToInt
„3„3  (
(
„3„3( )
hexChars
„3„3) 1
[
„3„31 2
$num
„3„32 3
]
„3„33 4
)
„3„34 5
*
„3„36 7
$num
„3„38 :
+
„3„3; <
HexToInt
„3„3= E
(
„3„3E F
hexChars
„3„3F N
[
„3„3N O
$num
„3„3O P
]
„3„3P Q
)
„3„3Q R
)
„3„3R S
;
„3„3S T
return
Â3Â3 
new
Â3Â3 
Color32
Â3Â3 "
(
Â3Â3" #
r
Â3Â3# $
,
Â3Â3$ %
g
Â3Â3& '
,
Â3Â3' (
b
Â3Â3) *
,
Â3Â3* +
a
Â3Â3, -
)
Â3Â3- .
;
Â3Â3. /
}
Ê3Ê3 
else
Á3Á3 
if
Á3Á3 
(
Á3Á3 
tagCount
Á3Á3 
==
Á3Á3  
$num
Á3Á3! #
)
Á3Á3# $
{
Ë3Ë3 
byte
È3È3 
r
È3È3 
=
È3È3 
(
È3È3 
byte
È3È3 
)
È3È3 
(
È3È3  
HexToInt
È3È3  (
(
È3È3( )
hexChars
È3È3) 1
[
È3È31 2
$num
È3È32 3
]
È3È33 4
)
È3È34 5
*
È3È36 7
$num
È3È38 :
+
È3È3; <
HexToInt
È3È3= E
(
È3È3E F
hexChars
È3È3F N
[
È3È3N O
$num
È3È3O P
]
È3È3P Q
)
È3È3Q R
)
È3È3R S
;
È3È3S T
byte
Í3Í3 
g
Í3Í3 
=
Í3Í3 
(
Í3Í3 
byte
Í3Í3 
)
Í3Í3 
(
Í3Í3  
HexToInt
Í3Í3  (
(
Í3Í3( )
hexChars
Í3Í3) 1
[
Í3Í31 2
$num
Í3Í32 3
]
Í3Í33 4
)
Í3Í34 5
*
Í3Í36 7
$num
Í3Í38 :
+
Í3Í3; <
HexToInt
Í3Í3= E
(
Í3Í3E F
hexChars
Í3Í3F N
[
Í3Í3N O
$num
Í3Í3O P
]
Í3Í3P Q
)
Í3Í3Q R
)
Í3Í3R S
;
Í3Í3S T
byte
Î3Î3 
b
Î3Î3 
=
Î3Î3 
(
Î3Î3 
byte
Î3Î3 
)
Î3Î3 
(
Î3Î3  
HexToInt
Î3Î3  (
(
Î3Î3( )
hexChars
Î3Î3) 1
[
Î3Î31 2
$num
Î3Î32 3
]
Î3Î33 4
)
Î3Î34 5
*
Î3Î36 7
$num
Î3Î38 :
+
Î3Î3; <
HexToInt
Î3Î3= E
(
Î3Î3E F
hexChars
Î3Î3F N
[
Î3Î3N O
$num
Î3Î3O P
]
Î3Î3P Q
)
Î3Î3Q R
)
Î3Î3R S
;
Î3Î3S T
return
Ì3Ì3 
new
Ì3Ì3 
Color32
Ì3Ì3 "
(
Ì3Ì3" #
r
Ì3Ì3# $
,
Ì3Ì3$ %
g
Ì3Ì3& '
,
Ì3Ì3' (
b
Ì3Ì3) *
,
Ì3Ì3* +
$num
Ì3Ì3, /
)
Ì3Ì3/ 0
;
Ì3Ì30 1
}
Ó3Ó3 
else
Ô3Ô3 
if
Ô3Ô3 
(
Ô3Ô3 
tagCount
Ô3Ô3 
==
Ô3Ô3  
$num
Ô3Ô3! #
)
Ô3Ô3# $
{
33 
byte
Ò3Ò3 
r
Ò3Ò3 
=
Ò3Ò3 
(
Ò3Ò3 
byte
Ò3Ò3 
)
Ò3Ò3 
(
Ò3Ò3  
HexToInt
Ò3Ò3  (
(
Ò3Ò3( )
hexChars
Ò3Ò3) 1
[
Ò3Ò31 2
$num
Ò3Ò32 3
]
Ò3Ò33 4
)
Ò3Ò34 5
*
Ò3Ò36 7
$num
Ò3Ò38 :
+
Ò3Ò3; <
HexToInt
Ò3Ò3= E
(
Ò3Ò3E F
hexChars
Ò3Ò3F N
[
Ò3Ò3N O
$num
Ò3Ò3O P
]
Ò3Ò3P Q
)
Ò3Ò3Q R
)
Ò3Ò3R S
;
Ò3Ò3S T
byte
Ú3Ú3 
g
Ú3Ú3 
=
Ú3Ú3 
(
Ú3Ú3 
byte
Ú3Ú3 
)
Ú3Ú3 
(
Ú3Ú3  
HexToInt
Ú3Ú3  (
(
Ú3Ú3( )
hexChars
Ú3Ú3) 1
[
Ú3Ú31 2
$num
Ú3Ú32 3
]
Ú3Ú33 4
)
Ú3Ú34 5
*
Ú3Ú36 7
$num
Ú3Ú38 :
+
Ú3Ú3; <
HexToInt
Ú3Ú3= E
(
Ú3Ú3E F
hexChars
Ú3Ú3F N
[
Ú3Ú3N O
$num
Ú3Ú3O P
]
Ú3Ú3P Q
)
Ú3Ú3Q R
)
Ú3Ú3R S
;
Ú3Ú3S T
byte
Û3Û3 
b
Û3Û3 
=
Û3Û3 
(
Û3Û3 
byte
Û3Û3 
)
Û3Û3 
(
Û3Û3  
HexToInt
Û3Û3  (
(
Û3Û3( )
hexChars
Û3Û3) 1
[
Û3Û31 2
$num
Û3Û32 3
]
Û3Û33 4
)
Û3Û34 5
*
Û3Û36 7
$num
Û3Û38 :
+
Û3Û3; <
HexToInt
Û3Û3= E
(
Û3Û3E F
hexChars
Û3Û3F N
[
Û3Û3N O
$num
Û3Û3O P
]
Û3Û3P Q
)
Û3Û3Q R
)
Û3Û3R S
;
Û3Û3S T
byte
Ù3Ù3 
a
Ù3Ù3 
=
Ù3Ù3 
(
Ù3Ù3 
byte
Ù3Ù3 
)
Ù3Ù3 
(
Ù3Ù3  
HexToInt
Ù3Ù3  (
(
Ù3Ù3( )
hexChars
Ù3Ù3) 1
[
Ù3Ù31 2
$num
Ù3Ù32 4
]
Ù3Ù34 5
)
Ù3Ù35 6
*
Ù3Ù37 8
$num
Ù3Ù39 ;
+
Ù3Ù3< =
HexToInt
Ù3Ù3> F
(
Ù3Ù3F G
hexChars
Ù3Ù3G O
[
Ù3Ù3O P
$num
Ù3Ù3P R
]
Ù3Ù3R S
)
Ù3Ù3S T
)
Ù3Ù3T U
;
Ù3Ù3U V
return
ˆ3ˆ3 
new
ˆ3ˆ3 
Color32
ˆ3ˆ3 "
(
ˆ3ˆ3" #
r
ˆ3ˆ3# $
,
ˆ3ˆ3$ %
g
ˆ3ˆ3& '
,
ˆ3ˆ3' (
b
ˆ3ˆ3) *
,
ˆ3ˆ3* +
a
ˆ3ˆ3, -
)
ˆ3ˆ3- .
;
ˆ3ˆ3. /
}
˜3˜3 
else
¯3¯3 
if
¯3¯3 
(
¯3¯3 
tagCount
¯3¯3 
==
¯3¯3  
$num
¯3¯3! #
)
¯3¯3# $
{
˘3˘3 
byte
˙3˙3 
r
˙3˙3 
=
˙3˙3 
(
˙3˙3 
byte
˙3˙3 
)
˙3˙3 
(
˙3˙3  
HexToInt
˙3˙3  (
(
˙3˙3( )
hexChars
˙3˙3) 1
[
˙3˙31 2
$num
˙3˙32 3
]
˙3˙33 4
)
˙3˙34 5
*
˙3˙36 7
$num
˙3˙38 :
+
˙3˙3; <
HexToInt
˙3˙3= E
(
˙3˙3E F
hexChars
˙3˙3F N
[
˙3˙3N O
$num
˙3˙3O P
]
˙3˙3P Q
)
˙3˙3Q R
)
˙3˙3R S
;
˙3˙3S T
byte
˚3˚3 
g
˚3˚3 
=
˚3˚3 
(
˚3˚3 
byte
˚3˚3 
)
˚3˚3 
(
˚3˚3  
HexToInt
˚3˚3  (
(
˚3˚3( )
hexChars
˚3˚3) 1
[
˚3˚31 2
$num
˚3˚32 3
]
˚3˚33 4
)
˚3˚34 5
*
˚3˚36 7
$num
˚3˚38 :
+
˚3˚3; <
HexToInt
˚3˚3= E
(
˚3˚3E F
hexChars
˚3˚3F N
[
˚3˚3N O
$num
˚3˚3O Q
]
˚3˚3Q R
)
˚3˚3R S
)
˚3˚3S T
;
˚3˚3T U
byte
¸3¸3 
b
¸3¸3 
=
¸3¸3 
(
¸3¸3 
byte
¸3¸3 
)
¸3¸3 
(
¸3¸3  
HexToInt
¸3¸3  (
(
¸3¸3( )
hexChars
¸3¸3) 1
[
¸3¸31 2
$num
¸3¸32 4
]
¸3¸34 5
)
¸3¸35 6
*
¸3¸37 8
$num
¸3¸39 ;
+
¸3¸3< =
HexToInt
¸3¸3> F
(
¸3¸3F G
hexChars
¸3¸3G O
[
¸3¸3O P
$num
¸3¸3P R
]
¸3¸3R S
)
¸3¸3S T
)
¸3¸3T U
;
¸3¸3U V
return
˛3˛3 
new
˛3˛3 
Color32
˛3˛3 "
(
˛3˛3" #
r
˛3˛3# $
,
˛3˛3$ %
g
˛3˛3& '
,
˛3˛3' (
b
˛3˛3) *
,
˛3˛3* +
$num
˛3˛3, /
)
˛3˛3/ 0
;
˛3˛30 1
}
ˇ3ˇ3 
else
Ä4Ä4 
if
Ä4Ä4 
(
Ä4Ä4 
tagCount
Ä4Ä4 
==
Ä4Ä4  
$num
Ä4Ä4! #
)
Ä4Ä4# $
{
Å4Å4 
byte
Ç4Ç4 
r
Ç4Ç4 
=
Ç4Ç4 
(
Ç4Ç4 
byte
Ç4Ç4 
)
Ç4Ç4 
(
Ç4Ç4  
HexToInt
Ç4Ç4  (
(
Ç4Ç4( )
hexChars
Ç4Ç4) 1
[
Ç4Ç41 2
$num
Ç4Ç42 3
]
Ç4Ç43 4
)
Ç4Ç44 5
*
Ç4Ç46 7
$num
Ç4Ç48 :
+
Ç4Ç4; <
HexToInt
Ç4Ç4= E
(
Ç4Ç4E F
hexChars
Ç4Ç4F N
[
Ç4Ç4N O
$num
Ç4Ç4O P
]
Ç4Ç4P Q
)
Ç4Ç4Q R
)
Ç4Ç4R S
;
Ç4Ç4S T
byte
É4É4 
g
É4É4 
=
É4É4 
(
É4É4 
byte
É4É4 
)
É4É4 
(
É4É4  
HexToInt
É4É4  (
(
É4É4( )
hexChars
É4É4) 1
[
É4É41 2
$num
É4É42 3
]
É4É43 4
)
É4É44 5
*
É4É46 7
$num
É4É48 :
+
É4É4; <
HexToInt
É4É4= E
(
É4É4E F
hexChars
É4É4F N
[
É4É4N O
$num
É4É4O Q
]
É4É4Q R
)
É4É4R S
)
É4É4S T
;
É4É4T U
byte
Ñ4Ñ4 
b
Ñ4Ñ4 
=
Ñ4Ñ4 
(
Ñ4Ñ4 
byte
Ñ4Ñ4 
)
Ñ4Ñ4 
(
Ñ4Ñ4  
HexToInt
Ñ4Ñ4  (
(
Ñ4Ñ4( )
hexChars
Ñ4Ñ4) 1
[
Ñ4Ñ41 2
$num
Ñ4Ñ42 4
]
Ñ4Ñ44 5
)
Ñ4Ñ45 6
*
Ñ4Ñ47 8
$num
Ñ4Ñ49 ;
+
Ñ4Ñ4< =
HexToInt
Ñ4Ñ4> F
(
Ñ4Ñ4F G
hexChars
Ñ4Ñ4G O
[
Ñ4Ñ4O P
$num
Ñ4Ñ4P R
]
Ñ4Ñ4R S
)
Ñ4Ñ4S T
)
Ñ4Ñ4T U
;
Ñ4Ñ4U V
byte
Ö4Ö4 
a
Ö4Ö4 
=
Ö4Ö4 
(
Ö4Ö4 
byte
Ö4Ö4 
)
Ö4Ö4 
(
Ö4Ö4  
HexToInt
Ö4Ö4  (
(
Ö4Ö4( )
hexChars
Ö4Ö4) 1
[
Ö4Ö41 2
$num
Ö4Ö42 4
]
Ö4Ö44 5
)
Ö4Ö45 6
*
Ö4Ö47 8
$num
Ö4Ö49 ;
+
Ö4Ö4< =
HexToInt
Ö4Ö4> F
(
Ö4Ö4F G
hexChars
Ö4Ö4G O
[
Ö4Ö4O P
$num
Ö4Ö4P R
]
Ö4Ö4R S
)
Ö4Ö4S T
)
Ö4Ö4T U
;
Ö4Ö4U V
return
á4á4 
new
á4á4 
Color32
á4á4 "
(
á4á4" #
r
á4á4# $
,
á4á4$ %
g
á4á4& '
,
á4á4' (
b
á4á4) *
,
á4á4* +
a
á4á4, -
)
á4á4- .
;
á4á4. /
}
à4à4 
return
ä4ä4 
new
ä4ä4 
Color32
ä4ä4 
(
ä4ä4 
$num
ä4ä4 "
,
ä4ä4" #
$num
ä4ä4$ '
,
ä4ä4' (
$num
ä4ä4) ,
,
ä4ä4, -
$num
ä4ä4. 1
)
ä4ä41 2
;
ä4ä42 3
}
ã4ã4 	
	protected
ï4ï4 
Color32
ï4ï4 
HexCharsToColor
ï4ï4 )
(
ï4ï4) *
char
ï4ï4* .
[
ï4ï4. /
]
ï4ï4/ 0
hexChars
ï4ï41 9
,
ï4ï49 :
int
ï4ï4; >

startIndex
ï4ï4? I
,
ï4ï4I J
int
ï4ï4K N
length
ï4ï4O U
)
ï4ï4U V
{
ñ4ñ4 	
if
ó4ó4 
(
ó4ó4 
length
ó4ó4 
==
ó4ó4 
$num
ó4ó4 
)
ó4ó4 
{
ò4ò4 
byte
ô4ô4 
r
ô4ô4 
=
ô4ô4 
(
ô4ô4 
byte
ô4ô4 
)
ô4ô4 
(
ô4ô4  
HexToInt
ô4ô4  (
(
ô4ô4( )
hexChars
ô4ô4) 1
[
ô4ô41 2

startIndex
ô4ô42 <
+
ô4ô4= >
$num
ô4ô4? @
]
ô4ô4@ A
)
ô4ô4A B
*
ô4ô4C D
$num
ô4ô4E G
+
ô4ô4H I
HexToInt
ô4ô4J R
(
ô4ô4R S
hexChars
ô4ô4S [
[
ô4ô4[ \

startIndex
ô4ô4\ f
+
ô4ô4g h
$num
ô4ô4i j
]
ô4ô4j k
)
ô4ô4k l
)
ô4ô4l m
;
ô4ô4m n
byte
ö4ö4 
g
ö4ö4 
=
ö4ö4 
(
ö4ö4 
byte
ö4ö4 
)
ö4ö4 
(
ö4ö4  
HexToInt
ö4ö4  (
(
ö4ö4( )
hexChars
ö4ö4) 1
[
ö4ö41 2

startIndex
ö4ö42 <
+
ö4ö4= >
$num
ö4ö4? @
]
ö4ö4@ A
)
ö4ö4A B
*
ö4ö4C D
$num
ö4ö4E G
+
ö4ö4H I
HexToInt
ö4ö4J R
(
ö4ö4R S
hexChars
ö4ö4S [
[
ö4ö4[ \

startIndex
ö4ö4\ f
+
ö4ö4g h
$num
ö4ö4i j
]
ö4ö4j k
)
ö4ö4k l
)
ö4ö4l m
;
ö4ö4m n
byte
õ4õ4 
b
õ4õ4 
=
õ4õ4 
(
õ4õ4 
byte
õ4õ4 
)
õ4õ4 
(
õ4õ4  
HexToInt
õ4õ4  (
(
õ4õ4( )
hexChars
õ4õ4) 1
[
õ4õ41 2

startIndex
õ4õ42 <
+
õ4õ4= >
$num
õ4õ4? @
]
õ4õ4@ A
)
õ4õ4A B
*
õ4õ4C D
$num
õ4õ4E G
+
õ4õ4H I
HexToInt
õ4õ4J R
(
õ4õ4R S
hexChars
õ4õ4S [
[
õ4õ4[ \

startIndex
õ4õ4\ f
+
õ4õ4g h
$num
õ4õ4i j
]
õ4õ4j k
)
õ4õ4k l
)
õ4õ4l m
;
õ4õ4m n
return
ù4ù4 
new
ù4ù4 
Color32
ù4ù4 "
(
ù4ù4" #
r
ù4ù4# $
,
ù4ù4$ %
g
ù4ù4& '
,
ù4ù4' (
b
ù4ù4) *
,
ù4ù4* +
$num
ù4ù4, /
)
ù4ù4/ 0
;
ù4ù40 1
}
û4û4 
else
ü4ü4 
if
ü4ü4 
(
ü4ü4 
length
ü4ü4 
==
ü4ü4 
$num
ü4ü4  
)
ü4ü4  !
{
†4†4 
byte
°4°4 
r
°4°4 
=
°4°4 
(
°4°4 
byte
°4°4 
)
°4°4 
(
°4°4  
HexToInt
°4°4  (
(
°4°4( )
hexChars
°4°4) 1
[
°4°41 2

startIndex
°4°42 <
+
°4°4= >
$num
°4°4? @
]
°4°4@ A
)
°4°4A B
*
°4°4C D
$num
°4°4E G
+
°4°4H I
HexToInt
°4°4J R
(
°4°4R S
hexChars
°4°4S [
[
°4°4[ \

startIndex
°4°4\ f
+
°4°4g h
$num
°4°4i j
]
°4°4j k
)
°4°4k l
)
°4°4l m
;
°4°4m n
byte
¢4¢4 
g
¢4¢4 
=
¢4¢4 
(
¢4¢4 
byte
¢4¢4 
)
¢4¢4 
(
¢4¢4  
HexToInt
¢4¢4  (
(
¢4¢4( )
hexChars
¢4¢4) 1
[
¢4¢41 2

startIndex
¢4¢42 <
+
¢4¢4= >
$num
¢4¢4? @
]
¢4¢4@ A
)
¢4¢4A B
*
¢4¢4C D
$num
¢4¢4E G
+
¢4¢4H I
HexToInt
¢4¢4J R
(
¢4¢4R S
hexChars
¢4¢4S [
[
¢4¢4[ \

startIndex
¢4¢4\ f
+
¢4¢4g h
$num
¢4¢4i j
]
¢4¢4j k
)
¢4¢4k l
)
¢4¢4l m
;
¢4¢4m n
byte
£4£4 
b
£4£4 
=
£4£4 
(
£4£4 
byte
£4£4 
)
£4£4 
(
£4£4  
HexToInt
£4£4  (
(
£4£4( )
hexChars
£4£4) 1
[
£4£41 2

startIndex
£4£42 <
+
£4£4= >
$num
£4£4? @
]
£4£4@ A
)
£4£4A B
*
£4£4C D
$num
£4£4E G
+
£4£4H I
HexToInt
£4£4J R
(
£4£4R S
hexChars
£4£4S [
[
£4£4[ \

startIndex
£4£4\ f
+
£4£4g h
$num
£4£4i j
]
£4£4j k
)
£4£4k l
)
£4£4l m
;
£4£4m n
byte
§4§4 
a
§4§4 
=
§4§4 
(
§4§4 
byte
§4§4 
)
§4§4 
(
§4§4  
HexToInt
§4§4  (
(
§4§4( )
hexChars
§4§4) 1
[
§4§41 2

startIndex
§4§42 <
+
§4§4= >
$num
§4§4? @
]
§4§4@ A
)
§4§4A B
*
§4§4C D
$num
§4§4E G
+
§4§4H I
HexToInt
§4§4J R
(
§4§4R S
hexChars
§4§4S [
[
§4§4[ \

startIndex
§4§4\ f
+
§4§4g h
$num
§4§4i j
]
§4§4j k
)
§4§4k l
)
§4§4l m
;
§4§4m n
return
¶4¶4 
new
¶4¶4 
Color32
¶4¶4 "
(
¶4¶4" #
r
¶4¶4# $
,
¶4¶4$ %
g
¶4¶4& '
,
¶4¶4' (
b
¶4¶4) *
,
¶4¶4* +
a
¶4¶4, -
)
¶4¶4- .
;
¶4¶4. /
}
ß4ß4 
return
©4©4 
s_colorWhite
©4©4 
;
©4©4  
}
™4™4 	
int
µ4µ4 $
GetAttributeParameters
µ4µ4 "
(
µ4µ4" #
char
µ4µ4# '
[
µ4µ4' (
]
µ4µ4( )
chars
µ4µ4* /
,
µ4µ4/ 0
int
µ4µ41 4

startIndex
µ4µ45 ?
,
µ4µ4? @
int
µ4µ4A D
length
µ4µ4E K
,
µ4µ4K L
ref
µ4µ4M P
float
µ4µ4Q V
[
µ4µ4V W
]
µ4µ4W X

parameters
µ4µ4Y c
)
µ4µ4c d
{
∂4∂4 	
int
∑4∑4 
endIndex
∑4∑4 
=
∑4∑4 

startIndex
∑4∑4 %
;
∑4∑4% &
int
∏4∏4 
attributeCount
∏4∏4 
=
∏4∏4  
$num
∏4∏4! "
;
∏4∏4" #
while
∫4∫4 
(
∫4∫4 
endIndex
∫4∫4 
<
∫4∫4 

startIndex
∫4∫4 (
+
∫4∫4) *
length
∫4∫4+ 1
)
∫4∫41 2
{
ª4ª4 

parameters
º4º4 
[
º4º4 
attributeCount
º4º4 )
]
º4º4) *
=
º4º4+ ,
ConvertToFloat
º4º4- ;
(
º4º4; <
chars
º4º4< A
,
º4º4A B

startIndex
º4º4C M
,
º4º4M N
length
º4º4O U
,
º4º4U V
out
º4º4W Z
endIndex
º4º4[ c
)
º4º4c d
;
º4º4d e
length
æ4æ4 
-=
æ4æ4 
(
æ4æ4 
endIndex
æ4æ4 #
-
æ4æ4$ %

startIndex
æ4æ4& 0
)
æ4æ40 1
+
æ4æ42 3
$num
æ4æ44 5
;
æ4æ45 6

startIndex
ø4ø4 
=
ø4ø4 
endIndex
ø4ø4 %
+
ø4ø4& '
$num
ø4ø4( )
;
ø4ø4) *
attributeCount
¡4¡4 
+=
¡4¡4 !
$num
¡4¡4" #
;
¡4¡4# $
}
¬4¬4 
return
ƒ4ƒ4 
attributeCount
ƒ4ƒ4 !
;
ƒ4ƒ4! "
}
≈4≈4 	
	protected
œ4œ4 
float
œ4œ4 
ConvertToFloat
œ4œ4 &
(
œ4œ4& '
char
œ4œ4' +
[
œ4œ4+ ,
]
œ4œ4, -
chars
œ4œ4. 3
,
œ4œ43 4
int
œ4œ45 8

startIndex
œ4œ49 C
,
œ4œ4C D
int
œ4œ4E H
length
œ4œ4I O
)
œ4œ4O P
{
–4–4 	
int
—4—4 
	lastIndex
—4—4 
;
—4—4 
return
”4”4 
ConvertToFloat
”4”4 !
(
”4”4! "
chars
”4”4" '
,
”4”4' (

startIndex
”4”4) 3
,
”4”43 4
length
”4”45 ;
,
”4”4; <
out
”4”4= @
	lastIndex
”4”4A J
)
”4”4J K
;
”4”4K L
}
‘4‘4 	
	protected
ﬂ4ﬂ4 
float
ﬂ4ﬂ4 
ConvertToFloat
ﬂ4ﬂ4 &
(
ﬂ4ﬂ4& '
char
ﬂ4ﬂ4' +
[
ﬂ4ﬂ4+ ,
]
ﬂ4ﬂ4, -
chars
ﬂ4ﬂ4. 3
,
ﬂ4ﬂ43 4
int
ﬂ4ﬂ45 8

startIndex
ﬂ4ﬂ49 C
,
ﬂ4ﬂ4C D
int
ﬂ4ﬂ4E H
length
ﬂ4ﬂ4I O
,
ﬂ4ﬂ4O P
out
ﬂ4ﬂ4Q T
int
ﬂ4ﬂ4U X
	lastIndex
ﬂ4ﬂ4Y b
)
ﬂ4ﬂ4b c
{
‡4‡4 	
if
·4·4 
(
·4·4 

startIndex
·4·4 
==
·4·4 
$num
·4·4 
)
·4·4  
{
‚4‚4 
	lastIndex
„4„4 
=
„4„4 
$num
„4„4 
;
„4„4 
return
‰4‰4 
Int16
‰4‰4 
.
‰4‰4 
MinValue
‰4‰4 %
;
‰4‰4% &
}
Â4Â4 
int
Á4Á4 
endIndex
Á4Á4 
=
Á4Á4 

startIndex
Á4Á4 %
+
Á4Á4& '
length
Á4Á4( .
;
Á4Á4. /
bool
È4È4 
isIntegerValue
È4È4 
=
È4È4  !
true
È4È4" &
;
È4È4& '
float
Í4Í4 $
decimalPointMultiplier
Í4Í4 (
=
Í4Í4) *
$num
Í4Í4+ ,
;
Í4Í4, -
int
Ì4Ì4 !
valueSignMultiplier
Ì4Ì4 #
=
Ì4Ì4$ %
$num
Ì4Ì4& '
;
Ì4Ì4' (
if
Ó4Ó4 
(
Ó4Ó4 
chars
Ó4Ó4 
[
Ó4Ó4 

startIndex
Ó4Ó4  
]
Ó4Ó4  !
==
Ó4Ó4" $
$char
Ó4Ó4% (
)
Ó4Ó4( )
{
Ô4Ô4 !
valueSignMultiplier
44 #
=
44$ %
$num
44& '
;
44' (

startIndex
Ò4Ò4 
+=
Ò4Ò4 
$num
Ò4Ò4 
;
Ò4Ò4  
}
Ú4Ú4 
else
Û4Û4 
if
Û4Û4 
(
Û4Û4 
chars
Û4Û4 
[
Û4Û4 

startIndex
Û4Û4 %
]
Û4Û4% &
==
Û4Û4' )
$char
Û4Û4* -
)
Û4Û4- .
{
Ù4Ù4 !
valueSignMultiplier
ı4ı4 #
=
ı4ı4$ %
-
ı4ı4& '
$num
ı4ı4' (
;
ı4ı4( )

startIndex
ˆ4ˆ4 
+=
ˆ4ˆ4 
$num
ˆ4ˆ4 
;
ˆ4ˆ4  
}
˜4˜4 
float
˘4˘4 
value
˘4˘4 
=
˘4˘4 
$num
˘4˘4 
;
˘4˘4 
for
˚4˚4 
(
˚4˚4 
int
˚4˚4 
i
˚4˚4 
=
˚4˚4 

startIndex
˚4˚4 #
;
˚4˚4# $
i
˚4˚4% &
<
˚4˚4' (
endIndex
˚4˚4) 1
;
˚4˚41 2
i
˚4˚43 4
++
˚4˚44 6
)
˚4˚46 7
{
¸4¸4 
uint
˝4˝4 
c
˝4˝4 
=
˝4˝4 
chars
˝4˝4 
[
˝4˝4 
i
˝4˝4  
]
˝4˝4  !
;
˝4˝4! "
if
ˇ4ˇ4 
(
ˇ4ˇ4 
c
ˇ4ˇ4 
>=
ˇ4ˇ4 
$char
ˇ4ˇ4 
&&
ˇ4ˇ4 
c
ˇ4ˇ4  !
<=
ˇ4ˇ4" $
$char
ˇ4ˇ4% (
||
ˇ4ˇ4) +
c
ˇ4ˇ4, -
==
ˇ4ˇ4. 0
$char
ˇ4ˇ41 4
)
ˇ4ˇ44 5
{
Ä5Ä5 
if
Å5Å5 
(
Å5Å5 
c
Å5Å5 
==
Å5Å5 
$char
Å5Å5  
)
Å5Å5  !
{
Ç5Ç5 
isIntegerValue
É5É5 &
=
É5É5' (
false
É5É5) .
;
É5É5. /$
decimalPointMultiplier
Ñ5Ñ5 .
=
Ñ5Ñ5/ 0
$num
Ñ5Ñ51 5
;
Ñ5Ñ55 6
continue
Ö5Ö5  
;
Ö5Ö5  !
}
Ü5Ü5 
if
â5â5 
(
â5â5 
isIntegerValue
â5â5 &
)
â5â5& '
value
ä5ä5 
=
ä5ä5 
value
ä5ä5  %
*
ä5ä5& '
$num
ä5ä5( *
+
ä5ä5+ ,
(
ä5ä5- .
c
ä5ä5. /
-
ä5ä50 1
$num
ä5ä52 4
)
ä5ä54 5
*
ä5ä56 7!
valueSignMultiplier
ä5ä58 K
;
ä5ä5K L
else
ã5ã5 
{
å5å5 
value
ç5ç5 
=
ç5ç5 
value
ç5ç5  %
+
ç5ç5& '
(
ç5ç5( )
c
ç5ç5) *
-
ç5ç5+ ,
$num
ç5ç5- /
)
ç5ç5/ 0
*
ç5ç51 2$
decimalPointMultiplier
ç5ç53 I
*
ç5ç5J K!
valueSignMultiplier
ç5ç5L _
;
ç5ç5_ `$
decimalPointMultiplier
é5é5 .
*=
é5é5/ 1
$num
é5é52 6
;
é5é56 7
}
è5è5 
continue
ë5ë5 
;
ë5ë5 
}
í5í5 
else
ì5ì5 
if
ì5ì5 
(
ì5ì5 
c
ì5ì5 
==
ì5ì5 
$char
ì5ì5 !
)
ì5ì5! "
{
î5î5 
if
ï5ï5 
(
ï5ï5 
i
ï5ï5 
+
ï5ï5 
$num
ï5ï5 
<
ï5ï5 
endIndex
ï5ï5  (
&&
ï5ï5) +
chars
ï5ï5, 1
[
ï5ï51 2
i
ï5ï52 3
+
ï5ï54 5
$num
ï5ï56 7
]
ï5ï57 8
==
ï5ï59 ;
$char
ï5ï5< ?
)
ï5ï5? @
	lastIndex
ñ5ñ5 !
=
ñ5ñ5" #
i
ñ5ñ5$ %
+
ñ5ñ5& '
$num
ñ5ñ5( )
;
ñ5ñ5) *
else
ó5ó5 
	lastIndex
ò5ò5 !
=
ò5ò5" #
i
ò5ò5$ %
;
ò5ò5% &
if
õ5õ5 
(
õ5õ5 
value
õ5õ5 
>
õ5õ5 
$num
õ5õ5  %
)
õ5õ5% &
return
ú5ú5 
Int16
ú5ú5 $
.
ú5ú5$ %
MinValue
ú5ú5% -
;
ú5ú5- .
return
û5û5 
value
û5û5  
;
û5û5  !
}
ü5ü5 
}
†5†5 
	lastIndex
¢5¢5 
=
¢5¢5 
endIndex
¢5¢5  
;
¢5¢5  !
if
•5•5 
(
•5•5 
value
•5•5 
>
•5•5 
$num
•5•5 
)
•5•5 
return
¶5¶5 
Int16
¶5¶5 
.
¶5¶5 
MinValue
¶5¶5 %
;
¶5¶5% &
return
®5®5 
value
®5®5 
;
®5®5 
}
©5©5 	
internal
≥5≥5 
bool
≥5≥5 
ValidateHtmlTag
≥5≥5 %
(
≥5≥5% &
UnicodeChar
≥5≥5& 1
[
≥5≥51 2
]
≥5≥52 3
chars
≥5≥54 9
,
≥5≥59 :
int
≥5≥5; >

startIndex
≥5≥5? I
,
≥5≥5I J
out
≥5≥5K N
int
≥5≥5O R
endIndex
≥5≥5S [
)
≥5≥5[ \
{
¥5¥5 	
int
µ5µ5 
tagCharCount
µ5µ5 
=
µ5µ5 
$num
µ5µ5  
;
µ5µ5  !
byte
∂5∂5 
attributeFlag
∂5∂5 
=
∂5∂5  
$num
∂5∂5! "
;
∂5∂5" #
int
∏5∏5 
attributeIndex
∏5∏5 
=
∏5∏5  
$num
∏5∏5! "
;
∏5∏5" #
m_xmlAttribute
π5π5 
[
π5π5 
attributeIndex
π5π5 )
]
π5π5) *
.
π5π5* +
nameHashCode
π5π5+ 7
=
π5π58 9
$num
π5π5: ;
;
π5π5; <
m_xmlAttribute
∫5∫5 
[
∫5∫5 
attributeIndex
∫5∫5 )
]
∫5∫5) *
.
∫5∫5* +
valueHashCode
∫5∫5+ 8
=
∫5∫59 :
$num
∫5∫5; <
;
∫5∫5< =
m_xmlAttribute
ª5ª5 
[
ª5ª5 
attributeIndex
ª5ª5 )
]
ª5ª5) *
.
ª5ª5* +
valueStartIndex
ª5ª5+ :
=
ª5ª5; <
$num
ª5ª5= >
;
ª5ª5> ?
m_xmlAttribute
º5º5 
[
º5º5 
attributeIndex
º5º5 )
]
º5º5) *
.
º5º5* +
valueLength
º5º5+ 6
=
º5º57 8
$num
º5º59 :
;
º5º5: ;
TagValueType
Ω5Ω5 
tagValueType
Ω5Ω5 %
=
Ω5Ω5& '
m_xmlAttribute
Ω5Ω5( 6
[
Ω5Ω56 7
attributeIndex
Ω5Ω57 E
]
Ω5Ω5E F
.
Ω5Ω5F G
	valueType
Ω5Ω5G P
=
Ω5Ω5Q R
TagValueType
Ω5Ω5S _
.
Ω5Ω5_ `
None
Ω5Ω5` d
;
Ω5Ω5d e
TagUnitType
æ5æ5 
tagUnitType
æ5æ5 #
=
æ5æ5$ %
m_xmlAttribute
æ5æ5& 4
[
æ5æ54 5
attributeIndex
æ5æ55 C
]
æ5æ5C D
.
æ5æ5D E
unitType
æ5æ5E M
=
æ5æ5N O
TagUnitType
æ5æ5P [
.
æ5æ5[ \
Pixels
æ5æ5\ b
;
æ5æ5b c
m_xmlAttribute
¡5¡5 
[
¡5¡5 
$num
¡5¡5 
]
¡5¡5 
.
¡5¡5 
nameHashCode
¡5¡5 *
=
¡5¡5+ ,
$num
¡5¡5- .
;
¡5¡5. /
m_xmlAttribute
¬5¬5 
[
¬5¬5 
$num
¬5¬5 
]
¬5¬5 
.
¬5¬5 
nameHashCode
¬5¬5 *
=
¬5¬5+ ,
$num
¬5¬5- .
;
¬5¬5. /
m_xmlAttribute
√5√5 
[
√5√5 
$num
√5√5 
]
√5√5 
.
√5√5 
nameHashCode
√5√5 *
=
√5√5+ ,
$num
√5√5- .
;
√5√5. /
m_xmlAttribute
ƒ5ƒ5 
[
ƒ5ƒ5 
$num
ƒ5ƒ5 
]
ƒ5ƒ5 
.
ƒ5ƒ5 
nameHashCode
ƒ5ƒ5 *
=
ƒ5ƒ5+ ,
$num
ƒ5ƒ5- .
;
ƒ5ƒ5. /
endIndex
∆5∆5 
=
∆5∆5 

startIndex
∆5∆5 !
;
∆5∆5! "
bool
«5«5 
isTagSet
«5«5 
=
«5«5 
false
«5«5 !
;
«5«5! "
bool
»5»5 
isValidHtmlTag
»5»5 
=
»5»5  !
false
»5»5" '
;
»5»5' (
for
 5 5 
(
 5 5 
int
 5 5 
i
 5 5 
=
 5 5 

startIndex
 5 5 #
;
 5 5# $
i
 5 5% &
<
 5 5' (
chars
 5 5) .
.
 5 5. /
Length
 5 5/ 5
&&
 5 56 8
chars
 5 59 >
[
 5 5> ?
i
 5 5? @
]
 5 5@ A
.
 5 5A B
unicode
 5 5B I
!=
 5 5J L
$num
 5 5M N
&&
 5 5O Q
tagCharCount
 5 5R ^
<
 5 5_ `
	m_htmlTag
 5 5a j
.
 5 5j k
Length
 5 5k q
&&
 5 5r t
chars
 5 5u z
[
 5 5z {
i
 5 5{ |
]
 5 5| }
.
 5 5} ~
unicode 5 5~ Ö
!= 5 5Ü à
$char 5 5â å
; 5 5å ç
i 5 5é è
++ 5 5è ë
) 5 5ë í
{
À5À5 
int
Ã5Ã5 
unicode
Ã5Ã5 
=
Ã5Ã5 
chars
Ã5Ã5 #
[
Ã5Ã5# $
i
Ã5Ã5$ %
]
Ã5Ã5% &
.
Ã5Ã5& '
unicode
Ã5Ã5' .
;
Ã5Ã5. /
if
Œ5Œ5 
(
Œ5Œ5 
unicode
Œ5Œ5 
==
Œ5Œ5 
$char
Œ5Œ5 "
)
Œ5Œ5" #
{
œ5œ5 
isValidHtmlTag
–5–5 "
=
–5–5# $
true
–5–5% )
;
–5–5) *
endIndex
—5—5 
=
—5—5 
i
—5—5  
;
—5—5  !
	m_htmlTag
“5“5 
[
“5“5 
tagCharCount
“5“5 *
]
“5“5* +
=
“5“5, -
(
“5“5. /
char
“5“5/ 3
)
“5“53 4
$num
“5“54 5
;
“5“55 6
break
”5”5 
;
”5”5 
}
‘5‘5 
	m_htmlTag
÷5÷5 
[
÷5÷5 
tagCharCount
÷5÷5 &
]
÷5÷5& '
=
÷5÷5( )
(
÷5÷5* +
char
÷5÷5+ /
)
÷5÷5/ 0
unicode
÷5÷50 7
;
÷5÷57 8
tagCharCount
◊5◊5 
+=
◊5◊5 
$num
◊5◊5  !
;
◊5◊5! "
if
Ÿ5Ÿ5 
(
Ÿ5Ÿ5 
attributeFlag
Ÿ5Ÿ5 !
==
Ÿ5Ÿ5" $
$num
Ÿ5Ÿ5% &
)
Ÿ5Ÿ5& '
{
⁄5⁄5 
if
€5€5 
(
€5€5 
tagValueType
€5€5 $
==
€5€5% '
TagValueType
€5€5( 4
.
€5€54 5
None
€5€55 9
)
€5€59 :
{
‹5‹5 
if
ﬁ5ﬁ5 
(
ﬁ5ﬁ5 
unicode
ﬁ5ﬁ5 #
==
ﬁ5ﬁ5$ &
$char
ﬁ5ﬁ5' *
||
ﬁ5ﬁ5+ -
unicode
ﬁ5ﬁ5. 5
==
ﬁ5ﬁ56 8
$char
ﬁ5ﬁ59 <
||
ﬁ5ﬁ5= ?
unicode
ﬁ5ﬁ5@ G
==
ﬁ5ﬁ5H J
$char
ﬁ5ﬁ5K N
||
ﬁ5ﬁ5O Q
(
ﬁ5ﬁ5R S
unicode
ﬁ5ﬁ5S Z
>=
ﬁ5ﬁ5[ ]
$char
ﬁ5ﬁ5^ a
&&
ﬁ5ﬁ5b d
unicode
ﬁ5ﬁ5e l
<=
ﬁ5ﬁ5m o
$char
ﬁ5ﬁ5p s
)
ﬁ5ﬁ5s t
)
ﬁ5ﬁ5t u
{
ﬂ5ﬂ5 
tagUnitType
‡5‡5 '
=
‡5‡5( )
TagUnitType
‡5‡5* 5
.
‡5‡55 6
Pixels
‡5‡56 <
;
‡5‡5< =
tagValueType
·5·5 (
=
·5·5) *
m_xmlAttribute
·5·5+ 9
[
·5·59 :
attributeIndex
·5·5: H
]
·5·5H I
.
·5·5I J
	valueType
·5·5J S
=
·5·5T U
TagValueType
·5·5V b
.
·5·5b c
NumericalValue
·5·5c q
;
·5·5q r
m_xmlAttribute
‚5‚5 *
[
‚5‚5* +
attributeIndex
‚5‚5+ 9
]
‚5‚59 :
.
‚5‚5: ;
valueStartIndex
‚5‚5; J
=
‚5‚5K L
tagCharCount
‚5‚5M Y
-
‚5‚5Z [
$num
‚5‚5\ ]
;
‚5‚5] ^
m_xmlAttribute
„5„5 *
[
„5„5* +
attributeIndex
„5„5+ 9
]
„5„59 :
.
„5„5: ;
valueLength
„5„5; F
+=
„5„5G I
$num
„5„5J K
;
„5„5K L
}
‰5‰5 
else
Â5Â5 
if
Â5Â5 
(
Â5Â5  !
unicode
Â5Â5! (
==
Â5Â5) +
$char
Â5Â5, /
)
Â5Â5/ 0
{
Ê5Ê5 
tagUnitType
Á5Á5 '
=
Á5Á5( )
TagUnitType
Á5Á5* 5
.
Á5Á55 6
Pixels
Á5Á56 <
;
Á5Á5< =
tagValueType
Ë5Ë5 (
=
Ë5Ë5) *
m_xmlAttribute
Ë5Ë5+ 9
[
Ë5Ë59 :
attributeIndex
Ë5Ë5: H
]
Ë5Ë5H I
.
Ë5Ë5I J
	valueType
Ë5Ë5J S
=
Ë5Ë5T U
TagValueType
Ë5Ë5V b
.
Ë5Ë5b c

ColorValue
Ë5Ë5c m
;
Ë5Ë5m n
m_xmlAttribute
È5È5 *
[
È5È5* +
attributeIndex
È5È5+ 9
]
È5È59 :
.
È5È5: ;
valueStartIndex
È5È5; J
=
È5È5K L
tagCharCount
È5È5M Y
-
È5È5Z [
$num
È5È5\ ]
;
È5È5] ^
m_xmlAttribute
Í5Í5 *
[
Í5Í5* +
attributeIndex
Í5Í5+ 9
]
Í5Í59 :
.
Í5Í5: ;
valueLength
Í5Í5; F
+=
Í5Í5G I
$num
Í5Í5J K
;
Í5Í5K L
}
Î5Î5 
else
Ï5Ï5 
if
Ï5Ï5 
(
Ï5Ï5  !
unicode
Ï5Ï5! (
==
Ï5Ï5) +
$char
Ï5Ï5, /
)
Ï5Ï5/ 0
{
Ì5Ì5 
tagUnitType
Ó5Ó5 '
=
Ó5Ó5( )
TagUnitType
Ó5Ó5* 5
.
Ó5Ó55 6
Pixels
Ó5Ó56 <
;
Ó5Ó5< =
tagValueType
Ô5Ô5 (
=
Ô5Ô5) *
m_xmlAttribute
Ô5Ô5+ 9
[
Ô5Ô59 :
attributeIndex
Ô5Ô5: H
]
Ô5Ô5H I
.
Ô5Ô5I J
	valueType
Ô5Ô5J S
=
Ô5Ô5T U
TagValueType
Ô5Ô5V b
.
Ô5Ô5b c
StringValue
Ô5Ô5c n
;
Ô5Ô5n o
m_xmlAttribute
55 *
[
55* +
attributeIndex
55+ 9
]
559 :
.
55: ;
valueStartIndex
55; J
=
55K L
tagCharCount
55M Y
;
55Y Z
}
Ò5Ò5 
else
Ú5Ú5 
{
Û5Û5 
tagUnitType
Ù5Ù5 '
=
Ù5Ù5( )
TagUnitType
Ù5Ù5* 5
.
Ù5Ù55 6
Pixels
Ù5Ù56 <
;
Ù5Ù5< =
tagValueType
ı5ı5 (
=
ı5ı5) *
m_xmlAttribute
ı5ı5+ 9
[
ı5ı59 :
attributeIndex
ı5ı5: H
]
ı5ı5H I
.
ı5ı5I J
	valueType
ı5ı5J S
=
ı5ı5T U
TagValueType
ı5ı5V b
.
ı5ı5b c
StringValue
ı5ı5c n
;
ı5ı5n o
m_xmlAttribute
ˆ5ˆ5 *
[
ˆ5ˆ5* +
attributeIndex
ˆ5ˆ5+ 9
]
ˆ5ˆ59 :
.
ˆ5ˆ5: ;
valueStartIndex
ˆ5ˆ5; J
=
ˆ5ˆ5K L
tagCharCount
ˆ5ˆ5M Y
-
ˆ5ˆ5Z [
$num
ˆ5ˆ5\ ]
;
ˆ5ˆ5] ^
m_xmlAttribute
˜5˜5 *
[
˜5˜5* +
attributeIndex
˜5˜5+ 9
]
˜5˜59 :
.
˜5˜5: ;
valueHashCode
˜5˜5; H
=
˜5˜5I J
(
˜5˜5K L
m_xmlAttribute
˜5˜5L Z
[
˜5˜5Z [
attributeIndex
˜5˜5[ i
]
˜5˜5i j
.
˜5˜5j k
valueHashCode
˜5˜5k x
<<
˜5˜5y {
$num
˜5˜5| }
)
˜5˜5} ~
+˜5˜5 Ä
m_xmlAttribute˜5˜5Å è
[˜5˜5è ê
attributeIndex˜5˜5ê û
]˜5˜5û ü
.˜5˜5ü †
valueHashCode˜5˜5† ≠
^˜5˜5Æ Ø
unicode˜5˜5∞ ∑
;˜5˜5∑ ∏
m_xmlAttribute
¯5¯5 *
[
¯5¯5* +
attributeIndex
¯5¯5+ 9
]
¯5¯59 :
.
¯5¯5: ;
valueLength
¯5¯5; F
+=
¯5¯5G I
$num
¯5¯5J K
;
¯5¯5K L
}
˘5˘5 
}
˙5˙5 
else
˚5˚5 
{
¸5¸5 
if
˝5˝5 
(
˝5˝5 
tagValueType
˝5˝5 (
==
˝5˝5) +
TagValueType
˝5˝5, 8
.
˝5˝58 9
NumericalValue
˝5˝59 G
)
˝5˝5G H
{
˛5˛5 
if
Ä6Ä6 
(
Ä6Ä6  
unicode
Ä6Ä6  '
==
Ä6Ä6( *
$char
Ä6Ä6+ .
||
Ä6Ä6/ 1
unicode
Ä6Ä62 9
==
Ä6Ä6: <
$char
Ä6Ä6= @
||
Ä6Ä6A C
unicode
Ä6Ä6D K
==
Ä6Ä6L N
$char
Ä6Ä6O R
||
Ä6Ä6S U
unicode
Ä6Ä6V ]
==
Ä6Ä6^ `
$char
Ä6Ä6a d
)
Ä6Ä6d e
{
Å6Å6 
attributeFlag
Ç6Ç6  -
=
Ç6Ç6. /
$num
Ç6Ç60 1
;
Ç6Ç61 2
tagValueType
É6É6  ,
=
É6É6- .
TagValueType
É6É6/ ;
.
É6É6; <
None
É6É6< @
;
É6É6@ A
switch
Ö6Ö6  &
(
Ö6Ö6' (
unicode
Ö6Ö6( /
)
Ö6Ö6/ 0
{
Ü6Ü6  !
case
á6á6$ (
$char
á6á6) ,
:
á6á6, -
m_xmlAttribute
à6à6( 6
[
à6à66 7
attributeIndex
à6à67 E
]
à6à6E F
.
à6à6F G
unitType
à6à6G O
=
à6à6P Q
tagUnitType
à6à6R ]
=
à6à6^ _
TagUnitType
à6à6` k
.
à6à6k l
	FontUnits
à6à6l u
;
à6à6u v
break
â6â6( -
;
â6â6- .
case
ä6ä6$ (
$char
ä6ä6) ,
:
ä6ä6, -
m_xmlAttribute
ã6ã6( 6
[
ã6ã66 7
attributeIndex
ã6ã67 E
]
ã6ã6E F
.
ã6ã6F G
unitType
ã6ã6G O
=
ã6ã6P Q
tagUnitType
ã6ã6R ]
=
ã6ã6^ _
TagUnitType
ã6ã6` k
.
ã6ã6k l

Percentage
ã6ã6l v
;
ã6ã6v w
break
å6å6( -
;
å6å6- .
default
ç6ç6$ +
:
ç6ç6+ ,
m_xmlAttribute
é6é6( 6
[
é6é66 7
attributeIndex
é6é67 E
]
é6é6E F
.
é6é6F G
unitType
é6é6G O
=
é6é6P Q
tagUnitType
é6é6R ]
=
é6é6^ _
TagUnitType
é6é6` k
.
é6é6k l
Pixels
é6é6l r
;
é6é6r s
break
è6è6( -
;
è6è6- .
}
ê6ê6  !
attributeIndex
í6í6  .
+=
í6í6/ 1
$num
í6í62 3
;
í6í63 4
m_xmlAttribute
ì6ì6  .
[
ì6ì6. /
attributeIndex
ì6ì6/ =
]
ì6ì6= >
.
ì6ì6> ?
nameHashCode
ì6ì6? K
=
ì6ì6L M
$num
ì6ì6N O
;
ì6ì6O P
m_xmlAttribute
î6î6  .
[
î6î6. /
attributeIndex
î6î6/ =
]
î6î6= >
.
î6î6> ?
valueHashCode
î6î6? L
=
î6î6M N
$num
î6î6O P
;
î6î6P Q
m_xmlAttribute
ï6ï6  .
[
ï6ï6. /
attributeIndex
ï6ï6/ =
]
ï6ï6= >
.
ï6ï6> ?
	valueType
ï6ï6? H
=
ï6ï6I J
TagValueType
ï6ï6K W
.
ï6ï6W X
None
ï6ï6X \
;
ï6ï6\ ]
m_xmlAttribute
ñ6ñ6  .
[
ñ6ñ6. /
attributeIndex
ñ6ñ6/ =
]
ñ6ñ6= >
.
ñ6ñ6> ?
unitType
ñ6ñ6? G
=
ñ6ñ6H I
TagUnitType
ñ6ñ6J U
.
ñ6ñ6U V
Pixels
ñ6ñ6V \
;
ñ6ñ6\ ]
m_xmlAttribute
ó6ó6  .
[
ó6ó6. /
attributeIndex
ó6ó6/ =
]
ó6ó6= >
.
ó6ó6> ?
valueStartIndex
ó6ó6? N
=
ó6ó6O P
$num
ó6ó6Q R
;
ó6ó6R S
m_xmlAttribute
ò6ò6  .
[
ò6ò6. /
attributeIndex
ò6ò6/ =
]
ò6ò6= >
.
ò6ò6> ?
valueLength
ò6ò6? J
=
ò6ò6K L
$num
ò6ò6M N
;
ò6ò6N O
}
ö6ö6 
else
õ6õ6  
if
õ6õ6! #
(
õ6õ6$ %
attributeFlag
õ6õ6% 2
!=
õ6õ63 5
$num
õ6õ66 7
)
õ6õ67 8
{
ú6ú6 
m_xmlAttribute
ù6ù6  .
[
ù6ù6. /
attributeIndex
ù6ù6/ =
]
ù6ù6= >
.
ù6ù6> ?
valueLength
ù6ù6? J
+=
ù6ù6K M
$num
ù6ù6N O
;
ù6ù6O P
}
û6û6 
}
ü6ü6 
else
†6†6 
if
†6†6 
(
†6†6  !
tagValueType
†6†6! -
==
†6†6. 0
TagValueType
†6†61 =
.
†6†6= >

ColorValue
†6†6> H
)
†6†6H I
{
°6°6 
if
¢6¢6 
(
¢6¢6  
unicode
¢6¢6  '
!=
¢6¢6( *
$char
¢6¢6+ .
)
¢6¢6. /
{
£6£6 
m_xmlAttribute
§6§6  .
[
§6§6. /
attributeIndex
§6§6/ =
]
§6§6= >
.
§6§6> ?
valueLength
§6§6? J
+=
§6§6K M
$num
§6§6N O
;
§6§6O P
}
•6•6 
else
¶6¶6  
{
ß6ß6 
attributeFlag
®6®6  -
=
®6®6. /
$num
®6®60 1
;
®6®61 2
tagValueType
©6©6  ,
=
©6©6- .
TagValueType
©6©6/ ;
.
©6©6; <
None
©6©6< @
;
©6©6@ A
tagUnitType
™6™6  +
=
™6™6, -
TagUnitType
™6™6. 9
.
™6™69 :
Pixels
™6™6: @
;
™6™6@ A
attributeIndex
´6´6  .
+=
´6´6/ 1
$num
´6´62 3
;
´6´63 4
m_xmlAttribute
¨6¨6  .
[
¨6¨6. /
attributeIndex
¨6¨6/ =
]
¨6¨6= >
.
¨6¨6> ?
nameHashCode
¨6¨6? K
=
¨6¨6L M
$num
¨6¨6N O
;
¨6¨6O P
m_xmlAttribute
≠6≠6  .
[
≠6≠6. /
attributeIndex
≠6≠6/ =
]
≠6≠6= >
.
≠6≠6> ?
	valueType
≠6≠6? H
=
≠6≠6I J
TagValueType
≠6≠6K W
.
≠6≠6W X
None
≠6≠6X \
;
≠6≠6\ ]
m_xmlAttribute
Æ6Æ6  .
[
Æ6Æ6. /
attributeIndex
Æ6Æ6/ =
]
Æ6Æ6= >
.
Æ6Æ6> ?
unitType
Æ6Æ6? G
=
Æ6Æ6H I
TagUnitType
Æ6Æ6J U
.
Æ6Æ6U V
Pixels
Æ6Æ6V \
;
Æ6Æ6\ ]
m_xmlAttribute
Ø6Ø6  .
[
Ø6Ø6. /
attributeIndex
Ø6Ø6/ =
]
Ø6Ø6= >
.
Ø6Ø6> ?
valueHashCode
Ø6Ø6? L
=
Ø6Ø6M N
$num
Ø6Ø6O P
;
Ø6Ø6P Q
m_xmlAttribute
∞6∞6  .
[
∞6∞6. /
attributeIndex
∞6∞6/ =
]
∞6∞6= >
.
∞6∞6> ?
valueStartIndex
∞6∞6? N
=
∞6∞6O P
$num
∞6∞6Q R
;
∞6∞6R S
m_xmlAttribute
±6±6  .
[
±6±6. /
attributeIndex
±6±6/ =
]
±6±6= >
.
±6±6> ?
valueLength
±6±6? J
=
±6±6K L
$num
±6±6M N
;
±6±6N O
}
≤6≤6 
}
≥6≥6 
else
¥6¥6 
if
¥6¥6 
(
¥6¥6  !
tagValueType
¥6¥6! -
==
¥6¥6. 0
TagValueType
¥6¥61 =
.
¥6¥6= >
StringValue
¥6¥6> I
)
¥6¥6I J
{
µ6µ6 
if
∑6∑6 
(
∑6∑6  
unicode
∑6∑6  '
!=
∑6∑6( *
$char
∑6∑6+ .
)
∑6∑6. /
{
∏6∏6 
m_xmlAttribute
π6π6  .
[
π6π6. /
attributeIndex
π6π6/ =
]
π6π6= >
.
π6π6> ?
valueHashCode
π6π6? L
=
π6π6M N
(
π6π6O P
m_xmlAttribute
π6π6P ^
[
π6π6^ _
attributeIndex
π6π6_ m
]
π6π6m n
.
π6π6n o
valueHashCode
π6π6o |
<<
π6π6} 
$numπ6π6Ä Å
)π6π6Å Ç
+π6π6É Ñ
m_xmlAttributeπ6π6Ö ì
[π6π6ì î
attributeIndexπ6π6î ¢
]π6π6¢ £
.π6π6£ §
valueHashCodeπ6π6§ ±
^π6π6≤ ≥
unicodeπ6π6¥ ª
;π6π6ª º
m_xmlAttribute
∫6∫6  .
[
∫6∫6. /
attributeIndex
∫6∫6/ =
]
∫6∫6= >
.
∫6∫6> ?
valueLength
∫6∫6? J
+=
∫6∫6K M
$num
∫6∫6N O
;
∫6∫6O P
}
ª6ª6 
else
º6º6  
{
Ω6Ω6 
attributeFlag
æ6æ6  -
=
æ6æ6. /
$num
æ6æ60 1
;
æ6æ61 2
tagValueType
ø6ø6  ,
=
ø6ø6- .
TagValueType
ø6ø6/ ;
.
ø6ø6; <
None
ø6ø6< @
;
ø6ø6@ A
tagUnitType
¿6¿6  +
=
¿6¿6, -
TagUnitType
¿6¿6. 9
.
¿6¿69 :
Pixels
¿6¿6: @
;
¿6¿6@ A
attributeIndex
¡6¡6  .
+=
¡6¡6/ 1
$num
¡6¡62 3
;
¡6¡63 4
m_xmlAttribute
¬6¬6  .
[
¬6¬6. /
attributeIndex
¬6¬6/ =
]
¬6¬6= >
.
¬6¬6> ?
nameHashCode
¬6¬6? K
=
¬6¬6L M
$num
¬6¬6N O
;
¬6¬6O P
m_xmlAttribute
√6√6  .
[
√6√6. /
attributeIndex
√6√6/ =
]
√6√6= >
.
√6√6> ?
	valueType
√6√6? H
=
√6√6I J
TagValueType
√6√6K W
.
√6√6W X
None
√6√6X \
;
√6√6\ ]
m_xmlAttribute
ƒ6ƒ6  .
[
ƒ6ƒ6. /
attributeIndex
ƒ6ƒ6/ =
]
ƒ6ƒ6= >
.
ƒ6ƒ6> ?
unitType
ƒ6ƒ6? G
=
ƒ6ƒ6H I
TagUnitType
ƒ6ƒ6J U
.
ƒ6ƒ6U V
Pixels
ƒ6ƒ6V \
;
ƒ6ƒ6\ ]
m_xmlAttribute
≈6≈6  .
[
≈6≈6. /
attributeIndex
≈6≈6/ =
]
≈6≈6= >
.
≈6≈6> ?
valueHashCode
≈6≈6? L
=
≈6≈6M N
$num
≈6≈6O P
;
≈6≈6P Q
m_xmlAttribute
∆6∆6  .
[
∆6∆6. /
attributeIndex
∆6∆6/ =
]
∆6∆6= >
.
∆6∆6> ?
valueStartIndex
∆6∆6? N
=
∆6∆6O P
$num
∆6∆6Q R
;
∆6∆6R S
m_xmlAttribute
«6«6  .
[
«6«6. /
attributeIndex
«6«6/ =
]
«6«6= >
.
«6«6> ?
valueLength
«6«6? J
=
«6«6K L
$num
«6«6M N
;
«6«6N O
}
»6»6 
}
…6…6 
}
 6 6 
}
À6À6 
if
Œ6Œ6 
(
Œ6Œ6 
unicode
Œ6Œ6 
==
Œ6Œ6 
$char
Œ6Œ6 "
)
Œ6Œ6" #
attributeFlag
œ6œ6 !
=
œ6œ6" #
$num
œ6œ6$ %
;
œ6œ6% &
if
“6“6 
(
“6“6 
attributeFlag
“6“6 !
==
“6“6" $
$num
“6“6% &
&&
“6“6' )
unicode
“6“6* 1
==
“6“62 4
$char
“6“65 8
)
“6“68 9
{
”6”6 
if
‘6‘6 
(
‘6‘6 
isTagSet
‘6‘6  
)
‘6‘6  !
return
‘6‘6" (
false
‘6‘6) .
;
‘6‘6. /
isTagSet
÷6÷6 
=
÷6÷6 
true
÷6÷6 #
;
÷6÷6# $
attributeFlag
◊6◊6 !
=
◊6◊6" #
$num
◊6◊6$ %
;
◊6◊6% &
tagValueType
Ÿ6Ÿ6  
=
Ÿ6Ÿ6! "
TagValueType
Ÿ6Ÿ6# /
.
Ÿ6Ÿ6/ 0
None
Ÿ6Ÿ60 4
;
Ÿ6Ÿ64 5
tagUnitType
⁄6⁄6 
=
⁄6⁄6  !
TagUnitType
⁄6⁄6" -
.
⁄6⁄6- .
Pixels
⁄6⁄6. 4
;
⁄6⁄64 5
attributeIndex
€6€6 "
+=
€6€6# %
$num
€6€6& '
;
€6€6' (
m_xmlAttribute
‹6‹6 "
[
‹6‹6" #
attributeIndex
‹6‹6# 1
]
‹6‹61 2
.
‹6‹62 3
nameHashCode
‹6‹63 ?
=
‹6‹6@ A
$num
‹6‹6B C
;
‹6‹6C D
m_xmlAttribute
›6›6 "
[
›6›6" #
attributeIndex
›6›6# 1
]
›6›61 2
.
›6›62 3
	valueType
›6›63 <
=
›6›6= >
TagValueType
›6›6? K
.
›6›6K L
None
›6›6L P
;
›6›6P Q
m_xmlAttribute
ﬁ6ﬁ6 "
[
ﬁ6ﬁ6" #
attributeIndex
ﬁ6ﬁ6# 1
]
ﬁ6ﬁ61 2
.
ﬁ6ﬁ62 3
unitType
ﬁ6ﬁ63 ;
=
ﬁ6ﬁ6< =
TagUnitType
ﬁ6ﬁ6> I
.
ﬁ6ﬁ6I J
Pixels
ﬁ6ﬁ6J P
;
ﬁ6ﬁ6P Q
m_xmlAttribute
ﬂ6ﬂ6 "
[
ﬂ6ﬂ6" #
attributeIndex
ﬂ6ﬂ6# 1
]
ﬂ6ﬂ61 2
.
ﬂ6ﬂ62 3
valueHashCode
ﬂ6ﬂ63 @
=
ﬂ6ﬂ6A B
$num
ﬂ6ﬂ6C D
;
ﬂ6ﬂ6D E
m_xmlAttribute
‡6‡6 "
[
‡6‡6" #
attributeIndex
‡6‡6# 1
]
‡6‡61 2
.
‡6‡62 3
valueStartIndex
‡6‡63 B
=
‡6‡6C D
$num
‡6‡6E F
;
‡6‡6F G
m_xmlAttribute
·6·6 "
[
·6·6" #
attributeIndex
·6·6# 1
]
·6·61 2
.
·6·62 3
valueLength
·6·63 >
=
·6·6? @
$num
·6·6A B
;
·6·6B C
}
‚6‚6 
if
‰6‰6 
(
‰6‰6 
attributeFlag
‰6‰6 !
==
‰6‰6" $
$num
‰6‰6% &
)
‰6‰6& '
m_xmlAttribute
Â6Â6 "
[
Â6Â6" #
attributeIndex
Â6Â6# 1
]
Â6Â61 2
.
Â6Â62 3
nameHashCode
Â6Â63 ?
=
Â6Â6@ A
(
Â6Â6B C
m_xmlAttribute
Â6Â6C Q
[
Â6Â6Q R
attributeIndex
Â6Â6R `
]
Â6Â6` a
.
Â6Â6a b
nameHashCode
Â6Â6b n
<<
Â6Â6o q
$num
Â6Â6r s
)
Â6Â6s t
-
Â6Â6u v
m_xmlAttributeÂ6Â6w Ö
[Â6Â6Ö Ü
attributeIndexÂ6Â6Ü î
]Â6Â6î ï
.Â6Â6ï ñ
nameHashCodeÂ6Â6ñ ¢
+Â6Â6£ §
unicodeÂ6Â6• ¨
;Â6Â6¨ ≠
if
Á6Á6 
(
Á6Á6 
attributeFlag
Á6Á6 !
==
Á6Á6" $
$num
Á6Á6% &
&&
Á6Á6' )
unicode
Á6Á6* 1
==
Á6Á62 4
$char
Á6Á65 8
)
Á6Á68 9
attributeFlag
Ë6Ë6 !
=
Ë6Ë6" #
$num
Ë6Ë6$ %
;
Ë6Ë6% &
}
Í6Í6 
if
Ï6Ï6 
(
Ï6Ï6 
!
Ï6Ï6 
isValidHtmlTag
Ï6Ï6 
)
Ï6Ï6  
{
Ì6Ì6 
return
Ó6Ó6 
false
Ó6Ó6 
;
Ó6Ó6 
}
Ô6Ô6 
if
¯6¯6 
(
¯6¯6 
tag_NoParsing
¯6¯6 
&&
¯6¯6  
(
¯6¯6! "
m_xmlAttribute
¯6¯6" 0
[
¯6¯60 1
$num
¯6¯61 2
]
¯6¯62 3
.
¯6¯63 4
nameHashCode
¯6¯64 @
!=
¯6¯6A C
$num
¯6¯6D L
&&
¯6¯6M O
m_xmlAttribute
¯6¯6P ^
[
¯6¯6^ _
$num
¯6¯6_ `
]
¯6¯6` a
.
¯6¯6a b
nameHashCode
¯6¯6b n
!=
¯6¯6o q
$num
¯6¯6r z
)
¯6¯6z {
)
¯6¯6{ |
return
˘6˘6 
false
˘6˘6 
;
˘6˘6 
else
˙6˙6 
if
˙6˙6 
(
˙6˙6 
m_xmlAttribute
˙6˙6 #
[
˙6˙6# $
$num
˙6˙6$ %
]
˙6˙6% &
.
˙6˙6& '
nameHashCode
˙6˙6' 3
==
˙6˙64 6
$num
˙6˙67 ?
||
˙6˙6@ B
m_xmlAttribute
˙6˙6C Q
[
˙6˙6Q R
$num
˙6˙6R S
]
˙6˙6S T
.
˙6˙6T U
nameHashCode
˙6˙6U a
==
˙6˙6b d
$num
˙6˙6e m
)
˙6˙6m n
{
˚6˚6 
tag_NoParsing
¸6¸6 
=
¸6¸6 
false
¸6¸6  %
;
¸6¸6% &
return
˝6˝6 
true
˝6˝6 
;
˝6˝6 
}
˛6˛6 
if
Å7Å7 
(
Å7Å7 
	m_htmlTag
Å7Å7 
[
Å7Å7 
$num
Å7Å7 
]
Å7Å7 
==
Å7Å7 
$num
Å7Å7  "
&&
Å7Å7# %
tagCharCount
Å7Å7& 2
==
Å7Å73 5
$num
Å7Å76 7
)
Å7Å77 8
{
Ç7Ç7 
m_htmlColor
É7É7 
=
É7É7 
HexCharsToColor
É7É7 -
(
É7É7- .
	m_htmlTag
É7É7. 7
,
É7É77 8
tagCharCount
É7É79 E
)
É7É7E F
;
É7É7F G
m_colorStack
Ñ7Ñ7 
.
Ñ7Ñ7 
Add
Ñ7Ñ7  
(
Ñ7Ñ7  !
m_htmlColor
Ñ7Ñ7! ,
)
Ñ7Ñ7, -
;
Ñ7Ñ7- .
return
Ö7Ö7 
true
Ö7Ö7 
;
Ö7Ö7 
}
Ü7Ü7 
else
à7à7 
if
à7à7 
(
à7à7 
	m_htmlTag
à7à7 
[
à7à7 
$num
à7à7  
]
à7à7  !
==
à7à7" $
$num
à7à7% '
&&
à7à7( *
tagCharCount
à7à7+ 7
==
à7à78 :
$num
à7à7; <
)
à7à7< =
{
â7â7 
m_htmlColor
ä7ä7 
=
ä7ä7 
HexCharsToColor
ä7ä7 -
(
ä7ä7- .
	m_htmlTag
ä7ä7. 7
,
ä7ä77 8
tagCharCount
ä7ä79 E
)
ä7ä7E F
;
ä7ä7F G
m_colorStack
ã7ã7 
.
ã7ã7 
Add
ã7ã7  
(
ã7ã7  !
m_htmlColor
ã7ã7! ,
)
ã7ã7, -
;
ã7ã7- .
return
å7å7 
true
å7å7 
;
å7å7 
}
ç7ç7 
else
è7è7 
if
è7è7 
(
è7è7 
	m_htmlTag
è7è7 
[
è7è7 
$num
è7è7  
]
è7è7  !
==
è7è7" $
$num
è7è7% '
&&
è7è7( *
tagCharCount
è7è7+ 7
==
è7è78 :
$num
è7è7; <
)
è7è7< =
{
ê7ê7 
m_htmlColor
ë7ë7 
=
ë7ë7 
HexCharsToColor
ë7ë7 -
(
ë7ë7- .
	m_htmlTag
ë7ë7. 7
,
ë7ë77 8
tagCharCount
ë7ë79 E
)
ë7ë7E F
;
ë7ë7F G
m_colorStack
í7í7 
.
í7í7 
Add
í7í7  
(
í7í7  !
m_htmlColor
í7í7! ,
)
í7í7, -
;
í7í7- .
return
ì7ì7 
true
ì7ì7 
;
ì7ì7 
}
î7î7 
else
ñ7ñ7 
if
ñ7ñ7 
(
ñ7ñ7 
	m_htmlTag
ñ7ñ7 
[
ñ7ñ7 
$num
ñ7ñ7  
]
ñ7ñ7  !
==
ñ7ñ7" $
$num
ñ7ñ7% '
&&
ñ7ñ7( *
tagCharCount
ñ7ñ7+ 7
==
ñ7ñ78 :
$num
ñ7ñ7; <
)
ñ7ñ7< =
{
ó7ó7 
m_htmlColor
ò7ò7 
=
ò7ò7 
HexCharsToColor
ò7ò7 -
(
ò7ò7- .
	m_htmlTag
ò7ò7. 7
,
ò7ò77 8
tagCharCount
ò7ò79 E
)
ò7ò7E F
;
ò7ò7F G
m_colorStack
ô7ô7 
.
ô7ô7 
Add
ô7ô7  
(
ô7ô7  !
m_htmlColor
ô7ô7! ,
)
ô7ô7, -
;
ô7ô7- .
return
ö7ö7 
true
ö7ö7 
;
ö7ö7 
}
õ7õ7 
else
ú7ú7 
{
ù7ù7 
float
û7û7 
value
û7û7 
=
û7û7 
$num
û7û7 
;
û7û7  
float
ü7ü7 
	fontScale
ü7ü7 
;
ü7ü7  
switch
°7°7 
(
°7°7 
m_xmlAttribute
°7°7 &
[
°7°7& '
$num
°7°7' (
]
°7°7( )
.
°7°7) *
nameHashCode
°7°7* 6
)
°7°76 7
{
¢7¢7 
case
£7£7 
$num
£7£7 
:
£7£7 
case
§7§7 
$num
§7§7 
:
§7§7 !
m_FontStyleInternal
•7•7 +
|=
•7•7, .

FontStyles
•7•7/ 9
.
•7•79 :
Bold
•7•7: >
;
•7•7> ?
m_fontStyleStack
¶7¶7 (
.
¶7¶7( )
Add
¶7¶7) ,
(
¶7¶7, -

FontStyles
¶7¶7- 7
.
¶7¶77 8
Bold
¶7¶78 <
)
¶7¶7< =
;
¶7¶7= >"
m_FontWeightInternal
®7®7 ,
=
®7®7- .

FontWeight
®7®7/ 9
.
®7®79 :
Bold
®7®7: >
;
®7®7> ?
return
©7©7 
true
©7©7 #
;
©7©7# $
case
™7™7 
$num
™7™7 
:
™7™7 
case
´7´7 
$num
´7´7 
:
´7´7 
if
¨7¨7 
(
¨7¨7 
(
¨7¨7 
m_fontStyle
¨7¨7 (
&
¨7¨7) *

FontStyles
¨7¨7+ 5
.
¨7¨75 6
Bold
¨7¨76 :
)
¨7¨7: ;
!=
¨7¨7< >

FontStyles
¨7¨7? I
.
¨7¨7I J
Bold
¨7¨7J N
)
¨7¨7N O
{
≠7≠7 
if
Æ7Æ7 
(
Æ7Æ7  
m_fontStyleStack
Æ7Æ7  0
.
Æ7Æ70 1
Remove
Æ7Æ71 7
(
Æ7Æ77 8

FontStyles
Æ7Æ78 B
.
Æ7Æ7B C
Bold
Æ7Æ7C G
)
Æ7Æ7G H
==
Æ7Æ7I K
$num
Æ7Æ7L M
)
Æ7Æ7M N
{
Ø7Ø7 !
m_FontStyleInternal
∞7∞7  3
&=
∞7∞74 6
~
∞7∞77 8

FontStyles
∞7∞78 B
.
∞7∞7B C
Bold
∞7∞7C G
;
∞7∞7G H"
m_FontWeightInternal
±7±7  4
=
±7±75 6
m_FontWeightStack
±7±77 H
.
±7±7H I
Peek
±7±7I M
(
±7±7M N
)
±7±7N O
;
±7±7O P
}
≤7≤7 
}
≥7≥7 
return
¥7¥7 
true
¥7¥7 #
;
¥7¥7# $
case
µ7µ7 
$num
µ7µ7 
:
µ7µ7 
case
∂7∂7 
$num
∂7∂7 
:
∂7∂7 !
m_FontStyleInternal
∑7∑7 +
|=
∑7∑7, .

FontStyles
∑7∑7/ 9
.
∑7∑79 :
Italic
∑7∑7: @
;
∑7∑7@ A
m_fontStyleStack
∏7∏7 (
.
∏7∏7( )
Add
∏7∏7) ,
(
∏7∏7, -

FontStyles
∏7∏7- 7
.
∏7∏77 8
Italic
∏7∏78 >
)
∏7∏7> ?
;
∏7∏7? @
if
∫7∫7 
(
∫7∫7 
m_xmlAttribute
∫7∫7 *
[
∫7∫7* +
$num
∫7∫7+ ,
]
∫7∫7, -
.
∫7∫7- .
nameHashCode
∫7∫7. :
==
∫7∫7; =
$num
∫7∫7> D
||
∫7∫7E G
m_xmlAttribute
∫7∫7H V
[
∫7∫7V W
$num
∫7∫7W X
]
∫7∫7X Y
.
∫7∫7Y Z
nameHashCode
∫7∫7Z f
==
∫7∫7g i
$num
∫7∫7j p
)
∫7∫7p q
{
ª7ª7 
m_ItalicAngle
º7º7 )
=
º7º7* +
(
º7º7, -
int
º7º7- 0
)
º7º70 1
ConvertToFloat
º7º71 ?
(
º7º7? @
	m_htmlTag
º7º7@ I
,
º7º7I J
m_xmlAttribute
º7º7K Y
[
º7º7Y Z
$num
º7º7Z [
]
º7º7[ \
.
º7º7\ ]
valueStartIndex
º7º7] l
,
º7º7l m
m_xmlAttribute
º7º7n |
[
º7º7| }
$num
º7º7} ~
]
º7º7~ 
.º7º7 Ä
valueLengthº7º7Ä ã
)º7º7ã å
;º7º7å ç
if
ø7ø7 
(
ø7ø7  
m_ItalicAngle
ø7ø7  -
<
ø7ø7. /
-
ø7ø70 1
$num
ø7ø71 4
||
ø7ø75 7
m_ItalicAngle
ø7ø78 E
>
ø7ø7F G
$num
ø7ø7H K
)
ø7ø7K L
return
ø7ø7M S
false
ø7ø7T Y
;
ø7ø7Y Z
}
¿7¿7 
else
¡7¡7 
m_ItalicAngle
¬7¬7 )
=
¬7¬7* + 
m_currentFontAsset
¬7¬7, >
.
¬7¬7> ?
italicStyle
¬7¬7? J
;
¬7¬7J K 
m_ItalicAngleStack
ƒ7ƒ7 *
.
ƒ7ƒ7* +
Add
ƒ7ƒ7+ .
(
ƒ7ƒ7. /
m_ItalicAngle
ƒ7ƒ7/ <
)
ƒ7ƒ7< =
;
ƒ7ƒ7= >
return
∆7∆7 
true
∆7∆7 #
;
∆7∆7# $
case
«7«7 
$num
«7«7 
:
«7«7 
case
»7»7 
$num
»7»7 
:
»7»7 
if
…7…7 
(
…7…7 
(
…7…7 
m_fontStyle
…7…7 (
&
…7…7) *

FontStyles
…7…7+ 5
.
…7…75 6
Italic
…7…76 <
)
…7…7< =
!=
…7…7> @

FontStyles
…7…7A K
.
…7…7K L
Italic
…7…7L R
)
…7…7R S
{
 7 7 
m_ItalicAngle
À7À7 )
=
À7À7* + 
m_ItalicAngleStack
À7À7, >
.
À7À7> ?
Remove
À7À7? E
(
À7À7E F
)
À7À7F G
;
À7À7G H
if
Õ7Õ7 
(
Õ7Õ7  
m_fontStyleStack
Õ7Õ7  0
.
Õ7Õ70 1
Remove
Õ7Õ71 7
(
Õ7Õ77 8

FontStyles
Õ7Õ78 B
.
Õ7Õ7B C
Italic
Õ7Õ7C I
)
Õ7Õ7I J
==
Õ7Õ7K M
$num
Õ7Õ7N O
)
Õ7Õ7O P!
m_FontStyleInternal
Œ7Œ7  3
&=
Œ7Œ74 6
~
Œ7Œ77 8

FontStyles
Œ7Œ78 B
.
Œ7Œ7B C
Italic
Œ7Œ7C I
;
Œ7Œ7I J
}
œ7œ7 
return
–7–7 
true
–7–7 #
;
–7–7# $
case
—7—7 
$num
—7—7 
:
—7—7 
case
“7“7 
$num
“7“7 
:
“7“7 !
m_FontStyleInternal
”7”7 +
|=
”7”7, .

FontStyles
”7”7/ 9
.
”7”79 :
Strikethrough
”7”7: G
;
”7”7G H
m_fontStyleStack
‘7‘7 (
.
‘7‘7( )
Add
‘7‘7) ,
(
‘7‘7, -

FontStyles
‘7‘7- 7
.
‘7‘77 8
Strikethrough
‘7‘78 E
)
‘7‘7E F
;
‘7‘7F G
if
÷7÷7 
(
÷7÷7 
m_xmlAttribute
÷7÷7 *
[
÷7÷7* +
$num
÷7÷7+ ,
]
÷7÷7, -
.
÷7÷7- .
nameHashCode
÷7÷7. :
==
÷7÷7; =
$num
÷7÷7> D
||
÷7÷7E G
m_xmlAttribute
÷7÷7H V
[
÷7÷7V W
$num
÷7÷7W X
]
÷7÷7X Y
.
÷7÷7Y Z
nameHashCode
÷7÷7Z f
==
÷7÷7g i
$num
÷7÷7j p
)
÷7÷7p q
{
◊7◊7 "
m_strikethroughColor
ÿ7ÿ7 0
=
ÿ7ÿ71 2
HexCharsToColor
ÿ7ÿ73 B
(
ÿ7ÿ7B C
	m_htmlTag
ÿ7ÿ7C L
,
ÿ7ÿ7L M
m_xmlAttribute
ÿ7ÿ7N \
[
ÿ7ÿ7\ ]
$num
ÿ7ÿ7] ^
]
ÿ7ÿ7^ _
.
ÿ7ÿ7_ `
valueStartIndex
ÿ7ÿ7` o
,
ÿ7ÿ7o p
m_xmlAttribute
ÿ7ÿ7q 
[ÿ7ÿ7 Ä
$numÿ7ÿ7Ä Å
]ÿ7ÿ7Å Ç
.ÿ7ÿ7Ç É
valueLengthÿ7ÿ7É é
)ÿ7ÿ7é è
;ÿ7ÿ7è ê"
m_strikethroughColor
Ÿ7Ÿ7 0
.
Ÿ7Ÿ70 1
a
Ÿ7Ÿ71 2
=
Ÿ7Ÿ73 4
m_htmlColor
Ÿ7Ÿ75 @
.
Ÿ7Ÿ7@ A
a
Ÿ7Ÿ7A B
<
Ÿ7Ÿ7C D"
m_strikethroughColor
Ÿ7Ÿ7E Y
.
Ÿ7Ÿ7Y Z
a
Ÿ7Ÿ7Z [
?
Ÿ7Ÿ7\ ]
(
Ÿ7Ÿ7^ _
byte
Ÿ7Ÿ7_ c
)
Ÿ7Ÿ7c d
(
Ÿ7Ÿ7d e
m_htmlColor
Ÿ7Ÿ7e p
.
Ÿ7Ÿ7p q
a
Ÿ7Ÿ7q r
)
Ÿ7Ÿ7r s
:
Ÿ7Ÿ7t u
(
Ÿ7Ÿ7v w
byte
Ÿ7Ÿ7w {
)
Ÿ7Ÿ7{ |
(
Ÿ7Ÿ7| }#
m_strikethroughColorŸ7Ÿ7} ë
.Ÿ7Ÿ7í ì
aŸ7Ÿ7ì î
)Ÿ7Ÿ7î ï
;Ÿ7Ÿ7ï ñ
}
⁄7⁄7 
else
€7€7 "
m_strikethroughColor
‹7‹7 0
=
‹7‹71 2
m_htmlColor
‹7‹73 >
;
‹7‹7> ?'
m_strikethroughColorStack
ﬁ7ﬁ7 1
.
ﬁ7ﬁ71 2
Add
ﬁ7ﬁ72 5
(
ﬁ7ﬁ75 6"
m_strikethroughColor
ﬁ7ﬁ76 J
)
ﬁ7ﬁ7J K
;
ﬁ7ﬁ7K L
return
‡7‡7 
true
‡7‡7 #
;
‡7‡7# $
case
·7·7 
$num
·7·7 
:
·7·7 
case
‚7‚7 
$num
‚7‚7 
:
‚7‚7 
if
„7„7 
(
„7„7 
(
„7„7 
m_fontStyle
„7„7 (
&
„7„7) *

FontStyles
„7„7+ 5
.
„7„75 6
Strikethrough
„7„76 C
)
„7„7C D
!=
„7„7E G

FontStyles
„7„7H R
.
„7„7R S
Strikethrough
„7„7S `
)
„7„7` a
{
‰7‰7 
if
Â7Â7 
(
Â7Â7  
m_fontStyleStack
Â7Â7  0
.
Â7Â70 1
Remove
Â7Â71 7
(
Â7Â77 8

FontStyles
Â7Â78 B
.
Â7Â7B C
Strikethrough
Â7Â7C P
)
Â7Â7P Q
==
Â7Â7R T
$num
Â7Â7U V
)
Â7Â7V W!
m_FontStyleInternal
Ê7Ê7  3
&=
Ê7Ê74 6
~
Ê7Ê77 8

FontStyles
Ê7Ê78 B
.
Ê7Ê7B C
Strikethrough
Ê7Ê7C P
;
Ê7Ê7P Q
}
Á7Á7 "
m_strikethroughColor
È7È7 ,
=
È7È7- .'
m_strikethroughColorStack
È7È7/ H
.
È7È7H I
Remove
È7È7I O
(
È7È7O P
)
È7È7P Q
;
È7È7Q R
return
Í7Í7 
true
Í7Í7 #
;
Í7Í7# $
case
Î7Î7 
$num
Î7Î7 
:
Î7Î7 
case
Ï7Ï7 
$num
Ï7Ï7 
:
Ï7Ï7 !
m_FontStyleInternal
Ì7Ì7 +
|=
Ì7Ì7, .

FontStyles
Ì7Ì7/ 9
.
Ì7Ì79 :
	Underline
Ì7Ì7: C
;
Ì7Ì7C D
m_fontStyleStack
Ó7Ó7 (
.
Ó7Ó7( )
Add
Ó7Ó7) ,
(
Ó7Ó7, -

FontStyles
Ó7Ó7- 7
.
Ó7Ó77 8
	Underline
Ó7Ó78 A
)
Ó7Ó7A B
;
Ó7Ó7B C
if
77 
(
77 
m_xmlAttribute
77 *
[
77* +
$num
77+ ,
]
77, -
.
77- .
nameHashCode
77. :
==
77; =
$num
77> D
||
77E G
m_xmlAttribute
77H V
[
77V W
$num
77W X
]
77X Y
.
77Y Z
nameHashCode
77Z f
==
77g i
$num
77j p
)
77p q
{
Ò7Ò7 
m_underlineColor
Ú7Ú7 ,
=
Ú7Ú7- .
HexCharsToColor
Ú7Ú7/ >
(
Ú7Ú7> ?
	m_htmlTag
Ú7Ú7? H
,
Ú7Ú7H I
m_xmlAttribute
Ú7Ú7J X
[
Ú7Ú7X Y
$num
Ú7Ú7Y Z
]
Ú7Ú7Z [
.
Ú7Ú7[ \
valueStartIndex
Ú7Ú7\ k
,
Ú7Ú7k l
m_xmlAttribute
Ú7Ú7m {
[
Ú7Ú7{ |
$num
Ú7Ú7| }
]
Ú7Ú7} ~
.
Ú7Ú7~ 
valueLengthÚ7Ú7 ä
)Ú7Ú7ä ã
;Ú7Ú7ã å
m_underlineColor
Û7Û7 ,
.
Û7Û7, -
a
Û7Û7- .
=
Û7Û7/ 0
m_htmlColor
Û7Û71 <
.
Û7Û7< =
a
Û7Û7= >
<
Û7Û7? @
m_underlineColor
Û7Û7A Q
.
Û7Û7Q R
a
Û7Û7R S
?
Û7Û7T U
(
Û7Û7V W
byte
Û7Û7W [
)
Û7Û7[ \
(
Û7Û7\ ]
m_htmlColor
Û7Û7] h
.
Û7Û7h i
a
Û7Û7i j
)
Û7Û7j k
:
Û7Û7l m
(
Û7Û7n o
byte
Û7Û7o s
)
Û7Û7s t
(
Û7Û7t u
m_underlineColorÛ7Û7u Ö
.Û7Û7Ö Ü
aÛ7Û7Ü á
)Û7Û7á à
;Û7Û7à â
}
Ù7Ù7 
else
ı7ı7 
m_underlineColor
ˆ7ˆ7 ,
=
ˆ7ˆ7- .
m_htmlColor
ˆ7ˆ7/ :
;
ˆ7ˆ7: ;#
m_underlineColorStack
¯7¯7 -
.
¯7¯7- .
Add
¯7¯7. 1
(
¯7¯71 2
m_underlineColor
¯7¯72 B
)
¯7¯7B C
;
¯7¯7C D
return
˙7˙7 
true
˙7˙7 #
;
˙7˙7# $
case
˚7˚7 
$num
˚7˚7 
:
˚7˚7 
case
¸7¸7 
$num
¸7¸7 
:
¸7¸7 
if
˝7˝7 
(
˝7˝7 
(
˝7˝7 
m_fontStyle
˝7˝7 (
&
˝7˝7) *

FontStyles
˝7˝7+ 5
.
˝7˝75 6
	Underline
˝7˝76 ?
)
˝7˝7? @
!=
˝7˝7A C

FontStyles
˝7˝7D N
.
˝7˝7N O
	Underline
˝7˝7O X
)
˝7˝7X Y
{
˛7˛7 
m_underlineColor
ˇ7ˇ7 ,
=
ˇ7ˇ7- .#
m_underlineColorStack
ˇ7ˇ7/ D
.
ˇ7ˇ7D E
Remove
ˇ7ˇ7E K
(
ˇ7ˇ7K L
)
ˇ7ˇ7L M
;
ˇ7ˇ7M N
if
Å8Å8 
(
Å8Å8  
m_fontStyleStack
Å8Å8  0
.
Å8Å80 1
Remove
Å8Å81 7
(
Å8Å87 8

FontStyles
Å8Å88 B
.
Å8Å8B C
	Underline
Å8Å8C L
)
Å8Å8L M
==
Å8Å8N P
$num
Å8Å8Q R
)
Å8Å8R S!
m_FontStyleInternal
Ç8Ç8  3
&=
Ç8Ç84 6
~
Ç8Ç87 8

FontStyles
Ç8Ç88 B
.
Ç8Ç8B C
	Underline
Ç8Ç8C L
;
Ç8Ç8L M
}
É8É8 
m_underlineColor
Ö8Ö8 (
=
Ö8Ö8) *#
m_underlineColorStack
Ö8Ö8+ @
.
Ö8Ö8@ A
Remove
Ö8Ö8A G
(
Ö8Ö8G H
)
Ö8Ö8H I
;
Ö8Ö8I J
return
Ü8Ü8 
true
Ü8Ü8 #
;
Ü8Ü8# $
case
á8á8 
$num
á8á8 
:
á8á8 
case
à8à8 
$num
à8à8 
:
à8à8 !
m_FontStyleInternal
â8â8 +
|=
â8â8, .

FontStyles
â8â8/ 9
.
â8â89 :
	Highlight
â8â8: C
;
â8â8C D
m_fontStyleStack
ä8ä8 (
.
ä8ä8( )
Add
ä8ä8) ,
(
ä8ä8, -

FontStyles
ä8ä8- 7
.
ä8ä87 8
	Highlight
ä8ä88 A
)
ä8ä8A B
;
ä8ä8B C
Color32
å8å8 
highlightColor
å8å8  .
=
å8å8/ 0
new
å8å81 4
Color32
å8å85 <
(
å8å8< =
$num
å8å8= @
,
å8å8@ A
$num
å8å8B E
,
å8å8E F
$num
å8å8G H
,
å8å8H I
$num
å8å8J L
)
å8å8L M
;
å8å8M N

TMP_Offset
ç8ç8 "
highlightPadding
ç8ç8# 3
=
ç8ç84 5

TMP_Offset
ç8ç86 @
.
ç8ç8@ A
zero
ç8ç8A E
;
ç8ç8E F
for
ê8ê8 
(
ê8ê8 
int
ê8ê8  
i
ê8ê8! "
=
ê8ê8# $
$num
ê8ê8% &
;
ê8ê8& '
i
ê8ê8( )
<
ê8ê8* +
m_xmlAttribute
ê8ê8, :
.
ê8ê8: ;
Length
ê8ê8; A
&&
ê8ê8B D
m_xmlAttribute
ê8ê8E S
[
ê8ê8S T
i
ê8ê8T U
]
ê8ê8U V
.
ê8ê8V W
nameHashCode
ê8ê8W c
!=
ê8ê8d f
$num
ê8ê8g h
;
ê8ê8h i
i
ê8ê8j k
++
ê8ê8k m
)
ê8ê8m n
{
ë8ë8 
int
í8í8 
nameHashCode
í8í8  ,
=
í8í8- .
m_xmlAttribute
í8í8/ =
[
í8í8= >
i
í8í8> ?
]
í8í8? @
.
í8í8@ A
nameHashCode
í8í8A M
;
í8í8M N
switch
î8î8 "
(
î8î8# $
nameHashCode
î8î8$ 0
)
î8î80 1
{
ï8ï8 
case
ó8ó8  $
$num
ó8ó8% *
:
ó8ó8* +
case
ò8ò8  $
$num
ò8ò8% *
:
ò8ò8* +
if
ô8ô8$ &
(
ô8ô8' (
m_xmlAttribute
ô8ô8( 6
[
ô8ô86 7
i
ô8ô87 8
]
ô8ô88 9
.
ô8ô89 :
	valueType
ô8ô8: C
==
ô8ô8D F
TagValueType
ô8ô8G S
.
ô8ô8S T

ColorValue
ô8ô8T ^
)
ô8ô8^ _
highlightColor
ö8ö8( 6
=
ö8ö87 8
HexCharsToColor
ö8ö89 H
(
ö8ö8H I
	m_htmlTag
ö8ö8I R
,
ö8ö8R S
m_xmlAttribute
ö8ö8T b
[
ö8ö8b c
$num
ö8ö8c d
]
ö8ö8d e
.
ö8ö8e f
valueStartIndex
ö8ö8f u
,
ö8ö8u v
m_xmlAttributeö8ö8w Ö
[ö8ö8Ö Ü
$numö8ö8Ü á
]ö8ö8á à
.ö8ö8à â
valueLengthö8ö8â î
)ö8ö8î ï
;ö8ö8ï ñ
break
õ8õ8$ )
;
õ8õ8) *
case
û8û8  $
$num
û8û8% +
:
û8û8+ ,
highlightColor
ü8ü8$ 2
=
ü8ü83 4
HexCharsToColor
ü8ü85 D
(
ü8ü8D E
	m_htmlTag
ü8ü8E N
,
ü8ü8N O
m_xmlAttribute
ü8ü8P ^
[
ü8ü8^ _
i
ü8ü8_ `
]
ü8ü8` a
.
ü8ü8a b
valueStartIndex
ü8ü8b q
,
ü8ü8q r
m_xmlAttributeü8ü8s Å
[ü8ü8Å Ç
iü8ü8Ç É
]ü8ü8É Ñ
.ü8ü8Ñ Ö
valueLengthü8ü8Ö ê
)ü8ü8ê ë
;ü8ü8ë í
break
†8†8$ )
;
†8†8) *
case
£8£8  $
$num
£8£8% -
:
£8£8- .
int
§8§8$ '

paramCount
§8§8( 2
=
§8§83 4$
GetAttributeParameters
§8§85 K
(
§8§8K L
	m_htmlTag
§8§8L U
,
§8§8U V
m_xmlAttribute
§8§8W e
[
§8§8e f
i
§8§8f g
]
§8§8g h
.
§8§8h i
valueStartIndex
§8§8i x
,
§8§8x y
m_xmlAttribute§8§8z à
[§8§8à â
i§8§8â ä
]§8§8ä ã
.§8§8ã å
valueLength§8§8å ó
,§8§8ó ò
ref§8§8ô ú*
m_attributeParameterValues§8§8ù ∑
)§8§8∑ ∏
;§8§8∏ π
if
•8•8$ &
(
•8•8' (

paramCount
•8•8( 2
!=
•8•83 5
$num
•8•86 7
)
•8•87 8
return
•8•89 ?
false
•8•8@ E
;
•8•8E F
highlightPadding
ß8ß8$ 4
=
ß8ß85 6
new
ß8ß87 :

TMP_Offset
ß8ß8; E
(
ß8ß8E F(
m_attributeParameterValues
ß8ß8F `
[
ß8ß8` a
$num
ß8ß8a b
]
ß8ß8b c
,
ß8ß8c d(
m_attributeParameterValues
ß8ß8e 
[ß8ß8 Ä
$numß8ß8Ä Å
]ß8ß8Å Ç
,ß8ß8Ç É*
m_attributeParameterValuesß8ß8Ñ û
[ß8ß8û ü
$numß8ß8ü †
]ß8ß8† °
,ß8ß8° ¢*
m_attributeParameterValuesß8ß8£ Ω
[ß8ß8Ω æ
$numß8ß8æ ø
]ß8ß8ø ¿
)ß8ß8¿ ¡
;ß8ß8¡ ¬
highlightPadding
®8®8$ 4
*=
®8®85 7

m_fontSize
®8®88 B
*
®8®8C D
$num
®8®8E J
*
®8®8K L
(
®8®8M N
m_isOrthographic
®8®8N ^
?
®8®8_ `
$num
®8®8a b
:
®8®8c d
$num
®8®8e i
)
®8®8i j
;
®8®8j k
break
©8©8$ )
;
©8©8) *
}
™8™8 
}
´8´8 
highlightColor
≠8≠8 &
.
≠8≠8& '
a
≠8≠8' (
=
≠8≠8) *
m_htmlColor
≠8≠8+ 6
.
≠8≠86 7
a
≠8≠87 8
<
≠8≠89 :
highlightColor
≠8≠8; I
.
≠8≠8I J
a
≠8≠8J K
?
≠8≠8L M
(
≠8≠8N O
byte
≠8≠8O S
)
≠8≠8S T
(
≠8≠8T U
m_htmlColor
≠8≠8U `
.
≠8≠8` a
a
≠8≠8a b
)
≠8≠8b c
:
≠8≠8d e
(
≠8≠8f g
byte
≠8≠8g k
)
≠8≠8k l
(
≠8≠8l m
highlightColor
≠8≠8m {
.
≠8≠8{ |
a
≠8≠8| }
)
≠8≠8} ~
;
≠8≠8~ 
HighlightState
Ø8Ø8 &
state
Ø8Ø8' ,
=
Ø8Ø8- .
new
Ø8Ø8/ 2
HighlightState
Ø8Ø83 A
(
Ø8Ø8A B
highlightColor
Ø8Ø8B P
,
Ø8Ø8P Q
highlightPadding
Ø8Ø8R b
)
Ø8Ø8b c
;
Ø8Ø8c d#
m_HighlightStateStack
∞8∞8 -
.
∞8∞8- .
Push
∞8∞8. 2
(
∞8∞82 3
state
∞8∞83 8
)
∞8∞88 9
;
∞8∞89 :
return
≤8≤8 
true
≤8≤8 #
;
≤8≤8# $
case
≥8≥8 
$num
≥8≥8 
:
≥8≥8  
case
¥8¥8 
$num
¥8¥8 
:
¥8¥8  
if
µ8µ8 
(
µ8µ8 
(
µ8µ8 
m_fontStyle
µ8µ8 (
&
µ8µ8) *

FontStyles
µ8µ8+ 5
.
µ8µ85 6
	Highlight
µ8µ86 ?
)
µ8µ8? @
!=
µ8µ8A C

FontStyles
µ8µ8D N
.
µ8µ8N O
	Highlight
µ8µ8O X
)
µ8µ8X Y
{
∂8∂8 #
m_HighlightStateStack
∑8∑8 1
.
∑8∑81 2
Remove
∑8∑82 8
(
∑8∑88 9
)
∑8∑89 :
;
∑8∑8: ;
if
π8π8 
(
π8π8  
m_fontStyleStack
π8π8  0
.
π8π80 1
Remove
π8π81 7
(
π8π87 8

FontStyles
π8π88 B
.
π8π8B C
	Highlight
π8π8C L
)
π8π8L M
==
π8π8N P
$num
π8π8Q R
)
π8π8R S!
m_FontStyleInternal
∫8∫8  3
&=
∫8∫84 6
~
∫8∫87 8

FontStyles
∫8∫88 B
.
∫8∫8B C
	Highlight
∫8∫8C L
;
∫8∫8L M
}
ª8ª8 
return
º8º8 
true
º8º8 #
;
º8º8# $
case
Ω8Ω8 
$num
Ω8Ω8 
:
Ω8Ω8 
case
æ8æ8 
$num
æ8æ8 
:
æ8æ8 #
m_fontScaleMultiplier
ø8ø8 -
*=
ø8ø8. 0 
m_currentFontAsset
ø8ø81 C
.
ø8ø8C D
faceInfo
ø8ø8D L
.
ø8ø8L M
subscriptSize
ø8ø8M Z
>
ø8ø8[ \
$num
ø8ø8] ^
?
ø8ø8_ ` 
m_currentFontAsset
ø8ø8a s
.
ø8ø8s t
faceInfo
ø8ø8t |
.
ø8ø8| }
subscriptSizeø8ø8} ä
:ø8ø8ã å
$numø8ø8ç é
;ø8ø8é è#
m_baselineOffsetStack
¿8¿8 -
.
¿8¿8- .
Push
¿8¿8. 2
(
¿8¿82 3
m_baselineOffset
¿8¿83 C
)
¿8¿8C D
;
¿8¿8D E
	fontScale
¡8¡8 !
=
¡8¡8" #
(
¡8¡8$ %
m_currentFontSize
¡8¡8% 6
/
¡8¡87 8 
m_currentFontAsset
¡8¡89 K
.
¡8¡8K L
faceInfo
¡8¡8L T
.
¡8¡8T U
	pointSize
¡8¡8U ^
*
¡8¡8_ ` 
m_currentFontAsset
¡8¡8a s
.
¡8¡8s t
faceInfo
¡8¡8t |
.
¡8¡8| }
scale¡8¡8} Ç
*¡8¡8É Ñ
(¡8¡8Ö Ü 
m_isOrthographic¡8¡8Ü ñ
?¡8¡8ó ò
$num¡8¡8ô ö
:¡8¡8õ ú
$num¡8¡8ù °
)¡8¡8° ¢
)¡8¡8¢ £
;¡8¡8£ §
m_baselineOffset
¬8¬8 (
+=
¬8¬8) + 
m_currentFontAsset
¬8¬8, >
.
¬8¬8> ?
faceInfo
¬8¬8? G
.
¬8¬8G H
subscriptOffset
¬8¬8H W
*
¬8¬8X Y
	fontScale
¬8¬8Z c
*
¬8¬8d e#
m_fontScaleMultiplier
¬8¬8f {
;
¬8¬8{ |
m_fontStyleStack
ƒ8ƒ8 (
.
ƒ8ƒ8( )
Add
ƒ8ƒ8) ,
(
ƒ8ƒ8, -

FontStyles
ƒ8ƒ8- 7
.
ƒ8ƒ87 8
	Subscript
ƒ8ƒ88 A
)
ƒ8ƒ8A B
;
ƒ8ƒ8B C!
m_FontStyleInternal
≈8≈8 +
|=
≈8≈8, .

FontStyles
≈8≈8/ 9
.
≈8≈89 :
	Subscript
≈8≈8: C
;
≈8≈8C D
return
∆8∆8 
true
∆8∆8 #
;
∆8∆8# $
case
«8«8 
$num
«8«8 
:
«8«8 
case
»8»8 
$num
»8»8 
:
»8»8 
if
…8…8 
(
…8…8 
(
…8…8 !
m_FontStyleInternal
…8…8 0
&
…8…81 2

FontStyles
…8…83 =
.
…8…8= >
	Subscript
…8…8> G
)
…8…8G H
==
…8…8I K

FontStyles
…8…8L V
.
…8…8V W
	Subscript
…8…8W `
)
…8…8` a
{
 8 8 
if
À8À8 
(
À8À8  #
m_fontScaleMultiplier
À8À8  5
<
À8À86 7
$num
À8À88 9
)
À8À89 :
{
Ã8Ã8 
m_baselineOffset
Õ8Õ8  0
=
Õ8Õ81 2#
m_baselineOffsetStack
Õ8Õ83 H
.
Õ8Õ8H I
Pop
Õ8Õ8I L
(
Õ8Õ8L M
)
Õ8Õ8M N
;
Õ8Õ8N O#
m_fontScaleMultiplier
Œ8Œ8  5
/=
Œ8Œ86 8 
m_currentFontAsset
Œ8Œ89 K
.
Œ8Œ8K L
faceInfo
Œ8Œ8L T
.
Œ8Œ8T U
subscriptSize
Œ8Œ8U b
>
Œ8Œ8c d
$num
Œ8Œ8e f
?
Œ8Œ8g h 
m_currentFontAsset
Œ8Œ8i {
.
Œ8Œ8{ |
faceInfoŒ8Œ8| Ñ
.Œ8Œ8Ñ Ö
subscriptSizeŒ8Œ8Ö í
:Œ8Œ8ì î
$numŒ8Œ8ï ñ
;Œ8Œ8ñ ó
}
œ8œ8 
if
—8—8 
(
—8—8  
m_fontStyleStack
—8—8  0
.
—8—80 1
Remove
—8—81 7
(
—8—87 8

FontStyles
—8—88 B
.
—8—8B C
	Subscript
—8—8C L
)
—8—8L M
==
—8—8N P
$num
—8—8Q R
)
—8—8R S!
m_FontStyleInternal
“8“8  3
&=
“8“84 6
~
“8“87 8

FontStyles
“8“88 B
.
“8“8B C
	Subscript
“8“8C L
;
“8“8L M
}
”8”8 
return
‘8‘8 
true
‘8‘8 #
;
‘8‘8# $
case
’8’8 
$num
’8’8 
:
’8’8 
case
÷8÷8 
$num
÷8÷8 
:
÷8÷8 #
m_fontScaleMultiplier
◊8◊8 -
*=
◊8◊8. 0 
m_currentFontAsset
◊8◊81 C
.
◊8◊8C D
faceInfo
◊8◊8D L
.
◊8◊8L M
superscriptSize
◊8◊8M \
>
◊8◊8] ^
$num
◊8◊8_ `
?
◊8◊8a b 
m_currentFontAsset
◊8◊8c u
.
◊8◊8u v
faceInfo
◊8◊8v ~
.
◊8◊8~ 
superscriptSize◊8◊8 é
:◊8◊8è ê
$num◊8◊8ë í
;◊8◊8í ì#
m_baselineOffsetStack
ÿ8ÿ8 -
.
ÿ8ÿ8- .
Push
ÿ8ÿ8. 2
(
ÿ8ÿ82 3
m_baselineOffset
ÿ8ÿ83 C
)
ÿ8ÿ8C D
;
ÿ8ÿ8D E
	fontScale
Ÿ8Ÿ8 !
=
Ÿ8Ÿ8" #
(
Ÿ8Ÿ8$ %
m_currentFontSize
Ÿ8Ÿ8% 6
/
Ÿ8Ÿ87 8 
m_currentFontAsset
Ÿ8Ÿ89 K
.
Ÿ8Ÿ8K L
faceInfo
Ÿ8Ÿ8L T
.
Ÿ8Ÿ8T U
	pointSize
Ÿ8Ÿ8U ^
*
Ÿ8Ÿ8_ ` 
m_currentFontAsset
Ÿ8Ÿ8a s
.
Ÿ8Ÿ8s t
faceInfo
Ÿ8Ÿ8t |
.
Ÿ8Ÿ8| }
scaleŸ8Ÿ8} Ç
*Ÿ8Ÿ8É Ñ
(Ÿ8Ÿ8Ö Ü 
m_isOrthographicŸ8Ÿ8Ü ñ
?Ÿ8Ÿ8ó ò
$numŸ8Ÿ8ô ö
:Ÿ8Ÿ8õ ú
$numŸ8Ÿ8ù °
)Ÿ8Ÿ8° ¢
)Ÿ8Ÿ8¢ £
;Ÿ8Ÿ8£ §
m_baselineOffset
⁄8⁄8 (
+=
⁄8⁄8) + 
m_currentFontAsset
⁄8⁄8, >
.
⁄8⁄8> ?
faceInfo
⁄8⁄8? G
.
⁄8⁄8G H
superscriptOffset
⁄8⁄8H Y
*
⁄8⁄8Z [
	fontScale
⁄8⁄8\ e
*
⁄8⁄8f g#
m_fontScaleMultiplier
⁄8⁄8h }
;
⁄8⁄8} ~
m_fontStyleStack
‹8‹8 (
.
‹8‹8( )
Add
‹8‹8) ,
(
‹8‹8, -

FontStyles
‹8‹8- 7
.
‹8‹87 8
Superscript
‹8‹88 C
)
‹8‹8C D
;
‹8‹8D E!
m_FontStyleInternal
›8›8 +
|=
›8›8, .

FontStyles
›8›8/ 9
.
›8›89 :
Superscript
›8›8: E
;
›8›8E F
return
ﬁ8ﬁ8 
true
ﬁ8ﬁ8 #
;
ﬁ8ﬁ8# $
case
ﬂ8ﬂ8 
$num
ﬂ8ﬂ8 
:
ﬂ8ﬂ8 
case
‡8‡8 
$num
‡8‡8 
:
‡8‡8 
if
·8·8 
(
·8·8 
(
·8·8 !
m_FontStyleInternal
·8·8 0
&
·8·81 2

FontStyles
·8·83 =
.
·8·8= >
Superscript
·8·8> I
)
·8·8I J
==
·8·8K M

FontStyles
·8·8N X
.
·8·8X Y
Superscript
·8·8Y d
)
·8·8d e
{
‚8‚8 
if
„8„8 
(
„8„8  #
m_fontScaleMultiplier
„8„8  5
<
„8„86 7
$num
„8„88 9
)
„8„89 :
{
‰8‰8 
m_baselineOffset
Â8Â8  0
=
Â8Â81 2#
m_baselineOffsetStack
Â8Â83 H
.
Â8Â8H I
Pop
Â8Â8I L
(
Â8Â8L M
)
Â8Â8M N
;
Â8Â8N O#
m_fontScaleMultiplier
Ê8Ê8  5
/=
Ê8Ê86 8 
m_currentFontAsset
Ê8Ê89 K
.
Ê8Ê8K L
faceInfo
Ê8Ê8L T
.
Ê8Ê8T U
superscriptSize
Ê8Ê8U d
>
Ê8Ê8e f
$num
Ê8Ê8g h
?
Ê8Ê8i j 
m_currentFontAsset
Ê8Ê8k }
.
Ê8Ê8} ~
faceInfoÊ8Ê8~ Ü
.Ê8Ê8Ü á
superscriptSizeÊ8Ê8á ñ
:Ê8Ê8ó ò
$numÊ8Ê8ô ö
;Ê8Ê8ö õ
}
Á8Á8 
if
È8È8 
(
È8È8  
m_fontStyleStack
È8È8  0
.
È8È80 1
Remove
È8È81 7
(
È8È87 8

FontStyles
È8È88 B
.
È8È8B C
Superscript
È8È8C N
)
È8È8N O
==
È8È8P R
$num
È8È8S T
)
È8È8T U!
m_FontStyleInternal
Í8Í8  3
&=
Í8Í84 6
~
Í8Í87 8

FontStyles
Í8Í88 B
.
Í8Í8B C
Superscript
Í8Í8C N
;
Í8Í8N O
}
Î8Î8 
return
Ï8Ï8 
true
Ï8Ï8 #
;
Ï8Ï8# $
case
Ì8Ì8 
-
Ì8Ì8 
$num
Ì8Ì8 #
:
Ì8Ì8# $
case
Ó8Ó8 
$num
Ó8Ó8 #
:
Ó8Ó8# $
value
Ô8Ô8 
=
Ô8Ô8 
ConvertToFloat
Ô8Ô8  .
(
Ô8Ô8. /
	m_htmlTag
Ô8Ô8/ 8
,
Ô8Ô88 9
m_xmlAttribute
Ô8Ô8: H
[
Ô8Ô8H I
$num
Ô8Ô8I J
]
Ô8Ô8J K
.
Ô8Ô8K L
valueStartIndex
Ô8Ô8L [
,
Ô8Ô8[ \
m_xmlAttribute
Ô8Ô8] k
[
Ô8Ô8k l
$num
Ô8Ô8l m
]
Ô8Ô8m n
.
Ô8Ô8n o
valueLength
Ô8Ô8o z
)
Ô8Ô8z {
;
Ô8Ô8{ |
if
Ú8Ú8 
(
Ú8Ú8 
value
Ú8Ú8 !
==
Ú8Ú8" $
Int16
Ú8Ú8% *
.
Ú8Ú8* +
MinValue
Ú8Ú8+ 3
)
Ú8Ú83 4
return
Ú8Ú85 ;
false
Ú8Ú8< A
;
Ú8Ú8A B
switch
Ù8Ù8 
(
Ù8Ù8  
(
Ù8Ù8  !
int
Ù8Ù8! $
)
Ù8Ù8$ %
value
Ù8Ù8% *
)
Ù8Ù8* +
{
ı8ı8 
case
ˆ8ˆ8  
$num
ˆ8ˆ8! $
:
ˆ8ˆ8$ %"
m_FontWeightInternal
˜8˜8  4
=
˜8˜85 6

FontWeight
˜8˜87 A
.
˜8˜8A B
Thin
˜8˜8B F
;
˜8˜8F G
break
¯8¯8  %
;
¯8¯8% &
case
˘8˘8  
$num
˘8˘8! $
:
˘8˘8$ %"
m_FontWeightInternal
˙8˙8  4
=
˙8˙85 6

FontWeight
˙8˙87 A
.
˙8˙8A B

ExtraLight
˙8˙8B L
;
˙8˙8L M
break
˚8˚8  %
;
˚8˚8% &
case
¸8¸8  
$num
¸8¸8! $
:
¸8¸8$ %"
m_FontWeightInternal
˝8˝8  4
=
˝8˝85 6

FontWeight
˝8˝87 A
.
˝8˝8A B
Light
˝8˝8B G
;
˝8˝8G H
break
˛8˛8  %
;
˛8˛8% &
case
ˇ8ˇ8  
$num
ˇ8ˇ8! $
:
ˇ8ˇ8$ %"
m_FontWeightInternal
Ä9Ä9  4
=
Ä9Ä95 6

FontWeight
Ä9Ä97 A
.
Ä9Ä9A B
Regular
Ä9Ä9B I
;
Ä9Ä9I J
break
Å9Å9  %
;
Å9Å9% &
case
Ç9Ç9  
$num
Ç9Ç9! $
:
Ç9Ç9$ %"
m_FontWeightInternal
É9É9  4
=
É9É95 6

FontWeight
É9É97 A
.
É9É9A B
Medium
É9É9B H
;
É9É9H I
break
Ñ9Ñ9  %
;
Ñ9Ñ9% &
case
Ö9Ö9  
$num
Ö9Ö9! $
:
Ö9Ö9$ %"
m_FontWeightInternal
Ü9Ü9  4
=
Ü9Ü95 6

FontWeight
Ü9Ü97 A
.
Ü9Ü9A B
SemiBold
Ü9Ü9B J
;
Ü9Ü9J K
break
á9á9  %
;
á9á9% &
case
à9à9  
$num
à9à9! $
:
à9à9$ %"
m_FontWeightInternal
â9â9  4
=
â9â95 6

FontWeight
â9â97 A
.
â9â9A B
Bold
â9â9B F
;
â9â9F G
break
ä9ä9  %
;
ä9ä9% &
case
ã9ã9  
$num
ã9ã9! $
:
ã9ã9$ %"
m_FontWeightInternal
å9å9  4
=
å9å95 6

FontWeight
å9å97 A
.
å9å9A B
Heavy
å9å9B G
;
å9å9G H
break
ç9ç9  %
;
ç9ç9% &
case
é9é9  
$num
é9é9! $
:
é9é9$ %"
m_FontWeightInternal
è9è9  4
=
è9è95 6

FontWeight
è9è97 A
.
è9è9A B
Black
è9è9B G
;
è9è9G H
break
ê9ê9  %
;
ê9ê9% &
}
ë9ë9 
m_FontWeightStack
ì9ì9 )
.
ì9ì9) *
Add
ì9ì9* -
(
ì9ì9- ."
m_FontWeightInternal
ì9ì9. B
)
ì9ì9B C
;
ì9ì9C D
return
ï9ï9 
true
ï9ï9 #
;
ï9ï9# $
case
ñ9ñ9 
-
ñ9ñ9 
$num
ñ9ñ9 $
:
ñ9ñ9$ %
case
ó9ó9 
$num
ó9ó9 "
:
ó9ó9" #
m_FontWeightStack
ò9ò9 )
.
ò9ò9) *
Remove
ò9ò9* 0
(
ò9ò90 1
)
ò9ò91 2
;
ò9ò92 3
if
ö9ö9 
(
ö9ö9 !
m_FontStyleInternal
ö9ö9 /
==
ö9ö90 2

FontStyles
ö9ö93 =
.
ö9ö9= >
Bold
ö9ö9> B
)
ö9ö9B C"
m_FontWeightInternal
õ9õ9 0
=
õ9õ91 2

FontWeight
õ9õ93 =
.
õ9õ9= >
Bold
õ9õ9> B
;
õ9õ9B C
else
ú9ú9 "
m_FontWeightInternal
ù9ù9 0
=
ù9ù91 2
m_FontWeightStack
ù9ù93 D
.
ù9ù9D E
Peek
ù9ù9E I
(
ù9ù9I J
)
ù9ù9J K
;
ù9ù9K L
return
ü9ü9 
true
ü9ü9 #
;
ü9ü9# $
case
†9†9 
$num
†9†9 
:
†9†9 
case
°9°9 
$num
°9°9 
:
°9°9 
value
¢9¢9 
=
¢9¢9 
ConvertToFloat
¢9¢9  .
(
¢9¢9. /
	m_htmlTag
¢9¢9/ 8
,
¢9¢98 9
m_xmlAttribute
¢9¢9: H
[
¢9¢9H I
$num
¢9¢9I J
]
¢9¢9J K
.
¢9¢9K L
valueStartIndex
¢9¢9L [
,
¢9¢9[ \
m_xmlAttribute
¢9¢9] k
[
¢9¢9k l
$num
¢9¢9l m
]
¢9¢9m n
.
¢9¢9n o
valueLength
¢9¢9o z
)
¢9¢9z {
;
¢9¢9{ |
if
•9•9 
(
•9•9 
value
•9•9 !
==
•9•9" $
Int16
•9•9% *
.
•9•9* +
MinValue
•9•9+ 3
)
•9•93 4
return
•9•95 ;
false
•9•9< A
;
•9•9A B
switch
ß9ß9 
(
ß9ß9  
tagUnitType
ß9ß9  +
)
ß9ß9+ ,
{
®9®9 
case
©9©9  
TagUnitType
©9©9! ,
.
©9©9, -
Pixels
©9©9- 3
:
©9©93 4

m_xAdvance
™9™9  *
=
™9™9+ ,
value
™9™9- 2
*
™9™93 4
(
™9™95 6
m_isOrthographic
™9™96 F
?
™9™9G H
$num
™9™9I M
:
™9™9N O
$num
™9™9P T
)
™9™9T U
;
™9™9U V
return
¨9¨9  &
true
¨9¨9' +
;
¨9¨9+ ,
case
≠9≠9  
TagUnitType
≠9≠9! ,
.
≠9≠9, -
	FontUnits
≠9≠9- 6
:
≠9≠96 7

m_xAdvance
Æ9Æ9  *
=
Æ9Æ9+ ,
value
Æ9Æ9- 2
*
Æ9Æ93 4
m_currentFontSize
Æ9Æ95 F
*
Æ9Æ9G H
(
Æ9Æ9I J
m_isOrthographic
Æ9Æ9J Z
?
Æ9Æ9[ \
$num
Æ9Æ9] a
:
Æ9Æ9b c
$num
Æ9Æ9d h
)
Æ9Æ9h i
;
Æ9Æ9i j
return
∞9∞9  &
true
∞9∞9' +
;
∞9∞9+ ,
case
±9±9  
TagUnitType
±9±9! ,
.
±9±9, -

Percentage
±9±9- 7
:
±9±97 8

m_xAdvance
≤9≤9  *
=
≤9≤9+ ,
m_marginWidth
≤9≤9- :
*
≤9≤9; <
value
≤9≤9= B
/
≤9≤9C D
$num
≤9≤9E H
;
≤9≤9H I
return
¥9¥9  &
true
¥9¥9' +
;
¥9¥9+ ,
}
µ9µ9 
return
∂9∂9 
false
∂9∂9 $
;
∂9∂9$ %
case
∑9∑9 
$num
∑9∑9 
:
∑9∑9 
case
∏9∏9 
$num
∏9∏9 
:
∏9∏9 #
m_isIgnoringAlignment
π9π9 -
=
π9π9. /
false
π9π90 5
;
π9π95 6
return
∫9∫9 
true
∫9∫9 #
;
∫9∫9# $
case
ª9ª9 
$num
ª9ª9 !
:
ª9ª9! "
case
º9º9 
$num
º9º9 !
:
º9º9! "
value
Ω9Ω9 
=
Ω9Ω9 
ConvertToFloat
Ω9Ω9  .
(
Ω9Ω9. /
	m_htmlTag
Ω9Ω9/ 8
,
Ω9Ω98 9
m_xmlAttribute
Ω9Ω9: H
[
Ω9Ω9H I
$num
Ω9Ω9I J
]
Ω9Ω9J K
.
Ω9Ω9K L
valueStartIndex
Ω9Ω9L [
,
Ω9Ω9[ \
m_xmlAttribute
Ω9Ω9] k
[
Ω9Ω9k l
$num
Ω9Ω9l m
]
Ω9Ω9m n
.
Ω9Ω9n o
valueLength
Ω9Ω9o z
)
Ω9Ω9z {
;
Ω9Ω9{ |
if
¿9¿9 
(
¿9¿9 
value
¿9¿9 !
==
¿9¿9" $
Int16
¿9¿9% *
.
¿9¿9* +
MinValue
¿9¿9+ 3
)
¿9¿93 4
return
¿9¿95 ;
false
¿9¿9< A
;
¿9¿9A B
switch
¬9¬9 
(
¬9¬9  
tagUnitType
¬9¬9  +
)
¬9¬9+ ,
{
√9√9 
case
ƒ9ƒ9  
TagUnitType
ƒ9ƒ9! ,
.
ƒ9ƒ9, -
Pixels
ƒ9ƒ9- 3
:
ƒ9ƒ93 4
m_baselineOffset
≈9≈9  0
=
≈9≈91 2
value
≈9≈93 8
*
≈9≈99 :
(
≈9≈9; <
m_isOrthographic
≈9≈9< L
?
≈9≈9M N
$num
≈9≈9O P
:
≈9≈9Q R
$num
≈9≈9S W
)
≈9≈9W X
;
≈9≈9X Y
return
∆9∆9  &
true
∆9∆9' +
;
∆9∆9+ ,
case
«9«9  
TagUnitType
«9«9! ,
.
«9«9, -
	FontUnits
«9«9- 6
:
«9«96 7
m_baselineOffset
»9»9  0
=
»9»91 2
value
»9»93 8
*
»9»99 :
(
»9»9; <
m_isOrthographic
»9»9< L
?
»9»9M N
$num
»9»9O P
:
»9»9Q R
$num
»9»9S W
)
»9»9W X
*
»9»9Y Z
m_currentFontSize
»9»9[ l
;
»9»9l m
return
…9…9  &
true
…9…9' +
;
…9…9+ ,
case
 9 9  
TagUnitType
 9 9! ,
.
 9 9, -

Percentage
 9 9- 7
:
 9 97 8
return
Ã9Ã9  &
false
Ã9Ã9' ,
;
Ã9Ã9, -
}
Õ9Õ9 
return
Œ9Œ9 
false
Œ9Œ9 $
;
Œ9Œ9$ %
case
œ9œ9 
$num
œ9œ9 !
:
œ9œ9! "
case
–9–9 
$num
–9–9 !
:
–9–9! "
m_baselineOffset
—9—9 (
=
—9—9) *
$num
—9—9+ ,
;
—9—9, -
return
“9“9 
true
“9“9 #
;
“9“9# $
case
”9”9 
$num
”9”9 
:
”9”9 
case
‘9‘9 
$num
‘9‘9 
:
‘9‘9 
if
÷9÷9 
(
÷9÷9 
m_overflowMode
÷9÷9 *
==
÷9÷9+ -
TextOverflowModes
÷9÷9. ?
.
÷9÷9? @
Page
÷9÷9@ D
)
÷9÷9D E
{
◊9◊9 

m_xAdvance
ÿ9ÿ9 &
=
ÿ9ÿ9' (
$num
ÿ9ÿ9) *
+
ÿ9ÿ9+ ,
tag_LineIndent
ÿ9ÿ9- ;
+
ÿ9ÿ9< =

tag_Indent
ÿ9ÿ9> H
;
ÿ9ÿ9H I
m_lineOffset
Ÿ9Ÿ9 (
=
Ÿ9Ÿ9) *
$num
Ÿ9Ÿ9+ ,
;
Ÿ9Ÿ9, -
m_pageNumber
⁄9⁄9 (
+=
⁄9⁄9) +
$num
⁄9⁄9, -
;
⁄9⁄9- .
m_isNewPage
€9€9 '
=
€9€9( )
true
€9€9* .
;
€9€9. /
}
‹9‹9 
return
›9›9 
true
›9›9 #
;
›9›9# $
case
„9„9 
$num
„9„9 
:
„9„9 
case
‰9‰9 
$num
‰9‰9 
:
‰9‰9 "
m_isNonBreakingSpace
Â9Â9 ,
=
Â9Â9- .
true
Â9Â9/ 3
;
Â9Â93 4
return
Ê9Ê9 
true
Ê9Ê9 #
;
Ê9Ê9# $
case
Á9Á9 
$num
Á9Á9 
:
Á9Á9  
case
Ë9Ë9 
$num
Ë9Ë9 
:
Ë9Ë9  "
m_isNonBreakingSpace
È9È9 ,
=
È9È9- .
false
È9È9/ 4
;
È9È94 5
return
Í9Í9 
true
Í9Í9 #
;
Í9Í9# $
case
Î9Î9 
$num
Î9Î9 
:
Î9Î9 
case
Ï9Ï9 
$num
Ï9Ï9 
:
Ï9Ï9 
value
Ì9Ì9 
=
Ì9Ì9 
ConvertToFloat
Ì9Ì9  .
(
Ì9Ì9. /
	m_htmlTag
Ì9Ì9/ 8
,
Ì9Ì98 9
m_xmlAttribute
Ì9Ì9: H
[
Ì9Ì9H I
$num
Ì9Ì9I J
]
Ì9Ì9J K
.
Ì9Ì9K L
valueStartIndex
Ì9Ì9L [
,
Ì9Ì9[ \
m_xmlAttribute
Ì9Ì9] k
[
Ì9Ì9k l
$num
Ì9Ì9l m
]
Ì9Ì9m n
.
Ì9Ì9n o
valueLength
Ì9Ì9o z
)
Ì9Ì9z {
;
Ì9Ì9{ |
if
99 
(
99 
value
99 !
==
99" $
Int16
99% *
.
99* +
MinValue
99+ 3
)
993 4
return
995 ;
false
99< A
;
99A B
switch
Ú9Ú9 
(
Ú9Ú9  
tagUnitType
Ú9Ú9  +
)
Ú9Ú9+ ,
{
Û9Û9 
case
Ù9Ù9  
TagUnitType
Ù9Ù9! ,
.
Ù9Ù9, -
Pixels
Ù9Ù9- 3
:
Ù9Ù93 4
if
ı9ı9  "
(
ı9ı9# $
	m_htmlTag
ı9ı9$ -
[
ı9ı9- .
$num
ı9ı9. /
]
ı9ı9/ 0
==
ı9ı91 3
$num
ı9ı94 6
)
ı9ı96 7
{
ˆ9ˆ9  !
m_currentFontSize
˜9˜9$ 5
=
˜9˜96 7

m_fontSize
˜9˜98 B
+
˜9˜9C D
value
˜9˜9E J
;
˜9˜9J K
m_sizeStack
¯9¯9$ /
.
¯9¯9/ 0
Add
¯9¯90 3
(
¯9¯93 4
m_currentFontSize
¯9¯94 E
)
¯9¯9E F
;
¯9¯9F G
return
˘9˘9$ *
true
˘9˘9+ /
;
˘9˘9/ 0
}
˙9˙9  !
else
˚9˚9  $
if
˚9˚9% '
(
˚9˚9( )
	m_htmlTag
˚9˚9) 2
[
˚9˚92 3
$num
˚9˚93 4
]
˚9˚94 5
==
˚9˚96 8
$num
˚9˚99 ;
)
˚9˚9; <
{
¸9¸9  !
m_currentFontSize
˝9˝9$ 5
=
˝9˝96 7

m_fontSize
˝9˝98 B
+
˝9˝9C D
value
˝9˝9E J
;
˝9˝9J K
m_sizeStack
˛9˛9$ /
.
˛9˛9/ 0
Add
˛9˛90 3
(
˛9˛93 4
m_currentFontSize
˛9˛94 E
)
˛9˛9E F
;
˛9˛9F G
return
ˇ9ˇ9$ *
true
ˇ9ˇ9+ /
;
ˇ9ˇ9/ 0
}
Ä:Ä:  !
else
Å:Å:  $
{
Ç:Ç:  !
m_currentFontSize
É:É:$ 5
=
É:É:6 7
value
É:É:8 =
;
É:É:= >
m_sizeStack
Ñ:Ñ:$ /
.
Ñ:Ñ:/ 0
Add
Ñ:Ñ:0 3
(
Ñ:Ñ:3 4
m_currentFontSize
Ñ:Ñ:4 E
)
Ñ:Ñ:E F
;
Ñ:Ñ:F G
return
Ö:Ö:$ *
true
Ö:Ö:+ /
;
Ö:Ö:/ 0
}
Ü:Ü:  !
case
á:á:  
TagUnitType
á:á:! ,
.
á:á:, -
	FontUnits
á:á:- 6
:
á:á:6 7
m_currentFontSize
à:à:  1
=
à:à:2 3

m_fontSize
à:à:4 >
*
à:à:? @
value
à:à:A F
;
à:à:F G
m_sizeStack
â:â:  +
.
â:â:+ ,
Add
â:â:, /
(
â:â:/ 0
m_currentFontSize
â:â:0 A
)
â:â:A B
;
â:â:B C
return
ä:ä:  &
true
ä:ä:' +
;
ä:ä:+ ,
case
ã:ã:  
TagUnitType
ã:ã:! ,
.
ã:ã:, -

Percentage
ã:ã:- 7
:
ã:ã:7 8
m_currentFontSize
å:å:  1
=
å:å:2 3

m_fontSize
å:å:4 >
*
å:å:? @
value
å:å:A F
/
å:å:G H
$num
å:å:I L
;
å:å:L M
m_sizeStack
ç:ç:  +
.
ç:ç:+ ,
Add
ç:ç:, /
(
ç:ç:/ 0
m_currentFontSize
ç:ç:0 A
)
ç:ç:A B
;
ç:ç:B C
return
é:é:  &
true
é:é:' +
;
é:é:+ ,
}
è:è: 
return
ê:ê: 
false
ê:ê: $
;
ê:ê:$ %
case
ë:ë: 
$num
ë:ë: 
:
ë:ë:  
case
í:í: 
$num
í:í: 
:
í:í:  
m_currentFontSize
ì:ì: )
=
ì:ì:* +
m_sizeStack
ì:ì:, 7
.
ì:ì:7 8
Remove
ì:ì:8 >
(
ì:ì:> ?
)
ì:ì:? @
;
ì:ì:@ A
return
î:î: 
true
î:î: #
;
î:î:# $
case
ï:ï: 
$num
ï:ï: 
:
ï:ï: 
case
ñ:ñ: 
$num
ñ:ñ: 
:
ñ:ñ: 
int
ó:ó: 
fontHashCode
ó:ó: (
=
ó:ó:) *
m_xmlAttribute
ó:ó:+ 9
[
ó:ó:9 :
$num
ó:ó:: ;
]
ó:ó:; <
.
ó:ó:< =
valueHashCode
ó:ó:= J
;
ó:ó:J K
int
ò:ò: '
materialAttributeHashCode
ò:ò: 5
=
ò:ò:6 7
m_xmlAttribute
ò:ò:8 F
[
ò:ò:F G
$num
ò:ò:G H
]
ò:ò:H I
.
ò:ò:I J
nameHashCode
ò:ò:J V
;
ò:ò:V W
int
ô:ô: 
materialHashCode
ô:ô: ,
=
ô:ô:- .
m_xmlAttribute
ô:ô:/ =
[
ô:ô:= >
$num
ô:ô:> ?
]
ô:ô:? @
.
ô:ô:@ A
valueHashCode
ô:ô:A N
;
ô:ô:N O
if
ú:ú: 
(
ú:ú: 
fontHashCode
ú:ú: (
==
ú:ú:) +
$num
ú:ú:, 5
||
ú:ú:6 8
fontHashCode
ú:ú:9 E
==
ú:ú:F H
$num
ú:ú:I R
)
ú:ú:R S
{
ù:ù:  
m_currentFontAsset
û:û: .
=
û:û:/ 0"
m_materialReferences
û:û:1 E
[
û:û:E F
$num
û:û:F G
]
û:û:G H
.
û:û:H I
	fontAsset
û:û:I R
;
û:û:R S
m_currentMaterial
ü:ü: -
=
ü:ü:. /"
m_materialReferences
ü:ü:0 D
[
ü:ü:D E
$num
ü:ü:E F
]
ü:ü:F G
.
ü:ü:G H
material
ü:ü:H P
;
ü:ü:P Q$
m_currentMaterialIndex
†:†: 2
=
†:†:3 4
$num
†:†:5 6
;
†:†:6 7&
m_materialReferenceStack
£:£: 4
.
£:£:4 5
Add
£:£:5 8
(
£:£:8 9"
m_materialReferences
£:£:9 M
[
£:£:M N
$num
£:£:N O
]
£:£:O P
)
£:£:P Q
;
£:£:Q R
return
•:•: "
true
•:•:# '
;
•:•:' (
}
¶:¶: 
TMP_FontAsset
®:®: %
tempFont
®:®:& .
;
®:®:. /
Material
©:©:  
tempMaterial
©:©:! -
;
©:©:- .&
MaterialReferenceManager
Ø:Ø: 0
.
Ø:Ø:0 1
TryGetFontAsset
Ø:Ø:1 @
(
Ø:Ø:@ A
fontHashCode
Ø:Ø:A M
,
Ø:Ø:M N
out
Ø:Ø:O R
tempFont
Ø:Ø:S [
)
Ø:Ø:[ \
;
Ø:Ø:\ ]
if
≤:≤: 
(
≤:≤: 
tempFont
≤:≤: $
==
≤:≤:% '
null
≤:≤:( ,
)
≤:≤:, -
{
≥:≥: 
tempFont
µ:µ: $
=
µ:µ:% & 
OnFontAssetRequest
µ:µ:' 9
?
µ:µ:9 :
.
µ:µ:: ;
Invoke
µ:µ:; A
(
µ:µ:A B
fontHashCode
µ:µ:B N
,
µ:µ:N O
new
µ:µ:P S
string
µ:µ:T Z
(
µ:µ:Z [
	m_htmlTag
µ:µ:[ d
,
µ:µ:d e
m_xmlAttribute
µ:µ:f t
[
µ:µ:t u
$num
µ:µ:u v
]
µ:µ:v w
.
µ:µ:w x
valueStartIndexµ:µ:x á
,µ:µ:á à
m_xmlAttributeµ:µ:â ó
[µ:µ:ó ò
$numµ:µ:ò ô
]µ:µ:ô ö
.µ:µ:ö õ
valueLengthµ:µ:õ ¶
)µ:µ:¶ ß
)µ:µ:ß ®
;µ:µ:® ©
if
∑:∑: 
(
∑:∑:  
tempFont
∑:∑:  (
==
∑:∑:) +
null
∑:∑:, 0
)
∑:∑:0 1
{
∏:∏: 
tempFont
∫:∫:  (
=
∫:∫:) *
	Resources
∫:∫:+ 4
.
∫:∫:4 5
Load
∫:∫:5 9
<
∫:∫:9 :
TMP_FontAsset
∫:∫:: G
>
∫:∫:G H
(
∫:∫:H I
TMP_Settings
∫:∫:I U
.
∫:∫:U V"
defaultFontAssetPath
∫:∫:V j
+
∫:∫:k l
new
∫:∫:m p
string
∫:∫:q w
(
∫:∫:w x
	m_htmlTag∫:∫:x Å
,∫:∫:Å Ç
m_xmlAttribute∫:∫:É ë
[∫:∫:ë í
$num∫:∫:í ì
]∫:∫:ì î
.∫:∫:î ï
valueStartIndex∫:∫:ï §
,∫:∫:§ •
m_xmlAttribute∫:∫:¶ ¥
[∫:∫:¥ µ
$num∫:∫:µ ∂
]∫:∫:∂ ∑
.∫:∫:∑ ∏
valueLength∫:∫:∏ √
)∫:∫:√ ƒ
)∫:∫:ƒ ≈
;∫:∫:≈ ∆
}
ª:ª: 
if
Ω:Ω: 
(
Ω:Ω:  
tempFont
Ω:Ω:  (
==
Ω:Ω:) +
null
Ω:Ω:, 0
)
Ω:Ω:0 1
return
æ:æ:  &
false
æ:æ:' ,
;
æ:æ:, -&
MaterialReferenceManager
¡:¡: 4
.
¡:¡:4 5
AddFontAsset
¡:¡:5 A
(
¡:¡:A B
tempFont
¡:¡:B J
)
¡:¡:J K
;
¡:¡:K L
}
¬:¬: 
if
≈:≈: 
(
≈:≈: '
materialAttributeHashCode
≈:≈: 5
==
≈:≈:6 8
$num
≈:≈:9 :
&&
≈:≈:; =
materialHashCode
≈:≈:> N
==
≈:≈:O Q
$num
≈:≈:R S
)
≈:≈:S T
{
∆:∆: 
m_currentMaterial
»:»: -
=
»:»:. /
tempFont
»:»:0 8
.
»:»:8 9
material
»:»:9 A
;
»:»:A B$
m_currentMaterialIndex
 : : 2
=
 : :3 4
MaterialReference
 : :5 F
.
 : :F G"
AddMaterialReference
 : :G [
(
 : :[ \
m_currentMaterial
 : :\ m
,
 : :m n
tempFont
 : :o w
,
 : :w x
ref
 : :y |#
m_materialReferences : :} ë
, : :ë í.
m_materialReferenceIndexLookup : :ì ±
) : :± ≤
; : :≤ ≥&
m_materialReferenceStack
Ã:Ã: 4
.
Ã:Ã:4 5
Add
Ã:Ã:5 8
(
Ã:Ã:8 9"
m_materialReferences
Ã:Ã:9 M
[
Ã:Ã:M N$
m_currentMaterialIndex
Ã:Ã:N d
]
Ã:Ã:d e
)
Ã:Ã:e f
;
Ã:Ã:f g
}
Õ:Õ: 
else
Œ:Œ: 
if
Œ:Œ: 
(
Œ:Œ:  !'
materialAttributeHashCode
Œ:Œ:! :
==
Œ:Œ:; =
$num
Œ:Œ:> G
||
Œ:Œ:H J'
materialAttributeHashCode
Œ:Œ:K d
==
Œ:Œ:e g
$num
Œ:Œ:h p
)
Œ:Œ:p q
{
œ:œ: 
if
–:–: 
(
–:–:  &
MaterialReferenceManager
–:–:  8
.
–:–:8 9
TryGetMaterial
–:–:9 G
(
–:–:G H
materialHashCode
–:–:H X
,
–:–:X Y
out
–:–:Z ]
tempMaterial
–:–:^ j
)
–:–:j k
)
–:–:k l
{
—:—: 
m_currentMaterial
“:“:  1
=
“:“:2 3
tempMaterial
“:“:4 @
;
“:“:@ A$
m_currentMaterialIndex
‘:‘:  6
=
‘:‘:7 8
MaterialReference
‘:‘:9 J
.
‘:‘:J K"
AddMaterialReference
‘:‘:K _
(
‘:‘:_ `
m_currentMaterial
‘:‘:` q
,
‘:‘:q r
tempFont
‘:‘:s {
,
‘:‘:{ |
ref‘:‘:} Ä$
m_materialReferences‘:‘:Å ï
,‘:‘:ï ñ.
m_materialReferenceIndexLookup‘:‘:ó µ
)‘:‘:µ ∂
;‘:‘:∂ ∑&
m_materialReferenceStack
÷:÷:  8
.
÷:÷:8 9
Add
÷:÷:9 <
(
÷:÷:< ="
m_materialReferences
÷:÷:= Q
[
÷:÷:Q R$
m_currentMaterialIndex
÷:÷:R h
]
÷:÷:h i
)
÷:÷:i j
;
÷:÷:j k
}
◊:◊: 
else
ÿ:ÿ:  
{
Ÿ:Ÿ: 
tempMaterial
€:€:  ,
=
€:€:- .
	Resources
€:€:/ 8
.
€:€:8 9
Load
€:€:9 =
<
€:€:= >
Material
€:€:> F
>
€:€:F G
(
€:€:G H
TMP_Settings
€:€:H T
.
€:€:T U"
defaultFontAssetPath
€:€:U i
+
€:€:j k
new
€:€:l o
string
€:€:p v
(
€:€:v w
	m_htmlTag€:€:w Ä
,€:€:Ä Å
m_xmlAttribute€:€:Ç ê
[€:€:ê ë
$num€:€:ë í
]€:€:í ì
.€:€:ì î
valueStartIndex€:€:î £
,€:€:£ §
m_xmlAttribute€:€:• ≥
[€:€:≥ ¥
$num€:€:¥ µ
]€:€:µ ∂
.€:€:∂ ∑
valueLength€:€:∑ ¬
)€:€:¬ √
)€:€:√ ƒ
;€:€:ƒ ≈
if
›:›:  "
(
›:›:# $
tempMaterial
›:›:$ 0
==
›:›:1 3
null
›:›:4 8
)
›:›:8 9
return
ﬁ:ﬁ:$ *
false
ﬁ:ﬁ:+ 0
;
ﬁ:ﬁ:0 1&
MaterialReferenceManager
·:·:  8
.
·:·:8 9
AddFontMaterial
·:·:9 H
(
·:·:H I
materialHashCode
·:·:I Y
,
·:·:Y Z
tempMaterial
·:·:[ g
)
·:·:g h
;
·:·:h i
m_currentMaterial
„:„:  1
=
„:„:2 3
tempMaterial
„:„:4 @
;
„:„:@ A$
m_currentMaterialIndex
Â:Â:  6
=
Â:Â:7 8
MaterialReference
Â:Â:9 J
.
Â:Â:J K"
AddMaterialReference
Â:Â:K _
(
Â:Â:_ `
m_currentMaterial
Â:Â:` q
,
Â:Â:q r
tempFont
Â:Â:s {
,
Â:Â:{ |
refÂ:Â:} Ä$
m_materialReferencesÂ:Â:Å ï
,Â:Â:ï ñ.
m_materialReferenceIndexLookupÂ:Â:ó µ
)Â:Â:µ ∂
;Â:Â:∂ ∑&
m_materialReferenceStack
Á:Á:  8
.
Á:Á:8 9
Add
Á:Á:9 <
(
Á:Á:< ="
m_materialReferences
Á:Á:= Q
[
Á:Á:Q R$
m_currentMaterialIndex
Á:Á:R h
]
Á:Á:h i
)
Á:Á:i j
;
Á:Á:j k
}
Ë:Ë: 
}
È:È: 
else
Í:Í: 
return
Î:Î: "
false
Î:Î:# (
;
Î:Î:( ) 
m_currentFontAsset
Ì:Ì: *
=
Ì:Ì:+ ,
tempFont
Ì:Ì:- 5
;
Ì:Ì:5 6
return
Ô:Ô: 
true
Ô:Ô: #
;
Ô:Ô:# $
case
:: 
$num
:: 
:
::  
case
Ò:Ò: 
$num
Ò:Ò: 
:
Ò:Ò:  
{
Ú:Ú: 
MaterialReference
Û:Û: -
materialReference
Û:Û:. ?
=
Û:Û:@ A&
m_materialReferenceStack
Û:Û:B Z
.
Û:Û:Z [
Remove
Û:Û:[ a
(
Û:Û:a b
)
Û:Û:b c
;
Û:Û:c d 
m_currentFontAsset
ı:ı: .
=
ı:ı:/ 0
materialReference
ı:ı:1 B
.
ı:ı:B C
	fontAsset
ı:ı:C L
;
ı:ı:L M
m_currentMaterial
ˆ:ˆ: -
=
ˆ:ˆ:. /
materialReference
ˆ:ˆ:0 A
.
ˆ:ˆ:A B
material
ˆ:ˆ:B J
;
ˆ:ˆ:J K$
m_currentMaterialIndex
˜:˜: 2
=
˜:˜:3 4
materialReference
˜:˜:5 F
.
˜:˜:F G
index
˜:˜:G L
;
˜:˜:L M
return
˘:˘: "
true
˘:˘:# '
;
˘:˘:' (
}
˙:˙: 
case
˚:˚: 
$num
˚:˚: "
:
˚:˚:" #
case
¸:¸: 
$num
¸:¸: !
:
¸:¸:! "
materialHashCode
˝:˝: (
=
˝:˝:) *
m_xmlAttribute
˝:˝:+ 9
[
˝:˝:9 :
$num
˝:˝:: ;
]
˝:˝:; <
.
˝:˝:< =
valueHashCode
˝:˝:= J
;
˝:˝:J K
if
Ä;Ä; 
(
Ä;Ä; 
materialHashCode
Ä;Ä; ,
==
Ä;Ä;- /
$num
Ä;Ä;0 9
||
Ä;Ä;: <
materialHashCode
Ä;Ä;= M
==
Ä;Ä;N P
$num
Ä;Ä;Q Z
)
Ä;Ä;Z [
{
Å;Å; 
m_currentMaterial
Ö;Ö; -
=
Ö;Ö;. /"
m_materialReferences
Ö;Ö;0 D
[
Ö;Ö;D E
$num
Ö;Ö;E F
]
Ö;Ö;F G
.
Ö;Ö;G H
material
Ö;Ö;H P
;
Ö;Ö;P Q$
m_currentMaterialIndex
Ü;Ü; 2
=
Ü;Ü;3 4
$num
Ü;Ü;5 6
;
Ü;Ü;6 7&
m_materialReferenceStack
à;à; 4
.
à;à;4 5
Add
à;à;5 8
(
à;à;8 9"
m_materialReferences
à;à;9 M
[
à;à;M N
$num
à;à;N O
]
à;à;O P
)
à;à;P Q
;
à;à;Q R
return
ä;ä; "
true
ä;ä;# '
;
ä;ä;' (
}
ã;ã; 
if
è;è; 
(
è;è; &
MaterialReferenceManager
è;è; 4
.
è;è;4 5
TryGetMaterial
è;è;5 C
(
è;è;C D
materialHashCode
è;è;D T
,
è;è;T U
out
è;è;V Y
tempMaterial
è;è;Z f
)
è;è;f g
)
è;è;g h
{
ê;ê; 
m_currentMaterial
î;î; -
=
î;î;. /
tempMaterial
î;î;0 <
;
î;î;< =$
m_currentMaterialIndex
ñ;ñ; 2
=
ñ;ñ;3 4
MaterialReference
ñ;ñ;5 F
.
ñ;ñ;F G"
AddMaterialReference
ñ;ñ;G [
(
ñ;ñ;[ \
m_currentMaterial
ñ;ñ;\ m
,
ñ;ñ;m n!
m_currentFontAssetñ;ñ;o Å
,ñ;ñ;Å Ç
refñ;ñ;É Ü$
m_materialReferencesñ;ñ;á õ
,ñ;ñ;õ ú.
m_materialReferenceIndexLookupñ;ñ;ù ª
)ñ;ñ;ª º
;ñ;ñ;º Ω&
m_materialReferenceStack
ò;ò; 4
.
ò;ò;4 5
Add
ò;ò;5 8
(
ò;ò;8 9"
m_materialReferences
ò;ò;9 M
[
ò;ò;M N$
m_currentMaterialIndex
ò;ò;N d
]
ò;ò;d e
)
ò;ò;e f
;
ò;ò;f g
}
ô;ô; 
else
ö;ö; 
{
õ;õ; 
tempMaterial
ù;ù; (
=
ù;ù;) *
	Resources
ù;ù;+ 4
.
ù;ù;4 5
Load
ù;ù;5 9
<
ù;ù;9 :
Material
ù;ù;: B
>
ù;ù;B C
(
ù;ù;C D
TMP_Settings
ù;ù;D P
.
ù;ù;P Q"
defaultFontAssetPath
ù;ù;Q e
+
ù;ù;f g
new
ù;ù;h k
string
ù;ù;l r
(
ù;ù;r s
	m_htmlTag
ù;ù;s |
,
ù;ù;| }
m_xmlAttributeù;ù;~ å
[ù;ù;å ç
$numù;ù;ç é
]ù;ù;é è
.ù;ù;è ê
valueStartIndexù;ù;ê ü
,ù;ù;ü †
m_xmlAttributeù;ù;° Ø
[ù;ù;Ø ∞
$numù;ù;∞ ±
]ù;ù;± ≤
.ù;ù;≤ ≥
valueLengthù;ù;≥ æ
)ù;ù;æ ø
)ù;ù;ø ¿
;ù;ù;¿ ¡
if
ü;ü; 
(
ü;ü;  
tempMaterial
ü;ü;  ,
==
ü;ü;- /
null
ü;ü;0 4
)
ü;ü;4 5
return
†;†;  &
false
†;†;' ,
;
†;†;, -&
MaterialReferenceManager
¶;¶; 4
.
¶;¶;4 5
AddFontMaterial
¶;¶;5 D
(
¶;¶;D E
materialHashCode
¶;¶;E U
,
¶;¶;U V
tempMaterial
¶;¶;W c
)
¶;¶;c d
;
¶;¶;d e
m_currentMaterial
®;®; -
=
®;®;. /
tempMaterial
®;®;0 <
;
®;®;< =$
m_currentMaterialIndex
™;™; 2
=
™;™;3 4
MaterialReference
™;™;5 F
.
™;™;F G"
AddMaterialReference
™;™;G [
(
™;™;[ \
m_currentMaterial
™;™;\ m
,
™;™;m n!
m_currentFontAsset™;™;o Å
,™;™;Å Ç
ref™;™;É Ü$
m_materialReferences™;™;á õ
,™;™;õ ú.
m_materialReferenceIndexLookup™;™;ù ª
)™;™;ª º
;™;™;º Ω&
m_materialReferenceStack
¨;¨; 4
.
¨;¨;4 5
Add
¨;¨;5 8
(
¨;¨;8 9"
m_materialReferences
¨;¨;9 M
[
¨;¨;M N$
m_currentMaterialIndex
¨;¨;N d
]
¨;¨;d e
)
¨;¨;e f
;
¨;¨;f g
}
≠;≠; 
return
Æ;Æ; 
true
Æ;Æ; #
;
Æ;Æ;# $
case
Ø;Ø; 
$num
Ø;Ø; "
:
Ø;Ø;" #
case
∞;∞; 
$num
∞;∞; "
:
∞;∞;" #
{
±;±; 
MaterialReference
µ;µ; -
materialReference
µ;µ;. ?
=
µ;µ;@ A&
m_materialReferenceStack
µ;µ;B Z
.
µ;µ;Z [
Remove
µ;µ;[ a
(
µ;µ;a b
)
µ;µ;b c
;
µ;µ;c d
m_currentMaterial
∑;∑; -
=
∑;∑;. /
materialReference
∑;∑;0 A
.
∑;∑;A B
material
∑;∑;B J
;
∑;∑;J K$
m_currentMaterialIndex
∏;∏; 2
=
∏;∏;3 4
materialReference
∏;∏;5 F
.
∏;∏;F G
index
∏;∏;G L
;
∏;∏;L M
return
∫;∫; "
true
∫;∫;# '
;
∫;∫;' (
}
ª;ª; 
case
º;º; 
$num
º;º; 
:
º;º;  
case
Ω;Ω; 
$num
Ω;Ω; 
:
Ω;Ω;  
value
æ;æ; 
=
æ;æ; 
ConvertToFloat
æ;æ;  .
(
æ;æ;. /
	m_htmlTag
æ;æ;/ 8
,
æ;æ;8 9
m_xmlAttribute
æ;æ;: H
[
æ;æ;H I
$num
æ;æ;I J
]
æ;æ;J K
.
æ;æ;K L
valueStartIndex
æ;æ;L [
,
æ;æ;[ \
m_xmlAttribute
æ;æ;] k
[
æ;æ;k l
$num
æ;æ;l m
]
æ;æ;m n
.
æ;æ;n o
valueLength
æ;æ;o z
)
æ;æ;z {
;
æ;æ;{ |
if
¡;¡; 
(
¡;¡; 
value
¡;¡; !
==
¡;¡;" $
Int16
¡;¡;% *
.
¡;¡;* +
MinValue
¡;¡;+ 3
)
¡;¡;3 4
return
¡;¡;5 ;
false
¡;¡;< A
;
¡;¡;A B
switch
√;√; 
(
√;√;  
tagUnitType
√;√;  +
)
√;√;+ ,
{
ƒ;ƒ; 
case
≈;≈;  
TagUnitType
≈;≈;! ,
.
≈;≈;, -
Pixels
≈;≈;- 3
:
≈;≈;3 4

m_xAdvance
∆;∆;  *
+=
∆;∆;+ -
value
∆;∆;. 3
*
∆;∆;4 5
(
∆;∆;6 7
m_isOrthographic
∆;∆;7 G
?
∆;∆;H I
$num
∆;∆;J K
:
∆;∆;L M
$num
∆;∆;N R
)
∆;∆;R S
;
∆;∆;S T
return
«;«;  &
true
«;«;' +
;
«;«;+ ,
case
»;»;  
TagUnitType
»;»;! ,
.
»;»;, -
	FontUnits
»;»;- 6
:
»;»;6 7

m_xAdvance
…;…;  *
+=
…;…;+ -
value
…;…;. 3
*
…;…;4 5
(
…;…;6 7
m_isOrthographic
…;…;7 G
?
…;…;H I
$num
…;…;J K
:
…;…;L M
$num
…;…;N R
)
…;…;R S
*
…;…;T U
m_currentFontSize
…;…;V g
;
…;…;g h
return
 ; ;  &
true
 ; ;' +
;
 ; ;+ ,
case
À;À;  
TagUnitType
À;À;! ,
.
À;À;, -

Percentage
À;À;- 7
:
À;À;7 8
return
Õ;Õ;  &
false
Õ;Õ;' ,
;
Õ;Õ;, -
}
Œ;Œ; 
return
œ;œ; 
false
œ;œ; $
;
œ;œ;$ %
case
–;–; 
$num
–;–; 
:
–;–;  
case
—;—; 
$num
—;—; 
:
—;—;  
if
“;“; 
(
“;“; 
m_xmlAttribute
“;“; *
[
“;“;* +
$num
“;“;+ ,
]
“;“;, -
.
“;“;- .
valueLength
“;“;. 9
!=
“;“;: <
$num
“;“;= >
)
“;“;> ?
return
“;“;@ F
false
“;“;G L
;
“;“;L M
m_htmlColor
‘;‘; #
.
‘;‘;# $
a
‘;‘;$ %
=
‘;‘;& '
(
‘;‘;( )
byte
‘;‘;) -
)
‘;‘;- .
(
‘;‘;. /
HexToInt
‘;‘;/ 7
(
‘;‘;7 8
	m_htmlTag
‘;‘;8 A
[
‘;‘;A B
$num
‘;‘;B C
]
‘;‘;C D
)
‘;‘;D E
*
‘;‘;F G
$num
‘;‘;H J
+
‘;‘;K L
HexToInt
‘;‘;M U
(
‘;‘;U V
	m_htmlTag
‘;‘;V _
[
‘;‘;_ `
$num
‘;‘;` a
]
‘;‘;a b
)
‘;‘;b c
)
‘;‘;c d
;
‘;‘;d e
return
’;’; 
true
’;’; #
;
’;’;# $
case
◊;◊; 
$num
◊;◊;  
:
◊;◊;  !
return
ÿ;ÿ; 
false
ÿ;ÿ; $
;
ÿ;ÿ;$ %
case
Ÿ;Ÿ; 
$num
Ÿ;Ÿ; 
:
Ÿ;Ÿ; 
return
⁄;⁄; 
true
⁄;⁄; #
;
⁄;⁄;# $
case
€;€; 
$num
€;€; 
:
€;€; 
case
‹;‹; 
$num
‹;‹; 
:
‹;‹; 
if
›;›; 
(
›;›; 
m_isParsingText
›;›; +
&&
›;›;, .
!
›;›;/ 0,
m_isCalculatingPreferredValues
›;›;0 N
)
›;›;N O
{
ﬁ;ﬁ; 
int
ﬂ;ﬂ; 
index
ﬂ;ﬂ;  %
=
ﬂ;ﬂ;& '

m_textInfo
ﬂ;ﬂ;( 2
.
ﬂ;ﬂ;2 3
	linkCount
ﬂ;ﬂ;3 <
;
ﬂ;ﬂ;< =
if
·;·; 
(
·;·;  
index
·;·;  %
+
·;·;& '
$num
·;·;( )
>
·;·;* +

m_textInfo
·;·;, 6
.
·;·;6 7
linkInfo
·;·;7 ?
.
·;·;? @
Length
·;·;@ F
)
·;·;F G
TMP_TextInfo
‚;‚;  ,
.
‚;‚;, -
Resize
‚;‚;- 3
(
‚;‚;3 4
ref
‚;‚;4 7

m_textInfo
‚;‚;8 B
.
‚;‚;B C
linkInfo
‚;‚;C K
,
‚;‚;K L
index
‚;‚;M R
+
‚;‚;S T
$num
‚;‚;U V
)
‚;‚;V W
;
‚;‚;W X

m_textInfo
‰;‰; &
.
‰;‰;& '
linkInfo
‰;‰;' /
[
‰;‰;/ 0
index
‰;‰;0 5
]
‰;‰;5 6
.
‰;‰;6 7
textComponent
‰;‰;7 D
=
‰;‰;E F
this
‰;‰;G K
;
‰;‰;K L

m_textInfo
Â;Â; &
.
Â;Â;& '
linkInfo
Â;Â;' /
[
Â;Â;/ 0
index
Â;Â;0 5
]
Â;Â;5 6
.
Â;Â;6 7
hashCode
Â;Â;7 ?
=
Â;Â;@ A
m_xmlAttribute
Â;Â;B P
[
Â;Â;P Q
$num
Â;Â;Q R
]
Â;Â;R S
.
Â;Â;S T
valueHashCode
Â;Â;T a
;
Â;Â;a b

m_textInfo
Ê;Ê; &
.
Ê;Ê;& '
linkInfo
Ê;Ê;' /
[
Ê;Ê;/ 0
index
Ê;Ê;0 5
]
Ê;Ê;5 6
.
Ê;Ê;6 7)
linkTextfirstCharacterIndex
Ê;Ê;7 R
=
Ê;Ê;S T
m_characterCount
Ê;Ê;U e
;
Ê;Ê;e f

m_textInfo
Ë;Ë; &
.
Ë;Ë;& '
linkInfo
Ë;Ë;' /
[
Ë;Ë;/ 0
index
Ë;Ë;0 5
]
Ë;Ë;5 6
.
Ë;Ë;6 7'
linkIdFirstCharacterIndex
Ë;Ë;7 P
=
Ë;Ë;Q R

startIndex
Ë;Ë;S ]
+
Ë;Ë;^ _
m_xmlAttribute
Ë;Ë;` n
[
Ë;Ë;n o
$num
Ë;Ë;o p
]
Ë;Ë;p q
.
Ë;Ë;q r
valueStartIndexË;Ë;r Å
;Ë;Ë;Å Ç

m_textInfo
È;È; &
.
È;È;& '
linkInfo
È;È;' /
[
È;È;/ 0
index
È;È;0 5
]
È;È;5 6
.
È;È;6 7
linkIdLength
È;È;7 C
=
È;È;D E
m_xmlAttribute
È;È;F T
[
È;È;T U
$num
È;È;U V
]
È;È;V W
.
È;È;W X
valueLength
È;È;X c
;
È;È;c d

m_textInfo
Í;Í; &
.
Í;Í;& '
linkInfo
Í;Í;' /
[
Í;Í;/ 0
index
Í;Í;0 5
]
Í;Í;5 6
.
Í;Í;6 7
	SetLinkID
Í;Í;7 @
(
Í;Í;@ A
	m_htmlTag
Í;Í;A J
,
Í;Í;J K
m_xmlAttribute
Í;Í;L Z
[
Í;Í;Z [
$num
Í;Í;[ \
]
Í;Í;\ ]
.
Í;Í;] ^
valueStartIndex
Í;Í;^ m
,
Í;Í;m n
m_xmlAttribute
Í;Í;o }
[
Í;Í;} ~
$num
Í;Í;~ 
]Í;Í; Ä
.Í;Í;Ä Å
valueLengthÍ;Í;Å å
)Í;Í;å ç
;Í;Í;ç é
}
Î;Î; 
return
Ï;Ï; 
true
Ï;Ï; #
;
Ï;Ï;# $
case
Ì;Ì; 
$num
Ì;Ì; 
:
Ì;Ì;  
case
Ó;Ó; 
$num
Ó;Ó; 
:
Ó;Ó;  
if
Ô;Ô; 
(
Ô;Ô; 
m_isParsingText
Ô;Ô; +
&&
Ô;Ô;, .
!
Ô;Ô;/ 0,
m_isCalculatingPreferredValues
Ô;Ô;0 N
)
Ô;Ô;N O
{
;; 
if
Ò;Ò; 
(
Ò;Ò;  

m_textInfo
Ò;Ò;  *
.
Ò;Ò;* +
	linkCount
Ò;Ò;+ 4
<
Ò;Ò;5 6

m_textInfo
Ò;Ò;7 A
.
Ò;Ò;A B
linkInfo
Ò;Ò;B J
.
Ò;Ò;J K
Length
Ò;Ò;K Q
)
Ò;Ò;Q R
{
Ú;Ú; 

m_textInfo
Û;Û;  *
.
Û;Û;* +
linkInfo
Û;Û;+ 3
[
Û;Û;3 4

m_textInfo
Û;Û;4 >
.
Û;Û;> ?
	linkCount
Û;Û;? H
]
Û;Û;H I
.
Û;Û;I J
linkTextLength
Û;Û;J X
=
Û;Û;Y Z
m_characterCount
Û;Û;[ k
-
Û;Û;l m

m_textInfo
Û;Û;n x
.
Û;Û;x y
linkInfoÛ;Û;y Å
[Û;Û;Å Ç

m_textInfoÛ;Û;Ç å
.Û;Û;å ç
	linkCountÛ;Û;ç ñ
]Û;Û;ñ ó
.Û;Û;ó ò+
linkTextfirstCharacterIndexÛ;Û;ò ≥
;Û;Û;≥ ¥

m_textInfo
ı;ı;  *
.
ı;ı;* +
	linkCount
ı;ı;+ 4
+=
ı;ı;5 7
$num
ı;ı;8 9
;
ı;ı;9 :
}
ˆ;ˆ; 
}
˜;˜; 
return
¯;¯; 
true
¯;¯; #
;
¯;¯;# $
case
˘;˘; 
$num
˘;˘; 
:
˘;˘;  
case
˙;˙; 
$num
˙;˙; 
:
˙;˙;  
switch
˚;˚; 
(
˚;˚;  
m_xmlAttribute
˚;˚;  .
[
˚;˚;. /
$num
˚;˚;/ 0
]
˚;˚;0 1
.
˚;˚;1 2
valueHashCode
˚;˚;2 ?
)
˚;˚;? @
{
¸;¸; 
case
˝;˝;  
$num
˝;˝;! (
:
˝;˝;( )!
m_lineJustification
˛;˛;  3
=
˛;˛;4 5(
HorizontalAlignmentOptions
˛;˛;6 P
.
˛;˛;P Q
Left
˛;˛;Q U
;
˛;˛;U V&
m_lineJustificationStack
ˇ;ˇ;  8
.
ˇ;ˇ;8 9
Add
ˇ;ˇ;9 <
(
ˇ;ˇ;< =!
m_lineJustification
ˇ;ˇ;= P
)
ˇ;ˇ;P Q
;
ˇ;ˇ;Q R
return
Ä<Ä<  &
true
Ä<Ä<' +
;
Ä<Ä<+ ,
case
Å<Å<  
$num
Å<Å<! *
:
Å<Å<* +!
m_lineJustification
Ç<Ç<  3
=
Ç<Ç<4 5(
HorizontalAlignmentOptions
Ç<Ç<6 P
.
Ç<Ç<P Q
Right
Ç<Ç<Q V
;
Ç<Ç<V W&
m_lineJustificationStack
É<É<  8
.
É<É<8 9
Add
É<É<9 <
(
É<É<< =!
m_lineJustification
É<É<= P
)
É<É<P Q
;
É<É<Q R
return
Ñ<Ñ<  &
true
Ñ<Ñ<' +
;
Ñ<Ñ<+ ,
case
Ö<Ö<  
-
Ö<Ö<! "
$num
Ö<Ö<" +
:
Ö<Ö<+ ,!
m_lineJustification
Ü<Ü<  3
=
Ü<Ü<4 5(
HorizontalAlignmentOptions
Ü<Ü<6 P
.
Ü<Ü<P Q
Center
Ü<Ü<Q W
;
Ü<Ü<W X&
m_lineJustificationStack
á<á<  8
.
á<á<8 9
Add
á<á<9 <
(
á<á<< =!
m_lineJustification
á<á<= P
)
á<á<P Q
;
á<á<Q R
return
à<à<  &
true
à<à<' +
;
à<à<+ ,
case
â<â<  
-
â<â<! "
$num
â<â<" +
:
â<â<+ ,!
m_lineJustification
ä<ä<  3
=
ä<ä<4 5(
HorizontalAlignmentOptions
ä<ä<6 P
.
ä<ä<P Q
	Justified
ä<ä<Q Z
;
ä<ä<Z [&
m_lineJustificationStack
ã<ã<  8
.
ã<ã<8 9
Add
ã<ã<9 <
(
ã<ã<< =!
m_lineJustification
ã<ã<= P
)
ã<ã<P Q
;
ã<ã<Q R
return
å<å<  &
true
å<å<' +
;
å<å<+ ,
case
ç<ç<  
$num
ç<ç<! *
:
ç<ç<* +!
m_lineJustification
é<é<  3
=
é<é<4 5(
HorizontalAlignmentOptions
é<é<6 P
.
é<é<P Q
Flush
é<é<Q V
;
é<é<V W&
m_lineJustificationStack
è<è<  8
.
è<è<8 9
Add
è<è<9 <
(
è<è<< =!
m_lineJustification
è<è<= P
)
è<è<P Q
;
è<è<Q R
return
ê<ê<  &
true
ê<ê<' +
;
ê<ê<+ ,
}
ë<ë< 
return
í<í< 
false
í<í< $
;
í<í<$ %
case
ì<ì< 
$num
ì<ì<  
:
ì<ì<  !
case
î<î< 
$num
î<î< 
:
î<î<  !
m_lineJustification
ï<ï< +
=
ï<ï<, -&
m_lineJustificationStack
ï<ï<. F
.
ï<ï<F G
Remove
ï<ï<G M
(
ï<ï<M N
)
ï<ï<N O
;
ï<ï<O P
return
ñ<ñ< 
true
ñ<ñ< #
;
ñ<ñ<# $
case
ó<ó< 
$num
ó<ó< 
:
ó<ó<  
case
ò<ò< 
$num
ò<ò< 
:
ò<ò<  
value
ô<ô< 
=
ô<ô< 
ConvertToFloat
ô<ô<  .
(
ô<ô<. /
	m_htmlTag
ô<ô</ 8
,
ô<ô<8 9
m_xmlAttribute
ô<ô<: H
[
ô<ô<H I
$num
ô<ô<I J
]
ô<ô<J K
.
ô<ô<K L
valueStartIndex
ô<ô<L [
,
ô<ô<[ \
m_xmlAttribute
ô<ô<] k
[
ô<ô<k l
$num
ô<ô<l m
]
ô<ô<m n
.
ô<ô<n o
valueLength
ô<ô<o z
)
ô<ô<z {
;
ô<ô<{ |
if
ú<ú< 
(
ú<ú< 
value
ú<ú< !
==
ú<ú<" $
Int16
ú<ú<% *
.
ú<ú<* +
MinValue
ú<ú<+ 3
)
ú<ú<3 4
return
ú<ú<5 ;
false
ú<ú<< A
;
ú<ú<A B
switch
û<û< 
(
û<û<  
tagUnitType
û<û<  +
)
û<û<+ ,
{
ü<ü< 
case
†<†<  
TagUnitType
†<†<! ,
.
†<†<, -
Pixels
†<†<- 3
:
†<†<3 4
m_width
°<°<  '
=
°<°<( )
value
°<°<* /
*
°<°<0 1
(
°<°<2 3
m_isOrthographic
°<°<3 C
?
°<°<D E
$num
°<°<F G
:
°<°<H I
$num
°<°<J N
)
°<°<N O
;
°<°<O P
break
¢<¢<  %
;
¢<¢<% &
case
£<£<  
TagUnitType
£<£<! ,
.
£<£<, -
	FontUnits
£<£<- 6
:
£<£<6 7
return
§<§<  &
false
§<§<' ,
;
§<§<, -
case
¶<¶<  
TagUnitType
¶<¶<! ,
.
¶<¶<, -

Percentage
¶<¶<- 7
:
¶<¶<7 8
m_width
ß<ß<  '
=
ß<ß<( )
m_marginWidth
ß<ß<* 7
*
ß<ß<8 9
value
ß<ß<: ?
/
ß<ß<@ A
$num
ß<ß<B E
;
ß<ß<E F
break
®<®<  %
;
®<®<% &
}
©<©< 
return
™<™< 
true
™<™< #
;
™<™<# $
case
´<´< 
$num
´<´<  
:
´<´<  !
case
¨<¨< 
$num
¨<¨<  
:
¨<¨<  !
m_width
≠<≠< 
=
≠<≠<  !
-
≠<≠<" #
$num
≠<≠<# $
;
≠<≠<$ %
return
Æ<Æ< 
true
Æ<Æ< #
;
Æ<Æ<# $
case
÷<÷< 
$num
÷<÷< 
:
÷<÷<  
case
◊<◊< 
$num
◊<◊< 
:
◊<◊<  
if
Ÿ<Ÿ< 
(
Ÿ<Ÿ< 
	m_htmlTag
Ÿ<Ÿ< %
[
Ÿ<Ÿ<% &
$num
Ÿ<Ÿ<& '
]
Ÿ<Ÿ<' (
==
Ÿ<Ÿ<) +
$num
Ÿ<Ÿ<, .
&&
Ÿ<Ÿ</ 1
tagCharCount
Ÿ<Ÿ<2 >
==
Ÿ<Ÿ<? A
$num
Ÿ<Ÿ<B D
)
Ÿ<Ÿ<D E
{
⁄<⁄< 
m_htmlColor
€<€< '
=
€<€<( )
HexCharsToColor
€<€<* 9
(
€<€<9 :
	m_htmlTag
€<€<: C
,
€<€<C D
tagCharCount
€<€<E Q
)
€<€<Q R
;
€<€<R S
m_colorStack
‹<‹< (
.
‹<‹<( )
Add
‹<‹<) ,
(
‹<‹<, -
m_htmlColor
‹<‹<- 8
)
‹<‹<8 9
;
‹<‹<9 :
return
›<›< "
true
›<›<# '
;
›<›<' (
}
ﬁ<ﬁ< 
else
‡<‡< 
if
‡<‡< 
(
‡<‡<  !
	m_htmlTag
‡<‡<! *
[
‡<‡<* +
$num
‡<‡<+ ,
]
‡<‡<, -
==
‡<‡<. 0
$num
‡<‡<1 3
&&
‡<‡<4 6
tagCharCount
‡<‡<7 C
==
‡<‡<D F
$num
‡<‡<G I
)
‡<‡<I J
{
·<·< 
m_htmlColor
‚<‚< '
=
‚<‚<( )
HexCharsToColor
‚<‚<* 9
(
‚<‚<9 :
	m_htmlTag
‚<‚<: C
,
‚<‚<C D
tagCharCount
‚<‚<E Q
)
‚<‚<Q R
;
‚<‚<R S
m_colorStack
„<„< (
.
„<„<( )
Add
„<„<) ,
(
„<„<, -
m_htmlColor
„<„<- 8
)
„<„<8 9
;
„<„<9 :
return
‰<‰< "
true
‰<‰<# '
;
‰<‰<' (
}
Â<Â< 
if
Á<Á< 
(
Á<Á< 
	m_htmlTag
Á<Á< %
[
Á<Á<% &
$num
Á<Á<& '
]
Á<Á<' (
==
Á<Á<) +
$num
Á<Á<, .
&&
Á<Á</ 1
tagCharCount
Á<Á<2 >
==
Á<Á<? A
$num
Á<Á<B D
)
Á<Á<D E
{
Ë<Ë< 
m_htmlColor
È<È< '
=
È<È<( )
HexCharsToColor
È<È<* 9
(
È<È<9 :
	m_htmlTag
È<È<: C
,
È<È<C D
tagCharCount
È<È<E Q
)
È<È<Q R
;
È<È<R S
m_colorStack
Í<Í< (
.
Í<Í<( )
Add
Í<Í<) ,
(
Í<Í<, -
m_htmlColor
Í<Í<- 8
)
Í<Í<8 9
;
Í<Í<9 :
return
Î<Î< "
true
Î<Î<# '
;
Î<Î<' (
}
Ï<Ï< 
else
Ó<Ó< 
if
Ó<Ó< 
(
Ó<Ó<  !
	m_htmlTag
Ó<Ó<! *
[
Ó<Ó<* +
$num
Ó<Ó<+ ,
]
Ó<Ó<, -
==
Ó<Ó<. 0
$num
Ó<Ó<1 3
&&
Ó<Ó<4 6
tagCharCount
Ó<Ó<7 C
==
Ó<Ó<D F
$num
Ó<Ó<G I
)
Ó<Ó<I J
{
Ô<Ô< 
m_htmlColor
<< '
=
<<( )
HexCharsToColor
<<* 9
(
<<9 :
	m_htmlTag
<<: C
,
<<C D
tagCharCount
<<E Q
)
<<Q R
;
<<R S
m_colorStack
Ò<Ò< (
.
Ò<Ò<( )
Add
Ò<Ò<) ,
(
Ò<Ò<, -
m_htmlColor
Ò<Ò<- 8
)
Ò<Ò<8 9
;
Ò<Ò<9 :
return
Ú<Ú< "
true
Ú<Ú<# '
;
Ú<Ú<' (
}
Û<Û< 
switch
ˆ<ˆ< 
(
ˆ<ˆ<  
m_xmlAttribute
ˆ<ˆ<  .
[
ˆ<ˆ<. /
$num
ˆ<ˆ</ 0
]
ˆ<ˆ<0 1
.
ˆ<ˆ<1 2
valueHashCode
ˆ<ˆ<2 ?
)
ˆ<ˆ<? @
{
˜<˜< 
case
¯<¯<  
$num
¯<¯<! '
:
¯<¯<' (
m_htmlColor
˘<˘<  +
=
˘<˘<, -
Color
˘<˘<. 3
.
˘<˘<3 4
red
˘<˘<4 7
;
˘<˘<7 8
m_colorStack
˙<˙<  ,
.
˙<˙<, -
Add
˙<˙<- 0
(
˙<˙<0 1
m_htmlColor
˙<˙<1 <
)
˙<˙<< =
;
˙<˙<= >
return
˚<˚<  &
true
˚<˚<' +
;
˚<˚<+ ,
case
¸<¸<  
-
¸<¸<! "
$num
¸<¸<" +
:
¸<¸<+ ,
m_htmlColor
˝<˝<  +
=
˝<˝<, -
new
˝<˝<. 1
Color32
˝<˝<2 9
(
˝<˝<9 :
$num
˝<˝<: =
,
˝<˝<= >
$num
˝<˝<? B
,
˝<˝<B C
$num
˝<˝<D G
,
˝<˝<G H
$num
˝<˝<I L
)
˝<˝<L M
;
˝<˝<M N
m_colorStack
˛<˛<  ,
.
˛<˛<, -
Add
˛<˛<- 0
(
˛<˛<0 1
m_htmlColor
˛<˛<1 <
)
˛<˛<< =
;
˛<˛<= >
return
ˇ<ˇ<  &
true
ˇ<ˇ<' +
;
ˇ<ˇ<+ ,
case
Ä=Ä=  
$num
Ä=Ä=! (
:
Ä=Ä=( )
m_htmlColor
Å=Å=  +
=
Å=Å=, -
Color
Å=Å=. 3
.
Å=Å=3 4
blue
Å=Å=4 8
;
Å=Å=8 9
m_colorStack
Ç=Ç=  ,
.
Ç=Ç=, -
Add
Ç=Ç=- 0
(
Ç=Ç=0 1
m_htmlColor
Ç=Ç=1 <
)
Ç=Ç=< =
;
Ç=Ç== >
return
É=É=  &
true
É=É=' +
;
É=É=+ ,
case
Ñ=Ñ=  
$num
Ñ=Ñ=! (
:
Ñ=Ñ=( )
m_htmlColor
Ö=Ö=  +
=
Ö=Ö=, -
new
Ö=Ö=. 1
Color32
Ö=Ö=2 9
(
Ö=Ö=9 :
$num
Ö=Ö=: =
,
Ö=Ö== >
$num
Ö=Ö=? B
,
Ö=Ö=B C
$num
Ö=Ö=D G
,
Ö=Ö=G H
$num
Ö=Ö=I L
)
Ö=Ö=L M
;
Ö=Ö=M N
m_colorStack
Ü=Ü=  ,
.
Ü=Ü=, -
Add
Ü=Ü=- 0
(
Ü=Ü=0 1
m_htmlColor
Ü=Ü=1 <
)
Ü=Ü=< =
;
Ü=Ü== >
return
á=á=  &
true
á=á=' +
;
á=á=+ ,
case
à=à=  
$num
à=à=! *
:
à=à=* +
m_htmlColor
â=â=  +
=
â=â=, -
Color
â=â=. 3
.
â=â=3 4
black
â=â=4 9
;
â=â=9 :
m_colorStack
ä=ä=  ,
.
ä=ä=, -
Add
ä=ä=- 0
(
ä=ä=0 1
m_htmlColor
ä=ä=1 <
)
ä=ä=< =
;
ä=ä== >
return
ã=ã=  &
true
ã=ã=' +
;
ã=ã=+ ,
case
å=å=  
$num
å=å=! *
:
å=å=* +
m_htmlColor
ç=ç=  +
=
ç=ç=, -
Color
ç=ç=. 3
.
ç=ç=3 4
green
ç=ç=4 9
;
ç=ç=9 :
m_colorStack
é=é=  ,
.
é=é=, -
Add
é=é=- 0
(
é=é=0 1
m_htmlColor
é=é=1 <
)
é=é=< =
;
é=é== >
return
è=è=  &
true
è=è=' +
;
è=è=+ ,
case
ê=ê=  
$num
ê=ê=! *
:
ê=ê=* +
m_htmlColor
ë=ë=  +
=
ë=ë=, -
Color
ë=ë=. 3
.
ë=ë=3 4
white
ë=ë=4 9
;
ë=ë=9 :
m_colorStack
í=í=  ,
.
í=í=, -
Add
í=í=- 0
(
í=í=0 1
m_htmlColor
í=í=1 <
)
í=í=< =
;
í=í== >
return
ì=ì=  &
true
ì=ì=' +
;
ì=ì=+ ,
case
î=î=  
$num
î=î=! )
:
î=î=) *
m_htmlColor
ï=ï=  +
=
ï=ï=, -
new
ï=ï=. 1
Color32
ï=ï=2 9
(
ï=ï=9 :
$num
ï=ï=: =
,
ï=ï== >
$num
ï=ï=? B
,
ï=ï=B C
$num
ï=ï=D E
,
ï=ï=E F
$num
ï=ï=G J
)
ï=ï=J K
;
ï=ï=K L
m_colorStack
ñ=ñ=  ,
.
ñ=ñ=, -
Add
ñ=ñ=- 0
(
ñ=ñ=0 1
m_htmlColor
ñ=ñ=1 <
)
ñ=ñ=< =
;
ñ=ñ== >
return
ó=ó=  &
true
ó=ó=' +
;
ó=ó=+ ,
case
ò=ò=  
-
ò=ò=! "
$num
ò=ò=" *
:
ò=ò=* +
m_htmlColor
ô=ô=  +
=
ô=ô=, -
new
ô=ô=. 1
Color32
ô=ô=2 9
(
ô=ô=9 :
$num
ô=ô=: =
,
ô=ô== >
$num
ô=ô=? A
,
ô=ô=A B
$num
ô=ô=C F
,
ô=ô=F G
$num
ô=ô=H K
)
ô=ô=K L
;
ô=ô=L M
m_colorStack
ö=ö=  ,
.
ö=ö=, -
Add
ö=ö=- 0
(
ö=ö=0 1
m_htmlColor
ö=ö=1 <
)
ö=ö=< =
;
ö=ö== >
return
õ=õ=  &
true
õ=õ=' +
;
õ=õ=+ ,
case
ú=ú=  
$num
ú=ú=! *
:
ú=ú=* +
m_htmlColor
ù=ù=  +
=
ù=ù=, -
Color
ù=ù=. 3
.
ù=ù=3 4
yellow
ù=ù=4 :
;
ù=ù=: ;
m_colorStack
û=û=  ,
.
û=û=, -
Add
û=û=- 0
(
û=û=0 1
m_htmlColor
û=û=1 <
)
û=û=< =
;
û=û== >
return
ü=ü=  &
true
ü=ü=' +
;
ü=ü=+ ,
}
†=†= 
return
°=°= 
false
°=°= $
;
°=°=$ %
case
£=£= 
$num
£=£= "
:
£=£=" #
case
§=§= 
$num
§=§= !
:
§=§=! "
int
•=•= $
gradientPresetHashCode
•=•= 2
=
•=•=3 4
m_xmlAttribute
•=•=5 C
[
•=•=C D
$num
•=•=D E
]
•=•=E F
.
•=•=F G
valueHashCode
•=•=G T
;
•=•=T U
TMP_ColorGradient
¶=¶= )%
tempColorGradientPreset
¶=¶=* A
;
¶=¶=A B
if
©=©= 
(
©=©= &
MaterialReferenceManager
©=©= 4
.
©=©=4 5'
TryGetColorGradientPreset
©=©=5 N
(
©=©=N O$
gradientPresetHashCode
©=©=O e
,
©=©=e f
out
©=©=g j&
tempColorGradientPreset©=©=k Ç
)©=©=Ç É
)©=©=É Ñ
{
™=™= #
m_colorGradientPreset
´=´= 1
=
´=´=2 3%
tempColorGradientPreset
´=´=4 K
;
´=´=K L
}
¨=¨= 
else
≠=≠= 
{
Æ=Æ= 
if
∞=∞= 
(
∞=∞=  %
tempColorGradientPreset
∞=∞=  7
==
∞=∞=8 :
null
∞=∞=; ?
)
∞=∞=? @
{
±=±= %
tempColorGradientPreset
≤=≤=  7
=
≤=≤=8 9
	Resources
≤=≤=: C
.
≤=≤=C D
Load
≤=≤=D H
<
≤=≤=H I
TMP_ColorGradient
≤=≤=I Z
>
≤=≤=Z [
(
≤=≤=[ \
TMP_Settings
≤=≤=\ h
.
≤=≤=h i.
defaultColorGradientPresetsPath≤=≤=i à
+≤=≤=â ä
new≤=≤=ã é
string≤=≤=è ï
(≤=≤=ï ñ
	m_htmlTag≤=≤=ñ ü
,≤=≤=ü †
m_xmlAttribute≤=≤=° Ø
[≤=≤=Ø ∞
$num≤=≤=∞ ±
]≤=≤=± ≤
.≤=≤=≤ ≥
valueStartIndex≤=≤=≥ ¬
,≤=≤=¬ √
m_xmlAttribute≤=≤=ƒ “
[≤=≤=“ ”
$num≤=≤=” ‘
]≤=≤=‘ ’
.≤=≤=’ ÷
valueLength≤=≤=÷ ·
)≤=≤=· ‚
)≤=≤=‚ „
;≤=≤=„ ‰
}
≥=≥= 
if
µ=µ= 
(
µ=µ=  %
tempColorGradientPreset
µ=µ=  7
==
µ=µ=8 :
null
µ=µ=; ?
)
µ=µ=? @
return
∂=∂=  &
false
∂=∂=' ,
;
∂=∂=, -&
MaterialReferenceManager
∏=∏= 4
.
∏=∏=4 5$
AddColorGradientPreset
∏=∏=5 K
(
∏=∏=K L$
gradientPresetHashCode
∏=∏=L b
,
∏=∏=b c%
tempColorGradientPreset
∏=∏=d {
)
∏=∏={ |
;
∏=∏=| }#
m_colorGradientPreset
π=π= 1
=
π=π=2 3%
tempColorGradientPreset
π=π=4 K
;
π=π=K L
}
∫=∫= +
m_colorGradientPresetIsTinted
º=º= 5
=
º=º=6 7
false
º=º=8 =
;
º=º== >
for
ø=ø= 
(
ø=ø= 
int
ø=ø=  
i
ø=ø=! "
=
ø=ø=# $
$num
ø=ø=% &
;
ø=ø=& '
i
ø=ø=( )
<
ø=ø=* +
m_xmlAttribute
ø=ø=, :
.
ø=ø=: ;
Length
ø=ø=; A
&&
ø=ø=B D
m_xmlAttribute
ø=ø=E S
[
ø=ø=S T
i
ø=ø=T U
]
ø=ø=U V
.
ø=ø=V W
nameHashCode
ø=ø=W c
!=
ø=ø=d f
$num
ø=ø=g h
;
ø=ø=h i
i
ø=ø=j k
++
ø=ø=k m
)
ø=ø=m n
{
¿=¿= 
int
¬=¬= 
nameHashCode
¬=¬=  ,
=
¬=¬=- .
m_xmlAttribute
¬=¬=/ =
[
¬=¬== >
i
¬=¬=> ?
]
¬=¬=? @
.
¬=¬=@ A
nameHashCode
¬=¬=A M
;
¬=¬=M N
switch
ƒ=ƒ= "
(
ƒ=ƒ=# $
nameHashCode
ƒ=ƒ=$ 0
)
ƒ=ƒ=0 1
{
≈=≈= 
case
∆=∆=  $
$num
∆=∆=% *
:
∆=∆=* +
case
«=«=  $
$num
«=«=% *
:
«=«=* ++
m_colorGradientPresetIsTinted
»=»=$ A
=
»=»=B C
ConvertToFloat
»=»=D R
(
»=»=R S
	m_htmlTag
»=»=S \
,
»=»=\ ]
m_xmlAttribute
»=»=^ l
[
»=»=l m
i
»=»=m n
]
»=»=n o
.
»=»=o p
valueStartIndex
»=»=p 
,»=»= Ä
m_xmlAttribute»=»=Å è
[»=»=è ê
i»=»=ê ë
]»=»=ë í
.»=»=í ì
valueLength»=»=ì û
)»=»=û ü
!=»=»=† ¢
$num»=»=£ §
;»=»=§ •
break
…=…=$ )
;
…=…=) *
}
 = = 
}
À=À= "
m_colorGradientStack
Õ=Õ= ,
.
Õ=Õ=, -
Add
Õ=Õ=- 0
(
Õ=Õ=0 1#
m_colorGradientPreset
Õ=Õ=1 F
)
Õ=Õ=F G
;
Õ=Õ=G H
return
—=—= 
true
—=—= #
;
—=—=# $
case
”=”= 
$num
”=”= "
:
”=”=" #
case
‘=‘= 
$num
‘=‘= "
:
‘=‘=" ##
m_colorGradientPreset
’=’= -
=
’=’=. /"
m_colorGradientStack
’=’=0 D
.
’=’=D E
Remove
’=’=E K
(
’=’=K L
)
’=’=L M
;
’=’=M N
return
÷=÷= 
true
÷=÷= #
;
÷=÷=# $
case
ÿ=ÿ= 
$num
ÿ=ÿ=  
:
ÿ=ÿ=  !
case
Ÿ=Ÿ= 
$num
Ÿ=Ÿ=  
:
Ÿ=Ÿ=  !
value
⁄=⁄= 
=
⁄=⁄= 
ConvertToFloat
⁄=⁄=  .
(
⁄=⁄=. /
	m_htmlTag
⁄=⁄=/ 8
,
⁄=⁄=8 9
m_xmlAttribute
⁄=⁄=: H
[
⁄=⁄=H I
$num
⁄=⁄=I J
]
⁄=⁄=J K
.
⁄=⁄=K L
valueStartIndex
⁄=⁄=L [
,
⁄=⁄=[ \
m_xmlAttribute
⁄=⁄=] k
[
⁄=⁄=k l
$num
⁄=⁄=l m
]
⁄=⁄=m n
.
⁄=⁄=n o
valueLength
⁄=⁄=o z
)
⁄=⁄=z {
;
⁄=⁄={ |
if
›=›= 
(
›=›= 
value
›=›= !
==
›=›=" $
Int16
›=›=% *
.
›=›=* +
MinValue
›=›=+ 3
)
›=›=3 4
return
›=›=5 ;
false
›=›=< A
;
›=›=A B
switch
ﬂ=ﬂ= 
(
ﬂ=ﬂ=  
tagUnitType
ﬂ=ﬂ=  +
)
ﬂ=ﬂ=+ ,
{
‡=‡= 
case
·=·=  
TagUnitType
·=·=! ,
.
·=·=, -
Pixels
·=·=- 3
:
·=·=3 4

m_cSpacing
‚=‚=  *
=
‚=‚=+ ,
value
‚=‚=- 2
*
‚=‚=3 4
(
‚=‚=5 6
m_isOrthographic
‚=‚=6 F
?
‚=‚=G H
$num
‚=‚=I J
:
‚=‚=K L
$num
‚=‚=M Q
)
‚=‚=Q R
;
‚=‚=R S
break
„=„=  %
;
„=„=% &
case
‰=‰=  
TagUnitType
‰=‰=! ,
.
‰=‰=, -
	FontUnits
‰=‰=- 6
:
‰=‰=6 7

m_cSpacing
Â=Â=  *
=
Â=Â=+ ,
value
Â=Â=- 2
*
Â=Â=3 4
(
Â=Â=5 6
m_isOrthographic
Â=Â=6 F
?
Â=Â=G H
$num
Â=Â=I J
:
Â=Â=K L
$num
Â=Â=M Q
)
Â=Â=Q R
*
Â=Â=S T
m_currentFontSize
Â=Â=U f
;
Â=Â=f g
break
Ê=Ê=  %
;
Ê=Ê=% &
case
Á=Á=  
TagUnitType
Á=Á=! ,
.
Á=Á=, -

Percentage
Á=Á=- 7
:
Á=Á=7 8
return
Ë=Ë=  &
false
Ë=Ë=' ,
;
Ë=Ë=, -
}
È=È= 
return
Í=Í= 
true
Í=Í= #
;
Í=Í=# $
case
Î=Î= 
$num
Î=Î=  
:
Î=Î=  !
case
Ï=Ï= 
$num
Ï=Ï=  
:
Ï=Ï=  !
if
Ì=Ì= 
(
Ì=Ì= 
!
Ì=Ì= 
m_isParsingText
Ì=Ì= ,
)
Ì=Ì=, -
return
Ì=Ì=. 4
true
Ì=Ì=5 9
;
Ì=Ì=9 :
if
== 
(
== 
m_characterCount
== ,
>
==- .
$num
==/ 0
)
==0 1
{
Ò=Ò= 

m_xAdvance
Ú=Ú= &
-=
Ú=Ú=' )

m_cSpacing
Ú=Ú=* 4
;
Ú=Ú=4 5

m_textInfo
Û=Û= &
.
Û=Û=& '
characterInfo
Û=Û=' 4
[
Û=Û=4 5
m_characterCount
Û=Û=5 E
-
Û=Û=F G
$num
Û=Û=H I
]
Û=Û=I J
.
Û=Û=J K
xAdvance
Û=Û=K S
=
Û=Û=T U

m_xAdvance
Û=Û=V `
;
Û=Û=` a
}
Ù=Ù= 

m_cSpacing
ı=ı= "
=
ı=ı=# $
$num
ı=ı=% &
;
ı=ı=& '
return
ˆ=ˆ= 
true
ˆ=ˆ= #
;
ˆ=ˆ=# $
case
˜=˜= 
$num
˜=˜=  
:
˜=˜=  !
case
¯=¯= 
$num
¯=¯=  
:
¯=¯=  !
value
˘=˘= 
=
˘=˘= 
ConvertToFloat
˘=˘=  .
(
˘=˘=. /
	m_htmlTag
˘=˘=/ 8
,
˘=˘=8 9
m_xmlAttribute
˘=˘=: H
[
˘=˘=H I
$num
˘=˘=I J
]
˘=˘=J K
.
˘=˘=K L
valueStartIndex
˘=˘=L [
,
˘=˘=[ \
m_xmlAttribute
˘=˘=] k
[
˘=˘=k l
$num
˘=˘=l m
]
˘=˘=m n
.
˘=˘=n o
valueLength
˘=˘=o z
)
˘=˘=z {
;
˘=˘={ |
if
¸=¸= 
(
¸=¸= 
value
¸=¸= !
==
¸=¸=" $
Int16
¸=¸=% *
.
¸=¸=* +
MinValue
¸=¸=+ 3
)
¸=¸=3 4
return
¸=¸=5 ;
false
¸=¸=< A
;
¸=¸=A B
switch
˛=˛= 
(
˛=˛=  
tagUnitType
˛=˛=  +
)
˛=˛=+ ,
{
ˇ=ˇ= 
case
Ä>Ä>  
TagUnitType
Ä>Ä>! ,
.
Ä>Ä>, -
Pixels
Ä>Ä>- 3
:
Ä>Ä>3 4
m_monoSpacing
Å>Å>  -
=
Å>Å>. /
value
Å>Å>0 5
*
Å>Å>6 7
(
Å>Å>8 9
m_isOrthographic
Å>Å>9 I
?
Å>Å>J K
$num
Å>Å>L M
:
Å>Å>N O
$num
Å>Å>P T
)
Å>Å>T U
;
Å>Å>U V
break
Ç>Ç>  %
;
Ç>Ç>% &
case
É>É>  
TagUnitType
É>É>! ,
.
É>É>, -
	FontUnits
É>É>- 6
:
É>É>6 7
m_monoSpacing
Ñ>Ñ>  -
=
Ñ>Ñ>. /
value
Ñ>Ñ>0 5
*
Ñ>Ñ>6 7
(
Ñ>Ñ>8 9
m_isOrthographic
Ñ>Ñ>9 I
?
Ñ>Ñ>J K
$num
Ñ>Ñ>L M
:
Ñ>Ñ>N O
$num
Ñ>Ñ>P T
)
Ñ>Ñ>T U
*
Ñ>Ñ>V W
m_currentFontSize
Ñ>Ñ>X i
;
Ñ>Ñ>i j
break
Ö>Ö>  %
;
Ö>Ö>% &
case
Ü>Ü>  
TagUnitType
Ü>Ü>! ,
.
Ü>Ü>, -

Percentage
Ü>Ü>- 7
:
Ü>Ü>7 8
return
á>á>  &
false
á>á>' ,
;
á>á>, -
}
à>à> 
return
â>â> 
true
â>â> #
;
â>â># $
case
ä>ä> 
$num
ä>ä>  
:
ä>ä>  !
case
ã>ã> 
$num
ã>ã>  
:
ã>ã>  !
m_monoSpacing
å>å> %
=
å>å>& '
$num
å>å>( )
;
å>å>) *
return
ç>ç> 
true
ç>ç> #
;
ç>ç># $
case
é>é> 
$num
é>é> 
:
é>é>  
return
è>è> 
false
è>è> $
;
è>è>$ %
case
ê>ê> 
$num
ê>ê>  
:
ê>ê>  !
case
ë>ë> 
$num
ë>ë> 
:
ë>ë>  
m_htmlColor
í>í> #
=
í>í>$ %
m_colorStack
í>í>& 2
.
í>í>2 3
Remove
í>í>3 9
(
í>í>9 :
)
í>í>: ;
;
í>í>; <
return
ì>ì> 
true
ì>ì> #
;
ì>ì># $
case
î>î> 
$num
î>î>  
:
î>î>  !
case
ï>ï> 
$num
ï>ï>  
:
ï>ï>  !
value
ñ>ñ> 
=
ñ>ñ> 
ConvertToFloat
ñ>ñ>  .
(
ñ>ñ>. /
	m_htmlTag
ñ>ñ>/ 8
,
ñ>ñ>8 9
m_xmlAttribute
ñ>ñ>: H
[
ñ>ñ>H I
$num
ñ>ñ>I J
]
ñ>ñ>J K
.
ñ>ñ>K L
valueStartIndex
ñ>ñ>L [
,
ñ>ñ>[ \
m_xmlAttribute
ñ>ñ>] k
[
ñ>ñ>k l
$num
ñ>ñ>l m
]
ñ>ñ>m n
.
ñ>ñ>n o
valueLength
ñ>ñ>o z
)
ñ>ñ>z {
;
ñ>ñ>{ |
if
ô>ô> 
(
ô>ô> 
value
ô>ô> !
==
ô>ô>" $
Int16
ô>ô>% *
.
ô>ô>* +
MinValue
ô>ô>+ 3
)
ô>ô>3 4
return
ô>ô>5 ;
false
ô>ô>< A
;
ô>ô>A B
switch
õ>õ> 
(
õ>õ>  
tagUnitType
õ>õ>  +
)
õ>õ>+ ,
{
ú>ú> 
case
ù>ù>  
TagUnitType
ù>ù>! ,
.
ù>ù>, -
Pixels
ù>ù>- 3
:
ù>ù>3 4

tag_Indent
û>û>  *
=
û>û>+ ,
value
û>û>- 2
*
û>û>3 4
(
û>û>5 6
m_isOrthographic
û>û>6 F
?
û>û>G H
$num
û>û>I J
:
û>û>K L
$num
û>û>M Q
)
û>û>Q R
;
û>û>R S
break
ü>ü>  %
;
ü>ü>% &
case
†>†>  
TagUnitType
†>†>! ,
.
†>†>, -
	FontUnits
†>†>- 6
:
†>†>6 7

tag_Indent
°>°>  *
=
°>°>+ ,
value
°>°>- 2
*
°>°>3 4
(
°>°>5 6
m_isOrthographic
°>°>6 F
?
°>°>G H
$num
°>°>I J
:
°>°>K L
$num
°>°>M Q
)
°>°>Q R
*
°>°>S T
m_currentFontSize
°>°>U f
;
°>°>f g
break
¢>¢>  %
;
¢>¢>% &
case
£>£>  
TagUnitType
£>£>! ,
.
£>£>, -

Percentage
£>£>- 7
:
£>£>7 8

tag_Indent
§>§>  *
=
§>§>+ ,
m_marginWidth
§>§>- :
*
§>§>; <
value
§>§>= B
/
§>§>C D
$num
§>§>E H
;
§>§>H I
break
•>•>  %
;
•>•>% &
}
¶>¶> 
m_indentStack
ß>ß> %
.
ß>ß>% &
Add
ß>ß>& )
(
ß>ß>) *

tag_Indent
ß>ß>* 4
)
ß>ß>4 5
;
ß>ß>5 6

m_xAdvance
©>©> "
=
©>©># $

tag_Indent
©>©>% /
;
©>©>/ 0
return
™>™> 
true
™>™> #
;
™>™># $
case
´>´> 
$num
´>´>  
:
´>´>  !
case
¨>¨> 
$num
¨>¨>  
:
¨>¨>  !

tag_Indent
≠>≠> "
=
≠>≠># $
m_indentStack
≠>≠>% 2
.
≠>≠>2 3
Remove
≠>≠>3 9
(
≠>≠>9 :
)
≠>≠>: ;
;
≠>≠>; <
return
Ø>Ø> 
true
Ø>Ø> #
;
Ø>Ø># $
case
∞>∞> 
$num
∞>∞> #
:
∞>∞># $
case
±>±> 
-
±>±> 
$num
±>±> #
:
±>±># $
value
≤>≤> 
=
≤>≤> 
ConvertToFloat
≤>≤>  .
(
≤>≤>. /
	m_htmlTag
≤>≤>/ 8
,
≤>≤>8 9
m_xmlAttribute
≤>≤>: H
[
≤>≤>H I
$num
≤>≤>I J
]
≤>≤>J K
.
≤>≤>K L
valueStartIndex
≤>≤>L [
,
≤>≤>[ \
m_xmlAttribute
≤>≤>] k
[
≤>≤>k l
$num
≤>≤>l m
]
≤>≤>m n
.
≤>≤>n o
valueLength
≤>≤>o z
)
≤>≤>z {
;
≤>≤>{ |
if
µ>µ> 
(
µ>µ> 
value
µ>µ> !
==
µ>µ>" $
Int16
µ>µ>% *
.
µ>µ>* +
MinValue
µ>µ>+ 3
)
µ>µ>3 4
return
µ>µ>5 ;
false
µ>µ>< A
;
µ>µ>A B
switch
∑>∑> 
(
∑>∑>  
tagUnitType
∑>∑>  +
)
∑>∑>+ ,
{
∏>∏> 
case
π>π>  
TagUnitType
π>π>! ,
.
π>π>, -
Pixels
π>π>- 3
:
π>π>3 4
tag_LineIndent
∫>∫>  .
=
∫>∫>/ 0
value
∫>∫>1 6
*
∫>∫>7 8
(
∫>∫>9 :
m_isOrthographic
∫>∫>: J
?
∫>∫>K L
$num
∫>∫>M N
:
∫>∫>O P
$num
∫>∫>Q U
)
∫>∫>U V
;
∫>∫>V W
break
ª>ª>  %
;
ª>ª>% &
case
º>º>  
TagUnitType
º>º>! ,
.
º>º>, -
	FontUnits
º>º>- 6
:
º>º>6 7
tag_LineIndent
Ω>Ω>  .
=
Ω>Ω>/ 0
value
Ω>Ω>1 6
*
Ω>Ω>7 8
(
Ω>Ω>9 :
m_isOrthographic
Ω>Ω>: J
?
Ω>Ω>K L
$num
Ω>Ω>M N
:
Ω>Ω>O P
$num
Ω>Ω>Q U
)
Ω>Ω>U V
*
Ω>Ω>W X
m_currentFontSize
Ω>Ω>Y j
;
Ω>Ω>j k
break
æ>æ>  %
;
æ>æ>% &
case
ø>ø>  
TagUnitType
ø>ø>! ,
.
ø>ø>, -

Percentage
ø>ø>- 7
:
ø>ø>7 8
tag_LineIndent
¿>¿>  .
=
¿>¿>/ 0
m_marginWidth
¿>¿>1 >
*
¿>¿>? @
value
¿>¿>A F
/
¿>¿>G H
$num
¿>¿>I L
;
¿>¿>L M
break
¡>¡>  %
;
¡>¡>% &
}
¬>¬> 

m_xAdvance
ƒ>ƒ> "
+=
ƒ>ƒ># %
tag_LineIndent
ƒ>ƒ>& 4
;
ƒ>ƒ>4 5
return
≈>≈> 
true
≈>≈> #
;
≈>≈># $
case
∆>∆> 
-
∆>∆> 
$num
∆>∆> #
:
∆>∆># $
case
«>«> 
$num
«>«> #
:
«>«># $
tag_LineIndent
»>»> &
=
»>»>' (
$num
»>»>) *
;
»>»>* +
return
…>…> 
true
…>…> #
;
…>…># $
case
 > > 
$num
 > >  
:
 > >  !
case
À>À> 
$num
À>À>  
:
À>À>  !
int
Ã>Ã> !
spriteAssetHashCode
Ã>Ã> /
=
Ã>Ã>0 1
m_xmlAttribute
Ã>Ã>2 @
[
Ã>Ã>@ A
$num
Ã>Ã>A B
]
Ã>Ã>B C
.
Ã>Ã>C D
valueHashCode
Ã>Ã>D Q
;
Ã>Ã>Q R
TMP_SpriteAsset
Õ>Õ> '
tempSpriteAsset
Õ>Õ>( 7
;
Õ>Õ>7 8
m_spriteIndex
Œ>Œ> %
=
Œ>Œ>& '
-
Œ>Œ>( )
$num
Œ>Œ>) *
;
Œ>Œ>* +
if
—>—> 
(
—>—> 
m_xmlAttribute
—>—> *
[
—>—>* +
$num
—>—>+ ,
]
—>—>, -
.
—>—>- .
	valueType
—>—>. 7
==
—>—>8 :
TagValueType
—>—>; G
.
—>—>G H
None
—>—>H L
||
—>—>M O
m_xmlAttribute
—>—>P ^
[
—>—>^ _
$num
—>—>_ `
]
—>—>` a
.
—>—>a b
	valueType
—>—>b k
==
—>—>l n
TagValueType
—>—>o {
.
—>—>{ |
NumericalValue—>—>| ä
)—>—>ä ã
{
“>“> 
if
‘>‘> 
(
‘>‘>  
m_spriteAsset
‘>‘>  -
!=
‘>‘>. 0
null
‘>‘>1 5
)
‘>‘>5 6
{
’>’> "
m_currentSpriteAsset
÷>÷>  4
=
÷>÷>5 6
m_spriteAsset
÷>÷>7 D
;
÷>÷>D E
}
◊>◊> 
else
ÿ>ÿ>  
if
ÿ>ÿ>! #
(
ÿ>ÿ>$ %"
m_defaultSpriteAsset
ÿ>ÿ>% 9
!=
ÿ>ÿ>: <
null
ÿ>ÿ>= A
)
ÿ>ÿ>A B
{
Ÿ>Ÿ> "
m_currentSpriteAsset
⁄>⁄>  4
=
⁄>⁄>5 6"
m_defaultSpriteAsset
⁄>⁄>7 K
;
⁄>⁄>K L
}
€>€> 
else
‹>‹>  
if
‹>‹>! #
(
‹>‹>$ %"
m_defaultSpriteAsset
‹>‹>% 9
==
‹>‹>: <
null
‹>‹>= A
)
‹>‹>A B
{
›>›> 
if
ﬁ>ﬁ>  "
(
ﬁ>ﬁ># $
TMP_Settings
ﬁ>ﬁ>$ 0
.
ﬁ>ﬁ>0 1 
defaultSpriteAsset
ﬁ>ﬁ>1 C
!=
ﬁ>ﬁ>D F
null
ﬁ>ﬁ>G K
)
ﬁ>ﬁ>K L"
m_defaultSpriteAsset
ﬂ>ﬂ>$ 8
=
ﬂ>ﬂ>9 :
TMP_Settings
ﬂ>ﬂ>; G
.
ﬂ>ﬂ>G H 
defaultSpriteAsset
ﬂ>ﬂ>H Z
;
ﬂ>ﬂ>Z [
else
‡>‡>  $"
m_defaultSpriteAsset
·>·>$ 8
=
·>·>9 :
	Resources
·>·>; D
.
·>·>D E
Load
·>·>E I
<
·>·>I J
TMP_SpriteAsset
·>·>J Y
>
·>·>Y Z
(
·>·>Z [
$str
·>·>[ 
)·>·> Ä
;·>·>Ä Å"
m_currentSpriteAsset
„>„>  4
=
„>„>5 6"
m_defaultSpriteAsset
„>„>7 K
;
„>„>K L
}
‰>‰> 
if
Á>Á> 
(
Á>Á>  "
m_currentSpriteAsset
Á>Á>  4
==
Á>Á>5 7
null
Á>Á>8 <
)
Á>Á>< =
return
Ë>Ë>  &
false
Ë>Ë>' ,
;
Ë>Ë>, -
}
È>È> 
else
Í>Í> 
{
Î>Î> 
if
Ì>Ì> 
(
Ì>Ì>  &
MaterialReferenceManager
Ì>Ì>  8
.
Ì>Ì>8 9
TryGetSpriteAsset
Ì>Ì>9 J
(
Ì>Ì>J K!
spriteAssetHashCode
Ì>Ì>K ^
,
Ì>Ì>^ _
out
Ì>Ì>` c
tempSpriteAsset
Ì>Ì>d s
)
Ì>Ì>s t
)
Ì>Ì>t u
{
Ó>Ó> "
m_currentSpriteAsset
Ô>Ô>  4
=
Ô>Ô>5 6
tempSpriteAsset
Ô>Ô>7 F
;
Ô>Ô>F G
}
>> 
else
Ò>Ò>  
{
Ú>Ú> 
if
Ù>Ù>  "
(
Ù>Ù># $
tempSpriteAsset
Ù>Ù>$ 3
==
Ù>Ù>4 6
null
Ù>Ù>7 ;
)
Ù>Ù>; <
{
ı>ı>  !
tempSpriteAsset
˜>˜>$ 3
=
˜>˜>4 5"
OnSpriteAssetRequest
˜>˜>6 J
?
˜>˜>J K
.
˜>˜>K L
Invoke
˜>˜>L R
(
˜>˜>R S!
spriteAssetHashCode
˜>˜>S f
,
˜>˜>f g
new
˜>˜>h k
string
˜>˜>l r
(
˜>˜>r s
	m_htmlTag
˜>˜>s |
,
˜>˜>| }
m_xmlAttribute˜>˜>~ å
[˜>˜>å ç
$num˜>˜>ç é
]˜>˜>é è
.˜>˜>è ê
valueStartIndex˜>˜>ê ü
,˜>˜>ü †
m_xmlAttribute˜>˜>° Ø
[˜>˜>Ø ∞
$num˜>˜>∞ ±
]˜>˜>± ≤
.˜>˜>≤ ≥
valueLength˜>˜>≥ æ
)˜>˜>æ ø
)˜>˜>ø ¿
;˜>˜>¿ ¡
if
˘>˘>$ &
(
˘>˘>' (
tempSpriteAsset
˘>˘>( 7
==
˘>˘>8 :
null
˘>˘>; ?
)
˘>˘>? @
tempSpriteAsset
˙>˙>( 7
=
˙>˙>8 9
	Resources
˙>˙>: C
.
˙>˙>C D
Load
˙>˙>D H
<
˙>˙>H I
TMP_SpriteAsset
˙>˙>I X
>
˙>˙>X Y
(
˙>˙>Y Z
TMP_Settings
˙>˙>Z f
.
˙>˙>f g$
defaultSpriteAssetPath
˙>˙>g }
+
˙>˙>~ 
new˙>˙>Ä É
string˙>˙>Ñ ä
(˙>˙>ä ã
	m_htmlTag˙>˙>ã î
,˙>˙>î ï
m_xmlAttribute˙>˙>ñ §
[˙>˙>§ •
$num˙>˙>• ¶
]˙>˙>¶ ß
.˙>˙>ß ®
valueStartIndex˙>˙>® ∑
,˙>˙>∑ ∏
m_xmlAttribute˙>˙>π «
[˙>˙>« »
$num˙>˙>» …
]˙>˙>…  
.˙>˙>  À
valueLength˙>˙>À ÷
)˙>˙>÷ ◊
)˙>˙>◊ ÿ
;˙>˙>ÿ Ÿ
}
˚>˚>  !
if
˝>˝>  "
(
˝>˝># $
tempSpriteAsset
˝>˝>$ 3
==
˝>˝>4 6
null
˝>˝>7 ;
)
˝>˝>; <
return
˛>˛>$ *
false
˛>˛>+ 0
;
˛>˛>0 1&
MaterialReferenceManager
Å?Å?  8
.
Å?Å?8 9
AddSpriteAsset
Å?Å?9 G
(
Å?Å?G H!
spriteAssetHashCode
Å?Å?H [
,
Å?Å?[ \
tempSpriteAsset
Å?Å?] l
)
Å?Å?l m
;
Å?Å?m n"
m_currentSpriteAsset
Ç?Ç?  4
=
Ç?Ç?5 6
tempSpriteAsset
Ç?Ç?7 F
;
Ç?Ç?F G
}
É?É? 
}
Ñ?Ñ? 
if
á?á? 
(
á?á? 
m_xmlAttribute
á?á? *
[
á?á?* +
$num
á?á?+ ,
]
á?á?, -
.
á?á?- .
	valueType
á?á?. 7
==
á?á?8 :
TagValueType
á?á?; G
.
á?á?G H
NumericalValue
á?á?H V
)
á?á?V W
{
à?à? 
int
â?â? 
index
â?â?  %
=
â?â?& '
(
â?â?( )
int
â?â?) ,
)
â?â?, -
ConvertToFloat
â?â?- ;
(
â?â?; <
	m_htmlTag
â?â?< E
,
â?â?E F
m_xmlAttribute
â?â?G U
[
â?â?U V
$num
â?â?V W
]
â?â?W X
.
â?â?X Y
valueStartIndex
â?â?Y h
,
â?â?h i
m_xmlAttribute
â?â?j x
[
â?â?x y
$num
â?â?y z
]
â?â?z {
.
â?â?{ |
valueLengthâ?â?| á
)â?â?á à
;â?â?à â
if
å?å? 
(
å?å?  
index
å?å?  %
==
å?å?& (
Int16
å?å?) .
.
å?å?. /
MinValue
å?å?/ 7
)
å?å?7 8
return
å?å?9 ?
false
å?å?@ E
;
å?å?E F
if
è?è? 
(
è?è?  
index
è?è?  %
>
è?è?& '"
m_currentSpriteAsset
è?è?( <
.
è?è?< ="
spriteCharacterTable
è?è?= Q
.
è?è?Q R
Count
è?è?R W
-
è?è?X Y
$num
è?è?Z [
)
è?è?[ \
return
è?è?] c
false
è?è?d i
;
è?è?i j
m_spriteIndex
ë?ë? )
=
ë?ë?* +
index
ë?ë?, 1
;
ë?ë?1 2
}
í?í? 
m_spriteColor
î?î? %
=
î?î?& '
s_colorWhite
î?î?( 4
;
î?î?4 5
m_tintSprite
ï?ï? $
=
ï?ï?% &
false
ï?ï?' ,
;
ï?ï?, -
for
ò?ò? 
(
ò?ò? 
int
ò?ò?  
i
ò?ò?! "
=
ò?ò?# $
$num
ò?ò?% &
;
ò?ò?& '
i
ò?ò?( )
<
ò?ò?* +
m_xmlAttribute
ò?ò?, :
.
ò?ò?: ;
Length
ò?ò?; A
&&
ò?ò?B D
m_xmlAttribute
ò?ò?E S
[
ò?ò?S T
i
ò?ò?T U
]
ò?ò?U V
.
ò?ò?V W
nameHashCode
ò?ò?W c
!=
ò?ò?d f
$num
ò?ò?g h
;
ò?ò?h i
i
ò?ò?j k
++
ò?ò?k m
)
ò?ò?m n
{
ô?ô? 
int
õ?õ? 
nameHashCode
õ?õ?  ,
=
õ?õ?- .
m_xmlAttribute
õ?õ?/ =
[
õ?õ?= >
i
õ?õ?> ?
]
õ?õ?? @
.
õ?õ?@ A
nameHashCode
õ?õ?A M
;
õ?õ?M N
int
ú?ú? 
index
ú?ú?  %
=
ú?ú?& '
$num
ú?ú?( )
;
ú?ú?) *
switch
û?û? "
(
û?û?# $
nameHashCode
û?û?$ 0
)
û?û?0 1
{
ü?ü? 
case
†?†?  $
$num
†?†?% *
:
†?†?* +
case
°?°?  $
$num
°?°?% *
:
°?°?* +"
m_currentSpriteAsset
¢?¢?$ 8
=
¢?¢?9 :
TMP_SpriteAsset
¢?¢?; J
.
¢?¢?J K'
SearchForSpriteByHashCode
¢?¢?K d
(
¢?¢?d e"
m_currentSpriteAsset
¢?¢?e y
,
¢?¢?y z
m_xmlAttribute¢?¢?{ â
[¢?¢?â ä
i¢?¢?ä ã
]¢?¢?ã å
.¢?¢?å ç
valueHashCode¢?¢?ç ö
,¢?¢?ö õ
true¢?¢?ú †
,¢?¢?† °
out¢?¢?¢ •
index¢?¢?¶ ´
)¢?¢?´ ¨
;¢?¢?¨ ≠
if
£?£?$ &
(
£?£?' (
index
£?£?( -
==
£?£?. 0
-
£?£?1 2
$num
£?£?2 3
)
£?£?3 4
return
£?£?5 ;
false
£?£?< A
;
£?£?A B
m_spriteIndex
•?•?$ 1
=
•?•?2 3
index
•?•?4 9
;
•?•?9 :
break
¶?¶?$ )
;
¶?¶?) *
case
ß?ß?  $
$num
ß?ß?% +
:
ß?ß?+ ,
case
®?®?  $
$num
®?®?% +
:
®?®?+ ,
index
©?©?$ )
=
©?©?* +
(
©?©?, -
int
©?©?- 0
)
©?©?0 1
ConvertToFloat
©?©?1 ?
(
©?©?? @
	m_htmlTag
©?©?@ I
,
©?©?I J
m_xmlAttribute
©?©?K Y
[
©?©?Y Z
$num
©?©?Z [
]
©?©?[ \
.
©?©?\ ]
valueStartIndex
©?©?] l
,
©?©?l m
m_xmlAttribute
©?©?n |
[
©?©?| }
$num
©?©?} ~
]
©?©?~ 
.©?©? Ä
valueLength©?©?Ä ã
)©?©?ã å
;©?©?å ç
if
¨?¨?$ &
(
¨?¨?' (
index
¨?¨?( -
==
¨?¨?. 0
Int16
¨?¨?1 6
.
¨?¨?6 7
MinValue
¨?¨?7 ?
)
¨?¨?? @
return
¨?¨?A G
false
¨?¨?H M
;
¨?¨?M N
if
Ø?Ø?$ &
(
Ø?Ø?' (
index
Ø?Ø?( -
>
Ø?Ø?. /"
m_currentSpriteAsset
Ø?Ø?0 D
.
Ø?Ø?D E"
spriteCharacterTable
Ø?Ø?E Y
.
Ø?Ø?Y Z
Count
Ø?Ø?Z _
-
Ø?Ø?` a
$num
Ø?Ø?b c
)
Ø?Ø?c d
return
Ø?Ø?e k
false
Ø?Ø?l q
;
Ø?Ø?q r
m_spriteIndex
±?±?$ 1
=
±?±?2 3
index
±?±?4 9
;
±?±?9 :
break
≤?≤?$ )
;
≤?≤?) *
case
≥?≥?  $
$num
≥?≥?% *
:
≥?≥?* +
case
¥?¥?  $
$num
¥?¥?% *
:
¥?¥?* +
m_tintSprite
µ?µ?$ 0
=
µ?µ?1 2
ConvertToFloat
µ?µ?3 A
(
µ?µ?A B
	m_htmlTag
µ?µ?B K
,
µ?µ?K L
m_xmlAttribute
µ?µ?M [
[
µ?µ?[ \
i
µ?µ?\ ]
]
µ?µ?] ^
.
µ?µ?^ _
valueStartIndex
µ?µ?_ n
,
µ?µ?n o
m_xmlAttribute
µ?µ?p ~
[
µ?µ?~ 
iµ?µ? Ä
]µ?µ?Ä Å
.µ?µ?Å Ç
valueLengthµ?µ?Ç ç
)µ?µ?ç é
!=µ?µ?è ë
$numµ?µ?í ì
;µ?µ?ì î
break
∂?∂?$ )
;
∂?∂?) *
case
∑?∑?  $
$num
∑?∑?% +
:
∑?∑?+ ,
case
∏?∏?  $
$num
∏?∏?% +
:
∏?∏?+ ,
m_spriteColor
π?π?$ 1
=
π?π?2 3
HexCharsToColor
π?π?4 C
(
π?π?C D
	m_htmlTag
π?π?D M
,
π?π?M N
m_xmlAttribute
π?π?O ]
[
π?π?] ^
i
π?π?^ _
]
π?π?_ `
.
π?π?` a
valueStartIndex
π?π?a p
,
π?π?p q
m_xmlAttributeπ?π?r Ä
[π?π?Ä Å
iπ?π?Å Ç
]π?π?Ç É
.π?π?É Ñ
valueLengthπ?π?Ñ è
)π?π?è ê
;π?π?ê ë
break
∫?∫?$ )
;
∫?∫?) *
case
ª?ª?  $
$num
ª?ª?% *
:
ª?ª?* +
case
º?º?  $
$num
º?º?% *
:
º?º?* +
int
æ?æ?$ '

paramCount
æ?æ?( 2
=
æ?æ?3 4$
GetAttributeParameters
æ?æ?5 K
(
æ?æ?K L
	m_htmlTag
æ?æ?L U
,
æ?æ?U V
m_xmlAttribute
æ?æ?W e
[
æ?æ?e f
i
æ?æ?f g
]
æ?æ?g h
.
æ?æ?h i
valueStartIndex
æ?æ?i x
,
æ?æ?x y
m_xmlAttributeæ?æ?z à
[æ?æ?à â
iæ?æ?â ä
]æ?æ?ä ã
.æ?æ?ã å
valueLengthæ?æ?å ó
,æ?æ?ó ò
refæ?æ?ô ú*
m_attributeParameterValuesæ?æ?ù ∑
)æ?æ?∑ ∏
;æ?æ?∏ π
if
ø?ø?$ &
(
ø?ø?' (

paramCount
ø?ø?( 2
!=
ø?ø?3 5
$num
ø?ø?6 7
)
ø?ø?7 8
return
ø?ø?9 ?
false
ø?ø?@ E
;
ø?ø?E F
m_spriteIndex
¡?¡?$ 1
=
¡?¡?2 3
(
¡?¡?4 5
int
¡?¡?5 8
)
¡?¡?8 9(
m_attributeParameterValues
¡?¡?9 S
[
¡?¡?S T
$num
¡?¡?T U
]
¡?¡?U V
;
¡?¡?V W
if
√?√?$ &
(
√?√?' (
m_isParsingText
√?√?( 7
)
√?√?7 8
{
ƒ?ƒ?$ %
spriteAnimator
…?…?( 6
.
…?…?6 7
DoSpriteAnimation
…?…?7 H
(
…?…?H I
m_characterCount
…?…?I Y
,
…?…?Y Z"
m_currentSpriteAsset
…?…?[ o
,
…?…?o p
m_spriteIndex
…?…?q ~
,
…?…?~ 
(…?…?Ä Å
int…?…?Å Ñ
)…?…?Ñ Ö*
m_attributeParameterValues…?…?Ö ü
[…?…?ü †
$num…?…?† °
]…?…?° ¢
,…?…?¢ £
(…?…?§ •
int…?…?• ®
)…?…?® ©*
m_attributeParameterValues…?…?© √
[…?…?√ ƒ
$num…?…?ƒ ≈
]…?…?≈ ∆
)…?…?∆ «
;…?…?« »
}
 ? ?$ %
break
Ã?Ã?$ )
;
Ã?Ã?) *
default
—?—?  '
:
—?—?' (
if
“?“?$ &
(
“?“?' (
nameHashCode
“?“?( 4
!=
“?“?5 7
$num
“?“?8 ?
&&
“?“?@ B
nameHashCode
“?“?C O
!=
“?“?P R
$num
“?“?S Z
)
“?“?Z [
return
”?”?( .
false
”?”?/ 4
;
”?”?4 5
break
‘?‘?$ )
;
‘?‘?) *
}
’?’? 
}
÷?÷? 
if
ÿ?ÿ? 
(
ÿ?ÿ? 
m_spriteIndex
ÿ?ÿ? )
==
ÿ?ÿ?* ,
-
ÿ?ÿ?- .
$num
ÿ?ÿ?. /
)
ÿ?ÿ?/ 0
return
ÿ?ÿ?1 7
false
ÿ?ÿ?8 =
;
ÿ?ÿ?= >$
m_currentMaterialIndex
€?€? .
=
€?€?/ 0
MaterialReference
€?€?1 B
.
€?€?B C"
AddMaterialReference
€?€?C W
(
€?€?W X"
m_currentSpriteAsset
€?€?X l
.
€?€?l m
material
€?€?m u
,
€?€?u v#
m_currentSpriteAsset€?€?w ã
,€?€?ã å
ref€?€?ç ê$
m_materialReferences€?€?ë •
,€?€?• ¶.
m_materialReferenceIndexLookup€?€?ß ≈
)€?€?≈ ∆
;€?€?∆ «
m_textElementType
›?›? )
=
›?›?* +!
TMP_TextElementType
›?›?, ?
.
›?›?? @
Sprite
›?›?@ F
;
›?›?F G
return
ﬁ?ﬁ? 
true
ﬁ?ﬁ? #
;
ﬁ?ﬁ?# $
case
ﬂ?ﬂ? 
$num
ﬂ?ﬂ? "
:
ﬂ?ﬂ?" #
case
‡?‡? 
$num
‡?‡? "
:
‡?‡?" #!
m_FontStyleInternal
·?·? +
|=
·?·?, .

FontStyles
·?·?/ 9
.
·?·?9 :
	LowerCase
·?·?: C
;
·?·?C D
m_fontStyleStack
‚?‚? (
.
‚?‚?( )
Add
‚?‚?) ,
(
‚?‚?, -

FontStyles
‚?‚?- 7
.
‚?‚?7 8
	LowerCase
‚?‚?8 A
)
‚?‚?A B
;
‚?‚?B C
return
„?„? 
true
„?„? #
;
„?„?# $
case
‰?‰? 
-
‰?‰? 
$num
‰?‰? $
:
‰?‰?$ %
case
Â?Â? 
-
Â?Â? 
$num
Â?Â? $
:
Â?Â?$ %
if
Ê?Ê? 
(
Ê?Ê? 
(
Ê?Ê? 
m_fontStyle
Ê?Ê? (
&
Ê?Ê?) *

FontStyles
Ê?Ê?+ 5
.
Ê?Ê?5 6
	LowerCase
Ê?Ê?6 ?
)
Ê?Ê?? @
!=
Ê?Ê?A C

FontStyles
Ê?Ê?D N
.
Ê?Ê?N O
	LowerCase
Ê?Ê?O X
)
Ê?Ê?X Y
{
Á?Á? 
if
Ë?Ë? 
(
Ë?Ë?  
m_fontStyleStack
Ë?Ë?  0
.
Ë?Ë?0 1
Remove
Ë?Ë?1 7
(
Ë?Ë?7 8

FontStyles
Ë?Ë?8 B
.
Ë?Ë?B C
	LowerCase
Ë?Ë?C L
)
Ë?Ë?L M
==
Ë?Ë?N P
$num
Ë?Ë?Q R
)
Ë?Ë?R S!
m_FontStyleInternal
È?È?  3
&=
È?È?4 6
~
È?È?7 8

FontStyles
È?È?8 B
.
È?È?B C
	LowerCase
È?È?C L
;
È?È?L M
}
Í?Í? 
return
Î?Î? 
true
Î?Î? #
;
Î?Î?# $
case
Ï?Ï? 
$num
Ï?Ï? !
:
Ï?Ï?! "
case
Ì?Ì? 
$num
Ì?Ì?  
:
Ì?Ì?  !
case
Ó?Ó? 
$num
Ó?Ó? "
:
Ó?Ó?" #
case
Ô?Ô? 
$num
Ô?Ô? "
:
Ô?Ô?" #!
m_FontStyleInternal
?? +
|=
??, .

FontStyles
??/ 9
.
??9 :
	UpperCase
??: C
;
??C D
m_fontStyleStack
Ò?Ò? (
.
Ò?Ò?( )
Add
Ò?Ò?) ,
(
Ò?Ò?, -

FontStyles
Ò?Ò?- 7
.
Ò?Ò?7 8
	UpperCase
Ò?Ò?8 A
)
Ò?Ò?A B
;
Ò?Ò?B C
return
Ú?Ú? 
true
Ú?Ú? #
;
Ú?Ú?# $
case
Û?Û? 
$num
Û?Û? !
:
Û?Û?! "
case
Ù?Ù? 
$num
Ù?Ù? !
:
Ù?Ù?! "
case
ı?ı? 
-
ı?ı? 
$num
ı?ı? $
:
ı?ı?$ %
case
ˆ?ˆ? 
-
ˆ?ˆ? 
$num
ˆ?ˆ? $
:
ˆ?ˆ?$ %
if
˜?˜? 
(
˜?˜? 
(
˜?˜? 
m_fontStyle
˜?˜? (
&
˜?˜?) *

FontStyles
˜?˜?+ 5
.
˜?˜?5 6
	UpperCase
˜?˜?6 ?
)
˜?˜?? @
!=
˜?˜?A C

FontStyles
˜?˜?D N
.
˜?˜?N O
	UpperCase
˜?˜?O X
)
˜?˜?X Y
{
¯?¯? 
if
˘?˘? 
(
˘?˘?  
m_fontStyleStack
˘?˘?  0
.
˘?˘?0 1
Remove
˘?˘?1 7
(
˘?˘?7 8

FontStyles
˘?˘?8 B
.
˘?˘?B C
	UpperCase
˘?˘?C L
)
˘?˘?L M
==
˘?˘?N P
$num
˘?˘?Q R
)
˘?˘?R S!
m_FontStyleInternal
˙?˙?  3
&=
˙?˙?4 6
~
˙?˙?7 8

FontStyles
˙?˙?8 B
.
˙?˙?B C
	UpperCase
˙?˙?C L
;
˙?˙?L M
}
˚?˚? 
return
¸?¸? 
true
¸?¸? #
;
¸?¸?# $
case
˝?˝? 
$num
˝?˝? "
:
˝?˝?" #
case
˛?˛? 
$num
˛?˛? "
:
˛?˛?" #!
m_FontStyleInternal
ˇ?ˇ? +
|=
ˇ?ˇ?, .

FontStyles
ˇ?ˇ?/ 9
.
ˇ?ˇ?9 :
	SmallCaps
ˇ?ˇ?: C
;
ˇ?ˇ?C D
m_fontStyleStack
Ä@Ä@ (
.
Ä@Ä@( )
Add
Ä@Ä@) ,
(
Ä@Ä@, -

FontStyles
Ä@Ä@- 7
.
Ä@Ä@7 8
	SmallCaps
Ä@Ä@8 A
)
Ä@Ä@A B
;
Ä@Ä@B C
return
Å@Å@ 
true
Å@Å@ #
;
Å@Å@# $
case
Ç@Ç@ 
-
Ç@Ç@ 
$num
Ç@Ç@ $
:
Ç@Ç@$ %
case
É@É@ 
-
É@É@ 
$num
É@É@ $
:
É@É@$ %
if
Ñ@Ñ@ 
(
Ñ@Ñ@ 
(
Ñ@Ñ@ 
m_fontStyle
Ñ@Ñ@ (
&
Ñ@Ñ@) *

FontStyles
Ñ@Ñ@+ 5
.
Ñ@Ñ@5 6
	SmallCaps
Ñ@Ñ@6 ?
)
Ñ@Ñ@? @
!=
Ñ@Ñ@A C

FontStyles
Ñ@Ñ@D N
.
Ñ@Ñ@N O
	SmallCaps
Ñ@Ñ@O X
)
Ñ@Ñ@X Y
{
Ö@Ö@ 
if
Ü@Ü@ 
(
Ü@Ü@  
m_fontStyleStack
Ü@Ü@  0
.
Ü@Ü@0 1
Remove
Ü@Ü@1 7
(
Ü@Ü@7 8

FontStyles
Ü@Ü@8 B
.
Ü@Ü@B C
	SmallCaps
Ü@Ü@C L
)
Ü@Ü@L M
==
Ü@Ü@N P
$num
Ü@Ü@Q R
)
Ü@Ü@R S!
m_FontStyleInternal
á@á@  3
&=
á@á@4 6
~
á@á@7 8

FontStyles
á@á@8 B
.
á@á@B C
	SmallCaps
á@á@C L
;
á@á@L M
}
à@à@ 
return
â@â@ 
true
â@â@ #
;
â@â@# $
case
ä@ä@ 
$num
ä@ä@  
:
ä@ä@  !
case
ã@ã@ 
$num
ã@ã@  
:
ã@ã@  !
switch
ç@ç@ 
(
ç@ç@  
m_xmlAttribute
ç@ç@  .
[
ç@ç@. /
$num
ç@ç@/ 0
]
ç@ç@0 1
.
ç@ç@1 2
	valueType
ç@ç@2 ;
)
ç@ç@; <
{
é@é@ 
case
è@è@  
TagValueType
è@è@! -
.
è@è@- .
NumericalValue
è@è@. <
:
è@è@< =
value
ê@ê@  %
=
ê@ê@& '
ConvertToFloat
ê@ê@( 6
(
ê@ê@6 7
	m_htmlTag
ê@ê@7 @
,
ê@ê@@ A
m_xmlAttribute
ê@ê@B P
[
ê@ê@P Q
$num
ê@ê@Q R
]
ê@ê@R S
.
ê@ê@S T
valueStartIndex
ê@ê@T c
,
ê@ê@c d
m_xmlAttribute
ê@ê@e s
[
ê@ê@s t
$num
ê@ê@t u
]
ê@ê@u v
.
ê@ê@v w
valueLengthê@ê@w Ç
)ê@ê@Ç É
;ê@ê@É Ñ
if
ì@ì@  "
(
ì@ì@# $
value
ì@ì@$ )
==
ì@ì@* ,
Int16
ì@ì@- 2
.
ì@ì@2 3
MinValue
ì@ì@3 ;
)
ì@ì@; <
return
ì@ì@= C
false
ì@ì@D I
;
ì@ì@I J
switch
ñ@ñ@  &
(
ñ@ñ@' (
tagUnitType
ñ@ñ@( 3
)
ñ@ñ@3 4
{
ó@ó@  !
case
ò@ò@$ (
TagUnitType
ò@ò@) 4
.
ò@ò@4 5
Pixels
ò@ò@5 ;
:
ò@ò@; <
m_marginLeft
ô@ô@( 4
=
ô@ô@5 6
value
ô@ô@7 <
*
ô@ô@= >
(
ô@ô@? @
m_isOrthographic
ô@ô@@ P
?
ô@ô@Q R
$num
ô@ô@S T
:
ô@ô@U V
$num
ô@ô@W [
)
ô@ô@[ \
;
ô@ô@\ ]
break
ö@ö@( -
;
ö@ö@- .
case
õ@õ@$ (
TagUnitType
õ@õ@) 4
.
õ@õ@4 5
	FontUnits
õ@õ@5 >
:
õ@õ@> ?
m_marginLeft
ú@ú@( 4
=
ú@ú@5 6
value
ú@ú@7 <
*
ú@ú@= >
(
ú@ú@? @
m_isOrthographic
ú@ú@@ P
?
ú@ú@Q R
$num
ú@ú@S T
:
ú@ú@U V
$num
ú@ú@W [
)
ú@ú@[ \
*
ú@ú@] ^
m_currentFontSize
ú@ú@_ p
;
ú@ú@p q
break
ù@ù@( -
;
ù@ù@- .
case
û@û@$ (
TagUnitType
û@û@) 4
.
û@û@4 5

Percentage
û@û@5 ?
:
û@û@? @
m_marginLeft
ü@ü@( 4
=
ü@ü@5 6
(
ü@ü@7 8
m_marginWidth
ü@ü@8 E
-
ü@ü@F G
(
ü@ü@H I
m_width
ü@ü@I P
!=
ü@ü@Q S
-
ü@ü@T U
$num
ü@ü@U V
?
ü@ü@W X
m_width
ü@ü@Y `
:
ü@ü@a b
$num
ü@ü@c d
)
ü@ü@d e
)
ü@ü@e f
*
ü@ü@g h
value
ü@ü@i n
/
ü@ü@o p
$num
ü@ü@q t
;
ü@ü@t u
break
†@†@( -
;
†@†@- .
}
°@°@  !
m_marginLeft
¢@¢@  ,
=
¢@¢@- .
m_marginLeft
¢@¢@/ ;
>=
¢@¢@< >
$num
¢@¢@? @
?
¢@¢@A B
m_marginLeft
¢@¢@C O
:
¢@¢@P Q
$num
¢@¢@R S
;
¢@¢@S T
m_marginRight
£@£@  -
=
£@£@. /
m_marginLeft
£@£@0 <
;
£@£@< =
return
§@§@  &
true
§@§@' +
;
§@§@+ ,
case
¶@¶@  
TagValueType
¶@¶@! -
.
¶@¶@- .
None
¶@¶@. 2
:
¶@¶@2 3
for
ß@ß@  #
(
ß@ß@$ %
int
ß@ß@% (
i
ß@ß@) *
=
ß@ß@+ ,
$num
ß@ß@- .
;
ß@ß@. /
i
ß@ß@0 1
<
ß@ß@2 3
m_xmlAttribute
ß@ß@4 B
.
ß@ß@B C
Length
ß@ß@C I
&&
ß@ß@J L
m_xmlAttribute
ß@ß@M [
[
ß@ß@[ \
i
ß@ß@\ ]
]
ß@ß@] ^
.
ß@ß@^ _
nameHashCode
ß@ß@_ k
!=
ß@ß@l n
$num
ß@ß@o p
;
ß@ß@p q
i
ß@ß@r s
++
ß@ß@s u
)
ß@ß@u v
{
®@®@  !
int
™@™@$ '
nameHashCode
™@™@( 4
=
™@™@5 6
m_xmlAttribute
™@™@7 E
[
™@™@E F
i
™@™@F G
]
™@™@G H
.
™@™@H I
nameHashCode
™@™@I U
;
™@™@U V
switch
¨@¨@$ *
(
¨@¨@+ ,
nameHashCode
¨@¨@, 8
)
¨@¨@8 9
{
≠@≠@$ %
case
Æ@Æ@( ,
$num
Æ@Æ@- 2
:
Æ@Æ@2 3
value
Ø@Ø@, 1
=
Ø@Ø@2 3
ConvertToFloat
Ø@Ø@4 B
(
Ø@Ø@B C
	m_htmlTag
Ø@Ø@C L
,
Ø@Ø@L M
m_xmlAttribute
Ø@Ø@N \
[
Ø@Ø@\ ]
i
Ø@Ø@] ^
]
Ø@Ø@^ _
.
Ø@Ø@_ `
valueStartIndex
Ø@Ø@` o
,
Ø@Ø@o p
m_xmlAttribute
Ø@Ø@q 
[Ø@Ø@ Ä
iØ@Ø@Ä Å
]Ø@Ø@Å Ç
.Ø@Ø@Ç É
valueLengthØ@Ø@É é
)Ø@Ø@é è
;Ø@Ø@è ê
if
≤@≤@, .
(
≤@≤@/ 0
value
≤@≤@0 5
==
≤@≤@6 8
Int16
≤@≤@9 >
.
≤@≤@> ?
MinValue
≤@≤@? G
)
≤@≤@G H
return
≤@≤@I O
false
≤@≤@P U
;
≤@≤@U V
switch
¥@¥@, 2
(
¥@¥@3 4
m_xmlAttribute
¥@¥@4 B
[
¥@¥@B C
i
¥@¥@C D
]
¥@¥@D E
.
¥@¥@E F
unitType
¥@¥@F N
)
¥@¥@N O
{
µ@µ@, -
case
∂@∂@0 4
TagUnitType
∂@∂@5 @
.
∂@∂@@ A
Pixels
∂@∂@A G
:
∂@∂@G H
m_marginLeft
∑@∑@4 @
=
∑@∑@A B
value
∑@∑@C H
*
∑@∑@I J
(
∑@∑@K L
m_isOrthographic
∑@∑@L \
?
∑@∑@] ^
$num
∑@∑@_ `
:
∑@∑@a b
$num
∑@∑@c g
)
∑@∑@g h
;
∑@∑@h i
break
∏@∏@4 9
;
∏@∏@9 :
case
π@π@0 4
TagUnitType
π@π@5 @
.
π@π@@ A
	FontUnits
π@π@A J
:
π@π@J K
m_marginLeft
∫@∫@4 @
=
∫@∫@A B
value
∫@∫@C H
*
∫@∫@I J
(
∫@∫@K L
m_isOrthographic
∫@∫@L \
?
∫@∫@] ^
$num
∫@∫@_ `
:
∫@∫@a b
$num
∫@∫@c g
)
∫@∫@g h
*
∫@∫@i j
m_currentFontSize
∫@∫@k |
;
∫@∫@| }
break
ª@ª@4 9
;
ª@ª@9 :
case
º@º@0 4
TagUnitType
º@º@5 @
.
º@º@@ A

Percentage
º@º@A K
:
º@º@K L
m_marginLeft
Ω@Ω@4 @
=
Ω@Ω@A B
(
Ω@Ω@C D
m_marginWidth
Ω@Ω@D Q
-
Ω@Ω@R S
(
Ω@Ω@T U
m_width
Ω@Ω@U \
!=
Ω@Ω@] _
-
Ω@Ω@` a
$num
Ω@Ω@a b
?
Ω@Ω@c d
m_width
Ω@Ω@e l
:
Ω@Ω@m n
$num
Ω@Ω@o p
)
Ω@Ω@p q
)
Ω@Ω@q r
*
Ω@Ω@s t
value
Ω@Ω@u z
/
Ω@Ω@{ |
$numΩ@Ω@} Ä
;Ω@Ω@Ä Å
break
æ@æ@4 9
;
æ@æ@9 :
}
ø@ø@, -
m_marginLeft
¿@¿@, 8
=
¿@¿@9 :
m_marginLeft
¿@¿@; G
>=
¿@¿@H J
$num
¿@¿@K L
?
¿@¿@M N
m_marginLeft
¿@¿@O [
:
¿@¿@\ ]
$num
¿@¿@^ _
;
¿@¿@_ `
break
¡@¡@, 1
;
¡@¡@1 2
case
√@√@( ,
$num
√@√@- 3
:
√@√@3 4
value
ƒ@ƒ@, 1
=
ƒ@ƒ@2 3
ConvertToFloat
ƒ@ƒ@4 B
(
ƒ@ƒ@B C
	m_htmlTag
ƒ@ƒ@C L
,
ƒ@ƒ@L M
m_xmlAttribute
ƒ@ƒ@N \
[
ƒ@ƒ@\ ]
i
ƒ@ƒ@] ^
]
ƒ@ƒ@^ _
.
ƒ@ƒ@_ `
valueStartIndex
ƒ@ƒ@` o
,
ƒ@ƒ@o p
m_xmlAttribute
ƒ@ƒ@q 
[ƒ@ƒ@ Ä
iƒ@ƒ@Ä Å
]ƒ@ƒ@Å Ç
.ƒ@ƒ@Ç É
valueLengthƒ@ƒ@É é
)ƒ@ƒ@é è
;ƒ@ƒ@è ê
if
«@«@, .
(
«@«@/ 0
value
«@«@0 5
==
«@«@6 8
Int16
«@«@9 >
.
«@«@> ?
MinValue
«@«@? G
)
«@«@G H
return
«@«@I O
false
«@«@P U
;
«@«@U V
switch
…@…@, 2
(
…@…@3 4
m_xmlAttribute
…@…@4 B
[
…@…@B C
i
…@…@C D
]
…@…@D E
.
…@…@E F
unitType
…@…@F N
)
…@…@N O
{
 @ @, -
case
À@À@0 4
TagUnitType
À@À@5 @
.
À@À@@ A
Pixels
À@À@A G
:
À@À@G H
m_marginRight
Ã@Ã@4 A
=
Ã@Ã@B C
value
Ã@Ã@D I
*
Ã@Ã@J K
(
Ã@Ã@L M
m_isOrthographic
Ã@Ã@M ]
?
Ã@Ã@^ _
$num
Ã@Ã@` a
:
Ã@Ã@b c
$num
Ã@Ã@d h
)
Ã@Ã@h i
;
Ã@Ã@i j
break
Õ@Õ@4 9
;
Õ@Õ@9 :
case
Œ@Œ@0 4
TagUnitType
Œ@Œ@5 @
.
Œ@Œ@@ A
	FontUnits
Œ@Œ@A J
:
Œ@Œ@J K
m_marginRight
œ@œ@4 A
=
œ@œ@B C
value
œ@œ@D I
*
œ@œ@J K
(
œ@œ@L M
m_isOrthographic
œ@œ@M ]
?
œ@œ@^ _
$num
œ@œ@` a
:
œ@œ@b c
$num
œ@œ@d h
)
œ@œ@h i
*
œ@œ@j k
m_currentFontSize
œ@œ@l }
;
œ@œ@} ~
break
–@–@4 9
;
–@–@9 :
case
—@—@0 4
TagUnitType
—@—@5 @
.
—@—@@ A

Percentage
—@—@A K
:
—@—@K L
m_marginRight
“@“@4 A
=
“@“@B C
(
“@“@D E
m_marginWidth
“@“@E R
-
“@“@S T
(
“@“@U V
m_width
“@“@V ]
!=
“@“@^ `
-
“@“@a b
$num
“@“@b c
?
“@“@d e
m_width
“@“@f m
:
“@“@n o
$num
“@“@p q
)
“@“@q r
)
“@“@r s
*
“@“@t u
value
“@“@v {
/
“@“@| }
$num“@“@~ Å
;“@“@Å Ç
break
”@”@4 9
;
”@”@9 :
}
‘@‘@, -
m_marginRight
’@’@, 9
=
’@’@: ;
m_marginRight
’@’@< I
>=
’@’@J L
$num
’@’@M N
?
’@’@O P
m_marginRight
’@’@Q ^
:
’@’@_ `
$num
’@’@a b
;
’@’@b c
break
÷@÷@, 1
;
÷@÷@1 2
}
◊@◊@$ %
}
ÿ@ÿ@  !
return
Ÿ@Ÿ@  &
true
Ÿ@Ÿ@' +
;
Ÿ@Ÿ@+ ,
}
⁄@⁄@ 
return
‹@‹@ 
false
‹@‹@ $
;
‹@‹@$ %
case
›@›@ 
$num
›@›@  
:
›@›@  !
case
ﬁ@ﬁ@ 
$num
ﬁ@ﬁ@  
:
ﬁ@ﬁ@  !
m_marginLeft
ﬂ@ﬂ@ $
=
ﬂ@ﬂ@% &
$num
ﬂ@ﬂ@' (
;
ﬂ@ﬂ@( )
m_marginRight
‡@‡@ %
=
‡@‡@& '
$num
‡@‡@( )
;
‡@‡@) *
return
·@·@ 
true
·@·@ #
;
·@·@# $
case
‚@‚@ 
$num
‚@‚@ #
:
‚@‚@# $
case
„@„@ 
-
„@„@ 
$num
„@„@ #
:
„@„@# $
value
‰@‰@ 
=
‰@‰@ 
ConvertToFloat
‰@‰@  .
(
‰@‰@. /
	m_htmlTag
‰@‰@/ 8
,
‰@‰@8 9
m_xmlAttribute
‰@‰@: H
[
‰@‰@H I
$num
‰@‰@I J
]
‰@‰@J K
.
‰@‰@K L
valueStartIndex
‰@‰@L [
,
‰@‰@[ \
m_xmlAttribute
‰@‰@] k
[
‰@‰@k l
$num
‰@‰@l m
]
‰@‰@m n
.
‰@‰@n o
valueLength
‰@‰@o z
)
‰@‰@z {
;
‰@‰@{ |
if
Á@Á@ 
(
Á@Á@ 
value
Á@Á@ !
==
Á@Á@" $
Int16
Á@Á@% *
.
Á@Á@* +
MinValue
Á@Á@+ 3
)
Á@Á@3 4
return
Á@Á@5 ;
false
Á@Á@< A
;
Á@Á@A B
switch
È@È@ 
(
È@È@  
tagUnitType
È@È@  +
)
È@È@+ ,
{
Í@Í@ 
case
Î@Î@  
TagUnitType
Î@Î@! ,
.
Î@Î@, -
Pixels
Î@Î@- 3
:
Î@Î@3 4
m_marginLeft
Ï@Ï@  ,
=
Ï@Ï@- .
value
Ï@Ï@/ 4
*
Ï@Ï@5 6
(
Ï@Ï@7 8
m_isOrthographic
Ï@Ï@8 H
?
Ï@Ï@I J
$num
Ï@Ï@K L
:
Ï@Ï@M N
$num
Ï@Ï@O S
)
Ï@Ï@S T
;
Ï@Ï@T U
break
Ì@Ì@  %
;
Ì@Ì@% &
case
Ó@Ó@  
TagUnitType
Ó@Ó@! ,
.
Ó@Ó@, -
	FontUnits
Ó@Ó@- 6
:
Ó@Ó@6 7
m_marginLeft
Ô@Ô@  ,
=
Ô@Ô@- .
value
Ô@Ô@/ 4
*
Ô@Ô@5 6
(
Ô@Ô@7 8
m_isOrthographic
Ô@Ô@8 H
?
Ô@Ô@I J
$num
Ô@Ô@K L
:
Ô@Ô@M N
$num
Ô@Ô@O S
)
Ô@Ô@S T
*
Ô@Ô@U V
m_currentFontSize
Ô@Ô@W h
;
Ô@Ô@h i
break
@@  %
;
@@% &
case
Ò@Ò@  
TagUnitType
Ò@Ò@! ,
.
Ò@Ò@, -

Percentage
Ò@Ò@- 7
:
Ò@Ò@7 8
m_marginLeft
Ú@Ú@  ,
=
Ú@Ú@- .
(
Ú@Ú@/ 0
m_marginWidth
Ú@Ú@0 =
-
Ú@Ú@> ?
(
Ú@Ú@@ A
m_width
Ú@Ú@A H
!=
Ú@Ú@I K
-
Ú@Ú@L M
$num
Ú@Ú@M N
?
Ú@Ú@O P
m_width
Ú@Ú@Q X
:
Ú@Ú@Y Z
$num
Ú@Ú@[ \
)
Ú@Ú@\ ]
)
Ú@Ú@] ^
*
Ú@Ú@_ `
value
Ú@Ú@a f
/
Ú@Ú@g h
$num
Ú@Ú@i l
;
Ú@Ú@l m
break
Û@Û@  %
;
Û@Û@% &
}
Ù@Ù@ 
m_marginLeft
ı@ı@ $
=
ı@ı@% &
m_marginLeft
ı@ı@' 3
>=
ı@ı@4 6
$num
ı@ı@7 8
?
ı@ı@9 :
m_marginLeft
ı@ı@; G
:
ı@ı@H I
$num
ı@ı@J K
;
ı@ı@K L
return
ˆ@ˆ@ 
true
ˆ@ˆ@ #
;
ˆ@ˆ@# $
case
˜@˜@ 
-
˜@˜@ 
$num
˜@˜@ #
:
˜@˜@# $
case
¯@¯@ 
-
¯@¯@ 
$num
¯@¯@ $
:
¯@¯@$ %
value
˘@˘@ 
=
˘@˘@ 
ConvertToFloat
˘@˘@  .
(
˘@˘@. /
	m_htmlTag
˘@˘@/ 8
,
˘@˘@8 9
m_xmlAttribute
˘@˘@: H
[
˘@˘@H I
$num
˘@˘@I J
]
˘@˘@J K
.
˘@˘@K L
valueStartIndex
˘@˘@L [
,
˘@˘@[ \
m_xmlAttribute
˘@˘@] k
[
˘@˘@k l
$num
˘@˘@l m
]
˘@˘@m n
.
˘@˘@n o
valueLength
˘@˘@o z
)
˘@˘@z {
;
˘@˘@{ |
if
¸@¸@ 
(
¸@¸@ 
value
¸@¸@ !
==
¸@¸@" $
Int16
¸@¸@% *
.
¸@¸@* +
MinValue
¸@¸@+ 3
)
¸@¸@3 4
return
¸@¸@5 ;
false
¸@¸@< A
;
¸@¸@A B
switch
˛@˛@ 
(
˛@˛@  
tagUnitType
˛@˛@  +
)
˛@˛@+ ,
{
ˇ@ˇ@ 
case
ÄAÄA  
TagUnitType
ÄAÄA! ,
.
ÄAÄA, -
Pixels
ÄAÄA- 3
:
ÄAÄA3 4
m_marginRight
ÅAÅA  -
=
ÅAÅA. /
value
ÅAÅA0 5
*
ÅAÅA6 7
(
ÅAÅA8 9
m_isOrthographic
ÅAÅA9 I
?
ÅAÅAJ K
$num
ÅAÅAL M
:
ÅAÅAN O
$num
ÅAÅAP T
)
ÅAÅAT U
;
ÅAÅAU V
break
ÇAÇA  %
;
ÇAÇA% &
case
ÉAÉA  
TagUnitType
ÉAÉA! ,
.
ÉAÉA, -
	FontUnits
ÉAÉA- 6
:
ÉAÉA6 7
m_marginRight
ÑAÑA  -
=
ÑAÑA. /
value
ÑAÑA0 5
*
ÑAÑA6 7
(
ÑAÑA8 9
m_isOrthographic
ÑAÑA9 I
?
ÑAÑAJ K
$num
ÑAÑAL M
:
ÑAÑAN O
$num
ÑAÑAP T
)
ÑAÑAT U
*
ÑAÑAV W
m_currentFontSize
ÑAÑAX i
;
ÑAÑAi j
break
ÖAÖA  %
;
ÖAÖA% &
case
ÜAÜA  
TagUnitType
ÜAÜA! ,
.
ÜAÜA, -

Percentage
ÜAÜA- 7
:
ÜAÜA7 8
m_marginRight
áAáA  -
=
áAáA. /
(
áAáA0 1
m_marginWidth
áAáA1 >
-
áAáA? @
(
áAáAA B
m_width
áAáAB I
!=
áAáAJ L
-
áAáAM N
$num
áAáAN O
?
áAáAP Q
m_width
áAáAR Y
:
áAáAZ [
$num
áAáA\ ]
)
áAáA] ^
)
áAáA^ _
*
áAáA` a
value
áAáAb g
/
áAáAh i
$num
áAáAj m
;
áAáAm n
break
àAàA  %
;
àAàA% &
}
âAâA 
m_marginRight
äAäA %
=
äAäA& '
m_marginRight
äAäA( 5
>=
äAäA6 8
$num
äAäA9 :
?
äAäA; <
m_marginRight
äAäA= J
:
äAäAK L
$num
äAäAM N
;
äAäAN O
return
ãAãA 
true
ãAãA #
;
ãAãA# $
case
åAåA 
$num
åAåA #
:
åAåA# $
case
çAçA 
-
çAçA 
$num
çAçA #
:
çAçA# $
value
éAéA 
=
éAéA 
ConvertToFloat
éAéA  .
(
éAéA. /
	m_htmlTag
éAéA/ 8
,
éAéA8 9
m_xmlAttribute
éAéA: H
[
éAéAH I
$num
éAéAI J
]
éAéAJ K
.
éAéAK L
valueStartIndex
éAéAL [
,
éAéA[ \
m_xmlAttribute
éAéA] k
[
éAéAk l
$num
éAéAl m
]
éAéAm n
.
éAéAn o
valueLength
éAéAo z
)
éAéAz {
;
éAéA{ |
if
ëAëA 
(
ëAëA 
value
ëAëA !
==
ëAëA" $
Int16
ëAëA% *
.
ëAëA* +
MinValue
ëAëA+ 3
)
ëAëA3 4
return
ëAëA5 ;
false
ëAëA< A
;
ëAëAA B
switch
ìAìA 
(
ìAìA  
tagUnitType
ìAìA  +
)
ìAìA+ ,
{
îAîA 
case
ïAïA  
TagUnitType
ïAïA! ,
.
ïAïA, -
Pixels
ïAïA- 3
:
ïAïA3 4
m_lineHeight
ñAñA  ,
=
ñAñA- .
value
ñAñA/ 4
*
ñAñA5 6
(
ñAñA7 8
m_isOrthographic
ñAñA8 H
?
ñAñAI J
$num
ñAñAK L
:
ñAñAM N
$num
ñAñAO S
)
ñAñAS T
;
ñAñAT U
break
óAóA  %
;
óAóA% &
case
òAòA  
TagUnitType
òAòA! ,
.
òAòA, -
	FontUnits
òAòA- 6
:
òAòA6 7
m_lineHeight
ôAôA  ,
=
ôAôA- .
value
ôAôA/ 4
*
ôAôA5 6
(
ôAôA7 8
m_isOrthographic
ôAôA8 H
?
ôAôAI J
$num
ôAôAK L
:
ôAôAM N
$num
ôAôAO S
)
ôAôAS T
*
ôAôAU V
m_currentFontSize
ôAôAW h
;
ôAôAh i
break
öAöA  %
;
öAöA% &
case
õAõA  
TagUnitType
õAõA! ,
.
õAõA, -

Percentage
õAõA- 7
:
õAõA7 8
	fontScale
úAúA  )
=
úAúA* +
(
úAúA, -
m_currentFontSize
úAúA- >
/
úAúA? @ 
m_currentFontAsset
úAúAA S
.
úAúAS T
faceInfo
úAúAT \
.
úAúA\ ]
	pointSize
úAúA] f
*
úAúAg h 
m_currentFontAsset
úAúAi {
.
úAúA{ |
faceInfoúAúA| Ñ
.úAúAÑ Ö
scaleúAúAÖ ä
*úAúAã å
(úAúAç é 
m_isOrthographicúAúAé û
?úAúAü †
$numúAúA° ¢
:úAúA£ §
$numúAúA• ©
)úAúA© ™
)úAúA™ ´
;úAúA´ ¨
m_lineHeight
ùAùA  ,
=
ùAùA- .
m_fontAsset
ùAùA/ :
.
ùAùA: ;
faceInfo
ùAùA; C
.
ùAùAC D

lineHeight
ùAùAD N
*
ùAùAO P
value
ùAùAQ V
/
ùAùAW X
$num
ùAùAY \
*
ùAùA] ^
	fontScale
ùAùA_ h
;
ùAùAh i
break
ûAûA  %
;
ûAûA% &
}
üAüA 
return
†A†A 
true
†A†A #
;
†A†A# $
case
°A°A 
-
°A°A 
$num
°A°A #
:
°A°A# $
case
¢A¢A 
$num
¢A¢A #
:
¢A¢A# $
m_lineHeight
£A£A $
=
£A£A% &
TMP_Math
£A£A' /
.
£A£A/ 0
FLOAT_UNSET
£A£A0 ;
;
£A£A; <
return
§A§A 
true
§A§A #
;
§A§A# $
case
•A•A 
$num
•A•A !
:
•A•A! "
case
¶A¶A 
$num
¶A¶A !
:
¶A¶A! "
tag_NoParsing
ßAßA %
=
ßAßA& '
true
ßAßA( ,
;
ßAßA, -
return
®A®A 
true
®A®A #
;
®A®A# $
case
©A©A 
$num
©A©A  
:
©A©A  !
case
™A™A 
$num
™A™A  
:
™A™A  !
int
´A´A 
actionID
´A´A $
=
´A´A% &
m_xmlAttribute
´A´A' 5
[
´A´A5 6
$num
´A´A6 7
]
´A´A7 8
.
´A´A8 9
valueHashCode
´A´A9 F
;
´A´AF G
if
≠A≠A 
(
≠A≠A 
m_isParsingText
≠A≠A +
)
≠A≠A+ ,
{
ÆAÆA 
m_actionStack
ØAØA )
.
ØAØA) *
Add
ØAØA* -
(
ØAØA- .
actionID
ØAØA. 6
)
ØAØA6 7
;
ØAØA7 8
Debug
±A±A !
.
±A±A! "
Log
±A±A" %
(
±A±A% &
$str
±A±A& 4
+
±A±A5 6
actionID
±A±A7 ?
+
±A±A@ A
$str
±A±AB ]
+
±A±A^ _
m_characterCount
±A±A` p
)
±A±Ap q
;
±A±Aq r
}
¥A¥A 
return
πAπA 
true
πAπA #
;
πAπA# $
case
∫A∫A 
$num
∫A∫A  
:
∫A∫A  !
case
ªAªA 
$num
ªAªA  
:
ªAªA  !
if
ºAºA 
(
ºAºA 
m_isParsingText
ºAºA +
)
ºAºA+ ,
{
ΩAΩA 
Debug
æAæA !
.
æAæA! "
Log
æAæA" %
(
æAæA% &
$str
æAæA& 4
+
æAæA5 6
m_actionStack
æAæA7 D
.
æAæAD E
CurrentItem
æAæAE P
(
æAæAP Q
)
æAæAQ R
+
æAæAS T
$str
æAæAU o
+
æAæAp q
(
æAæAr s
m_characterCountæAæAs É
-æAæAÑ Ö
$numæAæAÜ á
)æAæAá à
)æAæAà â
;æAæAâ ä
}
øAøA 
m_actionStack
¡A¡A %
.
¡A¡A% &
Remove
¡A¡A& ,
(
¡A¡A, -
)
¡A¡A- .
;
¡A¡A. /
return
¬A¬A 
true
¬A¬A #
;
¬A¬A# $
case
√A√A 
$num
√A√A 
:
√A√A  
case
ƒAƒA 
$num
ƒAƒA 
:
ƒAƒA  
value
≈A≈A 
=
≈A≈A 
ConvertToFloat
≈A≈A  .
(
≈A≈A. /
	m_htmlTag
≈A≈A/ 8
,
≈A≈A8 9
m_xmlAttribute
≈A≈A: H
[
≈A≈AH I
$num
≈A≈AI J
]
≈A≈AJ K
.
≈A≈AK L
valueStartIndex
≈A≈AL [
,
≈A≈A[ \
m_xmlAttribute
≈A≈A] k
[
≈A≈Ak l
$num
≈A≈Al m
]
≈A≈Am n
.
≈A≈An o
valueLength
≈A≈Ao z
)
≈A≈Az {
;
≈A≈A{ |
if
»A»A 
(
»A»A 
value
»A»A !
==
»A»A" $
Int16
»A»A% *
.
»A»A* +
MinValue
»A»A+ 3
)
»A»A3 4
return
»A»A5 ;
false
»A»A< A
;
»A»AA B

m_FXMatrix
 A A "
=
 A A# $
	Matrix4x4
 A A% .
.
 A A. /
TRS
 A A/ 2
(
 A A2 3
Vector3
 A A3 :
.
 A A: ;
zero
 A A; ?
,
 A A? @

Quaternion
 A AA K
.
 A AK L
identity
 A AL T
,
 A AT U
new
 A AV Y
Vector3
 A AZ a
(
 A Aa b
value
 A Ab g
,
 A Ag h
$num
 A Ai j
,
 A Aj k
$num
 A Al m
)
 A Am n
)
 A An o
;
 A Ao p
m_isFXMatrixSet
ÀAÀA '
=
ÀAÀA( )
true
ÀAÀA* .
;
ÀAÀA. /
return
ÕAÕA 
true
ÕAÕA #
;
ÕAÕA# $
case
ŒAŒA 
$num
ŒAŒA  
:
ŒAŒA  !
case
œAœA 
$num
œAœA  
:
œAœA  !
m_isFXMatrixSet
–A–A '
=
–A–A( )
false
–A–A* /
;
–A–A/ 0
return
—A—A 
true
—A—A #
;
—A—A# $
case
“A“A 
$num
“A“A  
:
“A“A  !
case
”A”A 
$num
”A”A  
:
”A”A  !
value
÷A÷A 
=
÷A÷A 
ConvertToFloat
÷A÷A  .
(
÷A÷A. /
	m_htmlTag
÷A÷A/ 8
,
÷A÷A8 9
m_xmlAttribute
÷A÷A: H
[
÷A÷AH I
$num
÷A÷AI J
]
÷A÷AJ K
.
÷A÷AK L
valueStartIndex
÷A÷AL [
,
÷A÷A[ \
m_xmlAttribute
÷A÷A] k
[
÷A÷Ak l
$num
÷A÷Al m
]
÷A÷Am n
.
÷A÷An o
valueLength
÷A÷Ao z
)
÷A÷Az {
;
÷A÷A{ |
if
ŸAŸA 
(
ŸAŸA 
value
ŸAŸA !
==
ŸAŸA" $
Int16
ŸAŸA% *
.
ŸAŸA* +
MinValue
ŸAŸA+ 3
)
ŸAŸA3 4
return
ŸAŸA5 ;
false
ŸAŸA< A
;
ŸAŸAA B

m_FXMatrix
€A€A "
=
€A€A# $
	Matrix4x4
€A€A% .
.
€A€A. /
TRS
€A€A/ 2
(
€A€A2 3
Vector3
€A€A3 :
.
€A€A: ;
zero
€A€A; ?
,
€A€A? @

Quaternion
€A€AA K
.
€A€AK L
Euler
€A€AL Q
(
€A€AQ R
$num
€A€AR S
,
€A€AS T
$num
€A€AU V
,
€A€AV W
value
€A€AX ]
)
€A€A] ^
,
€A€A^ _
Vector3
€A€A` g
.
€A€Ag h
one
€A€Ah k
)
€A€Ak l
;
€A€Al m
m_isFXMatrixSet
‹A‹A '
=
‹A‹A( )
true
‹A‹A* .
;
‹A‹A. /
return
ﬁAﬁA 
true
ﬁAﬁA #
;
ﬁAﬁA# $
case
ﬂAﬂA 
$num
ﬂAﬂA  
:
ﬂAﬂA  !
case
‡A‡A 
$num
‡A‡A  
:
‡A‡A  !
m_isFXMatrixSet
·A·A '
=
·A·A( )
false
·A·A* /
;
·A·A/ 0
return
‚A‚A 
true
‚A‚A #
;
‚A‚A# $
case
„A„A 
$num
„A„A 
:
„A„A  
case
‰A‰A 
$num
‰A‰A 
:
‰A‰A  
return
˚A˚A 
false
˚A˚A $
;
˚A˚A$ %
case
¸A¸A 
$num
¸A¸A  
:
¸A¸A  !
case
˝A˝A 
$num
˝A˝A  
:
˝A˝A  !
return
˛A˛A 
true
˛A˛A #
;
˛A˛A# $
case
ˇAˇA 
$num
ˇAˇA 
:
ˇAˇA 
case
ÄBÄB 
$num
ÄBÄB 
:
ÄBÄB 
return
ÅBÅB 
true
ÅBÅB #
;
ÅBÅB# $
case
ÇBÇB 
$num
ÇBÇB 
:
ÇBÇB 
case
ÉBÉB 
$num
ÉBÉB 
:
ÉBÉB 
return
ÑBÑB 
true
ÑBÑB #
;
ÑBÑB# $
case
ÖBÖB 
$num
ÖBÖB 
:
ÖBÖB 
case
ÜBÜB 
$num
ÜBÜB 
:
ÜBÜB 
return
àBàB 
true
àBàB #
;
àBàB# $
case
âBâB 
$num
âBâB 
:
âBâB 
case
äBäB 
$num
äBäB 
:
äBäB 
return
ãBãB 
true
ãBãB #
;
ãBãB# $
case
åBåB 
$num
åBåB 
:
åBåB 
case
çBçB 
$num
çBçB 
:
çBçB 
return
∑B∑B 
false
∑B∑B $
;
∑B∑B$ %
case
∏B∏B 
$num
∏B∏B 
:
∏B∏B 
case
πBπB 
$num
πBπB 
:
πBπB 
return
∫B∫B 
false
∫B∫B $
;
∫B∫B$ %
}
ªBªB 
}
ºBºB 
return
¿B¿B 
false
¿B¿B 
;
¿B¿B 
}
¡B¡B 	
}
¬B¬B 
}√B√B ô
gC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_SelectionCaret.cs
	namespace 	
TMPro
 
{ 
[

 
RequireComponent

 
(

 
typeof

 
(

 
CanvasRenderer

 +
)

+ ,
)

, -
]

- .
public 

class 
TMP_SelectionCaret #
:$ %
MaskableGraphic& 5
{ 
public 
override 
void 
Cull !
(! "
Rect" &
clipRect' /
,/ 0
bool1 5
	validRect6 ?
)? @
{ 	
if 
( 
	validRect 
) 
{ 
canvasRenderer 
. 
cull #
=$ %
false& +
;+ , 
CanvasUpdateRegistry $
.$ %2
&RegisterCanvasElementForGraphicRebuild% K
(K L
thisL P
)P Q
;Q R
return 
; 
} 
base 
. 
Cull 
( 
clipRect 
, 
	validRect  )
)) *
;* +
} 	
	protected   
override   
void   
UpdateGeometry    .
(  . /
)  / 0
{!! 	
}## 	
}$$ 
}%% úu
gC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_SpriteAnimator.cs
	namespace 	
TMPro
 
{ 
[ %
DisallowMultipleComponent 
] 
public		 

class		 
TMP_SpriteAnimator		 #
:		$ %
MonoBehaviour		& 3
{

 
private 

Dictionary 
< 
int 
, 
bool  $
>$ %
m_animations& 2
=3 4
new5 8

Dictionary9 C
<C D
intD G
,G H
boolI M
>M N
(N O
$numO Q
)Q R
;R S
private 
TMP_Text 
m_TextComponent (
;( )
void 
Awake 
( 
) 
{ 	
m_TextComponent 
= 
GetComponent *
<* +
TMP_Text+ 3
>3 4
(4 5
)5 6
;6 7
} 	
void 
OnEnable 
( 
) 
{ 	
} 	
void 
	OnDisable 
( 
) 
{ 	
}   	
public## 
void## 
StopAllAnimations## %
(##% &
)##& '
{$$ 	
StopAllCoroutines%% 
(%% 
)%% 
;%%  
m_animations&& 
.&& 
Clear&& 
(&& 
)&&  
;&&  !
}'' 	
public** 
void** 
DoSpriteAnimation** %
(**% &
int**& )
currentCharacter*** :
,**: ;
TMP_SpriteAsset**< K
spriteAsset**L W
,**W X
int**Y \
start**] b
,**b c
int**d g
end**h k
,**k l
int**m p
	framerate**q z
)**z {
{++ 	
bool,, 
	isPlaying,, 
;,, 
if// 
(// 
!// 
m_animations// 
.// 
TryGetValue// )
(//) *
currentCharacter//* :
,//: ;
out//< ?
	isPlaying//@ I
)//I J
)//J K
{00 
StartCoroutine11 
(11 %
DoSpriteAnimationInternal11 8
(118 9
currentCharacter119 I
,11I J
spriteAsset11K V
,11V W
start11X ]
,11] ^
end11_ b
,11b c
	framerate11d m
)11m n
)11n o
;11o p
m_animations22 
.22 
Add22  
(22  !
currentCharacter22! 1
,221 2
true223 7
)227 8
;228 9
}33 
}44 	
IEnumerator77 %
DoSpriteAnimationInternal77 -
(77- .
int77. 1
currentCharacter772 B
,77B C
TMP_SpriteAsset77D S
spriteAsset77T _
,77_ `
int77a d
start77e j
,77j k
int77l o
end77p s
,77s t
int77u x
	framerate	77y Ç
)
77Ç É
{88 	
if99 
(99 
m_TextComponent99 
==99  "
null99# '
)99' (
yield99) .
break99/ 4
;994 5
yield<< 
return<< 
null<< 
;<< 
int>> 
currentFrame>> 
=>> 
start>> $
;>>$ %
ifAA 
(AA 
endAA 
>AA 
spriteAssetAA !
.AA! " 
spriteCharacterTableAA" 6
.AA6 7
CountAA7 <
)AA< =
endBB 
=BB 
spriteAssetBB !
.BB! " 
spriteCharacterTableBB" 6
.BB6 7
CountBB7 <
-BB= >
$numBB? @
;BB@ A
TMP_CharacterInfoEE 
charInfoEE &
=EE' (
m_TextComponentEE) 8
.EE8 9
textInfoEE9 A
.EEA B
characterInfoEEB O
[EEO P
currentCharacterEEP `
]EE` a
;EEa b
intGG 
materialIndexGG 
=GG 
charInfoGG  (
.GG( )"
materialReferenceIndexGG) ?
;GG? @
intHH 
vertexIndexHH 
=HH 
charInfoHH &
.HH& '
vertexIndexHH' 2
;HH2 3
TMP_MeshInfoJJ 
meshInfoJJ !
=JJ" #
m_TextComponentJJ$ 3
.JJ3 4
textInfoJJ4 <
.JJ< =
meshInfoJJ= E
[JJE F
materialIndexJJF S
]JJS T
;JJT U
floatLL 
baseSpriteScaleLL !
=LL" #
spriteAssetLL$ /
.LL/ 0 
spriteCharacterTableLL0 D
[LLD E
startLLE J
]LLJ K
.LLK L
scaleLLL Q
*LLR S
spriteAssetLLT _
.LL_ ` 
spriteCharacterTableLL` t
[LLt u
startLLu z
]LLz {
.LL{ |
glyph	LL| Å
.
LLÅ Ç
scale
LLÇ á
;
LLá à
floatNN 
elapsedTimeNN 
=NN 
$numNN  !
;NN! "
floatOO 

targetTimeOO 
=OO 
$numOO !
/OO" #
MathfOO$ )
.OO) *
AbsOO* -
(OO- .
	framerateOO. 7
)OO7 8
;OO8 9
whileQQ 
(QQ 
trueQQ 
)QQ 
{RR 
ifSS 
(SS 
elapsedTimeSS 
>SS  !

targetTimeSS" ,
)SS, -
{TT 
elapsedTimeUU 
=UU  !
$numUU" #
;UU# $
charXX 
	characterXX "
=XX# $
m_TextComponentXX% 4
.XX4 5
textInfoXX5 =
.XX= >
characterInfoXX> K
[XXK L
currentCharacterXXL \
]XX\ ]
.XX] ^
	characterXX^ g
;XXg h
ifYY 
(YY 
	characterYY !
==YY" $
$numYY% )
||YY* ,
	characterYY- 6
==YY7 9
$numYY: @
)YY@ A
{ZZ 
m_animations[[ $
.[[$ %
Remove[[% +
([[+ ,
currentCharacter[[, <
)[[< =
;[[= >
yield\\ 
break\\ #
;\\# $
}]] 
TMP_SpriteCharacter`` '
spriteCharacter``( 7
=``8 9
spriteAsset``: E
.``E F 
spriteCharacterTable``F Z
[``Z [
currentFrame``[ g
]``g h
;``h i
Vector3cc 
[cc 
]cc 
verticescc &
=cc' (
meshInfocc) 1
.cc1 2
verticescc2 :
;cc: ;
Vector2ee 
originee "
=ee# $
newee% (
Vector2ee) 0
(ee0 1
charInfoee1 9
.ee9 :
originee: @
,ee@ A
charInfoeeB J
.eeJ K
baseLineeeK S
)eeS T
;eeT U
floatgg 
spriteScalegg %
=gg& '
charInfogg( 0
.gg0 1
scalegg1 6
/gg7 8
baseSpriteScalegg9 H
*ggI J
spriteCharacterggK Z
.ggZ [
scalegg[ `
*gga b
spriteCharacterggc r
.ggr s
glyphggs x
.ggx y
scaleggy ~
;gg~ 
Vector3ii 
blii 
=ii  
newii! $
Vector3ii% ,
(ii, -
originii- 3
.ii3 4
xii4 5
+ii6 7
spriteCharacterii8 G
.iiG H
glyphiiH M
.iiM N
metricsiiN U
.iiU V
horizontalBearingXiiV h
*iii j
spriteScaleiik v
,iiv w
originiix ~
.ii~ 
y	ii Ä
+
iiÅ Ç
(
iiÉ Ñ
spriteCharacter
iiÑ ì
.
iiì î
glyph
iiî ô
.
iiô ö
metrics
iiö °
.
ii° ¢ 
horizontalBearingY
ii¢ ¥
-
iiµ ∂
spriteCharacter
ii∑ ∆
.
ii∆ «
glyph
ii« Ã
.
iiÃ Õ
metrics
iiÕ ‘
.
ii‘ ’
height
ii’ €
)
ii€ ‹
*
ii› ﬁ
spriteScale
iiﬂ Í
)
iiÍ Î
;
iiÎ Ï
Vector3jj 
tljj 
=jj  
newjj! $
Vector3jj% ,
(jj, -
bljj- /
.jj/ 0
xjj0 1
,jj1 2
originjj3 9
.jj9 :
yjj: ;
+jj< =
spriteCharacterjj> M
.jjM N
glyphjjN S
.jjS T
metricsjjT [
.jj[ \
horizontalBearingYjj\ n
*jjo p
spriteScalejjq |
)jj| }
;jj} ~
Vector3kk 
trkk 
=kk  
newkk! $
Vector3kk% ,
(kk, -
originkk- 3
.kk3 4
xkk4 5
+kk6 7
(kk8 9
spriteCharacterkk9 H
.kkH I
glyphkkI N
.kkN O
metricskkO V
.kkV W
horizontalBearingXkkW i
+kkj k
spriteCharacterkkl {
.kk{ |
glyph	kk| Å
.
kkÅ Ç
metrics
kkÇ â
.
kkâ ä
width
kkä è
)
kkè ê
*
kkë í
spriteScale
kkì û
,
kkû ü
tl
kk† ¢
.
kk¢ £
y
kk£ §
)
kk§ •
;
kk• ¶
Vector3ll 
brll 
=ll  
newll! $
Vector3ll% ,
(ll, -
trll- /
.ll/ 0
xll0 1
,ll1 2
blll3 5
.ll5 6
yll6 7
)ll7 8
;ll8 9
verticesnn 
[nn 
vertexIndexnn (
+nn) *
$numnn+ ,
]nn, -
=nn. /
blnn0 2
;nn2 3
verticesoo 
[oo 
vertexIndexoo (
+oo) *
$numoo+ ,
]oo, -
=oo. /
tloo0 2
;oo2 3
verticespp 
[pp 
vertexIndexpp (
+pp) *
$numpp+ ,
]pp, -
=pp. /
trpp0 2
;pp2 3
verticesqq 
[qq 
vertexIndexqq (
+qq) *
$numqq+ ,
]qq, -
=qq. /
brqq0 2
;qq2 3
Vector2tt 
[tt 
]tt 
uvs0tt "
=tt# $
meshInfott% -
.tt- .
uvs0tt. 2
;tt2 3
Vector2vv 
uv0vv 
=vv  !
newvv" %
Vector2vv& -
(vv- .
(vv. /
floatvv/ 4
)vv4 5
spriteCharactervv5 D
.vvD E
glyphvvE J
.vvJ K
	glyphRectvvK T
.vvT U
xvvU V
/vvW X
spriteAssetvvY d
.vvd e
spriteSheetvve p
.vvp q
widthvvq v
,vvv w
(vvx y
floatvvy ~
)vv~ 
spriteCharacter	vv é
.
vvé è
glyph
vvè î
.
vvî ï
	glyphRect
vvï û
.
vvû ü
y
vvü †
/
vv° ¢
spriteAsset
vv£ Æ
.
vvÆ Ø
spriteSheet
vvØ ∫
.
vv∫ ª
height
vvª ¡
)
vv¡ ¬
;
vv¬ √
Vector2ww 
uv1ww 
=ww  !
newww" %
Vector2ww& -
(ww- .
uv0ww. 1
.ww1 2
xww2 3
,ww3 4
(ww5 6
floatww6 ;
)ww; <
(ww< =
spriteCharacterww= L
.wwL M
glyphwwM R
.wwR S
	glyphRectwwS \
.ww\ ]
yww] ^
+ww_ `
spriteCharacterwwa p
.wwp q
glyphwwq v
.wwv w
	glyphRect	www Ä
.
wwÄ Å
height
wwÅ á
)
wwá à
/
wwâ ä
spriteAsset
wwã ñ
.
wwñ ó
spriteSheet
wwó ¢
.
ww¢ £
height
ww£ ©
)
ww© ™
;
ww™ ´
Vector2xx 
uv2xx 
=xx  !
newxx" %
Vector2xx& -
(xx- .
(xx. /
floatxx/ 4
)xx4 5
(xx5 6
spriteCharacterxx6 E
.xxE F
glyphxxF K
.xxK L
	glyphRectxxL U
.xxU V
xxxV W
+xxX Y
spriteCharacterxxZ i
.xxi j
glyphxxj o
.xxo p
	glyphRectxxp y
.xxy z
widthxxz 
)	xx Ä
/
xxÅ Ç
spriteAsset
xxÉ é
.
xxé è
spriteSheet
xxè ö
.
xxö õ
width
xxõ †
,
xx† °
uv1
xx¢ •
.
xx• ¶
y
xx¶ ß
)
xxß ®
;
xx® ©
Vector2yy 
uv3yy 
=yy  !
newyy" %
Vector2yy& -
(yy- .
uv2yy. 1
.yy1 2
xyy2 3
,yy3 4
uv0yy5 8
.yy8 9
yyy9 :
)yy: ;
;yy; <
uvs0{{ 
[{{ 
vertexIndex{{ $
+{{% &
$num{{' (
]{{( )
={{* +
uv0{{, /
;{{/ 0
uvs0|| 
[|| 
vertexIndex|| $
+||% &
$num||' (
]||( )
=||* +
uv1||, /
;||/ 0
uvs0}} 
[}} 
vertexIndex}} $
+}}% &
$num}}' (
]}}( )
=}}* +
uv2}}, /
;}}/ 0
uvs0~~ 
[~~ 
vertexIndex~~ $
+~~% &
$num~~' (
]~~( )
=~~* +
uv3~~, /
;~~/ 0
meshInfo
ÅÅ 
.
ÅÅ 
mesh
ÅÅ !
.
ÅÅ! "
vertices
ÅÅ" *
=
ÅÅ+ ,
vertices
ÅÅ- 5
;
ÅÅ5 6
meshInfo
ÇÇ 
.
ÇÇ 
mesh
ÇÇ !
.
ÇÇ! "
uv
ÇÇ" $
=
ÇÇ% &
uvs0
ÇÇ' +
;
ÇÇ+ ,
m_TextComponent
ÉÉ #
.
ÉÉ# $
UpdateGeometry
ÉÉ$ 2
(
ÉÉ2 3
meshInfo
ÉÉ3 ;
.
ÉÉ; <
mesh
ÉÉ< @
,
ÉÉ@ A
materialIndex
ÉÉB O
)
ÉÉO P
;
ÉÉP Q
if
ÜÜ 
(
ÜÜ 
	framerate
ÜÜ !
>
ÜÜ" #
$num
ÜÜ$ %
)
ÜÜ% &
{
áá 
if
àà 
(
àà 
currentFrame
àà (
<
àà) *
end
àà+ .
)
àà. /
currentFrame
ââ (
+=
ââ) +
$num
ââ, -
;
ââ- .
else
ää 
currentFrame
ãã (
=
ãã) *
start
ãã+ 0
;
ãã0 1
}
åå 
else
çç 
{
éé 
if
èè 
(
èè 
currentFrame
èè (
>
èè) *
start
èè+ 0
)
èè0 1
currentFrame
êê (
-=
êê) +
$num
êê, -
;
êê- .
else
ëë 
currentFrame
íí (
=
íí) *
end
íí+ .
;
íí. /
}
ìì 
}
îî 
elapsedTime
ññ 
+=
ññ 
Time
ññ #
.
ññ# $
	deltaTime
ññ$ -
;
ññ- .
yield
òò 
return
òò 
null
òò !
;
òò! "
}
ôô 
}
öö 	
}
úú 
}ùù Á#
qC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_SpriteAssetImportFormats.cs
	namespace 	
TMPro
 
.  
SpriteAssetUtilities $
{ 
public 

enum $
SpriteAssetImportFormats (
{) *
None+ /
=0 1
$num2 3
,3 4"
TexturePackerJsonArray5 K
=L M
$numN Q
}R S
;S T
public		 

class		 #
TexturePacker_JsonArray		 (
{

 
[ 	
System	 
. 
Serializable 
] 
public 
struct 
SpriteFrame !
{ 	
public 
float 
x 
; 
public 
float 
y 
; 
public 
float 
w 
; 
public 
float 
h 
; 
public 
override 
string "
ToString# +
(+ ,
), -
{ 
string 
s 
= 
$str  
+! "
x# $
.$ %
ToString% -
(- .
$str. 2
)2 3
+4 5
$str6 <
+= >
y? @
.@ A
ToStringA I
(I J
$strJ N
)N O
+P Q
$strR X
+Y Z
h[ \
.\ ]
ToString] e
(e f
$strf j
)j k
+l m
$strn t
+u v
ww x
.x y
ToString	y Å
(
Å Ç
$str
Ç Ü
)
Ü á
;
á à
return 
s 
; 
} 
} 	
[ 	
System	 
. 
Serializable 
] 
public 
struct 

SpriteSize  
{ 	
public 
float 
w 
; 
public 
float 
h 
; 
public   
override   
string   "
ToString  # +
(  + ,
)  , -
{!! 
string"" 
s"" 
="" 
$str""  
+""! "
w""# $
.""$ %
ToString""% -
(""- .
$str"". 2
)""2 3
+""4 5
$str""6 <
+""= >
h""? @
.""@ A
ToString""A I
(""I J
$str""J N
)""N O
;""O P
return## 
s## 
;## 
}$$ 
}%% 	
['' 	
System''	 
.'' 
Serializable'' 
]'' 
public(( 
struct(( 
Frame(( 
{)) 	
public** 
string** 
filename** "
;**" #
public++ 
SpriteFrame++ 
frame++ $
;++$ %
public,, 
bool,, 
rotated,, 
;,,  
public-- 
bool-- 
trimmed-- 
;--  
public.. 
SpriteFrame.. 
spriteSourceSize.. /
;../ 0
public// 

SpriteSize// 

sourceSize// (
;//( )
public00 
Vector200 
pivot00  
;00  !
}11 	
[33 	
System33	 
.33 
Serializable33 
]33 
public44 
struct44 
Meta44 
{55 	
public66 
string66 
app66 
;66 
public77 
string77 
version77 !
;77! "
public88 
string88 
image88 
;88  
public99 
string99 
format99  
;99  !
public:: 

SpriteSize:: 
size:: "
;::" #
public;; 
float;; 
scale;; 
;;; 
public<< 
string<< 
smartupdate<< %
;<<% &
}== 	
[?? 	
System??	 
.?? 
Serializable?? 
]?? 
public@@ 
class@@ 
SpriteDataObject@@ %
{AA 	
publicBB 
ListBB 
<BB 
FrameBB 
>BB 
framesBB %
;BB% &
publicCC 
MetaCC 
metaCC 
;CC 
}DD 	
}EE 
}FF Ès
_C:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\FastAction.cs
	namespace 	
TMPro
 
{ 
public 

class 

FastAction 
{		 

LinkedList 
< 
System 
. 
Action  
>  !
	delegates" +
=, -
new. 1

LinkedList2 <
<< =
System= C
.C D
ActionD J
>J K
(K L
)L M
;M N

Dictionary 
< 
System 
. 
Action  
,  !
LinkedListNode" 0
<0 1
System1 7
.7 8
Action8 >
>> ?
>? @
lookupA G
=H I
newJ M

DictionaryN X
<X Y
SystemY _
._ `
Action` f
,f g
LinkedListNodeh v
<v w
Systemw }
.} ~
Action	~ Ñ
>
Ñ Ö
>
Ö Ü
(
Ü á
)
á à
;
à â
public 
void 
Add 
( 
System 
. 
Action %
rhs& )
)) *
{ 	
if 
( 
lookup 
. 
ContainsKey "
(" #
rhs# &
)& '
)' (
return) /
;/ 0
lookup 
[ 
rhs 
] 
= 
	delegates #
.# $
AddLast$ +
(+ ,
rhs, /
)/ 0
;0 1
} 	
public 
void 
Remove 
( 
System !
.! "
Action" (
rhs) ,
), -
{ 	
LinkedListNode 
< 
System !
.! "
Action" (
>( )
node* .
;. /
if 
( 
lookup 
. 
TryGetValue "
(" #
rhs# &
,& '
out( +
node, 0
)0 1
)1 2
{ 
lookup 
. 
Remove 
( 
rhs !
)! "
;" #
	delegates 
. 
Remove  
(  !
node! %
)% &
;& '
} 
} 	
public   
void   
Call   
(   
)   
{!! 	
var"" 
node"" 
="" 
	delegates""  
.""  !
First""! &
;""& '
while## 
(## 
node## 
!=## 
null## 
)##  
{$$ 
node%% 
.%% 
Value%% 
(%% 
)%% 
;%% 
node&& 
=&& 
node&& 
.&& 
Next&&  
;&&  !
}'' 
}(( 	
})) 
public,, 

class,, 

FastAction,, 
<,, 
A,, 
>,, 
{-- 

LinkedList// 
<// 
System// 
.// 
Action//  
<//  !
A//! "
>//" #
>//# $
	delegates//% .
=/// 0
new//1 4

LinkedList//5 ?
<//? @
System//@ F
.//F G
Action//G M
<//M N
A//N O
>//O P
>//P Q
(//Q R
)//R S
;//S T

Dictionary11 
<11 
System11 
.11 
Action11  
<11  !
A11! "
>11" #
,11# $
LinkedListNode11% 3
<113 4
System114 :
.11: ;
Action11; A
<11A B
A11B C
>11C D
>11D E
>11E F
lookup11G M
=11N O
new11P S

Dictionary11T ^
<11^ _
System11_ e
.11e f
Action11f l
<11l m
A11m n
>11n o
,11o p
LinkedListNode11q 
<	11 Ä
System
11Ä Ü
.
11Ü á
Action
11á ç
<
11ç é
A
11é è
>
11è ê
>
11ê ë
>
11ë í
(
11í ì
)
11ì î
;
11î ï
public33 
void33 
Add33 
(33 
System33 
.33 
Action33 %
<33% &
A33& '
>33' (
rhs33) ,
)33, -
{44 	
if55 
(55 
lookup55 
.55 
ContainsKey55 "
(55" #
rhs55# &
)55& '
)55' (
return55) /
;55/ 0
lookup77 
[77 
rhs77 
]77 
=77 
	delegates77 #
.77# $
AddLast77$ +
(77+ ,
rhs77, /
)77/ 0
;770 1
}88 	
public:: 
void:: 
Remove:: 
(:: 
System:: !
.::! "
Action::" (
<::( )
A::) *
>::* +
rhs::, /
)::/ 0
{;; 	
LinkedListNode<< 
<<< 
System<< !
.<<! "
Action<<" (
<<<( )
A<<) *
><<* +
><<+ ,
node<<- 1
;<<1 2
if== 
(== 
lookup== 
.== 
TryGetValue== "
(==" #
rhs==# &
,==& '
out==( +
node==, 0
)==0 1
)==1 2
{>> 
lookup?? 
.?? 
Remove?? 
(?? 
rhs?? !
)??! "
;??" #
	delegates@@ 
.@@ 
Remove@@  
(@@  !
node@@! %
)@@% &
;@@& '
}AA 
}BB 	
publicDD 
voidDD 
CallDD 
(DD 
ADD 
aDD 
)DD 
{EE 	
varFF 
nodeFF 
=FF 
	delegatesFF  
.FF  !
FirstFF! &
;FF& '
whileGG 
(GG 
nodeGG 
!=GG 
nullGG 
)GG  
{HH 
nodeII 
.II 
ValueII 
(II 
aII 
)II 
;II 
nodeJJ 
=JJ 
nodeJJ 
.JJ 
NextJJ  
;JJ  !
}KK 
}LL 	
}MM 
publicPP 

classPP 

FastActionPP 
<PP 
APP 
,PP 
BPP  
>PP  !
{QQ 

LinkedListSS 
<SS 
SystemSS 
.SS 
ActionSS  
<SS  !
ASS! "
,SS" #
BSS$ %
>SS% &
>SS& '
	delegatesSS( 1
=SS2 3
newSS4 7

LinkedListSS8 B
<SSB C
SystemSSC I
.SSI J
ActionSSJ P
<SSP Q
ASSQ R
,SSR S
BSST U
>SSU V
>SSV W
(SSW X
)SSX Y
;SSY Z

DictionaryUU 
<UU 
SystemUU 
.UU 
ActionUU  
<UU  !
AUU! "
,UU" #
BUU$ %
>UU% &
,UU& '
LinkedListNodeUU( 6
<UU6 7
SystemUU7 =
.UU= >
ActionUU> D
<UUD E
AUUE F
,UUF G
BUUH I
>UUI J
>UUJ K
>UUK L
lookupUUM S
=UUT U
newUUV Y

DictionaryUUZ d
<UUd e
SystemUUe k
.UUk l
ActionUUl r
<UUr s
AUUs t
,UUt u
BUUv w
>UUw x
,UUx y
LinkedListNode	UUz à
<
UUà â
System
UUâ è
.
UUè ê
Action
UUê ñ
<
UUñ ó
A
UUó ò
,
UUò ô
B
UUö õ
>
UUõ ú
>
UUú ù
>
UUù û
(
UUû ü
)
UUü †
;
UU† °
publicWW 
voidWW 
AddWW 
(WW 
SystemWW 
.WW 
ActionWW %
<WW% &
AWW& '
,WW' (
BWW) *
>WW* +
rhsWW, /
)WW/ 0
{XX 	
ifYY 
(YY 
lookupYY 
.YY 
ContainsKeyYY "
(YY" #
rhsYY# &
)YY& '
)YY' (
returnYY) /
;YY/ 0
lookup[[ 
[[[ 
rhs[[ 
][[ 
=[[ 
	delegates[[ #
.[[# $
AddLast[[$ +
([[+ ,
rhs[[, /
)[[/ 0
;[[0 1
}\\ 	
public^^ 
void^^ 
Remove^^ 
(^^ 
System^^ !
.^^! "
Action^^" (
<^^( )
A^^) *
,^^* +
B^^, -
>^^- .
rhs^^/ 2
)^^2 3
{__ 	
LinkedListNode`` 
<`` 
System`` !
.``! "
Action``" (
<``( )
A``) *
,``* +
B``, -
>``- .
>``. /
node``0 4
;``4 5
ifaa 
(aa 
lookupaa 
.aa 
TryGetValueaa "
(aa" #
rhsaa# &
,aa& '
outaa( +
nodeaa, 0
)aa0 1
)aa1 2
{bb 
lookupcc 
.cc 
Removecc 
(cc 
rhscc !
)cc! "
;cc" #
	delegatesdd 
.dd 
Removedd  
(dd  !
nodedd! %
)dd% &
;dd& '
}ee 
}ff 	
publichh 
voidhh 
Callhh 
(hh 
Ahh 
ahh 
,hh 
Bhh 
bhh  !
)hh! "
{ii 	
varjj 
nodejj 
=jj 
	delegatesjj  
.jj  !
Firstjj! &
;jj& '
whilekk 
(kk 
nodekk 
!=kk 
nullkk 
)kk  
{ll 
nodemm 
.mm 
Valuemm 
(mm 
amm 
,mm 
bmm 
)mm  
;mm  !
nodenn 
=nn 
nodenn 
.nn 
Nextnn  
;nn  !
}oo 
}pp 	
}qq 
publictt 

classtt 

FastActiontt 
<tt 
Att 
,tt 
Btt  
,tt  !
Ctt" #
>tt# $
{uu 

LinkedListww 
<ww 
Systemww 
.ww 
Actionww  
<ww  !
Aww! "
,ww" #
Bww$ %
,ww% &
Cww' (
>ww( )
>ww) *
	delegatesww+ 4
=ww5 6
newww7 :

LinkedListww; E
<wwE F
SystemwwF L
.wwL M
ActionwwM S
<wwS T
AwwT U
,wwU V
BwwW X
,wwX Y
CwwZ [
>ww[ \
>ww\ ]
(ww] ^
)ww^ _
;ww_ `

Dictionaryyy 
<yy 
Systemyy 
.yy 
Actionyy  
<yy  !
Ayy! "
,yy" #
Byy$ %
,yy% &
Cyy' (
>yy( )
,yy) *
LinkedListNodeyy+ 9
<yy9 :
Systemyy: @
.yy@ A
ActionyyA G
<yyG H
AyyH I
,yyI J
ByyK L
,yyL M
CyyN O
>yyO P
>yyP Q
>yyQ R
lookupyyS Y
=yyZ [
newyy\ _

Dictionaryyy` j
<yyj k
Systemyyk q
.yyq r
Actionyyr x
<yyx y
Ayyy z
,yyz {
Byy| }
,yy} ~
C	yy Ä
>
yyÄ Å
,
yyÅ Ç
LinkedListNode
yyÉ ë
<
yyë í
System
yyí ò
.
yyò ô
Action
yyô ü
<
yyü †
A
yy† °
,
yy° ¢
B
yy£ §
,
yy§ •
C
yy¶ ß
>
yyß ®
>
yy® ©
>
yy© ™
(
yy™ ´
)
yy´ ¨
;
yy¨ ≠
public{{ 
void{{ 
Add{{ 
({{ 
System{{ 
.{{ 
Action{{ %
<{{% &
A{{& '
,{{' (
B{{) *
,{{* +
C{{, -
>{{- .
rhs{{/ 2
){{2 3
{|| 	
if}} 
(}} 
lookup}} 
.}} 
ContainsKey}} "
(}}" #
rhs}}# &
)}}& '
)}}' (
return}}) /
;}}/ 0
lookup 
[ 
rhs 
] 
= 
	delegates #
.# $
AddLast$ +
(+ ,
rhs, /
)/ 0
;0 1
}
ÄÄ 	
public
ÇÇ 
void
ÇÇ 
Remove
ÇÇ 
(
ÇÇ 
System
ÇÇ !
.
ÇÇ! "
Action
ÇÇ" (
<
ÇÇ( )
A
ÇÇ) *
,
ÇÇ* +
B
ÇÇ, -
,
ÇÇ- .
C
ÇÇ/ 0
>
ÇÇ0 1
rhs
ÇÇ2 5
)
ÇÇ5 6
{
ÉÉ 	
LinkedListNode
ÑÑ 
<
ÑÑ 
System
ÑÑ !
.
ÑÑ! "
Action
ÑÑ" (
<
ÑÑ( )
A
ÑÑ) *
,
ÑÑ* +
B
ÑÑ, -
,
ÑÑ- .
C
ÑÑ/ 0
>
ÑÑ0 1
>
ÑÑ1 2
node
ÑÑ3 7
;
ÑÑ7 8
if
ÖÖ 
(
ÖÖ 
lookup
ÖÖ 
.
ÖÖ 
TryGetValue
ÖÖ "
(
ÖÖ" #
rhs
ÖÖ# &
,
ÖÖ& '
out
ÖÖ( +
node
ÖÖ, 0
)
ÖÖ0 1
)
ÖÖ1 2
{
ÜÜ 
lookup
áá 
.
áá 
Remove
áá 
(
áá 
rhs
áá !
)
áá! "
;
áá" #
	delegates
àà 
.
àà 
Remove
àà  
(
àà  !
node
àà! %
)
àà% &
;
àà& '
}
ââ 
}
ää 	
public
åå 
void
åå 
Call
åå 
(
åå 
A
åå 
a
åå 
,
åå 
B
åå 
b
åå  !
,
åå! "
C
åå# $
c
åå% &
)
åå& '
{
çç 	
var
éé 
node
éé 
=
éé 
	delegates
éé  
.
éé  !
First
éé! &
;
éé& '
while
èè 
(
èè 
node
èè 
!=
èè 
null
èè 
)
èè  
{
êê 
node
ëë 
.
ëë 
Value
ëë 
(
ëë 
a
ëë 
,
ëë 
b
ëë 
,
ëë  
c
ëë! "
)
ëë" #
;
ëë# $
node
íí 
=
íí 
node
íí 
.
íí 
Next
íí  
;
íí  !
}
ìì 
}
îî 	
}
ïï 
}ññ »˘
hC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_FontAssetCommon.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public 

class 
FaceInfo_Legacy  
{ 
public 
string 
Name 
; 
public 
float 
	PointSize 
; 
public 
float 
Scale 
; 
public 
int 
CharacterCount !
;! "
public 
float 

LineHeight 
;  
public 
float 
Baseline 
; 
public 
float 
Ascender 
; 
public 
float 
	CapHeight 
; 
public 
float 
	Descender 
; 
public 
float 

CenterLine 
;  
public   
float   
SuperscriptOffset   &
;  & '
public!! 
float!! 
SubscriptOffset!! $
;!!$ %
public"" 
float"" 
SubSize"" 
;"" 
public$$ 
float$$ 
	Underline$$ 
;$$ 
public%% 
float%% 
UnderlineThickness%% '
;%%' (
public'' 
float'' 
strikethrough'' "
;''" #
public(( 
float(( "
strikethroughThickness(( +
;((+ ,
public** 
float** 
TabWidth** 
;** 
public,, 
float,, 
Padding,, 
;,, 
public-- 
float-- 

AtlasWidth-- 
;--  
public.. 
float.. 
AtlasHeight..  
;..  !
}// 
[33 
Serializable33 
]33 
public44 

class44 
	TMP_Glyph44 
:44 "
TMP_TextElement_Legacy44 3
{55 
public;; 
static;; 
	TMP_Glyph;; 
Clone;;  %
(;;% &
	TMP_Glyph;;& /
source;;0 6
);;6 7
{<< 	
	TMP_Glyph== 
copy== 
=== 
new==  
	TMP_Glyph==! *
(==* +
)==+ ,
;==, -
copy?? 
.?? 
id?? 
=?? 
source?? 
.?? 
id?? 
;??  
copy@@ 
.@@ 
x@@ 
=@@ 
source@@ 
.@@ 
x@@ 
;@@ 
copyAA 
.AA 
yAA 
=AA 
sourceAA 
.AA 
yAA 
;AA 
copyBB 
.BB 
widthBB 
=BB 
sourceBB 
.BB  
widthBB  %
;BB% &
copyCC 
.CC 
heightCC 
=CC 
sourceCC  
.CC  !
heightCC! '
;CC' (
copyDD 
.DD 
xOffsetDD 
=DD 
sourceDD !
.DD! "
xOffsetDD" )
;DD) *
copyEE 
.EE 
yOffsetEE 
=EE 
sourceEE !
.EE! "
yOffsetEE" )
;EE) *
copyFF 
.FF 
xAdvanceFF 
=FF 
sourceFF "
.FF" #
xAdvanceFF# +
;FF+ ,
copyGG 
.GG 
scaleGG 
=GG 
sourceGG 
.GG  
scaleGG  %
;GG% &
returnII 
copyII 
;II 
}JJ 	
}KK 
[OO 
SerializableOO 
]OO 
publicPP 

structPP %
FontAssetCreationSettingsPP +
{QQ 
publicRR 
stringRR 
sourceFontFileNameRR (
;RR( )
publicSS 
stringSS 
sourceFontFileGUIDSS (
;SS( )
publicTT 
intTT !
pointSizeSamplingModeTT (
;TT( )
publicUU 
intUU 
	pointSizeUU 
;UU 
publicVV 
intVV 
paddingVV 
;VV 
publicWW 
intWW 
packingModeWW 
;WW 
publicXX 
intXX 

atlasWidthXX 
;XX 
publicYY 
intYY 
atlasHeightYY 
;YY 
publicZZ 
intZZ %
characterSetSelectionModeZZ ,
;ZZ, -
public[[ 
string[[ 
characterSequence[[ '
;[[' (
public\\ 
string\\ #
referencedFontAssetGUID\\ -
;\\- .
public]] 
string]] #
referencedTextAssetGUID]] -
;]]- .
public^^ 
int^^ 
	fontStyle^^ 
;^^ 
public__ 
float__ 
fontStyleModifier__ &
;__& '
public`` 
int`` 

renderMode`` 
;`` 
publicaa 
boolaa 
includeFontFeaturesaa '
;aa' (
internalcc %
FontAssetCreationSettingscc *
(cc* +
stringcc+ 1
sourceFontFileGUIDcc2 D
,ccD E
intccF I
	pointSizeccJ S
,ccS T
intccU X!
pointSizeSamplingModeccY n
,ccn o
intccp s
paddingcct {
,cc{ |
int	cc} Ä
packingMode
ccÅ å
,
ccå ç
int
ccé ë

atlasWidth
ccí ú
,
ccú ù
int
ccû °
atlasHeight
cc¢ ≠
,
cc≠ Æ
int
ccØ ≤$
characterSelectionMode
cc≥ …
,
cc…  
string
ccÀ —
characterSet
cc“ ﬁ
,
ccﬁ ﬂ
int
cc‡ „

renderMode
cc‰ Ó
)
ccÓ Ô
{dd 	
thisee 
.ee 
sourceFontFileNameee #
=ee$ %
stringee& ,
.ee, -
Emptyee- 2
;ee2 3
thisff 
.ff 
sourceFontFileGUIDff #
=ff$ %
sourceFontFileGUIDff& 8
;ff8 9
thisgg 
.gg 
	pointSizegg 
=gg 
	pointSizegg &
;gg& '
thishh 
.hh !
pointSizeSamplingModehh &
=hh' (!
pointSizeSamplingModehh) >
;hh> ?
thisii 
.ii 
paddingii 
=ii 
paddingii "
;ii" #
thisjj 
.jj 
packingModejj 
=jj 
packingModejj *
;jj* +
thiskk 
.kk 

atlasWidthkk 
=kk 

atlasWidthkk (
;kk( )
thisll 
.ll 
atlasHeightll 
=ll 
atlasHeightll *
;ll* +
thismm 
.mm 
characterSequencemm "
=mm# $
characterSetmm% 1
;mm1 2
thisnn 
.nn %
characterSetSelectionModenn *
=nn+ ,"
characterSelectionModenn- C
;nnC D
thisoo 
.oo 

renderModeoo 
=oo 

renderModeoo (
;oo( )
thisqq 
.qq #
referencedFontAssetGUIDqq (
=qq) *
stringqq+ 1
.qq1 2
Emptyqq2 7
;qq7 8
thisrr 
.rr #
referencedTextAssetGUIDrr (
=rr) *
stringrr+ 1
.rr1 2
Emptyrr2 7
;rr7 8
thisss 
.ss 
	fontStyless 
=ss 
$numss 
;ss 
thistt 
.tt 
fontStyleModifiertt "
=tt# $
$numtt% &
;tt& '
thisuu 
.uu 
includeFontFeaturesuu $
=uu% &
falseuu' ,
;uu, -
}vv 	
}ww 
[|| 
Serializable|| 
]|| 
public}} 

struct}} 
TMP_FontWeightPair}} $
{~~ 
public 
TMP_FontAsset 
regularTypeface ,
;, -
public
ÄÄ 
TMP_FontAsset
ÄÄ 
italicTypeface
ÄÄ +
;
ÄÄ+ ,
}
ÅÅ 
public
ÑÑ 

struct
ÑÑ 
KerningPairKey
ÑÑ  
{
ÖÖ 
public
ÜÜ 
uint
ÜÜ 

ascii_Left
ÜÜ 
;
ÜÜ 
public
áá 
uint
áá 
ascii_Right
áá 
;
áá  
public
àà 
uint
àà 
key
àà 
;
àà 
public
ää 
KerningPairKey
ää 
(
ää 
uint
ää "

ascii_left
ää# -
,
ää- .
uint
ää/ 3
ascii_right
ää4 ?
)
ää? @
{
ãã 	

ascii_Left
åå 
=
åå 

ascii_left
åå #
;
åå# $
ascii_Right
çç 
=
çç 
ascii_right
çç %
;
çç% &
key
éé 
=
éé 
(
éé 
ascii_right
éé 
<<
éé !
$num
éé" $
)
éé$ %
+
éé& '

ascii_left
éé( 2
;
éé2 3
}
èè 	
}
êê 
[
ïï 
Serializable
ïï 
]
ïï 
public
ññ 

struct
ññ %
GlyphValueRecord_Legacy
ññ )
{
óó 
public
òò 
float
òò 

xPlacement
òò 
;
òò  
public
ôô 
float
ôô 

yPlacement
ôô 
;
ôô  
public
öö 
float
öö 
xAdvance
öö 
;
öö 
public
õõ 
float
õõ 
yAdvance
õõ 
;
õõ 
internal
ùù %
GlyphValueRecord_Legacy
ùù (
(
ùù( )
UnityEngine
ùù) 4
.
ùù4 5
TextCore
ùù5 =
.
ùù= >
LowLevel
ùù> F
.
ùùF G
GlyphValueRecord
ùùG W
valueRecord
ùùX c
)
ùùc d
{
ûû 	
this
üü 
.
üü 

xPlacement
üü 
=
üü 
valueRecord
üü )
.
üü) *

xPlacement
üü* 4
;
üü4 5
this
†† 
.
†† 

yPlacement
†† 
=
†† 
valueRecord
†† )
.
††) *

yPlacement
††* 4
;
††4 5
this
°° 
.
°° 
xAdvance
°° 
=
°° 
valueRecord
°° '
.
°°' (
xAdvance
°°( 0
;
°°0 1
this
¢¢ 
.
¢¢ 
yAdvance
¢¢ 
=
¢¢ 
valueRecord
¢¢ '
.
¢¢' (
yAdvance
¢¢( 0
;
¢¢0 1
}
££ 	
public
•• 
static
•• %
GlyphValueRecord_Legacy
•• -
operator
••. 6
+
••7 8
(
••8 9%
GlyphValueRecord_Legacy
••9 P
a
••Q R
,
••R S%
GlyphValueRecord_Legacy
••T k
b
••l m
)
••m n
{
¶¶ 	%
GlyphValueRecord_Legacy
ßß #
c
ßß$ %
;
ßß% &
c
®® 
.
®® 

xPlacement
®® 
=
®® 
a
®® 
.
®® 

xPlacement
®® '
+
®®( )
b
®®* +
.
®®+ ,

xPlacement
®®, 6
;
®®6 7
c
©© 
.
©© 

yPlacement
©© 
=
©© 
a
©© 
.
©© 

yPlacement
©© '
+
©©( )
b
©©* +
.
©©+ ,

yPlacement
©©, 6
;
©©6 7
c
™™ 
.
™™ 
xAdvance
™™ 
=
™™ 
a
™™ 
.
™™ 
xAdvance
™™ #
+
™™$ %
b
™™& '
.
™™' (
xAdvance
™™( 0
;
™™0 1
c
´´ 
.
´´ 
yAdvance
´´ 
=
´´ 
a
´´ 
.
´´ 
yAdvance
´´ #
+
´´$ %
b
´´& '
.
´´' (
yAdvance
´´( 0
;
´´0 1
return
≠≠ 
c
≠≠ 
;
≠≠ 
}
ÆÆ 	
}
ØØ 
[
±± 
Serializable
±± 
]
±± 
public
≤≤ 

class
≤≤ 
KerningPair
≤≤ 
{
≥≥ 
public
∑∑ 
uint
∑∑ 

firstGlyph
∑∑ 
{
∏∏ 	
get
ππ 
{
ππ 
return
ππ 
m_FirstGlyph
ππ %
;
ππ% &
}
ππ' (
set
∫∫ 
{
∫∫ 
m_FirstGlyph
∫∫ 
=
∫∫  
value
∫∫! &
;
∫∫& '
}
∫∫( )
}
ªª 	
[
ºº 	"
FormerlySerializedAs
ºº	 
(
ºº 
$str
ºº *
)
ºº* +
]
ºº+ ,
[
ΩΩ 	
SerializeField
ΩΩ	 
]
ΩΩ 
private
ææ 
uint
ææ 
m_FirstGlyph
ææ !
;
ææ! "
public
√√ %
GlyphValueRecord_Legacy
√√ &#
firstGlyphAdjustments
√√' <
{
ƒƒ 	
get
≈≈ 
{
≈≈ 
return
≈≈ %
m_FirstGlyphAdjustments
≈≈ 0
;
≈≈0 1
}
≈≈2 3
}
∆∆ 	
[
«« 	
SerializeField
««	 
]
«« 
private
»» %
GlyphValueRecord_Legacy
»» '%
m_FirstGlyphAdjustments
»»( ?
;
»»? @
public
ÕÕ 
uint
ÕÕ 
secondGlyph
ÕÕ 
{
ŒŒ 	
get
œœ 
{
œœ 
return
œœ 
m_SecondGlyph
œœ &
;
œœ& '
}
œœ( )
set
–– 
{
–– 
m_SecondGlyph
–– 
=
––  !
value
––" '
;
––' (
}
––) *
}
—— 	
[
““ 	"
FormerlySerializedAs
““	 
(
““ 
$str
““ +
)
““+ ,
]
““, -
[
”” 	
SerializeField
””	 
]
”” 
private
‘‘ 
uint
‘‘ 
m_SecondGlyph
‘‘ "
;
‘‘" #
public
ŸŸ %
GlyphValueRecord_Legacy
ŸŸ &$
secondGlyphAdjustments
ŸŸ' =
{
⁄⁄ 	
get
€€ 
{
€€ 
return
€€ &
m_SecondGlyphAdjustments
€€ 1
;
€€1 2
}
€€3 4
}
‹‹ 	
[
›› 	
SerializeField
››	 
]
›› 
private
ﬁﬁ %
GlyphValueRecord_Legacy
ﬁﬁ '&
m_SecondGlyphAdjustments
ﬁﬁ( @
;
ﬁﬁ@ A
[
‡‡ 	"
FormerlySerializedAs
‡‡	 
(
‡‡ 
$str
‡‡ .
)
‡‡. /
]
‡‡/ 0
public
·· 
float
·· 
xOffset
·· 
;
·· 
internal
„„ 
static
„„ 
KerningPair
„„ #
empty
„„$ )
=
„„* +
new
„„, /
KerningPair
„„0 ;
(
„„; <
$num
„„< =
,
„„= >
new
„„? B%
GlyphValueRecord_Legacy
„„C Z
(
„„Z [
)
„„[ \
,
„„\ ]
$num
„„^ _
,
„„_ `
new
„„a d%
GlyphValueRecord_Legacy
„„e |
(
„„| }
)
„„} ~
)
„„~ 
;„„ Ä
public
ÈÈ 
bool
ÈÈ &
ignoreSpacingAdjustments
ÈÈ ,
{
ÍÍ 	
get
ÎÎ 
{
ÎÎ 
return
ÎÎ (
m_IgnoreSpacingAdjustments
ÎÎ 3
;
ÎÎ3 4
}
ÎÎ5 6
}
ÏÏ 	
[
ÌÌ 	
SerializeField
ÌÌ	 
]
ÌÌ 
private
ÓÓ 
bool
ÓÓ (
m_IgnoreSpacingAdjustments
ÓÓ /
=
ÓÓ0 1
false
ÓÓ2 7
;
ÓÓ7 8
public
 
KerningPair
 
(
 
)
 
{
ÒÒ 	
m_FirstGlyph
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ %
m_FirstGlyphAdjustments
ÛÛ #
=
ÛÛ$ %
new
ÛÛ& )%
GlyphValueRecord_Legacy
ÛÛ* A
(
ÛÛA B
)
ÛÛB C
;
ÛÛC D
m_SecondGlyph
ıı 
=
ıı 
$num
ıı 
;
ıı &
m_SecondGlyphAdjustments
ˆˆ $
=
ˆˆ% &
new
ˆˆ' *%
GlyphValueRecord_Legacy
ˆˆ+ B
(
ˆˆB C
)
ˆˆC D
;
ˆˆD E
}
˜˜ 	
public
˘˘ 
KerningPair
˘˘ 
(
˘˘ 
uint
˘˘ 
left
˘˘  $
,
˘˘$ %
uint
˘˘& *
right
˘˘+ 0
,
˘˘0 1
float
˘˘2 7
offset
˘˘8 >
)
˘˘> ?
{
˙˙ 	

firstGlyph
˚˚ 
=
˚˚ 
left
˚˚ 
;
˚˚ 
m_SecondGlyph
¸¸ 
=
¸¸ 
right
¸¸ !
;
¸¸! "
xOffset
˝˝ 
=
˝˝ 
offset
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÄÄ 
KerningPair
ÄÄ 
(
ÄÄ 
uint
ÄÄ 

firstGlyph
ÄÄ  *
,
ÄÄ* +%
GlyphValueRecord_Legacy
ÄÄ, C#
firstGlyphAdjustments
ÄÄD Y
,
ÄÄY Z
uint
ÄÄ[ _
secondGlyph
ÄÄ` k
,
ÄÄk l&
GlyphValueRecord_LegacyÄÄm Ñ&
secondGlyphAdjustmentsÄÄÖ õ
)ÄÄõ ú
{
ÅÅ 	
m_FirstGlyph
ÇÇ 
=
ÇÇ 

firstGlyph
ÇÇ %
;
ÇÇ% &%
m_FirstGlyphAdjustments
ÉÉ #
=
ÉÉ$ %#
firstGlyphAdjustments
ÉÉ& ;
;
ÉÉ; <
m_SecondGlyph
ÑÑ 
=
ÑÑ 
secondGlyph
ÑÑ '
;
ÑÑ' (&
m_SecondGlyphAdjustments
ÖÖ $
=
ÖÖ% &$
secondGlyphAdjustments
ÖÖ' =
;
ÖÖ= >
}
ÜÜ 	
internal
àà 
void
àà &
ConvertLegacyKerningData
àà .
(
àà. /
)
àà/ 0
{
ââ 	%
m_FirstGlyphAdjustments
ää #
.
ää# $
xAdvance
ää$ ,
=
ää- .
xOffset
ää/ 6
;
ää6 7
}
åå 	
}
éé 
[
êê 
Serializable
êê 
]
êê 
public
ëë 

class
ëë 
KerningTable
ëë 
{
íí 
public
ìì 
List
ìì 
<
ìì 
KerningPair
ìì 
>
ìì  
kerningPairs
ìì! -
;
ìì- .
public
ïï 
KerningTable
ïï 
(
ïï 
)
ïï 
{
ññ 	
kerningPairs
óó 
=
óó 
new
óó 
List
óó #
<
óó# $
KerningPair
óó$ /
>
óó/ 0
(
óó0 1
)
óó1 2
;
óó2 3
}
òò 	
public
õõ 
void
õõ 
AddKerningPair
õõ "
(
õõ" #
)
õõ# $
{
úú 	
if
ùù 
(
ùù 
kerningPairs
ùù 
.
ùù 
Count
ùù "
==
ùù# %
$num
ùù& '
)
ùù' (
{
ûû 
kerningPairs
üü 
.
üü 
Add
üü  
(
üü  !
new
üü! $
KerningPair
üü% 0
(
üü0 1
$num
üü1 2
,
üü2 3
$num
üü4 5
,
üü5 6
$num
üü7 8
)
üü8 9
)
üü9 :
;
üü: ;
}
†† 
else
°° 
{
¢¢ 
uint
££ 
left
££ 
=
££ 
kerningPairs
££ (
.
££( )
Last
££) -
(
££- .
)
££. /
.
££/ 0

firstGlyph
££0 :
;
££: ;
uint
§§ 
right
§§ 
=
§§ 
kerningPairs
§§ )
.
§§) *
Last
§§* .
(
§§. /
)
§§/ 0
.
§§0 1
secondGlyph
§§1 <
;
§§< =
float
•• 
xoffset
•• 
=
•• 
kerningPairs
••  ,
.
••, -
Last
••- 1
(
••1 2
)
••2 3
.
••3 4
xOffset
••4 ;
;
••; <
kerningPairs
ßß 
.
ßß 
Add
ßß  
(
ßß  !
new
ßß! $
KerningPair
ßß% 0
(
ßß0 1
left
ßß1 5
,
ßß5 6
right
ßß7 <
,
ßß< =
xoffset
ßß> E
)
ßßE F
)
ßßF G
;
ßßG H
}
®® 
}
©© 	
public
≥≥ 
int
≥≥ 
AddKerningPair
≥≥ !
(
≥≥! "
uint
≥≥" &
first
≥≥' ,
,
≥≥, -
uint
≥≥. 2
second
≥≥3 9
,
≥≥9 :
float
≥≥; @
offset
≥≥A G
)
≥≥G H
{
¥¥ 	
int
µµ 
index
µµ 
=
µµ 
kerningPairs
µµ $
.
µµ$ %
	FindIndex
µµ% .
(
µµ. /
item
µµ/ 3
=>
µµ4 6
item
µµ7 ;
.
µµ; <

firstGlyph
µµ< F
==
µµG I
first
µµJ O
&&
µµP R
item
µµS W
.
µµW X
secondGlyph
µµX c
==
µµd f
second
µµg m
)
µµm n
;
µµn o
if
∑∑ 
(
∑∑ 
index
∑∑ 
==
∑∑ 
-
∑∑ 
$num
∑∑ 
)
∑∑ 
{
∏∏ 
kerningPairs
ππ 
.
ππ 
Add
ππ  
(
ππ  !
new
ππ! $
KerningPair
ππ% 0
(
ππ0 1
first
ππ1 6
,
ππ6 7
second
ππ8 >
,
ππ> ?
offset
ππ@ F
)
ππF G
)
ππG H
;
ππH I
return
∫∫ 
$num
∫∫ 
;
∫∫ 
}
ªª 
return
ææ 
-
ææ 
$num
ææ 
;
ææ 
}
øø 	
public
…… 
int
…… *
AddGlyphPairAdjustmentRecord
…… /
(
……/ 0
uint
……0 4
first
……5 :
,
……: ;%
GlyphValueRecord_Legacy
……< S
firstAdjustments
……T d
,
……d e
uint
……f j
second
……k q
,
……q r&
GlyphValueRecord_Legacy……s ä!
secondAdjustments……ã ú
)……ú ù
{
   	
int
ÀÀ 
index
ÀÀ 
=
ÀÀ 
kerningPairs
ÀÀ $
.
ÀÀ$ %
	FindIndex
ÀÀ% .
(
ÀÀ. /
item
ÀÀ/ 3
=>
ÀÀ4 6
item
ÀÀ7 ;
.
ÀÀ; <

firstGlyph
ÀÀ< F
==
ÀÀG I
first
ÀÀJ O
&&
ÀÀP R
item
ÀÀS W
.
ÀÀW X
secondGlyph
ÀÀX c
==
ÀÀd f
second
ÀÀg m
)
ÀÀm n
;
ÀÀn o
if
ÕÕ 
(
ÕÕ 
index
ÕÕ 
==
ÕÕ 
-
ÕÕ 
$num
ÕÕ 
)
ÕÕ 
{
ŒŒ 
kerningPairs
œœ 
.
œœ 
Add
œœ  
(
œœ  !
new
œœ! $
KerningPair
œœ% 0
(
œœ0 1
first
œœ1 6
,
œœ6 7
firstAdjustments
œœ8 H
,
œœH I
second
œœJ P
,
œœP Q
secondAdjustments
œœR c
)
œœc d
)
œœd e
;
œœe f
return
–– 
$num
–– 
;
–– 
}
—— 
return
‘‘ 
-
‘‘ 
$num
‘‘ 
;
‘‘ 
}
’’ 	
public
◊◊ 
void
◊◊ 
RemoveKerningPair
◊◊ %
(
◊◊% &
int
◊◊& )
left
◊◊* .
,
◊◊. /
int
◊◊0 3
right
◊◊4 9
)
◊◊9 :
{
ÿÿ 	
int
ŸŸ 
index
ŸŸ 
=
ŸŸ 
kerningPairs
ŸŸ $
.
ŸŸ$ %
	FindIndex
ŸŸ% .
(
ŸŸ. /
item
ŸŸ/ 3
=>
ŸŸ4 6
item
ŸŸ7 ;
.
ŸŸ; <

firstGlyph
ŸŸ< F
==
ŸŸG I
left
ŸŸJ N
&&
ŸŸO Q
item
ŸŸR V
.
ŸŸV W
secondGlyph
ŸŸW b
==
ŸŸc e
right
ŸŸf k
)
ŸŸk l
;
ŸŸl m
if
€€ 
(
€€ 
index
€€ 
!=
€€ 
-
€€ 
$num
€€ 
)
€€ 
kerningPairs
‹‹ 
.
‹‹ 
RemoveAt
‹‹ %
(
‹‹% &
index
‹‹& +
)
‹‹+ ,
;
‹‹, -
}
›› 	
public
‡‡ 
void
‡‡ 
RemoveKerningPair
‡‡ %
(
‡‡% &
int
‡‡& )
index
‡‡* /
)
‡‡/ 0
{
·· 	
kerningPairs
‚‚ 
.
‚‚ 
RemoveAt
‚‚ !
(
‚‚! "
index
‚‚" '
)
‚‚' (
;
‚‚( )
}
„„ 	
public
ÊÊ 
void
ÊÊ 
SortKerningPairs
ÊÊ $
(
ÊÊ$ %
)
ÊÊ% &
{
ÁÁ 	
if
ÈÈ 
(
ÈÈ 
kerningPairs
ÈÈ 
.
ÈÈ 
Count
ÈÈ "
>
ÈÈ# $
$num
ÈÈ% &
)
ÈÈ& '
kerningPairs
ÍÍ 
=
ÍÍ 
kerningPairs
ÍÍ +
.
ÍÍ+ ,
OrderBy
ÍÍ, 3
(
ÍÍ3 4
s
ÍÍ4 5
=>
ÍÍ6 8
s
ÍÍ9 :
.
ÍÍ: ;

firstGlyph
ÍÍ; E
)
ÍÍE F
.
ÍÍF G
ThenBy
ÍÍG M
(
ÍÍM N
s
ÍÍN O
=>
ÍÍP R
s
ÍÍS T
.
ÍÍT U
secondGlyph
ÍÍU `
)
ÍÍ` a
.
ÍÍa b
ToList
ÍÍb h
(
ÍÍh i
)
ÍÍi j
;
ÍÍj k
}
ÎÎ 	
}
ÏÏ 
public
ÔÔ 

static
ÔÔ 
class
ÔÔ 
TMP_FontUtilities
ÔÔ )
{
 
private
ÒÒ 
static
ÒÒ 
List
ÒÒ 
<
ÒÒ 
int
ÒÒ 
>
ÒÒ  "
k_searchedFontAssets
ÒÒ! 5
;
ÒÒ5 6
public
˙˙ 
static
˙˙ 
TMP_FontAsset
˙˙ # 
SearchForCharacter
˙˙$ 6
(
˙˙6 7
TMP_FontAsset
˙˙7 D
font
˙˙E I
,
˙˙I J
uint
˙˙K O
unicode
˙˙P W
,
˙˙W X
out
˙˙Y \
TMP_Character
˙˙] j
	character
˙˙k t
)
˙˙t u
{
˚˚ 	
if
¸¸ 
(
¸¸ "
k_searchedFontAssets
¸¸ $
==
¸¸% '
null
¸¸( ,
)
¸¸, -"
k_searchedFontAssets
˝˝ $
=
˝˝% &
new
˝˝' *
List
˝˝+ /
<
˝˝/ 0
int
˝˝0 3
>
˝˝3 4
(
˝˝4 5
)
˝˝5 6
;
˝˝6 7"
k_searchedFontAssets
ˇˇ  
.
ˇˇ  !
Clear
ˇˇ! &
(
ˇˇ& '
)
ˇˇ' (
;
ˇˇ( )
return
ÅÅ (
SearchForCharacterInternal
ÅÅ -
(
ÅÅ- .
font
ÅÅ. 2
,
ÅÅ2 3
unicode
ÅÅ4 ;
,
ÅÅ; <
out
ÅÅ= @
	character
ÅÅA J
)
ÅÅJ K
;
ÅÅK L
}
ÇÇ 	
public
åå 
static
åå 
TMP_FontAsset
åå # 
SearchForCharacter
åå$ 6
(
åå6 7
List
åå7 ;
<
åå; <
TMP_FontAsset
åå< I
>
ååI J
fonts
ååK P
,
ååP Q
uint
ååR V
unicode
ååW ^
,
åå^ _
out
åå` c
TMP_Character
ååd q
	character
åår {
)
åå{ |
{
çç 	
return
éé (
SearchForCharacterInternal
éé -
(
éé- .
fonts
éé. 3
,
éé3 4
unicode
éé5 <
,
éé< =
out
éé> A
	character
ééB K
)
ééK L
;
ééL M
}
èè 	
private
íí 
static
íí 
TMP_FontAsset
íí $(
SearchForCharacterInternal
íí% ?
(
íí? @
TMP_FontAsset
íí@ M
font
ííN R
,
ííR S
uint
ííT X
unicode
ííY `
,
íí` a
out
ííb e
TMP_Character
ííf s
	character
íít }
)
íí} ~
{
ìì 	
	character
îî 
=
îî 
null
îî 
;
îî 
if
ññ 
(
ññ 
font
ññ 
==
ññ 
null
ññ 
)
ññ 
return
ññ $
null
ññ% )
;
ññ) *
if
òò 
(
òò 
font
òò 
.
òò "
characterLookupTable
òò )
.
òò) *
TryGetValue
òò* 5
(
òò5 6
unicode
òò6 =
,
òò= >
out
òò? B
	character
òòC L
)
òòL M
)
òòM N
{
ôô 
return
öö 
font
öö 
;
öö 
}
õõ 
else
úú 
if
úú 
(
úú 
font
úú 
.
úú $
fallbackFontAssetTable
úú 0
!=
úú1 3
null
úú4 8
&&
úú9 ;
font
úú< @
.
úú@ A$
fallbackFontAssetTable
úúA W
.
úúW X
Count
úúX ]
>
úú^ _
$num
úú` a
)
úúa b
{
ùù 
for
ûû 
(
ûû 
int
ûû 
i
ûû 
=
ûû 
$num
ûû 
;
ûû 
i
ûû  !
<
ûû" #
font
ûû$ (
.
ûû( )$
fallbackFontAssetTable
ûû) ?
.
ûû? @
Count
ûû@ E
&&
ûûF H
	character
ûûI R
==
ûûS U
null
ûûV Z
;
ûûZ [
i
ûû\ ]
++
ûû] _
)
ûû_ `
{
üü 
TMP_FontAsset
†† !
temp
††" &
=
††' (
font
††) -
.
††- .$
fallbackFontAssetTable
††. D
[
††D E
i
††E F
]
††F G
;
††G H
if
°° 
(
°° 
temp
°° 
==
°° 
null
°°  $
)
°°$ %
continue
°°& .
;
°°. /
int
££ 
id
££ 
=
££ 
temp
££ !
.
££! "
GetInstanceID
££" /
(
££/ 0
)
££0 1
;
££1 2
if
¶¶ 
(
¶¶ "
k_searchedFontAssets
¶¶ ,
.
¶¶, -
Contains
¶¶- 5
(
¶¶5 6
id
¶¶6 8
)
¶¶8 9
)
¶¶9 :
continue
¶¶; C
;
¶¶C D"
k_searchedFontAssets
©© (
.
©©( )
Add
©©) ,
(
©©, -
id
©©- /
)
©©/ 0
;
©©0 1
temp
´´ 
=
´´ (
SearchForCharacterInternal
´´ 5
(
´´5 6
temp
´´6 :
,
´´: ;
unicode
´´< C
,
´´C D
out
´´E H
	character
´´I R
)
´´R S
;
´´S T
if
≠≠ 
(
≠≠ 
temp
≠≠ 
!=
≠≠ 
null
≠≠  $
)
≠≠$ %
return
ÆÆ 
temp
ÆÆ #
;
ÆÆ# $
}
ØØ 
}
∞∞ 
return
≤≤ 
null
≤≤ 
;
≤≤ 
}
≥≥ 	
private
∂∂ 
static
∂∂ 
TMP_FontAsset
∂∂ $(
SearchForCharacterInternal
∂∂% ?
(
∂∂? @
List
∂∂@ D
<
∂∂D E
TMP_FontAsset
∂∂E R
>
∂∂R S
fonts
∂∂T Y
,
∂∂Y Z
uint
∂∂[ _
unicode
∂∂` g
,
∂∂g h
out
∂∂i l
TMP_Character
∂∂m z
	character∂∂{ Ñ
)∂∂Ñ Ö
{
∑∑ 	
	character
∏∏ 
=
∏∏ 
null
∏∏ 
;
∏∏ 
if
∫∫ 
(
∫∫ 
fonts
∫∫ 
!=
∫∫ 
null
∫∫ 
&&
∫∫  
fonts
∫∫! &
.
∫∫& '
Count
∫∫' ,
>
∫∫- .
$num
∫∫/ 0
)
∫∫0 1
{
ªª 
for
ºº 
(
ºº 
int
ºº 
i
ºº 
=
ºº 
$num
ºº 
;
ºº 
i
ºº  !
<
ºº" #
fonts
ºº$ )
.
ºº) *
Count
ºº* /
;
ºº/ 0
i
ºº1 2
++
ºº2 4
)
ºº4 5
{
ΩΩ 
TMP_FontAsset
ææ !
	fontAsset
ææ" +
=
ææ, -(
SearchForCharacterInternal
ææ. H
(
ææH I
fonts
ææI N
[
ææN O
i
ææO P
]
ææP Q
,
ææQ R
unicode
ææS Z
,
ææZ [
out
ææ\ _
	character
ææ` i
)
ææi j
;
ææj k
if
¿¿ 
(
¿¿ 
	fontAsset
¿¿ !
!=
¿¿" $
null
¿¿% )
)
¿¿) *
return
¡¡ 
	fontAsset
¡¡ (
;
¡¡( )
}
¬¬ 
}
√√ 
return
≈≈ 
null
≈≈ 
;
≈≈ 
}
∆∆ 	
}
«« 
}»» ó¿
`C:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TextMeshPro.cs
	namespace 	
TMPro
 
{ 
[ %
DisallowMultipleComponent 
] 
[		 
RequireComponent		 
(		 
typeof		 
(		 
MeshRenderer		 )
)		) *
)		* +
]		+ ,
[

 
AddComponentMenu

 
(

 
$str

 /
)

/ 0
]

0 1
[ 
ExecuteAlways 
] 
[ 
HelpURL 
( 
$str J
)J K
]K L
public 

partial 
class 
TextMeshPro $
:% &
TMP_Text' /
,/ 0
ILayoutElement1 ?
{ 
[ 	
SerializeField	 
] 
internal !
int" %
_SortingLayer& 3
;3 4
public 
int 
sortingLayerID !
{ 	
get 
{ 
if 
( 
renderer 
== 
null  $
)$ %
return 
$num 
; 
return 

m_renderer !
.! "
sortingLayerID" 0
;0 1
} 
set 
{   
if!! 
(!! 
renderer!! 
==!! 
null!!  $
)!!$ %
return"" 
;"" 

m_renderer$$ 
.$$ 
sortingLayerID$$ )
=$$* +
value$$, 1
;$$1 2
_SortingLayerID%% 
=%%  !
value%%" '
;%%' ('
UpdateSubMeshSortingLayerID(( +
(((+ ,
value((, 1
)((1 2
;((2 3
})) 
}** 	
[++ 	
SerializeField++	 
]++ 
internal,, 
int,, 
_SortingLayerID,, $
;,,$ %
public11 
int11 
sortingOrder11 
{22 	
get33 
{44 
if55 
(55 
renderer55 
==55 
null55  $
)55$ %
return66 
$num66 
;66 
return88 

m_renderer88 !
.88! "
sortingOrder88" .
;88. /
}99 
set:: 
{;; 
if<< 
(<< 
renderer<< 
==<< 
null<<  $
)<<$ %
return== 
;== 

m_renderer?? 
.?? 
sortingOrder?? '
=??( )
value??* /
;??/ 0
_SortingOrder@@ 
=@@ 
value@@  %
;@@% &%
UpdateSubMeshSortingOrderCC )
(CC) *
valueCC* /
)CC/ 0
;CC0 1
}DD 
}EE 	
[FF 	
SerializeFieldFF	 
]FF 
internalGG 
intGG 
_SortingOrderGG "
;GG" #
publicLL 
overrideLL 
boolLL !
autoSizeTextContainerLL 2
{MM 	
getNN 
{NN 
returnNN #
m_autoSizeTextContainerNN 0
;NN0 1
}NN2 3
setPP 
{PP 
ifPP 
(PP #
m_autoSizeTextContainerPP -
==PP. 0
valuePP1 6
)PP6 7
returnPP8 >
;PP> ?#
m_autoSizeTextContainerPP@ W
=PPX Y
valuePPZ _
;PP_ `
ifPPa c
(PPd e#
m_autoSizeTextContainerPPe |
)PP| }
{PP~ 
TMP_UpdateManager
PPÄ ë
.
PPë í1
#RegisterTextElementForLayoutRebuild
PPí µ
(
PPµ ∂
this
PP∂ ∫
)
PP∫ ª
;
PPª º
SetLayoutDirty
PPΩ À
(
PPÀ Ã
)
PPÃ Õ
;
PPÕ Œ
}
PPœ –
}
PP— “
}QQ 	
[WW 	
ObsoleteWW	 
(WW 
$strWW U
)WWU V
]WWV W
publicXX 
TextContainerXX 
textContainerXX *
{YY 	
getZZ 
{[[ 
return\\ 
null\\ 
;\\ 
}]] 
}^^ 	
publicdd 
newdd 
	Transformdd 
	transformdd &
{ee 	
getff 
{gg 
ifhh 
(hh 
m_transformhh 
==hh  "
nullhh# '
)hh' (
m_transformii 
=ii  !
GetComponentii" .
<ii. /
	Transformii/ 8
>ii8 9
(ii9 :
)ii: ;
;ii; <
returnkk 
m_transformkk "
;kk" #
}ll 
}mm 	
publictt 
Renderertt 
renderertt  
{uu 	
getvv 
{ww 
ifxx 
(xx 

m_rendererxx 
==xx !
nullxx" &
)xx& '

m_rendereryy 
=yy  
GetComponentyy! -
<yy- .
Rendereryy. 6
>yy6 7
(yy7 8
)yy8 9
;yy9 :
return{{ 

m_renderer{{ !
;{{! "
}|| 
}}} 	
public
ÉÉ 
override
ÉÉ 
Mesh
ÉÉ 
mesh
ÉÉ !
{
ÑÑ 	
get
ÖÖ 
{
ÜÜ 
if
áá 
(
áá 
m_mesh
áá 
==
áá 
null
áá "
)
áá" #
{
àà 
m_mesh
ââ 
=
ââ 
new
ââ  
Mesh
ââ! %
(
ââ% &
)
ââ& '
;
ââ' (
m_mesh
ää 
.
ää 
	hideFlags
ää $
=
ää% &
	HideFlags
ää' 0
.
ää0 1
HideAndDontSave
ää1 @
;
ää@ A
}
ãã 
return
çç 
m_mesh
çç 
;
çç 
}
éé 
}
èè 	
public
îî 

MeshFilter
îî 

meshFilter
îî $
{
ïï 	
get
ññ 
{
óó 
if
òò 
(
òò 
m_meshFilter
òò  
==
òò! #
null
òò$ (
)
òò( )
{
ôô 
m_meshFilter
öö  
=
öö! "
GetComponent
öö# /
<
öö/ 0

MeshFilter
öö0 :
>
öö: ;
(
öö; <
)
öö< =
;
öö= >
if
úú 
(
úú 
m_meshFilter
úú $
==
úú% '
null
úú( ,
)
úú, -
{
ùù 
m_meshFilter
ûû $
=
ûû% &

gameObject
ûû' 1
.
ûû1 2
AddComponent
ûû2 >
<
ûû> ?

MeshFilter
ûû? I
>
ûûI J
(
ûûJ K
)
ûûK L
;
ûûL M
m_meshFilter
üü $
.
üü$ %
	hideFlags
üü% .
=
üü/ 0
	HideFlags
üü1 :
.
üü: ;
HideInInspector
üü; J
|
üüK L
	HideFlags
üüM V
.
üüV W
HideAndDontSave
üüW f
;
üüf g
}
†† 
}
°° 
return
££ 
m_meshFilter
££ #
;
££# $
}
§§ 
}
•• 	
public
´´ 
MaskingTypes
´´ 
maskType
´´ $
{
¨¨ 	
get
≠≠ 
{
≠≠ 
return
≠≠ 

m_maskType
≠≠ #
;
≠≠# $
}
≠≠% &
set
ÆÆ 
{
ÆÆ 

m_maskType
ÆÆ 
=
ÆÆ 
value
ÆÆ $
;
ÆÆ$ %
SetMask
ÆÆ& -
(
ÆÆ- .

m_maskType
ÆÆ. 8
)
ÆÆ8 9
;
ÆÆ9 :
}
ÆÆ; <
}
ØØ 	
public
∑∑ 
void
∑∑ 
SetMask
∑∑ 
(
∑∑ 
MaskingTypes
∑∑ (
type
∑∑) -
,
∑∑- .
Vector4
∑∑/ 6

maskCoords
∑∑7 A
)
∑∑A B
{
∏∏ 	
SetMask
ππ 
(
ππ 
type
ππ 
)
ππ 
;
ππ  
SetMaskCoordinates
ªª 
(
ªª 

maskCoords
ªª )
)
ªª) *
;
ªª* +
}
ºº 	
public
≈≈ 
void
≈≈ 
SetMask
≈≈ 
(
≈≈ 
MaskingTypes
≈≈ (
type
≈≈) -
,
≈≈- .
Vector4
≈≈/ 6

maskCoords
≈≈7 A
,
≈≈A B
float
≈≈C H
	softnessX
≈≈I R
,
≈≈R S
float
≈≈T Y
	softnessY
≈≈Z c
)
≈≈c d
{
∆∆ 	
SetMask
«« 
(
«« 
type
«« 
)
«« 
;
««  
SetMaskCoordinates
…… 
(
…… 

maskCoords
…… )
,
……) *
	softnessX
……+ 4
,
……4 5
	softnessY
……6 ?
)
……? @
;
……@ A
}
   	
public
–– 
override
–– 
void
–– 
SetVerticesDirty
–– -
(
––- .
)
––. /
{
—— 	
if
‘‘ 
(
‘‘ 
this
‘‘ 
==
‘‘ 
null
‘‘ 
||
‘‘ 
!
‘‘  !
this
‘‘! %
.
‘‘% &
IsActive
‘‘& .
(
‘‘. /
)
‘‘/ 0
)
‘‘0 1
return
’’ 
;
’’ 
TMP_UpdateManager
◊◊ 
.
◊◊ 2
$RegisterTextElementForGraphicRebuild
◊◊ B
(
◊◊B C
this
◊◊C G
)
◊◊G H
;
◊◊H I
}
ÿÿ 	
public
ﬁﬁ 
override
ﬁﬁ 
void
ﬁﬁ 
SetLayoutDirty
ﬁﬁ +
(
ﬁﬁ+ ,
)
ﬁﬁ, -
{
ﬂﬂ 	%
m_isPreferredWidthDirty
‡‡ #
=
‡‡$ %
true
‡‡& *
;
‡‡* +&
m_isPreferredHeightDirty
·· $
=
··% &
true
··' +
;
··+ ,
if
„„ 
(
„„ 
this
„„ 
==
„„ 
null
„„ 
||
„„ 
!
„„  !
this
„„! %
.
„„% &
IsActive
„„& .
(
„„. /
)
„„/ 0
)
„„0 1
return
‰‰ 
;
‰‰ 
LayoutRebuilder
ÊÊ 
.
ÊÊ "
MarkLayoutForRebuild
ÊÊ 0
(
ÊÊ0 1
this
ÊÊ1 5
.
ÊÊ5 6
rectTransform
ÊÊ6 C
)
ÊÊC D
;
ÊÊD E
m_isLayoutDirty
ËË 
=
ËË 
true
ËË "
;
ËË" #
}
ÈÈ 	
public
ÔÔ 
override
ÔÔ 
void
ÔÔ 
SetMaterialDirty
ÔÔ -
(
ÔÔ- .
)
ÔÔ. /
{
 	
UpdateMaterial
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
}
˘˘ 	
public
ˇˇ 
override
ˇˇ 
void
ˇˇ 
SetAllDirty
ˇˇ (
(
ˇˇ( )
)
ˇˇ) *
{
ÄÄ 	
SetLayoutDirty
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
SetVerticesDirty
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
SetMaterialDirty
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
public
ãã 
override
ãã 
void
ãã 
Rebuild
ãã $
(
ãã$ %
CanvasUpdate
ãã% 1
update
ãã2 8
)
ãã8 9
{
åå 	
if
çç 
(
çç 
this
çç 
==
çç 
null
çç 
)
çç 
return
çç $
;
çç$ %
if
èè 
(
èè 
update
èè 
==
èè 
CanvasUpdate
èè &
.
èè& '
	Prelayout
èè' 0
)
èè0 1
{
êê 
if
ëë 
(
ëë %
m_autoSizeTextContainer
ëë +
)
ëë+ ,
{
íí 
m_rectTransform
ìì #
.
ìì# $
	sizeDelta
ìì$ -
=
ìì. / 
GetPreferredValues
ìì0 B
(
ììB C
Mathf
ììC H
.
ììH I
Infinity
ììI Q
,
ììQ R
Mathf
ììS X
.
ììX Y
Infinity
ììY a
)
ììa b
;
ììb c
}
îî 
}
ïï 
else
ññ 
if
ññ 
(
ññ 
update
ññ 
==
ññ 
CanvasUpdate
ññ +
.
ññ+ ,
	PreRender
ññ, 5
)
ññ5 6
{
óó 
this
òò 
.
òò 
OnPreRenderObject
òò &
(
òò& '
)
òò' (
;
òò( )
if
öö 
(
öö 
!
öö 
m_isMaterialDirty
öö &
)
öö& '
return
öö( .
;
öö. /
UpdateMaterial
úú 
(
úú 
)
úú  
;
úú  !
m_isMaterialDirty
ùù !
=
ùù" #
false
ùù$ )
;
ùù) *
}
ûû 
}
üü 	
	protected
•• 
override
•• 
void
•• 
UpdateMaterial
••  .
(
••. /
)
••/ 0
{
¶¶ 	
if
¨¨ 
(
¨¨ 
renderer
¨¨ 
==
¨¨ 
null
¨¨  
||
¨¨! #
m_sharedMaterial
¨¨$ 4
==
¨¨5 7
null
¨¨8 <
)
¨¨< =
return
≠≠ 
;
≠≠ 
if
∞∞ 
(
∞∞ 

m_renderer
∞∞ 
.
∞∞ 
sharedMaterial
∞∞ )
==
∞∞* ,
null
∞∞- 1
||
∞∞2 4

m_renderer
∞∞5 ?
.
∞∞? @
sharedMaterial
∞∞@ N
.
∞∞N O
GetInstanceID
∞∞O \
(
∞∞\ ]
)
∞∞] ^
!=
∞∞_ a
m_sharedMaterial
∞∞b r
.
∞∞r s
GetInstanceID∞∞s Ä
(∞∞Ä Å
)∞∞Å Ç
)∞∞Ç É

m_renderer
±± 
.
±± 
sharedMaterial
±± )
=
±±* +
m_sharedMaterial
±±, <
;
±±< =
}
≤≤ 	
public
∏∏ 
override
∏∏ 
void
∏∏ 
UpdateMeshPadding
∏∏ .
(
∏∏. /
)
∏∏/ 0
{
ππ 	
	m_padding
∫∫ 
=
∫∫ 
ShaderUtilities
∫∫ '
.
∫∫' (

GetPadding
∫∫( 2
(
∫∫2 3
m_sharedMaterial
∫∫3 C
,
∫∫C D"
m_enableExtraPadding
∫∫E Y
,
∫∫Y Z
m_isUsingBold
∫∫[ h
)
∫∫h i
;
∫∫i j 
m_isMaskingEnabled
ªª 
=
ªª  
ShaderUtilities
ªª! 0
.
ªª0 1
IsMaskingEnabled
ªª1 A
(
ªªA B
m_sharedMaterial
ªªB R
)
ªªR S
;
ªªS T%
m_havePropertiesChanged
ºº #
=
ºº$ %
true
ºº& *
;
ºº* +"
checkPaddingRequired
ΩΩ  
=
ΩΩ! "
false
ΩΩ# (
;
ΩΩ( )
if
¿¿ 
(
¿¿ 

m_textInfo
¿¿ 
==
¿¿ 
null
¿¿ "
)
¿¿" #
return
¿¿$ *
;
¿¿* +
for
√√ 
(
√√ 
int
√√ 
i
√√ 
=
√√ 
$num
√√ 
;
√√ 
i
√√ 
<
√√ 

m_textInfo
√√  *
.
√√* +
materialCount
√√+ 8
;
√√8 9
i
√√: ;
++
√√; =
)
√√= >
m_subTextObjects
ƒƒ  
[
ƒƒ  !
i
ƒƒ! "
]
ƒƒ" #
.
ƒƒ# $
UpdateMeshPadding
ƒƒ$ 5
(
ƒƒ5 6"
m_enableExtraPadding
ƒƒ6 J
,
ƒƒJ K
m_isUsingBold
ƒƒL Y
)
ƒƒY Z
;
ƒƒZ [
}
≈≈ 	
public
ÕÕ 
override
ÕÕ 
void
ÕÕ 
ForceMeshUpdate
ÕÕ ,
(
ÕÕ, -
bool
ÕÕ- 1
ignoreActiveState
ÕÕ2 C
=
ÕÕD E
false
ÕÕF K
,
ÕÕK L
bool
ÕÕM Q 
forceTextReparsing
ÕÕR d
=
ÕÕe f
false
ÕÕg l
)
ÕÕl m
{
ŒŒ 	%
m_havePropertiesChanged
œœ #
=
œœ$ %
true
œœ& *
;
œœ* +!
m_ignoreActiveState
–– 
=
––  !
ignoreActiveState
––" 3
;
––3 4
OnPreRenderObject
—— 
(
—— 
)
—— 
;
——  
}
““ 	
public
⁄⁄ 
override
⁄⁄ 
TMP_TextInfo
⁄⁄ $
GetTextInfo
⁄⁄% 0
(
⁄⁄0 1
string
⁄⁄1 7
text
⁄⁄8 <
)
⁄⁄< =
{
€€ 	
SetText
‹‹ 
(
‹‹ 
text
‹‹ 
)
‹‹ 
;
‹‹ 
SetArraySizes
›› 
(
›› #
m_TextProcessingArray
›› /
)
››/ 0
;
››0 1
m_renderMode
ﬂﬂ 
=
ﬂﬂ 
TextRenderFlags
ﬂﬂ *
.
ﬂﬂ* +

DontRender
ﬂﬂ+ 5
;
ﬂﬂ5 6
ComputeMarginSize
·· 
(
·· 
)
·· 
;
··  
GenerateTextMesh
„„ 
(
„„ 
)
„„ 
;
„„ 
m_renderMode
ÂÂ 
=
ÂÂ 
TextRenderFlags
ÂÂ *
.
ÂÂ* +
Render
ÂÂ+ 1
;
ÂÂ1 2
return
ÁÁ 
this
ÁÁ 
.
ÁÁ 
textInfo
ÁÁ  
;
ÁÁ  !
}
ËË 	
public
ÓÓ 
override
ÓÓ 
void
ÓÓ 
	ClearMesh
ÓÓ &
(
ÓÓ& '
bool
ÓÓ' +

updateMesh
ÓÓ, 6
)
ÓÓ6 7
{
ÔÔ 	
if
 
(
 

m_textInfo
 
.
 
meshInfo
 #
[
# $
$num
$ %
]
% &
.
& '
mesh
' +
==
, .
null
/ 3
)
3 4

m_textInfo
5 ?
.
? @
meshInfo
@ H
[
H I
$num
I J
]
J K
.
K L
mesh
L P
=
Q R
m_mesh
S Y
;
Y Z

m_textInfo
ÚÚ 
.
ÚÚ 
ClearMeshInfo
ÚÚ $
(
ÚÚ$ %

updateMesh
ÚÚ% /
)
ÚÚ/ 0
;
ÚÚ0 1
}
ÛÛ 	
public
˘˘ 
override
˘˘ 
event
˘˘ 
Action
˘˘ $
<
˘˘$ %
TMP_TextInfo
˘˘% 1
>
˘˘1 2
OnPreRenderText
˘˘3 B
;
˘˘B C
public
ÅÅ 
override
ÅÅ 
void
ÅÅ 
UpdateGeometry
ÅÅ +
(
ÅÅ+ ,
Mesh
ÅÅ, 0
mesh
ÅÅ1 5
,
ÅÅ5 6
int
ÅÅ7 :
index
ÅÅ; @
)
ÅÅ@ A
{
ÇÇ 	
mesh
ÉÉ 
.
ÉÉ 
RecalculateBounds
ÉÉ "
(
ÉÉ" #
)
ÉÉ# $
;
ÉÉ$ %
}
ÑÑ 	
public
ää 
override
ää 
void
ää 
UpdateVertexData
ää -
(
ää- .'
TMP_VertexDataUpdateFlags
ää. G
flags
ääH M
)
ääM N
{
ãã 	
int
åå 
materialCount
åå 
=
åå 

m_textInfo
åå  *
.
åå* +
materialCount
åå+ 8
;
åå8 9
for
éé 
(
éé 
int
éé 
i
éé 
=
éé 
$num
éé 
;
éé 
i
éé 
<
éé 
materialCount
éé  -
;
éé- .
i
éé/ 0
++
éé0 2
)
éé2 3
{
èè 
Mesh
êê 
mesh
êê 
;
êê 
if
íí 
(
íí 
i
íí 
==
íí 
$num
íí 
)
íí 
mesh
ìì 
=
ìì 
m_mesh
ìì !
;
ìì! "
else
îî 
{
ïï 
mesh
öö 
=
öö 
m_subTextObjects
öö +
[
öö+ ,
i
öö, -
]
öö- .
.
öö. /
mesh
öö/ 3
;
öö3 4
}
õõ 
if
üü 
(
üü 
(
üü 
flags
üü 
&
üü '
TMP_VertexDataUpdateFlags
üü 6
.
üü6 7
Vertices
üü7 ?
)
üü? @
==
üüA C'
TMP_VertexDataUpdateFlags
üüD ]
.
üü] ^
Vertices
üü^ f
)
üüf g
mesh
†† 
.
†† 
vertices
†† !
=
††" #

m_textInfo
††$ .
.
††. /
meshInfo
††/ 7
[
††7 8
i
††8 9
]
††9 :
.
††: ;
vertices
††; C
;
††C D
if
¢¢ 
(
¢¢ 
(
¢¢ 
flags
¢¢ 
&
¢¢ '
TMP_VertexDataUpdateFlags
¢¢ 6
.
¢¢6 7
Uv0
¢¢7 :
)
¢¢: ;
==
¢¢< >'
TMP_VertexDataUpdateFlags
¢¢? X
.
¢¢X Y
Uv0
¢¢Y \
)
¢¢\ ]
mesh
££ 
.
££ 
uv
££ 
=
££ 

m_textInfo
££ (
.
££( )
meshInfo
££) 1
[
££1 2
i
££2 3
]
££3 4
.
££4 5
uvs0
££5 9
;
££9 :
if
•• 
(
•• 
(
•• 
flags
•• 
&
•• '
TMP_VertexDataUpdateFlags
•• 6
.
••6 7
Uv2
••7 :
)
••: ;
==
••< >'
TMP_VertexDataUpdateFlags
••? X
.
••X Y
Uv2
••Y \
)
••\ ]
mesh
¶¶ 
.
¶¶ 
uv2
¶¶ 
=
¶¶ 

m_textInfo
¶¶ )
.
¶¶) *
meshInfo
¶¶* 2
[
¶¶2 3
i
¶¶3 4
]
¶¶4 5
.
¶¶5 6
uvs2
¶¶6 :
;
¶¶: ;
if
´´ 
(
´´ 
(
´´ 
flags
´´ 
&
´´ '
TMP_VertexDataUpdateFlags
´´ 6
.
´´6 7
Colors32
´´7 ?
)
´´? @
==
´´A C'
TMP_VertexDataUpdateFlags
´´D ]
.
´´] ^
Colors32
´´^ f
)
´´f g
mesh
¨¨ 
.
¨¨ 
colors32
¨¨ !
=
¨¨" #

m_textInfo
¨¨$ .
.
¨¨. /
meshInfo
¨¨/ 7
[
¨¨7 8
i
¨¨8 9
]
¨¨9 :
.
¨¨: ;
colors32
¨¨; C
;
¨¨C D
mesh
ÆÆ 
.
ÆÆ 
RecalculateBounds
ÆÆ &
(
ÆÆ& '
)
ÆÆ' (
;
ÆÆ( )
}
ØØ 
}
∞∞ 	
public
∂∂ 
override
∂∂ 
void
∂∂ 
UpdateVertexData
∂∂ -
(
∂∂- .
)
∂∂. /
{
∑∑ 	
int
∏∏ 
materialCount
∏∏ 
=
∏∏ 

m_textInfo
∏∏  *
.
∏∏* +
materialCount
∏∏+ 8
;
∏∏8 9
for
∫∫ 
(
∫∫ 
int
∫∫ 
i
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫ 
i
∫∫ 
<
∫∫ 
materialCount
∫∫  -
;
∫∫- .
i
∫∫/ 0
++
∫∫0 2
)
∫∫2 3
{
ªª 
Mesh
ºº 
mesh
ºº 
;
ºº 
if
ææ 
(
ææ 
i
ææ 
==
ææ 
$num
ææ 
)
ææ 
mesh
øø 
=
øø 
m_mesh
øø !
;
øø! "
else
¿¿ 
{
¡¡ 

m_textInfo
√√ 
.
√√ 
meshInfo
√√ '
[
√√' (
i
√√( )
]
√√) *
.
√√* +!
ClearUnusedVertices
√√+ >
(
√√> ?
)
√√? @
;
√√@ A
mesh
≈≈ 
=
≈≈ 
m_subTextObjects
≈≈ +
[
≈≈+ ,
i
≈≈, -
]
≈≈- .
.
≈≈. /
mesh
≈≈/ 3
;
≈≈3 4
}
∆∆ 
mesh
   
.
   
vertices
   
=
   

m_textInfo
    *
.
  * +
meshInfo
  + 3
[
  3 4
i
  4 5
]
  5 6
.
  6 7
vertices
  7 ?
;
  ? @
mesh
ÀÀ 
.
ÀÀ 
uv
ÀÀ 
=
ÀÀ 

m_textInfo
ÀÀ $
.
ÀÀ$ %
meshInfo
ÀÀ% -
[
ÀÀ- .
i
ÀÀ. /
]
ÀÀ/ 0
.
ÀÀ0 1
uvs0
ÀÀ1 5
;
ÀÀ5 6
mesh
ÃÃ 
.
ÃÃ 
uv2
ÃÃ 
=
ÃÃ 

m_textInfo
ÃÃ %
.
ÃÃ% &
meshInfo
ÃÃ& .
[
ÃÃ. /
i
ÃÃ/ 0
]
ÃÃ0 1
.
ÃÃ1 2
uvs2
ÃÃ2 6
;
ÃÃ6 7
mesh
ŒŒ 
.
ŒŒ 
colors32
ŒŒ 
=
ŒŒ 

m_textInfo
ŒŒ  *
.
ŒŒ* +
meshInfo
ŒŒ+ 3
[
ŒŒ3 4
i
ŒŒ4 5
]
ŒŒ5 6
.
ŒŒ6 7
colors32
ŒŒ7 ?
;
ŒŒ? @
mesh
–– 
.
–– 
RecalculateBounds
–– &
(
––& '
)
––' (
;
––( )
}
—— 
}
““ 	
public
‘‘ 
void
‘‘ 
UpdateFontAsset
‘‘ #
(
‘‘# $
)
‘‘$ %
{
’’ 	
LoadFontAsset
÷÷ 
(
÷÷ 
)
÷÷ 
;
÷÷ 
}
◊◊ 	
private
⁄⁄ 
bool
⁄⁄ #
m_currentAutoSizeMode
⁄⁄ *
;
⁄⁄* +
public
›› 
void
›› ,
CalculateLayoutInputHorizontal
›› 2
(
››2 3
)
››3 4
{
››5 6
}
››7 8
public
ﬂﬂ 
void
ﬂﬂ *
CalculateLayoutInputVertical
ﬂﬂ 0
(
ﬂﬂ0 1
)
ﬂﬂ1 2
{
ﬂﬂ3 4
}
ﬂﬂ5 6
}
‡‡ 
}·· ›
_C:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_Sprite.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public 

class 

TMP_Sprite 
: "
TMP_TextElement_Legacy 4
{ 
public 
string 
name 
; 
public 
int 
hashCode 
; 
public 
int 
unicode 
; 
public 
Vector2 
pivot 
; 
public 
Sprite 
sprite 
; 
} 
} ¿∆
aC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_TextInfo.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public 

class 
TMP_TextInfo 
{ 
internal 
static 
Vector2 $
k_InfinityVectorPositive  8
=9 :
new; >
Vector2? F
(F G
$numG L
,L M
$numN S
)S T
;T U
internal 
static 
Vector2 $
k_InfinityVectorNegative  8
=9 :
new; >
Vector2? F
(F G
-G H
$numH M
,M N
-O P
$numP U
)U V
;V W
public 
TMP_Text 
textComponent %
;% &
public 
int 
characterCount !
;! "
public 
int 
spriteCount 
; 
public 
int 

spaceCount 
; 
public 
int 
	wordCount 
; 
public 
int 
	linkCount 
; 
public 
int 
	lineCount 
; 
public 
int 
	pageCount 
; 
public 
int 
materialCount  
;  !
public 
TMP_CharacterInfo  
[  !
]! "
characterInfo# 0
;0 1
public 
TMP_WordInfo 
[ 
] 
wordInfo &
;& '
public   
TMP_LinkInfo   
[   
]   
linkInfo   &
;  & '
public!! 
TMP_LineInfo!! 
[!! 
]!! 
lineInfo!! &
;!!& '
public"" 
TMP_PageInfo"" 
["" 
]"" 
pageInfo"" &
;""& '
public## 
TMP_MeshInfo## 
[## 
]## 
meshInfo## &
;##& '
private%% 
TMP_MeshInfo%% 
[%% 
]%% 
m_CachedMeshInfo%% /
;%%/ 0
public(( 
TMP_TextInfo(( 
((( 
)(( 
{)) 	
characterInfo** 
=** 
new** 
TMP_CharacterInfo**  1
[**1 2
$num**2 3
]**3 4
;**4 5
wordInfo++ 
=++ 
new++ 
TMP_WordInfo++ '
[++' (
$num++( *
]++* +
;+++ ,
linkInfo,, 
=,, 
new,, 
TMP_LinkInfo,, '
[,,' (
$num,,( )
],,) *
;,,* +
lineInfo-- 
=-- 
new-- 
TMP_LineInfo-- '
[--' (
$num--( )
]--) *
;--* +
pageInfo.. 
=.. 
new.. 
TMP_PageInfo.. '
[..' (
$num..( )
]..) *
;..* +
meshInfo00 
=00 
new00 
TMP_MeshInfo00 '
[00' (
$num00( )
]00) *
;00* +
}11 	
internal33 
TMP_TextInfo33 
(33 
int33 !
characterCount33" 0
)330 1
{44 	
characterInfo55 
=55 
new55 
TMP_CharacterInfo55  1
[551 2
characterCount552 @
]55@ A
;55A B
wordInfo66 
=66 
new66 
TMP_WordInfo66 '
[66' (
$num66( *
]66* +
;66+ ,
linkInfo77 
=77 
new77 
TMP_LinkInfo77 '
[77' (
$num77( )
]77) *
;77* +
lineInfo88 
=88 
new88 
TMP_LineInfo88 '
[88' (
$num88( )
]88) *
;88* +
pageInfo99 
=99 
new99 
TMP_PageInfo99 '
[99' (
$num99( )
]99) *
;99* +
meshInfo;; 
=;; 
new;; 
TMP_MeshInfo;; '
[;;' (
$num;;( )
];;) *
;;;* +
}<< 	
public>> 
TMP_TextInfo>> 
(>> 
TMP_Text>> $
textComponent>>% 2
)>>2 3
{?? 	
this@@ 
.@@ 
textComponent@@ 
=@@  
textComponent@@! .
;@@. /
characterInfoBB 
=BB 
newBB 
TMP_CharacterInfoBB  1
[BB1 2
$numBB2 3
]BB3 4
;BB4 5
wordInfoDD 
=DD 
newDD 
TMP_WordInfoDD '
[DD' (
$numDD( )
]DD) *
;DD* +
linkInfoEE 
=EE 
newEE 
TMP_LinkInfoEE '
[EE' (
$numEE( )
]EE) *
;EE* +
lineInfoGG 
=GG 
newGG 
TMP_LineInfoGG '
[GG' (
$numGG( )
]GG) *
;GG* +
pageInfoHH 
=HH 
newHH 
TMP_PageInfoHH '
[HH' (
$numHH( )
]HH) *
;HH* +
meshInfoJJ 
=JJ 
newJJ 
TMP_MeshInfoJJ '
[JJ' (
$numJJ( )
]JJ) *
;JJ* +
meshInfoKK 
[KK 
$numKK 
]KK 
.KK 
meshKK 
=KK 
textComponentKK ,
.KK, -
meshKK- 1
;KK1 2
materialCountLL 
=LL 
$numLL 
;LL 
}MM 	
publicSS 
voidSS 
ClearSS 
(SS 
)SS 
{TT 	
characterCountUU 
=UU 
$numUU 
;UU 

spaceCountVV 
=VV 
$numVV 
;VV 
	wordCountWW 
=WW 
$numWW 
;WW 
	linkCountXX 
=XX 
$numXX 
;XX 
	lineCountYY 
=YY 
$numYY 
;YY 
	pageCountZZ 
=ZZ 
$numZZ 
;ZZ 
spriteCount[[ 
=[[ 
$num[[ 
;[[ 
for]] 
(]] 
int]] 
i]] 
=]] 
$num]] 
;]] 
i]] 
<]] 
this]]  $
.]]$ %
meshInfo]]% -
.]]- .
Length]]. 4
;]]4 5
i]]6 7
++]]7 9
)]]9 :
{^^ 
this__ 
.__ 
meshInfo__ 
[__ 
i__ 
]__  
.__  !
vertexCount__! ,
=__- .
$num__/ 0
;__0 1
}`` 
}aa 	
internalgg 
voidgg 
ClearAllDatagg "
(gg" #
)gg# $
{hh 	
characterCountii 
=ii 
$numii 
;ii 

spaceCountjj 
=jj 
$numjj 
;jj 
	wordCountkk 
=kk 
$numkk 
;kk 
	linkCountll 
=ll 
$numll 
;ll 
	lineCountmm 
=mm 
$nummm 
;mm 
	pageCountnn 
=nn 
$numnn 
;nn 
spriteCountoo 
=oo 
$numoo 
;oo 
thisqq 
.qq 
characterInfoqq 
=qq  
newqq! $
TMP_CharacterInfoqq% 6
[qq6 7
$numqq7 8
]qq8 9
;qq9 :
thisrr 
.rr 
wordInforr 
=rr 
newrr 
TMP_WordInforr  ,
[rr, -
$numrr- .
]rr. /
;rr/ 0
thisss 
.ss 
lineInfoss 
=ss 
newss 
TMP_LineInfoss  ,
[ss, -
$numss- .
]ss. /
;ss/ 0
thistt 
.tt 
pageInfott 
=tt 
newtt 
TMP_PageInfott  ,
[tt, -
$numtt- .
]tt. /
;tt/ 0
thisuu 
.uu 
linkInfouu 
=uu 
newuu 
TMP_LinkInfouu  ,
[uu, -
$numuu- .
]uu. /
;uu/ 0
materialCountww 
=ww 
$numww 
;ww 
thisyy 
.yy 
meshInfoyy 
=yy 
newyy 
TMP_MeshInfoyy  ,
[yy, -
$numyy- .
]yy. /
;yy/ 0
}zz 	
public
ÄÄ 
void
ÄÄ 
ClearMeshInfo
ÄÄ !
(
ÄÄ! "
bool
ÄÄ" &

updateMesh
ÄÄ' 1
)
ÄÄ1 2
{
ÅÅ 	
for
ÇÇ 
(
ÇÇ 
int
ÇÇ 
i
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
i
ÇÇ 
<
ÇÇ 
this
ÇÇ  $
.
ÇÇ$ %
meshInfo
ÇÇ% -
.
ÇÇ- .
Length
ÇÇ. 4
;
ÇÇ4 5
i
ÇÇ6 7
++
ÇÇ7 9
)
ÇÇ9 :
this
ÉÉ 
.
ÉÉ 
meshInfo
ÉÉ 
[
ÉÉ 
i
ÉÉ 
]
ÉÉ  
.
ÉÉ  !
Clear
ÉÉ! &
(
ÉÉ& '

updateMesh
ÉÉ' 1
)
ÉÉ1 2
;
ÉÉ2 3
}
ÑÑ 	
public
ää 
void
ää 
ClearAllMeshInfo
ää $
(
ää$ %
)
ää% &
{
ãã 	
for
åå 
(
åå 
int
åå 
i
åå 
=
åå 
$num
åå 
;
åå 
i
åå 
<
åå 
this
åå  $
.
åå$ %
meshInfo
åå% -
.
åå- .
Length
åå. 4
;
åå4 5
i
åå6 7
++
åå7 9
)
åå9 :
this
çç 
.
çç 
meshInfo
çç 
[
çç 
i
çç 
]
çç  
.
çç  !
Clear
çç! &
(
çç& '
true
çç' +
)
çç+ ,
;
çç, -
}
éé 	
public
îî 
void
îî 
ResetVertexLayout
îî %
(
îî% &
bool
îî& *
isVolumetric
îî+ 7
)
îî7 8
{
ïï 	
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ 
$num
ññ 
;
ññ 
i
ññ 
<
ññ 
this
ññ  $
.
ññ$ %
meshInfo
ññ% -
.
ññ- .
Length
ññ. 4
;
ññ4 5
i
ññ6 7
++
ññ7 9
)
ññ9 :
this
óó 
.
óó 
meshInfo
óó 
[
óó 
i
óó 
]
óó  
.
óó  !
ResizeMeshInfo
óó! /
(
óó/ 0
$num
óó0 1
,
óó1 2
isVolumetric
óó3 ?
)
óó? @
;
óó@ A
}
òò 	
public
üü 
void
üü !
ClearUnusedVertices
üü '
(
üü' (
MaterialReference
üü( 9
[
üü9 :
]
üü: ;
	materials
üü< E
)
üüE F
{
†† 	
for
°° 
(
°° 
int
°° 
i
°° 
=
°° 
$num
°° 
;
°° 
i
°° 
<
°° 
meshInfo
°°  (
.
°°( )
Length
°°) /
;
°°/ 0
i
°°1 2
++
°°2 4
)
°°4 5
{
¢¢ 
int
££ 
start
££ 
=
££ 
$num
££ 
;
££ 
meshInfo
§§ 
[
§§ 
i
§§ 
]
§§ 
.
§§ !
ClearUnusedVertices
§§ /
(
§§/ 0
start
§§0 5
)
§§5 6
;
§§6 7
}
•• 
}
¶¶ 	
public
¨¨ 
void
¨¨ 
ClearLineInfo
¨¨ !
(
¨¨! "
)
¨¨" #
{
≠≠ 	
if
ÆÆ 
(
ÆÆ 
this
ÆÆ 
.
ÆÆ 
lineInfo
ÆÆ 
==
ÆÆ  
null
ÆÆ! %
)
ÆÆ% &
this
ØØ 
.
ØØ 
lineInfo
ØØ 
=
ØØ 
new
ØØ  #
TMP_LineInfo
ØØ$ 0
[
ØØ0 1
$num
ØØ1 2
]
ØØ2 3
;
ØØ3 4
int
±± 
length
±± 
=
±± 
this
±± 
.
±± 
lineInfo
±± &
.
±±& '
Length
±±' -
;
±±- .
for
≥≥ 
(
≥≥ 
int
≥≥ 
i
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
i
≥≥ 
<
≥≥ 
length
≥≥  &
;
≥≥& '
i
≥≥( )
++
≥≥) +
)
≥≥+ ,
{
¥¥ 
this
µµ 
.
µµ 
lineInfo
µµ 
[
µµ 
i
µµ 
]
µµ  
.
µµ  !
characterCount
µµ! /
=
µµ0 1
$num
µµ2 3
;
µµ3 4
this
∂∂ 
.
∂∂ 
lineInfo
∂∂ 
[
∂∂ 
i
∂∂ 
]
∂∂  
.
∂∂  !

spaceCount
∂∂! +
=
∂∂, -
$num
∂∂. /
;
∂∂/ 0
this
∑∑ 
.
∑∑ 
lineInfo
∑∑ 
[
∑∑ 
i
∑∑ 
]
∑∑  
.
∑∑  !
	wordCount
∑∑! *
=
∑∑+ ,
$num
∑∑- .
;
∑∑. /
this
∏∏ 
.
∏∏ 
lineInfo
∏∏ 
[
∏∏ 
i
∏∏ 
]
∏∏  
.
∏∏  !#
controlCharacterCount
∏∏! 6
=
∏∏7 8
$num
∏∏9 :
;
∏∏: ;
this
ππ 
.
ππ 
lineInfo
ππ 
[
ππ 
i
ππ 
]
ππ  
.
ππ  !
width
ππ! &
=
ππ' (
$num
ππ) *
;
ππ* +
this
ªª 
.
ªª 
lineInfo
ªª 
[
ªª 
i
ªª 
]
ªª  
.
ªª  !
ascender
ªª! )
=
ªª* +&
k_InfinityVectorNegative
ªª, D
.
ªªD E
x
ªªE F
;
ªªF G
this
ºº 
.
ºº 
lineInfo
ºº 
[
ºº 
i
ºº 
]
ºº  
.
ºº  !
	descender
ºº! *
=
ºº+ ,&
k_InfinityVectorPositive
ºº- E
.
ººE F
x
ººF G
;
ººG H
this
ææ 
.
ææ 
lineInfo
ææ 
[
ææ 
i
ææ 
]
ææ  
.
ææ  !

marginLeft
ææ! +
=
ææ, -
$num
ææ. /
;
ææ/ 0
this
øø 
.
øø 
lineInfo
øø 
[
øø 
i
øø 
]
øø  
.
øø  !
marginRight
øø! ,
=
øø- .
$num
øø/ 0
;
øø0 1
this
¡¡ 
.
¡¡ 
lineInfo
¡¡ 
[
¡¡ 
i
¡¡ 
]
¡¡  
.
¡¡  !
lineExtents
¡¡! ,
.
¡¡, -
min
¡¡- 0
=
¡¡1 2&
k_InfinityVectorPositive
¡¡3 K
;
¡¡K L
this
¬¬ 
.
¬¬ 
lineInfo
¬¬ 
[
¬¬ 
i
¬¬ 
]
¬¬  
.
¬¬  !
lineExtents
¬¬! ,
.
¬¬, -
max
¬¬- 0
=
¬¬1 2&
k_InfinityVectorNegative
¬¬3 K
;
¬¬K L
this
ƒƒ 
.
ƒƒ 
lineInfo
ƒƒ 
[
ƒƒ 
i
ƒƒ 
]
ƒƒ  
.
ƒƒ  !

maxAdvance
ƒƒ! +
=
ƒƒ, -
$num
ƒƒ. /
;
ƒƒ/ 0
}
∆∆ 
}
«« 	
internal
…… 
void
…… 
ClearPageInfo
…… #
(
……# $
)
……$ %
{
   	
if
ÀÀ 
(
ÀÀ 
this
ÀÀ 
.
ÀÀ 
pageInfo
ÀÀ 
==
ÀÀ  
null
ÀÀ! %
)
ÀÀ% &
this
ÃÃ 
.
ÃÃ 
pageInfo
ÃÃ 
=
ÃÃ 
new
ÃÃ  #
TMP_PageInfo
ÃÃ$ 0
[
ÃÃ0 1
$num
ÃÃ1 2
]
ÃÃ2 3
;
ÃÃ3 4
int
ŒŒ 
length
ŒŒ 
=
ŒŒ 
this
ŒŒ 
.
ŒŒ 
pageInfo
ŒŒ &
.
ŒŒ& '
Length
ŒŒ' -
;
ŒŒ- .
for
–– 
(
–– 
int
–– 
i
–– 
=
–– 
$num
–– 
;
–– 
i
–– 
<
–– 
length
––  &
;
––& '
i
––( )
++
––) +
)
––+ ,
{
—— 
this
““ 
.
““ 
pageInfo
““ 
[
““ 
i
““ 
]
““  
.
““  !!
firstCharacterIndex
““! 4
=
““5 6
$num
““7 8
;
““8 9
this
”” 
.
”” 
pageInfo
”” 
[
”” 
i
”” 
]
””  
.
””  ! 
lastCharacterIndex
””! 3
=
””4 5
$num
””6 7
;
””7 8
this
‘‘ 
.
‘‘ 
pageInfo
‘‘ 
[
‘‘ 
i
‘‘ 
]
‘‘  
.
‘‘  !
ascender
‘‘! )
=
‘‘* +
-
‘‘, -
$num
‘‘- 2
;
‘‘2 3
this
’’ 
.
’’ 
pageInfo
’’ 
[
’’ 
i
’’ 
]
’’  
.
’’  !
baseLine
’’! )
=
’’* +
$num
’’, -
;
’’- .
this
÷÷ 
.
÷÷ 
pageInfo
÷÷ 
[
÷÷ 
i
÷÷ 
]
÷÷  
.
÷÷  !
	descender
÷÷! *
=
÷÷+ ,
$num
÷÷- 2
;
÷÷2 3
}
◊◊ 
}
ÿÿ 	
public
ﬂﬂ 
TMP_MeshInfo
ﬂﬂ 
[
ﬂﬂ 
]
ﬂﬂ $
CopyMeshInfoVertexData
ﬂﬂ 4
(
ﬂﬂ4 5
)
ﬂﬂ5 6
{
‡‡ 	
if
·· 
(
·· 
m_CachedMeshInfo
··  
==
··! #
null
··$ (
||
··) +
m_CachedMeshInfo
··, <
.
··< =
Length
··= C
!=
··D F
meshInfo
··G O
.
··O P
Length
··P V
)
··V W
{
‚‚ 
m_CachedMeshInfo
„„  
=
„„! "
new
„„# &
TMP_MeshInfo
„„' 3
[
„„3 4
meshInfo
„„4 <
.
„„< =
Length
„„= C
]
„„C D
;
„„D E
for
ÊÊ 
(
ÊÊ 
int
ÊÊ 
i
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
i
ÊÊ  !
<
ÊÊ" #
m_CachedMeshInfo
ÊÊ$ 4
.
ÊÊ4 5
Length
ÊÊ5 ;
;
ÊÊ; <
i
ÊÊ= >
++
ÊÊ> @
)
ÊÊ@ A
{
ÁÁ 
int
ËË 
length
ËË 
=
ËË  
meshInfo
ËË! )
[
ËË) *
i
ËË* +
]
ËË+ ,
.
ËË, -
vertices
ËË- 5
.
ËË5 6
Length
ËË6 <
;
ËË< =
m_CachedMeshInfo
ÍÍ $
[
ÍÍ$ %
i
ÍÍ% &
]
ÍÍ& '
.
ÍÍ' (
vertices
ÍÍ( 0
=
ÍÍ1 2
new
ÍÍ3 6
Vector3
ÍÍ7 >
[
ÍÍ> ?
length
ÍÍ? E
]
ÍÍE F
;
ÍÍF G
m_CachedMeshInfo
ÎÎ $
[
ÎÎ$ %
i
ÎÎ% &
]
ÎÎ& '
.
ÎÎ' (
uvs0
ÎÎ( ,
=
ÎÎ- .
new
ÎÎ/ 2
Vector2
ÎÎ3 :
[
ÎÎ: ;
length
ÎÎ; A
]
ÎÎA B
;
ÎÎB C
m_CachedMeshInfo
ÏÏ $
[
ÏÏ$ %
i
ÏÏ% &
]
ÏÏ& '
.
ÏÏ' (
uvs2
ÏÏ( ,
=
ÏÏ- .
new
ÏÏ/ 2
Vector2
ÏÏ3 :
[
ÏÏ: ;
length
ÏÏ; A
]
ÏÏA B
;
ÏÏB C
m_CachedMeshInfo
ÌÌ $
[
ÌÌ$ %
i
ÌÌ% &
]
ÌÌ& '
.
ÌÌ' (
colors32
ÌÌ( 0
=
ÌÌ1 2
new
ÌÌ3 6
Color32
ÌÌ7 >
[
ÌÌ> ?
length
ÌÌ? E
]
ÌÌE F
;
ÌÌF G
}
ÚÚ 
}
ÛÛ 
for
ıı 
(
ıı 
int
ıı 
i
ıı 
=
ıı 
$num
ıı 
;
ıı 
i
ıı 
<
ıı 
m_CachedMeshInfo
ıı  0
.
ıı0 1
Length
ıı1 7
;
ıı7 8
i
ıı9 :
++
ıı: <
)
ıı< =
{
ˆˆ 
int
˜˜ 
length
˜˜ 
=
˜˜ 
meshInfo
˜˜ %
[
˜˜% &
i
˜˜& '
]
˜˜' (
.
˜˜( )
vertices
˜˜) 1
.
˜˜1 2
Length
˜˜2 8
;
˜˜8 9
if
˘˘ 
(
˘˘ 
m_CachedMeshInfo
˘˘ $
[
˘˘$ %
i
˘˘% &
]
˘˘& '
.
˘˘' (
vertices
˘˘( 0
.
˘˘0 1
Length
˘˘1 7
!=
˘˘8 :
length
˘˘; A
)
˘˘A B
{
˙˙ 
m_CachedMeshInfo
˚˚ $
[
˚˚$ %
i
˚˚% &
]
˚˚& '
.
˚˚' (
vertices
˚˚( 0
=
˚˚1 2
new
˚˚3 6
Vector3
˚˚7 >
[
˚˚> ?
length
˚˚? E
]
˚˚E F
;
˚˚F G
m_CachedMeshInfo
¸¸ $
[
¸¸$ %
i
¸¸% &
]
¸¸& '
.
¸¸' (
uvs0
¸¸( ,
=
¸¸- .
new
¸¸/ 2
Vector2
¸¸3 :
[
¸¸: ;
length
¸¸; A
]
¸¸A B
;
¸¸B C
m_CachedMeshInfo
˝˝ $
[
˝˝$ %
i
˝˝% &
]
˝˝& '
.
˝˝' (
uvs2
˝˝( ,
=
˝˝- .
new
˝˝/ 2
Vector2
˝˝3 :
[
˝˝: ;
length
˝˝; A
]
˝˝A B
;
˝˝B C
m_CachedMeshInfo
˛˛ $
[
˛˛$ %
i
˛˛% &
]
˛˛& '
.
˛˛' (
colors32
˛˛( 0
=
˛˛1 2
new
˛˛3 6
Color32
˛˛7 >
[
˛˛> ?
length
˛˛? E
]
˛˛E F
;
˛˛F G
}
ÉÉ 
Array
áá 
.
áá 
Copy
áá 
(
áá 
meshInfo
áá #
[
áá# $
i
áá$ %
]
áá% &
.
áá& '
vertices
áá' /
,
áá/ 0
m_CachedMeshInfo
áá1 A
[
ááA B
i
ááB C
]
ááC D
.
ááD E
vertices
ááE M
,
ááM N
length
ááO U
)
ááU V
;
ááV W
Array
àà 
.
àà 
Copy
àà 
(
àà 
meshInfo
àà #
[
àà# $
i
àà$ %
]
àà% &
.
àà& '
uvs0
àà' +
,
àà+ ,
m_CachedMeshInfo
àà- =
[
àà= >
i
àà> ?
]
àà? @
.
àà@ A
uvs0
ààA E
,
ààE F
length
ààG M
)
ààM N
;
ààN O
Array
ââ 
.
ââ 
Copy
ââ 
(
ââ 
meshInfo
ââ #
[
ââ# $
i
ââ$ %
]
ââ% &
.
ââ& '
uvs2
ââ' +
,
ââ+ ,
m_CachedMeshInfo
ââ- =
[
ââ= >
i
ââ> ?
]
ââ? @
.
ââ@ A
uvs2
ââA E
,
ââE F
length
ââG M
)
ââM N
;
ââN O
Array
ää 
.
ää 
Copy
ää 
(
ää 
meshInfo
ää #
[
ää# $
i
ää$ %
]
ää% &
.
ää& '
colors32
ää' /
,
ää/ 0
m_CachedMeshInfo
ää1 A
[
ääA B
i
ääB C
]
ääC D
.
ääD E
colors32
ääE M
,
ääM N
length
ääO U
)
ääU V
;
ääV W
}
èè 
return
ëë 
m_CachedMeshInfo
ëë #
;
ëë# $
}
íí 	
public
úú 
static
úú 
void
úú 
Resize
úú !
<
úú! "
T
úú" #
>
úú# $
(
úú% &
ref
úú& )
T
úú* +
[
úú+ ,
]
úú, -
array
úú. 3
,
úú3 4
int
úú5 8
size
úú9 =
)
úú= >
{
ùù 	
int
üü 
newSize
üü 
=
üü 
size
üü 
>
üü  
$num
üü! %
?
üü& '
size
üü( ,
+
üü- .
$num
üü/ 2
:
üü3 4
Mathf
üü5 :
.
üü: ;
NextPowerOfTwo
üü; I
(
üüI J
size
üüJ N
)
üüN O
;
üüO P
Array
°° 
.
°° 
Resize
°° 
(
°° 
ref
°° 
array
°° "
,
°°" #
newSize
°°$ +
)
°°+ ,
;
°°, -
}
¢¢ 	
public
¨¨ 
static
¨¨ 
void
¨¨ 
Resize
¨¨ !
<
¨¨! "
T
¨¨" #
>
¨¨# $
(
¨¨$ %
ref
¨¨% (
T
¨¨) *
[
¨¨* +
]
¨¨+ ,
array
¨¨- 2
,
¨¨2 3
int
¨¨4 7
size
¨¨8 <
,
¨¨< =
bool
¨¨> B
isBlockAllocated
¨¨C S
)
¨¨S T
{
≠≠ 	
if
ÆÆ 
(
ÆÆ 
isBlockAllocated
ÆÆ  
)
ÆÆ  !
size
ÆÆ" &
=
ÆÆ' (
size
ÆÆ) -
>
ÆÆ. /
$num
ÆÆ0 4
?
ÆÆ5 6
size
ÆÆ7 ;
+
ÆÆ< =
$num
ÆÆ> A
:
ÆÆB C
Mathf
ÆÆD I
.
ÆÆI J
NextPowerOfTwo
ÆÆJ X
(
ÆÆX Y
size
ÆÆY ]
)
ÆÆ] ^
;
ÆÆ^ _
if
∞∞ 
(
∞∞ 
size
∞∞ 
==
∞∞ 
array
∞∞ 
.
∞∞ 
Length
∞∞ $
)
∞∞$ %
return
∞∞& ,
;
∞∞, -
Array
¥¥ 
.
¥¥ 
Resize
¥¥ 
(
¥¥ 
ref
¥¥ 
array
¥¥ "
,
¥¥" #
size
¥¥$ (
)
¥¥( )
;
¥¥) *
}
µµ 	
}
∑∑ 
}∏∏ •k
kC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_RichTextTagsCommon.cs
	namespace 	
TMPro
 
{ 
internal

 
enum

 
	MarkupTag

 
:

 
int

 !
{ 
BOLD 
= 
$num 
, 

SLASH_BOLD 
= 
$num 
, 
ITALIC 
= 
$num 
, 
SLASH_ITALIC 
= 
$num 
, 
	UNDERLINE 
= 
$num 
, 
SLASH_UNDERLINE 
= 
$num 
, 
STRIKETHROUGH 
= 
$num 
, 
SLASH_STRIKETHROUGH 
= 
$num "
," #
MARK 
= 
$num 
, 

SLASH_MARK 
= 
$num 
, 
	SUBSCRIPT 
= 
$num 
, 
SLASH_SUBSCRIPT 
= 
$num !
,! "
SUPERSCRIPT 
= 
$num 
, 
SLASH_SUPERSCRIPT 
= 
$num #
,# $
COLOR 
= 
$num 
, 
SLASH_COLOR 
= 
$num  
,  !
ALPHA 
= 
$num 
, 
A 	
=
 
$num 
, 
SLASH_A 
= 
$num 
, 
SIZE   
=   
$num   
,   

SLASH_SIZE!! 
=!! 
$num!! 
,!! 
SPRITE"" 
="" 
-"" 
$num"" 
,"" 
NO_BREAK## 
=## 
$num## 
,## 
SLASH_NO_BREAK$$ 
=$$ 
$num$$ !
,$$! "
STYLE%% 
=%% 
$num%% 
,%% 
SLASH_STYLE&& 
=&& 
$num&&  
,&&  !
FONT'' 
='' 
$num'' 
,'' 

SLASH_FONT(( 
=(( 
$num(( 
,(( 
SLASH_MATERIAL)) 
=)) 
-)) 
$num)) $
,))$ %
LINK** 
=** 
$num** 
,** 

SLASH_LINK++ 
=++ 
$num++ 
,++ 
FONT_WEIGHT,, 
=,, 
-,, 
$num,, !
,,,! "
SLASH_FONT_WEIGHT-- 
=-- 
--- 
$num-- &
,--& '
NO_PARSE.. 
=.. 
-.. 
$num.. 
,.. 
SLASH_NO_PARSE// 
=// 
-// 
$num// #
,//# $
POSITION00 
=00 
$num00 
,00 
SLASH_POSITION11 
=11 
$num11  
,11  !
VERTICAL_OFFSET22 
=22 
$num22 $
,22$ %!
SLASH_VERTICAL_OFFSET33 
=33 
-33  !
$num33! )
,33) *
SPACE44 
=44 
$num44 
,44 
SLASH_SPACE55 
=55 
$num55  
,55  !
PAGE66 
=66 
$num66 
,66 

SLASH_PAGE77 
=77 
$num77 
,77 
ALIGN88 
=88 
$num88 
,88 
SLASH_ALIGN99 
=99 
$num99  
,99  !
WIDTH:: 
=:: 
$num:: 
,:: 
SLASH_WIDTH;; 
=;; 
$num;;  
,;;  !
GRADIENT<< 
=<< 
-<< 
$num<< 
,<< 
SLASH_GRADIENT== 
=== 
-== 
$num== $
,==$ %
CHARACTER_SPACE>> 
=>> 
->> 
$num>> %
,>>% &!
SLASH_CHARACTER_SPACE?? 
=?? 
-??  !
$num??! +
,??+ ,
	MONOSPACE@@ 
=@@ 
-@@ 
$num@@ 
,@@  
SLASH_MONOSPACEAA 
=AA 
-AA 
$numAA %
,AA% &
CLASSBB 
=BB 
$numBB 
,BB 
INDENTCC 
=CC 
-CC 
$numCC 
,CC 
SLASH_INDENTDD 
=DD 
-DD 
$numDD "
,DD" #
LINE_INDENTEE 
=EE 
-EE 
$numEE  
,EE  !
SLASH_LINE_INDENTFF 
=FF 
$numFF $
,FF$ %
MARGINGG 
=GG 
-GG 
$numGG 
,GG 
SLASH_MARGINHH 
=HH 
-HH 
$numHH "
,HH" #
MARGIN_LEFTII 
=II 
-II 
$numII  
,II  !
MARGIN_RIGHTJJ 
=JJ 
-JJ 
$numJJ !
,JJ! "
LINE_HEIGHTKK 
=KK 
-KK 
$numKK  
,KK  !
SLASH_LINE_HEIGHTLL 
=LL 
$numLL %
,LL% &
ACTIONMM 
=MM 
-MM 
$numMM 
,MM 
SLASH_ACTIONNN 
=NN 
-NN 
$numNN "
,NN" #
SCALEOO 
=OO 
$numOO 
,OO 
SLASH_SCALEPP 
=PP 
$numPP  
,PP  !
ROTATEQQ 
=QQ 
-QQ 
$numQQ 
,QQ 
SLASH_ROTATERR 
=RR 
-RR 
$numRR !
,RR! "
	LOWERCASETT 
=TT 
-TT 
$numTT 
,TT  
SLASH_LOWERCASEUU 
=UU 
-UU 
$numUU %
,UU% &
ALLCAPSVV 
=VV 
$numVV 
,VV 
SLASH_ALLCAPSWW 
=WW 
-WW 
$numWW "
,WW" #
	UPPERCASEXX 
=XX 
-XX 
$numXX 
,XX 
SLASH_UPPERCASEYY 
=YY 
-YY 
$numYY $
,YY$ %
	SMALLCAPSZZ 
=ZZ 
-ZZ 
$numZZ 
,ZZ 
SLASH_SMALLCAPS[[ 
=[[ 
$num[[ #
,[[# $
LIGA^^ 
=^^ 
$num^^ 
,^^ 

SLASH_LIGA__ 
=__ 
$num__ 
,__ 
FRAC`` 
=`` 
$num`` 
,`` 

SLASH_FRACaa 
=aa 
$numaa 
,aa 
NAMEdd 
=dd 
$numdd 
,dd 
INDEXee 
=ee 
$numee 
,ee 
TINTff 
=ff 
$numff 
,ff 
ANIMgg 
=gg 
$numgg 
,gg 
MATERIALhh 
=hh 
$numhh 
,hh 
HREFii 
=ii 
$numii 
,ii 
ANGLEjj 
=jj 
$numjj 
,jj 
REDmm 
=mm 
$nummm 
,mm 
GREENnn 
=nn 
$numnn 
,nn 
BLUEoo 
=oo 
$numoo 
,oo 
YELLOWpp 
=pp 
-pp 
$numpp 
,pp 
ORANGEqq 
=qq 
-qq 
$numqq 
,qq 
BLACKrr 
=rr 
$numrr 
,rr 
WHITEss 
=ss 
$numss 
,ss 
PURPLEtt 
=tt 
-tt 
$numtt 
,tt 
BRww 

=ww 
$numww 
,ww 
ZWSPxx 
=xx 
$numxx 
,xx 
NBSPyy 
=yy 
$numyy 
,yy 
SHYzz 
=zz 
$numzz 
,zz 
LEFT}} 
=}} 
$num}} 
,}} 
RIGHT~~ 
=~~ 
$num~~ 
,~~ 
CENTER 
= 
- 
$num 
, 
	JUSTIFIED
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
FLUSH
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
NONE
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
PLUS
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
MINUS
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
PX
áá 

=
áá 
$num
áá 
,
áá 
PLUS_PX
àà 
=
àà 
$num
àà 
,
àà 
MINUS_PX
ââ 
=
ââ 
$num
ââ 
,
ââ 
EM
ää 

=
ää 
$num
ää 
,
ää 
PLUS_EM
ãã 
=
ãã 
$num
ãã 
,
ãã 
MINUS_EM
åå 
=
åå 
$num
åå 
,
åå 
PCT
çç 
=
çç 
$num
çç 
,
çç 
PLUS_PCT
éé 
=
éé 
$num
éé 
,
éé 
	MINUS_PCT
èè 
=
èè 
$num
èè 
,
èè 

PERCENTAGE
êê 
=
êê 
$num
êê 
,
êê 
PLUS_PERCENTAGE
ëë 
=
ëë 
$num
ëë 
,
ëë 
MINUS_PERCENTAGE
íí 
=
íí 
$num
íí 
,
íí  
TRUE
îî 
=
îî 
$num
îî 
,
îî 
FALSE
ïï 
=
ïï 
$num
ïï 
,
ïï 
INVALID
óó 
=
óó 
$num
óó 
,
óó 
NORMAL
ôô 
=
ôô 
-
ôô 
$num
ôô 
,
ôô 
DEFAULT
öö 
=
öö 
-
öö 
$num
öö 
,
öö 
}
õõ 
public
†† 

enum
†† 
TagValueType
†† 
{
°° 
None
¢¢ 
=
¢¢ 
$num
¢¢ 
,
¢¢ 
NumericalValue
££ 
=
££ 
$num
££ 
,
££ 
StringValue
§§ 
=
§§ 
$num
§§ 
,
§§ 

ColorValue
•• 
=
•• 
$num
•• 
,
•• 
}
¶¶ 
public
®® 

enum
®® 
TagUnitType
®® 
{
©© 
Pixels
™™ 
=
™™ 
$num
™™ 
,
™™ 
	FontUnits
´´ 
=
´´ 
$num
´´ 
,
´´ 

Percentage
¨¨ 
=
¨¨ 
$num
¨¨ 
,
¨¨ 
}
≠≠ 
internal
≤≤ 
static
≤≤ 
class
≤≤ 
	CodePoint
≤≤ #
{
≥≥ 
public
¥¥ 
const
¥¥ 
uint
¥¥ 
SPACE
¥¥ 
=
¥¥  !
$num
¥¥" &
;
¥¥& '
public
µµ 
const
µµ 
uint
µµ 
DOUBLE_QUOTE
µµ &
=
µµ' (
$num
µµ) -
;
µµ- .
public
∂∂ 
const
∂∂ 
uint
∂∂ 
NUMBER_SIGN
∂∂ %
=
∂∂& '
$num
∂∂( ,
;
∂∂, -
public
∑∑ 
const
∑∑ 
uint
∑∑ 

PERCENTAGE
∑∑ $
=
∑∑% &
$num
∑∑' +
;
∑∑+ ,
public
∏∏ 
const
∏∏ 
uint
∏∏ 
PLUS
∏∏ 
=
∏∏  
$num
∏∏! %
;
∏∏% &
public
ππ 
const
ππ 
uint
ππ 
MINUS
ππ 
=
ππ  !
$num
ππ" &
;
ππ& '
public
∫∫ 
const
∫∫ 
uint
∫∫ 
PERIOD
∫∫  
=
∫∫! "
$num
∫∫# '
;
∫∫' (
public
ºº 
const
ºº 
uint
ºº 
HYPHEN_MINUS
ºº &
=
ºº' (
$num
ºº) -
;
ºº- .
public
ΩΩ 
const
ΩΩ 
uint
ΩΩ 
SOFT_HYPHEN
ΩΩ %
=
ΩΩ& '
$num
ΩΩ( ,
;
ΩΩ, -
public
ææ 
const
ææ 
uint
ææ 
HYPHEN
ææ  
=
ææ! "
$num
ææ# )
;
ææ) *
public
øø 
const
øø 
uint
øø !
NON_BREAKING_HYPHEN
øø -
=
øø. /
$num
øø0 6
;
øø6 7
public
¿¿ 
const
¿¿ 
uint
¿¿ 
ZERO_WIDTH_SPACE
¿¿ *
=
¿¿+ ,
$num
¿¿- 3
;
¿¿3 4
public
¡¡ 
const
¡¡ 
uint
¡¡ $
RIGHT_SINGLE_QUOTATION
¡¡ 0
=
¡¡1 2
$num
¡¡3 9
;
¡¡9 :
public
¬¬ 
const
¬¬ 
uint
¬¬ 

APOSTROPHE
¬¬ $
=
¬¬% &
$num
¬¬' +
;
¬¬+ ,
public
√√ 
const
√√ 
uint
√√ 
WORD_JOINER
√√ %
=
√√& '
$num
√√( .
;
√√. /
public
ƒƒ 
const
ƒƒ 
uint
ƒƒ "
HIGH_SURROGATE_START
ƒƒ .
=
ƒƒ/ 0
$num
ƒƒ1 7
;
ƒƒ7 8
public
≈≈ 
const
≈≈ 
uint
≈≈  
HIGH_SURROGATE_END
≈≈ ,
=
≈≈- .
$num
≈≈/ 5
;
≈≈5 6
public
∆∆ 
const
∆∆ 
uint
∆∆ !
LOW_SURROGATE_START
∆∆ -
=
∆∆. /
$num
∆∆0 6
;
∆∆6 7
public
«« 
const
«« 
uint
«« 
LOW_SURROGATE_END
«« +
=
««, -
$num
««. 4
;
««4 5
public
»» 
const
»» 
uint
»» #
UNICODE_PLANE01_START
»» /
=
»»0 1
$num
»»2 9
;
»»9 :
}
…… 
}   Ñ}
pC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_PackageResourceImporter.cs
	namespace		 	
TMPro		
 
{

 
[ 
System 
. 
Serializable 
] 
public 

class '
TMP_PackageResourceImporter ,
{ 
bool (
m_EssentialResourcesImported )
;) *
bool 0
$m_ExamplesAndExtrasResourcesImported 1
;1 2
internal 
bool !
m_IsImportingExamples +
;+ ,
public '
TMP_PackageResourceImporter *
(* +
)+ ,
{- .
}/ 0
public 
void 
	OnDestroy 
( 
) 
{ 	
} 	
public 
void 
OnGUI 
( 
) 
{ 	(
m_EssentialResourcesImported (
=) *
File+ /
./ 0
Exists0 6
(6 7
$str7 i
)i j
;j k0
$m_ExamplesAndExtrasResourcesImported 0
=1 2
	Directory3 <
.< =
Exists= C
(C D
$strD k
)k l
;l m
	GUILayout 
. 
BeginVertical #
(# $
)$ %
;% &
{ 
	GUILayout!! 
.!! 
BeginVertical!! '
(!!' (
EditorStyles!!( 4
.!!4 5
helpBox!!5 <
)!!< =
;!!= >
{"" 
	GUILayout## 
.## 
Label## #
(### $
$str##$ 4
,##4 5
EditorStyles##6 B
.##B C
	boldLabel##C L
)##L M
;##M N
	GUILayout$$ 
.$$ 
Label$$ #
($$# $
$str	$$$ õ
,
$$õ ú
new
$$ù †
GUIStyle
$$° ©
(
$$© ™
EditorStyles
$$™ ∂
.
$$∂ ∑
label
$$∑ º
)
$$º Ω
{
$$æ ø
wordWrap
$$¿ »
=
$$…  
true
$$À œ
}
$$– —
)
$$“ ”
;
$$” ‘
	GUILayout%% 
.%% 
Space%% #
(%%# $
$num%%$ &
)%%& '
;%%' (
GUI'' 
.'' 
enabled'' 
=''  !
!''" #(
m_EssentialResourcesImported''# ?
;''? @
if(( 
((( 
	GUILayout(( !
.((! "
Button((" (
(((( )
$str(() @
)((@ A
)((A B
{)) 
AssetDatabase** %
.**% &"
importPackageCompleted**& <
+=**= ?
ImportCallback**@ N
;**N O
string,, 
packageFullPath,, .
=,,/ 0
GetPackageFullPath,,1 C
(,,C D
),,D E
;,,E F
AssetDatabase-- %
.--% &
ImportPackage--& 3
(--3 4
packageFullPath--4 C
+--D E
$str--F 
,	-- Ä
false
--Å Ü
)
--Ü á
;
--á à
}.. 
	GUILayout// 
.// 
Space// #
(//# $
$num//$ &
)//& '
;//' (
GUI00 
.00 
enabled00 
=00  !
true00" &
;00& '
}11 
	GUILayout22 
.22 
EndVertical22 %
(22% &
)22& '
;22' (
	GUILayout55 
.55 
BeginVertical55 '
(55' (
EditorStyles55( 4
.554 5
helpBox555 <
)55< =
;55= >
{66 
	GUILayout77 
.77 
Label77 #
(77# $
$str77$ ;
,77; <
EditorStyles77= I
.77I J
	boldLabel77J S
)77S T
;77T U
	GUILayout88 
.88 
Label88 #
(88# $
$str	88$ †
,
88† °
new
88¢ •
GUIStyle
88¶ Æ
(
88Æ Ø
EditorStyles
88Ø ª
.
88ª º
label
88º ¡
)
88¡ ¬
{
88√ ƒ
wordWrap
88≈ Õ
=
88Œ œ
true
88– ‘
}
88’ ÷
)
88÷ ◊
;
88◊ ÿ
	GUILayout99 
.99 
Space99 #
(99# $
$num99$ &
)99& '
;99' (
GUI;; 
.;; 
enabled;; 
=;;  !(
m_EssentialResourcesImported;;" >
&&;;? A
!;;B C0
$m_ExamplesAndExtrasResourcesImported;;C g
;;;g h
if<< 
(<< 
	GUILayout<< !
.<<! "
Button<<" (
(<<( )
$str<<) G
)<<G H
)<<H I
{== !
m_IsImportingExamples?? -
=??. /
true??0 4
;??4 5
stringDD 
packageFullPathDD .
=DD/ 0
GetPackageFullPathDD1 C
(DDC D
)DDD E
;DDE F
AssetDatabaseEE %
.EE% &
ImportPackageEE& 3
(EE3 4
packageFullPathEE4 C
+EED E
$strEEF }
,EE} ~
false	EE Ñ
)
EEÑ Ö
;
EEÖ Ü
}FF 
	GUILayoutGG 
.GG 
SpaceGG #
(GG# $
$numGG$ &
)GG& '
;GG' (
GUIHH 
.HH 
enabledHH 
=HH  !
trueHH" &
;HH& '
}II 
	GUILayoutJJ 
.JJ 
EndVerticalJJ %
(JJ% &
)JJ& '
;JJ' (
}KK 
	GUILayoutLL 
.LL 
EndVerticalLL !
(LL! "
)LL" #
;LL# $
	GUILayoutMM 
.MM 
SpaceMM 
(MM 
$numMM 
)MM 
;MM  
}NN 	
internalPP 
voidPP *
RegisterResourceImportCallbackPP 4
(PP4 5
)PP5 6
{QQ 	
AssetDatabaseRR 
.RR "
importPackageCompletedRR 0
+=RR1 3
ImportCallbackRR4 B
;RRB C
}SS 	
voidYY 
ImportCallbackYY 
(YY 
stringYY "
packageNameYY# .
)YY. /
{ZZ 	
if[[ 
([[ 
packageName[[ 
==[[ 
$str[[ 8
)[[8 9
{\\ (
m_EssentialResourcesImported]] ,
=]]- .
true]]/ 3
;]]3 4
TMPro_EventManager^^ "
.^^" #
ON_RESOURCES_LOADED^^# 6
(^^6 7
)^^7 8
;^^8 9
SettingsServiceaa 
.aa  )
NotifySettingsProviderChangedaa  =
(aa= >
)aa> ?
;aa? @
}cc 
elsedd 
ifdd 
(dd 
packageNamedd  
==dd! #
$strdd$ ;
)dd; <
{ee 0
$m_ExamplesAndExtrasResourcesImportedff 4
=ff5 6
trueff7 ;
;ff; <!
m_IsImportingExamplesgg %
=gg& '
falsegg( -
;gg- .
}ii 
Debugkk 
.kk 
Logkk 
(kk 
$strkk 
+kk 
packageNamekk '
+kk( )
$strkk* A
)kkA B
;kkB C
AssetDatabasemm 
.mm "
importPackageCompletedmm 0
-=mm1 3
ImportCallbackmm4 B
;mmB C
}nn 	
staticpp 
stringpp 
GetPackageFullPathpp (
(pp( )
)pp) *
{qq 	
stringss 
packagePathss 
=ss  
Pathss! %
.ss% &
GetFullPathss& 1
(ss1 2
$strss2 R
)ssR S
;ssS T
iftt 
(tt 
	Directorytt 
.tt 
Existstt  
(tt  !
packagePathtt! ,
)tt, -
)tt- .
{uu 
returnvv 
packagePathvv "
;vv" #
}ww 
packagePathyy 
=yy 
Pathyy 
.yy 
GetFullPathyy *
(yy* +
$stryy+ 6
)yy6 7
;yy7 8
ifzz 
(zz 
	Directoryzz 
.zz 
Existszz  
(zz  !
packagePathzz! ,
)zz, -
)zz- .
{{{ 
if}} 
(}} 
	Directory}} 
.}} 
Exists}} $
(}}$ %
packagePath}}% 0
+}}1 2
$str}}3 l
)}}l m
)}}m n
{~~ 
return 
packagePath &
+' (
$str) Q
;Q R
}
ÄÄ 
if
ÉÉ 
(
ÉÉ 
	Directory
ÉÉ 
.
ÉÉ 
Exists
ÉÉ $
(
ÉÉ$ %
packagePath
ÉÉ% 0
+
ÉÉ1 2
$str
ÉÉ3 Z
)
ÉÉZ [
)
ÉÉ[ \
{
ÑÑ 
return
ÖÖ 
packagePath
ÖÖ &
+
ÖÖ' (
$str
ÖÖ) ?
;
ÖÖ? @
}
ÜÜ 
string
ââ 
[
ââ 
]
ââ 
matchingPaths
ââ &
=
ââ' (
	Directory
ââ) 2
.
ââ2 3
GetDirectories
ââ3 A
(
ââA B
packagePath
ââB M
,
ââM N
$str
ââO ]
,
ââ] ^
SearchOption
ââ_ k
.
ââk l
AllDirectories
ââl z
)
ââz {
;
ââ{ |
string
ää 
path
ää 
=
ää 
ValidateLocation
ää .
(
ää. /
matchingPaths
ää/ <
,
ää< =
packagePath
ää> I
)
ääI J
;
ääJ K
if
ãã 
(
ãã 
path
ãã 
!=
ãã 
null
ãã  
)
ãã  !
return
ãã" (
packagePath
ãã) 4
+
ãã5 6
path
ãã7 ;
;
ãã; <
}
åå 
return
éé 
null
éé 
;
éé 
}
èè 	
static
ëë 
string
ëë 
ValidateLocation
ëë &
(
ëë& '
string
ëë' -
[
ëë- .
]
ëë. /
paths
ëë0 5
,
ëë5 6
string
ëë7 =
projectPath
ëë> I
)
ëëI J
{
íí 	
for
ìì 
(
ìì 
int
ìì 
i
ìì 
=
ìì 
$num
ìì 
;
ìì 
i
ìì 
<
ìì 
paths
ìì  %
.
ìì% &
Length
ìì& ,
;
ìì, -
i
ìì. /
++
ìì/ 1
)
ìì1 2
{
îî 
if
ññ 
(
ññ 
	Directory
ññ 
.
ññ 
Exists
ññ $
(
ññ$ %
paths
ññ% *
[
ññ* +
i
ññ+ ,
]
ññ, -
+
ññ. /
$str
ññ0 C
)
ññC D
)
ññD E
{
óó 
string
òò 

folderPath
òò %
=
òò& '
paths
òò( -
[
òò- .
i
òò. /
]
òò/ 0
.
òò0 1
Replace
òò1 8
(
òò8 9
projectPath
òò9 D
,
òòD E
$str
òòF H
)
òòH I
;
òòI J

folderPath
ôô 
=
ôô  

folderPath
ôô! +
.
ôô+ ,
	TrimStart
ôô, 5
(
ôô5 6
$char
ôô6 :
,
ôô: ;
$char
ôô< ?
)
ôô? @
;
ôô@ A
return
öö 

folderPath
öö %
;
öö% &
}
õõ 
}
úú 
return
ûû 
null
ûû 
;
ûû 
}
üü 	
public
ßß 
static
ßß 
void
ßß 
ImportResources
ßß *
(
ßß* +
bool
ßß+ /
importEssentials
ßß0 @
,
ßß@ A
bool
ßßB F
importExamples
ßßG U
,
ßßU V
bool
ßßW [
interactive
ßß\ g
)
ßßg h
{
®® 	
string
©© 
packageFullPath
©© "
=
©©# $ 
GetPackageFullPath
©©% 7
(
©©7 8
)
©©8 9
;
©©9 :
if
´´ 
(
´´ 
importEssentials
´´  
)
´´  !
AssetDatabase
¨¨ 
.
¨¨ 
ImportPackage
¨¨ +
(
¨¨+ ,
packageFullPath
¨¨, ;
+
¨¨< =
$str
¨¨> w
,
¨¨w x
interactive¨¨y Ñ
)¨¨Ñ Ö
;¨¨Ö Ü
if
ÆÆ 
(
ÆÆ 
importExamples
ÆÆ 
)
ÆÆ 
AssetDatabase
ØØ 
.
ØØ 
ImportPackage
ØØ +
(
ØØ+ ,
packageFullPath
ØØ, ;
+
ØØ< =
$str
ØØ> u
,
ØØu v
interactiveØØw Ç
)ØØÇ É
;ØØÉ Ñ
}
∞∞ 	
}
±± 
public
≥≥ 

class
≥≥ /
!TMP_PackageResourceImporterWindow
≥≥ 2
:
≥≥3 4
EditorWindow
≥≥5 A
{
¥¥ 
[
µµ 	
SerializeField
µµ	 
]
µµ )
TMP_PackageResourceImporter
∂∂ # 
m_ResourceImporter
∂∂$ 6
;
∂∂6 7
static
∏∏ /
!TMP_PackageResourceImporterWindow
∏∏ 0
m_ImporterWindow
∏∏1 A
;
∏∏A B
public
∫∫ 
static
∫∫ 
void
∫∫ '
ShowPackageImporterWindow
∫∫ 4
(
∫∫4 5
)
∫∫5 6
{
ªª 	
if
ºº 
(
ºº 
m_ImporterWindow
ºº  
==
ºº! #
null
ºº$ (
)
ºº( )
{
ΩΩ 
m_ImporterWindow
ææ  
=
ææ! "
	GetWindow
ææ# ,
<
ææ, -/
!TMP_PackageResourceImporterWindow
ææ- N
>
ææN O
(
ææO P
)
ææP Q
;
ææQ R
m_ImporterWindow
øø  
.
øø  !
titleContent
øø! -
=
øø. /
new
øø0 3

GUIContent
øø4 >
(
øø> ?
$str
øø? M
)
øøM N
;
øøN O
m_ImporterWindow
¿¿  
.
¿¿  !
Focus
¿¿! &
(
¿¿& '
)
¿¿' (
;
¿¿( )
}
¡¡ 
}
¬¬ 	
void
ƒƒ 
OnEnable
ƒƒ 
(
ƒƒ 
)
ƒƒ 
{
≈≈ 	!
SetEditorWindowSize
«« 
(
««  
)
««  !
;
««! "
if
…… 
(
……  
m_ResourceImporter
…… "
==
……# %
null
……& *
)
……* + 
m_ResourceImporter
   "
=
  # $
new
  % ()
TMP_PackageResourceImporter
  ) D
(
  D E
)
  E F
;
  F G
if
ÃÃ 
(
ÃÃ  
m_ResourceImporter
ÃÃ "
.
ÃÃ" ##
m_IsImportingExamples
ÃÃ# 8
)
ÃÃ8 9 
m_ResourceImporter
ÕÕ "
.
ÕÕ" #,
RegisterResourceImportCallback
ÕÕ# A
(
ÕÕA B
)
ÕÕB C
;
ÕÕC D
}
ŒŒ 	
void
–– 
	OnDestroy
–– 
(
–– 
)
–– 
{
—— 	 
m_ResourceImporter
““ 
.
““ 
	OnDestroy
““ (
(
““( )
)
““) *
;
““* +
}
”” 	
void
’’ 
OnGUI
’’ 
(
’’ 
)
’’ 
{
÷÷ 	 
m_ResourceImporter
◊◊ 
.
◊◊ 
OnGUI
◊◊ $
(
◊◊$ %
)
◊◊% &
;
◊◊& '
}
ÿÿ 	
void
⁄⁄ 
OnInspectorUpdate
⁄⁄ 
(
⁄⁄ 
)
⁄⁄  
{
€€ 	
Repaint
‹‹ 
(
‹‹ 
)
‹‹ 
;
‹‹ 
}
›› 	
void
‚‚ !
SetEditorWindowSize
‚‚  
(
‚‚  !
)
‚‚! "
{
„„ 	
EditorWindow
‰‰ 
editorWindow
‰‰ %
=
‰‰& '
this
‰‰( ,
;
‰‰, -
Vector2
ÊÊ 

windowSize
ÊÊ 
=
ÊÊ  
new
ÊÊ! $
Vector2
ÊÊ% ,
(
ÊÊ, -
$num
ÊÊ- 0
,
ÊÊ0 1
$num
ÊÊ2 5
)
ÊÊ5 6
;
ÊÊ6 7
editorWindow
ÁÁ 
.
ÁÁ 
minSize
ÁÁ  
=
ÁÁ! "

windowSize
ÁÁ# -
;
ÁÁ- .
editorWindow
ËË 
.
ËË 
maxSize
ËË  
=
ËË! "

windowSize
ËË# -
;
ËË- .
}
ÈÈ 	
}
ÍÍ 
}ÏÏ ‘
fC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_ColorGradient.cs
	namespace 	
TMPro
 
{ 
public 

enum 
	ColorMode 
{ 
Single 
, 
HorizontalGradient		 
,		 
VerticalGradient

 
,

 
FourCornersGradient 
} 
[ 
System 
. 
Serializable 
] 
[ &
ExcludeFromPresetAttribute 4
]4 5
public 

class 
TMP_ColorGradient "
:# $
ScriptableObject% 5
{ 
public 
	ColorMode 
	colorMode "
=# $
	ColorMode% .
.. /
FourCornersGradient/ B
;B C
public 
Color 
topLeft 
; 
public 
Color 
topRight 
; 
public 
Color 

bottomLeft 
;  
public 
Color 
bottomRight  
;  !
const 
	ColorMode 
k_DefaultColorMode *
=+ ,
	ColorMode- 6
.6 7
FourCornersGradient7 J
;J K
static 
readonly 
Color 
k_DefaultColor ,
=- .
Color/ 4
.4 5
white5 :
;: ;
public 
TMP_ColorGradient  
(  !
)! "
{ 	
	colorMode   
=   
k_DefaultColorMode   *
;  * +
topLeft!! 
=!! 
k_DefaultColor!! $
;!!$ %
topRight"" 
="" 
k_DefaultColor"" %
;""% &

bottomLeft## 
=## 
k_DefaultColor## '
;##' (
bottomRight$$ 
=$$ 
k_DefaultColor$$ (
;$$( )
}%% 	
public++ 
TMP_ColorGradient++  
(++  !
Color++! &
color++' ,
)++, -
{,, 	
	colorMode-- 
=-- 
k_DefaultColorMode-- *
;--* +
topLeft.. 
=.. 
color.. 
;.. 
topRight// 
=// 
color// 
;// 

bottomLeft00 
=00 
color00 
;00 
bottomRight11 
=11 
color11 
;11  
}22 	
public;; 
TMP_ColorGradient;;  
(;;  !
Color;;! &
color0;;' -
,;;- .
Color;;/ 4
color1;;5 ;
,;;; <
Color;;= B
color2;;C I
,;;I J
Color;;K P
color3;;Q W
);;W X
{<< 	
	colorMode== 
=== 
k_DefaultColorMode== *
;==* +
this>> 
.>> 
topLeft>> 
=>> 
color0>> !
;>>! "
this?? 
.?? 
topRight?? 
=?? 
color1?? "
;??" #
this@@ 
.@@ 

bottomLeft@@ 
=@@ 
color2@@ $
;@@$ %
thisAA 
.AA 
bottomRightAA 
=AA 
color3AA %
;AA% &
}BB 	
}CC 
}DD ÙΩ
aC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_Settings.cs
	namespace 	
TMPro
 
{		 
[ 
System 
. 
Serializable 
] 
[ &
ExcludeFromPresetAttribute 4
]4 5
public 

class 
TMP_Settings 
: 
ScriptableObject  0
{ 
private 
static 
TMP_Settings #

s_Instance$ .
;. /
public 
static 
string 
version $
{ 	
get 
{ 
return 
$str  
;  !
}" #
} 	
public## 
static## 
bool## 
enableWordWrapping## -
{$$ 	
get%% 
{%% 
return%% 
instance%% !
.%%! " 
m_enableWordWrapping%%" 6
;%%6 7
}%%8 9
}&& 	
['' 	
SerializeField''	 
]'' 
private(( 
bool((  
m_enableWordWrapping(( )
;(() *
public-- 
static-- 
bool-- 
enableKerning-- (
{.. 	
get// 
{// 
return// 
instance// !
.//! "
m_enableKerning//" 1
;//1 2
}//3 4
}00 	
[11 	
SerializeField11	 
]11 
private22 
bool22 
m_enableKerning22 $
;22$ %
public77 
static77 
bool77 
enableExtraPadding77 -
{88 	
get99 
{99 
return99 
instance99 !
.99! " 
m_enableExtraPadding99" 6
;996 7
}998 9
}:: 	
[;; 	
SerializeField;;	 
];; 
private<< 
bool<<  
m_enableExtraPadding<< )
;<<) *
publicAA 
staticAA 
boolAA  
enableTintAllSpritesAA /
{BB 	
getCC 
{CC 
returnCC 
instanceCC !
.CC! ""
m_enableTintAllSpritesCC" 8
;CC8 9
}CC: ;
}DD 	
[EE 	
SerializeFieldEE	 
]EE 
privateFF 
boolFF "
m_enableTintAllSpritesFF +
;FF+ ,
publicKK 
staticKK 
boolKK '
enableParseEscapeCharactersKK 6
{LL 	
getMM 
{MM 
returnMM 
instanceMM !
.MM! ")
m_enableParseEscapeCharactersMM" ?
;MM? @
}MMA B
}NN 	
[OO 	
SerializeFieldOO	 
]OO 
privatePP 
boolPP )
m_enableParseEscapeCharactersPP 2
;PP2 3
publicUU 
staticUU 
boolUU 
enableRaycastTargetUU .
{VV 	
getWW 
{WW 
returnWW 
instanceWW !
.WW! "!
m_EnableRaycastTargetWW" 7
;WW7 8
}WW9 :
}XX 	
[YY 	
SerializeFieldYY	 
]YY 
privateZZ 
boolZZ !
m_EnableRaycastTargetZZ *
=ZZ+ ,
trueZZ- 1
;ZZ1 2
public__ 
static__ 
bool__ $
getFontFeaturesAtRuntime__ 3
{`` 	
getaa 
{aa 
returnaa 
instanceaa !
.aa! "&
m_GetFontFeaturesAtRuntimeaa" <
;aa< =
}aa> ?
}bb 	
[cc 	
SerializeFieldcc	 
]cc 
privatedd 
booldd &
m_GetFontFeaturesAtRuntimedd /
=dd0 1
truedd2 6
;dd6 7
publicii 
staticii 
intii !
missingGlyphCharacterii /
{jj 	
getkk 
{kk 
returnkk 
instancekk !
.kk! "#
m_missingGlyphCharacterkk" 9
;kk9 :
}kk; <
setll 
{ll 
instancell 
.ll #
m_missingGlyphCharacterll 2
=ll3 4
valuell5 :
;ll: ;
}ll< =
}mm 	
[nn 	
SerializeFieldnn	 
]nn 
privateoo 
intoo #
m_missingGlyphCharacteroo +
;oo+ ,
publictt 
statictt 
booltt 
warningsDisabledtt +
{uu 	
getvv 
{vv 
returnvv 
instancevv !
.vv! "
m_warningsDisabledvv" 4
;vv4 5
}vv6 7
}ww 	
[xx 	
SerializeFieldxx	 
]xx 
privateyy 
boolyy 
m_warningsDisabledyy '
;yy' (
public~~ 
static~~ 
TMP_FontAsset~~ #
defaultFontAsset~~$ 4
{ 	
get
ÄÄ 
{
ÄÄ 
return
ÄÄ 
instance
ÄÄ !
.
ÄÄ! " 
m_defaultFontAsset
ÄÄ" 4
;
ÄÄ4 5
}
ÄÄ6 7
}
ÅÅ 	
[
ÇÇ 	
SerializeField
ÇÇ	 
]
ÇÇ 
private
ÉÉ 
TMP_FontAsset
ÉÉ  
m_defaultFontAsset
ÉÉ 0
;
ÉÉ0 1
public
àà 
static
àà 
string
àà "
defaultFontAssetPath
àà 1
{
ââ 	
get
ää 
{
ää 
return
ää 
instance
ää !
.
ää! "$
m_defaultFontAssetPath
ää" 8
;
ää8 9
}
ää: ;
}
ãã 	
[
åå 	
SerializeField
åå	 
]
åå 
private
çç 
string
çç $
m_defaultFontAssetPath
çç -
;
çç- .
public
íí 
static
íí 
float
íí 
defaultFontSize
íí +
{
ìì 	
get
îî 
{
îî 
return
îî 
instance
îî !
.
îî! "
m_defaultFontSize
îî" 3
;
îî3 4
}
îî5 6
}
ïï 	
[
ññ 	
SerializeField
ññ	 
]
ññ 
private
óó 
float
óó 
m_defaultFontSize
óó '
;
óó' (
public
úú 
static
úú 
float
úú +
defaultTextAutoSizingMinRatio
úú 9
{
ùù 	
get
ûû 
{
ûû 
return
ûû 
instance
ûû !
.
ûû! "'
m_defaultAutoSizeMinRatio
ûû" ;
;
ûû; <
}
ûû= >
}
üü 	
[
†† 	
SerializeField
††	 
]
†† 
private
°° 
float
°° '
m_defaultAutoSizeMinRatio
°° /
;
°°/ 0
public
¶¶ 
static
¶¶ 
float
¶¶ +
defaultTextAutoSizingMaxRatio
¶¶ 9
{
ßß 	
get
®® 
{
®® 
return
®® 
instance
®® !
.
®®! "'
m_defaultAutoSizeMaxRatio
®®" ;
;
®®; <
}
®®= >
}
©© 	
[
™™ 	
SerializeField
™™	 
]
™™ 
private
´´ 
float
´´ '
m_defaultAutoSizeMaxRatio
´´ /
;
´´/ 0
public
∞∞ 
static
∞∞ 
Vector2
∞∞ 1
#defaultTextMeshProTextContainerSize
∞∞ A
{
±± 	
get
≤≤ 
{
≤≤ 
return
≤≤ 
instance
≤≤ !
.
≤≤! "3
%m_defaultTextMeshProTextContainerSize
≤≤" G
;
≤≤G H
}
≤≤I J
}
≥≥ 	
[
¥¥ 	
SerializeField
¥¥	 
]
¥¥ 
private
µµ 
Vector2
µµ 3
%m_defaultTextMeshProTextContainerSize
µµ =
;
µµ= >
public
∫∫ 
static
∫∫ 
Vector2
∫∫ 3
%defaultTextMeshProUITextContainerSize
∫∫ C
{
ªª 	
get
ºº 
{
ºº 
return
ºº 
instance
ºº !
.
ºº! "5
'm_defaultTextMeshProUITextContainerSize
ºº" I
;
ººI J
}
ººK L
}
ΩΩ 	
[
ææ 	
SerializeField
ææ	 
]
ææ 
private
øø 
Vector2
øø 5
'm_defaultTextMeshProUITextContainerSize
øø ?
;
øø? @
public
ƒƒ 
static
ƒƒ 
bool
ƒƒ #
autoSizeTextContainer
ƒƒ 0
{
≈≈ 	
get
∆∆ 
{
∆∆ 
return
∆∆ 
instance
∆∆ !
.
∆∆! "%
m_autoSizeTextContainer
∆∆" 9
;
∆∆9 :
}
∆∆; <
}
«« 	
[
»» 	
SerializeField
»»	 
]
»» 
private
…… 
bool
…… %
m_autoSizeTextContainer
…… ,
;
……, -
public
ŒŒ 
static
ŒŒ 
bool
ŒŒ %
isTextObjectScaleStatic
ŒŒ 2
{
œœ 	
get
–– 
{
–– 
return
–– 
instance
–– !
.
––! "'
m_IsTextObjectScaleStatic
––" ;
;
––; <
}
––= >
set
—— 
{
—— 
instance
—— 
.
—— '
m_IsTextObjectScaleStatic
—— 4
=
——5 6
value
——7 <
;
——< =
}
——> ?
}
““ 	
[
”” 	
SerializeField
””	 
]
”” 
private
‘‘ 
bool
‘‘ '
m_IsTextObjectScaleStatic
‘‘ .
;
‘‘. /
public
⁄⁄ 
static
⁄⁄ 
List
⁄⁄ 
<
⁄⁄ 
TMP_FontAsset
⁄⁄ (
>
⁄⁄( ) 
fallbackFontAssets
⁄⁄* <
{
€€ 	
get
‹‹ 
{
‹‹ 
return
‹‹ 
instance
‹‹ !
.
‹‹! ""
m_fallbackFontAssets
‹‹" 6
;
‹‹6 7
}
‹‹8 9
}
›› 	
[
ﬁﬁ 	
SerializeField
ﬁﬁ	 
]
ﬁﬁ 
private
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ 
TMP_FontAsset
ﬂﬂ "
>
ﬂﬂ" #"
m_fallbackFontAssets
ﬂﬂ$ 8
;
ﬂﬂ8 9
public
‰‰ 
static
‰‰ 
bool
‰‰ !
matchMaterialPreset
‰‰ .
{
ÂÂ 	
get
ÊÊ 
{
ÊÊ 
return
ÊÊ 
instance
ÊÊ !
.
ÊÊ! "#
m_matchMaterialPreset
ÊÊ" 7
;
ÊÊ7 8
}
ÊÊ9 :
}
ÁÁ 	
[
ËË 	
SerializeField
ËË	 
]
ËË 
private
ÈÈ 
bool
ÈÈ #
m_matchMaterialPreset
ÈÈ *
;
ÈÈ* +
public
ÓÓ 
static
ÓÓ 
TMP_SpriteAsset
ÓÓ % 
defaultSpriteAsset
ÓÓ& 8
{
ÔÔ 	
get
 
{
 
return
 
instance
 !
.
! ""
m_defaultSpriteAsset
" 6
;
6 7
}
8 9
}
ÒÒ 	
[
ÚÚ 	
SerializeField
ÚÚ	 
]
ÚÚ 
private
ÛÛ 
TMP_SpriteAsset
ÛÛ "
m_defaultSpriteAsset
ÛÛ  4
;
ÛÛ4 5
public
¯¯ 
static
¯¯ 
string
¯¯ $
defaultSpriteAssetPath
¯¯ 3
{
˘˘ 	
get
˙˙ 
{
˙˙ 
return
˙˙ 
instance
˙˙ !
.
˙˙! "&
m_defaultSpriteAssetPath
˙˙" :
;
˙˙: ;
}
˙˙< =
}
˚˚ 	
[
¸¸ 	
SerializeField
¸¸	 
]
¸¸ 
private
˝˝ 
string
˝˝ &
m_defaultSpriteAssetPath
˝˝ /
;
˝˝/ 0
public
ÇÇ 
static
ÇÇ 
bool
ÇÇ  
enableEmojiSupport
ÇÇ -
{
ÉÉ 	
get
ÑÑ 
{
ÑÑ 
return
ÑÑ 
instance
ÑÑ !
.
ÑÑ! ""
m_enableEmojiSupport
ÑÑ" 6
;
ÑÑ6 7
}
ÑÑ8 9
set
ÖÖ 
{
ÖÖ 
instance
ÖÖ 
.
ÖÖ "
m_enableEmojiSupport
ÖÖ /
=
ÖÖ0 1
value
ÖÖ2 7
;
ÖÖ7 8
}
ÖÖ9 :
}
ÜÜ 	
[
áá 	
SerializeField
áá	 
]
áá 
private
àà 
bool
àà "
m_enableEmojiSupport
àà )
;
àà) *
public
çç 
static
çç 
uint
çç +
missingCharacterSpriteUnicode
çç 8
{
éé 	
get
èè 
{
èè 
return
èè 
instance
èè !
.
èè! "-
m_MissingCharacterSpriteUnicode
èè" A
;
èèA B
}
èèC D
set
êê 
{
êê 
instance
êê 
.
êê -
m_MissingCharacterSpriteUnicode
êê :
=
êê; <
value
êê= B
;
êêB C
}
êêD E
}
ëë 	
[
íí 	
SerializeField
íí	 
]
íí 
private
ìì 
uint
ìì -
m_MissingCharacterSpriteUnicode
ìì 4
;
ìì4 5
public
££ 
static
££ 
string
££ -
defaultColorGradientPresetsPath
££ <
{
§§ 	
get
•• 
{
•• 
return
•• 
instance
•• !
.
••! "/
!m_defaultColorGradientPresetsPath
••" C
;
••C D
}
••E F
}
¶¶ 	
[
ßß 	
SerializeField
ßß	 
]
ßß 
private
®® 
string
®® /
!m_defaultColorGradientPresetsPath
®® 8
;
®®8 9
public
≠≠ 
static
≠≠ 
TMP_StyleSheet
≠≠ $
defaultStyleSheet
≠≠% 6
{
ÆÆ 	
get
ØØ 
{
ØØ 
return
ØØ 
instance
ØØ !
.
ØØ! "!
m_defaultStyleSheet
ØØ" 5
;
ØØ5 6
}
ØØ7 8
}
∞∞ 	
[
±± 	
SerializeField
±±	 
]
±± 
private
≤≤ 
TMP_StyleSheet
≤≤ !
m_defaultStyleSheet
≤≤ 2
;
≤≤2 3
public
∑∑ 
static
∑∑ 
string
∑∑ %
styleSheetsResourcePath
∑∑ 4
{
∏∏ 	
get
ππ 
{
ππ 
return
ππ 
instance
ππ !
.
ππ! "'
m_StyleSheetsResourcePath
ππ" ;
;
ππ; <
}
ππ= >
}
∫∫ 	
[
ªª 	
SerializeField
ªª	 
]
ªª 
private
ºº 
string
ºº '
m_StyleSheetsResourcePath
ºº 0
;
ºº0 1
public
¡¡ 
static
¡¡ 
	TextAsset
¡¡ 
leadingCharacters
¡¡  1
{
¬¬ 	
get
√√ 
{
√√ 
return
√√ 
instance
√√ !
.
√√! "!
m_leadingCharacters
√√" 5
;
√√5 6
}
√√7 8
}
ƒƒ 	
[
≈≈ 	
SerializeField
≈≈	 
]
≈≈ 
private
∆∆ 
	TextAsset
∆∆ !
m_leadingCharacters
∆∆ -
;
∆∆- .
public
ÀÀ 
static
ÀÀ 
	TextAsset
ÀÀ !
followingCharacters
ÀÀ  3
{
ÃÃ 	
get
ÕÕ 
{
ÕÕ 
return
ÕÕ 
instance
ÕÕ !
.
ÕÕ! "#
m_followingCharacters
ÕÕ" 7
;
ÕÕ7 8
}
ÕÕ9 :
}
ŒŒ 	
[
œœ 	
SerializeField
œœ	 
]
œœ 
private
–– 
	TextAsset
–– #
m_followingCharacters
–– /
;
––/ 0
public
’’ 
static
’’ 
LineBreakingTable
’’ '
linebreakingRules
’’( 9
{
÷÷ 	
get
◊◊ 
{
ÿÿ 
if
ŸŸ 
(
ŸŸ 
instance
ŸŸ 
.
ŸŸ !
m_linebreakingRules
ŸŸ 0
==
ŸŸ1 3
null
ŸŸ4 8
)
ŸŸ8 9#
LoadLinebreakingRules
⁄⁄ )
(
⁄⁄) *
)
⁄⁄* +
;
⁄⁄+ ,
return
‹‹ 
instance
‹‹ 
.
‹‹  !
m_linebreakingRules
‹‹  3
;
‹‹3 4
}
›› 
}
ﬁﬁ 	
[
ﬂﬂ 	
SerializeField
ﬂﬂ	 
]
ﬂﬂ 
private
‡‡ 
LineBreakingTable
‡‡ !!
m_linebreakingRules
‡‡" 5
;
‡‡5 6
public
ıı 
static
ıı 
bool
ıı .
 useModernHangulLineBreakingRules
ıı ;
{
ˆˆ 	
get
˜˜ 
{
˜˜ 
return
˜˜ 
instance
˜˜ !
.
˜˜! "0
"m_UseModernHangulLineBreakingRules
˜˜" D
;
˜˜D E
}
˜˜F G
set
¯¯ 
{
¯¯ 
instance
¯¯ 
.
¯¯ 0
"m_UseModernHangulLineBreakingRules
¯¯ =
=
¯¯> ?
value
¯¯@ E
;
¯¯E F
}
¯¯G H
}
˘˘ 	
[
˙˙ 	
SerializeField
˙˙	 
]
˙˙ 
private
˚˚ 
bool
˚˚ 0
"m_UseModernHangulLineBreakingRules
˚˚ 7
;
˚˚7 8
public
ÄÄ 
static
ÄÄ 
TMP_Settings
ÄÄ "
instance
ÄÄ# +
{
ÅÅ 	
get
ÇÇ 
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
TMP_Settings
ÑÑ  
.
ÑÑ  !

s_Instance
ÑÑ! +
==
ÑÑ, .
null
ÑÑ/ 3
)
ÑÑ3 4
{
ÖÖ 
TMP_Settings
ÜÜ  
.
ÜÜ  !

s_Instance
ÜÜ! +
=
ÜÜ, -
	Resources
ÜÜ. 7
.
ÜÜ7 8
Load
ÜÜ8 <
<
ÜÜ< =
TMP_Settings
ÜÜ= I
>
ÜÜI J
(
ÜÜJ K
$str
ÜÜK Y
)
ÜÜY Z
;
ÜÜZ [
if
ää 
(
ää 
TMP_Settings
ää $
.
ää$ %

s_Instance
ää% /
==
ää0 2
null
ää3 7
)
ää7 8
{
ãã /
!TMP_PackageResourceImporterWindow
çç 9
.
çç9 :'
ShowPackageImporterWindow
çç: S
(
ççS T
)
ççT U
;
ççU V
}
éé 
}
êê 
return
íí 
TMP_Settings
íí #
.
íí# $

s_Instance
íí$ .
;
íí. /
}
ìì 
}
îî 	
public
õõ 
static
õõ 
TMP_Settings
õõ "!
LoadDefaultSettings
õõ# 6
(
õõ6 7
)
õõ7 8
{
úú 	
if
ùù 
(
ùù 

s_Instance
ùù 
==
ùù 
null
ùù "
)
ùù" #
{
ûû 
TMP_Settings
†† 
settings
†† %
=
††& '
	Resources
††( 1
.
††1 2
Load
††2 6
<
††6 7
TMP_Settings
††7 C
>
††C D
(
††D E
$str
††E S
)
††S T
;
††T U
if
°° 
(
°° 
settings
°° 
!=
°° 
null
°°  $
)
°°$ %

s_Instance
¢¢ 
=
¢¢  
settings
¢¢! )
;
¢¢) *
}
££ 
return
•• 

s_Instance
•• 
;
•• 
}
¶¶ 	
public
≠≠ 
static
≠≠ 
TMP_Settings
≠≠ "
GetSettings
≠≠# .
(
≠≠. /
)
≠≠/ 0
{
ÆÆ 	
if
ØØ 
(
ØØ 
TMP_Settings
ØØ 
.
ØØ 
instance
ØØ %
==
ØØ& (
null
ØØ) -
)
ØØ- .
return
ØØ/ 5
null
ØØ6 :
;
ØØ: ;
return
±± 
TMP_Settings
±± 
.
±±  
instance
±±  (
;
±±( )
}
≤≤ 	
public
ππ 
static
ππ 
TMP_FontAsset
ππ #
GetFontAsset
ππ$ 0
(
ππ0 1
)
ππ1 2
{
∫∫ 	
if
ªª 
(
ªª 
TMP_Settings
ªª 
.
ªª 
instance
ªª %
==
ªª& (
null
ªª) -
)
ªª- .
return
ªª/ 5
null
ªª6 :
;
ªª: ;
return
ΩΩ 
TMP_Settings
ΩΩ 
.
ΩΩ  
instance
ΩΩ  (
.
ΩΩ( ) 
m_defaultFontAsset
ΩΩ) ;
;
ΩΩ; <
}
ææ 	
public
≈≈ 
static
≈≈ 
TMP_SpriteAsset
≈≈ %
GetSpriteAsset
≈≈& 4
(
≈≈4 5
)
≈≈5 6
{
∆∆ 	
if
«« 
(
«« 
TMP_Settings
«« 
.
«« 
instance
«« %
==
««& (
null
««) -
)
««- .
return
««/ 5
null
««6 :
;
««: ;
return
…… 
TMP_Settings
…… 
.
……  
instance
……  (
.
……( )"
m_defaultSpriteAsset
……) =
;
……= >
}
   	
public
—— 
static
—— 
TMP_StyleSheet
—— $
GetStyleSheet
——% 2
(
——2 3
)
——3 4
{
““ 	
if
”” 
(
”” 
TMP_Settings
”” 
.
”” 
instance
”” %
==
””& (
null
””) -
)
””- .
return
””/ 5
null
””6 :
;
””: ;
return
’’ 
TMP_Settings
’’ 
.
’’  
instance
’’  (
.
’’( )!
m_defaultStyleSheet
’’) <
;
’’< =
}
÷÷ 	
public
ŸŸ 
static
ŸŸ 
void
ŸŸ #
LoadLinebreakingRules
ŸŸ 0
(
ŸŸ0 1
)
ŸŸ1 2
{
⁄⁄ 	
if
›› 
(
›› 
TMP_Settings
›› 
.
›› 
instance
›› %
==
››& (
null
››) -
)
››- .
return
››/ 5
;
››5 6
if
ﬂﬂ 
(
ﬂﬂ 

s_Instance
ﬂﬂ 
.
ﬂﬂ !
m_linebreakingRules
ﬂﬂ .
==
ﬂﬂ/ 1
null
ﬂﬂ2 6
)
ﬂﬂ6 7

s_Instance
‡‡ 
.
‡‡ !
m_linebreakingRules
‡‡ .
=
‡‡/ 0
new
‡‡1 4
LineBreakingTable
‡‡5 F
(
‡‡F G
)
‡‡G H
;
‡‡H I

s_Instance
‚‚ 
.
‚‚ !
m_linebreakingRules
‚‚ *
.
‚‚* +
leadingCharacters
‚‚+ <
=
‚‚= >
GetCharacters
‚‚? L
(
‚‚L M

s_Instance
‚‚M W
.
‚‚W X!
m_leadingCharacters
‚‚X k
)
‚‚k l
;
‚‚l m

s_Instance
„„ 
.
„„ !
m_linebreakingRules
„„ *
.
„„* +!
followingCharacters
„„+ >
=
„„? @
GetCharacters
„„A N
(
„„N O

s_Instance
„„O Y
.
„„Y Z#
m_followingCharacters
„„Z o
)
„„o p
;
„„p q
}
‰‰ 	
private
ÏÏ 
static
ÏÏ 

Dictionary
ÏÏ !
<
ÏÏ! "
int
ÏÏ" %
,
ÏÏ% &
char
ÏÏ' +
>
ÏÏ+ ,
GetCharacters
ÏÏ- :
(
ÏÏ: ;
	TextAsset
ÏÏ; D
file
ÏÏE I
)
ÏÏI J
{
ÌÌ 	

Dictionary
ÓÓ 
<
ÓÓ 
int
ÓÓ 
,
ÓÓ 
char
ÓÓ  
>
ÓÓ  !
dict
ÓÓ" &
=
ÓÓ' (
new
ÓÓ) ,

Dictionary
ÓÓ- 7
<
ÓÓ7 8
int
ÓÓ8 ;
,
ÓÓ; <
char
ÓÓ= A
>
ÓÓA B
(
ÓÓB C
)
ÓÓC D
;
ÓÓD E
string
ÔÔ 
text
ÔÔ 
=
ÔÔ 
file
ÔÔ 
.
ÔÔ 
text
ÔÔ #
;
ÔÔ# $
for
ÒÒ 
(
ÒÒ 
int
ÒÒ 
i
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ 
<
ÒÒ 
text
ÒÒ  $
.
ÒÒ$ %
Length
ÒÒ% +
;
ÒÒ+ ,
i
ÒÒ- .
++
ÒÒ. 0
)
ÒÒ0 1
{
ÚÚ 
char
ÛÛ 
c
ÛÛ 
=
ÛÛ 
text
ÛÛ 
[
ÛÛ 
i
ÛÛ 
]
ÛÛ  
;
ÛÛ  !
if
ıı 
(
ıı 
dict
ıı 
.
ıı 
ContainsKey
ıı $
(
ıı$ %
(
ıı% &
int
ıı& )
)
ıı) *
c
ıı* +
)
ıı+ ,
==
ıı- /
false
ıı0 5
)
ıı5 6
{
ˆˆ 
dict
˜˜ 
.
˜˜ 
Add
˜˜ 
(
˜˜ 
(
˜˜ 
int
˜˜ !
)
˜˜! "
c
˜˜" #
,
˜˜# $
c
˜˜% &
)
˜˜& '
;
˜˜' (
}
˘˘ 
}
¸¸ 
return
˛˛ 
dict
˛˛ 
;
˛˛ 
}
ˇˇ 	
public
ÇÇ 
class
ÇÇ 
LineBreakingTable
ÇÇ &
{
ÉÉ 	
public
ÑÑ 

Dictionary
ÑÑ 
<
ÑÑ 
int
ÑÑ !
,
ÑÑ! "
char
ÑÑ# '
>
ÑÑ' (
leadingCharacters
ÑÑ) :
;
ÑÑ: ;
public
ÖÖ 

Dictionary
ÖÖ 
<
ÖÖ 
int
ÖÖ !
,
ÖÖ! "
char
ÖÖ# '
>
ÖÖ' (!
followingCharacters
ÖÖ) <
;
ÖÖ< =
}
ÜÜ 	
}
áá 
}àà ®S
gC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMPro_EventManager.cs
	namespace 	
TMPro
 
{ 
public 

enum 0
$Compute_DistanceTransform_EventTypes 4
{5 6

Processing7 A
,A B
	CompletedC L
}M N
;N O
public

 

static

 
class

 
TMPro_EventManager

 *
{ 
public 
static 
readonly 

FastAction )
<) *
object* 0
,0 1 
Compute_DT_EventArgs2 F
>F G
COMPUTE_DT_EVENTH X
=Y Z
new[ ^

FastAction_ i
<i j
objectj p
,p q!
Compute_DT_EventArgs	r Ü
>
Ü á
(
á à
)
à â
;
â ä
public 
static 
readonly 

FastAction )
<) *
bool* .
,. /
Material0 8
>8 9#
MATERIAL_PROPERTY_EVENT: Q
=R S
newT W

FastActionX b
<b c
boolc g
,g h
Materiali q
>q r
(r s
)s t
;t u
public 
static 
readonly 

FastAction )
<) *
bool* .
,. /
Object0 6
>6 7
FONT_PROPERTY_EVENT8 K
=L M
newN Q

FastActionR \
<\ ]
bool] a
,a b
Objectc i
>i j
(j k
)k l
;l m
public 
static 
readonly 

FastAction )
<) *
bool* .
,. /
Object0 6
>6 7'
SPRITE_ASSET_PROPERTY_EVENT8 S
=T U
newV Y

FastActionZ d
<d e
boole i
,i j
Objectk q
>q r
(r s
)s t
;t u
public 
static 
readonly 

FastAction )
<) *
bool* .
,. /
Object0 6
>6 7&
TEXTMESHPRO_PROPERTY_EVENT8 R
=S T
newU X

FastActionY c
<c d
boold h
,h i
Objectj p
>p q
(q r
)r s
;s t
public 
static 
readonly 

FastAction )
<) *

GameObject* 4
,4 5
Material6 >
,> ?
Material@ H
>H I(
DRAG_AND_DROP_MATERIAL_EVENTJ f
=g h
newi l

FastActionm w
<w x

GameObject	x Ç
,
Ç É
Material
Ñ å
,
å ç
Material
é ñ
>
ñ ó
(
ó ò
)
ò ô
;
ô ö
public 
static 
readonly 

FastAction )
<) *
bool* .
>. /%
TEXT_STYLE_PROPERTY_EVENT0 I
=J K
newL O

FastActionP Z
<Z [
bool[ _
>_ `
(` a
)a b
;b c
public 
static 
readonly 

FastAction )
<) *
Object* 0
>0 1)
COLOR_GRADIENT_PROPERTY_EVENT2 O
=P Q
newR U

FastActionV `
<` a
Objecta g
>g h
(h i
)i j
;j k
public 
static 
readonly 

FastAction )'
TMP_SETTINGS_PROPERTY_EVENT* E
=F G
newH K

FastActionL V
(V W
)W X
;X Y
public 
static 
readonly 

FastAction )
RESOURCE_LOAD_EVENT* =
=> ?
new@ C

FastActionD N
(N O
)O P
;P Q
public!! 
static!! 
readonly!! 

FastAction!! )
<!!) *
bool!!* .
,!!. /
Object!!0 6
>!!6 7+
TEXTMESHPRO_UGUI_PROPERTY_EVENT!!8 W
=!!X Y
new!!Z ]

FastAction!!^ h
<!!h i
bool!!i m
,!!m n
Object!!o u
>!!u v
(!!v w
)!!w x
;!!x y
public## 
static## 
readonly## 

FastAction## )
<##) *
Object##* 0
>##0 1
TEXT_CHANGED_EVENT##2 D
=##E F
new##G J

FastAction##K U
<##U V
Object##V \
>##\ ]
(##] ^
)##^ _
;##_ `
public'' 
static'' 
void'' (
ON_MATERIAL_PROPERTY_CHANGED'' 7
(''7 8
bool''8 <
	isChanged''= F
,''F G
Material''H P
mat''Q T
)''T U
{(( 	#
MATERIAL_PROPERTY_EVENT)) #
.))# $
Call))$ (
())( )
	isChanged))) 2
,))2 3
mat))4 7
)))7 8
;))8 9
}** 	
public,, 
static,, 
void,, $
ON_FONT_PROPERTY_CHANGED,, 3
(,,3 4
bool,,4 8
	isChanged,,9 B
,,,B C
Object,,D J
obj,,K N
),,N O
{-- 	
FONT_PROPERTY_EVENT.. 
...  
Call..  $
(..$ %
	isChanged..% .
,... /
obj..0 3
)..3 4
;..4 5
}// 	
public11 
static11 
void11 ,
 ON_SPRITE_ASSET_PROPERTY_CHANGED11 ;
(11; <
bool11< @
	isChanged11A J
,11J K
Object11L R
obj11S V
)11V W
{22 	'
SPRITE_ASSET_PROPERTY_EVENT33 '
.33' (
Call33( ,
(33, -
	isChanged33- 6
,336 7
obj338 ;
)33; <
;33< =
}44 	
public66 
static66 
void66 +
ON_TEXTMESHPRO_PROPERTY_CHANGED66 :
(66: ;
bool66; ?
	isChanged66@ I
,66I J
Object66K Q
obj66R U
)66U V
{77 	&
TEXTMESHPRO_PROPERTY_EVENT88 &
.88& '
Call88' +
(88+ ,
	isChanged88, 5
,885 6
obj887 :
)88: ;
;88; <
}99 	
public;; 
static;; 
void;; -
!ON_DRAG_AND_DROP_MATERIAL_CHANGED;; <
(;;< =

GameObject;;= G
sender;;H N
,;;N O
Material;;P X
currentMaterial;;Y h
,;;h i
Material;;j r
newMaterial;;s ~
);;~ 
{<< 	(
DRAG_AND_DROP_MATERIAL_EVENT== (
.==( )
Call==) -
(==- .
sender==. 4
,==4 5
currentMaterial==6 E
,==E F
newMaterial==G R
)==R S
;==S T
}>> 	
public@@ 
static@@ 
void@@ *
ON_TEXT_STYLE_PROPERTY_CHANGED@@ 9
(@@9 :
bool@@: >
	isChanged@@? H
)@@H I
{AA 	%
TEXT_STYLE_PROPERTY_EVENTBB %
.BB% &
CallBB& *
(BB* +
	isChangedBB+ 4
)BB4 5
;BB5 6
}CC 	
publicEE 
staticEE 
voidEE .
"ON_COLOR_GRADIENT_PROPERTY_CHANGEDEE =
(EE= >
ObjectEE> D
objEEE H
)EEH I
{FF 	)
COLOR_GRADIENT_PROPERTY_EVENTGG )
.GG) *
CallGG* .
(GG. /
objGG/ 2
)GG2 3
;GG3 4
}HH 	
publicKK 
staticKK 
voidKK 
ON_TEXT_CHANGEDKK *
(KK* +
ObjectKK+ 1
objKK2 5
)KK5 6
{LL 	
TEXT_CHANGED_EVENTMM 
.MM 
CallMM #
(MM# $
objMM$ '
)MM' (
;MM( )
}NN 	
publicPP 
staticPP 
voidPP #
ON_TMP_SETTINGS_CHANGEDPP 2
(PP2 3
)PP3 4
{QQ 	'
TMP_SETTINGS_PROPERTY_EVENTRR '
.RR' (
CallRR( ,
(RR, -
)RR- .
;RR. /
}SS 	
publicUU 
staticUU 
voidUU 
ON_RESOURCES_LOADEDUU .
(UU. /
)UU/ 0
{VV 	
RESOURCE_LOAD_EVENTWW 
.WW  
CallWW  $
(WW$ %
)WW% &
;WW& '
}XX 	
publicZZ 
staticZZ 
voidZZ 0
$ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGEDZZ ?
(ZZ? @
boolZZ@ D
	isChangedZZE N
,ZZN O
ObjectZZP V
objZZW Z
)ZZZ [
{[[ 	+
TEXTMESHPRO_UGUI_PROPERTY_EVENT\\ +
.\\+ ,
Call\\, 0
(\\0 1
	isChanged\\1 :
,\\: ;
obj\\< ?
)\\? @
;\\@ A
}]] 	
publicjj 
staticjj 
voidjj 
ON_COMPUTE_DT_EVENTjj .
(jj. /
objectjj/ 5
Senderjj6 <
,jj< = 
Compute_DT_EventArgsjj> R
ejjS T
)jjT U
{kk 	
COMPUTE_DT_EVENTll 
.ll 
Callll !
(ll! "
Senderll" (
,ll( )
ell* +
)ll+ ,
;ll, -
}mm 	
}nn 
publicqq 

classqq  
Compute_DT_EventArgsqq %
{rr 
publicss 0
$Compute_DistanceTransform_EventTypesss 3
	EventTypess4 =
;ss= >
publictt 
floattt 
ProgressPercentagett '
;tt' (
publicuu 
Coloruu 
[uu 
]uu 
Colorsuu 
;uu 
publicxx  
Compute_DT_EventArgsxx #
(xx# $0
$Compute_DistanceTransform_EventTypesxx$ H
typexxI M
,xxM N
floatxxO T
progressxxU ]
)xx] ^
{yy 	
	EventTypezz 
=zz 
typezz 
;zz 
ProgressPercentage{{ 
={{  
progress{{! )
;{{) *
}|| 	
public~~  
Compute_DT_EventArgs~~ #
(~~# $0
$Compute_DistanceTransform_EventTypes~~$ H
type~~I M
,~~M N
Color~~O T
[~~T U
]~~U V
colors~~W ]
)~~] ^
{ 	
	EventType
ÄÄ 
=
ÄÄ 
type
ÄÄ 
;
ÄÄ 
Colors
ÅÅ 
=
ÅÅ 
colors
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
}
ÑÑ 
}ÜÜ ’·
bC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_SubMeshUI.cs
	namespace

 	
TMPro


 
{ 
[ 
ExecuteAlways 
] 
[ 
RequireComponent 
( 
typeof 
( 
CanvasRenderer +
)+ ,
), -
]- .
public 

class 
TMP_SubMeshUI 
:  
MaskableGraphic! 0
{ 
public 
TMP_FontAsset 
	fontAsset &
{ 	
get 
{ 
return 
m_fontAsset $
;$ %
}& '
set 
{ 
m_fontAsset 
= 
value  %
;% &
}' (
} 	
[ 	
SerializeField	 
] 
private 
TMP_FontAsset 
m_fontAsset )
;) *
public 
TMP_SpriteAsset 
spriteAsset *
{   	
get!! 
{!! 
return!! 
m_spriteAsset!! &
;!!& '
}!!( )
set"" 
{"" 
m_spriteAsset"" 
=""  !
value""" '
;""' (
}"") *
}## 	
[$$ 	
SerializeField$$	 
]$$ 
private%% 
TMP_SpriteAsset%% 
m_spriteAsset%%  -
;%%- .
public++ 
override++ 
Texture++ 
mainTexture++  +
{,, 	
get-- 
{.. 
if// 
(// 
this// 
.// 
sharedMaterial// '
!=//( *
null//+ /
)/// 0
return00 
this00 
.00  
sharedMaterial00  .
.00. /

GetTexture00/ 9
(009 :
ShaderUtilities00: I
.00I J

ID_MainTex00J T
)00T U
;00U V
return22 
null22 
;22 
}33 
}44 	
public:: 
override:: 
Material::  
material::! )
{;; 	
get== 
{== 
return== 
GetMaterial== $
(==$ %
m_sharedMaterial==% 5
)==5 6
;==6 7
}==8 9
set@@ 
{AA 
ifBB 
(BB 
m_sharedMaterialBB $
!=BB% '
nullBB( ,
&&BB- /
m_sharedMaterialBB0 @
.BB@ A
GetInstanceIDBBA N
(BBN O
)BBO P
==BBQ S
valueBBT Y
.BBY Z
GetInstanceIDBBZ g
(BBg h
)BBh i
)BBi j
returnCC 
;CC 
m_sharedMaterialEE  
=EE! "

m_materialEE# -
=EE. /
valueEE0 5
;EE5 6
	m_paddingGG 
=GG !
GetPaddingForMaterialGG 1
(GG1 2
)GG2 3
;GG3 4
SetVerticesDirtyII  
(II  !
)II! "
;II" #
SetMaterialDirtyJJ  
(JJ  !
)JJ! "
;JJ" #
}KK 
}LL 	
[MM 	
SerializeFieldMM	 
]MM 
privateNN 
MaterialNN 

m_materialNN #
;NN# $
publicTT 
MaterialTT 
sharedMaterialTT &
{UU 	
getVV 
{VV 
returnVV 
m_sharedMaterialVV )
;VV) *
}VV+ ,
setWW 
{WW 
SetSharedMaterialWW #
(WW# $
valueWW$ )
)WW) *
;WW* +
}WW, -
}XX 	
[YY 	
SerializeFieldYY	 
]YY 
privateZZ 
MaterialZZ 
m_sharedMaterialZZ )
;ZZ) *
public`` 
Material`` 
fallbackMaterial`` (
{aa 	
getbb 
{bb 
returnbb 
m_fallbackMaterialbb +
;bb+ ,
}bb- .
setcc 
{dd 
ifee 
(ee 
m_fallbackMaterialee &
==ee' )
valueee* /
)ee/ 0
returnee1 7
;ee7 8
ifgg 
(gg 
m_fallbackMaterialgg &
!=gg' )
nullgg* .
&&gg/ 1
m_fallbackMaterialgg2 D
!=ggE G
valueggH M
)ggM N
TMP_MaterialManagerhh '
.hh' (#
ReleaseFallbackMaterialhh( ?
(hh? @
m_fallbackMaterialhh@ R
)hhR S
;hhS T
m_fallbackMaterialjj "
=jj# $
valuejj% *
;jj* +
TMP_MaterialManagerkk #
.kk# $(
AddFallbackMaterialReferencekk$ @
(kk@ A
m_fallbackMaterialkkA S
)kkS T
;kkT U
SetSharedMaterialmm !
(mm! "
m_fallbackMaterialmm" 4
)mm4 5
;mm5 6
}nn 
}oo 	
privatepp 
Materialpp 
m_fallbackMaterialpp +
;pp+ ,
publicvv 
Materialvv "
fallbackSourceMaterialvv .
{ww 	
getxx 
{xx 
returnxx $
m_fallbackSourceMaterialxx 1
;xx1 2
}xx3 4
setyy 
{yy $
m_fallbackSourceMaterialyy *
=yy+ ,
valueyy- 2
;yy2 3
}yy4 5
}zz 	
private{{ 
Material{{ $
m_fallbackSourceMaterial{{ 1
;{{1 2
public
ÅÅ 
override
ÅÅ 
Material
ÅÅ  "
materialForRendering
ÅÅ! 5
{
ÇÇ 	
get
ÉÉ 
{
ÑÑ 
return
ÖÖ !
TMP_MaterialManager
ÖÖ *
.
ÖÖ* +%
GetMaterialForRendering
ÖÖ+ B
(
ÖÖB C
this
ÖÖC G
,
ÖÖG H
m_sharedMaterial
ÖÖI Y
)
ÖÖY Z
;
ÖÖZ [
}
ÜÜ 
}
áá 	
public
çç 
bool
çç 
isDefaultMaterial
çç %
{
éé 	
get
èè 
{
èè 
return
èè !
m_isDefaultMaterial
èè ,
;
èè, -
}
èè. /
set
êê 
{
êê !
m_isDefaultMaterial
êê %
=
êê& '
value
êê( -
;
êê- .
}
êê/ 0
}
ëë 	
[
íí 	
SerializeField
íí	 
]
íí 
private
ìì 
bool
ìì !
m_isDefaultMaterial
ìì (
;
ìì( )
public
ôô 
float
ôô 
padding
ôô 
{
öö 	
get
õõ 
{
õõ 
return
õõ 
	m_padding
õõ "
;
õõ" #
}
õõ$ %
set
úú 
{
úú 
	m_padding
úú 
=
úú 
value
úú #
;
úú# $
}
úú% &
}
ùù 	
[
ûû 	
SerializeField
ûû	 
]
ûû 
private
üü 
float
üü 
	m_padding
üü 
;
üü  
public
•• 
Mesh
•• 
mesh
•• 
{
¶¶ 	
get
ßß 
{
®® 
if
©© 
(
©© 
m_mesh
©© 
==
©© 
null
©© "
)
©©" #
{
™™ 
m_mesh
´´ 
=
´´ 
new
´´  
Mesh
´´! %
(
´´% &
)
´´& '
;
´´' (
m_mesh
¨¨ 
.
¨¨ 
	hideFlags
¨¨ $
=
¨¨% &
	HideFlags
¨¨' 0
.
¨¨0 1
HideAndDontSave
¨¨1 @
;
¨¨@ A
}
≠≠ 
return
ØØ 
m_mesh
ØØ 
;
ØØ 
}
∞∞ 
set
±± 
{
±± 
m_mesh
±± 
=
±± 
value
±±  
;
±±  !
}
±±" #
}
≤≤ 	
private
≥≥ 
Mesh
≥≥ 
m_mesh
≥≥ 
;
≥≥ 
public
ππ 
TMP_Text
ππ 
textComponent
ππ %
{
∫∫ 	
get
ªª 
{
ºº 
if
ΩΩ 
(
ΩΩ 
m_TextComponent
ΩΩ #
==
ΩΩ$ &
null
ΩΩ' +
)
ΩΩ+ ,
m_TextComponent
ææ #
=
ææ$ %"
GetComponentInParent
ææ& :
<
ææ: ;
TextMeshProUGUI
ææ; J
>
ææJ K
(
ææK L
)
ææL M
;
ææM N
return
¿¿ 
m_TextComponent
¿¿ &
;
¿¿& '
}
¡¡ 
}
¬¬ 	
[
√√ 	
SerializeField
√√	 
]
√√ 
private
ƒƒ 
TextMeshProUGUI
ƒƒ 
m_TextComponent
ƒƒ  /
;
ƒƒ/ 0
[
«« 	
System
««	 
.
«« 
NonSerialized
«« 
]
«« 
private
»» 
bool
»» %
m_isRegisteredForEvents
»» ,
;
»», -
private
…… 
bool
…… 
m_materialDirty
…… $
;
……$ %
[
   	
SerializeField
  	 
]
   
private
ÀÀ 
int
ÀÀ &
m_materialReferenceIndex
ÀÀ ,
;
ÀÀ, -
public
’’ 
static
’’ 
TMP_SubMeshUI
’’ #
AddSubTextObject
’’$ 4
(
’’4 5
TextMeshProUGUI
’’5 D
textComponent
’’E R
,
’’R S
MaterialReference
’’T e
materialReference
’’f w
)
’’w x
{
÷÷ 	

GameObject
◊◊ 
go
◊◊ 
=
◊◊ 
new
◊◊ 

GameObject
◊◊  *
(
◊◊* +
$str
◊◊+ ?
+
◊◊@ A
materialReference
◊◊B S
.
◊◊S T
material
◊◊T \
.
◊◊\ ]
name
◊◊] a
+
◊◊b c
$str
◊◊d g
,
◊◊g h
typeof
◊◊i o
(
◊◊o p
RectTransform
◊◊p }
)
◊◊} ~
)
◊◊~ 
;◊◊ Ä
go
ÿÿ 
.
ÿÿ 
	hideFlags
ÿÿ 
=
ÿÿ 
	HideFlags
ÿÿ $
.
ÿÿ$ %
DontSave
ÿÿ% -
;
ÿÿ- .
go
⁄⁄ 
.
⁄⁄ 
	transform
⁄⁄ 
.
⁄⁄ 
	SetParent
⁄⁄ "
(
⁄⁄" #
textComponent
⁄⁄# 0
.
⁄⁄0 1
	transform
⁄⁄1 :
,
⁄⁄: ;
false
⁄⁄< A
)
⁄⁄A B
;
⁄⁄B C
go
€€ 
.
€€ 
	transform
€€ 
.
€€ 
SetAsFirstSibling
€€ *
(
€€* +
)
€€+ ,
;
€€, -
go
‹‹ 
.
‹‹ 
layer
‹‹ 
=
‹‹ 
textComponent
‹‹ $
.
‹‹$ %

gameObject
‹‹% /
.
‹‹/ 0
layer
‹‹0 5
;
‹‹5 6
RectTransform
ﬁﬁ 
rectTransform
ﬁﬁ '
=
ﬁﬁ( )
go
ﬁﬁ* ,
.
ﬁﬁ, -
GetComponent
ﬁﬁ- 9
<
ﬁﬁ9 :
RectTransform
ﬁﬁ: G
>
ﬁﬁG H
(
ﬁﬁH I
)
ﬁﬁI J
;
ﬁﬁJ K
rectTransform
ﬂﬂ 
.
ﬂﬂ 
	anchorMin
ﬂﬂ #
=
ﬂﬂ$ %
Vector2
ﬂﬂ& -
.
ﬂﬂ- .
zero
ﬂﬂ. 2
;
ﬂﬂ2 3
rectTransform
‡‡ 
.
‡‡ 
	anchorMax
‡‡ #
=
‡‡$ %
Vector2
‡‡& -
.
‡‡- .
one
‡‡. 1
;
‡‡1 2
rectTransform
·· 
.
·· 
	sizeDelta
·· #
=
··$ %
Vector2
··& -
.
··- .
zero
··. 2
;
··2 3
rectTransform
‚‚ 
.
‚‚ 
pivot
‚‚ 
=
‚‚  !
textComponent
‚‚" /
.
‚‚/ 0
rectTransform
‚‚0 =
.
‚‚= >
pivot
‚‚> C
;
‚‚C D
LayoutElement
‰‰ 
layoutElement
‰‰ '
=
‰‰( )
go
‰‰* ,
.
‰‰, -
AddComponent
‰‰- 9
<
‰‰9 :
LayoutElement
‰‰: G
>
‰‰G H
(
‰‰H I
)
‰‰I J
;
‰‰J K
layoutElement
ÂÂ 
.
ÂÂ 
ignoreLayout
ÂÂ &
=
ÂÂ' (
true
ÂÂ) -
;
ÂÂ- .
TMP_SubMeshUI
ÁÁ 
subMesh
ÁÁ !
=
ÁÁ" #
go
ÁÁ$ &
.
ÁÁ& '
AddComponent
ÁÁ' 3
<
ÁÁ3 4
TMP_SubMeshUI
ÁÁ4 A
>
ÁÁA B
(
ÁÁB C
)
ÁÁC D
;
ÁÁD E
subMesh
ÍÍ 
.
ÍÍ 
m_TextComponent
ÍÍ #
=
ÍÍ$ %
textComponent
ÍÍ& 3
;
ÍÍ3 4
subMesh
ÏÏ 
.
ÏÏ &
m_materialReferenceIndex
ÏÏ ,
=
ÏÏ- .
materialReference
ÏÏ/ @
.
ÏÏ@ A
index
ÏÏA F
;
ÏÏF G
subMesh
ÌÌ 
.
ÌÌ 
m_fontAsset
ÌÌ 
=
ÌÌ  !
materialReference
ÌÌ" 3
.
ÌÌ3 4
	fontAsset
ÌÌ4 =
;
ÌÌ= >
subMesh
ÓÓ 
.
ÓÓ 
m_spriteAsset
ÓÓ !
=
ÓÓ" #
materialReference
ÓÓ$ 5
.
ÓÓ5 6
spriteAsset
ÓÓ6 A
;
ÓÓA B
subMesh
ÔÔ 
.
ÔÔ !
m_isDefaultMaterial
ÔÔ '
=
ÔÔ( )
materialReference
ÔÔ* ;
.
ÔÔ; <
isDefaultMaterial
ÔÔ< M
;
ÔÔM N
subMesh
 
.
 
SetSharedMaterial
 %
(
% &
materialReference
& 7
.
7 8
material
8 @
)
@ A
;
A B
return
ÚÚ 
subMesh
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
	protected
˙˙ 
override
˙˙ 
void
˙˙ 
OnEnable
˙˙  (
(
˙˙( )
)
˙˙) *
{
˚˚ 	
if
ˇˇ 
(
ˇˇ 
!
ˇˇ %
m_isRegisteredForEvents
ˇˇ (
)
ˇˇ( )
{
ÄÄ  
TMPro_EventManager
ÉÉ "
.
ÉÉ" #%
MATERIAL_PROPERTY_EVENT
ÉÉ# :
.
ÉÉ: ;
Add
ÉÉ; >
(
ÉÉ> ?*
ON_MATERIAL_PROPERTY_CHANGED
ÉÉ? [
)
ÉÉ[ \
;
ÉÉ\ ] 
TMPro_EventManager
ÑÑ "
.
ÑÑ" #!
FONT_PROPERTY_EVENT
ÑÑ# 6
.
ÑÑ6 7
Add
ÑÑ7 :
(
ÑÑ: ;&
ON_FONT_PROPERTY_CHANGED
ÑÑ; S
)
ÑÑS T
;
ÑÑT U 
TMPro_EventManager
ÜÜ "
.
ÜÜ" #*
DRAG_AND_DROP_MATERIAL_EVENT
ÜÜ# ?
.
ÜÜ? @
Add
ÜÜ@ C
(
ÜÜC D'
ON_DRAG_AND_DROP_MATERIAL
ÜÜD ]
)
ÜÜ] ^
;
ÜÜ^ _ 
TMPro_EventManager
àà "
.
àà" #)
SPRITE_ASSET_PROPERTY_EVENT
àà# >
.
àà> ?
Add
àà? B
(
ààB C.
 ON_SPRITE_ASSET_PROPERTY_CHANGED
ààC c
)
ààc d
;
ààd e%
m_isRegisteredForEvents
åå '
=
åå( )
true
åå* .
;
åå. /
}
çç 
if
êê 
(
êê 
	hideFlags
êê 
!=
êê 
	HideFlags
êê &
.
êê& '
DontSave
êê' /
)
êê/ 0
	hideFlags
ëë 
=
ëë 
	HideFlags
ëë %
.
ëë% &
DontSave
ëë& .
;
ëë. /(
m_ShouldRecalculateStencil
ìì &
=
ìì' (
true
ìì) -
;
ìì- .!
RecalculateClipping
îî 
(
îî  
)
îî  !
;
îî! " 
RecalculateMasking
ïï 
(
ïï 
)
ïï  
;
ïï  !
}
òò 	
	protected
õõ 
override
õõ 
void
õõ 
	OnDisable
õõ  )
(
õõ) *
)
õõ* +
{
úú 	
base
ûû 
.
ûû 
	OnDisable
ûû 
(
ûû 
)
ûû 
;
ûû 
if
¶¶ 
(
¶¶  
m_fallbackMaterial
¶¶ "
!=
¶¶# %
null
¶¶& *
)
¶¶* +
{
ßß !
TMP_MaterialManager
®® #
.
®®# $%
ReleaseFallbackMaterial
®®$ ;
(
®®; < 
m_fallbackMaterial
®®< N
)
®®N O
;
®®O P 
m_fallbackMaterial
©© "
=
©©# $
null
©©% )
;
©©) *
}
™™ 
}
´´ 	
	protected
ÆÆ 
override
ÆÆ 
void
ÆÆ 
	OnDestroy
ÆÆ  )
(
ÆÆ) *
)
ÆÆ* +
{
ØØ 	
if
≥≥ 
(
≥≥ 
m_mesh
≥≥ 
!=
≥≥ 
null
≥≥ 
)
≥≥ 
DestroyImmediate
≥≥  0
(
≥≥0 1
m_mesh
≥≥1 7
)
≥≥7 8
;
≥≥8 9
if
µµ 
(
µµ 
m_MaskMaterial
µµ 
!=
µµ !
null
µµ" &
)
µµ& '!
TMP_MaterialManager
∂∂ #
.
∂∂# $$
ReleaseStencilMaterial
∂∂$ :
(
∂∂: ;
m_MaskMaterial
∂∂; I
)
∂∂I J
;
∂∂J K
if
∏∏ 
(
∏∏  
m_fallbackMaterial
∏∏ "
!=
∏∏# %
null
∏∏& *
)
∏∏* +
{
ππ !
TMP_MaterialManager
∫∫ #
.
∫∫# $%
ReleaseFallbackMaterial
∫∫$ ;
(
∫∫; < 
m_fallbackMaterial
∫∫< N
)
∫∫N O
;
∫∫O P 
m_fallbackMaterial
ªª "
=
ªª# $
null
ªª% )
;
ªª) *
}
ºº  
TMPro_EventManager
¿¿ 
.
¿¿ %
MATERIAL_PROPERTY_EVENT
¿¿ 6
.
¿¿6 7
Remove
¿¿7 =
(
¿¿= >*
ON_MATERIAL_PROPERTY_CHANGED
¿¿> Z
)
¿¿Z [
;
¿¿[ \ 
TMPro_EventManager
¡¡ 
.
¡¡ !
FONT_PROPERTY_EVENT
¡¡ 2
.
¡¡2 3
Remove
¡¡3 9
(
¡¡9 :&
ON_FONT_PROPERTY_CHANGED
¡¡: R
)
¡¡R S
;
¡¡S T 
TMPro_EventManager
√√ 
.
√√ *
DRAG_AND_DROP_MATERIAL_EVENT
√√ ;
.
√√; <
Remove
√√< B
(
√√B C'
ON_DRAG_AND_DROP_MATERIAL
√√C \
)
√√\ ]
;
√√] ^ 
TMPro_EventManager
≈≈ 
.
≈≈ )
SPRITE_ASSET_PROPERTY_EVENT
≈≈ :
.
≈≈: ;
Remove
≈≈; A
(
≈≈A B.
 ON_SPRITE_ASSET_PROPERTY_CHANGED
≈≈B b
)
≈≈b c
;
≈≈c d%
m_isRegisteredForEvents
…… #
=
……$ %
false
……& +
;
……+ ,!
RecalculateClipping
ÀÀ 
(
ÀÀ  
)
ÀÀ  !
;
ÀÀ! "
if
ŒŒ 
(
ŒŒ 
m_TextComponent
ŒŒ 
!=
ŒŒ  "
null
ŒŒ# '
)
ŒŒ' (
{
œœ 
m_TextComponent
–– 
.
––  #
havePropertiesChanged
––  5
=
––6 7
true
––8 <
;
––< =
m_TextComponent
—— 
.
——  
SetAllDirty
——  +
(
——+ ,
)
——, -
;
——- .
}
““ 
}
”” 	
void
ÿÿ *
ON_MATERIAL_PROPERTY_CHANGED
ÿÿ )
(
ÿÿ) *
bool
ÿÿ* .
	isChanged
ÿÿ/ 8
,
ÿÿ8 9
Material
ÿÿ: B
mat
ÿÿC F
)
ÿÿF G
{
ŸŸ 	
if
€€ 
(
€€ 
m_sharedMaterial
€€  
==
€€! #
null
€€$ (
)
€€( )
return
‹‹ 
;
‹‹ 
int
ﬁﬁ 
targetMaterialID
ﬁﬁ  
=
ﬁﬁ! "
mat
ﬁﬁ# &
.
ﬁﬁ& '
GetInstanceID
ﬁﬁ' 4
(
ﬁﬁ4 5
)
ﬁﬁ5 6
;
ﬁﬁ6 7
int
ﬂﬂ 
sharedMaterialID
ﬂﬂ  
=
ﬂﬂ! "
m_sharedMaterial
ﬂﬂ# 3
.
ﬂﬂ3 4
GetInstanceID
ﬂﬂ4 A
(
ﬂﬂA B
)
ﬂﬂB C
;
ﬂﬂC D
int
‡‡ 
maskingMaterialID
‡‡ !
=
‡‡" #
m_MaskMaterial
‡‡$ 2
==
‡‡3 5
null
‡‡6 :
?
‡‡; <
$num
‡‡= >
:
‡‡? @
m_MaskMaterial
‡‡A O
.
‡‡O P
GetInstanceID
‡‡P ]
(
‡‡] ^
)
‡‡^ _
;
‡‡_ `
int
·· &
fallbackSourceMaterialID
·· (
=
··) *&
m_fallbackSourceMaterial
··+ C
==
··D F
null
··G K
?
··L M
$num
··N O
:
··P Q&
m_fallbackSourceMaterial
··R j
.
··j k
GetInstanceID
··k x
(
··x y
)
··y z
;
··z {
bool
‰‰ !
hasCullModeProperty
‰‰ $
=
‰‰% &
m_sharedMaterial
‰‰' 7
.
‰‰7 8
HasProperty
‰‰8 C
(
‰‰C D
ShaderUtilities
‰‰D S
.
‰‰S T 
ShaderTag_CullMode
‰‰T f
)
‰‰f g
;
‰‰g h
float
ÂÂ 
cullMode
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
if
ÁÁ 
(
ÁÁ !
hasCullModeProperty
ÁÁ #
)
ÁÁ# $
{
ËË 
cullMode
ÈÈ 
=
ÈÈ 
textComponent
ÈÈ (
.
ÈÈ( ) 
fontSharedMaterial
ÈÈ) ;
.
ÈÈ; <
GetFloat
ÈÈ< D
(
ÈÈD E
ShaderUtilities
ÈÈE T
.
ÈÈT U 
ShaderTag_CullMode
ÈÈU g
)
ÈÈg h
;
ÈÈh i
m_sharedMaterial
ÍÍ  
.
ÍÍ  !
SetFloat
ÍÍ! )
(
ÍÍ) *
ShaderUtilities
ÍÍ* 9
.
ÍÍ9 : 
ShaderTag_CullMode
ÍÍ: L
,
ÍÍL M
cullMode
ÍÍN V
)
ÍÍV W
;
ÍÍW X
}
ÎÎ 
if
ÓÓ 
(
ÓÓ  
m_fallbackMaterial
ÓÓ "
!=
ÓÓ# %
null
ÓÓ& *
&&
ÓÓ+ -&
fallbackSourceMaterialID
ÓÓ. F
==
ÓÓG I
targetMaterialID
ÓÓJ Z
&&
ÓÓ[ ]
TMP_Settings
ÓÓ^ j
.
ÓÓj k!
matchMaterialPreset
ÓÓk ~
)
ÓÓ~ 
{
ÔÔ !
TMP_MaterialManager
 #
.
# $*
CopyMaterialPresetProperties
$ @
(
@ A
mat
A D
,
D E 
m_fallbackMaterial
F X
)
X Y
;
Y Z 
m_fallbackMaterial
ÛÛ "
.
ÛÛ" #
SetFloat
ÛÛ# +
(
ÛÛ+ ,
ShaderUtilities
ÛÛ, ;
.
ÛÛ; < 
ShaderTag_CullMode
ÛÛ< N
,
ÛÛN O
cullMode
ÛÛP X
)
ÛÛX Y
;
ÛÛY Z
}
ÙÙ 
if
˜˜ 
(
˜˜ 
m_MaskMaterial
˜˜ 
!=
˜˜ !
null
˜˜" &
)
˜˜& '
{
¯¯ 
UnityEditor
˘˘ 
.
˘˘ 
Undo
˘˘  
.
˘˘  !
RecordObject
˘˘! -
(
˘˘- .
m_MaskMaterial
˘˘. <
,
˘˘< =
$str
˘˘> Y
)
˘˘Y Z
;
˘˘Z [
UnityEditor
˙˙ 
.
˙˙ 
Undo
˙˙  
.
˙˙  !
RecordObject
˙˙! -
(
˙˙- .
m_sharedMaterial
˙˙. >
,
˙˙> ?
$str
˙˙@ [
)
˙˙[ \
;
˙˙\ ]
if
¸¸ 
(
¸¸ 
targetMaterialID
¸¸ $
==
¸¸% '
sharedMaterialID
¸¸( 8
)
¸¸8 9
{
˝˝ 
float
ˇˇ 
	stencilID
ˇˇ #
=
ˇˇ$ %
m_MaskMaterial
ˇˇ& 4
.
ˇˇ4 5
GetFloat
ˇˇ5 =
(
ˇˇ= >
ShaderUtilities
ˇˇ> M
.
ˇˇM N
ID_StencilID
ˇˇN Z
)
ˇˇZ [
;
ˇˇ[ \
float
ÄÄ 
stencilComp
ÄÄ %
=
ÄÄ& '
m_MaskMaterial
ÄÄ( 6
.
ÄÄ6 7
GetFloat
ÄÄ7 ?
(
ÄÄ? @
ShaderUtilities
ÄÄ@ O
.
ÄÄO P
ID_StencilComp
ÄÄP ^
)
ÄÄ^ _
;
ÄÄ_ `
m_MaskMaterial
ÅÅ "
.
ÅÅ" #(
CopyPropertiesFromMaterial
ÅÅ# =
(
ÅÅ= >
mat
ÅÅ> A
)
ÅÅA B
;
ÅÅB C
m_MaskMaterial
ÇÇ "
.
ÇÇ" #
shaderKeywords
ÇÇ# 1
=
ÇÇ2 3
mat
ÇÇ4 7
.
ÇÇ7 8
shaderKeywords
ÇÇ8 F
;
ÇÇF G
m_MaskMaterial
ÑÑ "
.
ÑÑ" #
SetFloat
ÑÑ# +
(
ÑÑ+ ,
ShaderUtilities
ÑÑ, ;
.
ÑÑ; <
ID_StencilID
ÑÑ< H
,
ÑÑH I
	stencilID
ÑÑJ S
)
ÑÑS T
;
ÑÑT U
m_MaskMaterial
ÖÖ "
.
ÖÖ" #
SetFloat
ÖÖ# +
(
ÖÖ+ ,
ShaderUtilities
ÖÖ, ;
.
ÖÖ; <
ID_StencilComp
ÖÖ< J
,
ÖÖJ K
stencilComp
ÖÖL W
)
ÖÖW X
;
ÖÖX Y
}
ÜÜ 
else
áá 
if
áá 
(
áá 
targetMaterialID
áá )
==
áá* ,
maskingMaterialID
áá- >
)
áá> ?
{
àà #
GetPaddingForMaterial
ää )
(
ää) *
mat
ää* -
)
ää- .
;
ää. /
m_sharedMaterial
åå $
.
åå$ %(
CopyPropertiesFromMaterial
åå% ?
(
åå? @
mat
åå@ C
)
ååC D
;
ååD E
m_sharedMaterial
çç $
.
çç$ %
shaderKeywords
çç% 3
=
çç4 5
mat
çç6 9
.
çç9 :
shaderKeywords
çç: H
;
ççH I
m_sharedMaterial
éé $
.
éé$ %
SetFloat
éé% -
(
éé- .
ShaderUtilities
éé. =
.
éé= >
ID_StencilID
éé> J
,
ééJ K
$num
ééL M
)
ééM N
;
ééN O
m_sharedMaterial
èè $
.
èè$ %
SetFloat
èè% -
(
èè- .
ShaderUtilities
èè. =
.
èè= >
ID_StencilComp
èè> L
,
èèL M
$num
èèN O
)
èèO P
;
èèP Q
}
êê 
else
ëë 
if
ëë 
(
ëë &
fallbackSourceMaterialID
ëë 1
==
ëë2 4
targetMaterialID
ëë5 E
)
ëëE F
{
íí 
float
ìì 
	stencilID
ìì #
=
ìì$ %
m_MaskMaterial
ìì& 4
.
ìì4 5
GetFloat
ìì5 =
(
ìì= >
ShaderUtilities
ìì> M
.
ììM N
ID_StencilID
ììN Z
)
ììZ [
;
ìì[ \
float
îî 
stencilComp
îî %
=
îî& '
m_MaskMaterial
îî( 6
.
îî6 7
GetFloat
îî7 ?
(
îî? @
ShaderUtilities
îî@ O
.
îîO P
ID_StencilComp
îîP ^
)
îî^ _
;
îî_ `
m_MaskMaterial
ïï "
.
ïï" #(
CopyPropertiesFromMaterial
ïï# =
(
ïï= > 
m_fallbackMaterial
ïï> P
)
ïïP Q
;
ïïQ R
m_MaskMaterial
ññ "
.
ññ" #
shaderKeywords
ññ# 1
=
ññ2 3 
m_fallbackMaterial
ññ4 F
.
ññF G
shaderKeywords
ññG U
;
ññU V
m_MaskMaterial
òò "
.
òò" #
SetFloat
òò# +
(
òò+ ,
ShaderUtilities
òò, ;
.
òò; <
ID_StencilID
òò< H
,
òòH I
	stencilID
òòJ S
)
òòS T
;
òòT U
m_MaskMaterial
ôô "
.
ôô" #
SetFloat
ôô# +
(
ôô+ ,
ShaderUtilities
ôô, ;
.
ôô; <
ID_StencilComp
ôô< J
,
ôôJ K
stencilComp
ôôL W
)
ôôW X
;
ôôX Y
}
öö 
if
ùù 
(
ùù !
hasCullModeProperty
ùù '
)
ùù' (
m_MaskMaterial
ûû "
.
ûû" #
SetFloat
ûû# +
(
ûû+ ,
ShaderUtilities
ûû, ;
.
ûû; < 
ShaderTag_CullMode
ûû< N
,
ûûN O
cullMode
ûûP X
)
ûûX Y
;
ûûY Z
}
üü 
	m_padding
°° 
=
°° #
GetPaddingForMaterial
°° -
(
°°- .
)
°°. /
;
°°/ 0
SetVerticesDirty
££ 
(
££ 
)
££ 
;
££ (
m_ShouldRecalculateStencil
§§ &
=
§§' (
true
§§) -
;
§§- .!
RecalculateClipping
•• 
(
••  
)
••  !
;
••! " 
RecalculateMasking
¶¶ 
(
¶¶ 
)
¶¶  
;
¶¶  !
}
ßß 	
void
´´ '
ON_DRAG_AND_DROP_MATERIAL
´´ &
(
´´& '

GameObject
´´' 1
obj
´´2 5
,
´´5 6
Material
´´7 ?
currentMaterial
´´@ O
,
´´O P
Material
´´Q Y
newMaterial
´´Z e
)
´´e f
{
¨¨ 	
if
ØØ 
(
ØØ 
obj
ØØ 
==
ØØ 

gameObject
ØØ !
||
ØØ" $
UnityEditor
ØØ% 0
.
ØØ0 1
PrefabUtility
ØØ1 >
.
ØØ> ?.
 GetCorrespondingObjectFromSource
ØØ? _
(
ØØ_ `

gameObject
ØØ` j
)
ØØj k
==
ØØl n
obj
ØØo r
)
ØØr s
{
≥≥ 
if
¥¥ 
(
¥¥ 
!
¥¥ !
m_isDefaultMaterial
¥¥ (
)
¥¥( )
return
¥¥* 0
;
¥¥0 1
UnityEditor
ππ 
.
ππ 
Undo
ππ  
.
ππ  !
RecordObject
ππ! -
(
ππ- .
this
ππ. 2
,
ππ2 3
$str
ππ4 I
)
ππI J
;
ππJ K
UnityEditor
∫∫ 
.
∫∫ 
Undo
∫∫  
.
∫∫  !
RecordObject
∫∫! -
(
∫∫- .
canvasRenderer
∫∫. <
,
∫∫< =
$str
∫∫> S
)
∫∫S T
;
∫∫T U
SetSharedMaterial
ºº !
(
ºº! "
newMaterial
ºº" -
)
ºº- .
;
ºº. /
m_TextComponent
ΩΩ 
.
ΩΩ  #
havePropertiesChanged
ΩΩ  5
=
ΩΩ6 7
true
ΩΩ8 <
;
ΩΩ< =
}
ææ 
}
øø 	
void
¬¬ .
 ON_SPRITE_ASSET_PROPERTY_CHANGED
¬¬ -
(
¬¬- .
bool
¬¬. 2
	isChanged
¬¬3 <
,
¬¬< =
UnityEngine
¬¬> I
.
¬¬I J
Object
¬¬J P
obj
¬¬Q T
)
¬¬T U
{
√√ 	
if
∆∆ 
(
∆∆ 
m_TextComponent
∆∆ 
!=
∆∆  "
null
∆∆# '
)
∆∆' (
{
«« 
m_TextComponent
»» 
.
»»  #
havePropertiesChanged
»»  5
=
»»6 7
true
»»8 <
;
»»< =
}
   
}
ÕÕ 	
void
–– &
ON_FONT_PROPERTY_CHANGED
–– %
(
––% &
bool
––& *
	isChanged
––+ 4
,
––4 5
Object
––6 <
	fontAsset
––= F
)
––F G
{
—— 	
if
““ 
(
““ 
m_fontAsset
““ 
!=
““ 
null
““ #
&&
““$ &
	fontAsset
““' 0
.
““0 1
GetInstanceID
““1 >
(
““> ?
)
““? @
==
““A C
m_fontAsset
““D O
.
““O P
GetInstanceID
““P ]
(
““] ^
)
““^ _
)
““_ `
{
”” 
if
’’ 
(
’’  
m_fallbackMaterial
’’ &
!=
’’' )
null
’’* .
)
’’. /
{
÷÷ 
if
◊◊ 
(
◊◊ 
TMP_Settings
◊◊ $
.
◊◊$ %!
matchMaterialPreset
◊◊% 8
)
◊◊8 9
{
ÿÿ !
TMP_MaterialManager
ŸŸ +
.
ŸŸ+ ,%
ReleaseFallbackMaterial
ŸŸ, C
(
ŸŸC D 
m_fallbackMaterial
ŸŸD V
)
ŸŸV W
;
ŸŸW X!
TMP_MaterialManager
⁄⁄ +
.
⁄⁄+ ,&
CleanupFallbackMaterials
⁄⁄, D
(
⁄⁄D E
)
⁄⁄E F
;
⁄⁄F G
}
€€ 
}
‹‹ 
}
›› 
}
ﬁﬁ 	
void
„„ %
ON_TMP_SETTINGS_CHANGED
„„ $
(
„„$ %
)
„„% &
{
‰‰ 	
}
ËË 	
	protected
ÓÓ 
override
ÓÓ 
void
ÓÓ &
OnTransformParentChanged
ÓÓ  8
(
ÓÓ8 9
)
ÓÓ9 :
{
ÔÔ 	
if
 
(
 
!
 
this
 
.
 
IsActive
 
(
 
)
  
)
  !
return
ÒÒ 
;
ÒÒ (
m_ShouldRecalculateStencil
ÛÛ &
=
ÛÛ' (
true
ÛÛ) -
;
ÛÛ- .!
RecalculateClipping
ÙÙ 
(
ÙÙ  
)
ÙÙ  !
;
ÙÙ! " 
RecalculateMasking
ıı 
(
ıı 
)
ıı  
;
ıı  !
}
ˆˆ 	
public
˛˛ 
override
˛˛ 
Material
˛˛  !
GetModifiedMaterial
˛˛! 4
(
˛˛4 5
Material
˛˛5 =
baseMaterial
˛˛> J
)
˛˛J K
{
ˇˇ 	
Material
ÄÄ 
mat
ÄÄ 
=
ÄÄ 
baseMaterial
ÄÄ '
;
ÄÄ' (
if
ÇÇ 
(
ÇÇ (
m_ShouldRecalculateStencil
ÇÇ *
)
ÇÇ* +
{
ÉÉ 
var
ÑÑ 

rootCanvas
ÑÑ 
=
ÑÑ  
MaskUtilities
ÑÑ! .
.
ÑÑ. /(
FindRootSortOverrideCanvas
ÑÑ/ I
(
ÑÑI J
	transform
ÑÑJ S
)
ÑÑS T
;
ÑÑT U
m_StencilValue
ÖÖ 
=
ÖÖ  
maskable
ÖÖ! )
?
ÖÖ* +
MaskUtilities
ÖÖ, 9
.
ÖÖ9 :
GetStencilDepth
ÖÖ: I
(
ÖÖI J
	transform
ÖÖJ S
,
ÖÖS T

rootCanvas
ÖÖU _
)
ÖÖ_ `
:
ÖÖa b
$num
ÖÖc d
;
ÖÖd e(
m_ShouldRecalculateStencil
ÜÜ *
=
ÜÜ+ ,
false
ÜÜ- 2
;
ÜÜ2 3
}
áá 
if
ââ 
(
ââ 
m_StencilValue
ââ 
>
ââ  
$num
ââ! "
)
ââ" #
{
ää 
var
ãã 
maskMat
ãã 
=
ãã 
StencilMaterial
ãã -
.
ãã- .
Add
ãã. 1
(
ãã1 2
mat
ãã2 5
,
ãã5 6
(
ãã7 8
$num
ãã8 9
<<
ãã: <
m_StencilValue
ãã= K
)
ããK L
-
ããM N
$num
ããO P
,
ããP Q
	StencilOp
ããR [
.
ãã[ \
Keep
ãã\ `
,
ãã` a
CompareFunction
ããb q
.
ããq r
Equal
ããr w
,
ããw x
ColorWriteMaskããy á
.ããá à
Allããà ã
,ããã å
(ããç é
$numããé è
<<ããê í
m_StencilValueããì °
)ãã° ¢
-ãã£ §
$numãã• ¶
,ãã¶ ß
$numãã® ©
)ãã© ™
;ãã™ ´
StencilMaterial
åå 
.
åå  
Remove
åå  &
(
åå& '
m_MaskMaterial
åå' 5
)
åå5 6
;
åå6 7
m_MaskMaterial
çç 
=
çç  
maskMat
çç! (
;
çç( )
mat
éé 
=
éé 
m_MaskMaterial
éé $
;
éé$ %
}
èè 
return
ëë 
mat
ëë 
;
ëë 
}
íí 	
public
ôô 
float
ôô #
GetPaddingForMaterial
ôô *
(
ôô* +
)
ôô+ ,
{
öö 	
float
õõ 
padding
õõ 
=
õõ 
ShaderUtilities
õõ +
.
õõ+ ,

GetPadding
õõ, 6
(
õõ6 7
m_sharedMaterial
õõ7 G
,
õõG H
m_TextComponent
õõI X
.
õõX Y
extraPadding
õõY e
,
õõe f
m_TextComponent
õõg v
.
õõv w
isUsingBoldõõw Ç
)õõÇ É
;õõÉ Ñ
return
ùù 
padding
ùù 
;
ùù 
}
ûû 	
public
•• 
float
•• #
GetPaddingForMaterial
•• *
(
••* +
Material
••+ 3
mat
••4 7
)
••7 8
{
¶¶ 	
float
ßß 
padding
ßß 
=
ßß 
ShaderUtilities
ßß +
.
ßß+ ,

GetPadding
ßß, 6
(
ßß6 7
mat
ßß7 :
,
ßß: ;
m_TextComponent
ßß< K
.
ßßK L
extraPadding
ßßL X
,
ßßX Y
m_TextComponent
ßßZ i
.
ßßi j
isUsingBold
ßßj u
)
ßßu v
;
ßßv w
return
©© 
padding
©© 
;
©© 
}
™™ 	
public
≤≤ 
void
≤≤ 
UpdateMeshPadding
≤≤ %
(
≤≤% &
bool
≤≤& *
isExtraPadding
≤≤+ 9
,
≤≤9 :
bool
≤≤; ?
isUsingBold
≤≤@ K
)
≤≤K L
{
≥≥ 	
	m_padding
¥¥ 
=
¥¥ 
ShaderUtilities
¥¥ '
.
¥¥' (

GetPadding
¥¥( 2
(
¥¥2 3
m_sharedMaterial
¥¥3 C
,
¥¥C D
isExtraPadding
¥¥E S
,
¥¥S T
isUsingBold
¥¥U `
)
¥¥` a
;
¥¥a b
}
µµ 	
public
ªª 
override
ªª 
void
ªª 
SetAllDirty
ªª (
(
ªª( )
)
ªª) *
{
ºº 	
}
¿¿ 	
public
∆∆ 
override
∆∆ 
void
∆∆ 
SetVerticesDirty
∆∆ -
(
∆∆- .
)
∆∆. /
{
«« 	
if
»» 
(
»» 
!
»» 
this
»» 
.
»» 
IsActive
»» 
(
»» 
)
»»  
)
»»  !
return
…… 
;
…… 
if
ÃÃ 
(
ÃÃ 
m_TextComponent
ÃÃ 
!=
ÃÃ  "
null
ÃÃ# '
)
ÃÃ' (
{
ÕÕ 
m_TextComponent
ŒŒ 
.
ŒŒ  #
havePropertiesChanged
ŒŒ  5
=
ŒŒ6 7
true
ŒŒ8 <
;
ŒŒ< =
m_TextComponent
œœ 
.
œœ  
SetVerticesDirty
œœ  0
(
œœ0 1
)
œœ1 2
;
œœ2 3
}
–– 
}
—— 	
public
◊◊ 
override
◊◊ 
void
◊◊ 
SetLayoutDirty
◊◊ +
(
◊◊+ ,
)
◊◊, -
{
ÿÿ 	
}
⁄⁄ 	
public
‡‡ 
override
‡‡ 
void
‡‡ 
SetMaterialDirty
‡‡ -
(
‡‡- .
)
‡‡. /
{
·· 	
m_materialDirty
ÁÁ 
=
ÁÁ 
true
ÁÁ "
;
ÁÁ" #
UpdateMaterial
ÈÈ 
(
ÈÈ 
)
ÈÈ 
;
ÈÈ 
if
ÎÎ 
(
ÎÎ '
m_OnDirtyMaterialCallback
ÎÎ )
!=
ÎÎ* ,
null
ÎÎ- 1
)
ÎÎ1 2'
m_OnDirtyMaterialCallback
ÏÏ )
(
ÏÏ) *
)
ÏÏ* +
;
ÏÏ+ ,
}
ÚÚ 	
public
¯¯ 
void
¯¯ 
SetPivotDirty
¯¯ !
(
¯¯! "
)
¯¯" #
{
˘˘ 	
if
˙˙ 
(
˙˙ 
!
˙˙ 
this
˙˙ 
.
˙˙ 
IsActive
˙˙ 
(
˙˙ 
)
˙˙  
)
˙˙  !
return
˚˚ 
;
˚˚ 
this
˝˝ 
.
˝˝ 
rectTransform
˝˝ 
.
˝˝ 
pivot
˝˝ $
=
˝˝% &
m_TextComponent
˝˝' 6
.
˝˝6 7
rectTransform
˝˝7 D
.
˝˝D E
pivot
˝˝E J
;
˝˝J K
}
˛˛ 	
	Transform
ÄÄ $
GetRootCanvasTransform
ÄÄ (
(
ÄÄ( )
)
ÄÄ) *
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ #
m_RootCanvasTransform
ÇÇ %
==
ÇÇ& (
null
ÇÇ) -
)
ÇÇ- .#
m_RootCanvasTransform
ÉÉ %
=
ÉÉ& '
m_TextComponent
ÉÉ( 7
.
ÉÉ7 8
canvas
ÉÉ8 >
.
ÉÉ> ?

rootCanvas
ÉÉ? I
.
ÉÉI J
	transform
ÉÉJ S
;
ÉÉS T
return
ÖÖ #
m_RootCanvasTransform
ÖÖ (
;
ÖÖ( )
}
ÜÜ 	
private
áá 
	Transform
áá #
m_RootCanvasTransform
áá /
;
áá/ 0
public
éé 
override
éé 
void
éé 
Cull
éé !
(
éé! "
Rect
éé" &
clipRect
éé' /
,
éé/ 0
bool
éé1 5
	validRect
éé6 ?
)
éé? @
{
èè 	
}
ëë 	
	protected
óó 
override
óó 
void
óó 
UpdateGeometry
óó  .
(
óó. /
)
óó/ 0
{
òò 	
}
õõ 	
public
¢¢ 
override
¢¢ 
void
¢¢ 
Rebuild
¢¢ $
(
¢¢$ %
CanvasUpdate
¢¢% 1
update
¢¢2 8
)
¢¢8 9
{
££ 	
if
§§ 
(
§§ 
update
§§ 
==
§§ 
CanvasUpdate
§§ &
.
§§& '
	PreRender
§§' 0
)
§§0 1
{
•• 
if
¶¶ 
(
¶¶ 
!
¶¶ 
m_materialDirty
¶¶ $
)
¶¶$ %
return
¶¶& ,
;
¶¶, -
UpdateMaterial
®® 
(
®® 
)
®®  
;
®®  !
m_materialDirty
©© 
=
©©  !
false
©©" '
;
©©' (
}
™™ 
}
´´ 	
public
±± 
void
±± 
RefreshMaterial
±± #
(
±±# $
)
±±$ %
{
≤≤ 	
UpdateMaterial
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
}
¥¥ 	
	protected
∫∫ 
override
∫∫ 
void
∫∫ 
UpdateMaterial
∫∫  .
(
∫∫. /
)
∫∫/ 0
{
ªª 	
if
ææ 
(
ææ 
m_sharedMaterial
ææ  
==
ææ! #
null
ææ$ (
)
ææ( )
return
øø 
;
øø 
if
ƒƒ 
(
ƒƒ 
m_sharedMaterial
ƒƒ  
.
ƒƒ  !
HasProperty
ƒƒ! ,
(
ƒƒ, -
ShaderUtilities
ƒƒ- <
.
ƒƒ< = 
ShaderTag_CullMode
ƒƒ= O
)
ƒƒO P
)
ƒƒP Q
{
≈≈ 
float
∆∆ 
cullMode
∆∆ 
=
∆∆  
textComponent
∆∆! .
.
∆∆. / 
fontSharedMaterial
∆∆/ A
.
∆∆A B
GetFloat
∆∆B J
(
∆∆J K
ShaderUtilities
∆∆K Z
.
∆∆Z [ 
ShaderTag_CullMode
∆∆[ m
)
∆∆m n
;
∆∆n o
m_sharedMaterial
««  
.
««  !
SetFloat
««! )
(
««) *
ShaderUtilities
««* 9
.
««9 : 
ShaderTag_CullMode
««: L
,
««L M
cullMode
««N V
)
««V W
;
««W X
}
»» 
canvasRenderer
   
.
   
materialCount
   (
=
  ) *
$num
  + ,
;
  , -
canvasRenderer
ÀÀ 
.
ÀÀ 
SetMaterial
ÀÀ &
(
ÀÀ& '"
materialForRendering
ÀÀ' ;
,
ÀÀ; <
$num
ÀÀ= >
)
ÀÀ> ?
;
ÀÀ? @
if
œœ 
(
œœ 
m_sharedMaterial
œœ  
!=
œœ! #
null
œœ$ (
&&
œœ) +

gameObject
œœ, 6
.
œœ6 7
name
œœ7 ;
!=
œœ< >
$str
œœ? P
+
œœQ R
m_sharedMaterial
œœS c
.
œœc d
name
œœd h
+
œœi j
$str
œœk n
)
œœn o

gameObject
–– 
.
–– 
name
–– 
=
––  !
$str
––" 3
+
––4 5
m_sharedMaterial
––6 F
.
––F G
name
––G K
+
––L M
$str
––N Q
;
––Q R
}
““ 	
public
ŸŸ 
override
ŸŸ 
void
ŸŸ !
RecalculateClipping
ŸŸ 0
(
ŸŸ0 1
)
ŸŸ1 2
{
⁄⁄ 	
base
‹‹ 
.
‹‹ !
RecalculateClipping
‹‹ $
(
‹‹$ %
)
‹‹% &
;
‹‹& '
}
›› 	
Material
ÒÒ 
GetMaterial
ÒÒ 
(
ÒÒ 
)
ÒÒ 
{
ÚÚ 	
return
ˇˇ 
m_sharedMaterial
ˇˇ #
;
ˇˇ# $
}
ÄÄ 	
Material
ÑÑ 
GetMaterial
ÑÑ 
(
ÑÑ 
Material
ÑÑ %
mat
ÑÑ& )
)
ÑÑ) *
{
ÖÖ 	
if
åå 
(
åå 

m_material
åå 
==
åå 
null
åå "
||
åå# %

m_material
åå& 0
.
åå0 1
GetInstanceID
åå1 >
(
åå> ?
)
åå? @
!=
ååA C
mat
ååD G
.
ååG H
GetInstanceID
ååH U
(
ååU V
)
ååV W
)
ååW X

m_material
çç 
=
çç $
CreateMaterialInstance
çç 3
(
çç3 4
mat
çç4 7
)
çç7 8
;
çç8 9
m_sharedMaterial
èè 
=
èè 

m_material
èè )
;
èè) *
	m_padding
íí 
=
íí #
GetPaddingForMaterial
íí -
(
íí- .
)
íí. /
;
íí/ 0
SetVerticesDirty
îî 
(
îî 
)
îî 
;
îî 
SetMaterialDirty
ïï 
(
ïï 
)
ïï 
;
ïï 
return
óó 
m_sharedMaterial
óó #
;
óó# $
}
òò 	
Material
†† $
CreateMaterialInstance
†† '
(
††' (
Material
††( 0
source
††1 7
)
††7 8
{
°° 	
Material
¢¢ 
mat
¢¢ 
=
¢¢ 
new
¢¢ 
Material
¢¢ '
(
¢¢' (
source
¢¢( .
)
¢¢. /
;
¢¢/ 0
mat
££ 
.
££ 
shaderKeywords
££ 
=
££  
source
££! '
.
££' (
shaderKeywords
££( 6
;
££6 7
mat
§§ 
.
§§ 
name
§§ 
+=
§§ 
$str
§§ %
;
§§% &
return
¶¶ 
mat
¶¶ 
;
¶¶ 
}
ßß 	
Material
ÆÆ 
GetSharedMaterial
ÆÆ "
(
ÆÆ" #
)
ÆÆ# $
{
ØØ 	
return
≥≥ 
canvasRenderer
≥≥ !
.
≥≥! "
GetMaterial
≥≥" -
(
≥≥- .
)
≥≥. /
;
≥≥/ 0
}
¥¥ 	
void
ªª 
SetSharedMaterial
ªª 
(
ªª 
Material
ªª '
mat
ªª( +
)
ªª+ ,
{
ºº 	
m_sharedMaterial
¿¿ 
=
¿¿ 
mat
¿¿ "
;
¿¿" #

m_Material
¡¡ 
=
¡¡ 
m_sharedMaterial
¡¡ )
;
¡¡) *
	m_padding
»» 
=
»» #
GetPaddingForMaterial
»» -
(
»»- .
)
»». /
;
»»/ 0
SetMaterialDirty
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
}
—— 	
}
““ 
}”” ãå
fC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_UpdateManager.cs
	namespace 	
TMPro
 
{ 
public

 

class

 
TMP_UpdateManager

 "
{ 
private 
static 
TMP_UpdateManager (

s_Instance) 3
;3 4
private 
readonly 
HashSet  
<  !
int! $
>$ %
m_LayoutQueueLookup& 9
=: ;
new< ?
HashSet@ G
<G H
intH K
>K L
(L M
)M N
;N O
private 
readonly 
List 
< 
TMP_Text &
>& ' 
m_LayoutRebuildQueue( <
== >
new? B
ListC G
<G H
TMP_TextH P
>P Q
(Q R
)R S
;S T
private 
readonly 
HashSet  
<  !
int! $
>$ % 
m_GraphicQueueLookup& :
=; <
new= @
HashSetA H
<H I
intI L
>L M
(M N
)N O
;O P
private 
readonly 
List 
< 
TMP_Text &
>& '!
m_GraphicRebuildQueue( =
=> ?
new@ C
ListD H
<H I
TMP_TextI Q
>Q R
(R S
)S T
;T U
private 
readonly 
HashSet  
<  !
int! $
>$ %"
m_InternalUpdateLookup& <
== >
new? B
HashSetC J
<J K
intK N
>N O
(O P
)P Q
;Q R
private 
readonly 
List 
< 
TMP_Text &
>& '!
m_InternalUpdateQueue( =
=> ?
new@ C
ListD H
<H I
TMP_TextI Q
>Q R
(R S
)S T
;T U
private 
readonly 
HashSet  
<  !
int! $
>$ %!
m_CullingUpdateLookup& ;
=< =
new> A
HashSetB I
<I J
intJ M
>M N
(N O
)O P
;P Q
private 
readonly 
List 
< 
TMP_Text &
>& ' 
m_CullingUpdateQueue( <
== >
new? B
ListC G
<G H
TMP_TextH P
>P Q
(Q R
)R S
;S T
private 
static 
ProfilerMarker %/
#k_RegisterTextObjectForUpdateMarker& I
=J K
newL O
ProfilerMarkerP ^
(^ _
$str	_ Ä
)
Ä Å
;
Å Ç
private 
static 
ProfilerMarker %8
,k_RegisterTextElementForGraphicRebuildMarker& R
=S T
newU X
ProfilerMarkerY g
(g h
$str	h í
)
í ì
;
ì î
private 
static 
ProfilerMarker %7
+k_RegisterTextElementForCullingUpdateMarker& Q
=R S
newT W
ProfilerMarkerX f
(f g
$str	g ê
)
ê ë
;
ë í
private 
static 
ProfilerMarker %1
%k_UnregisterTextObjectForUpdateMarker& K
=L M
newN Q
ProfilerMarkerR `
(` a
$str	a Ñ
)
Ñ Ö
;
Ö Ü
private 
static 
ProfilerMarker %:
.k_UnregisterTextElementForGraphicRebuildMarker& T
=U V
newW Z
ProfilerMarker[ i
(i j
$str	j ñ
)
ñ ó
;
ó ò
static$$ 
TMP_UpdateManager$$  
instance$$! )
{%% 	
get&& 
{'' 
if(( 
((( 

s_Instance(( 
==(( !
null((" &
)((& '

s_Instance)) 
=))  
new))! $
TMP_UpdateManager))% 6
())6 7
)))7 8
;))8 9
return++ 

s_Instance++ !
;++! "
},, 
}-- 	
TMP_UpdateManager22 
(22 
)22 
{33 	
Canvas44 
.44 
willRenderCanvases44 %
+=44& (

DoRebuilds44) 3
;443 4
}55 	
internal;; 
static;; 
void;; '
RegisterTextObjectForUpdate;; 8
(;;8 9
TMP_Text;;9 A

textObject;;B L
);;L M
{<< 	/
#k_RegisterTextObjectForUpdateMarker== /
.==/ 0
Begin==0 5
(==5 6
)==6 7
;==7 8
instance?? 
.?? /
#InternalRegisterTextObjectForUpdate?? 8
(??8 9

textObject??9 C
)??C D
;??D E/
#k_RegisterTextObjectForUpdateMarkerAA /
.AA/ 0
EndAA0 3
(AA3 4
)AA4 5
;AA5 6
}BB 	
privateDD 
voidDD /
#InternalRegisterTextObjectForUpdateDD 8
(DD8 9
TMP_TextDD9 A

textObjectDDB L
)DDL M
{EE 	
intFF 
idFF 
=FF 

textObjectFF 
.FF  
GetInstanceIDFF  -
(FF- .
)FF. /
;FF/ 0
ifHH 
(HH "
m_InternalUpdateLookupHH &
.HH& '
ContainsHH' /
(HH/ 0
idHH0 2
)HH2 3
)HH3 4
returnII 
;II "
m_InternalUpdateLookupKK "
.KK" #
AddKK# &
(KK& '
idKK' )
)KK) *
;KK* +!
m_InternalUpdateQueueLL !
.LL! "
AddLL" %
(LL% &

textObjectLL& 0
)LL0 1
;LL1 2
}MM 	
publicSS 
staticSS 
voidSS /
#RegisterTextElementForLayoutRebuildSS >
(SS> ?
TMP_TextSS? G
elementSSH O
)SSO P
{TT 	
instanceUU 
.UU 7
+InternalRegisterTextElementForLayoutRebuildUU @
(UU@ A
elementUUA H
)UUH I
;UUI J
}VV 	
privateXX 
voidXX 7
+InternalRegisterTextElementForLayoutRebuildXX @
(XX@ A
TMP_TextXXA I
elementXXJ Q
)XXQ R
{YY 	
intZZ 
idZZ 
=ZZ 
elementZZ 
.ZZ 
GetInstanceIDZZ *
(ZZ* +
)ZZ+ ,
;ZZ, -
if\\ 
(\\ 
m_LayoutQueueLookup\\ #
.\\# $
Contains\\$ ,
(\\, -
id\\- /
)\\/ 0
)\\0 1
return]] 
;]] 
m_LayoutQueueLookup__ 
.__  
Add__  #
(__# $
id__$ &
)__& '
;__' ( 
m_LayoutRebuildQueue``  
.``  !
Add``! $
(``$ %
element``% ,
)``, -
;``- .
}aa 	
publicgg 
staticgg 
voidgg 0
$RegisterTextElementForGraphicRebuildgg ?
(gg? @
TMP_Textgg@ H
elementggI P
)ggP Q
{hh 	8
,k_RegisterTextElementForGraphicRebuildMarkerii 8
.ii8 9
Beginii9 >
(ii> ?
)ii? @
;ii@ A
instancekk 
.kk 8
,InternalRegisterTextElementForGraphicRebuildkk A
(kkA B
elementkkB I
)kkI J
;kkJ K8
,k_RegisterTextElementForGraphicRebuildMarkermm 8
.mm8 9
Endmm9 <
(mm< =
)mm= >
;mm> ?
}nn 	
privatepp 
voidpp 8
,InternalRegisterTextElementForGraphicRebuildpp A
(ppA B
TMP_TextppB J
elementppK R
)ppR S
{qq 	
intrr 
idrr 
=rr 
elementrr 
.rr 
GetInstanceIDrr *
(rr* +
)rr+ ,
;rr, -
iftt 
(tt  
m_GraphicQueueLookuptt $
.tt$ %
Containstt% -
(tt- .
idtt. 0
)tt0 1
)tt1 2
returnuu 
;uu  
m_GraphicQueueLookupww  
.ww  !
Addww! $
(ww$ %
idww% '
)ww' (
;ww( )!
m_GraphicRebuildQueuexx !
.xx! "
Addxx" %
(xx% &
elementxx& -
)xx- .
;xx. /
}yy 	
public{{ 
static{{ 
void{{ /
#RegisterTextElementForCullingUpdate{{ >
({{> ?
TMP_Text{{? G
element{{H O
){{O P
{|| 	7
+k_RegisterTextElementForCullingUpdateMarker}} 7
.}}7 8
Begin}}8 =
(}}= >
)}}> ?
;}}? @
instance 
. 7
+InternalRegisterTextElementForCullingUpdate @
(@ A
elementA H
)H I
;I J9
+k_RegisterTextElementForCullingUpdateMarker
ÅÅ 7
.
ÅÅ7 8
End
ÅÅ8 ;
(
ÅÅ; <
)
ÅÅ< =
;
ÅÅ= >
}
ÇÇ 	
private
ÑÑ 
void
ÑÑ 9
+InternalRegisterTextElementForCullingUpdate
ÑÑ @
(
ÑÑ@ A
TMP_Text
ÑÑA I
element
ÑÑJ Q
)
ÑÑQ R
{
ÖÖ 	
int
ÜÜ 
id
ÜÜ 
=
ÜÜ 
element
ÜÜ 
.
ÜÜ 
GetInstanceID
ÜÜ *
(
ÜÜ* +
)
ÜÜ+ ,
;
ÜÜ, -
if
àà 
(
àà #
m_CullingUpdateLookup
àà %
.
àà% &
Contains
àà& .
(
àà. /
id
àà/ 1
)
àà1 2
)
àà2 3
return
ââ 
;
ââ #
m_CullingUpdateLookup
ãã !
.
ãã! "
Add
ãã" %
(
ãã% &
id
ãã& (
)
ãã( )
;
ãã) *"
m_CullingUpdateQueue
åå  
.
åå  !
Add
åå! $
(
åå$ %
element
åå% ,
)
åå, -
;
åå- .
}
çç 	
void
íí 
OnCameraPreCull
íí 
(
íí 
)
íí 
{
ìì 	

DoRebuilds
îî 
(
îî 
)
îî 
;
îî 
}
ïï 	
void
öö 

DoRebuilds
öö 
(
öö 
)
öö 
{
õõ 	
for
ùù 
(
ùù 
int
ùù 
i
ùù 
=
ùù 
$num
ùù 
;
ùù 
i
ùù 
<
ùù #
m_InternalUpdateQueue
ùù  5
.
ùù5 6
Count
ùù6 ;
;
ùù; <
i
ùù= >
++
ùù> @
)
ùù@ A
{
ûû #
m_InternalUpdateQueue
üü %
[
üü% &
i
üü& '
]
üü' (
.
üü( )
InternalUpdate
üü) 7
(
üü7 8
)
üü8 9
;
üü9 :
}
†† 
for
££ 
(
££ 
int
££ 
i
££ 
=
££ 
$num
££ 
;
££ 
i
££ 
<
££ "
m_LayoutRebuildQueue
££  4
.
££4 5
Count
££5 :
;
££: ;
i
££< =
++
££= ?
)
££? @
{
§§ "
m_LayoutRebuildQueue
•• $
[
••$ %
i
••% &
]
••& '
.
••' (
Rebuild
••( /
(
••/ 0
CanvasUpdate
••0 <
.
••< =
	Prelayout
••= F
)
••F G
;
••G H
}
¶¶ 
if
®® 
(
®® "
m_LayoutRebuildQueue
®® $
.
®®$ %
Count
®®% *
>
®®+ ,
$num
®®- .
)
®®. /
{
©© "
m_LayoutRebuildQueue
™™ $
.
™™$ %
Clear
™™% *
(
™™* +
)
™™+ ,
;
™™, -!
m_LayoutQueueLookup
´´ #
.
´´# $
Clear
´´$ )
(
´´) *
)
´´* +
;
´´+ ,
}
¨¨ 
for
ØØ 
(
ØØ 
int
ØØ 
i
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
i
ØØ 
<
ØØ #
m_GraphicRebuildQueue
ØØ  5
.
ØØ5 6
Count
ØØ6 ;
;
ØØ; <
i
ØØ= >
++
ØØ> @
)
ØØ@ A
{
∞∞ #
m_GraphicRebuildQueue
±± %
[
±±% &
i
±±& '
]
±±' (
.
±±( )
Rebuild
±±) 0
(
±±0 1
CanvasUpdate
±±1 =
.
±±= >
	PreRender
±±> G
)
±±G H
;
±±H I
}
≤≤ 
if
µµ 
(
µµ #
m_GraphicRebuildQueue
µµ %
.
µµ% &
Count
µµ& +
>
µµ, -
$num
µµ. /
)
µµ/ 0
{
∂∂ #
m_GraphicRebuildQueue
∑∑ %
.
∑∑% &
Clear
∑∑& +
(
∑∑+ ,
)
∑∑, -
;
∑∑- ."
m_GraphicQueueLookup
∏∏ $
.
∏∏$ %
Clear
∏∏% *
(
∏∏* +
)
∏∏+ ,
;
∏∏, -
}
ππ 
for
ºº 
(
ºº 
int
ºº 
i
ºº 
=
ºº 
$num
ºº 
;
ºº 
i
ºº 
<
ºº "
m_CullingUpdateQueue
ºº  4
.
ºº4 5
Count
ºº5 :
;
ºº: ;
i
ºº< =
++
ºº= ?
)
ºº? @
{
ΩΩ "
m_CullingUpdateQueue
ææ $
[
ææ$ %
i
ææ% &
]
ææ& '
.
ææ' (
UpdateCulling
ææ( 5
(
ææ5 6
)
ææ6 7
;
ææ7 8
}
øø 
if
¬¬ 
(
¬¬ "
m_CullingUpdateQueue
¬¬ $
.
¬¬$ %
Count
¬¬% *
>
¬¬+ ,
$num
¬¬- .
)
¬¬. /
{
√√ "
m_CullingUpdateQueue
ƒƒ $
.
ƒƒ$ %
Clear
ƒƒ% *
(
ƒƒ* +
)
ƒƒ+ ,
;
ƒƒ, -#
m_CullingUpdateLookup
≈≈ %
.
≈≈% &
Clear
≈≈& +
(
≈≈+ ,
)
≈≈, -
;
≈≈- .
}
∆∆ 
}
«« 	
internal
…… 
static
…… 
void
…… +
UnRegisterTextObjectForUpdate
…… :
(
……: ;
TMP_Text
……; C

textObject
……D N
)
……N O
{
   	3
%k_UnregisterTextObjectForUpdateMarker
ÀÀ 1
.
ÀÀ1 2
Begin
ÀÀ2 7
(
ÀÀ7 8
)
ÀÀ8 9
;
ÀÀ9 :
instance
ÕÕ 
.
ÕÕ 3
%InternalUnRegisterTextObjectForUpdate
ÕÕ :
(
ÕÕ: ;

textObject
ÕÕ; E
)
ÕÕE F
;
ÕÕF G3
%k_UnregisterTextObjectForUpdateMarker
œœ 1
.
œœ1 2
End
œœ2 5
(
œœ5 6
)
œœ6 7
;
œœ7 8
}
–– 	
public
÷÷ 
static
÷÷ 
void
÷÷ -
UnRegisterTextElementForRebuild
÷÷ :
(
÷÷: ;
TMP_Text
÷÷; C
element
÷÷D K
)
÷÷K L
{
◊◊ 	
instance
ÿÿ 
.
ÿÿ <
.InternalUnRegisterTextElementForGraphicRebuild
ÿÿ C
(
ÿÿC D
element
ÿÿD K
)
ÿÿK L
;
ÿÿL M
instance
ŸŸ 
.
ŸŸ ;
-InternalUnRegisterTextElementForLayoutRebuild
ŸŸ B
(
ŸŸB C
element
ŸŸC J
)
ŸŸJ K
;
ŸŸK L
instance
⁄⁄ 
.
⁄⁄ 3
%InternalUnRegisterTextObjectForUpdate
⁄⁄ :
(
⁄⁄: ;
element
⁄⁄; B
)
⁄⁄B C
;
⁄⁄C D
}
€€ 	
private
›› 
void
›› <
.InternalUnRegisterTextElementForGraphicRebuild
›› C
(
››C D
TMP_Text
››D L
element
››M T
)
››T U
{
ﬁﬁ 	<
.k_UnregisterTextElementForGraphicRebuildMarker
ﬂﬂ :
.
ﬂﬂ: ;
Begin
ﬂﬂ; @
(
ﬂﬂ@ A
)
ﬂﬂA B
;
ﬂﬂB C
int
·· 
id
·· 
=
·· 
element
·· 
.
·· 
GetInstanceID
·· *
(
··* +
)
··+ ,
;
··, -#
m_GraphicRebuildQueue
„„ !
.
„„! "
Remove
„„" (
(
„„( )
element
„„) 0
)
„„0 1
;
„„1 2"
m_GraphicQueueLookup
‰‰  
.
‰‰  !
Remove
‰‰! '
(
‰‰' (
id
‰‰( *
)
‰‰* +
;
‰‰+ ,<
.k_UnregisterTextElementForGraphicRebuildMarker
ÊÊ :
.
ÊÊ: ;
End
ÊÊ; >
(
ÊÊ> ?
)
ÊÊ? @
;
ÊÊ@ A
}
ÁÁ 	
private
ÈÈ 
void
ÈÈ ;
-InternalUnRegisterTextElementForLayoutRebuild
ÈÈ B
(
ÈÈB C
TMP_Text
ÈÈC K
element
ÈÈL S
)
ÈÈS T
{
ÍÍ 	
int
ÎÎ 
id
ÎÎ 
=
ÎÎ 
element
ÎÎ 
.
ÎÎ 
GetInstanceID
ÎÎ *
(
ÎÎ* +
)
ÎÎ+ ,
;
ÎÎ, -"
m_LayoutRebuildQueue
ÌÌ  
.
ÌÌ  !
Remove
ÌÌ! '
(
ÌÌ' (
element
ÌÌ( /
)
ÌÌ/ 0
;
ÌÌ0 1!
m_LayoutQueueLookup
ÓÓ 
.
ÓÓ  
Remove
ÓÓ  &
(
ÓÓ& '
id
ÓÓ' )
)
ÓÓ) *
;
ÓÓ* +
}
ÔÔ 	
private
ÒÒ 
void
ÒÒ 3
%InternalUnRegisterTextObjectForUpdate
ÒÒ :
(
ÒÒ: ;
TMP_Text
ÒÒ; C

textObject
ÒÒD N
)
ÒÒN O
{
ÚÚ 	
int
ÛÛ 
id
ÛÛ 
=
ÛÛ 

textObject
ÛÛ 
.
ÛÛ  
GetInstanceID
ÛÛ  -
(
ÛÛ- .
)
ÛÛ. /
;
ÛÛ/ 0#
m_InternalUpdateQueue
ıı !
.
ıı! "
Remove
ıı" (
(
ıı( )

textObject
ıı) 3
)
ıı3 4
;
ıı4 5$
m_InternalUpdateLookup
ˆˆ "
.
ˆˆ" #
Remove
ˆˆ# )
(
ˆˆ) *
id
ˆˆ* ,
)
ˆˆ, -
;
ˆˆ- .
}
˜˜ 	
}
¯¯ 
}˘˘ û
bC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_Character.cs
	namespace 	
TMPro
 
{ 
[		 
Serializable		 
]		 
public

 

class

 
TMP_Character

 
:

  
TMP_TextElement

! 0
{ 
public 
TMP_Character 
( 
) 
{ 	
m_ElementType 
= 
TextElementType +
.+ ,
	Character, 5
;5 6
this 
. 
scale 
= 
$num 
; 
} 	
public 
TMP_Character 
( 
uint !
unicode" )
,) *
Glyph+ 0
glyph1 6
)6 7
{ 	
m_ElementType 
= 
TextElementType +
.+ ,
	Character, 5
;5 6
this 
. 
unicode 
= 
unicode "
;" #
this 
. 
	textAsset 
= 
null !
;! "
this   
.   
glyph   
=   
glyph   
;   
this!! 
.!! 

glyphIndex!! 
=!! 
glyph!! #
.!!# $
index!!$ )
;!!) *
this"" 
."" 
scale"" 
="" 
$num"" 
;"" 
}## 	
public++ 
TMP_Character++ 
(++ 
uint++ !
unicode++" )
,++) *
TMP_FontAsset+++ 8
	fontAsset++9 B
,++B C
Glyph++D I
glyph++J O
)++O P
{,, 	
m_ElementType-- 
=-- 
TextElementType-- +
.--+ ,
	Character--, 5
;--5 6
this// 
.// 
unicode// 
=// 
unicode// "
;//" #
this00 
.00 
	textAsset00 
=00 
	fontAsset00 &
;00& '
this11 
.11 
glyph11 
=11 
glyph11 
;11 
this22 
.22 

glyphIndex22 
=22 
glyph22 #
.22# $
index22$ )
;22) *
this33 
.33 
scale33 
=33 
$num33 
;33 
}44 	
internal;; 
TMP_Character;; 
(;; 
uint;; #
unicode;;$ +
,;;+ ,
uint;;- 1

glyphIndex;;2 <
);;< =
{<< 	
m_ElementType== 
=== 
TextElementType== +
.==+ ,
	Character==, 5
;==5 6
this?? 
.?? 
unicode?? 
=?? 
unicode?? "
;??" #
this@@ 
.@@ 
	textAsset@@ 
=@@ 
null@@ !
;@@! "
thisAA 
.AA 
glyphAA 
=AA 
nullAA 
;AA 
thisBB 
.BB 

glyphIndexBB 
=BB 

glyphIndexBB (
;BB( )
thisCC 
.CC 
scaleCC 
=CC 
$numCC 
;CC 
}DD 	
}EE 
}FF È∆
dC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_SpriteAsset.cs
	namespace 	
TMPro
 
{ 
[		 &
ExcludeFromPresetAttribute		 
]		  
public

 

class

 
TMP_SpriteAsset

  
:

! "
	TMP_Asset

# ,
{ 
internal 

Dictionary 
< 
int 
,  
int! $
>$ %
m_NameLookup& 2
;2 3
internal 

Dictionary 
< 
uint  
,  !
int" %
>% &
m_GlyphIndexLookup' 9
;9 :
public 
string 
version 
{ 	
get 
{ 
return 
	m_Version "
;" #
}$ %
internal 
set 
{ 
	m_Version $
=% &
value' ,
;, -
}. /
} 	
[ 	
SerializeField	 
] 
private 
string 
	m_Version  
;  !
public 
FaceInfo 
faceInfo  
{ 	
get   
{   
return   

m_FaceInfo   #
;  # $
}  % &
internal!! 
set!! 
{!! 

m_FaceInfo!! %
=!!& '
value!!( -
;!!- .
}!!/ 0
}"" 	
[## 	
SerializeField##	 
]## 
internal$$ 
FaceInfo$$ 

m_FaceInfo$$ $
;$$$ %
public'' 
Texture'' 
spriteSheet'' "
;''" #
public,, 
List,, 
<,, 
TMP_SpriteCharacter,, '
>,,' ( 
spriteCharacterTable,,) =
{-- 	
get.. 
{// 
if00 
(00 
m_GlyphIndexLookup00 &
==00' )
null00* .
)00. /
UpdateLookupTables11 &
(11& '
)11' (
;11( )
return33 "
m_SpriteCharacterTable33 -
;33- .
}44 
internal55 
set55 
{55 "
m_SpriteCharacterTable55 1
=552 3
value554 9
;559 :
}55; <
}66 	
[77 	
SerializeField77	 
]77 
private88 
List88 
<88 
TMP_SpriteCharacter88 (
>88( )"
m_SpriteCharacterTable88* @
=88A B
new88C F
List88G K
<88K L
TMP_SpriteCharacter88L _
>88_ `
(88` a
)88a b
;88b c
public>> 

Dictionary>> 
<>> 
uint>> 
,>> 
TMP_SpriteCharacter>>  3
>>>3 4&
spriteCharacterLookupTable>>5 O
{?? 	
get@@ 
{AA 
ifBB 
(BB #
m_SpriteCharacterLookupBB +
==BB, .
nullBB/ 3
)BB3 4
UpdateLookupTablesCC &
(CC& '
)CC' (
;CC( )
returnEE #
m_SpriteCharacterLookupEE .
;EE. /
}FF 
internalGG 
setGG 
{GG #
m_SpriteCharacterLookupGG 2
=GG3 4
valueGG5 :
;GG: ;
}GG< =
}HH 	
internalII 

DictionaryII 
<II 
uintII  
,II  !
TMP_SpriteCharacterII" 5
>II5 6#
m_SpriteCharacterLookupII7 N
;IIN O
publicKK 
ListKK 
<KK 
TMP_SpriteGlyphKK #
>KK# $
spriteGlyphTableKK% 5
{LL 	
getMM 
{MM 
returnMM 
m_SpriteGlyphTableMM +
;MM+ ,
}MM- .
internalNN 
setNN 
{NN 
m_SpriteGlyphTableNN -
=NN. /
valueNN0 5
;NN5 6
}NN7 8
}OO 	
[PP 	
SerializeFieldPP	 
]PP 
privateQQ 
ListQQ 
<QQ 
TMP_SpriteGlyphQQ $
>QQ$ %
m_SpriteGlyphTableQQ& 8
=QQ9 :
newQQ; >
ListQQ? C
<QQC D
TMP_SpriteGlyphQQD S
>QQS T
(QQT U
)QQU V
;QQV W
internalSS 

DictionarySS 
<SS 
uintSS  
,SS  !
TMP_SpriteGlyphSS" 1
>SS1 2
m_SpriteGlyphLookupSS3 F
;SSF G
publicVV 
ListVV 
<VV 

TMP_SpriteVV 
>VV 
spriteInfoListVV  .
;VV. /
[[[ 	
SerializeField[[	 
][[ 
public\\ 
List\\ 
<\\ 
TMP_SpriteAsset\\ #
>\\# $ 
fallbackSpriteAssets\\% 9
;\\9 :
internal^^ 
bool^^ ,
 m_IsSpriteAssetLookupTablesDirty^^ 6
=^^7 8
false^^9 >
;^^> ?
voidaa 
Awakeaa 
(aa 
)aa 
{bb 	
ifdd 
(dd 
thisdd 
.dd 
materialdd 
!=dd  
nulldd! %
&&dd& (
stringdd) /
.dd/ 0
IsNullOrEmptydd0 =
(dd= >
	m_Versiondd> G
)ddG H
)ddH I
UpgradeSpriteAssetee "
(ee" #
)ee# $
;ee$ %
}ff 	
Materialmm $
GetDefaultSpriteMaterialmm )
(mm) *
)mm* +
{nn 	
ShaderUtilitiespp 
.pp  
GetShaderPropertyIDspp 0
(pp0 1
)pp1 2
;pp2 3
Shaderss 
shaderss 
=ss 
Shaderss "
.ss" #
Findss# '
(ss' (
$strss( <
)ss< =
;ss= >
Materialtt 
tempMaterialtt !
=tt" #
newtt$ '
Materialtt( 0
(tt0 1
shadertt1 7
)tt7 8
;tt8 9
tempMaterialuu 
.uu 

SetTextureuu #
(uu# $
ShaderUtilitiesuu$ 3
.uu3 4

ID_MainTexuu4 >
,uu> ?
spriteSheetuu@ K
)uuK L
;uuL M
tempMaterialvv 
.vv 
	hideFlagsvv "
=vv# $
	HideFlagsvv% .
.vv. /
HideInHierarchyvv/ >
;vv> ?
UnityEditoryy 
.yy 
AssetDatabaseyy %
.yy% &
AddObjectToAssetyy& 6
(yy6 7
tempMaterialyy7 C
,yyC D
thisyyE I
)yyI J
;yyJ K
UnityEditorzz 
.zz 
AssetDatabasezz %
.zz% &
ImportAssetzz& 1
(zz1 2
UnityEditorzz2 =
.zz= >
AssetDatabasezz> K
.zzK L
GetAssetPathzzL X
(zzX Y
thiszzY ]
)zz] ^
)zz^ _
;zz_ `
return~~ 
tempMaterial~~ 
;~~  
} 	
public
ÜÜ 
void
ÜÜ  
UpdateLookupTables
ÜÜ &
(
ÜÜ& '
)
ÜÜ' (
{
áá 	
if
ãã 
(
ãã 
this
ãã 
.
ãã 
material
ãã 
!=
ãã  
null
ãã! %
&&
ãã& (
string
ãã) /
.
ãã/ 0
IsNullOrEmpty
ãã0 =
(
ãã= >
	m_Version
ãã> G
)
ããG H
)
ããH I 
UpgradeSpriteAsset
åå "
(
åå" #
)
åå# $
;
åå$ %
if
èè 
(
èè  
m_GlyphIndexLookup
èè "
==
èè# %
null
èè& *
)
èè* + 
m_GlyphIndexLookup
êê "
=
êê# $
new
êê% (

Dictionary
êê) 3
<
êê3 4
uint
êê4 8
,
êê8 9
int
êê: =
>
êê= >
(
êê> ?
)
êê? @
;
êê@ A
else
ëë  
m_GlyphIndexLookup
íí "
.
íí" #
Clear
íí# (
(
íí( )
)
íí) *
;
íí* +
if
ïï 
(
ïï !
m_SpriteGlyphLookup
ïï #
==
ïï$ &
null
ïï' +
)
ïï+ ,!
m_SpriteGlyphLookup
ññ #
=
ññ$ %
new
ññ& )

Dictionary
ññ* 4
<
ññ4 5
uint
ññ5 9
,
ññ9 :
TMP_SpriteGlyph
ññ; J
>
ññJ K
(
ññK L
)
ññL M
;
ññM N
else
óó !
m_SpriteGlyphLookup
òò #
.
òò# $
Clear
òò$ )
(
òò) *
)
òò* +
;
òò+ ,
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ 
<
õõ  
m_SpriteGlyphTable
õõ  2
.
õõ2 3
Count
õõ3 8
;
õõ8 9
i
õõ: ;
++
õõ; =
)
õõ= >
{
úú 
TMP_SpriteGlyph
ùù 
spriteGlyph
ùù  +
=
ùù, - 
m_SpriteGlyphTable
ùù. @
[
ùù@ A
i
ùùA B
]
ùùB C
;
ùùC D
uint
ûû 

glyphIndex
ûû 
=
ûû  !
spriteGlyph
ûû" -
.
ûû- .
index
ûû. 3
;
ûû3 4
if
†† 
(
††  
m_GlyphIndexLookup
†† &
.
††& '
ContainsKey
††' 2
(
††2 3

glyphIndex
††3 =
)
††= >
==
††? A
false
††B G
)
††G H 
m_GlyphIndexLookup
°° &
.
°°& '
Add
°°' *
(
°°* +

glyphIndex
°°+ 5
,
°°5 6
i
°°7 8
)
°°8 9
;
°°9 :
if
££ 
(
££ !
m_SpriteGlyphLookup
££ '
.
££' (
ContainsKey
££( 3
(
££3 4

glyphIndex
££4 >
)
££> ?
==
££@ B
false
££C H
)
££H I!
m_SpriteGlyphLookup
§§ '
.
§§' (
Add
§§( +
(
§§+ ,

glyphIndex
§§, 6
,
§§6 7
spriteGlyph
§§8 C
)
§§C D
;
§§D E
}
•• 
if
®® 
(
®® 
m_NameLookup
®® 
==
®® 
null
®®  $
)
®®$ %
m_NameLookup
©© 
=
©© 
new
©© "

Dictionary
©©# -
<
©©- .
int
©©. 1
,
©©1 2
int
©©3 6
>
©©6 7
(
©©7 8
)
©©8 9
;
©©9 :
else
™™ 
m_NameLookup
´´ 
.
´´ 
Clear
´´ "
(
´´" #
)
´´# $
;
´´$ %
if
ØØ 
(
ØØ %
m_SpriteCharacterLookup
ØØ '
==
ØØ( *
null
ØØ+ /
)
ØØ/ 0%
m_SpriteCharacterLookup
∞∞ '
=
∞∞( )
new
∞∞* -

Dictionary
∞∞. 8
<
∞∞8 9
uint
∞∞9 =
,
∞∞= >!
TMP_SpriteCharacter
∞∞? R
>
∞∞R S
(
∞∞S T
)
∞∞T U
;
∞∞U V
else
±± %
m_SpriteCharacterLookup
≤≤ '
.
≤≤' (
Clear
≤≤( -
(
≤≤- .
)
≤≤. /
;
≤≤/ 0
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
i
∂∂ 
<
∂∂ $
m_SpriteCharacterTable
∂∂  6
.
∂∂6 7
Count
∂∂7 <
;
∂∂< =
i
∂∂> ?
++
∂∂? A
)
∂∂A B
{
∑∑ !
TMP_SpriteCharacter
∏∏ #
spriteCharacter
∏∏$ 3
=
∏∏4 5$
m_SpriteCharacterTable
∏∏6 L
[
∏∏L M
i
∏∏M N
]
∏∏N O
;
∏∏O P
if
ªª 
(
ªª 
spriteCharacter
ªª #
==
ªª$ &
null
ªª' +
)
ªª+ ,
continue
ºº 
;
ºº 
uint
ææ 

glyphIndex
ææ 
=
ææ  !
spriteCharacter
ææ" 1
.
ææ1 2

glyphIndex
ææ2 <
;
ææ< =
if
¡¡ 
(
¡¡ !
m_SpriteGlyphLookup
¡¡ '
.
¡¡' (
ContainsKey
¡¡( 3
(
¡¡3 4

glyphIndex
¡¡4 >
)
¡¡> ?
==
¡¡@ B
false
¡¡C H
)
¡¡H I
continue
¬¬ 
;
¬¬ 
spriteCharacter
≈≈ 
.
≈≈  
glyph
≈≈  %
=
≈≈& '!
m_SpriteGlyphLookup
≈≈( ;
[
≈≈; <

glyphIndex
≈≈< F
]
≈≈F G
;
≈≈G H
spriteCharacter
∆∆ 
.
∆∆  
	textAsset
∆∆  )
=
∆∆* +
this
∆∆, 0
;
∆∆0 1
int
»» 
nameHashCode
»»  
=
»»! "$
m_SpriteCharacterTable
»»# 9
[
»»9 :
i
»»: ;
]
»»; <
.
»»< =
hashCode
»»= E
;
»»E F
if
   
(
   
m_NameLookup
    
.
    !
ContainsKey
  ! ,
(
  , -
nameHashCode
  - 9
)
  9 :
==
  ; =
false
  > C
)
  C D
m_NameLookup
ÀÀ  
.
ÀÀ  !
Add
ÀÀ! $
(
ÀÀ$ %
nameHashCode
ÀÀ% 1
,
ÀÀ1 2
i
ÀÀ3 4
)
ÀÀ4 5
;
ÀÀ5 6
uint
ÕÕ 
unicode
ÕÕ 
=
ÕÕ $
m_SpriteCharacterTable
ÕÕ 5
[
ÕÕ5 6
i
ÕÕ6 7
]
ÕÕ7 8
.
ÕÕ8 9
unicode
ÕÕ9 @
;
ÕÕ@ A
if
œœ 
(
œœ 
unicode
œœ 
!=
œœ 
$num
œœ %
&&
œœ& (%
m_SpriteCharacterLookup
œœ) @
.
œœ@ A
ContainsKey
œœA L
(
œœL M
unicode
œœM T
)
œœT U
==
œœV X
false
œœY ^
)
œœ^ _%
m_SpriteCharacterLookup
–– +
.
––+ ,
Add
––, /
(
––/ 0
unicode
––0 7
,
––7 8
spriteCharacter
––9 H
)
––H I
;
––I J
}
—— .
 m_IsSpriteAssetLookupTablesDirty
”” ,
=
””- .
false
””/ 4
;
””4 5
}
‘‘ 	
public
‹‹ 
int
‹‹ (
GetSpriteIndexFromHashcode
‹‹ -
(
‹‹- .
int
‹‹. 1
hashCode
‹‹2 :
)
‹‹: ;
{
›› 	
if
ﬁﬁ 
(
ﬁﬁ 
m_NameLookup
ﬁﬁ 
==
ﬁﬁ 
null
ﬁﬁ  $
)
ﬁﬁ$ % 
UpdateLookupTables
ﬂﬂ "
(
ﬂﬂ" #
)
ﬂﬂ# $
;
ﬂﬂ$ %
int
·· 
index
·· 
;
·· 
if
„„ 
(
„„ 
m_NameLookup
„„ 
.
„„ 
TryGetValue
„„ (
(
„„( )
hashCode
„„) 1
,
„„1 2
out
„„3 6
index
„„7 <
)
„„< =
)
„„= >
return
‰‰ 
index
‰‰ 
;
‰‰ 
return
ÊÊ 
-
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
public
ÔÔ 
int
ÔÔ '
GetSpriteIndexFromUnicode
ÔÔ ,
(
ÔÔ- .
uint
ÔÔ. 2
unicode
ÔÔ3 :
)
ÔÔ: ;
{
 	
if
ÒÒ 
(
ÒÒ %
m_SpriteCharacterLookup
ÒÒ '
==
ÒÒ( *
null
ÒÒ+ /
)
ÒÒ/ 0 
UpdateLookupTables
ÚÚ "
(
ÚÚ" #
)
ÚÚ# $
;
ÚÚ$ %!
TMP_SpriteCharacter
ÙÙ 
spriteCharacter
ÙÙ  /
;
ÙÙ/ 0
if
ˆˆ 
(
ˆˆ %
m_SpriteCharacterLookup
ˆˆ '
.
ˆˆ' (
TryGetValue
ˆˆ( 3
(
ˆˆ3 4
unicode
ˆˆ4 ;
,
ˆˆ; <
out
ˆˆ= @
spriteCharacter
ˆˆA P
)
ˆˆP Q
)
ˆˆQ R
return
˜˜ 
(
˜˜ 
int
˜˜ 
)
˜˜ 
spriteCharacter
˜˜ +
.
˜˜+ ,

glyphIndex
˜˜, 6
;
˜˜6 7
return
˘˘ 
-
˘˘ 
$num
˘˘ 
;
˘˘ 
}
˙˙ 	
public
ÇÇ 
int
ÇÇ $
GetSpriteIndexFromName
ÇÇ )
(
ÇÇ* +
string
ÇÇ+ 1
name
ÇÇ2 6
)
ÇÇ6 7
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
m_NameLookup
ÑÑ 
==
ÑÑ 
null
ÑÑ  $
)
ÑÑ$ % 
UpdateLookupTables
ÖÖ "
(
ÖÖ" #
)
ÖÖ# $
;
ÖÖ$ %
int
áá 
hashCode
áá 
=
áá 
TMP_TextUtilities
áá ,
.
áá, -
GetSimpleHashCode
áá- >
(
áá> ?
name
áá? C
)
ááC D
;
ááD E
return
ââ (
GetSpriteIndexFromHashcode
ââ -
(
ââ- .
hashCode
ââ. 6
)
ââ6 7
;
ââ7 8
}
ää 	
private
êê 
static
êê 
HashSet
êê 
<
êê 
int
êê "
>
êê" #$
k_searchedSpriteAssets
êê$ :
;
êê: ;
public
ôô 
static
ôô 
TMP_SpriteAsset
ôô %&
SearchForSpriteByUnicode
ôô& >
(
ôô> ?
TMP_SpriteAsset
ôô? N
spriteAsset
ôôO Z
,
ôôZ [
uint
ôô\ `
unicode
ôôa h
,
ôôh i
bool
ôôj n
includeFallbacks
ôôo 
,ôô Ä
outôôÅ Ñ
intôôÖ à
spriteIndexôôâ î
)ôôî ï
{
öö 	
if
úú 
(
úú 
spriteAsset
úú 
==
úú 
null
úú #
)
úú# $
{
úú% &
spriteIndex
úú' 2
=
úú3 4
-
úú5 6
$num
úú6 7
;
úú7 8
return
úú9 ?
null
úú@ D
;
úúD E
}
úúF G
spriteIndex
üü 
=
üü 
spriteAsset
üü %
.
üü% &'
GetSpriteIndexFromUnicode
üü& ?
(
üü? @
unicode
üü@ G
)
üüG H
;
üüH I
if
†† 
(
†† 
spriteIndex
†† 
!=
†† 
-
††  
$num
††  !
)
††! "
return
°° 
spriteAsset
°° "
;
°°" #
if
§§ 
(
§§ $
k_searchedSpriteAssets
§§ &
==
§§' )
null
§§* .
)
§§. /$
k_searchedSpriteAssets
•• &
=
••' (
new
••) ,
HashSet
••- 4
<
••4 5
int
••5 8
>
••8 9
(
••9 :
)
••: ;
;
••; <
else
¶¶ $
k_searchedSpriteAssets
ßß &
.
ßß& '
Clear
ßß' ,
(
ßß, -
)
ßß- .
;
ßß. /
int
™™ 
id
™™ 
=
™™ 
spriteAsset
™™  
.
™™  !
GetInstanceID
™™! .
(
™™. /
)
™™/ 0
;
™™0 1$
k_searchedSpriteAssets
´´ "
.
´´" #
Add
´´# &
(
´´& '
id
´´' )
)
´´) *
;
´´* +
if
ÆÆ 
(
ÆÆ 
includeFallbacks
ÆÆ  
&&
ÆÆ! #
spriteAsset
ÆÆ$ /
.
ÆÆ/ 0"
fallbackSpriteAssets
ÆÆ0 D
!=
ÆÆE G
null
ÆÆH L
&&
ÆÆM O
spriteAsset
ÆÆP [
.
ÆÆ[ \"
fallbackSpriteAssets
ÆÆ\ p
.
ÆÆp q
Count
ÆÆq v
>
ÆÆw x
$num
ÆÆy z
)
ÆÆz {
return
ØØ .
 SearchForSpriteByUnicodeInternal
ØØ 7
(
ØØ7 8
spriteAsset
ØØ8 C
.
ØØC D"
fallbackSpriteAssets
ØØD X
,
ØØX Y
unicode
ØØZ a
,
ØØa b
true
ØØc g
,
ØØg h
out
ØØi l
spriteIndex
ØØm x
)
ØØx y
;
ØØy z
if
≤≤ 
(
≤≤ 
includeFallbacks
≤≤  
&&
≤≤! #
TMP_Settings
≤≤$ 0
.
≤≤0 1 
defaultSpriteAsset
≤≤1 C
!=
≤≤D F
null
≤≤G K
)
≤≤K L
return
≥≥ .
 SearchForSpriteByUnicodeInternal
≥≥ 7
(
≥≥7 8
TMP_Settings
≥≥8 D
.
≥≥D E 
defaultSpriteAsset
≥≥E W
,
≥≥W X
unicode
≥≥Y `
,
≥≥` a
true
≥≥b f
,
≥≥f g
out
≥≥h k
spriteIndex
≥≥l w
)
≥≥w x
;
≥≥x y
spriteIndex
µµ 
=
µµ 
-
µµ 
$num
µµ 
;
µµ 
return
∂∂ 
null
∂∂ 
;
∂∂ 
}
∑∑ 	
private
¬¬ 
static
¬¬ 
TMP_SpriteAsset
¬¬ &.
 SearchForSpriteByUnicodeInternal
¬¬' G
(
¬¬G H
List
¬¬H L
<
¬¬L M
TMP_SpriteAsset
¬¬M \
>
¬¬\ ]
spriteAssets
¬¬^ j
,
¬¬j k
uint
¬¬l p
unicode
¬¬q x
,
¬¬x y
bool
¬¬z ~
includeFallbacks¬¬ è
,¬¬è ê
out¬¬ë î
int¬¬ï ò
spriteIndex¬¬ô §
)¬¬§ •
{
√√ 	
for
ƒƒ 
(
ƒƒ 
int
ƒƒ 
i
ƒƒ 
=
ƒƒ 
$num
ƒƒ 
;
ƒƒ 
i
ƒƒ 
<
ƒƒ 
spriteAssets
ƒƒ  ,
.
ƒƒ, -
Count
ƒƒ- 2
;
ƒƒ2 3
i
ƒƒ4 5
++
ƒƒ5 7
)
ƒƒ7 8
{
≈≈ 
TMP_SpriteAsset
∆∆ 
temp
∆∆  $
=
∆∆% &
spriteAssets
∆∆' 3
[
∆∆3 4
i
∆∆4 5
]
∆∆5 6
;
∆∆6 7
if
«« 
(
«« 
temp
«« 
==
«« 
null
««  
)
««  !
continue
««" *
;
««* +
int
…… 
id
…… 
=
…… 
temp
…… 
.
…… 
GetInstanceID
…… +
(
……+ ,
)
……, -
;
……- .
if
ÃÃ 
(
ÃÃ $
k_searchedSpriteAssets
ÃÃ *
.
ÃÃ* +
Add
ÃÃ+ .
(
ÃÃ. /
id
ÃÃ/ 1
)
ÃÃ1 2
==
ÃÃ3 5
false
ÃÃ6 ;
)
ÃÃ; <
continue
ÕÕ 
;
ÕÕ 
temp
œœ 
=
œœ .
 SearchForSpriteByUnicodeInternal
œœ 7
(
œœ7 8
temp
œœ8 <
,
œœ< =
unicode
œœ> E
,
œœE F
includeFallbacks
œœG W
,
œœW X
out
œœY \
spriteIndex
œœ] h
)
œœh i
;
œœi j
if
—— 
(
—— 
temp
—— 
!=
—— 
null
——  
)
——  !
return
““ 
temp
““ 
;
““  
}
”” 
spriteIndex
’’ 
=
’’ 
-
’’ 
$num
’’ 
;
’’ 
return
÷÷ 
null
÷÷ 
;
÷÷ 
}
◊◊ 	
private
‚‚ 
static
‚‚ 
TMP_SpriteAsset
‚‚ &.
 SearchForSpriteByUnicodeInternal
‚‚' G
(
‚‚G H
TMP_SpriteAsset
‚‚H W
spriteAsset
‚‚X c
,
‚‚c d
uint
‚‚e i
unicode
‚‚j q
,
‚‚q r
bool
‚‚s w
includeFallbacks‚‚x à
,‚‚à â
out‚‚ä ç
int‚‚é ë
spriteIndex‚‚í ù
)‚‚ù û
{
„„ 	
spriteIndex
ÂÂ 
=
ÂÂ 
spriteAsset
ÂÂ %
.
ÂÂ% &'
GetSpriteIndexFromUnicode
ÂÂ& ?
(
ÂÂ? @
unicode
ÂÂ@ G
)
ÂÂG H
;
ÂÂH I
if
ÁÁ 
(
ÁÁ 
spriteIndex
ÁÁ 
!=
ÁÁ 
-
ÁÁ  
$num
ÁÁ  !
)
ÁÁ! "
return
ËË 
spriteAsset
ËË "
;
ËË" #
if
ÍÍ 
(
ÍÍ 
includeFallbacks
ÍÍ  
&&
ÍÍ! #
spriteAsset
ÍÍ$ /
.
ÍÍ/ 0"
fallbackSpriteAssets
ÍÍ0 D
!=
ÍÍE G
null
ÍÍH L
&&
ÍÍM O
spriteAsset
ÍÍP [
.
ÍÍ[ \"
fallbackSpriteAssets
ÍÍ\ p
.
ÍÍp q
Count
ÍÍq v
>
ÍÍw x
$num
ÍÍy z
)
ÍÍz {
return
ÎÎ .
 SearchForSpriteByUnicodeInternal
ÎÎ 7
(
ÎÎ7 8
spriteAsset
ÎÎ8 C
.
ÎÎC D"
fallbackSpriteAssets
ÎÎD X
,
ÎÎX Y
unicode
ÎÎZ a
,
ÎÎa b
true
ÎÎc g
,
ÎÎg h
out
ÎÎi l
spriteIndex
ÎÎm x
)
ÎÎx y
;
ÎÎy z
spriteIndex
ÌÌ 
=
ÌÌ 
-
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
return
ÓÓ 
null
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
public
˙˙ 
static
˙˙ 
TMP_SpriteAsset
˙˙ %'
SearchForSpriteByHashCode
˙˙& ?
(
˙˙? @
TMP_SpriteAsset
˙˙@ O
spriteAsset
˙˙P [
,
˙˙[ \
int
˙˙] `
hashCode
˙˙a i
,
˙˙i j
bool
˙˙k o
includeFallbacks˙˙p Ä
,˙˙Ä Å
out˙˙Ç Ö
int˙˙Ü â
spriteIndex˙˙ä ï
)˙˙ï ñ
{
˚˚ 	
if
˝˝ 
(
˝˝ 
spriteAsset
˝˝ 
==
˝˝ 
null
˝˝ #
)
˝˝# $
{
˝˝% &
spriteIndex
˝˝' 2
=
˝˝3 4
-
˝˝5 6
$num
˝˝6 7
;
˝˝7 8
return
˝˝9 ?
null
˝˝@ D
;
˝˝D E
}
˝˝F G
spriteIndex
ˇˇ 
=
ˇˇ 
spriteAsset
ˇˇ %
.
ˇˇ% &(
GetSpriteIndexFromHashcode
ˇˇ& @
(
ˇˇ@ A
hashCode
ˇˇA I
)
ˇˇI J
;
ˇˇJ K
if
ÄÄ 
(
ÄÄ 
spriteIndex
ÄÄ 
!=
ÄÄ 
-
ÄÄ  
$num
ÄÄ  !
)
ÄÄ! "
return
ÅÅ 
spriteAsset
ÅÅ "
;
ÅÅ" #
if
ÑÑ 
(
ÑÑ $
k_searchedSpriteAssets
ÑÑ &
==
ÑÑ' )
null
ÑÑ* .
)
ÑÑ. /$
k_searchedSpriteAssets
ÖÖ &
=
ÖÖ' (
new
ÖÖ) ,
HashSet
ÖÖ- 4
<
ÖÖ4 5
int
ÖÖ5 8
>
ÖÖ8 9
(
ÖÖ9 :
)
ÖÖ: ;
;
ÖÖ; <
else
ÜÜ $
k_searchedSpriteAssets
áá &
.
áá& '
Clear
áá' ,
(
áá, -
)
áá- .
;
áá. /
int
ââ 
id
ââ 
=
ââ 
spriteAsset
ââ  
.
ââ  !

instanceID
ââ! +
;
ââ+ ,$
k_searchedSpriteAssets
åå "
.
åå" #
Add
åå# &
(
åå& '
id
åå' )
)
åå) *
;
åå* +
TMP_SpriteAsset
éé 
tempSpriteAsset
éé +
;
éé+ ,
if
ëë 
(
ëë 
includeFallbacks
ëë  
&&
ëë! #
spriteAsset
ëë$ /
.
ëë/ 0"
fallbackSpriteAssets
ëë0 D
!=
ëëE G
null
ëëH L
&&
ëëM O
spriteAsset
ëëP [
.
ëë[ \"
fallbackSpriteAssets
ëë\ p
.
ëëp q
Count
ëëq v
>
ëëw x
$num
ëëy z
)
ëëz {
{
íí 
tempSpriteAsset
ìì 
=
ìì  !/
!SearchForSpriteByHashCodeInternal
ìì" C
(
ììC D
spriteAsset
ììD O
.
ììO P"
fallbackSpriteAssets
ììP d
,
ììd e
hashCode
ììf n
,
ììn o
true
ììp t
,
ììt u
out
ììv y
spriteIndexììz Ö
)ììÖ Ü
;ììÜ á
if
ïï 
(
ïï 
spriteIndex
ïï 
!=
ïï  "
-
ïï# $
$num
ïï$ %
)
ïï% &
return
ññ 
tempSpriteAsset
ññ *
;
ññ* +
}
óó 
if
öö 
(
öö 
includeFallbacks
öö  
&&
öö! #
TMP_Settings
öö$ 0
.
öö0 1 
defaultSpriteAsset
öö1 C
!=
ööD F
null
ööG K
)
ööK L
{
õõ 
tempSpriteAsset
úú 
=
úú  !/
!SearchForSpriteByHashCodeInternal
úú" C
(
úúC D
TMP_Settings
úúD P
.
úúP Q 
defaultSpriteAsset
úúQ c
,
úúc d
hashCode
úúe m
,
úúm n
true
úúo s
,
úús t
out
úúu x
spriteIndexúúy Ñ
)úúÑ Ö
;úúÖ Ü
if
ûû 
(
ûû 
spriteIndex
ûû 
!=
ûû  "
-
ûû# $
$num
ûû$ %
)
ûû% &
return
üü 
tempSpriteAsset
üü *
;
üü* +
}
†† $
k_searchedSpriteAssets
££ "
.
££" #
Clear
££# (
(
££( )
)
££) *
;
££* +
uint
•• +
missingSpriteCharacterUnicode
•• .
=
••/ 0
TMP_Settings
••1 =
.
••= >+
missingCharacterSpriteUnicode
••> [
;
••[ \
spriteIndex
®® 
=
®® 
spriteAsset
®® %
.
®®% &'
GetSpriteIndexFromUnicode
®®& ?
(
®®? @+
missingSpriteCharacterUnicode
®®@ ]
)
®®] ^
;
®®^ _
if
©© 
(
©© 
spriteIndex
©© 
!=
©© 
-
©©  
$num
©©  !
)
©©! "
return
™™ 
spriteAsset
™™ "
;
™™" #$
k_searchedSpriteAssets
≠≠ "
.
≠≠" #
Add
≠≠# &
(
≠≠& '
id
≠≠' )
)
≠≠) *
;
≠≠* +
if
∞∞ 
(
∞∞ 
includeFallbacks
∞∞  
&&
∞∞! #
spriteAsset
∞∞$ /
.
∞∞/ 0"
fallbackSpriteAssets
∞∞0 D
!=
∞∞E G
null
∞∞H L
&&
∞∞M O
spriteAsset
∞∞P [
.
∞∞[ \"
fallbackSpriteAssets
∞∞\ p
.
∞∞p q
Count
∞∞q v
>
∞∞w x
$num
∞∞y z
)
∞∞z {
{
±± 
tempSpriteAsset
≤≤ 
=
≤≤  !.
 SearchForSpriteByUnicodeInternal
≤≤" B
(
≤≤B C
spriteAsset
≤≤C N
.
≤≤N O"
fallbackSpriteAssets
≤≤O c
,
≤≤c d,
missingSpriteCharacterUnicode≤≤e Ç
,≤≤Ç É
true≤≤Ñ à
,≤≤à â
out≤≤ä ç
spriteIndex≤≤é ô
)≤≤ô ö
;≤≤ö õ
if
¥¥ 
(
¥¥ 
spriteIndex
¥¥ 
!=
¥¥  "
-
¥¥# $
$num
¥¥$ %
)
¥¥% &
return
µµ 
tempSpriteAsset
µµ *
;
µµ* +
}
∂∂ 
if
ππ 
(
ππ 
includeFallbacks
ππ  
&&
ππ! #
TMP_Settings
ππ$ 0
.
ππ0 1 
defaultSpriteAsset
ππ1 C
!=
ππD F
null
ππG K
)
ππK L
{
∫∫ 
tempSpriteAsset
ªª 
=
ªª  !.
 SearchForSpriteByUnicodeInternal
ªª" B
(
ªªB C
TMP_Settings
ªªC O
.
ªªO P 
defaultSpriteAsset
ªªP b
,
ªªb c,
missingSpriteCharacterUnicodeªªd Å
,ªªÅ Ç
trueªªÉ á
,ªªá à
outªªâ å
spriteIndexªªç ò
)ªªò ô
;ªªô ö
if
ºº 
(
ºº 
spriteIndex
ºº 
!=
ºº  "
-
ºº# $
$num
ºº$ %
)
ºº% &
return
ΩΩ 
tempSpriteAsset
ΩΩ *
;
ΩΩ* +
}
ææ 
spriteIndex
¿¿ 
=
¿¿ 
-
¿¿ 
$num
¿¿ 
;
¿¿ 
return
¡¡ 
null
¡¡ 
;
¡¡ 
}
¬¬ 	
private
ÕÕ 
static
ÕÕ 
TMP_SpriteAsset
ÕÕ &/
!SearchForSpriteByHashCodeInternal
ÕÕ' H
(
ÕÕH I
List
ÕÕI M
<
ÕÕM N
TMP_SpriteAsset
ÕÕN ]
>
ÕÕ] ^
spriteAssets
ÕÕ_ k
,
ÕÕk l
int
ÕÕm p
hashCode
ÕÕq y
,
ÕÕy z
bool
ÕÕ{ 
searchFallbacksÕÕÄ è
,ÕÕè ê
outÕÕë î
intÕÕï ò
spriteIndexÕÕô §
)ÕÕ§ •
{
ŒŒ 	
for
–– 
(
–– 
int
–– 
i
–– 
=
–– 
$num
–– 
;
–– 
i
–– 
<
–– 
spriteAssets
––  ,
.
––, -
Count
––- 2
;
––2 3
i
––4 5
++
––5 7
)
––7 8
{
—— 
TMP_SpriteAsset
““ 
temp
““  $
=
““% &
spriteAssets
““' 3
[
““3 4
i
““4 5
]
““5 6
;
““6 7
if
”” 
(
”” 
temp
”” 
==
”” 
null
””  
)
””  !
continue
””" *
;
””* +
int
’’ 
id
’’ 
=
’’ 
temp
’’ 
.
’’ 

instanceID
’’ (
;
’’( )
if
ÿÿ 
(
ÿÿ $
k_searchedSpriteAssets
ÿÿ *
.
ÿÿ* +
Add
ÿÿ+ .
(
ÿÿ. /
id
ÿÿ/ 1
)
ÿÿ1 2
==
ÿÿ3 5
false
ÿÿ6 ;
)
ÿÿ; <
continue
ŸŸ 
;
ŸŸ 
temp
€€ 
=
€€ /
!SearchForSpriteByHashCodeInternal
€€ 8
(
€€8 9
temp
€€9 =
,
€€= >
hashCode
€€? G
,
€€G H
searchFallbacks
€€I X
,
€€X Y
out
€€Z ]
spriteIndex
€€^ i
)
€€i j
;
€€j k
if
›› 
(
›› 
temp
›› 
!=
›› 
null
››  
)
››  !
return
ﬁﬁ 
temp
ﬁﬁ 
;
ﬁﬁ  
}
ﬂﬂ 
spriteIndex
·· 
=
·· 
-
·· 
$num
·· 
;
·· 
return
‚‚ 
null
‚‚ 
;
‚‚ 
}
„„ 	
private
ÓÓ 
static
ÓÓ 
TMP_SpriteAsset
ÓÓ &/
!SearchForSpriteByHashCodeInternal
ÓÓ' H
(
ÓÓH I
TMP_SpriteAsset
ÓÓI X
spriteAsset
ÓÓY d
,
ÓÓd e
int
ÓÓf i
hashCode
ÓÓj r
,
ÓÓr s
bool
ÓÓt x
searchFallbacksÓÓy à
,ÓÓà â
outÓÓä ç
intÓÓé ë
spriteIndexÓÓí ù
)ÓÓù û
{
ÔÔ 	
spriteIndex
ÒÒ 
=
ÒÒ 
spriteAsset
ÒÒ %
.
ÒÒ% &(
GetSpriteIndexFromHashcode
ÒÒ& @
(
ÒÒ@ A
hashCode
ÒÒA I
)
ÒÒI J
;
ÒÒJ K
if
ÚÚ 
(
ÚÚ 
spriteIndex
ÚÚ 
!=
ÚÚ 
-
ÚÚ  
$num
ÚÚ  !
)
ÚÚ! "
return
ÛÛ 
spriteAsset
ÛÛ "
;
ÛÛ" #
if
ıı 
(
ıı 
searchFallbacks
ıı 
&&
ıı  "
spriteAsset
ıı# .
.
ıı. /"
fallbackSpriteAssets
ıı/ C
!=
ııD F
null
ııG K
&&
ııL N
spriteAsset
ııO Z
.
ııZ ["
fallbackSpriteAssets
ıı[ o
.
ııo p
Count
ııp u
>
ııv w
$num
ııx y
)
ııy z
return
ˆˆ /
!SearchForSpriteByHashCodeInternal
ˆˆ 8
(
ˆˆ8 9
spriteAsset
ˆˆ9 D
.
ˆˆD E"
fallbackSpriteAssets
ˆˆE Y
,
ˆˆY Z
hashCode
ˆˆ[ c
,
ˆˆc d
true
ˆˆe i
,
ˆˆi j
out
ˆˆk n
spriteIndex
ˆˆo z
)
ˆˆz {
;
ˆˆ{ |
spriteIndex
¯¯ 
=
¯¯ 
-
¯¯ 
$num
¯¯ 
;
¯¯ 
return
˘˘ 
null
˘˘ 
;
˘˘ 
}
˙˙ 	
public
ÄÄ 
void
ÄÄ 
SortGlyphTable
ÄÄ "
(
ÄÄ" #
)
ÄÄ# $
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ  
m_SpriteGlyphTable
ÇÇ "
==
ÇÇ# %
null
ÇÇ& *
||
ÇÇ+ - 
m_SpriteGlyphTable
ÇÇ. @
.
ÇÇ@ A
Count
ÇÇA F
==
ÇÇG I
$num
ÇÇJ K
)
ÇÇK L
return
ÇÇM S
;
ÇÇS T 
m_SpriteGlyphTable
ÑÑ 
=
ÑÑ   
m_SpriteGlyphTable
ÑÑ! 3
.
ÑÑ3 4
OrderBy
ÑÑ4 ;
(
ÑÑ; <
item
ÑÑ< @
=>
ÑÑA C
item
ÑÑD H
.
ÑÑH I
index
ÑÑI N
)
ÑÑN O
.
ÑÑO P
ToList
ÑÑP V
(
ÑÑV W
)
ÑÑW X
;
ÑÑX Y
}
ÖÖ 	
internal
ää 
void
ää  
SortCharacterTable
ää (
(
ää( )
)
ää) *
{
ãã 	
if
åå 
(
åå $
m_SpriteCharacterTable
åå &
!=
åå' )
null
åå* .
&&
åå/ 1$
m_SpriteCharacterTable
åå2 H
.
ååH I
Count
ååI N
>
ååO P
$num
ååQ R
)
ååR S$
m_SpriteCharacterTable
çç &
=
çç' ($
m_SpriteCharacterTable
çç) ?
.
çç? @
OrderBy
çç@ G
(
ççG H
c
ççH I
=>
ççJ L
c
ççM N
.
ççN O
unicode
ççO V
)
ççV W
.
ççW X
ToList
ççX ^
(
çç^ _
)
çç_ `
;
çç` a
}
éé 	
internal
ìì 
void
ìì )
SortGlyphAndCharacterTables
ìì 1
(
ìì1 2
)
ìì2 3
{
îî 	
SortGlyphTable
ïï 
(
ïï 
)
ïï 
;
ïï  
SortCharacterTable
ññ 
(
ññ 
)
ññ  
;
ññ  !
}
óó 	
private
ùù 
void
ùù  
UpgradeSpriteAsset
ùù '
(
ùù' (
)
ùù( )
{
ûû 	
	m_Version
üü 
=
üü 
$str
üü 
;
üü  
Debug
°° 
.
°° 
Log
°° 
(
°° 
$str
°° 0
+
°°1 2
this
°°3 7
.
°°7 8
name
°°8 <
+
°°= >
$str
°°? N
+
°°O P
	m_Version
°°Q Z
+
°°[ \
$str
°°] `
,
°°` a
this
°°b f
)
°°f g
;
°°g h$
m_SpriteCharacterTable
§§ "
.
§§" #
Clear
§§# (
(
§§( )
)
§§) *
;
§§* + 
m_SpriteGlyphTable
•• 
.
•• 
Clear
•• $
(
••$ %
)
••% &
;
••& '
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß 
<
ßß 
spriteInfoList
ßß  .
.
ßß. /
Count
ßß/ 4
;
ßß4 5
i
ßß6 7
++
ßß7 9
)
ßß9 :
{
®® 

TMP_Sprite
©© 
	oldSprite
©© $
=
©©% &
spriteInfoList
©©' 5
[
©©5 6
i
©©6 7
]
©©7 8
;
©©8 9
TMP_SpriteGlyph
´´ 
spriteGlyph
´´  +
=
´´, -
new
´´. 1
TMP_SpriteGlyph
´´2 A
(
´´A B
)
´´B C
;
´´C D
spriteGlyph
¨¨ 
.
¨¨ 
index
¨¨ !
=
¨¨" #
(
¨¨$ %
uint
¨¨% )
)
¨¨) *
i
¨¨* +
;
¨¨+ ,
spriteGlyph
≠≠ 
.
≠≠ 
sprite
≠≠ "
=
≠≠# $
	oldSprite
≠≠% .
.
≠≠. /
sprite
≠≠/ 5
;
≠≠5 6
spriteGlyph
ÆÆ 
.
ÆÆ 
metrics
ÆÆ #
=
ÆÆ$ %
new
ÆÆ& )
GlyphMetrics
ÆÆ* 6
(
ÆÆ6 7
	oldSprite
ÆÆ7 @
.
ÆÆ@ A
width
ÆÆA F
,
ÆÆF G
	oldSprite
ÆÆH Q
.
ÆÆQ R
height
ÆÆR X
,
ÆÆX Y
	oldSprite
ÆÆZ c
.
ÆÆc d
xOffset
ÆÆd k
,
ÆÆk l
	oldSprite
ÆÆm v
.
ÆÆv w
yOffset
ÆÆw ~
,
ÆÆ~ 
	oldSpriteÆÆÄ â
.ÆÆâ ä
xAdvanceÆÆä í
)ÆÆí ì
;ÆÆì î
spriteGlyph
ØØ 
.
ØØ 
	glyphRect
ØØ %
=
ØØ& '
new
ØØ( +
	GlyphRect
ØØ, 5
(
ØØ5 6
(
ØØ6 7
int
ØØ7 :
)
ØØ: ;
	oldSprite
ØØ; D
.
ØØD E
x
ØØE F
,
ØØF G
(
ØØH I
int
ØØI L
)
ØØL M
	oldSprite
ØØM V
.
ØØV W
y
ØØW X
,
ØØX Y
(
ØØZ [
int
ØØ[ ^
)
ØØ^ _
	oldSprite
ØØ_ h
.
ØØh i
width
ØØi n
,
ØØn o
(
ØØp q
int
ØØq t
)
ØØt u
	oldSprite
ØØu ~
.
ØØ~ 
heightØØ Ö
)ØØÖ Ü
;ØØÜ á
spriteGlyph
±± 
.
±± 
scale
±± !
=
±±" #
$num
±±$ (
;
±±( )
spriteGlyph
≤≤ 
.
≤≤ 

atlasIndex
≤≤ &
=
≤≤' (
$num
≤≤) *
;
≤≤* + 
m_SpriteGlyphTable
¥¥ "
.
¥¥" #
Add
¥¥# &
(
¥¥& '
spriteGlyph
¥¥' 2
)
¥¥2 3
;
¥¥3 4!
TMP_SpriteCharacter
∂∂ #
spriteCharacter
∂∂$ 3
=
∂∂4 5
new
∂∂6 9!
TMP_SpriteCharacter
∂∂: M
(
∂∂M N
)
∂∂N O
;
∂∂O P
spriteCharacter
∑∑ 
.
∑∑  
glyph
∑∑  %
=
∑∑& '
spriteGlyph
∑∑( 3
;
∑∑3 4
spriteCharacter
∏∏ 
.
∏∏  
unicode
∏∏  '
=
∏∏( )
	oldSprite
∏∏* 3
.
∏∏3 4
unicode
∏∏4 ;
==
∏∏< >
$num
∏∏? B
?
∏∏C D
$num
∏∏E K
:
∏∏L M
(
∏∏N O
uint
∏∏O S
)
∏∏S T
	oldSprite
∏∏T ]
.
∏∏] ^
unicode
∏∏^ e
;
∏∏e f
spriteCharacter
ππ 
.
ππ  
name
ππ  $
=
ππ% &
	oldSprite
ππ' 0
.
ππ0 1
name
ππ1 5
;
ππ5 6
spriteCharacter
∫∫ 
.
∫∫  
scale
∫∫  %
=
∫∫& '
	oldSprite
∫∫( 1
.
∫∫1 2
scale
∫∫2 7
;
∫∫7 8$
m_SpriteCharacterTable
ºº &
.
ºº& '
Add
ºº' *
(
ºº* +
spriteCharacter
ºº+ :
)
ºº: ;
;
ºº; <
}
ΩΩ  
UpdateLookupTables
¬¬ 
(
¬¬ 
)
¬¬  
;
¬¬  !
UnityEditor
≈≈ 
.
≈≈ 
EditorUtility
≈≈ %
.
≈≈% &
SetDirty
≈≈& .
(
≈≈. /
this
≈≈/ 3
)
≈≈3 4
;
≈≈4 5
UnityEditor
∆∆ 
.
∆∆ 
AssetDatabase
∆∆ %
.
∆∆% &

SaveAssets
∆∆& 0
(
∆∆0 1
)
∆∆1 2
;
∆∆2 3
}
»» 	
}
   
}ÀÀ ‹
kC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_TextElement_Legacy.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public 

class "
TMP_TextElement_Legacy '
{ 
public 
int 
id 
; 
public 
float 
x 
; 
public 
float 
y 
; 
public 
float 
width 
; 
public 
float 
height 
; 
public 
float 
xOffset 
; 
public 
float 
yOffset 
; 
public 
float 
xAdvance 
; 
public 
float 
scale 
; 
} 
} ë 
mC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\MaterialReferenceManager.cs
	namespace 	
TMPro
 
{ 
public		 

class		 $
MaterialReferenceManager		 )
{

 
private 
static $
MaterialReferenceManager /

s_Instance0 :
;: ;
private 

Dictionary 
< 
int 
, 
Material  (
>( ))
m_FontMaterialReferenceLookup* G
=H I
newJ M

DictionaryN X
<X Y
intY \
,\ ]
Material^ f
>f g
(g h
)h i
;i j
private 

Dictionary 
< 
int 
, 
TMP_FontAsset  -
>- .&
m_FontAssetReferenceLookup/ I
=J K
newL O

DictionaryP Z
<Z [
int[ ^
,^ _
TMP_FontAsset` m
>m n
(n o
)o p
;p q
private 

Dictionary 
< 
int 
, 
TMP_SpriteAsset  /
>/ 0(
m_SpriteAssetReferenceLookup1 M
=N O
newP S

DictionaryT ^
<^ _
int_ b
,b c
TMP_SpriteAssetd s
>s t
(t u
)u v
;v w
private 

Dictionary 
< 
int 
, 
TMP_ColorGradient  1
>1 2*
m_ColorGradientReferenceLookup3 Q
=R S
newT W

DictionaryX b
<b c
intc f
,f g
TMP_ColorGradienth y
>y z
(z {
){ |
;| }
public 
static $
MaterialReferenceManager .
instance/ 7
{ 	
get 
{ 
if 
( $
MaterialReferenceManager ,
., -

s_Instance- 7
==8 :
null; ?
)? @$
MaterialReferenceManager ,
., -

s_Instance- 7
=8 9
new: =$
MaterialReferenceManager> V
(V W
)W X
;X Y
return $
MaterialReferenceManager /
./ 0

s_Instance0 :
;: ;
} 
} 	
public'' 
static'' 
void'' 
AddFontAsset'' '
(''' (
TMP_FontAsset''( 5
	fontAsset''6 ?
)''? @
{(( 	$
MaterialReferenceManager)) $
.))$ %
instance))% -
.))- . 
AddFontAssetInternal)). B
())B C
	fontAsset))C L
)))L M
;))M N
}** 	
private00 
void00  
AddFontAssetInternal00 )
(00) *
TMP_FontAsset00* 7
	fontAsset008 A
)00A B
{11 	
if22 
(22 &
m_FontAssetReferenceLookup22 *
.22* +
ContainsKey22+ 6
(226 7
	fontAsset227 @
.22@ A
hashCode22A I
)22I J
)22J K
return22L R
;22R S&
m_FontAssetReferenceLookup55 &
.55& '
Add55' *
(55* +
	fontAsset55+ 4
.554 5
hashCode555 =
,55= >
	fontAsset55? H
)55H I
;55I J)
m_FontMaterialReferenceLookup88 )
.88) *
Add88* -
(88- .
	fontAsset88. 7
.887 8
materialHashCode888 H
,88H I
	fontAsset88J S
.88S T
material88T \
)88\ ]
;88] ^
}99 	
publicBB 
staticBB 
voidBB 
AddSpriteAssetBB )
(BB) *
TMP_SpriteAssetBB* 9
spriteAssetBB: E
)BBE F
{CC 	$
MaterialReferenceManagerDD $
.DD$ %
instanceDD% -
.DD- ."
AddSpriteAssetInternalDD. D
(DDD E
spriteAssetDDE P
)DDP Q
;DDQ R
}EE 	
privateLL 
voidLL "
AddSpriteAssetInternalLL +
(LL+ ,
TMP_SpriteAssetLL, ;
spriteAssetLL< G
)LLG H
{MM 	
ifNN 
(NN (
m_SpriteAssetReferenceLookupNN ,
.NN, -
ContainsKeyNN- 8
(NN8 9
spriteAssetNN9 D
.NND E
hashCodeNNE M
)NNM N
)NNN O
returnNNP V
;NNV W(
m_SpriteAssetReferenceLookupQQ (
.QQ( )
AddQQ) ,
(QQ, -
spriteAssetQQ- 8
.QQ8 9
hashCodeQQ9 A
,QQA B
spriteAssetQQC N
)QQN O
;QQO P)
m_FontMaterialReferenceLookupTT )
.TT) *
AddTT* -
(TT- .
spriteAssetTT. 9
.TT9 :
hashCodeTT: B
,TTB C
spriteAssetTTD O
.TTO P
materialTTP X
)TTX Y
;TTY Z
}UU 	
public\\ 
static\\ 
void\\ 
AddSpriteAsset\\ )
(\\) *
int\\* -
hashCode\\. 6
,\\6 7
TMP_SpriteAsset\\8 G
spriteAsset\\H S
)\\S T
{]] 	$
MaterialReferenceManager^^ $
.^^$ %
instance^^% -
.^^- ."
AddSpriteAssetInternal^^. D
(^^D E
hashCode^^E M
,^^M N
spriteAsset^^O Z
)^^Z [
;^^[ \
}__ 	
privateff 
voidff "
AddSpriteAssetInternalff +
(ff+ ,
intff, /
hashCodeff0 8
,ff8 9
TMP_SpriteAssetff: I
spriteAssetffJ U
)ffU V
{gg 	
ifhh 
(hh (
m_SpriteAssetReferenceLookuphh ,
.hh, -
ContainsKeyhh- 8
(hh8 9
hashCodehh9 A
)hhA B
)hhB C
returnhhD J
;hhJ K(
m_SpriteAssetReferenceLookupkk (
.kk( )
Addkk) ,
(kk, -
hashCodekk- 5
,kk5 6
spriteAssetkk7 B
)kkB C
;kkC D)
m_FontMaterialReferenceLookupnn )
.nn) *
Addnn* -
(nn- .
hashCodenn. 6
,nn6 7
spriteAssetnn8 C
.nnC D
materialnnD L
)nnL M
;nnM N
ifqq 
(qq 
spriteAssetqq 
.qq 
hashCodeqq $
==qq% '
$numqq( )
)qq) *
spriteAssetqq+ 6
.qq6 7
hashCodeqq7 ?
=qq@ A
hashCodeqqB J
;qqJ K
}rr 	
publiczz 
staticzz 
voidzz 
AddFontMaterialzz *
(zz* +
intzz+ .
hashCodezz/ 7
,zz7 8
Materialzz9 A
materialzzB J
)zzJ K
{{{ 	$
MaterialReferenceManager|| $
.||$ %
instance||% -
.||- .#
AddFontMaterialInternal||. E
(||E F
hashCode||F N
,||N O
material||P X
)||X Y
;||Y Z
}}} 	
private
ÑÑ 
void
ÑÑ %
AddFontMaterialInternal
ÑÑ ,
(
ÑÑ, -
int
ÑÑ- 0
hashCode
ÑÑ1 9
,
ÑÑ9 :
Material
ÑÑ; C
material
ÑÑD L
)
ÑÑL M
{
ÖÖ 	+
m_FontMaterialReferenceLookup
àà )
.
àà) *
Add
àà* -
(
àà- .
hashCode
àà. 6
,
àà6 7
material
àà8 @
)
àà@ A
;
ààA B
}
ââ 	
public
ëë 
static
ëë 
void
ëë $
AddColorGradientPreset
ëë 1
(
ëë1 2
int
ëë2 5
hashCode
ëë6 >
,
ëë> ?
TMP_ColorGradient
ëë@ Q
spriteAsset
ëëR ]
)
ëë] ^
{
íí 	&
MaterialReferenceManager
ìì $
.
ìì$ %
instance
ìì% -
.
ìì- .-
AddColorGradientPreset_Internal
ìì. M
(
ììM N
hashCode
ììN V
,
ììV W
spriteAsset
ììX c
)
ììc d
;
ììd e
}
îî 	
private
õõ 
void
õõ -
AddColorGradientPreset_Internal
õõ 4
(
õõ4 5
int
õõ5 8
hashCode
õõ9 A
,
õõA B
TMP_ColorGradient
õõC T
spriteAsset
õõU `
)
õõ` a
{
úú 	
if
ùù 
(
ùù ,
m_ColorGradientReferenceLookup
ùù .
.
ùù. /
ContainsKey
ùù/ :
(
ùù: ;
hashCode
ùù; C
)
ùùC D
)
ùùD E
return
ùùF L
;
ùùL M,
m_ColorGradientReferenceLookup
†† *
.
††* +
Add
††+ .
(
††. /
hashCode
††/ 7
,
††7 8
spriteAsset
††9 D
)
††D E
;
††E F
}
°° 	
public
˜˜ 
bool
˜˜ 
Contains
˜˜ 
(
˜˜ 
TMP_FontAsset
˜˜ *
font
˜˜+ /
)
˜˜/ 0
{
¯¯ 	
return
˘˘ (
m_FontAssetReferenceLookup
˘˘ -
.
˘˘- .
ContainsKey
˘˘. 9
(
˘˘9 :
font
˘˘: >
.
˘˘> ?
hashCode
˘˘? G
)
˘˘G H
;
˘˘H I
}
˙˙ 	
public
ÇÇ 
bool
ÇÇ 
Contains
ÇÇ 
(
ÇÇ 
TMP_SpriteAsset
ÇÇ ,
sprite
ÇÇ- 3
)
ÇÇ3 4
{
ÉÉ 	
return
ÑÑ (
m_FontAssetReferenceLookup
ÑÑ -
.
ÑÑ- .
ContainsKey
ÑÑ. 9
(
ÑÑ9 :
sprite
ÑÑ: @
.
ÑÑ@ A
hashCode
ÑÑA I
)
ÑÑI J
;
ÑÑJ K
}
ÖÖ 	
public
èè 
static
èè 
bool
èè 
TryGetFontAsset
èè *
(
èè* +
int
èè+ .
hashCode
èè/ 7
,
èè7 8
out
èè9 <
TMP_FontAsset
èè= J
	fontAsset
èèK T
)
èèT U
{
êê 	
return
ëë &
MaterialReferenceManager
ëë +
.
ëë+ ,
instance
ëë, 4
.
ëë4 5%
TryGetFontAssetInternal
ëë5 L
(
ëëL M
hashCode
ëëM U
,
ëëU V
out
ëëW Z
	fontAsset
ëë[ d
)
ëëd e
;
ëëe f
}
íí 	
private
öö 
bool
öö %
TryGetFontAssetInternal
öö ,
(
öö, -
int
öö- 0
hashCode
öö1 9
,
öö9 :
out
öö; >
TMP_FontAsset
öö? L
	fontAsset
ööM V
)
ööV W
{
õõ 	
	fontAsset
úú 
=
úú 
null
úú 
;
úú 
return
ûû (
m_FontAssetReferenceLookup
ûû -
.
ûû- .
TryGetValue
ûû. 9
(
ûû9 :
hashCode
ûû: B
,
ûûB C
out
ûûD G
	fontAsset
ûûH Q
)
ûûQ R
;
ûûR S
}
üü 	
public
©© 
static
©© 
bool
©© 
TryGetSpriteAsset
©© ,
(
©©, -
int
©©- 0
hashCode
©©1 9
,
©©9 :
out
©©; >
TMP_SpriteAsset
©©? N
spriteAsset
©©O Z
)
©©Z [
{
™™ 	
return
´´ &
MaterialReferenceManager
´´ +
.
´´+ ,
instance
´´, 4
.
´´4 5'
TryGetSpriteAssetInternal
´´5 N
(
´´N O
hashCode
´´O W
,
´´W X
out
´´Y \
spriteAsset
´´] h
)
´´h i
;
´´i j
}
¨¨ 	
private
¥¥ 
bool
¥¥ '
TryGetSpriteAssetInternal
¥¥ .
(
¥¥. /
int
¥¥/ 2
hashCode
¥¥3 ;
,
¥¥; <
out
¥¥= @
TMP_SpriteAsset
¥¥A P
spriteAsset
¥¥Q \
)
¥¥\ ]
{
µµ 	
spriteAsset
∂∂ 
=
∂∂ 
null
∂∂ 
;
∂∂ 
return
∏∏ *
m_SpriteAssetReferenceLookup
∏∏ /
.
∏∏/ 0
TryGetValue
∏∏0 ;
(
∏∏; <
hashCode
∏∏< D
,
∏∏D E
out
∏∏F I
spriteAsset
∏∏J U
)
∏∏U V
;
∏∏V W
}
ππ 	
public
¬¬ 
static
¬¬ 
bool
¬¬ '
TryGetColorGradientPreset
¬¬ 4
(
¬¬4 5
int
¬¬5 8
hashCode
¬¬9 A
,
¬¬A B
out
¬¬C F
TMP_ColorGradient
¬¬G X
gradientPreset
¬¬Y g
)
¬¬g h
{
√√ 	
return
ƒƒ &
MaterialReferenceManager
ƒƒ +
.
ƒƒ+ ,
instance
ƒƒ, 4
.
ƒƒ4 5/
!TryGetColorGradientPresetInternal
ƒƒ5 V
(
ƒƒV W
hashCode
ƒƒW _
,
ƒƒ_ `
out
ƒƒa d
gradientPreset
ƒƒe s
)
ƒƒs t
;
ƒƒt u
}
≈≈ 	
private
ÕÕ 
bool
ÕÕ /
!TryGetColorGradientPresetInternal
ÕÕ 6
(
ÕÕ6 7
int
ÕÕ7 :
hashCode
ÕÕ; C
,
ÕÕC D
out
ÕÕE H
TMP_ColorGradient
ÕÕI Z
gradientPreset
ÕÕ[ i
)
ÕÕi j
{
ŒŒ 	
gradientPreset
œœ 
=
œœ 
null
œœ !
;
œœ! "
return
—— ,
m_ColorGradientReferenceLookup
—— 1
.
——1 2
TryGetValue
——2 =
(
——= >
hashCode
——> F
,
——F G
out
——H K
gradientPreset
——L Z
)
——Z [
;
——[ \
}
““ 	
public
€€ 
static
€€ 
bool
€€ 
TryGetMaterial
€€ )
(
€€) *
int
€€* -
hashCode
€€. 6
,
€€6 7
out
€€8 ;
Material
€€< D
material
€€E M
)
€€M N
{
‹‹ 	
return
›› &
MaterialReferenceManager
›› +
.
››+ ,
instance
››, 4
.
››4 5$
TryGetMaterialInternal
››5 K
(
››K L
hashCode
››L T
,
››T U
out
››V Y
material
››Z b
)
››b c
;
››c d
}
ﬁﬁ 	
private
ÊÊ 
bool
ÊÊ $
TryGetMaterialInternal
ÊÊ +
(
ÊÊ+ ,
int
ÊÊ, /
hashCode
ÊÊ0 8
,
ÊÊ8 9
out
ÊÊ: =
Material
ÊÊ> F
material
ÊÊG O
)
ÊÊO P
{
ÁÁ 	
material
ËË 
=
ËË 
null
ËË 
;
ËË 
return
ÍÍ +
m_FontMaterialReferenceLookup
ÍÍ 0
.
ÍÍ0 1
TryGetValue
ÍÍ1 <
(
ÍÍ< =
hashCode
ÍÍ= E
,
ÍÍE F
out
ÍÍG J
material
ÍÍK S
)
ÍÍS T
;
ÍÍT U
}
ÎÎ 	
}
ÁÁ 
public
ÍÍ 

struct
ÍÍ #
TMP_MaterialReference
ÍÍ '
{
ÎÎ 
public
ÏÏ 
Material
ÏÏ 
material
ÏÏ  
;
ÏÏ  !
public
ÌÌ 
int
ÌÌ 
referenceCount
ÌÌ !
;
ÌÌ! "
}
ÓÓ 
public
ÒÒ 

struct
ÒÒ 
MaterialReference
ÒÒ #
{
ÚÚ 
public
ÙÙ 
int
ÙÙ 
index
ÙÙ 
;
ÙÙ 
public
ıı 
TMP_FontAsset
ıı 
	fontAsset
ıı &
;
ıı& '
public
ˆˆ 
TMP_SpriteAsset
ˆˆ 
spriteAsset
ˆˆ *
;
ˆˆ* +
public
˜˜ 
Material
˜˜ 
material
˜˜  
;
˜˜  !
public
¯¯ 
bool
¯¯ 
isDefaultMaterial
¯¯ %
;
¯¯% &
public
˘˘ 
bool
˘˘  
isFallbackMaterial
˘˘ &
;
˘˘& '
public
˙˙ 
Material
˙˙ 
fallbackMaterial
˙˙ (
;
˙˙( )
public
˚˚ 
float
˚˚ 
padding
˚˚ 
;
˚˚ 
public
¸¸ 
int
¸¸ 
referenceCount
¸¸ !
;
¸¸! "
public
áá 
MaterialReference
áá  
(
áá  !
int
áá! $
index
áá% *
,
áá* +
TMP_FontAsset
áá, 9
	fontAsset
áá: C
,
ááC D
TMP_SpriteAsset
ááE T
spriteAsset
ááU `
,
áá` a
Material
ááb j
material
áák s
,
áás t
float
ááu z
paddingáá{ Ç
)ááÇ É
{
àà 	
this
ââ 
.
ââ 
index
ââ 
=
ââ 
index
ââ 
;
ââ 
this
ää 
.
ää 
	fontAsset
ää 
=
ää 
	fontAsset
ää &
;
ää& '
this
ãã 
.
ãã 
spriteAsset
ãã 
=
ãã 
spriteAsset
ãã *
;
ãã* +
this
åå 
.
åå 
material
åå 
=
åå 
material
åå $
;
åå$ %
this
çç 
.
çç 
isDefaultMaterial
çç "
=
çç# $
material
çç% -
.
çç- .
GetInstanceID
çç. ;
(
çç; <
)
çç< =
==
çç> @
	fontAsset
ççA J
.
ççJ K
material
ççK S
.
ççS T
GetInstanceID
ççT a
(
çça b
)
ççb c
?
ççd e
true
ççf j
:
ççk l
false
ççm r
;
ççr s
this
éé 
.
éé  
isFallbackMaterial
éé #
=
éé$ %
false
éé& +
;
éé+ ,
this
èè 
.
èè 
fallbackMaterial
èè !
=
èè" #
null
èè$ (
;
èè( )
this
êê 
.
êê 
padding
êê 
=
êê 
padding
êê "
;
êê" #
this
ëë 
.
ëë 
referenceCount
ëë 
=
ëë  !
$num
ëë" #
;
ëë# $
}
íí 	
public
õõ 
static
õõ 
bool
õõ 
Contains
õõ #
(
õõ# $
MaterialReference
õõ$ 5
[
õõ5 6
]
õõ6 7 
materialReferences
õõ8 J
,
õõJ K
TMP_FontAsset
õõL Y
	fontAsset
õõZ c
)
õõc d
{
úú 	
int
ùù 
id
ùù 
=
ùù 
	fontAsset
ùù 
.
ùù 
GetInstanceID
ùù ,
(
ùù, -
)
ùù- .
;
ùù. /
for
üü 
(
üü 
int
üü 
i
üü 
=
üü 
$num
üü 
;
üü 
i
üü 
<
üü  
materialReferences
üü  2
.
üü2 3
Length
üü3 9
&&
üü: < 
materialReferences
üü= O
[
üüO P
i
üüP Q
]
üüQ R
.
üüR S
	fontAsset
üüS \
!=
üü] _
null
üü` d
;
üüd e
i
üüf g
++
üüg i
)
üüi j
{
†† 
if
°° 
(
°°  
materialReferences
°° &
[
°°& '
i
°°' (
]
°°( )
.
°°) *
	fontAsset
°°* 3
.
°°3 4
GetInstanceID
°°4 A
(
°°A B
)
°°B C
==
°°D F
id
°°G I
)
°°I J
return
¢¢ 
true
¢¢ 
;
¢¢  
}
££ 
return
•• 
false
•• 
;
•• 
}
¶¶ 	
public
±± 
static
±± 
int
±± "
AddMaterialReference
±± .
(
±±. /
Material
±±/ 7
material
±±8 @
,
±±@ A
TMP_FontAsset
±±B O
	fontAsset
±±P Y
,
±±Y Z
ref
±±[ ^
MaterialReference
±±_ p
[
±±p q
]
±±q r!
materialReferences±±s Ö
,±±Ö Ü

Dictionary±±á ë
<±±ë í
int±±í ï
,±±ï ñ
int±±ó ö
>±±ö õ,
materialReferenceIndexLookup±±ú ∏
)±±∏ π
{
≤≤ 	
int
≥≥ 

materialID
≥≥ 
=
≥≥ 
material
≥≥ %
.
≥≥% &
GetInstanceID
≥≥& 3
(
≥≥3 4
)
≥≥4 5
;
≥≥5 6
int
¥¥ 
index
¥¥ 
;
¥¥ 
if
∂∂ 
(
∂∂ *
materialReferenceIndexLookup
∂∂ ,
.
∂∂, -
TryGetValue
∂∂- 8
(
∂∂8 9

materialID
∂∂9 C
,
∂∂C D
out
∂∂E H
index
∂∂I N
)
∂∂N O
)
∂∂O P
return
∑∑ 
index
∑∑ 
;
∑∑ 
index
ππ 
=
ππ *
materialReferenceIndexLookup
ππ 0
.
ππ0 1
Count
ππ1 6
;
ππ6 7*
materialReferenceIndexLookup
ºº (
[
ºº( )

materialID
ºº) 3
]
ºº3 4
=
ºº5 6
index
ºº7 <
;
ºº< =
if
ææ 
(
ææ 
index
ææ 
>=
ææ  
materialReferences
ææ +
.
ææ+ ,
Length
ææ, 2
)
ææ2 3
System
øø 
.
øø 
Array
øø 
.
øø 
Resize
øø #
(
øø# $
ref
øø$ ' 
materialReferences
øø( :
,
øø: ;
Mathf
øø< A
.
øøA B
NextPowerOfTwo
øøB P
(
øøP Q
index
øøQ V
+
øøW X
$num
øøY Z
)
øøZ [
)
øø[ \
;
øø\ ] 
materialReferences
¡¡ 
[
¡¡ 
index
¡¡ $
]
¡¡$ %
.
¡¡% &
index
¡¡& +
=
¡¡, -
index
¡¡. 3
;
¡¡3 4 
materialReferences
¬¬ 
[
¬¬ 
index
¬¬ $
]
¬¬$ %
.
¬¬% &
	fontAsset
¬¬& /
=
¬¬0 1
	fontAsset
¬¬2 ;
;
¬¬; < 
materialReferences
√√ 
[
√√ 
index
√√ $
]
√√$ %
.
√√% &
spriteAsset
√√& 1
=
√√2 3
null
√√4 8
;
√√8 9 
materialReferences
ƒƒ 
[
ƒƒ 
index
ƒƒ $
]
ƒƒ$ %
.
ƒƒ% &
material
ƒƒ& .
=
ƒƒ/ 0
material
ƒƒ1 9
;
ƒƒ9 : 
materialReferences
≈≈ 
[
≈≈ 
index
≈≈ $
]
≈≈$ %
.
≈≈% &
isDefaultMaterial
≈≈& 7
=
≈≈8 9

materialID
≈≈: D
==
≈≈E G
	fontAsset
≈≈H Q
.
≈≈Q R
material
≈≈R Z
.
≈≈Z [
GetInstanceID
≈≈[ h
(
≈≈h i
)
≈≈i j
?
≈≈k l
true
≈≈m q
:
≈≈r s
false
≈≈t y
;
≈≈y z 
materialReferences
«« 
[
«« 
index
«« $
]
««$ %
.
««% &
referenceCount
««& 4
=
««5 6
$num
««7 8
;
««8 9
return
…… 
index
…… 
;
…… 
}
ÀÀ 	
public
÷÷ 
static
÷÷ 
int
÷÷ "
AddMaterialReference
÷÷ .
(
÷÷. /
Material
÷÷/ 7
material
÷÷8 @
,
÷÷@ A
TMP_SpriteAsset
÷÷B Q
spriteAsset
÷÷R ]
,
÷÷] ^
ref
÷÷_ b
MaterialReference
÷÷c t
[
÷÷t u
]
÷÷u v!
materialReferences÷÷w â
,÷÷â ä

Dictionary÷÷ã ï
<÷÷ï ñ
int÷÷ñ ô
,÷÷ô ö
int÷÷õ û
>÷÷û ü,
materialReferenceIndexLookup÷÷† º
)÷÷º Ω
{
◊◊ 	
int
ÿÿ 

materialID
ÿÿ 
=
ÿÿ 
material
ÿÿ %
.
ÿÿ% &
GetInstanceID
ÿÿ& 3
(
ÿÿ3 4
)
ÿÿ4 5
;
ÿÿ5 6
int
ŸŸ 
index
ŸŸ 
;
ŸŸ 
if
€€ 
(
€€ *
materialReferenceIndexLookup
€€ ,
.
€€, -
TryGetValue
€€- 8
(
€€8 9

materialID
€€9 C
,
€€C D
out
€€E H
index
€€I N
)
€€N O
)
€€O P
return
‹‹ 
index
‹‹ 
;
‹‹ 
index
ﬁﬁ 
=
ﬁﬁ *
materialReferenceIndexLookup
ﬁﬁ 0
.
ﬁﬁ0 1
Count
ﬁﬁ1 6
;
ﬁﬁ6 7*
materialReferenceIndexLookup
·· (
[
··( )

materialID
··) 3
]
··3 4
=
··5 6
index
··7 <
;
··< =
if
„„ 
(
„„ 
index
„„ 
>=
„„  
materialReferences
„„ +
.
„„+ ,
Length
„„, 2
)
„„2 3
System
‰‰ 
.
‰‰ 
Array
‰‰ 
.
‰‰ 
Resize
‰‰ #
(
‰‰# $
ref
‰‰$ ' 
materialReferences
‰‰( :
,
‰‰: ;
Mathf
‰‰< A
.
‰‰A B
NextPowerOfTwo
‰‰B P
(
‰‰P Q
index
‰‰Q V
+
‰‰W X
$num
‰‰Y Z
)
‰‰Z [
)
‰‰[ \
;
‰‰\ ] 
materialReferences
ÊÊ 
[
ÊÊ 
index
ÊÊ $
]
ÊÊ$ %
.
ÊÊ% &
index
ÊÊ& +
=
ÊÊ, -
index
ÊÊ. 3
;
ÊÊ3 4 
materialReferences
ÁÁ 
[
ÁÁ 
index
ÁÁ $
]
ÁÁ$ %
.
ÁÁ% &
	fontAsset
ÁÁ& /
=
ÁÁ0 1 
materialReferences
ÁÁ2 D
[
ÁÁD E
$num
ÁÁE F
]
ÁÁF G
.
ÁÁG H
	fontAsset
ÁÁH Q
;
ÁÁQ R 
materialReferences
ËË 
[
ËË 
index
ËË $
]
ËË$ %
.
ËË% &
spriteAsset
ËË& 1
=
ËË2 3
spriteAsset
ËË4 ?
;
ËË? @ 
materialReferences
ÈÈ 
[
ÈÈ 
index
ÈÈ $
]
ÈÈ$ %
.
ÈÈ% &
material
ÈÈ& .
=
ÈÈ/ 0
material
ÈÈ1 9
;
ÈÈ9 : 
materialReferences
ÍÍ 
[
ÍÍ 
index
ÍÍ $
]
ÍÍ$ %
.
ÍÍ% &
isDefaultMaterial
ÍÍ& 7
=
ÍÍ8 9
true
ÍÍ: >
;
ÍÍ> ? 
materialReferences
ÏÏ 
[
ÏÏ 
index
ÏÏ $
]
ÏÏ$ %
.
ÏÏ% &
referenceCount
ÏÏ& 4
=
ÏÏ5 6
$num
ÏÏ7 8
;
ÏÏ8 9
return
ÓÓ 
index
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
}
 
}ÒÒ ÜÕ
cC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_InputField.cs
	namespace 	
TMPro
 
{ 
[ 
AddComponentMenu 
( 
$str 4
,4 5
$num6 8
)8 9
]9 :
public 

class 
TMP_InputField 
:  !

Selectable" ,
,, -"
IUpdateSelectedHandler 
, 
IBeginDragHandler 
, 
IDragHandler 
, 
IEndDragHandler 
,  
IPointerClickHandler 
, 
ISubmitHandler 
, 
ICanvasElement 
, 
ILayoutElement 
, 
IScrollHandler 
{   
public## 
enum## 
ContentType## 
{$$ 	
Standard%% 
,%% 
Autocorrected&& 
,&& 
IntegerNumber'' 
,'' 
DecimalNumber(( 
,(( 
Alphanumeric)) 
,)) 
Name** 
,** 
EmailAddress++ 
,++ 
Password,, 
,,, 
Pin-- 
,-- 
Custom.. 
}// 	
public11 
enum11 
	InputType11 
{22 	
Standard33 
,33 
AutoCorrect44 
,44 
Password55 
,55 
}66 	
public88 
enum88 
CharacterValidation88 '
{99 	
None:: 
,:: 
Digit;; 
,;; 
Integer<< 
,<< 
Decimal== 
,== 
Alphanumeric>> 
,>> 
Name?? 
,?? 
Regex@@ 
,@@ 
EmailAddressAA 
,AA 
CustomValidatorBB 
}CC 	
publicEE 
enumEE 
LineTypeEE 
{FF 	

SingleLineGG 
,GG 
MultiLineSubmitHH 
,HH 
MultiLineNewlineII 
}JJ 	
publicLL 
delegateLL 
charLL 
OnValidateInputLL ,
(LL, -
stringLL- 3
textLL4 8
,LL8 9
intLL: =
	charIndexLL> G
,LLG H
charLLI M
	addedCharLLN W
)LLW X
;LLX Y
[NN 	
SerializableNN	 
]NN 
publicOO 
classOO 
SubmitEventOO  
:OO! "

UnityEventOO# -
<OO- .
stringOO. 4
>OO4 5
{OO6 7
}OO8 9
[QQ 	
SerializableQQ	 
]QQ 
publicRR 
classRR 
OnChangeEventRR "
:RR# $

UnityEventRR% /
<RR/ 0
stringRR0 6
>RR6 7
{RR8 9
}RR: ;
[TT 	
SerializableTT	 
]TT 
publicUU 
classUU 
SelectionEventUU #
:UU$ %

UnityEventUU& 0
<UU0 1
stringUU1 7
>UU7 8
{UU9 :
}UU; <
[WW 	
SerializableWW	 
]WW 
publicXX 
classXX 
TextSelectionEventXX '
:XX( )

UnityEventXX* 4
<XX4 5
stringXX5 ;
,XX; <
intXX= @
,XX@ A
intXXB E
>XXE F
{XXG H
}XXI J
[ZZ 	
SerializableZZ	 
]ZZ 
public[[ 
class[[ $
TouchScreenKeyboardEvent[[ -
:[[. /

UnityEvent[[0 :
<[[: ;
TouchScreenKeyboard[[; N
.[[N O
Status[[O U
>[[U V
{[[W X
}[[Y Z
	protected]] 
TouchScreenKeyboard]] %
m_SoftKeyboard]]& 4
;]]4 5
static^^ 
private^^ 
readonly^^ 
char^^  $
[^^$ %
]^^% &
kSeparators^^' 2
=^^3 4
{^^5 6
$char^^7 :
,^^: ;
$char^^< ?
,^^? @
$char^^A D
,^^D E
$char^^F J
,^^J K
$char^^L P
,^^P Q
$char^^R V
}^^W X
;^^X Y
	protectedee 
RectTransformee 
m_RectTransformee  /
;ee/ 0
[gg 	
SerializeFieldgg	 
]gg 
	protectedhh 
RectTransformhh 
m_TextViewporthh  .
;hh. /
	protectedjj 

RectMask2Djj #
m_TextComponentRectMaskjj 4
;jj4 5
	protectedll 

RectMask2Dll "
m_TextViewportRectMaskll 3
;ll3 4
privatemm 
Rectmm  
m_CachedViewportRectmm )
;mm) *
[oo 	
SerializeFieldoo	 
]oo 
	protectedpp 
TMP_Textpp 
m_TextComponentpp *
;pp* +
	protectedrr 
RectTransformrr (
m_TextComponentRectTransformrr  <
;rr< =
[tt 	
SerializeFieldtt	 
]tt 
	protecteduu 
Graphicuu 
m_Placeholderuu '
;uu' (
[ww 	
SerializeFieldww	 
]ww 
	protectedxx 
	Scrollbarxx 
m_VerticalScrollbarxx /
;xx/ 0
[zz 	
SerializeFieldzz	 
]zz 
	protected{{ %
TMP_ScrollbarEventHandler{{ ++
m_VerticalScrollbarEventHandler{{, K
;{{K L
private~~ 
bool~~ (
m_IsDrivenByLayoutComponents~~ 1
=~~2 3
false~~4 9
;~~9 :
[ 	
SerializeField	 
] 
private
ÄÄ 
LayoutGroup
ÄÄ 
m_LayoutGroup
ÄÄ )
;
ÄÄ) *
private
ÇÇ 
IScrollHandler
ÇÇ $
m_IScrollHandlerParent
ÇÇ 5
;
ÇÇ5 6
private
áá 
float
áá 
m_ScrollPosition
áá &
;
áá& '
[
åå 	
SerializeField
åå	 
]
åå 
	protected
çç 
float
çç !
m_ScrollSensitivity
çç +
=
çç, -
$num
çç. 2
;
çç2 3
[
íí 	
SerializeField
íí	 
]
íí 
private
ìì 
ContentType
ìì 
m_ContentType
ìì )
=
ìì* +
ContentType
ìì, 7
.
ìì7 8
Standard
ìì8 @
;
ìì@ A
[
òò 	
SerializeField
òò	 
]
òò 
private
ôô 
	InputType
ôô 
m_InputType
ôô %
=
ôô& '
	InputType
ôô( 1
.
ôô1 2
Standard
ôô2 :
;
ôô: ;
[
ûû 	
SerializeField
ûû	 
]
ûû 
private
üü 
char
üü 
m_AsteriskChar
üü #
=
üü$ %
$char
üü& )
;
üü) *
[
§§ 	
SerializeField
§§	 
]
§§ 
private
•• %
TouchScreenKeyboardType
•• '
m_KeyboardType
••( 6
=
••7 8%
TouchScreenKeyboardType
••9 P
.
••P Q
Default
••Q X
;
••X Y
[
ßß 	
SerializeField
ßß	 
]
ßß 
private
®® 
LineType
®® 

m_LineType
®® #
=
®®$ %
LineType
®®& .
.
®®. /

SingleLine
®®/ 9
;
®®9 :
[
≠≠ 	
SerializeField
≠≠	 
]
≠≠ 
private
ÆÆ 
bool
ÆÆ 
m_HideMobileInput
ÆÆ &
=
ÆÆ' (
false
ÆÆ) .
;
ÆÆ. /
[
≥≥ 	
SerializeField
≥≥	 
]
≥≥ 
private
¥¥ 
bool
¥¥  
m_HideSoftKeyboard
¥¥ '
=
¥¥( )
false
¥¥* /
;
¥¥/ 0
[
ππ 	
SerializeField
ππ	 
]
ππ 
private
∫∫ !
CharacterValidation
∫∫ ##
m_CharacterValidation
∫∫$ 9
=
∫∫: ;!
CharacterValidation
∫∫< O
.
∫∫O P
None
∫∫P T
;
∫∫T U
[
øø 	
SerializeField
øø	 
]
øø 
private
¿¿ 
string
¿¿ 
m_RegexValue
¿¿ #
=
¿¿$ %
string
¿¿& ,
.
¿¿, -
Empty
¿¿- 2
;
¿¿2 3
[
≈≈ 	
SerializeField
≈≈	 
]
≈≈ 
private
∆∆ 
float
∆∆ 
m_GlobalPointSize
∆∆ '
=
∆∆( )
$num
∆∆* ,
;
∆∆, -
[
ÀÀ 	
SerializeField
ÀÀ	 
]
ÀÀ 
private
ÃÃ 
int
ÃÃ 
m_CharacterLimit
ÃÃ $
=
ÃÃ% &
$num
ÃÃ' (
;
ÃÃ( )
[
—— 	
SerializeField
——	 
]
—— 
private
““ 
SubmitEvent
““ 
m_OnEndEdit
““ '
=
““( )
new
““* -
SubmitEvent
““. 9
(
““9 :
)
““: ;
;
““; <
[
◊◊ 	
SerializeField
◊◊	 
]
◊◊ 
private
ÿÿ 
SubmitEvent
ÿÿ 

m_OnSubmit
ÿÿ &
=
ÿÿ' (
new
ÿÿ) ,
SubmitEvent
ÿÿ- 8
(
ÿÿ8 9
)
ÿÿ9 :
;
ÿÿ: ;
[
›› 	
SerializeField
››	 
]
›› 
private
ﬁﬁ 
SelectionEvent
ﬁﬁ 

m_OnSelect
ﬁﬁ )
=
ﬁﬁ* +
new
ﬁﬁ, /
SelectionEvent
ﬁﬁ0 >
(
ﬁﬁ> ?
)
ﬁﬁ? @
;
ﬁﬁ@ A
[
„„ 	
SerializeField
„„	 
]
„„ 
private
‰‰ 
SelectionEvent
‰‰ 
m_OnDeselect
‰‰ +
=
‰‰, -
new
‰‰. 1
SelectionEvent
‰‰2 @
(
‰‰@ A
)
‰‰A B
;
‰‰B C
[
ÈÈ 	
SerializeField
ÈÈ	 
]
ÈÈ 
private
ÍÍ  
TextSelectionEvent
ÍÍ "
m_OnTextSelection
ÍÍ# 4
=
ÍÍ5 6
new
ÍÍ7 : 
TextSelectionEvent
ÍÍ; M
(
ÍÍM N
)
ÍÍN O
;
ÍÍO P
[
ÔÔ 	
SerializeField
ÔÔ	 
]
ÔÔ 
private
  
TextSelectionEvent
 ""
m_OnEndTextSelection
# 7
=
8 9
new
: = 
TextSelectionEvent
> P
(
P Q
)
Q R
;
R S
[
ıı 	
SerializeField
ıı	 
]
ıı 
private
ˆˆ 
OnChangeEvent
ˆˆ 
m_OnValueChanged
ˆˆ .
=
ˆˆ/ 0
new
ˆˆ1 4
OnChangeEvent
ˆˆ5 B
(
ˆˆB C
)
ˆˆC D
;
ˆˆD E
[
˚˚ 	
SerializeField
˚˚	 
]
˚˚ 
private
¸¸ &
TouchScreenKeyboardEvent
¸¸ (2
$m_OnTouchScreenKeyboardStatusChanged
¸¸) M
=
¸¸N O
new
¸¸P S&
TouchScreenKeyboardEvent
¸¸T l
(
¸¸l m
)
¸¸m n
;
¸¸n o
[
ÅÅ 	
SerializeField
ÅÅ	 
]
ÅÅ 
private
ÇÇ 
OnValidateInput
ÇÇ 
m_OnValidateInput
ÇÇ  1
;
ÇÇ1 2
[
ÑÑ 	
SerializeField
ÑÑ	 
]
ÑÑ 
private
ÖÖ 
Color
ÖÖ 
m_CaretColor
ÖÖ "
=
ÖÖ# $
new
ÖÖ% (
Color
ÖÖ) .
(
ÖÖ. /
$num
ÖÖ/ 2
/
ÖÖ3 4
$num
ÖÖ5 9
,
ÖÖ9 :
$num
ÖÖ; >
/
ÖÖ? @
$num
ÖÖA E
,
ÖÖE F
$num
ÖÖG J
/
ÖÖK L
$num
ÖÖM Q
,
ÖÖQ R
$num
ÖÖS U
)
ÖÖU V
;
ÖÖV W
[
áá 	
SerializeField
áá	 
]
áá 
private
àà 
bool
àà  
m_CustomCaretColor
àà '
=
àà( )
false
àà* /
;
àà/ 0
[
ää 	
SerializeField
ää	 
]
ää 
private
ãã 
Color
ãã 
m_SelectionColor
ãã &
=
ãã' (
new
ãã) ,
Color
ãã- 2
(
ãã2 3
$num
ãã3 7
/
ãã8 9
$num
ãã: >
,
ãã> ?
$num
ãã@ D
/
ããE F
$num
ããG K
,
ããK L
$num
ããM Q
/
ããR S
$num
ããT X
,
ããX Y
$num
ããZ ^
/
ãã_ `
$num
ããa e
)
ããe f
;
ããf g
[
ëë 	
SerializeField
ëë	 
]
ëë 
[
íí 	
TextArea
íí	 
(
íí 
$num
íí 
,
íí 
$num
íí 
)
íí 
]
íí 
	protected
ìì 
string
ìì 
m_Text
ìì 
=
ìì  !
string
ìì" (
.
ìì( )
Empty
ìì) .
;
ìì. /
[
ïï 	
SerializeField
ïï	 
]
ïï 
[
ññ 	
Range
ññ	 
(
ññ 
$num
ññ 
,
ññ 
$num
ññ 
)
ññ 
]
ññ 
private
óó 
float
óó 
m_CaretBlinkRate
óó &
=
óó' (
$num
óó) .
;
óó. /
[
ôô 	
SerializeField
ôô	 
]
ôô 
[
öö 	
Range
öö	 
(
öö 
$num
öö 
,
öö 
$num
öö 
)
öö 
]
öö 
private
õõ 
int
õõ 
m_CaretWidth
õõ  
=
õõ! "
$num
õõ# $
;
õõ$ %
[
ùù 	
SerializeField
ùù	 
]
ùù 
private
ûû 
bool
ûû 

m_ReadOnly
ûû 
=
ûû  !
false
ûû" '
;
ûû' (
[
†† 	
SerializeField
††	 
]
†† 
private
°° 
bool
°° 

m_RichText
°° 
=
°°  !
true
°°" &
;
°°& '
	protected
•• 
int
•• 
m_StringPosition
•• &
=
••' (
$num
••) *
;
••* +
	protected
¶¶ 
int
¶¶ $
m_StringSelectPosition
¶¶ ,
=
¶¶- .
$num
¶¶/ 0
;
¶¶0 1
	protected
ßß 
int
ßß 
m_CaretPosition
ßß %
=
ßß& '
$num
ßß( )
;
ßß) *
	protected
®® 
int
®® #
m_CaretSelectPosition
®® +
=
®®, -
$num
®®. /
;
®®/ 0
private
™™ 
RectTransform
™™ 
caretRectTrans
™™ ,
=
™™- .
null
™™/ 3
;
™™3 4
	protected
´´ 
UIVertex
´´ 
[
´´ 
]
´´ 
m_CursorVerts
´´ *
=
´´+ ,
null
´´- 1
;
´´1 2
private
¨¨ 
CanvasRenderer
¨¨ #
m_CachedInputRenderer
¨¨ 4
;
¨¨4 5
private
≠≠ 
Vector2
≠≠ 
m_LastPosition
≠≠ &
;
≠≠& '
[
ØØ 	
NonSerialized
ØØ	 
]
ØØ 
	protected
∞∞ 
Mesh
∞∞ 
m_Mesh
∞∞ 
;
∞∞ 
private
±± 
bool
±± 
m_AllowInput
±± !
=
±±" #
false
±±$ )
;
±±) *
private
≥≥ 
bool
≥≥ (
m_ShouldActivateNextUpdate
≥≥ /
=
≥≥0 1
false
≥≥2 7
;
≥≥7 8
private
¥¥ 
bool
¥¥ 
m_UpdateDrag
¥¥ !
=
¥¥" #
false
¥¥$ )
;
¥¥) *
private
µµ 
bool
µµ '
m_DragPositionOutOfBounds
µµ .
=
µµ/ 0
false
µµ1 6
;
µµ6 7
private
∂∂ 
const
∂∂ 
float
∂∂ 
kHScrollSpeed
∂∂ )
=
∂∂* +
$num
∂∂, 1
;
∂∂1 2
private
∑∑ 
const
∑∑ 
float
∑∑ 
kVScrollSpeed
∑∑ )
=
∑∑* +
$num
∑∑, 1
;
∑∑1 2
	protected
∏∏ 
bool
∏∏ 
m_CaretVisible
∏∏ %
;
∏∏% &
private
ππ 
	Coroutine
ππ 
m_BlinkCoroutine
ππ *
=
ππ+ ,
null
ππ- 1
;
ππ1 2
private
∫∫ 
float
∫∫ 
m_BlinkStartTime
∫∫ &
=
∫∫' (
$num
∫∫) -
;
∫∫- .
private
ªª 
	Coroutine
ªª 
m_DragCoroutine
ªª )
=
ªª* +
null
ªª, 0
;
ªª0 1
private
ºº 
string
ºº 
m_OriginalText
ºº %
=
ºº& '
$str
ºº( *
;
ºº* +
private
ΩΩ 
bool
ΩΩ 
m_WasCanceled
ΩΩ "
=
ΩΩ# $
false
ΩΩ% *
;
ΩΩ* +
private
ææ 
bool
ææ &
m_HasDoneFocusTransition
ææ -
=
ææ. /
false
ææ0 5
;
ææ5 6
private
øø $
WaitForSecondsRealtime
øø &&
m_WaitForSecondsRealtime
øø' ?
;
øø? @
private
¿¿ 
bool
¿¿ 
m_PreventCallback
¿¿ &
=
¿¿' (
false
¿¿) .
;
¿¿. /
private
¬¬ 
bool
¬¬ 1
#m_TouchKeyboardAllowsInPlaceEditing
¬¬ 8
=
¬¬9 :
false
¬¬; @
;
¬¬@ A
private
ƒƒ 
bool
ƒƒ -
m_IsTextComponentUpdateRequired
ƒƒ 4
=
ƒƒ5 6
false
ƒƒ7 <
;
ƒƒ< =
private
∆∆ 
bool
∆∆ "
m_isLastKeyBackspace
∆∆ )
=
∆∆* +
false
∆∆, 1
;
∆∆1 2
private
«« 
float
«« )
m_PointerDownClickStartTime
«« 1
;
««1 2
private
»» 
float
»»  
m_KeyDownStartTime
»» (
;
»»( )
private
…… 
float
……  
m_DoubleClickDelay
…… (
=
……) *
$num
……+ /
;
……/ 0
const
ÃÃ 
string
ÃÃ %
kEmailSpecialCharacters
ÃÃ ,
=
ÃÃ- .
$str
ÃÃ/ D
;
ÃÃD E
private
ŒŒ 
	BaseInput
ŒŒ 
inputSystem
ŒŒ %
{
œœ 	
get
–– 
{
—— 
if
““ 
(
““ 
EventSystem
““ 
.
““  
current
““  '
&&
““( *
EventSystem
““+ 6
.
““6 7
current
““7 >
.
““> ? 
currentInputModule
““? Q
)
““Q R
return
”” 
EventSystem
”” &
.
””& '
current
””' .
.
””. / 
currentInputModule
””/ A
.
””A B
input
””B G
;
””G H
return
‘‘ 
null
‘‘ 
;
‘‘ 
}
’’ 
}
÷÷ 	
private
ÿÿ 
string
ÿÿ 
compositionString
ÿÿ (
{
ŸŸ 	
get
⁄⁄ 
{
⁄⁄ 
return
⁄⁄ 
inputSystem
⁄⁄ $
!=
⁄⁄% '
null
⁄⁄( ,
?
⁄⁄- .
inputSystem
⁄⁄/ :
.
⁄⁄: ;
compositionString
⁄⁄; L
:
⁄⁄M N
Input
⁄⁄O T
.
⁄⁄T U
compositionString
⁄⁄U f
;
⁄⁄f g
}
⁄⁄h i
}
€€ 	
private
‹‹ 
bool
‹‹ #
m_IsCompositionActive
‹‹ *
=
‹‹+ ,
false
‹‹- 2
;
‹‹2 3
private
›› 
bool
›› -
m_ShouldUpdateIMEWindowPosition
›› 4
=
››5 6
false
››7 <
;
››< =
private
ﬁﬁ 
int
ﬁﬁ (
m_PreviousIMEInsertionLine
ﬁﬁ .
=
ﬁﬁ/ 0
$num
ﬁﬁ1 2
;
ﬁﬁ2 3
private
‡‡ 
int
‡‡ 
compositionLength
‡‡ %
{
·· 	
get
‚‚ 
{
„„ 
if
‰‰ 
(
‰‰ 

m_ReadOnly
‰‰ 
)
‰‰ 
return
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
return
ÁÁ 
compositionString
ÁÁ (
.
ÁÁ( )
Length
ÁÁ) /
;
ÁÁ/ 0
}
ËË 
}
ÈÈ 	
	protected
ÌÌ 
TMP_InputField
ÌÌ  
(
ÌÌ  !
)
ÌÌ! "
{
ÓÓ 	&
SetTextComponentWrapMode
ÔÔ $
(
ÔÔ$ %
)
ÔÔ% &
;
ÔÔ& '
}
 	
	protected
ÚÚ 
Mesh
ÚÚ 
mesh
ÚÚ 
{
ÛÛ 	
get
ÙÙ 
{
ıı 
if
ˆˆ 
(
ˆˆ 
m_Mesh
ˆˆ 
==
ˆˆ 
null
ˆˆ "
)
ˆˆ" #
m_Mesh
˜˜ 
=
˜˜ 
new
˜˜  
Mesh
˜˜! %
(
˜˜% &
)
˜˜& '
;
˜˜' (
return
¯¯ 
m_Mesh
¯¯ 
;
¯¯ 
}
˘˘ 
}
˙˙ 	
public
ˇˇ 
bool
ˇˇ #
shouldHideMobileInput
ˇˇ )
{
ÄÄ 	
get
ÅÅ 
{
ÇÇ 
switch
ÉÉ 
(
ÉÉ 
Application
ÉÉ #
.
ÉÉ# $
platform
ÉÉ$ ,
)
ÉÉ, -
{
ÑÑ 
case
ÖÖ 
RuntimePlatform
ÖÖ (
.
ÖÖ( )
Android
ÖÖ) 0
:
ÖÖ0 1
case
ÜÜ 
RuntimePlatform
ÜÜ (
.
ÜÜ( )
IPhonePlayer
ÜÜ) 5
:
ÜÜ5 6
case
áá 
RuntimePlatform
áá (
.
áá( )
tvOS
áá) -
:
áá- .
return
àà 
m_HideMobileInput
àà 0
;
àà0 1
default
ââ 
:
ââ 
return
ää 
true
ää #
;
ää# $
}
ãã 
}
åå 
set
éé 
{
èè 
switch
êê 
(
êê 
Application
êê "
.
êê" #
platform
êê# +
)
êê+ ,
{
ëë 
case
íí 
RuntimePlatform
íí (
.
íí( )
Android
íí) 0
:
íí0 1
case
ìì 
RuntimePlatform
ìì (
.
ìì( )
IPhonePlayer
ìì) 5
:
ìì5 6
case
îî 
RuntimePlatform
îî (
.
îî( )
tvOS
îî) -
:
îî- . 
SetPropertyUtility
ïï *
.
ïï* +
	SetStruct
ïï+ 4
(
ïï4 5
ref
ïï5 8
m_HideMobileInput
ïï9 J
,
ïïJ K
value
ïïL Q
)
ïïQ R
;
ïïR S
break
ññ 
;
ññ 
default
óó 
:
óó 
m_HideMobileInput
òò )
=
òò* +
true
òò, 0
;
òò0 1
break
ôô 
;
ôô 
}
öö 
}
õõ 
}
úú 	
public
ûû 
bool
ûû $
shouldHideSoftKeyboard
ûû *
{
üü 	
get
†† 
{
°° 
switch
¢¢ 
(
¢¢ 
Application
¢¢ #
.
¢¢# $
platform
¢¢$ ,
)
¢¢, -
{
££ 
case
§§ 
RuntimePlatform
§§ (
.
§§( )
Android
§§) 0
:
§§0 1
case
•• 
RuntimePlatform
•• (
.
••( )
IPhonePlayer
••) 5
:
••5 6
case
¶¶ 
RuntimePlatform
¶¶ (
.
¶¶( )
tvOS
¶¶) -
:
¶¶- .
case
ßß 
RuntimePlatform
ßß (
.
ßß( )
WSAPlayerX86
ßß) 5
:
ßß5 6
case
®® 
RuntimePlatform
®® (
.
®®( )
WSAPlayerX64
®®) 5
:
®®5 6
case
©© 
RuntimePlatform
©© (
.
©©( )
WSAPlayerARM
©©) 5
:
©©5 6
case
™™ 
RuntimePlatform
™™ (
.
™™( )
Stadia
™™) /
:
™™/ 0
case
¨¨ 
RuntimePlatform
¨¨ (
.
¨¨( )
PS4
¨¨) ,
:
¨¨, -
case
ÆÆ 
RuntimePlatform
ÆÆ ,
.
ÆÆ, -
PS5
ÆÆ- 0
:
ÆÆ0 1
case
±± 
RuntimePlatform
±± (
.
±±( )
Switch
±±) /
:
±±/ 0
return
≤≤  
m_HideSoftKeyboard
≤≤ 1
;
≤≤1 2
default
≥≥ 
:
≥≥ 
return
¥¥ 
true
¥¥ #
;
¥¥# $
}
µµ 
}
∂∂ 
set
∏∏ 
{
ππ 
switch
∫∫ 
(
∫∫ 
Application
∫∫ #
.
∫∫# $
platform
∫∫$ ,
)
∫∫, -
{
ªª 
case
ºº 
RuntimePlatform
ºº (
.
ºº( )
Android
ºº) 0
:
ºº0 1
case
ΩΩ 
RuntimePlatform
ΩΩ (
.
ΩΩ( )
IPhonePlayer
ΩΩ) 5
:
ΩΩ5 6
case
ææ 
RuntimePlatform
ææ (
.
ææ( )
tvOS
ææ) -
:
ææ- .
case
øø 
RuntimePlatform
øø (
.
øø( )
WSAPlayerX86
øø) 5
:
øø5 6
case
¿¿ 
RuntimePlatform
¿¿ (
.
¿¿( )
WSAPlayerX64
¿¿) 5
:
¿¿5 6
case
¡¡ 
RuntimePlatform
¡¡ (
.
¡¡( )
WSAPlayerARM
¡¡) 5
:
¡¡5 6
case
¬¬ 
RuntimePlatform
¬¬ (
.
¬¬( )
Stadia
¬¬) /
:
¬¬/ 0
case
ƒƒ 
RuntimePlatform
ƒƒ (
.
ƒƒ( )
PS4
ƒƒ) ,
:
ƒƒ, -
case
∆∆ 
RuntimePlatform
∆∆ ,
.
∆∆, -
PS5
∆∆- 0
:
∆∆0 1
case
…… 
RuntimePlatform
…… (
.
……( )
Switch
……) /
:
……/ 0 
SetPropertyUtility
   *
.
  * +
	SetStruct
  + 4
(
  4 5
ref
  5 8 
m_HideSoftKeyboard
  9 K
,
  K L
value
  M R
)
  R S
;
  S T
break
ÀÀ 
;
ÀÀ 
default
ÃÃ 
:
ÃÃ  
m_HideSoftKeyboard
ÕÕ *
=
ÕÕ+ ,
true
ÕÕ- 1
;
ÕÕ1 2
break
ŒŒ 
;
ŒŒ 
}
œœ 
if
—— 
(
——  
m_HideSoftKeyboard
—— &
==
——' )
true
——* .
&&
——/ 1
m_SoftKeyboard
——2 @
!=
——A C
null
——D H
&&
——I K!
TouchScreenKeyboard
——L _
.
——_ `
isSupported
——` k
&&
——l n
m_SoftKeyboard
——o }
.
——} ~
active——~ Ñ
)——Ñ Ö
{
““ 
m_SoftKeyboard
”” "
.
””" #
active
””# )
=
””* +
false
””, 1
;
””1 2
m_SoftKeyboard
‘‘ "
=
‘‘# $
null
‘‘% )
;
‘‘) *
}
’’ 
}
÷÷ 
}
◊◊ 	
private
ŸŸ 
bool
ŸŸ #
isKeyboardUsingEvents
ŸŸ *
(
ŸŸ* +
)
ŸŸ+ ,
{
⁄⁄ 	
switch
€€ 
(
€€ 
Application
€€ 
.
€€  
platform
€€  (
)
€€( )
{
‹‹ 
case
›› 
RuntimePlatform
›› $
.
››$ %
Android
››% ,
:
››, -
case
ﬁﬁ 
RuntimePlatform
ﬁﬁ $
.
ﬁﬁ$ %
IPhonePlayer
ﬁﬁ% 1
:
ﬁﬁ1 2
case
ﬂﬂ 
RuntimePlatform
ﬂﬂ $
.
ﬂﬂ$ %
tvOS
ﬂﬂ% )
:
ﬂﬂ) *
case
·· 
RuntimePlatform
·· $
.
··$ %
PS4
··% (
:
··( )
case
„„ 
RuntimePlatform
„„ (
.
„„( )
PS5
„„) ,
:
„„, -
case
ÊÊ 
RuntimePlatform
ÊÊ $
.
ÊÊ$ %
Switch
ÊÊ% +
:
ÊÊ+ ,
return
ÁÁ 
false
ÁÁ  
;
ÁÁ  !
default
ËË 
:
ËË 
return
ÈÈ 
true
ÈÈ 
;
ÈÈ  
}
ÍÍ 
}
ÎÎ 	
public
ÑÑ 
string
ÑÑ 
text
ÑÑ 
{
ÖÖ 	
get
ÜÜ 
{
áá 
return
àà 
m_Text
àà 
;
àà 
}
ââ 
set
ää 
{
ãã 
SetText
åå 
(
åå 
value
åå 
)
åå 
;
åå 
}
çç 
}
éé 	
public
ìì 
void
ìì "
SetTextWithoutNotify
ìì (
(
ìì( )
string
ìì) /
input
ìì0 5
)
ìì5 6
{
îî 	
SetText
ïï 
(
ïï 
input
ïï 
,
ïï 
false
ïï  
)
ïï  !
;
ïï! "
}
ññ 	
void
òò 
SetText
òò 
(
òò 
string
òò 
value
òò !
,
òò! "
bool
òò# '
sendCallback
òò( 4
=
òò5 6
true
òò7 ;
)
òò; <
{
ôô 	
if
öö 
(
öö 
this
öö 
.
öö 
text
öö 
==
öö 
value
öö "
)
öö" #
return
õõ 
;
õõ 
if
ùù 
(
ùù 
value
ùù 
==
ùù 
null
ùù 
)
ùù 
value
ûû 
=
ûû 
$str
ûû 
;
ûû 
value
†† 
=
†† 
value
†† 
.
†† 
Replace
†† !
(
††! "
$str
††" &
,
††& '
string
††( .
.
††. /
Empty
††/ 4
)
††4 5
;
††5 6
m_Text
¢¢ 
=
¢¢ 
value
¢¢ 
;
¢¢ 
if
ΩΩ 
(
ΩΩ 
!
ΩΩ 
Application
ΩΩ 
.
ΩΩ 
	isPlaying
ΩΩ &
)
ΩΩ& '
{
ææ .
 SendOnValueChangedAndUpdateLabel
øø 0
(
øø0 1
)
øø1 2
;
øø2 3
return
¿¿ 
;
¿¿ 
}
¡¡ 
if
ƒƒ 
(
ƒƒ 
m_SoftKeyboard
ƒƒ 
!=
ƒƒ !
null
ƒƒ" &
)
ƒƒ& '
m_SoftKeyboard
≈≈ 
.
≈≈ 
text
≈≈ #
=
≈≈$ %
m_Text
≈≈& ,
;
≈≈, -
if
«« 
(
«« 
m_StringPosition
««  
>
««! "
m_Text
««# )
.
««) *
Length
««* 0
)
««0 1
m_StringPosition
»»  
=
»»! "$
m_StringSelectPosition
»»# 9
=
»»: ;
m_Text
»»< B
.
»»B C
Length
»»C I
;
»»I J
else
…… 
if
…… 
(
…… $
m_StringSelectPosition
…… +
>
……, -
m_Text
……. 4
.
……4 5
Length
……5 ;
)
……; <$
m_StringSelectPosition
   &
=
  ' (
m_Text
  ) /
.
  / 0
Length
  0 6
;
  6 7,
m_forceRectTransformAdjustment
ÃÃ *
=
ÃÃ+ ,
true
ÃÃ- 1
;
ÃÃ1 2-
m_IsTextComponentUpdateRequired
ŒŒ +
=
ŒŒ, -
true
ŒŒ. 2
;
ŒŒ2 3
UpdateLabel
œœ 
(
œœ 
)
œœ 
;
œœ 
if
—— 
(
—— 
sendCallback
—— 
)
——  
SendOnValueChanged
““ "
(
““" #
)
““# $
;
““$ %
}
”” 	
public
÷÷ 
bool
÷÷ 
	isFocused
÷÷ 
{
◊◊ 	
get
ÿÿ 
{
ÿÿ 
return
ÿÿ 
m_AllowInput
ÿÿ %
;
ÿÿ% &
}
ÿÿ' (
}
ŸŸ 	
public
€€ 
float
€€ 
caretBlinkRate
€€ #
{
‹‹ 	
get
›› 
{
›› 
return
›› 
m_CaretBlinkRate
›› )
;
››) *
}
››+ ,
set
ﬁﬁ 
{
ﬂﬂ 
if
‡‡ 
(
‡‡  
SetPropertyUtility
‡‡ &
.
‡‡& '
	SetStruct
‡‡' 0
(
‡‡0 1
ref
‡‡1 4
m_CaretBlinkRate
‡‡5 E
,
‡‡E F
value
‡‡G L
)
‡‡L M
)
‡‡M N
{
·· 
if
‚‚ 
(
‚‚ 
m_AllowInput
‚‚ $
)
‚‚$ %
SetCaretActive
„„ &
(
„„& '
)
„„' (
;
„„( )
}
‰‰ 
}
ÂÂ 
}
ÊÊ 	
public
ËË 
int
ËË 

caretWidth
ËË 
{
ËË 
get
ËË  #
{
ËË$ %
return
ËË& ,
m_CaretWidth
ËË- 9
;
ËË9 :
}
ËË; <
set
ËË= @
{
ËËA B
if
ËËC E
(
ËËF G 
SetPropertyUtility
ËËG Y
.
ËËY Z
	SetStruct
ËËZ c
(
ËËc d
ref
ËËd g
m_CaretWidth
ËËh t
,
ËËt u
value
ËËv {
)
ËË{ |
)
ËË| }"
MarkGeometryAsDirtyËË~ ë
(ËËë í
)ËËí ì
;ËËì î
}ËËï ñ
}ËËó ò
public
ÍÍ 
RectTransform
ÍÍ 
textViewport
ÍÍ )
{
ÍÍ* +
get
ÍÍ, /
{
ÍÍ0 1
return
ÍÍ2 8
m_TextViewport
ÍÍ9 G
;
ÍÍG H
}
ÍÍI J
set
ÍÍK N
{
ÍÍO P 
SetPropertyUtility
ÍÍQ c
.
ÍÍc d
SetClass
ÍÍd l
(
ÍÍl m
ref
ÍÍm p
m_TextViewport
ÍÍq 
,ÍÍ Ä
valueÍÍÅ Ü
)ÍÍÜ á
;ÍÍá à
}ÍÍâ ä
}ÍÍã å
public
ÏÏ 
TMP_Text
ÏÏ 
textComponent
ÏÏ %
{
ÌÌ 	
get
ÓÓ 
{
ÓÓ 
return
ÓÓ 
m_TextComponent
ÓÓ (
;
ÓÓ( )
}
ÓÓ* +
set
ÔÔ 
{
 
if
ÒÒ 
(
ÒÒ  
SetPropertyUtility
ÒÒ &
.
ÒÒ& '
SetClass
ÒÒ' /
(
ÒÒ/ 0
ref
ÒÒ0 3
m_TextComponent
ÒÒ4 C
,
ÒÒC D
value
ÒÒE J
)
ÒÒJ K
)
ÒÒK L
{
ÚÚ &
SetTextComponentWrapMode
ÛÛ ,
(
ÛÛ, -
)
ÛÛ- .
;
ÛÛ. /
}
ÙÙ 
}
ıı 
}
ˆˆ 	
public
˙˙ 
Graphic
˙˙ 
placeholder
˙˙ "
{
˙˙# $
get
˙˙% (
{
˙˙) *
return
˙˙+ 1
m_Placeholder
˙˙2 ?
;
˙˙? @
}
˙˙A B
set
˙˙C F
{
˙˙G H 
SetPropertyUtility
˙˙I [
.
˙˙[ \
SetClass
˙˙\ d
(
˙˙d e
ref
˙˙e h
m_Placeholder
˙˙i v
,
˙˙v w
value
˙˙x }
)
˙˙} ~
;
˙˙~ 
}˙˙Ä Å
}˙˙Ç É
public
¸¸ 
	Scrollbar
¸¸ 
verticalScrollbar
¸¸ *
{
˝˝ 	
get
˛˛ 
{
˛˛ 
return
˛˛ !
m_VerticalScrollbar
˛˛ ,
;
˛˛, -
}
˛˛. /
set
ˇˇ 
{
ÄÄ 
if
ÅÅ 
(
ÅÅ !
m_VerticalScrollbar
ÅÅ '
!=
ÅÅ( *
null
ÅÅ+ /
)
ÅÅ/ 0!
m_VerticalScrollbar
ÇÇ '
.
ÇÇ' (
onValueChanged
ÇÇ( 6
.
ÇÇ6 7
RemoveListener
ÇÇ7 E
(
ÇÇE F$
OnScrollbarValueChange
ÇÇF \
)
ÇÇ\ ]
;
ÇÇ] ^ 
SetPropertyUtility
ÑÑ "
.
ÑÑ" #
SetClass
ÑÑ# +
(
ÑÑ+ ,
ref
ÑÑ, /!
m_VerticalScrollbar
ÑÑ0 C
,
ÑÑC D
value
ÑÑE J
)
ÑÑJ K
;
ÑÑK L
if
ÜÜ 
(
ÜÜ !
m_VerticalScrollbar
ÜÜ '
)
ÜÜ' (
{
áá !
m_VerticalScrollbar
àà '
.
àà' (
onValueChanged
àà( 6
.
àà6 7
AddListener
àà7 B
(
ààB C$
OnScrollbarValueChange
ààC Y
)
ààY Z
;
ààZ [
}
ää 
}
ãã 
}
åå 	
public
éé 
float
éé 
scrollSensitivity
éé &
{
éé' (
get
éé) ,
{
éé- .
return
éé/ 5!
m_ScrollSensitivity
éé6 I
;
ééI J
}
ééK L
set
ééM P
{
ééQ R
if
ééS U
(
ééV W 
SetPropertyUtility
ééW i
.
ééi j
	SetStruct
ééj s
(
éés t
ref
éét w"
m_ScrollSensitivityééx ã
,ééã å
valueééç í
)ééí ì
)ééì î#
MarkGeometryAsDirtyééï ®
(éé® ©
)éé© ™
;éé™ ´
}éé¨ ≠
}ééÆ Ø
public
êê 
Color
êê 

caretColor
êê 
{
êê  !
get
êê" %
{
êê& '
return
êê( .
customCaretColor
êê/ ?
?
êê@ A
m_CaretColor
êêB N
:
êêO P
textComponent
êêQ ^
.
êê^ _
color
êê_ d
;
êêd e
}
êêf g
set
êêh k
{
êêl m
if
êên p
(
êêq r!
SetPropertyUtilityêêr Ñ
.êêÑ Ö
SetColorêêÖ ç
(êêç é
refêêé ë
m_CaretColorêêí û
,êêû ü
valueêê† •
)êê• ¶
)êê¶ ß#
MarkGeometryAsDirtyêê® ª
(êêª º
)êêº Ω
;êêΩ æ
}êêø ¿
}êê¡ ¬
public
íí 
bool
íí 
customCaretColor
íí $
{
íí% &
get
íí' *
{
íí+ ,
return
íí- 3 
m_CustomCaretColor
íí4 F
;
ííF G
}
ííH I
set
ííJ M
{
ííN O
if
ííP R
(
ííS T 
m_CustomCaretColor
ííT f
!=
ííg i
value
ííj o
)
íío p
{
ííq r!
m_CustomCaretColoríís Ö
=ííÜ á
valueííà ç
;ííç é#
MarkGeometryAsDirtyííè ¢
(íí¢ £
)íí£ §
;íí§ •
}íí¶ ß
}íí® ©
}íí™ ´
public
îî 
Color
îî 
selectionColor
îî #
{
îî$ %
get
îî& )
{
îî* +
return
îî, 2
m_SelectionColor
îî3 C
;
îîC D
}
îîE F
set
îîG J
{
îîK L
if
îîM O
(
îîP Q 
SetPropertyUtility
îîQ c
.
îîc d
SetColor
îîd l
(
îîl m
ref
îîm p
m_SelectionColorîîq Å
,îîÅ Ç
valueîîÉ à
)îîà â
)îîâ ä#
MarkGeometryAsDirtyîîã û
(îîû ü
)îîü †
;îî† °
}îî¢ £
}îî§ •
public
ññ 
SubmitEvent
ññ 
	onEndEdit
ññ $
{
ññ% &
get
ññ' *
{
ññ+ ,
return
ññ- 3
m_OnEndEdit
ññ4 ?
;
ññ? @
}
ññA B
set
ññC F
{
ññG H 
SetPropertyUtility
ññI [
.
ññ[ \
SetClass
ññ\ d
(
ññd e
ref
ññe h
m_OnEndEdit
ññi t
,
ññt u
value
ññv {
)
ññ{ |
;
ññ| }
}
ññ~ 
}ññÄ Å
public
òò 
SubmitEvent
òò 
onSubmit
òò #
{
òò$ %
get
òò& )
{
òò* +
return
òò, 2

m_OnSubmit
òò3 =
;
òò= >
}
òò? @
set
òòA D
{
òòE F 
SetPropertyUtility
òòG Y
.
òòY Z
SetClass
òòZ b
(
òòb c
ref
òòc f

m_OnSubmit
òòg q
,
òòq r
value
òòs x
)
òòx y
;
òòy z
}
òò{ |
}
òò} ~
public
öö 
SelectionEvent
öö 
onSelect
öö &
{
öö' (
get
öö) ,
{
öö- .
return
öö/ 5

m_OnSelect
öö6 @
;
öö@ A
}
ööB C
set
ööD G
{
ööH I 
SetPropertyUtility
ööJ \
.
öö\ ]
SetClass
öö] e
(
ööe f
ref
ööf i

m_OnSelect
ööj t
,
ööt u
value
ööv {
)
öö{ |
;
öö| }
}
öö~ 
}ööÄ Å
public
úú 
SelectionEvent
úú 

onDeselect
úú (
{
úú) *
get
úú+ .
{
úú/ 0
return
úú1 7
m_OnDeselect
úú8 D
;
úúD E
}
úúF G
set
úúH K
{
úúL M 
SetPropertyUtility
úúN `
.
úú` a
SetClass
úúa i
(
úúi j
ref
úúj m
m_OnDeselect
úún z
,
úúz {
valueúú| Å
)úúÅ Ç
;úúÇ É
}úúÑ Ö
}úúÜ á
public
ûû  
TextSelectionEvent
ûû !
onTextSelection
ûû" 1
{
ûû2 3
get
ûû4 7
{
ûû8 9
return
ûû: @
m_OnTextSelection
ûûA R
;
ûûR S
}
ûûT U
set
ûûV Y
{
ûûZ [ 
SetPropertyUtility
ûû\ n
.
ûûn o
SetClass
ûûo w
(
ûûw x
ref
ûûx { 
m_OnTextSelectionûû| ç
,ûûç é
valueûûè î
)ûûî ï
;ûûï ñ
}ûûó ò
}ûûô ö
public
††  
TextSelectionEvent
†† ! 
onEndTextSelection
††" 4
{
††5 6
get
††7 :
{
††; <
return
††= C"
m_OnEndTextSelection
††D X
;
††X Y
}
††Z [
set
††\ _
{
††` a 
SetPropertyUtility
††b t
.
††t u
SetClass
††u }
(
††} ~
ref††~ Å$
m_OnEndTextSelection††Ç ñ
,††ñ ó
value††ò ù
)††ù û
;††û ü
}††† °
}††¢ £
public
¢¢ 
OnChangeEvent
¢¢ 
onValueChanged
¢¢ +
{
¢¢, -
get
¢¢. 1
{
¢¢2 3
return
¢¢4 :
m_OnValueChanged
¢¢; K
;
¢¢K L
}
¢¢M N
set
¢¢O R
{
¢¢S T 
SetPropertyUtility
¢¢U g
.
¢¢g h
SetClass
¢¢h p
(
¢¢p q
ref
¢¢q t
m_OnValueChanged¢¢u Ö
,¢¢Ö Ü
value¢¢á å
)¢¢å ç
;¢¢ç é
}¢¢è ê
}¢¢ë í
public
§§ &
TouchScreenKeyboardEvent
§§ '0
"onTouchScreenKeyboardStatusChanged
§§( J
{
§§K L
get
§§M P
{
§§Q R
return
§§S Y2
$m_OnTouchScreenKeyboardStatusChanged
§§Z ~
;
§§~ 
}§§Ä Å
set§§Ç Ö
{§§Ü á"
SetPropertyUtility§§à ö
.§§ö õ
SetClass§§õ £
(§§£ §
ref§§§ ß4
$m_OnTouchScreenKeyboardStatusChanged§§® Ã
,§§Ã Õ
value§§Œ ”
)§§” ‘
;§§‘ ’
}§§÷ ◊
}§§ÿ Ÿ
public
¶¶ 
OnValidateInput
¶¶ 
onValidateInput
¶¶ .
{
¶¶/ 0
get
¶¶1 4
{
¶¶5 6
return
¶¶7 =
m_OnValidateInput
¶¶> O
;
¶¶O P
}
¶¶Q R
set
¶¶S V
{
¶¶W X 
SetPropertyUtility
¶¶Y k
.
¶¶k l
SetClass
¶¶l t
(
¶¶t u
ref
¶¶u x 
m_OnValidateInput¶¶y ä
,¶¶ä ã
value¶¶å ë
)¶¶ë í
;¶¶í ì
}¶¶î ï
}¶¶ñ ó
public
®® 
int
®® 
characterLimit
®® !
{
©© 	
get
™™ 
{
™™ 
return
™™ 
m_CharacterLimit
™™ )
;
™™) *
}
™™+ ,
set
´´ 
{
¨¨ 
if
≠≠ 
(
≠≠  
SetPropertyUtility
≠≠ &
.
≠≠& '
	SetStruct
≠≠' 0
(
≠≠0 1
ref
≠≠1 4
m_CharacterLimit
≠≠5 E
,
≠≠E F
Math
≠≠G K
.
≠≠K L
Max
≠≠L O
(
≠≠O P
$num
≠≠P Q
,
≠≠Q R
value
≠≠S X
)
≠≠X Y
)
≠≠Y Z
)
≠≠Z [
{
ÆÆ 
UpdateLabel
ØØ 
(
ØØ  
)
ØØ  !
;
ØØ! "
if
∞∞ 
(
∞∞ 
m_SoftKeyboard
∞∞ &
!=
∞∞' )
null
∞∞* .
)
∞∞. /
m_SoftKeyboard
±± &
.
±±& '
characterLimit
±±' 5
=
±±6 7
value
±±8 =
;
±±= >
}
≤≤ 
}
≥≥ 
}
¥¥ 	
public
ªª 
float
ªª 
	pointSize
ªª 
{
ºº 	
get
ΩΩ 
{
ΩΩ 
return
ΩΩ 
m_GlobalPointSize
ΩΩ *
;
ΩΩ* +
}
ΩΩ, -
set
ææ 
{
øø 
if
¿¿ 
(
¿¿  
SetPropertyUtility
¿¿ &
.
¿¿& '
	SetStruct
¿¿' 0
(
¿¿0 1
ref
¿¿1 4
m_GlobalPointSize
¿¿5 F
,
¿¿F G
Math
¿¿H L
.
¿¿L M
Max
¿¿M P
(
¿¿P Q
$num
¿¿Q R
,
¿¿R S
value
¿¿T Y
)
¿¿Y Z
)
¿¿Z [
)
¿¿[ \
{
¡¡  
SetGlobalPointSize
¬¬ &
(
¬¬& '
m_GlobalPointSize
¬¬' 8
)
¬¬8 9
;
¬¬9 :
UpdateLabel
√√ 
(
√√  
)
√√  !
;
√√! "
}
ƒƒ 
}
≈≈ 
}
∆∆ 	
public
ÀÀ 
TMP_FontAsset
ÀÀ 
	fontAsset
ÀÀ &
{
ÃÃ 	
get
ÕÕ 
{
ÕÕ 
return
ÕÕ 
m_GlobalFontAsset
ÕÕ *
;
ÕÕ* +
}
ÕÕ, -
set
ŒŒ 
{
œœ 
if
–– 
(
––  
SetPropertyUtility
–– &
.
––& '
SetClass
––' /
(
––/ 0
ref
––0 3
m_GlobalFontAsset
––4 E
,
––E F
value
––G L
)
––L M
)
––M N
{
——  
SetGlobalFontAsset
““ &
(
““& '
m_GlobalFontAsset
““' 8
)
““8 9
;
““9 :
UpdateLabel
”” 
(
””  
)
””  !
;
””! "
}
‘‘ 
}
’’ 
}
÷÷ 	
[
◊◊ 	
SerializeField
◊◊	 
]
◊◊ 
	protected
ÿÿ 
TMP_FontAsset
ÿÿ 
m_GlobalFontAsset
ÿÿ  1
;
ÿÿ1 2
public
›› 
bool
›› 
onFocusSelectAll
›› $
{
ﬁﬁ 	
get
ﬂﬂ 
{
ﬂﬂ 
return
ﬂﬂ  
m_OnFocusSelectAll
ﬂﬂ +
;
ﬂﬂ+ ,
}
ﬂﬂ- .
set
‡‡ 
{
‡‡  
m_OnFocusSelectAll
‡‡ $
=
‡‡% &
value
‡‡' ,
;
‡‡, -
}
‡‡. /
}
·· 	
[
‚‚ 	
SerializeField
‚‚	 
]
‚‚ 
	protected
„„ 
bool
„„  
m_OnFocusSelectAll
„„ )
=
„„* +
true
„„, 0
;
„„0 1
	protected
‰‰ 
bool
‰‰ 
m_isSelectAll
‰‰ $
;
‰‰$ %
public
ÈÈ 
bool
ÈÈ !
resetOnDeActivation
ÈÈ '
{
ÍÍ 	
get
ÎÎ 
{
ÎÎ 
return
ÎÎ #
m_ResetOnDeActivation
ÎÎ .
;
ÎÎ. /
}
ÎÎ0 1
set
ÏÏ 
{
ÏÏ #
m_ResetOnDeActivation
ÏÏ '
=
ÏÏ( )
value
ÏÏ* /
;
ÏÏ/ 0
}
ÏÏ1 2
}
ÌÌ 	
[
ÓÓ 	
SerializeField
ÓÓ	 
]
ÓÓ 
	protected
ÔÔ 
bool
ÔÔ #
m_ResetOnDeActivation
ÔÔ ,
=
ÔÔ- .
true
ÔÔ/ 3
;
ÔÔ3 4
private
 
bool
 $
m_SelectionStillActive
 +
=
, -
false
. 3
;
3 4
private
ÒÒ 
bool
ÒÒ  
m_ReleaseSelection
ÒÒ '
=
ÒÒ( )
false
ÒÒ* /
;
ÒÒ/ 0
private
ÛÛ 

GameObject
ÛÛ (
m_PreviouslySelectedObject
ÛÛ 5
;
ÛÛ5 6
public
¯¯ 
bool
¯¯ )
restoreOriginalTextOnEscape
¯¯ /
{
˘˘ 	
get
˙˙ 
{
˙˙ 
return
˙˙ +
m_RestoreOriginalTextOnEscape
˙˙ 6
;
˙˙6 7
}
˙˙8 9
set
˚˚ 
{
˚˚ +
m_RestoreOriginalTextOnEscape
˚˚ /
=
˚˚0 1
value
˚˚2 7
;
˚˚7 8
}
˚˚9 :
}
¸¸ 	
[
˝˝ 	
SerializeField
˝˝	 
]
˝˝ 
private
˛˛ 
bool
˛˛ +
m_RestoreOriginalTextOnEscape
˛˛ 2
=
˛˛3 4
true
˛˛5 9
;
˛˛9 :
public
ÉÉ 
bool
ÉÉ &
isRichTextEditingAllowed
ÉÉ ,
{
ÑÑ 	
get
ÖÖ 
{
ÖÖ 
return
ÖÖ (
m_isRichTextEditingAllowed
ÖÖ 3
;
ÖÖ3 4
}
ÖÖ5 6
set
ÜÜ 
{
ÜÜ (
m_isRichTextEditingAllowed
ÜÜ ,
=
ÜÜ- .
value
ÜÜ/ 4
;
ÜÜ4 5
}
ÜÜ6 7
}
áá 	
[
àà 	
SerializeField
àà	 
]
àà 
	protected
ââ 
bool
ââ (
m_isRichTextEditingAllowed
ââ 1
=
ââ2 3
false
ââ4 9
;
ââ9 :
public
çç 
ContentType
çç 
contentType
çç &
{
çç' (
get
çç) ,
{
çç- .
return
çç/ 5
m_ContentType
çç6 C
;
ççC D
}
ççE F
set
ççG J
{
ççK L
if
ççM O
(
ççP Q 
SetPropertyUtility
ççQ c
.
ççc d
	SetStruct
ççd m
(
ççm n
ref
ççn q
m_ContentType
ççr 
,çç Ä
valueççÅ Ü
)ççÜ á
)ççá à"
EnforceContentTypeççâ õ
(ççõ ú
)ççú ù
;ççù û
}ççü †
}çç° ¢
public
èè 
LineType
èè 
lineType
èè  
{
êê 	
get
ëë 
{
ëë 
return
ëë 

m_LineType
ëë #
;
ëë# $
}
ëë% &
set
íí 
{
ìì 
if
îî 
(
îî  
SetPropertyUtility
îî &
.
îî& '
	SetStruct
îî' 0
(
îî0 1
ref
îî1 4

m_LineType
îî5 ?
,
îî? @
value
îîA F
)
îîF G
)
îîG H
{
ïï +
SetToCustomIfContentTypeIsNot
ññ 1
(
ññ1 2
ContentType
ññ2 =
.
ññ= >
Standard
ññ> F
,
ññF G
ContentType
ññH S
.
ññS T
Autocorrected
ññT a
)
ñña b
;
ññb c&
SetTextComponentWrapMode
óó ,
(
óó, -
)
óó- .
;
óó. /
}
òò 
}
ôô 
}
öö 	
public
üü 
int
üü 
	lineLimit
üü 
{
†† 	
get
°° 
{
°° 
return
°° 
m_LineLimit
°° $
;
°°$ %
}
°°& '
set
¢¢ 
{
££ 
if
§§ 
(
§§ 

m_LineType
§§ 
==
§§ !
LineType
§§" *
.
§§* +

SingleLine
§§+ 5
)
§§5 6
m_LineLimit
•• 
=
••  !
$num
••" #
;
••# $
else
¶¶  
SetPropertyUtility
ßß &
.
ßß& '
	SetStruct
ßß' 0
(
ßß0 1
ref
ßß1 4
m_LineLimit
ßß5 @
,
ßß@ A
value
ßßB G
)
ßßG H
;
ßßH I
}
©© 
}
™™ 	
[
´´ 	
SerializeField
´´	 
]
´´ 
	protected
¨¨ 
int
¨¨ 
m_LineLimit
¨¨ !
=
¨¨" #
$num
¨¨$ %
;
¨¨% &
public
ÆÆ 
	InputType
ÆÆ 
	inputType
ÆÆ "
{
ÆÆ# $
get
ÆÆ% (
{
ÆÆ) *
return
ÆÆ+ 1
m_InputType
ÆÆ2 =
;
ÆÆ= >
}
ÆÆ? @
set
ÆÆA D
{
ÆÆE F
if
ÆÆG I
(
ÆÆJ K 
SetPropertyUtility
ÆÆK ]
.
ÆÆ] ^
	SetStruct
ÆÆ^ g
(
ÆÆg h
ref
ÆÆh k
m_InputType
ÆÆl w
,
ÆÆw x
value
ÆÆy ~
)
ÆÆ~ 
)ÆÆ Ä
SetToCustomÆÆÅ å
(ÆÆå ç
)ÆÆç é
;ÆÆé è
}ÆÆê ë
}ÆÆí ì
public
∞∞ %
TouchScreenKeyboardType
∞∞ &
keyboardType
∞∞' 3
{
±± 	
get
≤≤ 
{
≤≤ 
return
≤≤ 
m_KeyboardType
≤≤ '
;
≤≤' (
}
≤≤) *
set
≥≥ 
{
¥¥ 
if
µµ 
(
µµ  
SetPropertyUtility
µµ &
.
µµ& '
	SetStruct
µµ' 0
(
µµ0 1
ref
µµ1 4
m_KeyboardType
µµ5 C
,
µµC D
value
µµE J
)
µµJ K
)
µµK L
SetToCustom
∂∂ 
(
∂∂  
)
∂∂  !
;
∂∂! "
}
∑∑ 
}
∏∏ 	
public
∫∫ !
CharacterValidation
∫∫ "!
characterValidation
∫∫# 6
{
∫∫7 8
get
∫∫9 <
{
∫∫= >
return
∫∫? E#
m_CharacterValidation
∫∫F [
;
∫∫[ \
}
∫∫] ^
set
∫∫_ b
{
∫∫c d
if
∫∫e g
(
∫∫h i 
SetPropertyUtility
∫∫i {
.
∫∫{ |
	SetStruct∫∫| Ö
(∫∫Ö Ü
ref∫∫Ü â%
m_CharacterValidation∫∫ä ü
,∫∫ü †
value∫∫° ¶
)∫∫¶ ß
)∫∫ß ®
SetToCustom∫∫© ¥
(∫∫¥ µ
)∫∫µ ∂
;∫∫∂ ∑
}∫∫∏ π
}∫∫∫ ª
public
øø  
TMP_InputValidator
øø !
inputValidator
øø" 0
{
¿¿ 	
get
¡¡ 
{
¡¡ 
return
¡¡ 
m_InputValidator
¡¡ )
;
¡¡) *
}
¡¡+ ,
set
¬¬ 
{
¬¬ 
if
¬¬ 
(
¬¬  
SetPropertyUtility
¬¬ )
.
¬¬) *
SetClass
¬¬* 2
(
¬¬2 3
ref
¬¬3 6
m_InputValidator
¬¬7 G
,
¬¬G H
value
¬¬I N
)
¬¬N O
)
¬¬O P
SetToCustom
¬¬Q \
(
¬¬\ ]!
CharacterValidation
¬¬] p
.
¬¬p q
CustomValidator¬¬q Ä
)¬¬Ä Å
;¬¬Å Ç
}¬¬É Ñ
}
√√ 	
[
ƒƒ 	
SerializeField
ƒƒ	 
]
ƒƒ 
	protected
≈≈  
TMP_InputValidator
≈≈ $
m_InputValidator
≈≈% 5
=
≈≈6 7
null
≈≈8 <
;
≈≈< =
public
«« 
bool
«« 
readOnly
«« 
{
«« 
get
«« "
{
««# $
return
««% +

m_ReadOnly
««, 6
;
««6 7
}
««8 9
set
««: =
{
««> ?

m_ReadOnly
««@ J
=
««K L
value
««M R
;
««R S
}
««T U
}
««V W
public
…… 
bool
…… 
richText
…… 
{
…… 
get
…… "
{
……# $
return
……% +

m_RichText
……, 6
;
……6 7
}
……8 9
set
……: =
{
……> ?

m_RichText
……@ J
=
……K L
value
……M R
;
……R S*
SetTextComponentRichTextMode
……T p
(
……p q
)
……q r
;
……r s
}
……t u
}
……v w
public
ÃÃ 
bool
ÃÃ 
	multiLine
ÃÃ 
{
ÃÃ 
get
ÃÃ  #
{
ÃÃ$ %
return
ÃÃ& ,

m_LineType
ÃÃ- 7
==
ÃÃ8 :
LineType
ÃÃ; C
.
ÃÃC D
MultiLineNewline
ÃÃD T
||
ÃÃU W
lineType
ÃÃX `
==
ÃÃa c
LineType
ÃÃd l
.
ÃÃl m
MultiLineSubmit
ÃÃm |
;
ÃÃ| }
}
ÃÃ~ 
}ÃÃÄ Å
public
ŒŒ 
char
ŒŒ 
asteriskChar
ŒŒ  
{
ŒŒ! "
get
ŒŒ# &
{
ŒŒ' (
return
ŒŒ) /
m_AsteriskChar
ŒŒ0 >
;
ŒŒ> ?
}
ŒŒ@ A
set
ŒŒB E
{
ŒŒF G
if
ŒŒH J
(
ŒŒK L 
SetPropertyUtility
ŒŒL ^
.
ŒŒ^ _
	SetStruct
ŒŒ_ h
(
ŒŒh i
ref
ŒŒi l
m_AsteriskChar
ŒŒm {
,
ŒŒ{ |
valueŒŒ} Ç
)ŒŒÇ É
)ŒŒÉ Ñ
UpdateLabelŒŒÖ ê
(ŒŒê ë
)ŒŒë í
;ŒŒí ì
}ŒŒî ï
}ŒŒñ ó
public
œœ 
bool
œœ 
wasCanceled
œœ 
{
œœ  !
get
œœ" %
{
œœ& '
return
œœ( .
m_WasCanceled
œœ/ <
;
œœ< =
}
œœ> ?
}
œœ@ A
	protected
““ 
void
““ 
ClampStringPos
““ %
(
““% &
ref
““& )
int
““* -
pos
““. 1
)
““1 2
{
”” 	
if
‘‘ 
(
‘‘ 
pos
‘‘ 
<
‘‘ 
$num
‘‘ 
)
‘‘ 
pos
’’ 
=
’’ 
$num
’’ 
;
’’ 
else
÷÷ 
if
÷÷ 
(
÷÷ 
pos
÷÷ 
>
÷÷ 
text
÷÷ 
.
÷÷  
Length
÷÷  &
)
÷÷& '
pos
◊◊ 
=
◊◊ 
text
◊◊ 
.
◊◊ 
Length
◊◊ !
;
◊◊! "
}
ÿÿ 	
	protected
⁄⁄ 
void
⁄⁄ 
ClampCaretPos
⁄⁄ $
(
⁄⁄$ %
ref
⁄⁄% (
int
⁄⁄) ,
pos
⁄⁄- 0
)
⁄⁄0 1
{
€€ 	
if
‹‹ 
(
‹‹ 
pos
‹‹ 
<
‹‹ 
$num
‹‹ 
)
‹‹ 
pos
›› 
=
›› 
$num
›› 
;
›› 
else
ﬁﬁ 
if
ﬁﬁ 
(
ﬁﬁ 
pos
ﬁﬁ 
>
ﬁﬁ 
m_TextComponent
ﬁﬁ *
.
ﬁﬁ* +
textInfo
ﬁﬁ+ 3
.
ﬁﬁ3 4
characterCount
ﬁﬁ4 B
-
ﬁﬁC D
$num
ﬁﬁE F
)
ﬁﬁF G
pos
ﬂﬂ 
=
ﬂﬂ 
m_TextComponent
ﬂﬂ %
.
ﬂﬂ% &
textInfo
ﬂﬂ& .
.
ﬂﬂ. /
characterCount
ﬂﬂ/ =
-
ﬂﬂ> ?
$num
ﬂﬂ@ A
;
ﬂﬂA B
}
‡‡ 	
	protected
ÁÁ 
int
ÁÁ #
caretPositionInternal
ÁÁ +
{
ÁÁ, -
get
ÁÁ. 1
{
ÁÁ2 3
return
ÁÁ4 :
m_CaretPosition
ÁÁ; J
+
ÁÁK L
compositionLength
ÁÁM ^
;
ÁÁ^ _
}
ÁÁ` a
set
ÁÁb e
{
ÁÁf g
m_CaretPosition
ÁÁh w
=
ÁÁx y
value
ÁÁz 
;ÁÁ Ä
ClampCaretPosÁÁÅ é
(ÁÁé è
refÁÁè í
m_CaretPositionÁÁì ¢
)ÁÁ¢ £
;ÁÁ£ §
}ÁÁ• ¶
}ÁÁß ®
	protected
ËË 
int
ËË $
stringPositionInternal
ËË ,
{
ËË- .
get
ËË/ 2
{
ËË3 4
return
ËË5 ;
m_StringPosition
ËË< L
+
ËËM N
compositionLength
ËËO `
;
ËË` a
}
ËËb c
set
ËËd g
{
ËËh i
m_StringPosition
ËËj z
=
ËË{ |
valueËË} Ç
;ËËÇ É
ClampStringPosËËÑ í
(ËËí ì
refËËì ñ 
m_StringPositionËËó ß
)ËËß ®
;ËË® ©
}ËË™ ´
}ËË¨ ≠
	protected
ÍÍ 
int
ÍÍ )
caretSelectPositionInternal
ÍÍ 1
{
ÍÍ2 3
get
ÍÍ4 7
{
ÍÍ8 9
return
ÍÍ: @#
m_CaretSelectPosition
ÍÍA V
+
ÍÍW X
compositionLength
ÍÍY j
;
ÍÍj k
}
ÍÍl m
set
ÍÍn q
{
ÍÍr s$
m_CaretSelectPositionÍÍt â
=ÍÍä ã
valueÍÍå ë
;ÍÍë í
ClampCaretPosÍÍì †
(ÍÍ† °
refÍÍ° §%
m_CaretSelectPositionÍÍ• ∫
)ÍÍ∫ ª
;ÍÍª º
}ÍÍΩ æ
}ÍÍø ¿
	protected
ÎÎ 
int
ÎÎ *
stringSelectPositionInternal
ÎÎ 2
{
ÎÎ3 4
get
ÎÎ5 8
{
ÎÎ9 :
return
ÎÎ; A$
m_StringSelectPosition
ÎÎB X
+
ÎÎY Z
compositionLength
ÎÎ[ l
;
ÎÎl m
}
ÎÎn o
set
ÎÎp s
{
ÎÎt u%
m_StringSelectPositionÎÎv å
=ÎÎç é
valueÎÎè î
;ÎÎî ï
ClampStringPosÎÎñ §
(ÎÎ§ •
refÎÎ• ®&
m_StringSelectPositionÎÎ© ø
)ÎÎø ¿
;ÎÎ¿ ¡
}ÎÎ¬ √
}ÎÎƒ ≈
private
ÌÌ 
bool
ÌÌ 
hasSelection
ÌÌ !
{
ÌÌ" #
get
ÌÌ$ '
{
ÌÌ( )
return
ÌÌ* 0$
stringPositionInternal
ÌÌ1 G
!=
ÌÌH J*
stringSelectPositionInternal
ÌÌK g
;
ÌÌg h
}
ÌÌi j
}
ÌÌk l
private
ÓÓ 
bool
ÓÓ 
m_isSelected
ÓÓ !
;
ÓÓ! "
private
ÔÔ 
bool
ÔÔ %
m_IsStringPositionDirty
ÔÔ ,
;
ÔÔ, -
private
 
bool
 $
m_IsCaretPositionDirty
 +
;
+ ,
private
ÒÒ 
bool
ÒÒ ,
m_forceRectTransformAdjustment
ÒÒ 3
;
ÒÒ3 4
public
˜˜ 
int
˜˜ 
caretPosition
˜˜  
{
¯¯ 	
get
˘˘ 
{
˘˘ 
return
˘˘ )
caretSelectPositionInternal
˘˘ 4
;
˘˘4 5
}
˘˘6 7
set
˙˙ 
{
˙˙ %
selectionAnchorPosition
˙˙ )
=
˙˙* +
value
˙˙, 1
;
˙˙1 2$
selectionFocusPosition
˙˙3 I
=
˙˙J K
value
˙˙L Q
;
˙˙Q R%
m_IsStringPositionDirty
˙˙S j
=
˙˙k l
true
˙˙m q
;
˙˙q r
}
˙˙s t
}
˚˚ 	
public
ÅÅ 
int
ÅÅ %
selectionAnchorPosition
ÅÅ *
{
ÇÇ 	
get
ÉÉ 
{
ÑÑ 
return
ÖÖ #
caretPositionInternal
ÖÖ ,
;
ÖÖ, -
}
ÜÜ 
set
àà 
{
ââ 
if
ää 
(
ää 
compositionLength
ää %
!=
ää& (
$num
ää) *
)
ää* +
return
ãã 
;
ãã #
caretPositionInternal
çç %
=
çç& '
value
çç( -
;
çç- .%
m_IsStringPositionDirty
éé '
=
éé( )
true
éé* .
;
éé. /
}
èè 
}
êê 	
public
ññ 
int
ññ $
selectionFocusPosition
ññ )
{
óó 	
get
òò 
{
ôô 
return
öö )
caretSelectPositionInternal
öö 2
;
öö2 3
}
õõ 
set
úú 
{
ùù 
if
ûû 
(
ûû 
compositionLength
ûû %
!=
ûû& (
$num
ûû) *
)
ûû* +
return
üü 
;
üü )
caretSelectPositionInternal
°° +
=
°°, -
value
°°. 3
;
°°3 4%
m_IsStringPositionDirty
¢¢ '
=
¢¢( )
true
¢¢* .
;
¢¢. /
}
££ 
}
§§ 	
public
™™ 
int
™™ 
stringPosition
™™ !
{
´´ 	
get
¨¨ 
{
¨¨ 
return
¨¨ *
stringSelectPositionInternal
¨¨ 5
;
¨¨5 6
}
¨¨7 8
set
≠≠ 
{
≠≠ +
selectionStringAnchorPosition
≠≠ /
=
≠≠0 1
value
≠≠2 7
;
≠≠7 8*
selectionStringFocusPosition
≠≠9 U
=
≠≠V W
value
≠≠X ]
;
≠≠] ^$
m_IsCaretPositionDirty
≠≠_ u
=
≠≠v w
true
≠≠x |
;
≠≠| }
}
≠≠~ 
}
ÆÆ 	
public
¥¥ 
int
¥¥ +
selectionStringAnchorPosition
¥¥ 0
{
µµ 	
get
∂∂ 
{
∑∑ 
return
∏∏ $
stringPositionInternal
∏∏ -
;
∏∏- .
}
ππ 
set
ªª 
{
ºº 
if
ΩΩ 
(
ΩΩ 
compositionLength
ΩΩ %
!=
ΩΩ& (
$num
ΩΩ) *
)
ΩΩ* +
return
ææ 
;
ææ $
stringPositionInternal
¿¿ &
=
¿¿' (
value
¿¿) .
;
¿¿. /$
m_IsCaretPositionDirty
¡¡ &
=
¡¡' (
true
¡¡) -
;
¡¡- .
}
¬¬ 
}
√√ 	
public
…… 
int
…… *
selectionStringFocusPosition
…… /
{
   	
get
ÀÀ 
{
ÃÃ 
return
ÕÕ *
stringSelectPositionInternal
ÕÕ 3
;
ÕÕ3 4
}
ŒŒ 
set
œœ 
{
–– 
if
—— 
(
—— 
compositionLength
—— %
!=
——& (
$num
——) *
)
——* +
return
““ 
;
““ *
stringSelectPositionInternal
‘‘ ,
=
‘‘- .
value
‘‘/ 4
;
‘‘4 5$
m_IsCaretPositionDirty
’’ &
=
’’' (
true
’’) -
;
’’- .
}
÷÷ 
}
◊◊ 	
	protected
›› 
override
›› 
void
›› 

OnValidate
››  *
(
››* +
)
››+ ,
{
ﬁﬁ 	
base
ﬂﬂ 
.
ﬂﬂ 

OnValidate
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ  
EnforceContentType
‡‡ 
(
‡‡ 
)
‡‡  
;
‡‡  !
m_CharacterLimit
‚‚ 
=
‚‚ 
Math
‚‚ #
.
‚‚# $
Max
‚‚$ '
(
‚‚' (
$num
‚‚( )
,
‚‚) *
m_CharacterLimit
‚‚+ ;
)
‚‚; <
;
‚‚< =
if
ÂÂ 
(
ÂÂ 
!
ÂÂ 
IsActive
ÂÂ 
(
ÂÂ 
)
ÂÂ 
)
ÂÂ 
return
ÊÊ 
;
ÊÊ *
SetTextComponentRichTextMode
ËË (
(
ËË( )
)
ËË) *
;
ËË* +
UpdateLabel
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ 
if
ÏÏ 
(
ÏÏ 
m_AllowInput
ÏÏ 
)
ÏÏ 
SetCaretActive
ÌÌ 
(
ÌÌ 
)
ÌÌ  
;
ÌÌ  !
}
ÓÓ 	
	protected
ÒÒ 
override
ÒÒ 
void
ÒÒ 
OnEnable
ÒÒ  (
(
ÒÒ( )
)
ÒÒ) *
{
ÚÚ 	
base
ıı 
.
ıı 
OnEnable
ıı 
(
ıı 
)
ıı 
;
ıı 
if
˜˜ 
(
˜˜ 
m_Text
˜˜ 
==
˜˜ 
null
˜˜ 
)
˜˜ 
m_Text
¯¯ 
=
¯¯ 
string
¯¯ 
.
¯¯  
Empty
¯¯  %
;
¯¯% &
ILayoutController
˚˚ 
layoutController
˚˚ .
=
˚˚/ 0
GetComponent
˚˚1 =
<
˚˚= >
ILayoutController
˚˚> O
>
˚˚O P
(
˚˚P Q
)
˚˚Q R
;
˚˚R S
if
˝˝ 
(
˝˝ 
layoutController
˝˝  
!=
˝˝! #
null
˝˝$ (
)
˝˝( )
{
˛˛ *
m_IsDrivenByLayoutComponents
ˇˇ ,
=
ˇˇ- .
true
ˇˇ/ 3
;
ˇˇ3 4
m_LayoutGroup
ÄÄ 
=
ÄÄ 
GetComponent
ÄÄ  ,
<
ÄÄ, -
LayoutGroup
ÄÄ- 8
>
ÄÄ8 9
(
ÄÄ9 :
)
ÄÄ: ;
;
ÄÄ; <
}
ÅÅ 
else
ÇÇ *
m_IsDrivenByLayoutComponents
ÉÉ ,
=
ÉÉ- .
false
ÉÉ/ 4
;
ÉÉ4 5
if
ÖÖ 
(
ÖÖ 
Application
ÖÖ 
.
ÖÖ 
	isPlaying
ÖÖ %
)
ÖÖ% &
{
ÜÜ 
if
áá 
(
áá #
m_CachedInputRenderer
áá )
==
áá* ,
null
áá- 1
&&
áá2 4
m_TextComponent
áá5 D
!=
ááE G
null
ááH L
)
ááL M
{
àà 

GameObject
ââ 
go
ââ !
=
ââ" #
new
ââ$ '

GameObject
ââ( 2
(
ââ2 3
$str
ââ3 :
,
ââ: ;
typeof
ââ< B
(
ââB C 
TMP_SelectionCaret
ââC U
)
ââU V
)
ââV W
;
ââW X
go
ãã 
.
ãã 
	hideFlags
ãã  
=
ãã! "
	HideFlags
ãã# ,
.
ãã, -
DontSave
ãã- 5
;
ãã5 6
go
åå 
.
åå 
	transform
åå  
.
åå  !
	SetParent
åå! *
(
åå* +
m_TextComponent
åå+ :
.
åå: ;
	transform
åå; D
.
ååD E
parent
ååE K
)
ååK L
;
ååL M
go
çç 
.
çç 
	transform
çç  
.
çç  !
SetAsFirstSibling
çç! 2
(
çç2 3
)
çç3 4
;
çç4 5
go
éé 
.
éé 
layer
éé 
=
éé 

gameObject
éé )
.
éé) *
layer
éé* /
;
éé/ 0
caretRectTrans
êê "
=
êê# $
go
êê% '
.
êê' (
GetComponent
êê( 4
<
êê4 5
RectTransform
êê5 B
>
êêB C
(
êêC D
)
êêD E
;
êêE F#
m_CachedInputRenderer
ëë )
=
ëë* +
go
ëë, .
.
ëë. /
GetComponent
ëë/ ;
<
ëë; <
CanvasRenderer
ëë< J
>
ëëJ K
(
ëëK L
)
ëëL M
;
ëëM N#
m_CachedInputRenderer
íí )
.
íí) *
SetMaterial
íí* 5
(
íí5 6
Graphic
íí6 =
.
íí= >$
defaultGraphicMaterial
íí> T
,
ííT U
	Texture2D
ííV _
.
íí_ `
whiteTexture
íí` l
)
ííl m
;
íím n
go
ïï 
.
ïï 
AddComponent
ïï #
<
ïï# $
LayoutElement
ïï$ 1
>
ïï1 2
(
ïï2 3
)
ïï3 4
.
ïï4 5
ignoreLayout
ïï5 A
=
ïïB C
true
ïïD H
;
ïïH I'
AssignPositioningIfNeeded
óó -
(
óó- .
)
óó. /
;
óó/ 0
}
òò 
}
ôô 
m_RectTransform
õõ 
=
õõ 
GetComponent
õõ *
<
õõ* +
RectTransform
õõ+ 8
>
õõ8 9
(
õõ9 :
)
õõ: ;
;
õõ; <
IScrollHandler
ûû 
[
ûû 
]
ûû 
scrollHandlers
ûû +
=
ûû, -#
GetComponentsInParent
ûû. C
<
ûûC D
IScrollHandler
ûûD R
>
ûûR S
(
ûûS T
)
ûûT U
;
ûûU V
if
üü 
(
üü 
scrollHandlers
üü 
.
üü 
Length
üü %
>
üü& '
$num
üü( )
)
üü) *$
m_IScrollHandlerParent
†† &
=
††' (
scrollHandlers
††) 7
[
††7 8
$num
††8 9
]
††9 :
as
††; =

ScrollRect
††> H
;
††H I
if
££ 
(
££ 
m_TextViewport
££ 
!=
££ !
null
££" &
)
££& '
{
§§ $
m_TextViewportRectMask
•• &
=
••' (
m_TextViewport
••) 7
.
••7 8
GetComponent
••8 D
<
••D E

RectMask2D
••E O
>
••O P
(
••P Q
)
••Q R
;
••R S
UpdateMaskRegions
ßß !
(
ßß! "
)
ßß" #
;
ßß# $
}
®® 
if
´´ 
(
´´ #
m_CachedInputRenderer
´´ %
!=
´´& (
null
´´) -
)
´´- .#
m_CachedInputRenderer
¨¨ %
.
¨¨% &
SetMaterial
¨¨& 1
(
¨¨1 2
Graphic
¨¨2 9
.
¨¨9 :$
defaultGraphicMaterial
¨¨: P
,
¨¨P Q
	Texture2D
¨¨R [
.
¨¨[ \
whiteTexture
¨¨\ h
)
¨¨h i
;
¨¨i j
if
ÆÆ 
(
ÆÆ 
m_TextComponent
ÆÆ 
!=
ÆÆ  "
null
ÆÆ# '
)
ÆÆ' (
{
ØØ 
m_TextComponent
∞∞ 
.
∞∞  +
RegisterDirtyVerticesCallback
∞∞  =
(
∞∞= >!
MarkGeometryAsDirty
∞∞> Q
)
∞∞Q R
;
∞∞R S
m_TextComponent
±± 
.
±±  +
RegisterDirtyVerticesCallback
±±  =
(
±±= >
UpdateLabel
±±> I
)
±±I J
;
±±J K
if
¥¥ 
(
¥¥ !
m_VerticalScrollbar
¥¥ '
!=
¥¥( *
null
¥¥+ /
)
¥¥/ 0
{
µµ !
m_VerticalScrollbar
∂∂ '
.
∂∂' (
onValueChanged
∂∂( 6
.
∂∂6 7
AddListener
∂∂7 B
(
∂∂B C$
OnScrollbarValueChange
∂∂C Y
)
∂∂Y Z
;
∂∂Z [
}
∑∑ 
UpdateLabel
ππ 
(
ππ 
)
ππ 
;
ππ 
}
∫∫  
TMPro_EventManager
ΩΩ 
.
ΩΩ  
TEXT_CHANGED_EVENT
ΩΩ 1
.
ΩΩ1 2
Add
ΩΩ2 5
(
ΩΩ5 6
ON_TEXT_CHANGED
ΩΩ6 E
)
ΩΩE F
;
ΩΩF G
}
ææ 	
	protected
¿¿ 
override
¿¿ 
void
¿¿ 
	OnDisable
¿¿  )
(
¿¿) *
)
¿¿* +
{
¡¡ 	
m_BlinkCoroutine
√√ 
=
√√ 
null
√√ #
;
√√# $"
DeactivateInputField
≈≈  
(
≈≈  !
)
≈≈! "
;
≈≈" #
if
∆∆ 
(
∆∆ 
m_TextComponent
∆∆ 
!=
∆∆  "
null
∆∆# '
)
∆∆' (
{
«« 
m_TextComponent
»» 
.
»»  -
UnregisterDirtyVerticesCallback
»»  ?
(
»»? @!
MarkGeometryAsDirty
»»@ S
)
»»S T
;
»»T U
m_TextComponent
…… 
.
……  -
UnregisterDirtyVerticesCallback
……  ?
(
……? @
UpdateLabel
……@ K
)
……K L
;
……L M
if
ÀÀ 
(
ÀÀ !
m_VerticalScrollbar
ÀÀ '
!=
ÀÀ( *
null
ÀÀ+ /
)
ÀÀ/ 0!
m_VerticalScrollbar
ÃÃ '
.
ÃÃ' (
onValueChanged
ÃÃ( 6
.
ÃÃ6 7
RemoveListener
ÃÃ7 E
(
ÃÃE F$
OnScrollbarValueChange
ÃÃF \
)
ÃÃ\ ]
;
ÃÃ] ^
}
ŒŒ "
CanvasUpdateRegistry
œœ  
.
œœ  !/
!UnRegisterCanvasElementForRebuild
œœ! B
(
œœB C
this
œœC G
)
œœG H
;
œœH I
if
““ 
(
““ #
m_CachedInputRenderer
““ %
!=
““& (
null
““) -
)
““- .#
m_CachedInputRenderer
”” %
.
””% &
Clear
””& +
(
””+ ,
)
””, -
;
””- .
if
’’ 
(
’’ 
m_Mesh
’’ 
!=
’’ 
null
’’ 
)
’’ 
DestroyImmediate
÷÷  
(
÷÷  !
m_Mesh
÷÷! '
)
÷÷' (
;
÷÷( )
m_Mesh
ÿÿ 
=
ÿÿ 
null
ÿÿ 
;
ÿÿ  
TMPro_EventManager
€€ 
.
€€  
TEXT_CHANGED_EVENT
€€ 1
.
€€1 2
Remove
€€2 8
(
€€8 9
ON_TEXT_CHANGED
€€9 H
)
€€H I
;
€€I J
base
›› 
.
›› 
	OnDisable
›› 
(
›› 
)
›› 
;
›› 
}
ﬁﬁ 	
private
ÂÂ 
void
ÂÂ 
ON_TEXT_CHANGED
ÂÂ $
(
ÂÂ$ %
UnityEngine
ÂÂ% 0
.
ÂÂ0 1
Object
ÂÂ1 7
obj
ÂÂ8 ;
)
ÂÂ; <
{
ÊÊ 	
bool
ÁÁ 
isThisObject
ÁÁ 
=
ÁÁ 
obj
ÁÁ  #
==
ÁÁ$ &
m_TextComponent
ÁÁ' 6
;
ÁÁ6 7
if
ÈÈ 
(
ÈÈ 
isThisObject
ÈÈ 
)
ÈÈ 
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
Application
ÎÎ 
.
ÎÎ  
	isPlaying
ÎÎ  )
&&
ÎÎ* ,
compositionLength
ÎÎ- >
==
ÎÎ? A
$num
ÎÎB C
)
ÎÎC D
{
ÏÏ #
caretPositionInternal
ÌÌ )
=
ÌÌ* +-
GetCaretPositionFromStringIndex
ÌÌ, K
(
ÌÌK L$
stringPositionInternal
ÌÌL b
)
ÌÌb c
;
ÌÌc d)
caretSelectPositionInternal
ÓÓ /
=
ÓÓ0 1-
GetCaretPositionFromStringIndex
ÓÓ2 Q
(
ÓÓQ R*
stringSelectPositionInternal
ÓÓR n
)
ÓÓn o
;
ÓÓo p
}
ÛÛ 
if
ıı 
(
ıı !
m_VerticalScrollbar
ıı '
)
ıı' (
UpdateScrollbar
ˆˆ #
(
ˆˆ# $
)
ˆˆ$ %
;
ˆˆ% &
}
˜˜ 
}
¯¯ 	
IEnumerator
˚˚ 

CaretBlink
˚˚ 
(
˚˚ 
)
˚˚  
{
¸¸ 	
m_CaretVisible
˛˛ 
=
˛˛ 
true
˛˛ !
;
˛˛! "
yield
ˇˇ 
return
ˇˇ 
null
ˇˇ 
;
ˇˇ 
while
Å	Å	 
(
Å	Å	 
(
Å	Å	 
	isFocused
Å	Å	 
||
Å	Å	  $
m_SelectionStillActive
Å	Å	! 7
)
Å	Å	7 8
&&
Å	Å	9 ;
m_CaretBlinkRate
Å	Å	< L
>
Å	Å	M N
$num
Å	Å	O P
)
Å	Å	P Q
{
Ç	Ç	 
float
Ñ	Ñ	 
blinkPeriod
Ñ	Ñ	 !
=
Ñ	Ñ	" #
$num
Ñ	Ñ	$ &
/
Ñ	Ñ	' (
m_CaretBlinkRate
Ñ	Ñ	) 9
;
Ñ	Ñ	9 :
bool
á	á	 

blinkState
á	á	 
=
á	á	  !
(
á	á	" #
Time
á	á	# '
.
á	á	' (
unscaledTime
á	á	( 4
-
á	á	5 6
m_BlinkStartTime
á	á	7 G
)
á	á	G H
%
á	á	I J
blinkPeriod
á	á	K V
<
á	á	W X
blinkPeriod
á	á	Y d
/
á	á	e f
$num
á	á	g h
;
á	á	h i
if
à	à	 
(
à	à	 
m_CaretVisible
à	à	 "
!=
à	à	# %

blinkState
à	à	& 0
)
à	à	0 1
{
â	â	 
m_CaretVisible
ä	ä	 "
=
ä	ä	# $

blinkState
ä	ä	% /
;
ä	ä	/ 0
if
ã	ã	 
(
ã	ã	 
!
ã	ã	 
hasSelection
ã	ã	 %
)
ã	ã	% &!
MarkGeometryAsDirty
å	å	 +
(
å	å	+ ,
)
å	å	, -
;
å	å	- .
}
ç	ç	 
yield
ê	ê	 
return
ê	ê	 
null
ê	ê	 !
;
ê	ê	! "
}
ë	ë	 
m_BlinkCoroutine
í	í	 
=
í	í	 
null
í	í	 #
;
í	í	# $
}
ì	ì	 	
void
ï	ï	 
SetCaretVisible
ï	ï	 
(
ï	ï	 
)
ï	ï	 
{
ñ	ñ	 	
if
ó	ó	 
(
ó	ó	 
!
ó	ó	 
m_AllowInput
ó	ó	 
)
ó	ó	 
return
ò	ò	 
;
ò	ò	 
m_CaretVisible
ö	ö	 
=
ö	ö	 
true
ö	ö	 !
;
ö	ö	! "
m_BlinkStartTime
õ	õ	 
=
õ	õ	 
Time
õ	õ	 #
.
õ	õ	# $
unscaledTime
õ	õ	$ 0
;
õ	õ	0 1
SetCaretActive
ú	ú	 
(
ú	ú	 
)
ú	ú	 
;
ú	ú	 
}
ù	ù	 	
void
°	°	 
SetCaretActive
°	°	 
(
°	°	 
)
°	°	 
{
¢	¢	 	
if
£	£	 
(
£	£	 
!
£	£	 
m_AllowInput
£	£	 
)
£	£	 
return
§	§	 
;
§	§	 
if
¶	¶	 
(
¶	¶	 
m_CaretBlinkRate
¶	¶	  
>
¶	¶	! "
$num
¶	¶	# '
)
¶	¶	' (
{
ß	ß	 
if
®	®	 
(
®	®	 
m_BlinkCoroutine
®	®	 $
==
®	®	% '
null
®	®	( ,
)
®	®	, -
m_BlinkCoroutine
©	©	 $
=
©	©	% &
StartCoroutine
©	©	' 5
(
©	©	5 6

CaretBlink
©	©	6 @
(
©	©	@ A
)
©	©	A B
)
©	©	B C
;
©	©	C D
}
™	™	 
else
´	´	 
{
¨	¨	 
m_CaretVisible
≠	≠	 
=
≠	≠	  
true
≠	≠	! %
;
≠	≠	% &
}
Æ	Æ	 
}
Ø	Ø	 	
	protected
±	±	 
void
±	±	 
OnFocus
±	±	 
(
±	±	 
)
±	±	  
{
≤	≤	 	
if
≥	≥	 
(
≥	≥	  
m_OnFocusSelectAll
≥	≥	 "
)
≥	≥	" #
	SelectAll
¥	¥	 
(
¥	¥	 
)
¥	¥	 
;
¥	¥	 
}
µ	µ	 	
	protected
∑	∑	 
void
∑	∑	 
	SelectAll
∑	∑	  
(
∑	∑	  !
)
∑	∑	! "
{
∏	∏	 	
m_isSelectAll
π	π	 
=
π	π	 
true
π	π	  
;
π	π	  !$
stringPositionInternal
∫	∫	 "
=
∫	∫	# $
text
∫	∫	% )
.
∫	∫	) *
Length
∫	∫	* 0
;
∫	∫	0 1*
stringSelectPositionInternal
ª	ª	 (
=
ª	ª	) *
$num
ª	ª	+ ,
;
ª	ª	, -
}
º	º	 	
public
¬	¬	 
void
¬	¬	 
MoveTextEnd
¬	¬	 
(
¬	¬	  
bool
¬	¬	  $
shift
¬	¬	% *
)
¬	¬	* +
{
√	√	 	
if
ƒ	ƒ	 
(
ƒ	ƒ	 (
m_isRichTextEditingAllowed
ƒ	ƒ	 *
)
ƒ	ƒ	* +
{
≈	≈	 
int
∆	∆	 
position
∆	∆	 
=
∆	∆	 
text
∆	∆	 #
.
∆	∆	# $
Length
∆	∆	$ *
;
∆	∆	* +
if
»	»	 
(
»	»	 
shift
»	»	 
)
»	»	 
{
…	…	 *
stringSelectPositionInternal
 	 	 0
=
 	 	1 2
position
 	 	3 ;
;
 	 	; <
}
À	À	 
else
Ã	Ã	 
{
Õ	Õ	 $
stringPositionInternal
Œ	Œ	 *
=
Œ	Œ	+ ,
position
Œ	Œ	- 5
;
Œ	Œ	5 6*
stringSelectPositionInternal
œ	œ	 0
=
œ	œ	1 2$
stringPositionInternal
œ	œ	3 I
;
œ	œ	I J
}
–	–	 
}
—	—	 
else
“	“	 
{
”	”	 
int
‘	‘	 
position
‘	‘	 
=
‘	‘	 
m_TextComponent
‘	‘	 .
.
‘	‘	. /
textInfo
‘	‘	/ 7
.
‘	‘	7 8
characterCount
‘	‘	8 F
-
‘	‘	G H
$num
‘	‘	I J
;
‘	‘	J K
if
÷	÷	 
(
÷	÷	 
shift
÷	÷	 
)
÷	÷	 
{
◊	◊	 )
caretSelectPositionInternal
ÿ	ÿ	 /
=
ÿ	ÿ	0 1
position
ÿ	ÿ	2 :
;
ÿ	ÿ	: ;*
stringSelectPositionInternal
Ÿ	Ÿ	 0
=
Ÿ	Ÿ	1 2-
GetStringIndexFromCaretPosition
Ÿ	Ÿ	3 R
(
Ÿ	Ÿ	R S
position
Ÿ	Ÿ	S [
)
Ÿ	Ÿ	[ \
;
Ÿ	Ÿ	\ ]
}
⁄	⁄	 
else
€	€	 
{
‹	‹	 #
caretPositionInternal
›	›	 )
=
›	›	* +)
caretSelectPositionInternal
›	›	, G
=
›	›	H I
position
›	›	J R
;
›	›	R S*
stringSelectPositionInternal
ﬁ	ﬁ	 0
=
ﬁ	ﬁ	1 2$
stringPositionInternal
ﬁ	ﬁ	3 I
=
ﬁ	ﬁ	J K-
GetStringIndexFromCaretPosition
ﬁ	ﬁ	L k
(
ﬁ	ﬁ	k l
position
ﬁ	ﬁ	l t
)
ﬁ	ﬁ	t u
;
ﬁ	ﬁ	u v
}
ﬂ	ﬂ	 
}
‡	‡	 
UpdateLabel
‚	‚	 
(
‚	‚	 
)
‚	‚	 
;
‚	‚	 
}
„	„	 	
public
È	È	 
void
È	È	 
MoveTextStart
È	È	 !
(
È	È	! "
bool
È	È	" &
shift
È	È	' ,
)
È	È	, -
{
Í	Í	 	
if
Î	Î	 
(
Î	Î	 (
m_isRichTextEditingAllowed
Î	Î	 *
)
Î	Î	* +
{
Ï	Ï	 
int
Ì	Ì	 
position
Ì	Ì	 
=
Ì	Ì	 
$num
Ì	Ì	  
;
Ì	Ì	  !
if
Ô	Ô	 
(
Ô	Ô	 
shift
Ô	Ô	 
)
Ô	Ô	 
{
		 *
stringSelectPositionInternal
Ò	Ò	 0
=
Ò	Ò	1 2
position
Ò	Ò	3 ;
;
Ò	Ò	; <
}
Ú	Ú	 
else
Û	Û	 
{
Ù	Ù	 $
stringPositionInternal
ı	ı	 *
=
ı	ı	+ ,
position
ı	ı	- 5
;
ı	ı	5 6*
stringSelectPositionInternal
ˆ	ˆ	 0
=
ˆ	ˆ	1 2$
stringPositionInternal
ˆ	ˆ	3 I
;
ˆ	ˆ	I J
}
˜	˜	 
}
¯	¯	 
else
˘	˘	 
{
˙	˙	 
int
˚	˚	 
position
˚	˚	 
=
˚	˚	 
$num
˚	˚	  
;
˚	˚	  !
if
˝	˝	 
(
˝	˝	 
shift
˝	˝	 
)
˝	˝	 
{
˛	˛	 )
caretSelectPositionInternal
ˇ	ˇ	 /
=
ˇ	ˇ	0 1
position
ˇ	ˇ	2 :
;
ˇ	ˇ	: ;*
stringSelectPositionInternal
Ä
Ä
 0
=
Ä
Ä
1 2-
GetStringIndexFromCaretPosition
Ä
Ä
3 R
(
Ä
Ä
R S
position
Ä
Ä
S [
)
Ä
Ä
[ \
;
Ä
Ä
\ ]
}
Å
Å
 
else
Ç
Ç
 
{
É
É
 #
caretPositionInternal
Ñ
Ñ
 )
=
Ñ
Ñ
* +)
caretSelectPositionInternal
Ñ
Ñ
, G
=
Ñ
Ñ
H I
position
Ñ
Ñ
J R
;
Ñ
Ñ
R S*
stringSelectPositionInternal
Ö
Ö
 0
=
Ö
Ö
1 2$
stringPositionInternal
Ö
Ö
3 I
=
Ö
Ö
J K-
GetStringIndexFromCaretPosition
Ö
Ö
L k
(
Ö
Ö
k l
position
Ö
Ö
l t
)
Ö
Ö
t u
;
Ö
Ö
u v
}
Ü
Ü
 
}
á
á
 
UpdateLabel
â
â
 
(
â
â
 
)
â
â
 
;
â
â
 
}
ä
ä
 	
public
ë
ë
 
void
ë
ë
 
MoveToEndOfLine
ë
ë
 #
(
ë
ë
# $
bool
ë
ë
$ (
shift
ë
ë
) .
,
ë
ë
. /
bool
ë
ë
0 4
ctrl
ë
ë
5 9
)
ë
ë
9 :
{
í
í
 	
int
î
î
 
currentLine
î
î
 
=
î
î
 
m_TextComponent
î
î
 -
.
î
î
- .
textInfo
î
î
. 6
.
î
î
6 7
characterInfo
î
î
7 D
[
î
î
D E#
caretPositionInternal
î
î
E Z
]
î
î
Z [
.
î
î
[ \

lineNumber
î
î
\ f
;
î
î
f g
int
ó
ó
 
characterIndex
ó
ó
 
=
ó
ó
  
ctrl
ó
ó
! %
==
ó
ó
& (
true
ó
ó
) -
?
ó
ó
. /
m_TextComponent
ó
ó
0 ?
.
ó
ó
? @
textInfo
ó
ó
@ H
.
ó
ó
H I
characterCount
ó
ó
I W
-
ó
ó
X Y
$num
ó
ó
Z [
:
ó
ó
\ ]
m_TextComponent
ó
ó
^ m
.
ó
ó
m n
textInfo
ó
ó
n v
.
ó
ó
v w
lineInfo
ó
ó
w 
[ó
ó
 Ä
currentLineó
ó
Ä ã
]ó
ó
ã å
.ó
ó
å ç"
lastCharacterIndexó
ó
ç ü
;ó
ó
ü †
int
ô
ô
 
position
ô
ô
 
=
ô
ô
 
m_TextComponent
ô
ô
 *
.
ô
ô
* +
textInfo
ô
ô
+ 3
.
ô
ô
3 4
characterInfo
ô
ô
4 A
[
ô
ô
A B
characterIndex
ô
ô
B P
]
ô
ô
P Q
.
ô
ô
Q R
index
ô
ô
R W
;
ô
ô
W X
if
õ
õ
 
(
õ
õ
 
shift
õ
õ
 
)
õ
õ
 
{
ú
ú
 *
stringSelectPositionInternal
ù
ù
 ,
=
ù
ù
- .
position
ù
ù
/ 7
;
ù
ù
7 8)
caretSelectPositionInternal
ü
ü
 +
=
ü
ü
, -
characterIndex
ü
ü
. <
;
ü
ü
< =
}
†
†
 
else
°
°
 
{
¢
¢
 $
stringPositionInternal
£
£
 &
=
£
£
' (
position
£
£
) 1
;
£
£
1 2*
stringSelectPositionInternal
§
§
 ,
=
§
§
- .$
stringPositionInternal
§
§
/ E
;
§
§
E F)
caretSelectPositionInternal
¶
¶
 +
=
¶
¶
, -#
caretPositionInternal
¶
¶
. C
=
¶
¶
D E
characterIndex
¶
¶
F T
;
¶
¶
T U
}
ß
ß
 
UpdateLabel
©
©
 
(
©
©
 
)
©
©
 
;
©
©
 
}
™
™
 	
public
∞
∞
 
void
∞
∞
 
MoveToStartOfLine
∞
∞
 %
(
∞
∞
% &
bool
∞
∞
& *
shift
∞
∞
+ 0
,
∞
∞
0 1
bool
∞
∞
2 6
ctrl
∞
∞
7 ;
)
∞
∞
; <
{
±
±
 	
int
≥
≥
 
currentLine
≥
≥
 
=
≥
≥
 
m_TextComponent
≥
≥
 -
.
≥
≥
- .
textInfo
≥
≥
. 6
.
≥
≥
6 7
characterInfo
≥
≥
7 D
[
≥
≥
D E#
caretPositionInternal
≥
≥
E Z
]
≥
≥
Z [
.
≥
≥
[ \

lineNumber
≥
≥
\ f
;
≥
≥
f g
int
∂
∂
 
characterIndex
∂
∂
 
=
∂
∂
  
ctrl
∂
∂
! %
==
∂
∂
& (
true
∂
∂
) -
?
∂
∂
. /
$num
∂
∂
0 1
:
∂
∂
2 3
m_TextComponent
∂
∂
4 C
.
∂
∂
C D
textInfo
∂
∂
D L
.
∂
∂
L M
lineInfo
∂
∂
M U
[
∂
∂
U V
currentLine
∂
∂
V a
]
∂
∂
a b
.
∂
∂
b c!
firstCharacterIndex
∂
∂
c v
;
∂
∂
v w
int
∏
∏
 
position
∏
∏
 
=
∏
∏
 
$num
∏
∏
 
;
∏
∏
 
if
π
π
 
(
π
π
 
characterIndex
π
π
 
>
π
π
  
$num
π
π
! "
)
π
π
" #
position
∫
∫
 
=
∫
∫
 
m_TextComponent
∫
∫
 *
.
∫
∫
* +
textInfo
∫
∫
+ 3
.
∫
∫
3 4
characterInfo
∫
∫
4 A
[
∫
∫
A B
characterIndex
∫
∫
B P
-
∫
∫
Q R
$num
∫
∫
S T
]
∫
∫
T U
.
∫
∫
U V
index
∫
∫
V [
+
∫
∫
\ ]
m_TextComponent
∫
∫
^ m
.
∫
∫
m n
textInfo
∫
∫
n v
.
∫
∫
v w
characterInfo∫
∫
w Ñ
[∫
∫
Ñ Ö
characterIndex∫
∫
Ö ì
-∫
∫
î ï
$num∫
∫
ñ ó
]∫
∫
ó ò
.∫
∫
ò ô
stringLength∫
∫
ô •
;∫
∫
• ¶
if
º
º
 
(
º
º
 
shift
º
º
 
)
º
º
 
{
Ω
Ω
 *
stringSelectPositionInternal
æ
æ
 ,
=
æ
æ
- .
position
æ
æ
/ 7
;
æ
æ
7 8)
caretSelectPositionInternal
¿
¿
 +
=
¿
¿
, -
characterIndex
¿
¿
. <
;
¿
¿
< =
}
¡
¡
 
else
¬
¬
 
{
√
√
 $
stringPositionInternal
ƒ
ƒ
 &
=
ƒ
ƒ
' (
position
ƒ
ƒ
) 1
;
ƒ
ƒ
1 2*
stringSelectPositionInternal
≈
≈
 ,
=
≈
≈
- .$
stringPositionInternal
≈
≈
/ E
;
≈
≈
E F)
caretSelectPositionInternal
«
«
 +
=
«
«
, -#
caretPositionInternal
«
«
. C
=
«
«
D E
characterIndex
«
«
F T
;
«
«
T U
}
»
»
 
UpdateLabel
 
 
 
(
 
 
 
)
 
 
 
;
 
 
 
}
À
À
 	
static
Œ
Œ
 
string
Œ
Œ
 
	clipboard
Œ
Œ
 
{
œ
œ
 	
get
–
–
 
{
—
—
 
return
“
“
 

GUIUtility
“
“
 !
.
“
“
! "
systemCopyBuffer
“
“
" 2
;
“
“
2 3
}
”
”
 
set
‘
‘
 
{
’
’
 

GUIUtility
÷
÷
 
.
÷
÷
 
systemCopyBuffer
÷
÷
 +
=
÷
÷
, -
value
÷
÷
. 3
;
÷
÷
3 4
}
◊
◊
 
}
ÿ
ÿ
 	
private
⁄
⁄
 
bool
⁄
⁄
 
InPlaceEditing
⁄
⁄
 #
(
⁄
⁄
# $
)
⁄
⁄
$ %
{
€
€
 	
if
‹
‹
 
(
‹
‹
 
Application
‹
‹
 
.
‹
‹
 
platform
‹
‹
 $
==
‹
‹
% '
RuntimePlatform
‹
‹
( 7
.
‹
‹
7 8
WSAPlayerX86
‹
‹
8 D
||
‹
‹
E G
Application
‹
‹
H S
.
‹
‹
S T
platform
‹
‹
T \
==
‹
‹
] _
RuntimePlatform
‹
‹
` o
.
‹
‹
o p
WSAPlayerX64
‹
‹
p |
||
‹
‹
} 
Application‹
‹
Ä ã
.‹
‹
ã å
platform‹
‹
å î
==‹
‹
ï ó
RuntimePlatform‹
‹
ò ß
.‹
‹
ß ®
WSAPlayerARM‹
‹
® ¥
)‹
‹
¥ µ
return
›
›
 
!
›
›
 !
TouchScreenKeyboard
›
›
 +
.
›
›
+ ,
isSupported
›
›
, 7
||
›
›
8 :1
#m_TouchKeyboardAllowsInPlaceEditing
›
›
; ^
;
›
›
^ _
if
ﬂ
ﬂ
 
(
ﬂ
ﬂ
 !
TouchScreenKeyboard
ﬂ
ﬂ
 #
.
ﬂ
ﬂ
# $
isSupported
ﬂ
ﬂ
$ /
&&
ﬂ
ﬂ
0 2$
shouldHideSoftKeyboard
ﬂ
ﬂ
3 I
)
ﬂ
ﬂ
I J
return
‡
‡
 
true
‡
‡
 
;
‡
‡
 
if
‚
‚
 
(
‚
‚
 !
TouchScreenKeyboard
‚
‚
 #
.
‚
‚
# $
isSupported
‚
‚
$ /
&&
‚
‚
0 2$
shouldHideSoftKeyboard
‚
‚
3 I
==
‚
‚
J L
false
‚
‚
M R
&&
‚
‚
S U#
shouldHideMobileInput
‚
‚
V k
==
‚
‚
l n
false
‚
‚
o t
)
‚
‚
t u
return
„
„
 
false
„
„
 
;
„
„
 
return
Â
Â
 
true
Â
Â
 
;
Â
Â
 
}
Ê
Ê
 	
void
Ë
Ë
 .
 UpdateStringPositionFromKeyboard
Ë
Ë
 -
(
Ë
Ë
- .
)
Ë
Ë
. /
{
È
È
 	
var
Î
Î
 
selectionRange
Î
Î
 
=
Î
Î
  
m_SoftKeyboard
Î
Î
! /
.
Î
Î
/ 0
	selection
Î
Î
0 9
;
Î
Î
9 :
var


 
selectionStart


 
=


  
selectionRange


! /
.


/ 0
start


0 5
;


5 6
var
Ò
Ò
 
selectionEnd
Ò
Ò
 
=
Ò
Ò
 
selectionRange
Ò
Ò
 -
.
Ò
Ò
- .
end
Ò
Ò
. 1
;
Ò
Ò
1 2
var
Û
Û
 #
stringPositionChanged
Û
Û
 %
=
Û
Û
& '
false
Û
Û
( -
;
Û
Û
- .
if
ı
ı
 
(
ı
ı
 $
stringPositionInternal
ı
ı
 &
!=
ı
ı
' )
selectionStart
ı
ı
* 8
)
ı
ı
8 9
{
ˆ
ˆ
 #
stringPositionChanged
˜
˜
 %
=
˜
˜
& '
true
˜
˜
( ,
;
˜
˜
, -$
stringPositionInternal
¯
¯
 &
=
¯
¯
' (
selectionStart
¯
¯
) 7
;
¯
¯
7 8#
caretPositionInternal
˙
˙
 %
=
˙
˙
& '-
GetCaretPositionFromStringIndex
˙
˙
( G
(
˙
˙
G H$
stringPositionInternal
˙
˙
H ^
)
˙
˙
^ _
;
˙
˙
_ `
}
˚
˚
 
if
˝
˝
 
(
˝
˝
 *
stringSelectPositionInternal
˝
˝
 ,
!=
˝
˝
- /
selectionEnd
˝
˝
0 <
)
˝
˝
< =
{
˛
˛
 *
stringSelectPositionInternal
ˇ
ˇ
 ,
=
ˇ
ˇ
- .
selectionEnd
ˇ
ˇ
/ ;
;
ˇ
ˇ
; <#
stringPositionChanged
ÄÄ %
=
ÄÄ& '
true
ÄÄ( ,
;
ÄÄ, -)
caretSelectPositionInternal
ÇÇ +
=
ÇÇ, --
GetCaretPositionFromStringIndex
ÇÇ. M
(
ÇÇM N*
stringSelectPositionInternal
ÇÇN j
)
ÇÇj k
;
ÇÇk l
}
ÉÉ 
if
ÖÖ 
(
ÖÖ #
stringPositionChanged
ÖÖ %
)
ÖÖ% &
{
ÜÜ 
m_BlinkStartTime
áá  
=
áá! "
Time
áá# '
.
áá' (
unscaledTime
áá( 4
;
áá4 5
UpdateLabel
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
}
ãã 	
	protected
ëë 
virtual
ëë 
void
ëë 

LateUpdate
ëë )
(
ëë) *
)
ëë* +
{
íí 	
if
îî 
(
îî (
m_ShouldActivateNextUpdate
îî *
)
îî* +
{
ïï 
if
ññ 
(
ññ 
!
ññ 
	isFocused
ññ 
)
ññ 
{
óó (
ActivateInputFieldInternal
òò .
(
òò. /
)
òò/ 0
;
òò0 1(
m_ShouldActivateNextUpdate
ôô .
=
ôô/ 0
false
ôô1 6
;
ôô6 7
return
öö 
;
öö 
}
õõ (
m_ShouldActivateNextUpdate
ûû *
=
ûû+ ,
false
ûû- 2
;
ûû2 3
}
üü 
if
¢¢ 
(
¢¢ 
!
¢¢ 
	isFocused
¢¢ 
&&
¢¢ $
m_SelectionStillActive
¢¢ 4
)
¢¢4 5
{
££ 

GameObject
§§ 
selectedObject
§§ )
=
§§* +
EventSystem
§§, 7
.
§§7 8
current
§§8 ?
!=
§§@ B
null
§§C G
?
§§H I
EventSystem
§§J U
.
§§U V
current
§§V ]
.
§§] ^'
currentSelectedGameObject
§§^ w
:
§§x y
null
§§z ~
;
§§~ 
if
¶¶ 
(
¶¶ 
selectedObject
¶¶ "
==
¶¶# %
null
¶¶& *
&&
¶¶+ -#
m_ResetOnDeActivation
¶¶. C
)
¶¶C D
{
ßß 
ReleaseSelection
®® $
(
®®$ %
)
®®% &
;
®®& '
return
©© 
;
©© 
}
™™ 
if
¨¨ 
(
¨¨ 
selectedObject
¨¨ "
!=
¨¨# %
null
¨¨& *
&&
¨¨+ -
selectedObject
¨¨. <
!=
¨¨= ?
this
¨¨@ D
.
¨¨D E

gameObject
¨¨E O
)
¨¨O P
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
selectedObject
ÆÆ &
==
ÆÆ' )(
m_PreviouslySelectedObject
ÆÆ* D
)
ÆÆD E
return
ØØ 
;
ØØ (
m_PreviouslySelectedObject
±± .
=
±±/ 0
selectedObject
±±1 ?
;
±±? @
if
¥¥ 
(
¥¥ !
m_VerticalScrollbar
¥¥ +
&&
¥¥, .
selectedObject
¥¥/ =
==
¥¥> @!
m_VerticalScrollbar
¥¥A T
.
¥¥T U

gameObject
¥¥U _
)
¥¥_ `
{
µµ 
return
∑∑ 
;
∑∑ 
}
∏∏ 
if
ªª 
(
ªª #
m_ResetOnDeActivation
ªª -
)
ªª- .
{
ºº 
ReleaseSelection
ΩΩ (
(
ΩΩ( )
)
ΩΩ) *
;
ΩΩ* +
return
ææ 
;
ææ 
}
øø 
if
¬¬ 
(
¬¬ 
selectedObject
¬¬ &
.
¬¬& '
GetComponent
¬¬' 3
<
¬¬3 4
TMP_InputField
¬¬4 B
>
¬¬B C
(
¬¬C D
)
¬¬D E
!=
¬¬F H
null
¬¬I M
)
¬¬M N
ReleaseSelection
√√ (
(
√√( )
)
√√) *
;
√√* +
return
≈≈ 
;
≈≈ 
}
∆∆ 
if
„„ 
(
„„ 
Input
„„ 
.
„„ 

GetKeyDown
„„ $
(
„„$ %
KeyCode
„„% ,
.
„„, -
Mouse0
„„- 3
)
„„3 4
)
„„4 5
{
‰‰ 
bool
ÊÊ 
isDoubleClick
ÊÊ &
=
ÊÊ' (
false
ÊÊ) .
;
ÊÊ. /
float
ÁÁ 
	timeStamp
ÁÁ #
=
ÁÁ$ %
Time
ÁÁ& *
.
ÁÁ* +
unscaledTime
ÁÁ+ 7
;
ÁÁ7 8
if
ÈÈ 
(
ÈÈ  
m_KeyDownStartTime
ÈÈ *
+
ÈÈ+ , 
m_DoubleClickDelay
ÈÈ- ?
>
ÈÈ@ A
	timeStamp
ÈÈB K
)
ÈÈK L
isDoubleClick
ÍÍ %
=
ÍÍ& '
true
ÍÍ( ,
;
ÍÍ, - 
m_KeyDownStartTime
ÏÏ &
=
ÏÏ' (
	timeStamp
ÏÏ) 2
;
ÏÏ2 3
if
ÓÓ 
(
ÓÓ 
isDoubleClick
ÓÓ %
)
ÓÓ% &
{
ÔÔ 
ReleaseSelection
˜˜ (
(
˜˜( )
)
˜˜) *
;
˜˜* +
return
˘˘ 
;
˘˘ 
}
˙˙ 
}
˚˚ 
}
˝˝ 
UpdateMaskRegions
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ  
if
ÅÅ 
(
ÅÅ 
InPlaceEditing
ÅÅ 
(
ÅÅ 
)
ÅÅ  
&&
ÅÅ! ##
isKeyboardUsingEvents
ÅÅ$ 9
(
ÅÅ9 :
)
ÅÅ: ;
||
ÅÅ< >
!
ÅÅ? @
	isFocused
ÅÅ@ I
)
ÅÅI J
{
ÇÇ 
return
ÉÉ 
;
ÉÉ 
}
ÑÑ '
AssignPositioningIfNeeded
ÜÜ %
(
ÜÜ% &
)
ÜÜ& '
;
ÜÜ' (
if
àà 
(
àà 
m_SoftKeyboard
àà 
==
àà !
null
àà" &
||
àà' )
m_SoftKeyboard
àà* 8
.
àà8 9
status
àà9 ?
!=
àà@ B!
TouchScreenKeyboard
ààC V
.
ààV W
Status
ààW ]
.
àà] ^
Visible
àà^ e
)
ààe f
{
ââ 
if
ää 
(
ää 
m_SoftKeyboard
ää "
!=
ää# %
null
ää& *
)
ää* +
{
ãã 
if
åå 
(
åå 
!
åå 

m_ReadOnly
åå #
)
åå# $
text
çç 
=
çç 
m_SoftKeyboard
çç -
.
çç- .
text
çç. 2
;
çç2 3
if
èè 
(
èè 
m_SoftKeyboard
èè &
.
èè& '
status
èè' -
==
èè. 0!
TouchScreenKeyboard
èè1 D
.
èèD E
Status
èèE K
.
èèK L
	LostFocus
èèL U
)
èèU V2
$SendTouchScreenKeyboardStatusChanged
êê <
(
êê< =
)
êê= >
;
êê> ?
if
íí 
(
íí 
m_SoftKeyboard
íí &
.
íí& '
status
íí' -
==
íí. 0!
TouchScreenKeyboard
íí1 D
.
ííD E
Status
ííE K
.
ííK L
Canceled
ííL T
)
ííT U
{
ìì  
m_ReleaseSelection
îî *
=
îî+ ,
true
îî- 1
;
îî1 2
m_WasCanceled
ïï %
=
ïï& '
true
ïï( ,
;
ïï, -2
$SendTouchScreenKeyboardStatusChanged
ññ <
(
ññ< =
)
ññ= >
;
ññ> ?
}
óó 
if
ôô 
(
ôô 
m_SoftKeyboard
ôô &
.
ôô& '
status
ôô' -
==
ôô. 0!
TouchScreenKeyboard
ôô1 D
.
ôôD E
Status
ôôE K
.
ôôK L
Done
ôôL P
)
ôôP Q
{
öö  
m_ReleaseSelection
õõ *
=
õõ+ ,
true
õõ- 1
;
õõ1 2
OnSubmit
úú  
(
úú  !
null
úú! %
)
úú% &
;
úú& '2
$SendTouchScreenKeyboardStatusChanged
ùù <
(
ùù< =
)
ùù= >
;
ùù> ?
}
ûû 
}
üü 

OnDeselect
°° 
(
°° 
null
°° 
)
°°  
;
°°  !
return
¢¢ 
;
¢¢ 
}
££ 
string
•• 
val
•• 
=
•• 
m_SoftKeyboard
•• '
.
••' (
text
••( ,
;
••, -
if
ßß 
(
ßß 
m_Text
ßß 
!=
ßß 
val
ßß 
)
ßß 
{
®® 
if
©© 
(
©© 

m_ReadOnly
©© 
)
©© 
{
™™ 
m_SoftKeyboard
´´ "
.
´´" #
text
´´# '
=
´´( )
m_Text
´´* 0
;
´´0 1
}
¨¨ 
else
≠≠ 
{
ÆÆ 
m_Text
ØØ 
=
ØØ 
$str
ØØ 
;
ØØ  
for
±± 
(
±± 
int
±± 
i
±± 
=
±±  
$num
±±! "
;
±±" #
i
±±$ %
<
±±& '
val
±±( +
.
±±+ ,
Length
±±, 2
;
±±2 3
++
±±4 6
i
±±6 7
)
±±7 8
{
≤≤ 
char
≥≥ 
c
≥≥ 
=
≥≥  
val
≥≥! $
[
≥≥$ %
i
≥≥% &
]
≥≥& '
;
≥≥' (
if
µµ 
(
µµ 
c
µµ 
==
µµ  
$char
µµ! %
||
µµ& (
c
µµ) *
==
µµ+ -
$num
µµ. /
)
µµ/ 0
c
∂∂ 
=
∂∂ 
$char
∂∂  $
;
∂∂$ %
if
∏∏ 
(
∏∏ 
onValidateInput
∏∏ +
!=
∏∏, .
null
∏∏/ 3
)
∏∏3 4
c
ππ 
=
ππ 
onValidateInput
ππ  /
(
ππ/ 0
m_Text
ππ0 6
,
ππ6 7
m_Text
ππ8 >
.
ππ> ?
Length
ππ? E
,
ππE F
c
ππG H
)
ππH I
;
ππI J
else
∫∫ 
if
∫∫ 
(
∫∫  !!
characterValidation
∫∫! 4
!=
∫∫5 7!
CharacterValidation
∫∫8 K
.
∫∫K L
None
∫∫L P
)
∫∫P Q
c
ªª 
=
ªª 
Validate
ªª  (
(
ªª( )
m_Text
ªª) /
,
ªª/ 0
m_Text
ªª1 7
.
ªª7 8
Length
ªª8 >
,
ªª> ?
c
ªª@ A
)
ªªA B
;
ªªB C
if
ΩΩ 
(
ΩΩ 
lineType
ΩΩ $
==
ΩΩ% '
LineType
ΩΩ( 0
.
ΩΩ0 1
MultiLineSubmit
ΩΩ1 @
&&
ΩΩA C
c
ΩΩD E
==
ΩΩF H
$char
ΩΩI M
)
ΩΩM N
{
ææ 
m_SoftKeyboard
øø *
.
øø* +
text
øø+ /
=
øø0 1
m_Text
øø2 8
;
øø8 9
OnSubmit
¡¡ $
(
¡¡$ %
null
¡¡% )
)
¡¡) *
;
¡¡* +

OnDeselect
¬¬ &
(
¬¬& '
null
¬¬' +
)
¬¬+ ,
;
¬¬, -
return
√√ "
;
√√" #
}
ƒƒ 
if
∆∆ 
(
∆∆ 
c
∆∆ 
!=
∆∆  
$num
∆∆! "
)
∆∆" #
m_Text
«« "
+=
««# %
c
««& '
;
««' (
}
»» 
if
   
(
   
characterLimit
   &
>
  ' (
$num
  ) *
&&
  + -
m_Text
  . 4
.
  4 5
Length
  5 ;
>
  < =
characterLimit
  > L
)
  L M
m_Text
ÀÀ 
=
ÀÀ  
m_Text
ÀÀ! '
.
ÀÀ' (
	Substring
ÀÀ( 1
(
ÀÀ1 2
$num
ÀÀ2 3
,
ÀÀ3 4
characterLimit
ÀÀ5 C
)
ÀÀC D
;
ÀÀD E.
 UpdateStringPositionFromKeyboard
ÕÕ 4
(
ÕÕ4 5
)
ÕÕ5 6
;
ÕÕ6 7
if
—— 
(
—— 
m_Text
—— 
!=
—— !
val
——" %
)
——% &
m_SoftKeyboard
““ &
.
““& '
text
““' +
=
““, -
m_Text
““. 4
;
““4 5.
 SendOnValueChangedAndUpdateLabel
‘‘ 4
(
‘‘4 5
)
‘‘5 6
;
‘‘6 7
}
’’ 
}
÷÷ 
else
◊◊ 
if
◊◊ 
(
◊◊ 
m_HideMobileInput
◊◊ &
&&
◊◊' )
Application
◊◊* 5
.
◊◊5 6
platform
◊◊6 >
==
◊◊? A
RuntimePlatform
◊◊B Q
.
◊◊Q R
Android
◊◊R Y
)
◊◊Y Z
{
ÿÿ .
 UpdateStringPositionFromKeyboard
ŸŸ 0
(
ŸŸ0 1
)
ŸŸ1 2
;
ŸŸ2 3
}
⁄⁄ 
if
ÊÊ 
(
ÊÊ 
m_SoftKeyboard
ÊÊ 
!=
ÊÊ !
null
ÊÊ" &
&&
ÊÊ' )
m_SoftKeyboard
ÊÊ* 8
.
ÊÊ8 9
status
ÊÊ9 ?
!=
ÊÊ@ B!
TouchScreenKeyboard
ÊÊC V
.
ÊÊV W
Status
ÊÊW ]
.
ÊÊ] ^
Visible
ÊÊ^ e
)
ÊÊe f
{
ÁÁ 
if
ËË 
(
ËË 
m_SoftKeyboard
ËË "
.
ËË" #
status
ËË# )
==
ËË* ,!
TouchScreenKeyboard
ËË- @
.
ËË@ A
Status
ËËA G
.
ËËG H
Canceled
ËËH P
)
ËËP Q
m_WasCanceled
ÈÈ !
=
ÈÈ" #
true
ÈÈ$ (
;
ÈÈ( )

OnDeselect
ÎÎ 
(
ÎÎ 
null
ÎÎ 
)
ÎÎ  
;
ÎÎ  !
}
ÏÏ 
}
ÌÌ 	
private
ÔÔ 
bool
ÔÔ 
MayDrag
ÔÔ 
(
ÔÔ 
PointerEventData
ÔÔ -
	eventData
ÔÔ. 7
)
ÔÔ7 8
{
 	
return
ÒÒ 
IsActive
ÒÒ 
(
ÒÒ 
)
ÒÒ 
&&
ÒÒ  
IsInteractable
ÚÚ !
(
ÚÚ! "
)
ÚÚ" #
&&
ÚÚ$ &
	eventData
ÛÛ 
.
ÛÛ 
button
ÛÛ #
==
ÛÛ$ &
PointerEventData
ÛÛ' 7
.
ÛÛ7 8
InputButton
ÛÛ8 C
.
ÛÛC D
Left
ÛÛD H
&&
ÛÛI K
m_TextComponent
ÙÙ "
!=
ÙÙ# %
null
ÙÙ& *
&&
ÙÙ+ -
(
ıı 
m_SoftKeyboard
ıı "
==
ıı# %
null
ıı& *
||
ıı+ -$
shouldHideSoftKeyboard
ıı. D
||
ııE G#
shouldHideMobileInput
ııH ]
)
ıı] ^
;
ıı^ _
}
ˆˆ 	
public
¯¯ 
virtual
¯¯ 
void
¯¯ 
OnBeginDrag
¯¯ '
(
¯¯' (
PointerEventData
¯¯( 8
	eventData
¯¯9 B
)
¯¯B C
{
˘˘ 	
if
˙˙ 
(
˙˙ 
!
˙˙ 
MayDrag
˙˙ 
(
˙˙ 
	eventData
˙˙ "
)
˙˙" #
)
˙˙# $
return
˚˚ 
;
˚˚ 
m_UpdateDrag
˝˝ 
=
˝˝ 
true
˝˝ 
;
˝˝  
}
˛˛ 	
public
ÄÄ 
virtual
ÄÄ 
void
ÄÄ 
OnDrag
ÄÄ "
(
ÄÄ" #
PointerEventData
ÄÄ# 3
	eventData
ÄÄ4 =
)
ÄÄ= >
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
!
ÇÇ 
MayDrag
ÇÇ 
(
ÇÇ 
	eventData
ÇÇ "
)
ÇÇ" #
)
ÇÇ# $
return
ÉÉ 
;
ÉÉ 
CaretPosition
ÖÖ 
insertionSide
ÖÖ '
;
ÖÖ' (
int
áá 
insertionIndex
áá 
=
áá  
TMP_TextUtilities
áá! 2
.
áá2 3(
GetCursorIndexFromPosition
áá3 M
(
ááM N
m_TextComponent
ááN ]
,
áá] ^
	eventData
áá_ h
.
ááh i
position
áái q
,
ááq r
	eventData
áás |
.
áá| }
pressEventCameraáá} ç
,ááç é
outááè í
insertionSideááì †
)áá† °
;áá° ¢
if
ââ 
(
ââ (
m_isRichTextEditingAllowed
ââ *
)
ââ* +
{
ää 
if
ãã 
(
ãã 
insertionSide
ãã !
==
ãã" $
CaretPosition
ãã% 2
.
ãã2 3
Left
ãã3 7
)
ãã7 8
{
åå *
stringSelectPositionInternal
çç 0
=
çç1 2
m_TextComponent
çç3 B
.
ççB C
textInfo
ççC K
.
ççK L
characterInfo
ççL Y
[
ççY Z
insertionIndex
ççZ h
]
ççh i
.
ççi j
index
ççj o
;
çço p
}
éé 
else
èè 
if
èè 
(
èè 
insertionSide
èè &
==
èè' )
CaretPosition
èè* 7
.
èè7 8
Right
èè8 =
)
èè= >
{
êê *
stringSelectPositionInternal
ëë 0
=
ëë1 2
m_TextComponent
ëë3 B
.
ëëB C
textInfo
ëëC K
.
ëëK L
characterInfo
ëëL Y
[
ëëY Z
insertionIndex
ëëZ h
]
ëëh i
.
ëëi j
index
ëëj o
+
ëëp q
m_TextComponentëër Å
.ëëÅ Ç
textInfoëëÇ ä
.ëëä ã
characterInfoëëã ò
[ëëò ô
insertionIndexëëô ß
]ëëß ®
.ëë® ©
stringLengthëë© µ
;ëëµ ∂
}
íí 
}
ìì 
else
îî 
{
ïï 
if
ññ 
(
ññ 
insertionSide
ññ !
==
ññ" $
CaretPosition
ññ% 2
.
ññ2 3
Left
ññ3 7
)
ññ7 8
{
óó *
stringSelectPositionInternal
òò 0
=
òò1 2
insertionIndex
òò3 A
==
òòB D
$num
òòE F
?
ôô 
m_TextComponent
ôô )
.
ôô) *
textInfo
ôô* 2
.
ôô2 3
characterInfo
ôô3 @
[
ôô@ A
$num
ôôA B
]
ôôB C
.
ôôC D
index
ôôD I
:
öö 
m_TextComponent
öö )
.
öö) *
textInfo
öö* 2
.
öö2 3
characterInfo
öö3 @
[
öö@ A
insertionIndex
ööA O
-
ööP Q
$num
ööR S
]
ööS T
.
ööT U
index
ööU Z
+
öö[ \
m_TextComponent
öö] l
.
ööl m
textInfo
ööm u
.
ööu v
characterInfoööv É
[ööÉ Ñ
insertionIndexööÑ í
-ööì î
$numööï ñ
]ööñ ó
.ööó ò
stringLengthööò §
;öö§ •
}
õõ 
else
úú 
if
úú 
(
úú 
insertionSide
úú &
==
úú' )
CaretPosition
úú* 7
.
úú7 8
Right
úú8 =
)
úú= >
{
ùù *
stringSelectPositionInternal
ûû 0
=
ûû1 2
m_TextComponent
ûû3 B
.
ûûB C
textInfo
ûûC K
.
ûûK L
characterInfo
ûûL Y
[
ûûY Z
insertionIndex
ûûZ h
]
ûûh i
.
ûûi j
index
ûûj o
+
ûûp q
m_TextComponentûûr Å
.ûûÅ Ç
textInfoûûÇ ä
.ûûä ã
characterInfoûûã ò
[ûûò ô
insertionIndexûûô ß
]ûûß ®
.ûû® ©
stringLengthûû© µ
;ûûµ ∂
}
üü 
}
†† )
caretSelectPositionInternal
¢¢ '
=
¢¢( )-
GetCaretPositionFromStringIndex
¢¢* I
(
¢¢I J*
stringSelectPositionInternal
¢¢J f
)
¢¢f g
;
¢¢g h!
MarkGeometryAsDirty
§§ 
(
§§  
)
§§  !
;
§§! "'
m_DragPositionOutOfBounds
¶¶ %
=
¶¶& '
!
¶¶( )"
RectTransformUtility
¶¶) =
.
¶¶= >*
RectangleContainsScreenPoint
¶¶> Z
(
¶¶Z [
textViewport
¶¶[ g
,
¶¶g h
	eventData
¶¶i r
.
¶¶r s
position
¶¶s {
,
¶¶{ |
	eventData¶¶} Ü
.¶¶Ü á 
pressEventCamera¶¶á ó
)¶¶ó ò
;¶¶ò ô
if
ßß 
(
ßß '
m_DragPositionOutOfBounds
ßß )
&&
ßß* ,
m_DragCoroutine
ßß- <
==
ßß= ?
null
ßß@ D
)
ßßD E
m_DragCoroutine
®® 
=
®®  !
StartCoroutine
®®" 0
(
®®0 1"
MouseDragOutsideRect
®®1 E
(
®®E F
	eventData
®®F O
)
®®O P
)
®®P Q
;
®®Q R
	eventData
™™ 
.
™™ 
Use
™™ 
(
™™ 
)
™™ 
;
™™ 
}
ØØ 	
IEnumerator
±± "
MouseDragOutsideRect
±± (
(
±±( )
PointerEventData
±±) 9
	eventData
±±: C
)
±±C D
{
≤≤ 	
while
≥≥ 
(
≥≥ 
m_UpdateDrag
≥≥ 
&&
≥≥  "'
m_DragPositionOutOfBounds
≥≥# <
)
≥≥< =
{
¥¥ 
Vector2
µµ 
localMousePos
µµ %
;
µµ% &"
RectTransformUtility
∑∑ $
.
∑∑$ %0
"ScreenPointToLocalPointInRectangle
∑∑% G
(
∑∑G H
textViewport
∑∑H T
,
∑∑T U
	eventData
∑∑V _
.
∑∑_ `
position
∑∑` h
,
∑∑h i
	eventData
∑∑j s
.
∑∑s t
pressEventCamera∑∑t Ñ
,∑∑Ñ Ö
out∑∑Ü â
localMousePos∑∑ä ó
)∑∑ó ò
;∑∑ò ô
Rect
ππ 
rect
ππ 
=
ππ 
textViewport
ππ (
.
ππ( )
rect
ππ) -
;
ππ- .
if
ªª 
(
ªª 
	multiLine
ªª 
)
ªª 
{
ºº 
if
ΩΩ 
(
ΩΩ 
localMousePos
ΩΩ %
.
ΩΩ% &
y
ΩΩ& '
>
ΩΩ( )
rect
ΩΩ* .
.
ΩΩ. /
yMax
ΩΩ/ 3
)
ΩΩ3 4
MoveUp
ææ 
(
ææ 
true
ææ #
,
ææ# $
true
ææ% )
)
ææ) *
;
ææ* +
else
øø 
if
øø 
(
øø 
localMousePos
øø *
.
øø* +
y
øø+ ,
<
øø- .
rect
øø/ 3
.
øø3 4
yMin
øø4 8
)
øø8 9
MoveDown
¿¿  
(
¿¿  !
true
¿¿! %
,
¿¿% &
true
¿¿' +
)
¿¿+ ,
;
¿¿, -
}
¡¡ 
else
¬¬ 
{
√√ 
if
ƒƒ 
(
ƒƒ 
localMousePos
ƒƒ %
.
ƒƒ% &
x
ƒƒ& '
<
ƒƒ( )
rect
ƒƒ* .
.
ƒƒ. /
xMin
ƒƒ/ 3
)
ƒƒ3 4
MoveLeft
≈≈  
(
≈≈  !
true
≈≈! %
,
≈≈% &
false
≈≈' ,
)
≈≈, -
;
≈≈- .
else
∆∆ 
if
∆∆ 
(
∆∆ 
localMousePos
∆∆ *
.
∆∆* +
x
∆∆+ ,
>
∆∆- .
rect
∆∆/ 3
.
∆∆3 4
xMax
∆∆4 8
)
∆∆8 9
	MoveRight
«« !
(
««! "
true
««" &
,
««& '
false
««( -
)
««- .
;
««. /
}
»» 
UpdateLabel
   
(
   
)
   
;
   
float
ÃÃ 
delay
ÃÃ 
=
ÃÃ 
	multiLine
ÃÃ '
?
ÃÃ( )
kVScrollSpeed
ÃÃ* 7
:
ÃÃ8 9
kHScrollSpeed
ÃÃ: G
;
ÃÃG H
if
ŒŒ 
(
ŒŒ &
m_WaitForSecondsRealtime
ŒŒ ,
==
ŒŒ- /
null
ŒŒ0 4
)
ŒŒ4 5&
m_WaitForSecondsRealtime
œœ ,
=
œœ- .
new
œœ/ 2$
WaitForSecondsRealtime
œœ3 I
(
œœI J
delay
œœJ O
)
œœO P
;
œœP Q
else
–– &
m_WaitForSecondsRealtime
—— ,
.
——, -
waitTime
——- 5
=
——6 7
delay
——8 =
;
——= >
yield
”” 
return
”” &
m_WaitForSecondsRealtime
”” 5
;
””5 6
}
‘‘ 
m_DragCoroutine
’’ 
=
’’ 
null
’’ "
;
’’" #
}
÷÷ 	
public
ÿÿ 
virtual
ÿÿ 
void
ÿÿ 
	OnEndDrag
ÿÿ %
(
ÿÿ% &
PointerEventData
ÿÿ& 6
	eventData
ÿÿ7 @
)
ÿÿ@ A
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ 
!
⁄⁄ 
MayDrag
⁄⁄ 
(
⁄⁄ 
	eventData
⁄⁄ "
)
⁄⁄" #
)
⁄⁄# $
return
€€ 
;
€€ 
m_UpdateDrag
›› 
=
›› 
false
››  
;
››  !
}
ﬁﬁ 	
public
‡‡ 
override
‡‡ 
void
‡‡ 
OnPointerDown
‡‡ *
(
‡‡* +
PointerEventData
‡‡+ ;
	eventData
‡‡< E
)
‡‡E F
{
·· 	
if
‚‚ 
(
‚‚ 
!
‚‚ 
MayDrag
‚‚ 
(
‚‚ 
	eventData
‚‚ "
)
‚‚" #
)
‚‚# $
return
„„ 
;
„„ 
EventSystem
ÂÂ 
.
ÂÂ 
current
ÂÂ 
.
ÂÂ  #
SetSelectedGameObject
ÂÂ  5
(
ÂÂ5 6

gameObject
ÂÂ6 @
,
ÂÂ@ A
	eventData
ÂÂB K
)
ÂÂK L
;
ÂÂL M
bool
ÁÁ 
hadFocusBefore
ÁÁ 
=
ÁÁ  !
m_AllowInput
ÁÁ" .
;
ÁÁ. /
base
ËË 
.
ËË 
OnPointerDown
ËË 
(
ËË 
	eventData
ËË (
)
ËË( )
;
ËË) *
if
ÍÍ 
(
ÍÍ 
InPlaceEditing
ÍÍ 
(
ÍÍ 
)
ÍÍ  
==
ÍÍ! #
false
ÍÍ$ )
)
ÍÍ) *
{
ÎÎ 
if
ÏÏ 
(
ÏÏ 
m_SoftKeyboard
ÏÏ "
==
ÏÏ# %
null
ÏÏ& *
||
ÏÏ+ -
!
ÏÏ. /
m_SoftKeyboard
ÏÏ/ =
.
ÏÏ= >
active
ÏÏ> D
)
ÏÏD E
{
ÌÌ 
OnSelect
ÓÓ 
(
ÓÓ 
	eventData
ÓÓ &
)
ÓÓ& '
;
ÓÓ' (
return
ÔÔ 
;
ÔÔ 
}
 
}
ÒÒ 
bool
˜˜ 
shift
˜˜ 
=
˜˜ 
Input
˜˜ 
.
˜˜ 
GetKey
˜˜ %
(
˜˜% &
KeyCode
˜˜& -
.
˜˜- .
	LeftShift
˜˜. 7
)
˜˜7 8
||
˜˜9 ;
Input
˜˜< A
.
˜˜A B
GetKey
˜˜B H
(
˜˜H I
KeyCode
˜˜I P
.
˜˜P Q

RightShift
˜˜Q [
)
˜˜[ \
;
˜˜\ ]
bool
˚˚ 
isDoubleClick
˚˚ 
=
˚˚  
false
˚˚! &
;
˚˚& '
float
¸¸ 
	timeStamp
¸¸ 
=
¸¸ 
Time
¸¸ "
.
¸¸" #
unscaledTime
¸¸# /
;
¸¸/ 0
if
˛˛ 
(
˛˛ )
m_PointerDownClickStartTime
˛˛ +
+
˛˛, - 
m_DoubleClickDelay
˛˛. @
>
˛˛A B
	timeStamp
˛˛C L
)
˛˛L M
isDoubleClick
ˇˇ 
=
ˇˇ 
true
ˇˇ  $
;
ˇˇ$ %)
m_PointerDownClickStartTime
ÅÅ '
=
ÅÅ( )
	timeStamp
ÅÅ* 3
;
ÅÅ3 4
if
ÖÖ 
(
ÖÖ 
hadFocusBefore
ÖÖ 
||
ÖÖ !
!
ÖÖ" # 
m_OnFocusSelectAll
ÖÖ# 5
)
ÖÖ5 6
{
ÜÜ 
CaretPosition
áá 
insertionSide
áá +
;
áá+ ,
int
ââ 
insertionIndex
ââ "
=
ââ# $
TMP_TextUtilities
ââ% 6
.
ââ6 7(
GetCursorIndexFromPosition
ââ7 Q
(
ââQ R
m_TextComponent
ââR a
,
ââa b
	eventData
ââc l
.
ââl m
position
ââm u
,
ââu v
	eventDataââw Ä
.ââÄ Å 
pressEventCameraââÅ ë
,ââë í
outââì ñ
insertionSideââó §
)ââ§ •
;ââ• ¶
if
ãã 
(
ãã 
shift
ãã 
)
ãã 
{
åå 
if
çç 
(
çç (
m_isRichTextEditingAllowed
çç 2
)
çç2 3
{
éé 
if
èè 
(
èè 
insertionSide
èè )
==
èè* ,
CaretPosition
èè- :
.
èè: ;
Left
èè; ?
)
èè? @
{
êê *
stringSelectPositionInternal
ëë 8
=
ëë9 :
m_TextComponent
ëë; J
.
ëëJ K
textInfo
ëëK S
.
ëëS T
characterInfo
ëëT a
[
ëëa b
insertionIndex
ëëb p
]
ëëp q
.
ëëq r
index
ëër w
;
ëëw x
}
íí 
else
ìì 
if
ìì 
(
ìì  !
insertionSide
ìì! .
==
ìì/ 1
CaretPosition
ìì2 ?
.
ìì? @
Right
ìì@ E
)
ììE F
{
îî *
stringSelectPositionInternal
ïï 8
=
ïï9 :
m_TextComponent
ïï; J
.
ïïJ K
textInfo
ïïK S
.
ïïS T
characterInfo
ïïT a
[
ïïa b
insertionIndex
ïïb p
]
ïïp q
.
ïïq r
index
ïïr w
+
ïïx y
m_TextComponentïïz â
.ïïâ ä
textInfoïïä í
.ïïí ì
characterInfoïïì †
[ïï† °
insertionIndexïï° Ø
]ïïØ ∞
.ïï∞ ±
stringLengthïï± Ω
;ïïΩ æ
}
ññ 
}
óó 
else
òò 
{
ôô 
if
öö 
(
öö 
insertionSide
öö )
==
öö* ,
CaretPosition
öö- :
.
öö: ;
Left
öö; ?
)
öö? @
{
õõ *
stringSelectPositionInternal
úú 8
=
úú9 :
insertionIndex
úú; I
==
úúJ L
$num
úúM N
?
ùù  !
m_TextComponent
ùù" 1
.
ùù1 2
textInfo
ùù2 :
.
ùù: ;
characterInfo
ùù; H
[
ùùH I
$num
ùùI J
]
ùùJ K
.
ùùK L
index
ùùL Q
:
ûû  !
m_TextComponent
ûû" 1
.
ûû1 2
textInfo
ûû2 :
.
ûû: ;
characterInfo
ûû; H
[
ûûH I
insertionIndex
ûûI W
-
ûûX Y
$num
ûûZ [
]
ûû[ \
.
ûû\ ]
index
ûû] b
+
ûûc d
m_TextComponent
ûûe t
.
ûût u
textInfo
ûûu }
.
ûû} ~
characterInfoûû~ ã
[ûûã å
insertionIndexûûå ö
-ûûõ ú
$numûûù û
]ûûû ü
.ûûü †
stringLengthûû† ¨
;ûû¨ ≠
}
üü 
else
†† 
if
†† 
(
††  !
insertionSide
††! .
==
††/ 1
CaretPosition
††2 ?
.
††? @
Right
††@ E
)
††E F
{
°° *
stringSelectPositionInternal
¢¢ 8
=
¢¢9 :
m_TextComponent
¢¢; J
.
¢¢J K
textInfo
¢¢K S
.
¢¢S T
characterInfo
¢¢T a
[
¢¢a b
insertionIndex
¢¢b p
]
¢¢p q
.
¢¢q r
index
¢¢r w
+
¢¢x y
m_TextComponent¢¢z â
.¢¢â ä
textInfo¢¢ä í
.¢¢í ì
characterInfo¢¢ì †
[¢¢† °
insertionIndex¢¢° Ø
]¢¢Ø ∞
.¢¢∞ ±
stringLength¢¢± Ω
;¢¢Ω æ
}
££ 
}
§§ 
}
•• 
else
¶¶ 
{
ßß 
if
®® 
(
®® (
m_isRichTextEditingAllowed
®® 2
)
®®2 3
{
©© 
if
™™ 
(
™™ 
insertionSide
™™ )
==
™™* ,
CaretPosition
™™- :
.
™™: ;
Left
™™; ?
)
™™? @
{
´´ $
stringPositionInternal
¨¨ 2
=
¨¨3 4*
stringSelectPositionInternal
¨¨5 Q
=
¨¨R S
m_TextComponent
¨¨T c
.
¨¨c d
textInfo
¨¨d l
.
¨¨l m
characterInfo
¨¨m z
[
¨¨z {
insertionIndex¨¨{ â
]¨¨â ä
.¨¨ä ã
index¨¨ã ê
;¨¨ê ë
}
≠≠ 
else
ÆÆ 
if
ÆÆ 
(
ÆÆ  !
insertionSide
ÆÆ! .
==
ÆÆ/ 1
CaretPosition
ÆÆ2 ?
.
ÆÆ? @
Right
ÆÆ@ E
)
ÆÆE F
{
ØØ $
stringPositionInternal
∞∞ 2
=
∞∞3 4*
stringSelectPositionInternal
∞∞5 Q
=
∞∞R S
m_TextComponent
∞∞T c
.
∞∞c d
textInfo
∞∞d l
.
∞∞l m
characterInfo
∞∞m z
[
∞∞z {
insertionIndex∞∞{ â
]∞∞â ä
.∞∞ä ã
index∞∞ã ê
+∞∞ë í
m_TextComponent∞∞ì ¢
.∞∞¢ £
textInfo∞∞£ ´
.∞∞´ ¨
characterInfo∞∞¨ π
[∞∞π ∫
insertionIndex∞∞∫ »
]∞∞» …
.∞∞…  
stringLength∞∞  ÷
;∞∞÷ ◊
}
±± 
}
≤≤ 
else
≥≥ 
{
¥¥ 
if
µµ 
(
µµ 
insertionSide
µµ )
==
µµ* ,
CaretPosition
µµ- :
.
µµ: ;
Left
µµ; ?
)
µµ? @
{
∂∂ $
stringPositionInternal
∑∑ 2
=
∑∑3 4*
stringSelectPositionInternal
∑∑5 Q
=
∑∑R S
insertionIndex
∑∑T b
==
∑∑c e
$num
∑∑f g
?
∏∏  !
m_TextComponent
∏∏" 1
.
∏∏1 2
textInfo
∏∏2 :
.
∏∏: ;
characterInfo
∏∏; H
[
∏∏H I
$num
∏∏I J
]
∏∏J K
.
∏∏K L
index
∏∏L Q
:
ππ  !
m_TextComponent
ππ" 1
.
ππ1 2
textInfo
ππ2 :
.
ππ: ;
characterInfo
ππ; H
[
ππH I
insertionIndex
ππI W
-
ππX Y
$num
ππZ [
]
ππ[ \
.
ππ\ ]
index
ππ] b
+
ππc d
m_TextComponent
ππe t
.
ππt u
textInfo
ππu }
.
ππ} ~
characterInfoππ~ ã
[ππã å
insertionIndexππå ö
-ππõ ú
$numππù û
]ππû ü
.ππü †
stringLengthππ† ¨
;ππ¨ ≠
}
∫∫ 
else
ªª 
if
ªª 
(
ªª  !
insertionSide
ªª! .
==
ªª/ 1
CaretPosition
ªª2 ?
.
ªª? @
Right
ªª@ E
)
ªªE F
{
ºº $
stringPositionInternal
ΩΩ 2
=
ΩΩ3 4*
stringSelectPositionInternal
ΩΩ5 Q
=
ΩΩR S
m_TextComponent
ΩΩT c
.
ΩΩc d
textInfo
ΩΩd l
.
ΩΩl m
characterInfo
ΩΩm z
[
ΩΩz {
insertionIndexΩΩ{ â
]ΩΩâ ä
.ΩΩä ã
indexΩΩã ê
+ΩΩë í
m_TextComponentΩΩì ¢
.ΩΩ¢ £
textInfoΩΩ£ ´
.ΩΩ´ ¨
characterInfoΩΩ¨ π
[ΩΩπ ∫
insertionIndexΩΩ∫ »
]ΩΩ» …
.ΩΩ…  
stringLengthΩΩ  ÷
;ΩΩ÷ ◊
}
ææ 
}
øø 
}
¿¿ 
if
√√ 
(
√√ 
isDoubleClick
√√ !
)
√√! "
{
ƒƒ 
int
≈≈ 
	wordIndex
≈≈ !
=
≈≈" #
TMP_TextUtilities
≈≈$ 5
.
≈≈5 6"
FindIntersectingWord
≈≈6 J
(
≈≈J K
m_TextComponent
≈≈K Z
,
≈≈Z [
	eventData
≈≈\ e
.
≈≈e f
position
≈≈f n
,
≈≈n o
	eventData
≈≈p y
.
≈≈y z
pressEventCamera≈≈z ä
)≈≈ä ã
;≈≈ã å
if
«« 
(
«« 
	wordIndex
«« !
!=
««" $
-
««% &
$num
««& '
)
««' (
{
»» #
caretPositionInternal
ÃÃ -
=
ÃÃ. /
m_TextComponent
ÃÃ0 ?
.
ÃÃ? @
textInfo
ÃÃ@ H
.
ÃÃH I
wordInfo
ÃÃI Q
[
ÃÃQ R
	wordIndex
ÃÃR [
]
ÃÃ[ \
.
ÃÃ\ ]!
firstCharacterIndex
ÃÃ] p
;
ÃÃp q)
caretSelectPositionInternal
ÕÕ 3
=
ÕÕ4 5
m_TextComponent
ÕÕ6 E
.
ÕÕE F
textInfo
ÕÕF N
.
ÕÕN O
wordInfo
ÕÕO W
[
ÕÕW X
	wordIndex
ÕÕX a
]
ÕÕa b
.
ÕÕb c 
lastCharacterIndex
ÕÕc u
+
ÕÕv w
$num
ÕÕx y
;
ÕÕy z$
stringPositionInternal
œœ .
=
œœ/ 0
m_TextComponent
œœ1 @
.
œœ@ A
textInfo
œœA I
.
œœI J
characterInfo
œœJ W
[
œœW X#
caretPositionInternal
œœX m
]
œœm n
.
œœn o
index
œœo t
;
œœt u*
stringSelectPositionInternal
–– 4
=
––5 6
m_TextComponent
––7 F
.
––F G
textInfo
––G O
.
––O P
characterInfo
––P ]
[
––] ^)
caretSelectPositionInternal
––^ y
-
––z {
$num
––| }
]
––} ~
.
––~ 
index–– Ñ
+––Ö Ü
m_TextComponent––á ñ
.––ñ ó
textInfo––ó ü
.––ü †
characterInfo––† ≠
[––≠ Æ+
caretSelectPositionInternal––Æ …
-––  À
$num––Ã Õ
]––Õ Œ
.––Œ œ
stringLength––œ €
;––€ ‹
}
—— 
else
““ 
{
”” #
caretPositionInternal
’’ -
=
’’. /
insertionIndex
’’0 >
;
’’> ?)
caretSelectPositionInternal
÷÷ 3
=
÷÷4 5#
caretPositionInternal
÷÷6 K
+
÷÷L M
$num
÷÷N O
;
÷÷O P$
stringPositionInternal
ÿÿ .
=
ÿÿ/ 0
m_TextComponent
ÿÿ1 @
.
ÿÿ@ A
textInfo
ÿÿA I
.
ÿÿI J
characterInfo
ÿÿJ W
[
ÿÿW X
insertionIndex
ÿÿX f
]
ÿÿf g
.
ÿÿg h
index
ÿÿh m
;
ÿÿm n*
stringSelectPositionInternal
ŸŸ 4
=
ŸŸ5 6$
stringPositionInternal
ŸŸ7 M
+
ŸŸN O
m_TextComponent
ŸŸP _
.
ŸŸ_ `
textInfo
ŸŸ` h
.
ŸŸh i
characterInfo
ŸŸi v
[
ŸŸv w
insertionIndexŸŸw Ö
]ŸŸÖ Ü
.ŸŸÜ á
stringLengthŸŸá ì
;ŸŸì î
}
⁄⁄ 
}
€€ 
else
‹‹ 
{
›› #
caretPositionInternal
ﬁﬁ )
=
ﬁﬁ* +)
caretSelectPositionInternal
ﬁﬁ, G
=
ﬁﬁH I-
GetCaretPositionFromStringIndex
ﬁﬁJ i
(
ﬁﬁi j%
stringPositionInternalﬁﬁj Ä
)ﬁﬁÄ Å
;ﬁﬁÅ Ç
}
ﬂﬂ 
m_isSelectAll
·· 
=
·· 
false
··  %
;
··% &
}
‚‚ 
UpdateLabel
‰‰ 
(
‰‰ 
)
‰‰ 
;
‰‰ 
	eventData
ÂÂ 
.
ÂÂ 
Use
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÍÍ 	
	protected
ÏÏ 
enum
ÏÏ 
	EditState
ÏÏ  
{
ÌÌ 	
Continue
ÓÓ 
,
ÓÓ 
Finish
ÔÔ 
}
 	
	protected
ÚÚ 
	EditState
ÚÚ 

KeyPressed
ÚÚ &
(
ÚÚ& '
Event
ÚÚ' ,
evt
ÚÚ- 0
)
ÚÚ0 1
{
ÛÛ 	
var
ÙÙ #
currentEventModifiers
ÙÙ %
=
ÙÙ& '
evt
ÙÙ( +
.
ÙÙ+ ,
	modifiers
ÙÙ, 5
;
ÙÙ5 6
bool
ıı 
ctrl
ıı 
=
ıı 

SystemInfo
ıı "
.
ıı" ##
operatingSystemFamily
ıı# 8
==
ıı9 ;#
OperatingSystemFamily
ıı< Q
.
ııQ R
MacOSX
ııR X
?
ııY Z
(
ıı[ \#
currentEventModifiers
ıı\ q
&
ıır s
EventModifiersııt Ç
.ııÇ É
CommandııÉ ä
)ııä ã
!=ııå é
$numııè ê
:ııë í
(ııì î%
currentEventModifiersııî ©
&ıı™ ´
EventModifiersıı¨ ∫
.ıı∫ ª
Controlııª ¬
)ıı¬ √
!=ııƒ ∆
$numıı« »
;ıı» …
bool
ˆˆ 
shift
ˆˆ 
=
ˆˆ 
(
ˆˆ #
currentEventModifiers
ˆˆ /
&
ˆˆ0 1
EventModifiers
ˆˆ2 @
.
ˆˆ@ A
Shift
ˆˆA F
)
ˆˆF G
!=
ˆˆH J
$num
ˆˆK L
;
ˆˆL M
bool
˜˜ 
alt
˜˜ 
=
˜˜ 
(
˜˜ #
currentEventModifiers
˜˜ -
&
˜˜. /
EventModifiers
˜˜0 >
.
˜˜> ?
Alt
˜˜? B
)
˜˜B C
!=
˜˜D F
$num
˜˜G H
;
˜˜H I
bool
¯¯ 
ctrlOnly
¯¯ 
=
¯¯ 
ctrl
¯¯  
&&
¯¯! #
!
¯¯$ %
alt
¯¯% (
&&
¯¯) +
!
¯¯, -
shift
¯¯- 2
;
¯¯2 3
switch
˙˙ 
(
˙˙ 
evt
˙˙ 
.
˙˙ 
keyCode
˙˙ 
)
˙˙  
{
˚˚ 
case
¸¸ 
KeyCode
¸¸ 
.
¸¸ 
	Backspace
¸¸ &
:
¸¸& '
{
˝˝ 
	Backspace
˛˛ !
(
˛˛! "
)
˛˛" #
;
˛˛# $
return
ˇˇ 
	EditState
ˇˇ (
.
ˇˇ( )
Continue
ˇˇ) 1
;
ˇˇ1 2
}
ÄÄ 
case
ÇÇ 
KeyCode
ÇÇ 
.
ÇÇ 
Delete
ÇÇ #
:
ÇÇ# $
{
ÉÉ 
	DeleteKey
ÑÑ !
(
ÑÑ! "
)
ÑÑ" #
;
ÑÑ# $
return
ÖÖ 
	EditState
ÖÖ (
.
ÖÖ( )
Continue
ÖÖ) 1
;
ÖÖ1 2
}
ÜÜ 
case
àà 
KeyCode
àà 
.
àà 
Home
àà !
:
àà! "
{
ââ 
MoveToStartOfLine
ää )
(
ää) *
shift
ää* /
,
ää/ 0
ctrl
ää1 5
)
ää5 6
;
ää6 7
return
ãã 
	EditState
ãã (
.
ãã( )
Continue
ãã) 1
;
ãã1 2
}
åå 
case
éé 
KeyCode
éé 
.
éé 
End
éé  
:
éé  !
{
èè 
MoveToEndOfLine
êê '
(
êê' (
shift
êê( -
,
êê- .
ctrl
êê/ 3
)
êê3 4
;
êê4 5
return
ëë 
	EditState
ëë (
.
ëë( )
Continue
ëë) 1
;
ëë1 2
}
íí 
case
ïï 
KeyCode
ïï 
.
ïï 
A
ïï 
:
ïï 
{
ññ 
if
óó 
(
óó 
ctrlOnly
óó $
)
óó$ %
{
òò 
	SelectAll
ôô %
(
ôô% &
)
ôô& '
;
ôô' (
return
öö "
	EditState
öö# ,
.
öö, -
Continue
öö- 5
;
öö5 6
}
õõ 
break
úú 
;
úú 
}
ùù 
case
†† 
KeyCode
†† 
.
†† 
C
†† 
:
†† 
{
°° 
if
¢¢ 
(
¢¢ 
ctrlOnly
¢¢ $
)
¢¢$ %
{
££ 
if
§§ 
(
§§  
	inputType
§§  )
!=
§§* ,
	InputType
§§- 6
.
§§6 7
Password
§§7 ?
)
§§? @
	clipboard
••  )
=
••* +
GetSelectedString
••, =
(
••= >
)
••> ?
;
••? @
else
¶¶  
	clipboard
ßß  )
=
ßß* +
$str
ßß, .
;
ßß. /
return
®® "
	EditState
®®# ,
.
®®, -
Continue
®®- 5
;
®®5 6
}
©© 
break
™™ 
;
™™ 
}
´´ 
case
ÆÆ 
KeyCode
ÆÆ 
.
ÆÆ 
V
ÆÆ 
:
ÆÆ 
{
ØØ 
if
∞∞ 
(
∞∞ 
ctrlOnly
∞∞ $
)
∞∞$ %
{
±± 
Append
≤≤ "
(
≤≤" #
	clipboard
≤≤# ,
)
≤≤, -
;
≤≤- .
return
≥≥ "
	EditState
≥≥# ,
.
≥≥, -
Continue
≥≥- 5
;
≥≥5 6
}
¥¥ 
break
µµ 
;
µµ 
}
∂∂ 
case
ππ 
KeyCode
ππ 
.
ππ 
X
ππ 
:
ππ 
{
∫∫ 
if
ªª 
(
ªª 
ctrlOnly
ªª $
)
ªª$ %
{
ºº 
if
ΩΩ 
(
ΩΩ  
	inputType
ΩΩ  )
!=
ΩΩ* ,
	InputType
ΩΩ- 6
.
ΩΩ6 7
Password
ΩΩ7 ?
)
ΩΩ? @
	clipboard
ææ  )
=
ææ* +
GetSelectedString
ææ, =
(
ææ= >
)
ææ> ?
;
ææ? @
else
øø  
	clipboard
¿¿  )
=
¿¿* +
$str
¿¿, .
;
¿¿. /
Delete
¡¡ "
(
¡¡" #
)
¡¡# $
;
¡¡$ %0
"UpdateTouchKeyboardFromEditChanges
¬¬ >
(
¬¬> ?
)
¬¬? @
;
¬¬@ A.
 SendOnValueChangedAndUpdateLabel
√√ <
(
√√< =
)
√√= >
;
√√> ?
return
ƒƒ "
	EditState
ƒƒ# ,
.
ƒƒ, -
Continue
ƒƒ- 5
;
ƒƒ5 6
}
≈≈ 
break
∆∆ 
;
∆∆ 
}
«« 
case
…… 
KeyCode
…… 
.
…… 
	LeftArrow
…… &
:
……& '
{
   
MoveLeft
ÀÀ  
(
ÀÀ  !
shift
ÀÀ! &
,
ÀÀ& '
ctrl
ÀÀ( ,
)
ÀÀ, -
;
ÀÀ- .
return
ÃÃ 
	EditState
ÃÃ (
.
ÃÃ( )
Continue
ÃÃ) 1
;
ÃÃ1 2
}
ÕÕ 
case
œœ 
KeyCode
œœ 
.
œœ 

RightArrow
œœ '
:
œœ' (
{
–– 
	MoveRight
—— !
(
——! "
shift
——" '
,
——' (
ctrl
——) -
)
——- .
;
——. /
return
““ 
	EditState
““ (
.
““( )
Continue
““) 1
;
““1 2
}
”” 
case
’’ 
KeyCode
’’ 
.
’’ 
UpArrow
’’ $
:
’’$ %
{
÷÷ 
MoveUp
◊◊ 
(
◊◊ 
shift
◊◊ $
)
◊◊$ %
;
◊◊% &
return
ÿÿ 
	EditState
ÿÿ (
.
ÿÿ( )
Continue
ÿÿ) 1
;
ÿÿ1 2
}
ŸŸ 
case
€€ 
KeyCode
€€ 
.
€€ 
	DownArrow
€€ &
:
€€& '
{
‹‹ 
MoveDown
››  
(
››  !
shift
››! &
)
››& '
;
››' (
return
ﬁﬁ 
	EditState
ﬁﬁ (
.
ﬁﬁ( )
Continue
ﬁﬁ) 1
;
ﬁﬁ1 2
}
ﬂﬂ 
case
·· 
KeyCode
·· 
.
·· 
PageUp
·· #
:
··# $
{
‚‚ 

MovePageUp
„„ "
(
„„" #
shift
„„# (
)
„„( )
;
„„) *
return
‰‰ 
	EditState
‰‰ (
.
‰‰( )
Continue
‰‰) 1
;
‰‰1 2
}
ÂÂ 
case
ÁÁ 
KeyCode
ÁÁ 
.
ÁÁ 
PageDown
ÁÁ %
:
ÁÁ% &
{
ËË 
MovePageDown
ÈÈ $
(
ÈÈ$ %
shift
ÈÈ% *
)
ÈÈ* +
;
ÈÈ+ ,
return
ÍÍ 
	EditState
ÍÍ (
.
ÍÍ( )
Continue
ÍÍ) 1
;
ÍÍ1 2
}
ÎÎ 
case
ÓÓ 
KeyCode
ÓÓ 
.
ÓÓ 
Return
ÓÓ #
:
ÓÓ# $
case
ÔÔ 
KeyCode
ÔÔ 
.
ÔÔ 
KeypadEnter
ÔÔ (
:
ÔÔ( )
{
 
if
ÒÒ 
(
ÒÒ 
lineType
ÒÒ $
!=
ÒÒ% '
LineType
ÒÒ( 0
.
ÒÒ0 1
MultiLineNewline
ÒÒ1 A
)
ÒÒA B
{
ÚÚ  
m_ReleaseSelection
ÛÛ .
=
ÛÛ/ 0
true
ÛÛ1 5
;
ÛÛ5 6
return
ÙÙ "
	EditState
ÙÙ# ,
.
ÙÙ, -
Finish
ÙÙ- 3
;
ÙÙ3 4
}
ıı 
break
ˆˆ 
;
ˆˆ 
}
˜˜ 
case
˘˘ 
KeyCode
˘˘ 
.
˘˘ 
Escape
˘˘ #
:
˘˘# $
{
˙˙  
m_ReleaseSelection
˚˚ *
=
˚˚+ ,
true
˚˚- 1
;
˚˚1 2
m_WasCanceled
¸¸ %
=
¸¸& '
true
¸¸( ,
;
¸¸, -
return
˝˝ 
	EditState
˝˝ (
.
˝˝( )
Finish
˝˝) /
;
˝˝/ 0
}
˛˛ 
}
ˇˇ 
char
ÅÅ 
c
ÅÅ 
=
ÅÅ 
evt
ÅÅ 
.
ÅÅ 
	character
ÅÅ "
;
ÅÅ" #
if
ÑÑ 
(
ÑÑ 
!
ÑÑ 
	multiLine
ÑÑ 
&&
ÑÑ 
(
ÑÑ 
c
ÑÑ  
==
ÑÑ! #
$char
ÑÑ$ (
||
ÑÑ) +
c
ÑÑ, -
==
ÑÑ. 0
$char
ÑÑ1 5
||
ÑÑ6 8
c
ÑÑ9 :
==
ÑÑ; =
$num
ÑÑ> @
)
ÑÑ@ A
)
ÑÑA B
return
ÖÖ 
	EditState
ÖÖ  
.
ÖÖ  !
Continue
ÖÖ! )
;
ÖÖ) *
if
àà 
(
àà 
c
àà 
==
àà 
$char
àà 
||
àà 
(
àà 
int
àà !
)
àà! "
c
àà" #
==
àà$ &
$num
àà' (
)
àà( )
c
ââ 
=
ââ 
$char
ââ 
;
ââ 
if
åå 
(
åå 
shift
åå 
&&
åå 
c
åå 
==
åå 
$char
åå "
)
åå" #
c
çç 
=
çç 
$char
çç 
;
çç 
if
èè 
(
èè 
IsValidChar
èè 
(
èè 
c
èè 
)
èè 
)
èè 
{
êê 
Append
ëë 
(
ëë 
c
ëë 
)
ëë 
;
ëë 
}
íí 
if
îî 
(
îî 
c
îî 
==
îî 
$num
îî 
)
îî 
{
ïï 
if
ññ 
(
ññ 
compositionLength
ññ %
>
ññ& '
$num
ññ( )
)
ññ) *
{
óó 
UpdateLabel
òò 
(
òò  
)
òò  !
;
òò! "
}
ôô 
}
öö 
return
õõ 
	EditState
õõ 
.
õõ 
Continue
õõ %
;
õõ% &
}
úú 	
	protected
ûû 
virtual
ûû 
bool
ûû 
IsValidChar
ûû *
(
ûû* +
char
ûû+ /
c
ûû0 1
)
ûû1 2
{
üü 	
if
°° 
(
°° 
c
°° 
==
°° 
$num
°° 
)
°° 
return
¢¢ 
false
¢¢ 
;
¢¢ 
if
•• 
(
•• 
c
•• 
==
•• 
$num
•• 
)
•• 
return
¶¶ 
false
¶¶ 
;
¶¶ 
if
©© 
(
©© 
c
©© 
==
©© 
$char
©© 
||
©© 
c
©© 
==
©© !
$char
©©" &
)
©©& '
return
™™ 
true
™™ 
;
™™ 
return
¨¨ 
true
¨¨ 
;
¨¨ 
}
∞∞ 	
private
µµ 
Event
µµ 
m_ProcessingEvent
µµ '
=
µµ( )
new
µµ* -
Event
µµ. 3
(
µµ3 4
)
µµ4 5
;
µµ5 6
public
∑∑ 
void
∑∑ 
ProcessEvent
∑∑  
(
∑∑  !
Event
∑∑! &
e
∑∑' (
)
∑∑( )
{
∏∏ 	

KeyPressed
ππ 
(
ππ 
e
ππ 
)
ππ 
;
ππ 
}
∫∫ 	
public
¡¡ 
virtual
¡¡ 
void
¡¡ 
OnUpdateSelected
¡¡ ,
(
¡¡, -
BaseEventData
¡¡- :
	eventData
¡¡; D
)
¡¡D E
{
¬¬ 	
if
√√ 
(
√√ 
!
√√ 
	isFocused
√√ 
)
√√ 
return
ƒƒ 
;
ƒƒ 
bool
∆∆ 
consumedEvent
∆∆ 
=
∆∆  
false
∆∆! &
;
∆∆& '
	EditState
«« 
shouldContinue
«« $
;
««$ %
while
…… 
(
…… 
Event
…… 
.
…… 
PopEvent
…… !
(
……! "
m_ProcessingEvent
……" 3
)
……3 4
)
……4 5
{
   
switch
ÕÕ 
(
ÕÕ 
m_ProcessingEvent
ÕÕ )
.
ÕÕ) *
rawType
ÕÕ* 1
)
ÕÕ1 2
{
ŒŒ 
case
œœ 
	EventType
œœ "
.
œœ" #
KeyUp
œœ# (
:
œœ( )
break
““ 
;
““ 
case
’’ 
	EventType
’’ "
.
’’" #
KeyDown
’’# *
:
’’* +
consumedEvent
÷÷ %
=
÷÷& '
true
÷÷( ,
;
÷÷, -
if
ŸŸ 
(
ŸŸ #
m_IsCompositionActive
ŸŸ 1
&&
ŸŸ2 4
compositionLength
ŸŸ5 F
==
ŸŸG I
$num
ŸŸJ K
)
ŸŸK L
{
⁄⁄ 
if
ÁÁ 
(
ÁÁ  
m_ProcessingEvent
ÁÁ  1
.
ÁÁ1 2
	character
ÁÁ2 ;
==
ÁÁ< >
$num
ÁÁ? @
&&
ÁÁA C
m_ProcessingEvent
ÁÁD U
.
ÁÁU V
	modifiers
ÁÁV _
==
ÁÁ` b
EventModifiers
ÁÁc q
.
ÁÁq r
None
ÁÁr v
)
ÁÁv w
break
ËË  %
;
ËË% &
}
ÈÈ 
shouldContinue
ÎÎ &
=
ÎÎ' (

KeyPressed
ÎÎ) 3
(
ÎÎ3 4
m_ProcessingEvent
ÎÎ4 E
)
ÎÎE F
;
ÎÎF G
if
ÏÏ 
(
ÏÏ 
shouldContinue
ÏÏ *
==
ÏÏ+ -
	EditState
ÏÏ. 7
.
ÏÏ7 8
Finish
ÏÏ8 >
)
ÏÏ> ?
{
ÌÌ 
if
ÓÓ 
(
ÓÓ  
!
ÓÓ  !
m_WasCanceled
ÓÓ! .
)
ÓÓ. /
SendOnSubmit
ÔÔ  ,
(
ÔÔ, -
)
ÔÔ- .
;
ÔÔ. /"
DeactivateInputField
ÒÒ 0
(
ÒÒ0 1
)
ÒÒ1 2
;
ÒÒ2 3
break
ÚÚ !
;
ÚÚ! "
}
ÛÛ -
m_IsTextComponentUpdateRequired
ıı 7
=
ıı8 9
true
ıı: >
;
ıı> ?
UpdateLabel
ˆˆ #
(
ˆˆ# $
)
ˆˆ$ %
;
ˆˆ% &
break
¯¯ 
;
¯¯ 
case
˙˙ 
	EventType
˙˙ "
.
˙˙" #
ValidateCommand
˙˙# 2
:
˙˙2 3
case
˚˚ 
	EventType
˚˚ "
.
˚˚" #
ExecuteCommand
˚˚# 1
:
˚˚1 2
switch
¸¸ 
(
¸¸  
m_ProcessingEvent
¸¸  1
.
¸¸1 2
commandName
¸¸2 =
)
¸¸= >
{
˝˝ 
case
˛˛  
$str
˛˛! ,
:
˛˛, -
	SelectAll
ˇˇ  )
(
ˇˇ) *
)
ˇˇ* +
;
ˇˇ+ ,
consumedEvent
ÄÄ  -
=
ÄÄ. /
true
ÄÄ0 4
;
ÄÄ4 5
break
ÅÅ  %
;
ÅÅ% &
}
ÇÇ 
break
ÉÉ 
;
ÉÉ 
}
ÑÑ 
}
ÖÖ 
if
áá 
(
áá 
consumedEvent
áá 
)
áá 
UpdateLabel
àà 
(
àà 
)
àà 
;
àà 
	eventData
ää 
.
ää 
Use
ää 
(
ää 
)
ää 
;
ää 
}
ãã 	
public
íí 
virtual
íí 
void
íí 
OnScroll
íí $
(
íí$ %
PointerEventData
íí% 5
	eventData
íí6 ?
)
íí? @
{
ìì 	
if
ïï 
(
ïï 

m_LineType
ïï 
==
ïï 
LineType
ïï &
.
ïï& '

SingleLine
ïï' 1
)
ïï1 2
{
ññ 
if
óó 
(
óó $
m_IScrollHandlerParent
óó *
!=
óó+ -
null
óó. 2
)
óó2 3$
m_IScrollHandlerParent
òò *
.
òò* +
OnScroll
òò+ 3
(
òò3 4
	eventData
òò4 =
)
òò= >
;
òò> ?
return
öö 
;
öö 
}
õõ 
if
ùù 
(
ùù 
m_TextComponent
ùù 
.
ùù  
preferredHeight
ùù  /
<
ùù0 1
m_TextViewport
ùù2 @
.
ùù@ A
rect
ùùA E
.
ùùE F
height
ùùF L
)
ùùL M
return
ûû 
;
ûû 
float
†† 
scrollDirection
†† !
=
††" #
-
††$ %
	eventData
††% .
.
††. /
scrollDelta
††/ :
.
††: ;
y
††; <
;
††< =
m_ScrollPosition
££ 
=
££ 1
#GetScrollPositionRelativeToViewport
££ B
(
££B C
)
££C D
;
££D E
m_ScrollPosition
•• 
+=
•• 
(
••  !
$num
••! #
/
••$ %
m_TextComponent
••& 5
.
••5 6
textInfo
••6 >
.
••> ?
	lineCount
••? H
)
••H I
*
••J K
scrollDirection
••L [
*
••\ ]!
m_ScrollSensitivity
••^ q
;
••q r
m_ScrollPosition
ßß 
=
ßß 
Mathf
ßß $
.
ßß$ %
Clamp01
ßß% ,
(
ßß, -
m_ScrollPosition
ßß- =
)
ßß= >
;
ßß> ?2
$AdjustTextPositionRelativeToViewport
©© 0
(
©©0 1
m_ScrollPosition
©©1 A
)
©©A B
;
©©B C
if
´´ 
(
´´ !
m_VerticalScrollbar
´´ #
)
´´# $
{
¨¨ !
m_VerticalScrollbar
≠≠ #
.
≠≠# $
value
≠≠$ )
=
≠≠* +
m_ScrollPosition
≠≠, <
;
≠≠< =
}
ÆÆ 
}
±± 	
float
≥≥ 1
#GetScrollPositionRelativeToViewport
≥≥ 1
(
≥≥1 2
)
≥≥2 3
{
¥¥ 	
Rect
∂∂ 
viewportRect
∂∂ 
=
∂∂ 
m_TextViewport
∂∂  .
.
∂∂. /
rect
∂∂/ 3
;
∂∂3 4
float
∏∏ 
scrollPosition
∏∏  
=
∏∏! "
(
∏∏# $
m_TextComponent
∏∏$ 3
.
∏∏3 4
textInfo
∏∏4 <
.
∏∏< =
lineInfo
∏∏= E
[
∏∏E F
$num
∏∏F G
]
∏∏G H
.
∏∏H I
ascender
∏∏I Q
-
∏∏R S
viewportRect
∏∏T `
.
∏∏` a
yMax
∏∏a e
+
∏∏f g
m_TextComponent
∏∏h w
.
∏∏w x
rectTransform∏∏x Ö
.∏∏Ö Ü 
anchoredPosition∏∏Ü ñ
.∏∏ñ ó
y∏∏ó ò
)∏∏ò ô
/∏∏ö õ
(∏∏ú ù
m_TextComponent∏∏û ≠
.∏∏≠ Æ
preferredHeight∏∏Æ Ω
-∏∏æ ø
viewportRect∏∏¿ Ã
.∏∏Ã Õ
height∏∏Õ ”
)∏∏” ‘
;∏∏‘ ’
scrollPosition
∫∫ 
=
∫∫ 
(
∫∫ 
int
∫∫ !
)
∫∫! "
(
∫∫" #
(
∫∫# $
scrollPosition
∫∫$ 2
*
∫∫3 4
$num
∫∫5 9
)
∫∫9 :
+
∫∫; <
$num
∫∫= A
)
∫∫A B
/
∫∫C D
$num
∫∫E L
;
∫∫L M
return
ºº 
scrollPosition
ºº !
;
ºº! "
}
ΩΩ 	
private
øø 
string
øø 
GetSelectedString
øø (
(
øø( )
)
øø) *
{
¿¿ 	
if
¡¡ 
(
¡¡ 
!
¡¡ 
hasSelection
¡¡ 
)
¡¡ 
return
¬¬ 
$str
¬¬ 
;
¬¬ 
int
ƒƒ 
startPos
ƒƒ 
=
ƒƒ $
stringPositionInternal
ƒƒ 1
;
ƒƒ1 2
int
≈≈ 
endPos
≈≈ 
=
≈≈ *
stringSelectPositionInternal
≈≈ 5
;
≈≈5 6
if
»» 
(
»» 
startPos
»» 
>
»» 
endPos
»» !
)
»»! "
{
…… 
int
   
temp
   
=
   
startPos
   #
;
  # $
startPos
ÀÀ 
=
ÀÀ 
endPos
ÀÀ !
;
ÀÀ! "
endPos
ÃÃ 
=
ÃÃ 
temp
ÃÃ 
;
ÃÃ 
}
ÕÕ 
return
’’ 
text
’’ 
.
’’ 
	Substring
’’ !
(
’’! "
startPos
’’" *
,
’’* +
endPos
’’, 2
-
’’3 4
startPos
’’5 =
)
’’= >
;
’’> ?
}
÷÷ 	
private
ÿÿ 
int
ÿÿ 
FindNextWordBegin
ÿÿ %
(
ÿÿ% &
)
ÿÿ& '
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ *
stringSelectPositionInternal
⁄⁄ ,
+
⁄⁄- .
$num
⁄⁄/ 0
>=
⁄⁄1 3
text
⁄⁄4 8
.
⁄⁄8 9
Length
⁄⁄9 ?
)
⁄⁄? @
return
€€ 
text
€€ 
.
€€ 
Length
€€ "
;
€€" #
int
›› 
spaceLoc
›› 
=
›› 
text
›› 
.
››  

IndexOfAny
››  *
(
››* +
kSeparators
››+ 6
,
››6 7*
stringSelectPositionInternal
››8 T
+
››U V
$num
››W X
)
››X Y
;
››Y Z
if
ﬂﬂ 
(
ﬂﬂ 
spaceLoc
ﬂﬂ 
==
ﬂﬂ 
-
ﬂﬂ 
$num
ﬂﬂ 
)
ﬂﬂ 
spaceLoc
‡‡ 
=
‡‡ 
text
‡‡ 
.
‡‡  
Length
‡‡  &
;
‡‡& '
else
·· 
spaceLoc
‚‚ 
++
‚‚ 
;
‚‚ 
return
‰‰ 
spaceLoc
‰‰ 
;
‰‰ 
}
ÂÂ 	
private
ÁÁ 
void
ÁÁ 
	MoveRight
ÁÁ 
(
ÁÁ 
bool
ÁÁ #
shift
ÁÁ$ )
,
ÁÁ) *
bool
ÁÁ+ /
ctrl
ÁÁ0 4
)
ÁÁ4 5
{
ËË 	
if
ÈÈ 
(
ÈÈ 
hasSelection
ÈÈ 
&&
ÈÈ 
!
ÈÈ  !
shift
ÈÈ! &
)
ÈÈ& '
{
ÍÍ $
stringPositionInternal
ÌÌ &
=
ÌÌ' (*
stringSelectPositionInternal
ÌÌ) E
=
ÌÌF G
Mathf
ÌÌH M
.
ÌÌM N
Max
ÌÌN Q
(
ÌÌQ R$
stringPositionInternal
ÌÌR h
,
ÌÌh i+
stringSelectPositionInternalÌÌj Ü
)ÌÌÜ á
;ÌÌá à#
caretPositionInternal
ÓÓ %
=
ÓÓ& ')
caretSelectPositionInternal
ÓÓ( C
=
ÓÓD E-
GetCaretPositionFromStringIndex
ÓÓF e
(
ÓÓe f+
stringSelectPositionInternalÓÓf Ç
)ÓÓÇ É
;ÓÓÉ Ñ
return
ÛÛ 
;
ÛÛ 
}
ÙÙ 
int
ˆˆ 
position
ˆˆ 
;
ˆˆ 
if
˜˜ 
(
˜˜ 
ctrl
˜˜ 
)
˜˜ 
position
¯¯ 
=
¯¯ 
FindNextWordBegin
¯¯ ,
(
¯¯, -
)
¯¯- .
;
¯¯. /
else
˘˘ 
{
˙˙ 
if
˚˚ 
(
˚˚ (
m_isRichTextEditingAllowed
˚˚ .
)
˚˚. /
{
¸¸ 
if
˛˛ 
(
˛˛ *
stringSelectPositionInternal
˛˛ 4
<
˛˛5 6
text
˛˛7 ;
.
˛˛; <
Length
˛˛< B
&&
˛˛C E
char
˛˛F J
.
˛˛J K
IsHighSurrogate
˛˛K Z
(
˛˛Z [
text
˛˛[ _
[
˛˛_ `*
stringSelectPositionInternal
˛˛` |
]
˛˛| }
)
˛˛} ~
)
˛˛~ 
position
ˇˇ  
=
ˇˇ! "*
stringSelectPositionInternal
ˇˇ# ?
+
ˇˇ@ A
$num
ˇˇB C
;
ˇˇC D
else
ÄÄ 
position
ÅÅ  
=
ÅÅ! "*
stringSelectPositionInternal
ÅÅ# ?
+
ÅÅ@ A
$num
ÅÅB C
;
ÅÅC D
}
ÇÇ 
else
ÉÉ 
{
ÑÑ 
position
ÖÖ 
=
ÖÖ 
m_TextComponent
ÖÖ .
.
ÖÖ. /
textInfo
ÖÖ/ 7
.
ÖÖ7 8
characterInfo
ÖÖ8 E
[
ÖÖE F)
caretSelectPositionInternal
ÖÖF a
]
ÖÖa b
.
ÖÖb c
index
ÖÖc h
+
ÖÖi j
m_TextComponent
ÖÖk z
.
ÖÖz {
textInfoÖÖ{ É
.ÖÖÉ Ñ
characterInfoÖÖÑ ë
[ÖÖë í+
caretSelectPositionInternalÖÖí ≠
]ÖÖ≠ Æ
.ÖÖÆ Ø
stringLengthÖÖØ ª
;ÖÖª º
}
ÜÜ 
}
àà 
if
ää 
(
ää 
shift
ää 
)
ää 
{
ãã *
stringSelectPositionInternal
åå ,
=
åå- .
position
åå/ 7
;
åå7 8)
caretSelectPositionInternal
çç +
=
çç, --
GetCaretPositionFromStringIndex
çç. M
(
ççM N*
stringSelectPositionInternal
ççN j
)
ççj k
;
ççk l
}
éé 
else
èè 
{
êê *
stringSelectPositionInternal
ëë ,
=
ëë- .$
stringPositionInternal
ëë/ E
=
ëëF G
position
ëëH P
;
ëëP Q
if
îî 
(
îî $
stringPositionInternal
îî *
>=
îî+ -
m_TextComponent
îî. =
.
îî= >
textInfo
îî> F
.
îîF G
characterInfo
îîG T
[
îîT U#
caretPositionInternal
îîU j
]
îîj k
.
îîk l
index
îîl q
+
îîr s
m_TextComponentîît É
.îîÉ Ñ
textInfoîîÑ å
.îîå ç
characterInfoîîç ö
[îîö õ%
caretPositionInternalîîõ ∞
]îî∞ ±
.îî± ≤
stringLengthîî≤ æ
)îîæ ø)
caretSelectPositionInternal
ïï /
=
ïï0 1#
caretPositionInternal
ïï2 G
=
ïïH I-
GetCaretPositionFromStringIndex
ïïJ i
(
ïïi j+
stringSelectPositionInternalïïj Ü
)ïïÜ á
;ïïá à
}
ññ 
}
õõ 	
private
ùù 
int
ùù 
FindPrevWordBegin
ùù %
(
ùù% &
)
ùù& '
{
ûû 	
if
üü 
(
üü *
stringSelectPositionInternal
üü ,
-
üü- .
$num
üü/ 0
<
üü1 2
$num
üü3 4
)
üü4 5
return
†† 
$num
†† 
;
†† 
int
¢¢ 
spaceLoc
¢¢ 
=
¢¢ 
text
¢¢ 
.
¢¢  
LastIndexOfAny
¢¢  .
(
¢¢. /
kSeparators
¢¢/ :
,
¢¢: ;*
stringSelectPositionInternal
¢¢< X
-
¢¢Y Z
$num
¢¢[ \
)
¢¢\ ]
;
¢¢] ^
if
§§ 
(
§§ 
spaceLoc
§§ 
==
§§ 
-
§§ 
$num
§§ 
)
§§ 
spaceLoc
•• 
=
•• 
$num
•• 
;
•• 
else
¶¶ 
spaceLoc
ßß 
++
ßß 
;
ßß 
return
©© 
spaceLoc
©© 
;
©© 
}
™™ 	
private
¨¨ 
void
¨¨ 
MoveLeft
¨¨ 
(
¨¨ 
bool
¨¨ "
shift
¨¨# (
,
¨¨( )
bool
¨¨* .
ctrl
¨¨/ 3
)
¨¨3 4
{
≠≠ 	
if
ÆÆ 
(
ÆÆ 
hasSelection
ÆÆ 
&&
ÆÆ 
!
ÆÆ  !
shift
ÆÆ! &
)
ÆÆ& '
{
ØØ $
stringPositionInternal
≤≤ &
=
≤≤' (*
stringSelectPositionInternal
≤≤) E
=
≤≤F G
Mathf
≤≤H M
.
≤≤M N
Min
≤≤N Q
(
≤≤Q R$
stringPositionInternal
≤≤R h
,
≤≤h i+
stringSelectPositionInternal≤≤j Ü
)≤≤Ü á
;≤≤á à#
caretPositionInternal
≥≥ %
=
≥≥& ')
caretSelectPositionInternal
≥≥( C
=
≥≥D E-
GetCaretPositionFromStringIndex
≥≥F e
(
≥≥e f+
stringSelectPositionInternal≥≥f Ç
)≥≥Ç É
;≥≥É Ñ
return
∏∏ 
;
∏∏ 
}
ππ 
int
ªª 
position
ªª 
;
ªª 
if
ºº 
(
ºº 
ctrl
ºº 
)
ºº 
position
ΩΩ 
=
ΩΩ 
FindPrevWordBegin
ΩΩ ,
(
ΩΩ, -
)
ΩΩ- .
;
ΩΩ. /
else
ææ 
{
øø 
if
¿¿ 
(
¿¿ (
m_isRichTextEditingAllowed
¿¿ .
)
¿¿. /
{
¡¡ 
if
√√ 
(
√√ *
stringSelectPositionInternal
√√ 4
>
√√5 6
$num
√√7 8
&&
√√9 ;
char
√√< @
.
√√@ A
IsLowSurrogate
√√A O
(
√√O P
text
√√P T
[
√√T U*
stringSelectPositionInternal
√√U q
-
√√r s
$num
√√t u
]
√√u v
)
√√v w
)
√√w x
position
ƒƒ  
=
ƒƒ! "*
stringSelectPositionInternal
ƒƒ# ?
-
ƒƒ@ A
$num
ƒƒB C
;
ƒƒC D
else
≈≈ 
position
∆∆  
=
∆∆! "*
stringSelectPositionInternal
∆∆$ @
-
∆∆A B
$num
∆∆C D
;
∆∆D E
}
«« 
else
»» 
{
…… 
position
   
=
   )
caretSelectPositionInternal
   :
<
  ; <
$num
  = >
?
ÀÀ 
m_TextComponent
ÀÀ )
.
ÀÀ) *
textInfo
ÀÀ* 2
.
ÀÀ2 3
characterInfo
ÀÀ3 @
[
ÀÀ@ A
$num
ÀÀA B
]
ÀÀB C
.
ÀÀC D
index
ÀÀD I
:
ÃÃ 
m_TextComponent
ÃÃ )
.
ÃÃ) *
textInfo
ÃÃ* 2
.
ÃÃ2 3
characterInfo
ÃÃ3 @
[
ÃÃ@ A)
caretSelectPositionInternal
ÃÃA \
-
ÃÃ] ^
$num
ÃÃ_ `
]
ÃÃ` a
.
ÃÃa b
index
ÃÃb g
;
ÃÃg h
}
ÕÕ 
}
ŒŒ 
if
–– 
(
–– 
shift
–– 
)
–– 
{
—— *
stringSelectPositionInternal
““ ,
=
““- .
position
““/ 7
;
““7 8)
caretSelectPositionInternal
”” +
=
””, --
GetCaretPositionFromStringIndex
””. M
(
””M N*
stringSelectPositionInternal
””N j
)
””j k
;
””k l
}
‘‘ 
else
’’ 
{
÷÷ *
stringSelectPositionInternal
◊◊ ,
=
◊◊- .$
stringPositionInternal
◊◊/ E
=
◊◊F G
position
◊◊H P
;
◊◊P Q
if
⁄⁄ 
(
⁄⁄ #
caretPositionInternal
⁄⁄ )
>
⁄⁄* +
$num
⁄⁄, -
&&
⁄⁄. 0$
stringPositionInternal
⁄⁄1 G
<=
⁄⁄H J
m_TextComponent
⁄⁄K Z
.
⁄⁄Z [
textInfo
⁄⁄[ c
.
⁄⁄c d
characterInfo
⁄⁄d q
[
⁄⁄q r$
caretPositionInternal⁄⁄r á
-⁄⁄à â
$num⁄⁄ä ã
]⁄⁄ã å
.⁄⁄å ç
index⁄⁄ç í
)⁄⁄í ì)
caretSelectPositionInternal
€€ /
=
€€0 1#
caretPositionInternal
€€2 G
=
€€H I-
GetCaretPositionFromStringIndex
€€J i
(
€€i j+
stringSelectPositionInternal€€j Ü
)€€Ü á
;€€á à
}
‹‹ 
}
·· 	
private
‰‰ 
int
‰‰ %
LineUpCharacterPosition
‰‰ +
(
‰‰+ ,
int
‰‰, /
originalPos
‰‰0 ;
,
‰‰; <
bool
‰‰= A
goToFirstChar
‰‰B O
)
‰‰O P
{
ÂÂ 	
if
ÊÊ 
(
ÊÊ 
originalPos
ÊÊ 
>=
ÊÊ 
m_TextComponent
ÊÊ .
.
ÊÊ. /
textInfo
ÊÊ/ 7
.
ÊÊ7 8
characterCount
ÊÊ8 F
)
ÊÊF G
originalPos
ÁÁ 
-=
ÁÁ 
$num
ÁÁ  
;
ÁÁ  !
TMP_CharacterInfo
ÈÈ 

originChar
ÈÈ (
=
ÈÈ) *
m_TextComponent
ÈÈ+ :
.
ÈÈ: ;
textInfo
ÈÈ; C
.
ÈÈC D
characterInfo
ÈÈD Q
[
ÈÈQ R
originalPos
ÈÈR ]
]
ÈÈ] ^
;
ÈÈ^ _
int
ÍÍ 

originLine
ÍÍ 
=
ÍÍ 

originChar
ÍÍ '
.
ÍÍ' (

lineNumber
ÍÍ( 2
;
ÍÍ2 3
if
ÌÌ 
(
ÌÌ 

originLine
ÌÌ 
-
ÌÌ 
$num
ÌÌ 
<
ÌÌ  
$num
ÌÌ! "
)
ÌÌ" #
return
ÓÓ 
goToFirstChar
ÓÓ $
?
ÓÓ% &
$num
ÓÓ' (
:
ÓÓ) *
originalPos
ÓÓ+ 6
;
ÓÓ6 7
int
 

endCharIdx
 
=
 
m_TextComponent
 ,
.
, -
textInfo
- 5
.
5 6
lineInfo
6 >
[
> ?

originLine
? I
]
I J
.
J K!
firstCharacterIndex
K ^
-
_ `
$num
a b
;
b c
int
ÚÚ 
closest
ÚÚ 
=
ÚÚ 
-
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
float
ÛÛ 
distance
ÛÛ 
=
ÛÛ 
TMP_Math
ÛÛ %
.
ÛÛ% &
	FLOAT_MAX
ÛÛ& /
;
ÛÛ/ 0
float
ÙÙ 
range
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
for
ˆˆ 
(
ˆˆ 
int
ˆˆ 
i
ˆˆ 
=
ˆˆ 
m_TextComponent
ˆˆ (
.
ˆˆ( )
textInfo
ˆˆ) 1
.
ˆˆ1 2
lineInfo
ˆˆ2 :
[
ˆˆ: ;

originLine
ˆˆ; E
-
ˆˆF G
$num
ˆˆH I
]
ˆˆI J
.
ˆˆJ K!
firstCharacterIndex
ˆˆK ^
;
ˆˆ^ _
i
ˆˆ` a
<
ˆˆb c

endCharIdx
ˆˆd n
;
ˆˆn o
++
ˆˆp r
i
ˆˆr s
)
ˆˆs t
{
˜˜ 
TMP_CharacterInfo
¯¯ !
currentChar
¯¯" -
=
¯¯. /
m_TextComponent
¯¯0 ?
.
¯¯? @
textInfo
¯¯@ H
.
¯¯H I
characterInfo
¯¯I V
[
¯¯V W
i
¯¯W X
]
¯¯X Y
;
¯¯Y Z
float
˙˙ 
d
˙˙ 
=
˙˙ 

originChar
˙˙ $
.
˙˙$ %
origin
˙˙% +
-
˙˙, -
currentChar
˙˙. 9
.
˙˙9 :
origin
˙˙: @
;
˙˙@ A
float
˚˚ 
r
˚˚ 
=
˚˚ 
d
˚˚ 
/
˚˚ 
(
˚˚ 
currentChar
˚˚ *
.
˚˚* +
xAdvance
˚˚+ 3
-
˚˚4 5
currentChar
˚˚6 A
.
˚˚A B
origin
˚˚B H
)
˚˚H I
;
˚˚I J
if
˝˝ 
(
˝˝ 
r
˝˝ 
>=
˝˝ 
$num
˝˝ 
&&
˝˝ 
r
˝˝ 
<=
˝˝  "
$num
˝˝# $
)
˝˝$ %
{
˛˛ 
if
ˇˇ 
(
ˇˇ 
r
ˇˇ 
<
ˇˇ 
$num
ˇˇ  
)
ˇˇ  !
return
ÄÄ 
i
ÄÄ  
;
ÄÄ  !
else
ÅÅ 
return
ÇÇ 
i
ÇÇ  
+
ÇÇ! "
$num
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 
d
ÖÖ 
=
ÖÖ 
Mathf
ÖÖ 
.
ÖÖ 
Abs
ÖÖ 
(
ÖÖ 
d
ÖÖ 
)
ÖÖ  
;
ÖÖ  !
if
áá 
(
áá 
d
áá 
<
áá 
distance
áá  
)
áá  !
{
àà 
closest
ââ 
=
ââ 
i
ââ 
;
ââ  
distance
ää 
=
ää 
d
ää  
;
ää  !
range
ãã 
=
ãã 
r
ãã 
;
ãã 
}
åå 
}
çç 
if
èè 
(
èè 
closest
èè 
==
èè 
-
èè 
$num
èè 
)
èè 
return
èè %

endCharIdx
èè& 0
;
èè0 1
if
ìì 
(
ìì 
range
ìì 
<
ìì 
$num
ìì 
)
ìì 
return
îî 
closest
îî 
;
îî 
else
ïï 
return
ññ 
closest
ññ 
+
ññ  
$num
ññ! "
;
ññ" #
}
óó 	
private
öö 
int
öö '
LineDownCharacterPosition
öö -
(
öö- .
int
öö. 1
originalPos
öö2 =
,
öö= >
bool
öö? C
goToLastChar
ööD P
)
ööP Q
{
õõ 	
if
úú 
(
úú 
originalPos
úú 
>=
úú 
m_TextComponent
úú .
.
úú. /
textInfo
úú/ 7
.
úú7 8
characterCount
úú8 F
)
úúF G
return
ùù 
m_TextComponent
ùù &
.
ùù& '
textInfo
ùù' /
.
ùù/ 0
characterCount
ùù0 >
-
ùù? @
$num
ùùA B
;
ùùB C
TMP_CharacterInfo
üü 

originChar
üü (
=
üü) *
m_TextComponent
üü+ :
.
üü: ;
textInfo
üü; C
.
üüC D
characterInfo
üüD Q
[
üüQ R
originalPos
üüR ]
]
üü] ^
;
üü^ _
int
†† 

originLine
†† 
=
†† 

originChar
†† '
.
††' (

lineNumber
††( 2
;
††2 3
if
££ 
(
££ 

originLine
££ 
+
££ 
$num
££ 
>=
££ !
m_TextComponent
££" 1
.
££1 2
textInfo
££2 :
.
££: ;
	lineCount
££; D
)
££D E
return
§§ 
goToLastChar
§§ #
?
§§$ %
m_TextComponent
§§& 5
.
§§5 6
textInfo
§§6 >
.
§§> ?
characterCount
§§? M
-
§§N O
$num
§§P Q
:
§§R S
originalPos
§§T _
;
§§_ `
int
ßß 

endCharIdx
ßß 
=
ßß 
m_TextComponent
ßß ,
.
ßß, -
textInfo
ßß- 5
.
ßß5 6
lineInfo
ßß6 >
[
ßß> ?

originLine
ßß? I
+
ßßJ K
$num
ßßL M
]
ßßM N
.
ßßN O 
lastCharacterIndex
ßßO a
;
ßßa b
int
©© 
closest
©© 
=
©© 
-
©© 
$num
©© 
;
©© 
float
™™ 
distance
™™ 
=
™™ 
TMP_Math
™™ %
.
™™% &
	FLOAT_MAX
™™& /
;
™™/ 0
float
´´ 
range
´´ 
=
´´ 
$num
´´ 
;
´´ 
for
≠≠ 
(
≠≠ 
int
≠≠ 
i
≠≠ 
=
≠≠ 
m_TextComponent
≠≠ (
.
≠≠( )
textInfo
≠≠) 1
.
≠≠1 2
lineInfo
≠≠2 :
[
≠≠: ;

originLine
≠≠; E
+
≠≠F G
$num
≠≠H I
]
≠≠I J
.
≠≠J K!
firstCharacterIndex
≠≠K ^
;
≠≠^ _
i
≠≠` a
<
≠≠b c

endCharIdx
≠≠d n
;
≠≠n o
++
≠≠p r
i
≠≠r s
)
≠≠s t
{
ÆÆ 
TMP_CharacterInfo
ØØ !
currentChar
ØØ" -
=
ØØ. /
m_TextComponent
ØØ0 ?
.
ØØ? @
textInfo
ØØ@ H
.
ØØH I
characterInfo
ØØI V
[
ØØV W
i
ØØW X
]
ØØX Y
;
ØØY Z
float
±± 
d
±± 
=
±± 

originChar
±± $
.
±±$ %
origin
±±% +
-
±±, -
currentChar
±±. 9
.
±±9 :
origin
±±: @
;
±±@ A
float
≤≤ 
r
≤≤ 
=
≤≤ 
d
≤≤ 
/
≤≤ 
(
≤≤ 
currentChar
≤≤ *
.
≤≤* +
xAdvance
≤≤+ 3
-
≤≤4 5
currentChar
≤≤6 A
.
≤≤A B
origin
≤≤B H
)
≤≤H I
;
≤≤I J
if
¥¥ 
(
¥¥ 
r
¥¥ 
>=
¥¥ 
$num
¥¥ 
&&
¥¥ 
r
¥¥ 
<=
¥¥  "
$num
¥¥# $
)
¥¥$ %
{
µµ 
if
∂∂ 
(
∂∂ 
r
∂∂ 
<
∂∂ 
$num
∂∂  
)
∂∂  !
return
∑∑ 
i
∑∑  
;
∑∑  !
else
∏∏ 
return
ππ 
i
ππ  
+
ππ! "
$num
ππ# $
;
ππ$ %
}
∫∫ 
d
ºº 
=
ºº 
Mathf
ºº 
.
ºº 
Abs
ºº 
(
ºº 
d
ºº 
)
ºº  
;
ºº  !
if
ææ 
(
ææ 
d
ææ 
<
ææ 
distance
ææ  
)
ææ  !
{
øø 
closest
¿¿ 
=
¿¿ 
i
¿¿ 
;
¿¿  
distance
¡¡ 
=
¡¡ 
d
¡¡  
;
¡¡  !
range
¬¬ 
=
¬¬ 
r
¬¬ 
;
¬¬ 
}
√√ 
}
ƒƒ 
if
∆∆ 
(
∆∆ 
closest
∆∆ 
==
∆∆ 
-
∆∆ 
$num
∆∆ 
)
∆∆ 
return
∆∆ %

endCharIdx
∆∆& 0
;
∆∆0 1
if
   
(
   
range
   
<
   
$num
   
)
   
return
ÀÀ 
closest
ÀÀ 
;
ÀÀ 
else
ÃÃ 
return
ÕÕ 
closest
ÕÕ 
+
ÕÕ  
$num
ÕÕ! "
;
ÕÕ" #
}
ŒŒ 	
private
——	 
int
—— %
PageUpCharacterPosition
—— ,
(
——, -
int
——- 0
originalPos
——1 <
,
——< =
bool
——> B
goToFirstChar
——C P
)
——P Q
{
““ 	
if
”” 
(
”” 
originalPos
”” 
>=
”” 
m_TextComponent
”” .
.
””. /
textInfo
””/ 7
.
””7 8
characterCount
””8 F
)
””F G
originalPos
‘‘ 
-=
‘‘ 
$num
‘‘  
;
‘‘  !
TMP_CharacterInfo
÷÷ 

originChar
÷÷ (
=
÷÷) *
m_TextComponent
÷÷+ :
.
÷÷: ;
textInfo
÷÷; C
.
÷÷C D
characterInfo
÷÷D Q
[
÷÷Q R
originalPos
÷÷R ]
]
÷÷] ^
;
÷÷^ _
int
◊◊ 

originLine
◊◊ 
=
◊◊ 

originChar
◊◊ '
.
◊◊' (

lineNumber
◊◊( 2
;
◊◊2 3
if
⁄⁄ 
(
⁄⁄ 

originLine
⁄⁄ 
-
⁄⁄ 
$num
⁄⁄ 
<
⁄⁄  
$num
⁄⁄! "
)
⁄⁄" #
return
€€ 
goToFirstChar
€€ $
?
€€% &
$num
€€' (
:
€€) *
originalPos
€€+ 6
;
€€6 7
float
›› 
viewportHeight
››  
=
››! "
m_TextViewport
››# 1
.
››1 2
rect
››2 6
.
››6 7
height
››7 =
;
››= >
int
ﬂﬂ 
newLine
ﬂﬂ 
=
ﬂﬂ 

originLine
ﬂﬂ $
-
ﬂﬂ% &
$num
ﬂﬂ' (
;
ﬂﬂ( )
for
·· 
(
·· 
;
·· 
newLine
·· 
>
·· 
$num
·· 
;
·· 
newLine
··  '
--
··' )
)
··) *
{
‚‚ 
if
„„ 
(
„„ 
m_TextComponent
„„ #
.
„„# $
textInfo
„„$ ,
.
„„, -
lineInfo
„„- 5
[
„„5 6
newLine
„„6 =
]
„„= >
.
„„> ?
baseline
„„? G
>
„„H I
m_TextComponent
„„J Y
.
„„Y Z
textInfo
„„Z b
.
„„b c
lineInfo
„„c k
[
„„k l

originLine
„„l v
]
„„v w
.
„„w x
baseline„„x Ä
+„„Å Ç
viewportHeight„„É ë
)„„ë í
break
‰‰ 
;
‰‰ 
}
ÂÂ 
int
ÁÁ 

endCharIdx
ÁÁ 
=
ÁÁ 
m_TextComponent
ÁÁ ,
.
ÁÁ, -
textInfo
ÁÁ- 5
.
ÁÁ5 6
lineInfo
ÁÁ6 >
[
ÁÁ> ?
newLine
ÁÁ? F
]
ÁÁF G
.
ÁÁG H 
lastCharacterIndex
ÁÁH Z
;
ÁÁZ [
int
ÈÈ 
closest
ÈÈ 
=
ÈÈ 
-
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
float
ÍÍ 
distance
ÍÍ 
=
ÍÍ 
TMP_Math
ÍÍ %
.
ÍÍ% &
	FLOAT_MAX
ÍÍ& /
;
ÍÍ/ 0
float
ÎÎ 
range
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
for
ÌÌ 
(
ÌÌ 
int
ÌÌ 
i
ÌÌ 
=
ÌÌ 
m_TextComponent
ÌÌ (
.
ÌÌ( )
textInfo
ÌÌ) 1
.
ÌÌ1 2
lineInfo
ÌÌ2 :
[
ÌÌ: ;
newLine
ÌÌ; B
]
ÌÌB C
.
ÌÌC D!
firstCharacterIndex
ÌÌD W
;
ÌÌW X
i
ÌÌY Z
<
ÌÌ[ \

endCharIdx
ÌÌ] g
;
ÌÌg h
++
ÌÌi k
i
ÌÌk l
)
ÌÌl m
{
ÓÓ 
TMP_CharacterInfo
ÔÔ !
currentChar
ÔÔ" -
=
ÔÔ. /
m_TextComponent
ÔÔ0 ?
.
ÔÔ? @
textInfo
ÔÔ@ H
.
ÔÔH I
characterInfo
ÔÔI V
[
ÔÔV W
i
ÔÔW X
]
ÔÔX Y
;
ÔÔY Z
float
ÒÒ 
d
ÒÒ 
=
ÒÒ 

originChar
ÒÒ $
.
ÒÒ$ %
origin
ÒÒ% +
-
ÒÒ, -
currentChar
ÒÒ. 9
.
ÒÒ9 :
origin
ÒÒ: @
;
ÒÒ@ A
float
ÚÚ 
r
ÚÚ 
=
ÚÚ 
d
ÚÚ 
/
ÚÚ 
(
ÚÚ 
currentChar
ÚÚ *
.
ÚÚ* +
xAdvance
ÚÚ+ 3
-
ÚÚ4 5
currentChar
ÚÚ6 A
.
ÚÚA B
origin
ÚÚB H
)
ÚÚH I
;
ÚÚI J
if
ÙÙ 
(
ÙÙ 
r
ÙÙ 
>=
ÙÙ 
$num
ÙÙ 
&&
ÙÙ 
r
ÙÙ 
<=
ÙÙ  "
$num
ÙÙ# $
)
ÙÙ$ %
{
ıı 
if
ˆˆ 
(
ˆˆ 
r
ˆˆ 
<
ˆˆ 
$num
ˆˆ  
)
ˆˆ  !
return
˜˜ 
i
˜˜  
;
˜˜  !
else
¯¯ 
return
˘˘ 
i
˘˘  
+
˘˘! "
$num
˘˘# $
;
˘˘$ %
}
˙˙ 
d
¸¸ 
=
¸¸ 
Mathf
¸¸ 
.
¸¸ 
Abs
¸¸ 
(
¸¸ 
d
¸¸ 
)
¸¸  
;
¸¸  !
if
˛˛ 
(
˛˛ 
d
˛˛ 
<
˛˛ 
distance
˛˛  
)
˛˛  !
{
ˇˇ 
closest
ÄÄ 
=
ÄÄ 
i
ÄÄ 
;
ÄÄ  
distance
ÅÅ 
=
ÅÅ 
d
ÅÅ  
;
ÅÅ  !
range
ÇÇ 
=
ÇÇ 
r
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}
ÑÑ 
if
ÜÜ 
(
ÜÜ 
closest
ÜÜ 
==
ÜÜ 
-
ÜÜ 
$num
ÜÜ 
)
ÜÜ 
return
ÜÜ %

endCharIdx
ÜÜ& 0
;
ÜÜ0 1
if
ää 
(
ää 
range
ää 
<
ää 
$num
ää 
)
ää 
return
ãã 
closest
ãã 
;
ãã 
else
åå 
return
çç 
closest
çç 
+
çç  
$num
çç! "
;
çç" #
}
éé 	
private
ëë	 
int
ëë '
PageDownCharacterPosition
ëë .
(
ëë. /
int
ëë/ 2
originalPos
ëë3 >
,
ëë> ?
bool
ëë@ D
goToLastChar
ëëE Q
)
ëëQ R
{
íí 	
if
ìì 
(
ìì 
originalPos
ìì 
>=
ìì 
m_TextComponent
ìì .
.
ìì. /
textInfo
ìì/ 7
.
ìì7 8
characterCount
ìì8 F
)
ììF G
return
îî 
m_TextComponent
îî &
.
îî& '
textInfo
îî' /
.
îî/ 0
characterCount
îî0 >
-
îî? @
$num
îîA B
;
îîB C
TMP_CharacterInfo
ññ 

originChar
ññ (
=
ññ) *
m_TextComponent
ññ+ :
.
ññ: ;
textInfo
ññ; C
.
ññC D
characterInfo
ññD Q
[
ññQ R
originalPos
ññR ]
]
ññ] ^
;
ññ^ _
int
óó 

originLine
óó 
=
óó 

originChar
óó '
.
óó' (

lineNumber
óó( 2
;
óó2 3
if
öö 
(
öö 

originLine
öö 
+
öö 
$num
öö 
>=
öö !
m_TextComponent
öö" 1
.
öö1 2
textInfo
öö2 :
.
öö: ;
	lineCount
öö; D
)
ööD E
return
õõ 
goToLastChar
õõ #
?
õõ$ %
m_TextComponent
õõ& 5
.
õõ5 6
textInfo
õõ6 >
.
õõ> ?
characterCount
õõ? M
-
õõN O
$num
õõP Q
:
õõR S
originalPos
õõT _
;
õõ_ `
float
ùù 
viewportHeight
ùù  
=
ùù! "
m_TextViewport
ùù# 1
.
ùù1 2
rect
ùù2 6
.
ùù6 7
height
ùù7 =
;
ùù= >
int
üü 
newLine
üü 
=
üü 

originLine
üü $
+
üü% &
$num
üü' (
;
üü( )
for
°° 
(
°° 
;
°° 
newLine
°° 
<
°° 
m_TextComponent
°° ,
.
°°, -
textInfo
°°- 5
.
°°5 6
	lineCount
°°6 ?
-
°°@ A
$num
°°B C
;
°°C D
newLine
°°E L
++
°°L N
)
°°N O
{
¢¢ 
if
££ 
(
££ 
m_TextComponent
££ #
.
££# $
textInfo
££$ ,
.
££, -
lineInfo
££- 5
[
££5 6
newLine
££6 =
]
££= >
.
££> ?
baseline
££? G
<
££H I
m_TextComponent
££J Y
.
££Y Z
textInfo
££Z b
.
££b c
lineInfo
££c k
[
££k l

originLine
££l v
]
££v w
.
££w x
baseline££x Ä
-££Å Ç
viewportHeight££É ë
)££ë í
break
§§ 
;
§§ 
}
•• 
int
®® 

endCharIdx
®® 
=
®® 
m_TextComponent
®® ,
.
®®, -
textInfo
®®- 5
.
®®5 6
lineInfo
®®6 >
[
®®> ?
newLine
®®? F
]
®®F G
.
®®G H 
lastCharacterIndex
®®H Z
;
®®Z [
int
™™ 
closest
™™ 
=
™™ 
-
™™ 
$num
™™ 
;
™™ 
float
´´ 
distance
´´ 
=
´´ 
TMP_Math
´´ %
.
´´% &
	FLOAT_MAX
´´& /
;
´´/ 0
float
¨¨ 
range
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨ 
for
ÆÆ 
(
ÆÆ 
int
ÆÆ 
i
ÆÆ 
=
ÆÆ 
m_TextComponent
ÆÆ (
.
ÆÆ( )
textInfo
ÆÆ) 1
.
ÆÆ1 2
lineInfo
ÆÆ2 :
[
ÆÆ: ;
newLine
ÆÆ; B
]
ÆÆB C
.
ÆÆC D!
firstCharacterIndex
ÆÆD W
;
ÆÆW X
i
ÆÆY Z
<
ÆÆ[ \

endCharIdx
ÆÆ] g
;
ÆÆg h
++
ÆÆi k
i
ÆÆk l
)
ÆÆl m
{
ØØ 
TMP_CharacterInfo
∞∞ !
currentChar
∞∞" -
=
∞∞. /
m_TextComponent
∞∞0 ?
.
∞∞? @
textInfo
∞∞@ H
.
∞∞H I
characterInfo
∞∞I V
[
∞∞V W
i
∞∞W X
]
∞∞X Y
;
∞∞Y Z
float
≤≤ 
d
≤≤ 
=
≤≤ 

originChar
≤≤ $
.
≤≤$ %
origin
≤≤% +
-
≤≤, -
currentChar
≤≤. 9
.
≤≤9 :
origin
≤≤: @
;
≤≤@ A
float
≥≥ 
r
≥≥ 
=
≥≥ 
d
≥≥ 
/
≥≥ 
(
≥≥ 
currentChar
≥≥ *
.
≥≥* +
xAdvance
≥≥+ 3
-
≥≥4 5
currentChar
≥≥6 A
.
≥≥A B
origin
≥≥B H
)
≥≥H I
;
≥≥I J
if
µµ 
(
µµ 
r
µµ 
>=
µµ 
$num
µµ 
&&
µµ 
r
µµ 
<=
µµ  "
$num
µµ# $
)
µµ$ %
{
∂∂ 
if
∑∑ 
(
∑∑ 
r
∑∑ 
<
∑∑ 
$num
∑∑  
)
∑∑  !
return
∏∏ 
i
∏∏  
;
∏∏  !
else
ππ 
return
∫∫ 
i
∫∫  
+
∫∫! "
$num
∫∫# $
;
∫∫$ %
}
ªª 
d
ΩΩ 
=
ΩΩ 
Mathf
ΩΩ 
.
ΩΩ 
Abs
ΩΩ 
(
ΩΩ 
d
ΩΩ 
)
ΩΩ  
;
ΩΩ  !
if
øø 
(
øø 
d
øø 
<
øø 
distance
øø  
)
øø  !
{
¿¿ 
closest
¡¡ 
=
¡¡ 
i
¡¡ 
;
¡¡  
distance
¬¬ 
=
¬¬ 
d
¬¬  
;
¬¬  !
range
√√ 
=
√√ 
r
√√ 
;
√√ 
}
ƒƒ 
}
≈≈ 
if
«« 
(
«« 
closest
«« 
==
«« 
-
«« 
$num
«« 
)
«« 
return
«« %

endCharIdx
««& 0
;
««0 1
if
…… 
(
…… 
range
…… 
<
…… 
$num
…… 
)
…… 
return
   
closest
   
;
   
else
ÀÀ 
return
ÃÃ 
closest
ÃÃ 
+
ÃÃ  
$num
ÃÃ! "
;
ÃÃ" #
}
ÕÕ 	
private
–– 
void
–– 
MoveDown
–– 
(
–– 
bool
–– "
shift
––# (
)
––( )
{
—— 	
MoveDown
““ 
(
““ 
shift
““ 
,
““ 
true
““  
)
““  !
;
““! "
}
”” 	
private
÷÷ 
void
÷÷ 
MoveDown
÷÷ 
(
÷÷ 
bool
÷÷ "
shift
÷÷# (
,
÷÷( )
bool
÷÷* .
goToLastChar
÷÷/ ;
)
÷÷; <
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
hasSelection
ÿÿ 
&&
ÿÿ 
!
ÿÿ  !
shift
ÿÿ! &
)
ÿÿ& '
{
ŸŸ #
caretPositionInternal
‹‹ %
=
‹‹& ')
caretSelectPositionInternal
‹‹( C
=
‹‹D E
Mathf
‹‹F K
.
‹‹K L
Max
‹‹L O
(
‹‹O P#
caretPositionInternal
‹‹P e
,
‹‹e f*
caretSelectPositionInternal‹‹g Ç
)‹‹Ç É
;‹‹É Ñ
}
›› 
int
ﬂﬂ 
position
ﬂﬂ 
=
ﬂﬂ 
	multiLine
ﬂﬂ $
?
ﬂﬂ% &'
LineDownCharacterPosition
ﬂﬂ' @
(
ﬂﬂ@ A)
caretSelectPositionInternal
ﬂﬂA \
,
ﬂﬂ\ ]
goToLastChar
ﬂﬂ^ j
)
ﬂﬂj k
:
ﬂﬂl m
m_TextComponent
ﬂﬂn }
.
ﬂﬂ} ~
textInfoﬂﬂ~ Ü
.ﬂﬂÜ á
characterCountﬂﬂá ï
-ﬂﬂñ ó
$numﬂﬂò ô
;ﬂﬂô ö
if
·· 
(
·· 
shift
·· 
)
·· 
{
‚‚ )
caretSelectPositionInternal
„„ +
=
„„, -
position
„„. 6
;
„„6 7*
stringSelectPositionInternal
‰‰ ,
=
‰‰- .-
GetStringIndexFromCaretPosition
‰‰/ N
(
‰‰N O)
caretSelectPositionInternal
‰‰O j
)
‰‰j k
;
‰‰k l
}
ÂÂ 
else
ÊÊ 
{
ÁÁ )
caretSelectPositionInternal
ËË +
=
ËË, -#
caretPositionInternal
ËË. C
=
ËËD E
position
ËËF N
;
ËËN O*
stringSelectPositionInternal
ÈÈ ,
=
ÈÈ- .$
stringPositionInternal
ÈÈ/ E
=
ÈÈF G-
GetStringIndexFromCaretPosition
ÈÈH g
(
ÈÈg h*
caretSelectPositionInternalÈÈh É
)ÈÈÉ Ñ
;ÈÈÑ Ö
}
ÍÍ 
}
ÔÔ 	
private
ÒÒ 
void
ÒÒ 
MoveUp
ÒÒ 
(
ÒÒ 
bool
ÒÒ  
shift
ÒÒ! &
)
ÒÒ& '
{
ÚÚ 	
MoveUp
ÛÛ 
(
ÛÛ 
shift
ÛÛ 
,
ÛÛ 
true
ÛÛ 
)
ÛÛ 
;
ÛÛ  
}
ÙÙ 	
private
˜˜ 
void
˜˜ 
MoveUp
˜˜ 
(
˜˜ 
bool
˜˜  
shift
˜˜! &
,
˜˜& '
bool
˜˜( ,
goToFirstChar
˜˜- :
)
˜˜: ;
{
¯¯ 	
if
˘˘ 
(
˘˘ 
hasSelection
˘˘ 
&&
˘˘ 
!
˘˘  !
shift
˘˘! &
)
˘˘& '
{
˙˙ #
caretPositionInternal
˝˝ %
=
˝˝& ')
caretSelectPositionInternal
˝˝( C
=
˝˝D E
Mathf
˝˝F K
.
˝˝K L
Min
˝˝L O
(
˝˝O P#
caretPositionInternal
˝˝P e
,
˝˝e f*
caretSelectPositionInternal˝˝g Ç
)˝˝Ç É
;˝˝É Ñ
}
˛˛ 
int
ÄÄ 
position
ÄÄ 
=
ÄÄ 
	multiLine
ÄÄ $
?
ÄÄ% &%
LineUpCharacterPosition
ÄÄ' >
(
ÄÄ> ?)
caretSelectPositionInternal
ÄÄ? Z
,
ÄÄZ [
goToFirstChar
ÄÄ\ i
)
ÄÄi j
:
ÄÄk l
$num
ÄÄm n
;
ÄÄn o
if
ÇÇ 
(
ÇÇ 
shift
ÇÇ 
)
ÇÇ 
{
ÉÉ )
caretSelectPositionInternal
ÑÑ +
=
ÑÑ, -
position
ÑÑ. 6
;
ÑÑ6 7*
stringSelectPositionInternal
ÖÖ ,
=
ÖÖ- .-
GetStringIndexFromCaretPosition
ÖÖ/ N
(
ÖÖN O)
caretSelectPositionInternal
ÖÖO j
)
ÖÖj k
;
ÖÖk l
}
ÜÜ 
else
áá 
{
àà )
caretSelectPositionInternal
ââ +
=
ââ, -#
caretPositionInternal
ââ. C
=
ââD E
position
ââF N
;
ââN O*
stringSelectPositionInternal
ää ,
=
ää- .$
stringPositionInternal
ää/ E
=
ääF G-
GetStringIndexFromCaretPosition
ääH g
(
ääg h*
caretSelectPositionInternalääh É
)ääÉ Ñ
;ääÑ Ö
}
ãã 
}
êê 	
private
ìì 
void
ìì 

MovePageUp
ìì 
(
ìì  
bool
ìì  $
shift
ìì% *
)
ìì* +
{
îî 	

MovePageUp
ïï 
(
ïï 
shift
ïï 
,
ïï 
true
ïï "
)
ïï" #
;
ïï# $
}
ññ 	
private
òò 
void
òò 

MovePageUp
òò 
(
òò  
bool
òò  $
shift
òò% *
,
òò* +
bool
òò, 0
goToFirstChar
òò1 >
)
òò> ?
{
ôô 	
if
öö 
(
öö 
hasSelection
öö 
&&
öö 
!
öö  !
shift
öö! &
)
öö& '
{
õõ #
caretPositionInternal
ûû %
=
ûû& ')
caretSelectPositionInternal
ûû( C
=
ûûD E
Mathf
ûûF K
.
ûûK L
Min
ûûL O
(
ûûO P#
caretPositionInternal
ûûP e
,
ûûe f*
caretSelectPositionInternalûûg Ç
)ûûÇ É
;ûûÉ Ñ
}
üü 
int
°° 
position
°° 
=
°° 
	multiLine
°° $
?
°°% &%
PageUpCharacterPosition
°°' >
(
°°> ?)
caretSelectPositionInternal
°°? Z
,
°°Z [
goToFirstChar
°°\ i
)
°°i j
:
°°k l
$num
°°m n
;
°°n o
if
££ 
(
££ 
shift
££ 
)
££ 
{
§§ )
caretSelectPositionInternal
•• +
=
••, -
position
••. 6
;
••6 7*
stringSelectPositionInternal
¶¶ ,
=
¶¶- .-
GetStringIndexFromCaretPosition
¶¶/ N
(
¶¶N O)
caretSelectPositionInternal
¶¶O j
)
¶¶j k
;
¶¶k l
}
ßß 
else
®® 
{
©© )
caretSelectPositionInternal
™™ +
=
™™, -#
caretPositionInternal
™™. C
=
™™D E
position
™™F N
;
™™N O*
stringSelectPositionInternal
´´ ,
=
´´- .$
stringPositionInternal
´´/ E
=
´´F G-
GetStringIndexFromCaretPosition
´´H g
(
´´g h*
caretSelectPositionInternal´´h É
)´´É Ñ
;´´Ñ Ö
}
¨¨ 
if
¥¥ 
(
¥¥ 

m_LineType
¥¥ 
!=
¥¥ 
LineType
¥¥ &
.
¥¥& '

SingleLine
¥¥' 1
)
¥¥1 2
{
µµ 
float
∂∂ 
offset
∂∂ 
=
∂∂ 
m_TextViewport
∂∂ -
.
∂∂- .
rect
∂∂. 2
.
∂∂2 3
height
∂∂3 9
;
∂∂9 :
float
∏∏ 
topTextBounds
∏∏ #
=
∏∏$ %
m_TextComponent
∏∏& 5
.
∏∏5 6
rectTransform
∏∏6 C
.
∏∏C D
position
∏∏D L
.
∏∏L M
y
∏∏M N
+
∏∏O P
m_TextComponent
∏∏Q `
.
∏∏` a

textBounds
∏∏a k
.
∏∏k l
max
∏∏l o
.
∏∏o p
y
∏∏p q
;
∏∏q r
float
ππ 
topViewportBounds
ππ '
=
ππ( )
m_TextViewport
ππ* 8
.
ππ8 9
position
ππ9 A
.
ππA B
y
ππB C
+
ππD E
m_TextViewport
ππF T
.
ππT U
rect
ππU Y
.
ππY Z
yMax
ππZ ^
;
ππ^ _
offset
ªª 
=
ªª 
topViewportBounds
ªª *
>
ªª+ ,
topTextBounds
ªª- :
+
ªª; <
offset
ªª= C
?
ªªD E
offset
ªªF L
:
ªªM N
topViewportBounds
ªªO `
-
ªªa b
topTextBounds
ªªc p
;
ªªp q
m_TextComponent
ΩΩ 
.
ΩΩ  
rectTransform
ΩΩ  -
.
ΩΩ- .
anchoredPosition
ΩΩ. >
+=
ΩΩ? A
new
ΩΩB E
Vector2
ΩΩF M
(
ΩΩM N
$num
ΩΩN O
,
ΩΩO P
offset
ΩΩQ W
)
ΩΩW X
;
ΩΩX Y'
AssignPositioningIfNeeded
ææ )
(
ææ) *
)
ææ* +
;
ææ+ ,
}
øø 
}
≈≈ 	
private
»» 
void
»» 
MovePageDown
»» !
(
»»! "
bool
»»" &
shift
»»' ,
)
»», -
{
…… 	
MovePageDown
   
(
   
shift
   
,
   
true
    $
)
  $ %
;
  % &
}
ÀÀ 	
private
ÕÕ 
void
ÕÕ 
MovePageDown
ÕÕ !
(
ÕÕ! "
bool
ÕÕ" &
shift
ÕÕ' ,
,
ÕÕ, -
bool
ÕÕ. 2
goToLastChar
ÕÕ3 ?
)
ÕÕ? @
{
ŒŒ 	
if
œœ 
(
œœ 
hasSelection
œœ 
&&
œœ  
!
œœ! "
shift
œœ" '
)
œœ' (
{
–– #
caretPositionInternal
”” %
=
””& ')
caretSelectPositionInternal
””( C
=
””D E
Mathf
””F K
.
””K L
Max
””L O
(
””O P#
caretPositionInternal
””P e
,
””e f*
caretSelectPositionInternal””g Ç
)””Ç É
;””É Ñ
}
‘‘ 
int
÷÷ 
position
÷÷ 
=
÷÷ 
	multiLine
÷÷ $
?
÷÷% &'
PageDownCharacterPosition
÷÷' @
(
÷÷@ A)
caretSelectPositionInternal
÷÷A \
,
÷÷\ ]
goToLastChar
÷÷^ j
)
÷÷j k
:
÷÷l m
m_TextComponent
÷÷n }
.
÷÷} ~
textInfo÷÷~ Ü
.÷÷Ü á
characterCount÷÷á ï
-÷÷ñ ó
$num÷÷ò ô
;÷÷ô ö
if
ÿÿ 
(
ÿÿ 
shift
ÿÿ 
)
ÿÿ 
{
ŸŸ )
caretSelectPositionInternal
⁄⁄ +
=
⁄⁄, -
position
⁄⁄. 6
;
⁄⁄6 7*
stringSelectPositionInternal
€€ ,
=
€€- .-
GetStringIndexFromCaretPosition
€€/ N
(
€€N O)
caretSelectPositionInternal
€€O j
)
€€j k
;
€€k l
}
‹‹ 
else
›› 
{
ﬁﬁ )
caretSelectPositionInternal
ﬂﬂ +
=
ﬂﬂ, -#
caretPositionInternal
ﬂﬂ. C
=
ﬂﬂD E
position
ﬂﬂF N
;
ﬂﬂN O*
stringSelectPositionInternal
‡‡ ,
=
‡‡- .$
stringPositionInternal
‡‡/ E
=
‡‡F G-
GetStringIndexFromCaretPosition
‡‡H g
(
‡‡g h*
caretSelectPositionInternal‡‡h É
)‡‡É Ñ
;‡‡Ñ Ö
}
·· 
if
ËË 
(
ËË 

m_LineType
ËË 
!=
ËË 
LineType
ËË &
.
ËË& '

SingleLine
ËË' 1
)
ËË1 2
{
ÈÈ 
float
ÍÍ 
offset
ÍÍ 
=
ÍÍ 
m_TextViewport
ÍÍ -
.
ÍÍ- .
rect
ÍÍ. 2
.
ÍÍ2 3
height
ÍÍ3 9
;
ÍÍ9 :
float
ÏÏ 
bottomTextBounds
ÏÏ &
=
ÏÏ' (
m_TextComponent
ÏÏ) 8
.
ÏÏ8 9
rectTransform
ÏÏ9 F
.
ÏÏF G
position
ÏÏG O
.
ÏÏO P
y
ÏÏP Q
+
ÏÏR S
m_TextComponent
ÏÏT c
.
ÏÏc d

textBounds
ÏÏd n
.
ÏÏn o
min
ÏÏo r
.
ÏÏr s
y
ÏÏs t
;
ÏÏt u
float
ÌÌ "
bottomViewportBounds
ÌÌ *
=
ÌÌ+ ,
m_TextViewport
ÌÌ- ;
.
ÌÌ; <
position
ÌÌ< D
.
ÌÌD E
y
ÌÌE F
+
ÌÌG H
m_TextViewport
ÌÌI W
.
ÌÌW X
rect
ÌÌX \
.
ÌÌ\ ]
yMin
ÌÌ] a
;
ÌÌa b
offset
ÔÔ 
=
ÔÔ "
bottomViewportBounds
ÔÔ -
>
ÔÔ. /
bottomTextBounds
ÔÔ0 @
+
ÔÔA B
offset
ÔÔC I
?
ÔÔJ K
offset
ÔÔL R
:
ÔÔS T"
bottomViewportBounds
ÔÔU i
-
ÔÔj k
bottomTextBounds
ÔÔl |
;
ÔÔ| }
m_TextComponent
ÒÒ 
.
ÒÒ  
rectTransform
ÒÒ  -
.
ÒÒ- .
anchoredPosition
ÒÒ. >
+=
ÒÒ? A
new
ÒÒB E
Vector2
ÒÒF M
(
ÒÒM N
$num
ÒÒN O
,
ÒÒO P
offset
ÒÒQ W
)
ÒÒW X
;
ÒÒX Y'
AssignPositioningIfNeeded
ÚÚ )
(
ÚÚ) *
)
ÚÚ* +
;
ÚÚ+ ,
}
ÛÛ 
}
˘˘ 	
private
˚˚ 
void
˚˚ 
Delete
˚˚ 
(
˚˚ 
)
˚˚ 
{
¸¸ 	
if
˝˝ 
(
˝˝ 

m_ReadOnly
˝˝ 
)
˝˝ 
return
˛˛ 
;
˛˛ 
if
ÄÄ 
(
ÄÄ 
m_StringPosition
ÄÄ  
==
ÄÄ! #$
m_StringSelectPosition
ÄÄ$ :
)
ÄÄ: ;
return
ÅÅ 
;
ÅÅ 
if
ÉÉ 
(
ÉÉ (
m_isRichTextEditingAllowed
ÉÉ *
||
ÉÉ+ -
m_isSelectAll
ÉÉ. ;
)
ÉÉ; <
{
ÑÑ 
if
ÜÜ 
(
ÜÜ 
m_StringPosition
ÜÜ $
<
ÜÜ% &$
m_StringSelectPosition
ÜÜ' =
)
ÜÜ= >
{
áá 
m_Text
àà 
=
àà 
text
àà !
.
àà! "
Remove
àà" (
(
àà( )
m_StringPosition
àà) 9
,
àà9 :$
m_StringSelectPosition
àà; Q
-
ààR S
m_StringPosition
ààT d
)
ààd e
;
ààe f$
m_StringSelectPosition
ââ *
=
ââ+ ,
m_StringPosition
ââ- =
;
ââ= >
}
ää 
else
ãã 
{
åå 
m_Text
çç 
=
çç 
text
çç !
.
çç! "
Remove
çç" (
(
çç( )$
m_StringSelectPosition
çç) ?
,
çç? @
m_StringPosition
ççA Q
-
ççR S$
m_StringSelectPosition
ççT j
)
ççj k
;
ççk l
m_StringPosition
éé $
=
éé% &$
m_StringSelectPosition
éé' =
;
éé= >
}
èè 
if
ëë 
(
ëë 
m_isSelectAll
ëë !
)
ëë! "
{
íí 
m_CaretPosition
ìì #
=
ìì$ %#
m_CaretSelectPosition
ìì& ;
=
ìì< =
$num
ìì> ?
;
ìì? @
m_isSelectAll
îî !
=
îî" #
false
îî$ )
;
îî) *
}
ïï 
}
ññ 
else
óó 
{
òò 
if
ôô 
(
ôô 
m_CaretPosition
ôô #
<
ôô$ %#
m_CaretSelectPosition
ôô& ;
)
ôô; <
{
öö 
m_StringPosition
õõ $
=
õõ% &
m_TextComponent
õõ' 6
.
õõ6 7
textInfo
õõ7 ?
.
õõ? @
characterInfo
õõ@ M
[
õõM N
m_CaretPosition
õõN ]
]
õõ] ^
.
õõ^ _
index
õõ_ d
;
õõd e$
m_StringSelectPosition
úú *
=
úú+ ,
m_TextComponent
úú- <
.
úú< =
textInfo
úú= E
.
úúE F
characterInfo
úúF S
[
úúS T#
m_CaretSelectPosition
úúT i
-
úúj k
$num
úúl m
]
úúm n
.
úún o
index
úúo t
+
úúu v
m_TextComponentúúw Ü
.úúÜ á
textInfoúúá è
.úúè ê
characterInfoúúê ù
[úúù û%
m_CaretSelectPositionúúû ≥
-úú¥ µ
$numúú∂ ∑
]úú∑ ∏
.úú∏ π
stringLengthúúπ ≈
;úú≈ ∆
m_Text
ûû 
=
ûû 
text
ûû !
.
ûû! "
Remove
ûû" (
(
ûû( )
m_StringPosition
ûû) 9
,
ûû9 :$
m_StringSelectPosition
ûû; Q
-
ûûR S
m_StringPosition
ûûT d
)
ûûd e
;
ûûe f$
m_StringSelectPosition
†† *
=
††+ ,
m_StringPosition
††- =
;
††= >#
m_CaretSelectPosition
°° )
=
°°* +
m_CaretPosition
°°, ;
;
°°; <
}
¢¢ 
else
££ 
{
§§ 
m_StringPosition
•• $
=
••% &
m_TextComponent
••' 6
.
••6 7
textInfo
••7 ?
.
••? @
characterInfo
••@ M
[
••M N
m_CaretPosition
••N ]
-
••^ _
$num
••` a
]
••a b
.
••b c
index
••c h
+
••i j
m_TextComponent
••k z
.
••z {
textInfo••{ É
.••É Ñ
characterInfo••Ñ ë
[••ë í
m_CaretPosition••í °
-••¢ £
$num••§ •
]••• ¶
.••¶ ß
stringLength••ß ≥
;••≥ ¥$
m_StringSelectPosition
¶¶ *
=
¶¶+ ,
m_TextComponent
¶¶- <
.
¶¶< =
textInfo
¶¶= E
.
¶¶E F
characterInfo
¶¶F S
[
¶¶S T#
m_CaretSelectPosition
¶¶T i
]
¶¶i j
.
¶¶j k
index
¶¶k p
;
¶¶p q
m_Text
®® 
=
®® 
text
®® !
.
®®! "
Remove
®®" (
(
®®( )$
m_StringSelectPosition
®®) ?
,
®®? @
m_StringPosition
®®A Q
-
®®R S$
m_StringSelectPosition
®®T j
)
®®j k
;
®®k l
m_StringPosition
™™ $
=
™™% &$
m_StringSelectPosition
™™' =
;
™™= >
m_CaretPosition
´´ #
=
´´$ %#
m_CaretSelectPosition
´´& ;
;
´´; <
}
¨¨ 
}
≠≠ 
}
≤≤ 	
private
∑∑ 
void
∑∑ 
	DeleteKey
∑∑ 
(
∑∑ 
)
∑∑  
{
∏∏ 	
if
ππ 
(
ππ 

m_ReadOnly
ππ 
)
ππ 
return
∫∫ 
;
∫∫ 
if
ºº 
(
ºº 
hasSelection
ºº 
)
ºº 
{
ΩΩ "
m_isLastKeyBackspace
ææ $
=
ææ% &
true
ææ' +
;
ææ+ ,
Delete
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 0
"UpdateTouchKeyboardFromEditChanges
¡¡ 2
(
¡¡2 3
)
¡¡3 4
;
¡¡4 5.
 SendOnValueChangedAndUpdateLabel
¬¬ 0
(
¬¬0 1
)
¬¬1 2
;
¬¬2 3
}
√√ 
else
ƒƒ 
{
≈≈ 
if
∆∆ 
(
∆∆ (
m_isRichTextEditingAllowed
∆∆ .
)
∆∆. /
{
«« 
if
»» 
(
»» $
stringPositionInternal
»» .
<
»»/ 0
text
»»1 5
.
»»5 6
Length
»»6 <
)
»»< =
{
…… 
if
ÀÀ 
(
ÀÀ 
char
ÀÀ  
.
ÀÀ  !
IsHighSurrogate
ÀÀ! 0
(
ÀÀ0 1
text
ÀÀ1 5
[
ÀÀ5 6$
stringPositionInternal
ÀÀ6 L
]
ÀÀL M
)
ÀÀM N
)
ÀÀN O
m_Text
ÃÃ "
=
ÃÃ# $
text
ÃÃ% )
.
ÃÃ) *
Remove
ÃÃ* 0
(
ÃÃ0 1$
stringPositionInternal
ÃÃ1 G
,
ÃÃG H
$num
ÃÃI J
)
ÃÃJ K
;
ÃÃK L
else
ÕÕ 
m_Text
ŒŒ "
=
ŒŒ# $
text
ŒŒ% )
.
ŒŒ) *
Remove
ŒŒ* 0
(
ŒŒ0 1$
stringPositionInternal
ŒŒ1 G
,
ŒŒG H
$num
ŒŒI J
)
ŒŒJ K
;
ŒŒK L"
m_isLastKeyBackspace
–– ,
=
––- .
true
––/ 3
;
––3 40
"UpdateTouchKeyboardFromEditChanges
““ :
(
““: ;
)
““; <
;
““< =.
 SendOnValueChangedAndUpdateLabel
”” 8
(
””8 9
)
””9 :
;
””: ;
}
‘‘ 
}
’’ 
else
÷÷ 
{
◊◊ 
if
ÿÿ 
(
ÿÿ #
caretPositionInternal
ÿÿ -
<
ÿÿ. /
m_TextComponent
ÿÿ0 ?
.
ÿÿ? @
textInfo
ÿÿ@ H
.
ÿÿH I
characterCount
ÿÿI W
-
ÿÿX Y
$num
ÿÿZ [
)
ÿÿ[ \
{
ŸŸ 
int
⁄⁄ (
numberOfCharactersToRemove
⁄⁄ 6
=
⁄⁄7 8
m_TextComponent
⁄⁄9 H
.
⁄⁄H I
textInfo
⁄⁄I Q
.
⁄⁄Q R
characterInfo
⁄⁄R _
[
⁄⁄_ `#
caretPositionInternal
⁄⁄` u
]
⁄⁄u v
.
⁄⁄v w
stringLength⁄⁄w É
;⁄⁄É Ñ
int
›› )
nextCharacterStringPosition
›› 7
=
››8 9
m_TextComponent
››: I
.
››I J
textInfo
››J R
.
››R S
characterInfo
››S `
[
››` a#
caretPositionInternal
››a v
]
››v w
.
››w x
index
››x }
;
››} ~
m_Text
ﬂﬂ 
=
ﬂﬂ  
text
ﬂﬂ! %
.
ﬂﬂ% &
Remove
ﬂﬂ& ,
(
ﬂﬂ, -)
nextCharacterStringPosition
ﬂﬂ- H
,
ﬂﬂH I(
numberOfCharactersToRemove
ﬂﬂJ d
)
ﬂﬂd e
;
ﬂﬂe f"
m_isLastKeyBackspace
·· ,
=
··- .
true
··/ 3
;
··3 4.
 SendOnValueChangedAndUpdateLabel
„„ 8
(
„„8 9
)
„„9 :
;
„„: ;
}
‰‰ 
}
ÂÂ 
}
ÊÊ 
}
ÎÎ 	
private
 
void
 
	Backspace
 
(
 
)
  
{
ÒÒ 	
if
ÚÚ 
(
ÚÚ 

m_ReadOnly
ÚÚ 
)
ÚÚ 
return
ÛÛ 
;
ÛÛ 
if
ıı 
(
ıı 
hasSelection
ıı 
)
ıı 
{
ˆˆ "
m_isLastKeyBackspace
˜˜ $
=
˜˜% &
true
˜˜' +
;
˜˜+ ,
Delete
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 0
"UpdateTouchKeyboardFromEditChanges
˙˙ 2
(
˙˙2 3
)
˙˙3 4
;
˙˙4 5.
 SendOnValueChangedAndUpdateLabel
˚˚ 0
(
˚˚0 1
)
˚˚1 2
;
˚˚2 3
}
¸¸ 
else
˝˝ 
{
˛˛ 
if
ˇˇ 
(
ˇˇ (
m_isRichTextEditingAllowed
ˇˇ .
)
ˇˇ. /
{
ÄÄ 
if
ÅÅ 
(
ÅÅ $
stringPositionInternal
ÅÅ .
>
ÅÅ/ 0
$num
ÅÅ1 2
)
ÅÅ2 3
{
ÇÇ 
int
ÉÉ (
numberOfCharactersToRemove
ÉÉ 6
=
ÉÉ7 8
$num
ÉÉ9 :
;
ÉÉ: ;
if
ÜÜ 
(
ÜÜ 
char
ÜÜ  
.
ÜÜ  !
IsLowSurrogate
ÜÜ! /
(
ÜÜ/ 0
text
ÜÜ0 4
[
ÜÜ4 5$
stringPositionInternal
ÜÜ5 K
-
ÜÜL M
$num
ÜÜN O
]
ÜÜO P
)
ÜÜP Q
)
ÜÜQ R(
numberOfCharactersToRemove
áá 6
=
áá7 8
$num
áá9 :
;
áá: ;*
stringSelectPositionInternal
ââ 4
=
ââ5 6$
stringPositionInternal
ââ7 M
=
ââN O$
stringPositionInternal
ââP f
-
ââg h)
numberOfCharactersToRemoveââi É
;ââÉ Ñ
m_Text
ãã 
=
ãã  
text
ãã! %
.
ãã% &
Remove
ãã& ,
(
ãã, -$
stringPositionInternal
ãã- C
,
ããC D(
numberOfCharactersToRemove
ããE _
)
ãã_ `
;
ãã` a)
caretSelectPositionInternal
çç 3
=
çç4 5#
caretPositionInternal
çç6 K
=
ççL M#
caretPositionInternal
ççN c
-
ççd e
$num
ççf g
;
ççg h"
m_isLastKeyBackspace
èè ,
=
èè- .
true
èè/ 3
;
èè3 40
"UpdateTouchKeyboardFromEditChanges
ëë :
(
ëë: ;
)
ëë; <
;
ëë< =.
 SendOnValueChangedAndUpdateLabel
íí 8
(
íí8 9
)
íí9 :
;
íí: ;
}
ìì 
}
îî 
else
ïï 
{
ññ 
if
óó 
(
óó #
caretPositionInternal
óó -
>
óó. /
$num
óó0 1
)
óó1 2
{
òò 
int
ôô (
numberOfCharactersToRemove
ôô 6
=
ôô7 8
m_TextComponent
ôô9 H
.
ôôH I
textInfo
ôôI Q
.
ôôQ R
characterInfo
ôôR _
[
ôô_ `#
caretPositionInternal
ôô` u
-
ôôv w
$num
ôôx y
]
ôôy z
.
ôôz {
stringLengthôô{ á
;ôôá à
m_Text
úú 
=
úú  
text
úú! %
.
úú% &
Remove
úú& ,
(
úú, -
m_TextComponent
úú- <
.
úú< =
textInfo
úú= E
.
úúE F
characterInfo
úúF S
[
úúS T#
caretPositionInternal
úúT i
-
úúj k
$num
úúl m
]
úúm n
.
úún o
index
úúo t
,
úút u)
numberOfCharactersToRemoveúúv ê
)úúê ë
;úúë í*
stringSelectPositionInternal
üü 4
=
üü5 6$
stringPositionInternal
üü7 M
=
üüN O#
caretPositionInternal
üüP e
<
üüf g
$num
üüh i
?
†† 
m_TextComponent
†† -
.
††- .
textInfo
††. 6
.
††6 7
characterInfo
††7 D
[
††D E
$num
††E F
]
††F G
.
††G H
index
††H M
:
°° 
m_TextComponent
°° -
.
°°- .
textInfo
°°. 6
.
°°6 7
characterInfo
°°7 D
[
°°D E#
caretPositionInternal
°°E Z
-
°°[ \
$num
°°] ^
]
°°^ _
.
°°_ `
index
°°` e
;
°°e f)
caretSelectPositionInternal
££ 3
=
££4 5#
caretPositionInternal
££6 K
=
££L M#
caretPositionInternal
££N c
-
££d e
$num
££f g
;
££g h
}
§§ "
m_isLastKeyBackspace
¶¶ (
=
¶¶) *
true
¶¶+ /
;
¶¶/ 00
"UpdateTouchKeyboardFromEditChanges
®® 6
(
®®6 7
)
®®7 8
;
®®8 9.
 SendOnValueChangedAndUpdateLabel
©© 4
(
©©4 5
)
©©5 6
;
©©6 7
}
™™ 
}
¨¨ 
}
±± 	
	protected
∑∑ 
virtual
∑∑ 
void
∑∑ 
Append
∑∑ %
(
∑∑% &
string
∑∑& ,
input
∑∑- 2
)
∑∑2 3
{
∏∏ 	
if
ππ 
(
ππ 

m_ReadOnly
ππ 
)
ππ 
return
∫∫ 
;
∫∫ 
if
ºº 
(
ºº 
InPlaceEditing
ºº 
(
ºº 
)
ºº  
==
ºº! #
false
ºº$ )
)
ºº) *
return
ΩΩ 
;
ΩΩ 
for
øø 
(
øø 
int
øø 
i
øø 
=
øø 
$num
øø 
,
øø 
imax
øø  
=
øø! "
input
øø# (
.
øø( )
Length
øø) /
;
øø/ 0
i
øø1 2
<
øø3 4
imax
øø5 9
;
øø9 :
++
øø; =
i
øø= >
)
øø> ?
{
¿¿ 
char
¡¡ 
c
¡¡ 
=
¡¡ 
input
¡¡ 
[
¡¡ 
i
¡¡  
]
¡¡  !
;
¡¡! "
if
√√ 
(
√√ 
c
√√ 
>=
√√ 
$char
√√ 
||
√√ 
c
√√  !
==
√√" $
$char
√√% )
||
√√* ,
c
√√- .
==
√√/ 1
$char
√√2 6
||
√√7 9
c
√√: ;
==
√√< >
$num
√√? A
||
√√B D
c
√√E F
==
√√G I
$char
√√J N
)
√√N O
{
ƒƒ 
Append
≈≈ 
(
≈≈ 
c
≈≈ 
)
≈≈ 
;
≈≈ 
}
∆∆ 
}
«« 
}
»» 	
	protected
   
virtual
   
void
   
Append
   %
(
  % &
char
  & *
input
  + 0
)
  0 1
{
ÀÀ 	
if
ÃÃ 
(
ÃÃ 

m_ReadOnly
ÃÃ 
)
ÃÃ 
return
ÕÕ 
;
ÕÕ 
if
œœ 
(
œœ 
InPlaceEditing
œœ 
(
œœ 
)
œœ  
==
œœ! #
false
œœ$ )
)
œœ) *
return
–– 
;
–– 
int
”” 
insertionPosition
”” !
=
””" #
Mathf
””$ )
.
””) *
Min
””* -
(
””- .$
stringPositionInternal
””. D
,
””D E*
stringSelectPositionInternal
””F b
)
””b c
;
””c d
var
÷÷ 
validateText
÷÷ 
=
÷÷ 
text
÷÷ #
;
÷÷# $
if
ÿÿ 
(
ÿÿ $
selectionFocusPosition
ÿÿ &
!=
ÿÿ' )%
selectionAnchorPosition
ÿÿ* A
)
ÿÿA B
{
ŸŸ 
if
⁄⁄ 
(
⁄⁄ (
m_isRichTextEditingAllowed
⁄⁄ .
||
⁄⁄/ 1
m_isSelectAll
⁄⁄2 ?
)
⁄⁄? @
{
€€ 
if
›› 
(
›› 
m_StringPosition
›› (
<
››) *$
m_StringSelectPosition
››+ A
)
››A B
validateText
ﬁﬁ $
=
ﬁﬁ% &
text
ﬁﬁ' +
.
ﬁﬁ+ ,
Remove
ﬁﬁ, 2
(
ﬁﬁ2 3
m_StringPosition
ﬁﬁ3 C
,
ﬁﬁC D$
m_StringSelectPosition
ﬁﬁE [
-
ﬁﬁ\ ]
m_StringPosition
ﬁﬁ^ n
)
ﬁﬁn o
;
ﬁﬁo p
else
ﬂﬂ 
validateText
‡‡ $
=
‡‡% &
text
‡‡' +
.
‡‡+ ,
Remove
‡‡, 2
(
‡‡2 3$
m_StringSelectPosition
‡‡3 I
,
‡‡I J
m_StringPosition
‡‡K [
-
‡‡\ ]$
m_StringSelectPosition
‡‡^ t
)
‡‡t u
;
‡‡u v
}
·· 
else
‚‚ 
{
„„ 
if
‰‰ 
(
‰‰ 
m_CaretPosition
‰‰ '
<
‰‰( )#
m_CaretSelectPosition
‰‰* ?
)
‰‰? @
{
ÂÂ 
m_StringPosition
ÊÊ (
=
ÊÊ) *
m_TextComponent
ÊÊ+ :
.
ÊÊ: ;
textInfo
ÊÊ; C
.
ÊÊC D
characterInfo
ÊÊD Q
[
ÊÊQ R
m_CaretPosition
ÊÊR a
]
ÊÊa b
.
ÊÊb c
index
ÊÊc h
;
ÊÊh i$
m_StringSelectPosition
ÁÁ .
=
ÁÁ/ 0
m_TextComponent
ÁÁ1 @
.
ÁÁ@ A
textInfo
ÁÁA I
.
ÁÁI J
characterInfo
ÁÁJ W
[
ÁÁW X#
m_CaretSelectPosition
ÁÁX m
-
ÁÁn o
$num
ÁÁp q
]
ÁÁq r
.
ÁÁr s
index
ÁÁs x
+
ÁÁy z
m_TextComponentÁÁ{ ä
.ÁÁä ã
textInfoÁÁã ì
.ÁÁì î
characterInfoÁÁî °
[ÁÁ° ¢%
m_CaretSelectPositionÁÁ¢ ∑
-ÁÁ∏ π
$numÁÁ∫ ª
]ÁÁª º
.ÁÁº Ω
stringLengthÁÁΩ …
;ÁÁ…  
validateText
ÈÈ $
=
ÈÈ% &
text
ÈÈ' +
.
ÈÈ+ ,
Remove
ÈÈ, 2
(
ÈÈ2 3
m_StringPosition
ÈÈ3 C
,
ÈÈC D$
m_StringSelectPosition
ÈÈE [
-
ÈÈ\ ]
m_StringPosition
ÈÈ^ n
)
ÈÈn o
;
ÈÈo p
}
ÍÍ 
else
ÎÎ 
{
ÏÏ 
m_StringPosition
ÌÌ (
=
ÌÌ) *
m_TextComponent
ÌÌ+ :
.
ÌÌ: ;
textInfo
ÌÌ; C
.
ÌÌC D
characterInfo
ÌÌD Q
[
ÌÌQ R
m_CaretPosition
ÌÌR a
-
ÌÌb c
$num
ÌÌd e
]
ÌÌe f
.
ÌÌf g
index
ÌÌg l
+
ÌÌm n
m_TextComponent
ÌÌo ~
.
ÌÌ~ 
textInfoÌÌ á
.ÌÌá à
characterInfoÌÌà ï
[ÌÌï ñ
m_CaretPositionÌÌñ •
-ÌÌ¶ ß
$numÌÌ® ©
]ÌÌ© ™
.ÌÌ™ ´
stringLengthÌÌ´ ∑
;ÌÌ∑ ∏$
m_StringSelectPosition
ÓÓ .
=
ÓÓ/ 0
m_TextComponent
ÓÓ1 @
.
ÓÓ@ A
textInfo
ÓÓA I
.
ÓÓI J
characterInfo
ÓÓJ W
[
ÓÓW X#
m_CaretSelectPosition
ÓÓX m
]
ÓÓm n
.
ÓÓn o
index
ÓÓo t
;
ÓÓt u
validateText
 $
=
% &
text
' +
.
+ ,
Remove
, 2
(
2 3$
m_StringSelectPosition
3 I
,
I J
m_StringPosition
K [
-
\ ]$
m_StringSelectPosition
^ t
)
t u
;
u v
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 
if
ıı 
(
ıı 
onValidateInput
ıı 
!=
ıı  "
null
ıı# '
)
ıı' (
{
ˆˆ 
input
˜˜ 
=
˜˜ 
onValidateInput
˜˜ '
(
˜˜' (
validateText
˜˜( 4
,
˜˜4 5
insertionPosition
˜˜6 G
,
˜˜G H
input
˜˜I N
)
˜˜N O
;
˜˜O P
}
¯¯ 
else
˘˘ 
if
˘˘ 
(
˘˘ !
characterValidation
˘˘ (
==
˘˘) +!
CharacterValidation
˘˘, ?
.
˘˘? @
CustomValidator
˘˘@ O
)
˘˘O P
{
˙˙ 
input
˚˚ 
=
˚˚ 
Validate
˚˚  
(
˚˚  !
validateText
˚˚! -
,
˚˚- .
insertionPosition
˚˚/ @
,
˚˚@ A
input
˚˚B G
)
˚˚G H
;
˚˚H I
if
˝˝ 
(
˝˝ 
input
˝˝ 
==
˝˝ 
$num
˝˝ 
)
˝˝ 
return
˝˝  &
;
˝˝& ' 
SendOnValueChanged
ˇˇ "
(
ˇˇ" #
)
ˇˇ# $
;
ˇˇ$ %
UpdateLabel
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
return
ÇÇ 
;
ÇÇ 
}
ÉÉ 
else
ÑÑ 
if
ÑÑ 
(
ÑÑ !
characterValidation
ÑÑ (
!=
ÑÑ) +!
CharacterValidation
ÑÑ, ?
.
ÑÑ? @
None
ÑÑ@ D
)
ÑÑD E
{
ÖÖ 
input
ÜÜ 
=
ÜÜ 
Validate
ÜÜ  
(
ÜÜ  !
validateText
ÜÜ! -
,
ÜÜ- .
insertionPosition
ÜÜ/ @
,
ÜÜ@ A
input
ÜÜB G
)
ÜÜG H
;
ÜÜH I
}
áá 
if
ää 
(
ää 
input
ää 
==
ää 
$num
ää 
)
ää 
return
ãã 
;
ãã 
Insert
éé 
(
éé 
input
éé 
)
éé 
;
éé 
}
èè 	
private
ìì 
void
ìì 
Insert
ìì 
(
ìì 
char
ìì  
c
ìì! "
)
ìì" #
{
îî 	
if
ïï 
(
ïï 

m_ReadOnly
ïï 
)
ïï 
return
ññ 
;
ññ 
string
öö 
replaceString
öö  
=
öö! "
c
öö# $
.
öö$ %
ToString
öö% -
(
öö- .
)
öö. /
;
öö/ 0
Delete
õõ 
(
õõ 
)
õõ 
;
õõ 
if
ûû 
(
ûû 
characterLimit
ûû 
>
ûû  
$num
ûû! "
&&
ûû# %
text
ûû& *
.
ûû* +
Length
ûû+ 1
>=
ûû2 4
characterLimit
ûû5 C
)
ûûC D
return
üü 
;
üü 
m_Text
°° 
=
°° 
text
°° 
.
°° 
Insert
°°  
(
°°  !
m_StringPosition
°°! 1
,
°°1 2
replaceString
°°3 @
)
°°@ A
;
°°A B
if
££ 
(
££ 
!
££ 
char
££ 
.
££ 
IsHighSurrogate
££ %
(
££% &
c
££& '
)
££' (
)
££( )#
m_CaretSelectPosition
§§ %
=
§§& '
m_CaretPosition
§§( 7
+=
§§8 :
$num
§§; <
;
§§< =$
m_StringSelectPosition
¶¶ "
=
¶¶# $
m_StringPosition
¶¶% 5
+=
¶¶6 8
$num
¶¶9 :
;
¶¶: ;0
"UpdateTouchKeyboardFromEditChanges
®® .
(
®®. /
)
®®/ 0
;
®®0 1 
SendOnValueChanged
©© 
(
©© 
)
©©  
;
©©  !
}
ÆÆ 	
private
∞∞ 
void
∞∞ 0
"UpdateTouchKeyboardFromEditChanges
∞∞ 7
(
∞∞7 8
)
∞∞8 9
{
±± 	
if
¥¥ 
(
¥¥ 
m_SoftKeyboard
¥¥ 
!=
¥¥ !
null
¥¥" &
&&
¥¥' )
InPlaceEditing
¥¥* 8
(
¥¥8 9
)
¥¥9 :
)
¥¥: ;
{
µµ 
m_SoftKeyboard
∂∂ 
.
∂∂ 
text
∂∂ #
=
∂∂$ %
m_Text
∂∂& ,
;
∂∂, -
}
∑∑ 
}
∏∏ 	
private
∫∫ 
void
∫∫ .
 SendOnValueChangedAndUpdateLabel
∫∫ 5
(
∫∫5 6
)
∫∫6 7
{
ªª 	
UpdateLabel
ºº 
(
ºº 
)
ºº 
;
ºº  
SendOnValueChanged
ΩΩ 
(
ΩΩ 
)
ΩΩ  
;
ΩΩ  !
}
ææ 	
private
¿¿ 
void
¿¿  
SendOnValueChanged
¿¿ '
(
¿¿' (
)
¿¿( )
{
¡¡ 	
if
¬¬ 
(
¬¬ 
onValueChanged
¬¬ 
!=
¬¬ !
null
¬¬" &
)
¬¬& '
onValueChanged
√√ 
.
√√ 
Invoke
√√ %
(
√√% &
text
√√& *
)
√√* +
;
√√+ ,
}
ƒƒ 	
	protected
   
void
   
SendOnEndEdit
   $
(
  $ %
)
  % &
{
ÀÀ 	
if
ÃÃ 
(
ÃÃ 
	onEndEdit
ÃÃ 
!=
ÃÃ 
null
ÃÃ !
)
ÃÃ! "
	onEndEdit
ÕÕ 
.
ÕÕ 
Invoke
ÕÕ  
(
ÕÕ  !
m_Text
ÕÕ! '
)
ÕÕ' (
;
ÕÕ( )
}
ŒŒ 	
	protected
–– 
void
–– 
SendOnSubmit
–– #
(
––# $
)
––$ %
{
—— 	
if
““ 
(
““ 
onSubmit
““ 
!=
““ 
null
““  
)
““  !
onSubmit
”” 
.
”” 
Invoke
”” 
(
””  
m_Text
””  &
)
””& '
;
””' (
}
‘‘ 	
	protected
÷÷ 
void
÷÷ 
SendOnFocus
÷÷ "
(
÷÷" #
)
÷÷# $
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
onSelect
ÿÿ 
!=
ÿÿ 
null
ÿÿ  
)
ÿÿ  !
onSelect
ŸŸ 
.
ŸŸ 
Invoke
ŸŸ 
(
ŸŸ  
m_Text
ŸŸ  &
)
ŸŸ& '
;
ŸŸ' (
}
⁄⁄ 	
	protected
‹‹ 
void
‹‹ 
SendOnFocusLost
‹‹ &
(
‹‹& '
)
‹‹' (
{
›› 	
if
ﬁﬁ 
(
ﬁﬁ 

onDeselect
ﬁﬁ 
!=
ﬁﬁ 
null
ﬁﬁ "
)
ﬁﬁ" #

onDeselect
ﬂﬂ 
.
ﬂﬂ 
Invoke
ﬂﬂ !
(
ﬂﬂ! "
m_Text
ﬂﬂ" (
)
ﬂﬂ( )
;
ﬂﬂ) *
}
‡‡ 	
	protected
‚‚ 
void
‚‚ !
SendOnTextSelection
‚‚ *
(
‚‚* +
)
‚‚+ ,
{
„„ 	
m_isSelected
‰‰ 
=
‰‰ 
true
‰‰ 
;
‰‰  
if
ÊÊ 
(
ÊÊ 
onTextSelection
ÊÊ 
!=
ÊÊ  "
null
ÊÊ# '
)
ÊÊ' (
onTextSelection
ÁÁ 
.
ÁÁ  
Invoke
ÁÁ  &
(
ÁÁ& '
m_Text
ÁÁ' -
,
ÁÁ- .$
stringPositionInternal
ÁÁ/ E
,
ÁÁE F*
stringSelectPositionInternal
ÁÁG c
)
ÁÁc d
;
ÁÁd e
}
ËË 	
	protected
ÍÍ 
void
ÍÍ $
SendOnEndTextSelection
ÍÍ -
(
ÍÍ- .
)
ÍÍ. /
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
!
ÏÏ 
m_isSelected
ÏÏ 
)
ÏÏ 
return
ÏÏ %
;
ÏÏ% &
if
ÓÓ 
(
ÓÓ  
onEndTextSelection
ÓÓ "
!=
ÓÓ# %
null
ÓÓ& *
)
ÓÓ* + 
onEndTextSelection
ÔÔ "
.
ÔÔ" #
Invoke
ÔÔ# )
(
ÔÔ) *
m_Text
ÔÔ* 0
,
ÔÔ0 1$
stringPositionInternal
ÔÔ2 H
,
ÔÔH I*
stringSelectPositionInternal
ÔÔJ f
)
ÔÔf g
;
ÔÔg h
m_isSelected
ÒÒ 
=
ÒÒ 
false
ÒÒ  
;
ÒÒ  !
}
ÚÚ 	
	protected
ÙÙ 
void
ÙÙ 2
$SendTouchScreenKeyboardStatusChanged
ÙÙ ;
(
ÙÙ; <
)
ÙÙ< =
{
ıı 	
if
ˆˆ 
(
ˆˆ 0
"onTouchScreenKeyboardStatusChanged
ˆˆ 2
!=
ˆˆ3 5
null
ˆˆ6 :
)
ˆˆ: ;0
"onTouchScreenKeyboardStatusChanged
˜˜ 2
.
˜˜2 3
Invoke
˜˜3 9
(
˜˜9 :
m_SoftKeyboard
˜˜: H
.
˜˜H I
status
˜˜I O
)
˜˜O P
;
˜˜P Q
}
¯¯ 	
	protected
ˇˇ 
void
ˇˇ 
UpdateLabel
ˇˇ "
(
ˇˇ" #
)
ˇˇ# $
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
m_TextComponent
ÅÅ 
!=
ÅÅ  "
null
ÅÅ# '
&&
ÅÅ( *
m_TextComponent
ÅÅ+ :
.
ÅÅ: ;
font
ÅÅ; ?
!=
ÅÅ@ B
null
ÅÅC G
&&
ÅÅH J
m_PreventCallback
ÅÅK \
==
ÅÅ] _
false
ÅÅ` e
)
ÅÅe f
{
ÇÇ 
m_PreventCallback
ÑÑ !
=
ÑÑ" #
true
ÑÑ$ (
;
ÑÑ( )
string
ÜÜ 
fullText
ÜÜ 
;
ÜÜ  
if
áá 
(
áá 
compositionLength
áá %
>
áá& '
$num
áá( )
&&
áá* ,

m_ReadOnly
áá- 7
==
áá8 :
false
áá; @
)
áá@ A
{
àà 
Delete
åå 
(
åå 
)
åå 
;
åå 
if
éé 
(
éé 

m_RichText
éé "
)
éé" #
fullText
èè  
=
èè! "
text
èè# '
.
èè' (
	Substring
èè( 1
(
èè1 2
$num
èè2 3
,
èè3 4
m_StringPosition
èè5 E
)
èèE F
+
èèG H
$str
èèJ O
+
èèP Q
compositionString
èèR c
+
èèd e
$str
èèf l
+
èèm n
text
èèo s
.
èès t
	Substring
èèt }
(
èè} ~
m_StringPositionèè~ é
)èèé è
;èèè ê
else
êê 
fullText
ëë  
=
ëë! "
text
ëë# '
.
ëë' (
	Substring
ëë( 1
(
ëë1 2
$num
ëë2 3
,
ëë3 4
m_StringPosition
ëë5 E
)
ëëE F
+
ëëG H
compositionString
ëëJ [
+
ëë\ ]
text
ëë^ b
.
ëëb c
	Substring
ëëc l
(
ëël m
m_StringPosition
ëëm }
)
ëë} ~
;
ëë~ #
m_IsCompositionActive
ìì )
=
ìì* +
true
ìì, 0
;
ìì0 1
}
ññ 
else
óó 
{
òò 
fullText
ôô 
=
ôô 
text
ôô #
;
ôô# $#
m_IsCompositionActive
öö )
=
öö* +
false
öö, 1
;
öö1 2-
m_ShouldUpdateIMEWindowPosition
õõ 3
=
õõ4 5
true
õõ6 :
;
õõ: ;
}
ùù 
string
°° 
	processed
°°  
;
°°  !
if
¢¢ 
(
¢¢ 
	inputType
¢¢ 
==
¢¢  
	InputType
¢¢! *
.
¢¢* +
Password
¢¢+ 3
)
¢¢3 4
	processed
££ 
=
££ 
new
££  #
string
££$ *
(
££* +
asteriskChar
££+ 7
,
££7 8
fullText
££9 A
.
££A B
Length
££B H
)
££H I
;
££I J
else
§§ 
	processed
•• 
=
•• 
fullText
••  (
;
••( )
bool
ßß 
isEmpty
ßß 
=
ßß 
string
ßß %
.
ßß% &
IsNullOrEmpty
ßß& 3
(
ßß3 4
fullText
ßß4 <
)
ßß< =
;
ßß= >
if
©© 
(
©© 
m_Placeholder
©© !
!=
©©" $
null
©©% )
)
©©) *
m_Placeholder
™™ !
.
™™! "
enabled
™™" )
=
™™* +
isEmpty
™™, 3
;
™™3 4
if
¨¨ 
(
¨¨ 
!
¨¨ 
isEmpty
¨¨ 
&&
¨¨ 

m_ReadOnly
¨¨  *
==
¨¨+ -
false
¨¨. 3
)
¨¨3 4
{
≠≠ 
SetCaretVisible
ÆÆ #
(
ÆÆ# $
)
ÆÆ$ %
;
ÆÆ% &
}
ØØ 
m_TextComponent
±± 
.
±±  
text
±±  $
=
±±% &
	processed
±±' 0
+
±±1 2
$str
±±3 ;
;
±±; <
if
¥¥ 
(
¥¥ *
m_IsDrivenByLayoutComponents
¥¥ 0
)
¥¥0 1
LayoutRebuilder
µµ #
.
µµ# $"
MarkLayoutForRebuild
µµ$ 8
(
µµ8 9
m_RectTransform
µµ9 H
)
µµH I
;
µµI J
if
∏∏ 
(
∏∏ 
m_LineLimit
∏∏ 
>
∏∏  !
$num
∏∏" #
)
∏∏# $
{
ππ 
m_TextComponent
∫∫ #
.
∫∫# $
ForceMeshUpdate
∫∫$ 3
(
∫∫3 4
)
∫∫4 5
;
∫∫5 6
TMP_TextInfo
ºº  
textInfo
ºº! )
=
ºº* +
m_TextComponent
ºº, ;
.
ºº; <
textInfo
ºº< D
;
ººD E
if
øø 
(
øø 
textInfo
øø  
!=
øø! #
null
øø$ (
&&
øø) +
textInfo
øø, 4
.
øø4 5
	lineCount
øø5 >
>
øø? @
m_LineLimit
øøA L
)
øøL M
{
¿¿ 
int
¡¡ %
lastValidCharacterIndex
¡¡ 3
=
¡¡4 5
textInfo
¡¡6 >
.
¡¡> ?
lineInfo
¡¡? G
[
¡¡G H
m_LineLimit
¡¡H S
-
¡¡T U
$num
¡¡V W
]
¡¡W X
.
¡¡X Y 
lastCharacterIndex
¡¡Y k
;
¡¡k l
int
¬¬ "
characterStringIndex
¬¬ 0
=
¬¬1 2
textInfo
¬¬3 ;
.
¬¬; <
characterInfo
¬¬< I
[
¬¬I J%
lastValidCharacterIndex
¬¬J a
]
¬¬a b
.
¬¬b c
index
¬¬c h
+
¬¬i j
textInfo
¬¬k s
.
¬¬s t
characterInfo¬¬t Å
[¬¬Å Ç'
lastValidCharacterIndex¬¬Ç ô
]¬¬ô ö
.¬¬ö õ
stringLength¬¬õ ß
;¬¬ß ®
text
√√ 
=
√√ 
	processed
√√ (
.
√√( )
Remove
√√) /
(
√√/ 0"
characterStringIndex
√√0 D
,
√√D E
	processed
√√F O
.
√√O P
Length
√√P V
-
√√W X"
characterStringIndex
√√Y m
)
√√m n
;
√√n o
m_TextComponent
ƒƒ '
.
ƒƒ' (
text
ƒƒ( ,
=
ƒƒ- .
text
ƒƒ/ 3
+
ƒƒ4 5
$str
ƒƒ6 >
;
ƒƒ> ?
}
≈≈ 
}
∆∆ 
if
»» 
(
»» -
m_IsTextComponentUpdateRequired
»» 3
||
»»4 6!
m_VerticalScrollbar
»»7 J
)
»»J K
{
…… -
m_IsTextComponentUpdateRequired
   3
=
  4 5
false
  6 ;
;
  ; <
m_TextComponent
ÀÀ #
.
ÀÀ# $
ForceMeshUpdate
ÀÀ$ 3
(
ÀÀ3 4
)
ÀÀ4 5
;
ÀÀ5 6
}
ÃÃ !
MarkGeometryAsDirty
ŒŒ #
(
ŒŒ# $
)
ŒŒ$ %
;
ŒŒ% &
m_PreventCallback
–– !
=
––" #
false
––$ )
;
––) *
}
—— 
}
““ 	
void
’’ 
UpdateScrollbar
’’ 
(
’’ 
)
’’ 
{
÷÷ 	
if
ÿÿ 
(
ÿÿ !
m_VerticalScrollbar
ÿÿ #
)
ÿÿ# $
{
ŸŸ 
Rect
⁄⁄ 
viewportRect
⁄⁄ !
=
⁄⁄" #
m_TextViewport
⁄⁄$ 2
.
⁄⁄2 3
rect
⁄⁄3 7
;
⁄⁄7 8
float
‹‹ 
size
‹‹ 
=
‹‹ 
viewportRect
‹‹ )
.
‹‹) *
height
‹‹* 0
/
‹‹1 2
m_TextComponent
‹‹3 B
.
‹‹B C
preferredHeight
‹‹C R
;
‹‹R S!
m_VerticalScrollbar
ﬁﬁ #
.
ﬁﬁ# $
size
ﬁﬁ$ (
=
ﬁﬁ) *
size
ﬁﬁ+ /
;
ﬁﬁ/ 0!
m_VerticalScrollbar
‡‡ #
.
‡‡# $
value
‡‡$ )
=
‡‡* +1
#GetScrollPositionRelativeToViewport
‡‡, O
(
‡‡O P
)
‡‡P Q
;
‡‡Q R
}
„„ 
}
‰‰ 	
void
ÎÎ $
OnScrollbarValueChange
ÎÎ #
(
ÎÎ# $
float
ÎÎ$ )
value
ÎÎ* /
)
ÎÎ/ 0
{
ÏÏ 	
if
ÛÛ 
(
ÛÛ 
value
ÛÛ 
<
ÛÛ 
$num
ÛÛ 
||
ÛÛ 
value
ÛÛ "
>
ÛÛ# $
$num
ÛÛ% &
)
ÛÛ& '
return
ÛÛ( .
;
ÛÛ. /2
$AdjustTextPositionRelativeToViewport
ıı 0
(
ıı0 1
value
ıı1 6
)
ıı6 7
;
ıı7 8
m_ScrollPosition
˜˜ 
=
˜˜ 
value
˜˜ $
;
˜˜$ %
}
˙˙ 	
void
¸¸ 
UpdateMaskRegions
¸¸ 
(
¸¸ 
)
¸¸  
{
˝˝ 	
}
òò 	
void
ûû 2
$AdjustTextPositionRelativeToViewport
ûû 1
(
ûû2 3
float
ûû3 8
relativePosition
ûû9 I
)
ûûI J
{
üü 	
if
†† 
(
†† 
m_TextViewport
†† 
==
†† !
null
††" &
)
††& '
return
°° 
;
°° 
TMP_TextInfo
££ 
textInfo
££ !
=
££" #
m_TextComponent
££$ 3
.
££3 4
textInfo
££4 <
;
££< =
if
¶¶ 
(
¶¶ 
textInfo
¶¶ 
==
¶¶ 
null
¶¶  
||
¶¶! #
textInfo
¶¶$ ,
.
¶¶, -
lineInfo
¶¶- 5
==
¶¶6 8
null
¶¶9 =
||
¶¶> @
textInfo
¶¶A I
.
¶¶I J
	lineCount
¶¶J S
==
¶¶T V
$num
¶¶W X
||
¶¶Y [
textInfo
¶¶\ d
.
¶¶d e
	lineCount
¶¶e n
>
¶¶o p
textInfo
¶¶q y
.
¶¶y z
lineInfo¶¶z Ç
.¶¶Ç É
Length¶¶É â
)¶¶â ä
return¶¶ã ë
;¶¶ë í
float
®® %
verticalAlignmentOffset
®® )
=
®®* +
$num
®®, -
;
®®- .
float
©© 

textHeight
©© 
=
©© 
m_TextComponent
©© .
.
©©. /
preferredHeight
©©/ >
;
©©> ?
switch
´´ 
(
´´ 
m_TextComponent
´´ #
.
´´# $
verticalAlignment
´´$ 5
)
´´5 6
{
¨¨ 
case
≠≠ &
VerticalAlignmentOptions
≠≠ -
.
≠≠- .
Top
≠≠. 1
:
≠≠1 2%
verticalAlignmentOffset
ÆÆ +
=
ÆÆ, -
$num
ÆÆ. /
;
ÆÆ/ 0
break
ØØ 
;
ØØ 
case
∞∞ &
VerticalAlignmentOptions
∞∞ -
.
∞∞- .
Middle
∞∞. 4
:
∞∞4 5%
verticalAlignmentOffset
±± +
=
±±, -
$num
±±. 2
;
±±2 3
break
≤≤ 
;
≤≤ 
case
≥≥ &
VerticalAlignmentOptions
≥≥ -
.
≥≥- .
Bottom
≥≥. 4
:
≥≥4 5%
verticalAlignmentOffset
¥¥ +
=
¥¥, -
$num
¥¥. 2
;
¥¥2 3
break
µµ 
;
µµ 
case
∂∂ &
VerticalAlignmentOptions
∂∂ -
.
∂∂- .
Baseline
∂∂. 6
:
∂∂6 7
break
∑∑ 
;
∑∑ 
case
∏∏ &
VerticalAlignmentOptions
∏∏ -
.
∏∏- .
Geometry
∏∏. 6
:
∏∏6 7%
verticalAlignmentOffset
ππ +
=
ππ, -
$num
ππ. 2
;
ππ2 3

textHeight
∫∫ 
=
∫∫  
m_TextComponent
∫∫! 0
.
∫∫0 1
bounds
∫∫1 7
.
∫∫7 8
size
∫∫8 <
.
∫∫< =
y
∫∫= >
;
∫∫> ?
break
ªª 
;
ªª 
case
ºº &
VerticalAlignmentOptions
ºº -
.
ºº- .
Capline
ºº. 5
:
ºº5 6%
verticalAlignmentOffset
ΩΩ +
=
ΩΩ, -
$num
ΩΩ. 2
;
ΩΩ2 3
break
ææ 
;
ææ 
}
øø 
m_TextComponent
¡¡ 
.
¡¡ 
rectTransform
¡¡ )
.
¡¡) *
anchoredPosition
¡¡* :
=
¡¡; <
new
¡¡= @
Vector2
¡¡A H
(
¡¡H I
m_TextComponent
¡¡I X
.
¡¡X Y
rectTransform
¡¡Y f
.
¡¡f g
anchoredPosition
¡¡g w
.
¡¡w x
x
¡¡x y
,
¡¡y z
(
¡¡{ |

textHeight¡¡| Ü
-¡¡á à
m_TextViewport¡¡â ó
.¡¡ó ò
rect¡¡ò ú
.¡¡ú ù
height¡¡ù £
)¡¡£ §
*¡¡• ¶
(¡¡ß ® 
relativePosition¡¡® ∏
-¡¡π ∫'
verticalAlignmentOffset¡¡ª “
)¡¡“ ”
)¡¡” ‘
;¡¡‘ ’'
AssignPositioningIfNeeded
√√ %
(
√√% &
)
√√& '
;
√√' (
}
∆∆ 	
private
…… 
int
…… -
GetCaretPositionFromStringIndex
…… 3
(
……3 4
int
……4 7
stringIndex
……8 C
)
……C D
{
   	
int
ÀÀ 
count
ÀÀ 
=
ÀÀ 
m_TextComponent
ÀÀ '
.
ÀÀ' (
textInfo
ÀÀ( 0
.
ÀÀ0 1
characterCount
ÀÀ1 ?
;
ÀÀ? @
for
ÕÕ 
(
ÕÕ 
int
ÕÕ 
i
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
i
ÕÕ 
<
ÕÕ 
count
ÕÕ  %
;
ÕÕ% &
i
ÕÕ' (
++
ÕÕ( *
)
ÕÕ* +
{
ŒŒ 
if
œœ 
(
œœ 
m_TextComponent
œœ #
.
œœ# $
textInfo
œœ$ ,
.
œœ, -
characterInfo
œœ- :
[
œœ: ;
i
œœ; <
]
œœ< =
.
œœ= >
index
œœ> C
>=
œœD F
stringIndex
œœG R
)
œœR S
return
–– 
i
–– 
;
–– 
}
—— 
return
”” 
count
”” 
;
”” 
}
‘‘ 	
private
€€ 
int
€€ 0
"GetMinCaretPositionFromStringIndex
€€ 6
(
€€6 7
int
€€7 :
stringIndex
€€; F
)
€€F G
{
‹‹ 	
int
›› 
count
›› 
=
›› 
m_TextComponent
›› '
.
››' (
textInfo
››( 0
.
››0 1
characterCount
››1 ?
;
››? @
for
ﬂﬂ 
(
ﬂﬂ 
int
ﬂﬂ 
i
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ 
;
ﬂﬂ 
i
ﬂﬂ 
<
ﬂﬂ 
count
ﬂﬂ  %
;
ﬂﬂ% &
i
ﬂﬂ' (
++
ﬂﬂ( *
)
ﬂﬂ* +
{
‡‡ 
if
·· 
(
·· 
stringIndex
·· 
<
··  !
m_TextComponent
··" 1
.
··1 2
textInfo
··2 :
.
··: ;
characterInfo
··; H
[
··H I
i
··I J
]
··J K
.
··K L
index
··L Q
+
··R S
m_TextComponent
··T c
.
··c d
textInfo
··d l
.
··l m
characterInfo
··m z
[
··z {
i
··{ |
]
··| }
.
··} ~
stringLength··~ ä
)··ä ã
return
‚‚ 
i
‚‚ 
;
‚‚ 
}
„„ 
return
ÂÂ 
count
ÂÂ 
;
ÂÂ 
}
ÊÊ 	
private
ÌÌ 
int
ÌÌ 0
"GetMaxCaretPositionFromStringIndex
ÌÌ 6
(
ÌÌ6 7
int
ÌÌ7 :
stringIndex
ÌÌ; F
)
ÌÌF G
{
ÓÓ 	
int
ÔÔ 
count
ÔÔ 
=
ÔÔ 
m_TextComponent
ÔÔ '
.
ÔÔ' (
textInfo
ÔÔ( 0
.
ÔÔ0 1
characterCount
ÔÔ1 ?
;
ÔÔ? @
for
ÒÒ 
(
ÒÒ 
int
ÒÒ 
i
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ 
<
ÒÒ 
count
ÒÒ  %
;
ÒÒ% &
i
ÒÒ' (
++
ÒÒ( *
)
ÒÒ* +
{
ÚÚ 
if
ÛÛ 
(
ÛÛ 
m_TextComponent
ÛÛ #
.
ÛÛ# $
textInfo
ÛÛ$ ,
.
ÛÛ, -
characterInfo
ÛÛ- :
[
ÛÛ: ;
i
ÛÛ; <
]
ÛÛ< =
.
ÛÛ= >
index
ÛÛ> C
>=
ÛÛD F
stringIndex
ÛÛG R
)
ÛÛR S
return
ÙÙ 
i
ÙÙ 
;
ÙÙ 
}
ıı 
return
˜˜ 
count
˜˜ 
;
˜˜ 
}
¯¯ 	
private
˙˙ 
int
˙˙ -
GetStringIndexFromCaretPosition
˙˙ 3
(
˙˙3 4
int
˙˙4 7
caretPosition
˙˙8 E
)
˙˙E F
{
˚˚ 	
ClampCaretPos
˝˝ 
(
˝˝ 
ref
˝˝ 
caretPosition
˝˝ +
)
˝˝+ ,
;
˝˝, -
return
ˇˇ 
m_TextComponent
ˇˇ "
.
ˇˇ" #
textInfo
ˇˇ# +
.
ˇˇ+ ,
characterInfo
ˇˇ, 9
[
ˇˇ9 :
caretPosition
ˇˇ: G
]
ˇˇG H
.
ˇˇH I
index
ˇˇI N
;
ˇˇN O
}
ÄÄ 	
public
ÉÉ 
void
ÉÉ 
ForceLabelUpdate
ÉÉ $
(
ÉÉ$ %
)
ÉÉ% &
{
ÑÑ 	
UpdateLabel
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
private
àà 
void
àà !
MarkGeometryAsDirty
àà (
(
àà( )
)
àà) *
{
ââ 	
if
ãã 
(
ãã 
!
ãã 
Application
ãã 
.
ãã 
	isPlaying
ãã &
||
ãã' )
UnityEditor
ãã* 5
.
ãã5 6
PrefabUtility
ãã6 C
.
ããC D!
IsPartOfPrefabAsset
ããD W
(
ããW X
this
ããX \
)
ãã\ ]
)
ãã] ^
return
åå 
;
åå "
CanvasUpdateRegistry
èè  
.
èè  !4
&RegisterCanvasElementForGraphicRebuild
èè! G
(
èèG H
this
èèH L
)
èèL M
;
èèM N
}
êê 	
public
íí 
virtual
íí 
void
íí 
Rebuild
íí #
(
íí# $
CanvasUpdate
íí$ 0
update
íí1 7
)
íí7 8
{
ìì 	
switch
îî 
(
îî 
update
îî 
)
îî 
{
ïï 
case
ññ 
CanvasUpdate
ññ !
.
ññ! "
LatePreRender
ññ" /
:
ññ/ 0
UpdateGeometry
óó "
(
óó" #
)
óó# $
;
óó$ %
break
òò 
;
òò 
}
ôô 
}
öö 	
public
úú 
virtual
úú 
void
úú 
LayoutComplete
úú *
(
úú* +
)
úú+ ,
{
ùù 	
}
ùù
 
public
üü 
virtual
üü 
void
üü #
GraphicUpdateComplete
üü 1
(
üü1 2
)
üü2 3
{
†† 	
}
††
 
private
¢¢ 
void
¢¢ 
UpdateGeometry
¢¢ #
(
¢¢# $
)
¢¢$ %
{
££ 	
if
•• 
(
•• 
!
•• 
Application
•• 
.
•• 
	isPlaying
•• &
)
••& '
return
¶¶ 
;
¶¶ 
if
™™ 
(
™™ 
InPlaceEditing
™™ 
(
™™ 
)
™™  
==
™™! #
false
™™$ )
)
™™) *
return
´´ 
;
´´ 
if
≠≠ 
(
≠≠ #
m_CachedInputRenderer
≠≠ %
==
≠≠& (
null
≠≠) -
)
≠≠- .
return
ÆÆ 
;
ÆÆ 
	OnFillVBO
∞∞ 
(
∞∞ 
mesh
∞∞ 
)
∞∞ 
;
∞∞ #
m_CachedInputRenderer
≤≤ !
.
≤≤! "
SetMesh
≤≤" )
(
≤≤) *
mesh
≤≤* .
)
≤≤. /
;
≤≤/ 0
}
≥≥ 	
private
ππ 
void
ππ '
AssignPositioningIfNeeded
ππ .
(
ππ. /
)
ππ/ 0
{
∫∫ 	
if
ªª 
(
ªª 
m_TextComponent
ªª 
!=
ªª  "
null
ªª# '
&&
ªª( *
caretRectTrans
ªª+ 9
!=
ªª: <
null
ªª= A
&&
ªªB D
(
ºº 
caretRectTrans
ºº 
.
ºº  
localPosition
ºº  -
!=
ºº. 0
m_TextComponent
ºº1 @
.
ºº@ A
rectTransform
ººA N
.
ººN O
localPosition
ººO \
||
ºº] _
caretRectTrans
ΩΩ 
.
ΩΩ  
localRotation
ΩΩ  -
!=
ΩΩ. 0
m_TextComponent
ΩΩ1 @
.
ΩΩ@ A
rectTransform
ΩΩA N
.
ΩΩN O
localRotation
ΩΩO \
||
ΩΩ] _
caretRectTrans
ææ 
.
ææ  

localScale
ææ  *
!=
ææ+ -
m_TextComponent
ææ. =
.
ææ= >
rectTransform
ææ> K
.
ææK L

localScale
ææL V
||
ææW Y
caretRectTrans
øø 
.
øø  
	anchorMin
øø  )
!=
øø* ,
m_TextComponent
øø- <
.
øø< =
rectTransform
øø= J
.
øøJ K
	anchorMin
øøK T
||
øøU W
caretRectTrans
¿¿ 
.
¿¿  
	anchorMax
¿¿  )
!=
¿¿* ,
m_TextComponent
¿¿- <
.
¿¿< =
rectTransform
¿¿= J
.
¿¿J K
	anchorMax
¿¿K T
||
¿¿U W
caretRectTrans
¡¡ 
.
¡¡  
anchoredPosition
¡¡  0
!=
¡¡1 3
m_TextComponent
¡¡4 C
.
¡¡C D
rectTransform
¡¡D Q
.
¡¡Q R
anchoredPosition
¡¡R b
||
¡¡c e
caretRectTrans
¬¬ 
.
¬¬  
	sizeDelta
¬¬  )
!=
¬¬* ,
m_TextComponent
¬¬- <
.
¬¬< =
rectTransform
¬¬= J
.
¬¬J K
	sizeDelta
¬¬K T
||
¬¬U W
caretRectTrans
√√ 
.
√√  
pivot
√√  %
!=
√√& (
m_TextComponent
√√) 8
.
√√8 9
rectTransform
√√9 F
.
√√F G
pivot
√√G L
)
√√L M
)
√√M N
{
ƒƒ 
caretRectTrans
≈≈ 
.
≈≈ 
localPosition
≈≈ ,
=
≈≈- .
m_TextComponent
≈≈/ >
.
≈≈> ?
rectTransform
≈≈? L
.
≈≈L M
localPosition
≈≈M Z
;
≈≈Z [
caretRectTrans
∆∆ 
.
∆∆ 
localRotation
∆∆ ,
=
∆∆- .
m_TextComponent
∆∆/ >
.
∆∆> ?
rectTransform
∆∆? L
.
∆∆L M
localRotation
∆∆M Z
;
∆∆Z [
caretRectTrans
«« 
.
«« 

localScale
«« )
=
««* +
m_TextComponent
««, ;
.
««; <
rectTransform
««< I
.
««I J

localScale
««J T
;
««T U
caretRectTrans
»» 
.
»» 
	anchorMin
»» (
=
»») *
m_TextComponent
»»+ :
.
»»: ;
rectTransform
»»; H
.
»»H I
	anchorMin
»»I R
;
»»R S
caretRectTrans
…… 
.
…… 
	anchorMax
…… (
=
……) *
m_TextComponent
……+ :
.
……: ;
rectTransform
……; H
.
……H I
	anchorMax
……I R
;
……R S
caretRectTrans
   
.
   
anchoredPosition
   /
=
  0 1
m_TextComponent
  2 A
.
  A B
rectTransform
  B O
.
  O P
anchoredPosition
  P `
;
  ` a
caretRectTrans
ÀÀ 
.
ÀÀ 
	sizeDelta
ÀÀ (
=
ÀÀ) *
m_TextComponent
ÀÀ+ :
.
ÀÀ: ;
rectTransform
ÀÀ; H
.
ÀÀH I
	sizeDelta
ÀÀI R
;
ÀÀR S
caretRectTrans
ÃÃ 
.
ÃÃ 
pivot
ÃÃ $
=
ÃÃ% &
m_TextComponent
ÃÃ' 6
.
ÃÃ6 7
rectTransform
ÃÃ7 D
.
ÃÃD E
pivot
ÃÃE J
;
ÃÃJ K
}
ÕÕ 
}
ŒŒ 	
private
—— 
void
—— 
	OnFillVBO
—— 
(
—— 
Mesh
—— #
vbo
——$ '
)
——' (
{
““ 	
using
”” 
(
”” 
var
”” 
helper
”” 
=
”” 
new
””  #
VertexHelper
””$ 0
(
””0 1
)
””1 2
)
””2 3
{
‘‘ 
if
’’ 
(
’’ 
!
’’ 
	isFocused
’’ 
&&
’’ !
!
’’" #$
m_SelectionStillActive
’’# 9
)
’’9 :
{
÷÷ 
helper
◊◊ 
.
◊◊ 
FillMesh
◊◊ #
(
◊◊# $
vbo
◊◊$ '
)
◊◊' (
;
◊◊( )
return
ÿÿ 
;
ÿÿ 
}
ŸŸ 
if
€€ 
(
€€ %
m_IsStringPositionDirty
€€ +
)
€€+ ,
{
‹‹ $
stringPositionInternal
›› *
=
››+ ,-
GetStringIndexFromCaretPosition
››- L
(
››L M
m_CaretPosition
››M \
)
››\ ]
;
››] ^*
stringSelectPositionInternal
ﬁﬁ 0
=
ﬁﬁ1 2-
GetStringIndexFromCaretPosition
ﬁﬁ3 R
(
ﬁﬁR S#
m_CaretSelectPosition
ﬁﬁS h
)
ﬁﬁh i
;
ﬁﬁi j%
m_IsStringPositionDirty
ﬂﬂ +
=
ﬂﬂ, -
false
ﬂﬂ. 3
;
ﬂﬂ3 4
}
‡‡ 
if
‚‚ 
(
‚‚ $
m_IsCaretPositionDirty
‚‚ *
)
‚‚* +
{
„„ #
caretPositionInternal
‰‰ )
=
‰‰* +-
GetCaretPositionFromStringIndex
‰‰, K
(
‰‰K L$
stringPositionInternal
‰‰L b
)
‰‰b c
;
‰‰c d)
caretSelectPositionInternal
ÂÂ /
=
ÂÂ0 1-
GetCaretPositionFromStringIndex
ÂÂ2 Q
(
ÂÂQ R*
stringSelectPositionInternal
ÂÂR n
)
ÂÂn o
;
ÂÂo p$
m_IsCaretPositionDirty
ÊÊ *
=
ÊÊ+ ,
false
ÊÊ- 2
;
ÊÊ2 3
}
ÁÁ 
if
ÈÈ 
(
ÈÈ 
!
ÈÈ 
hasSelection
ÈÈ !
)
ÈÈ! "
{
ÍÍ 
GenerateCaret
ÎÎ !
(
ÎÎ! "
helper
ÎÎ" (
,
ÎÎ( )
Vector2
ÎÎ* 1
.
ÎÎ1 2
zero
ÎÎ2 6
)
ÎÎ6 7
;
ÎÎ7 8$
SendOnEndTextSelection
ÏÏ *
(
ÏÏ* +
)
ÏÏ+ ,
;
ÏÏ, -
}
ÌÌ 
else
ÓÓ 
{
ÔÔ  
GenerateHightlight
 &
(
& '
helper
' -
,
- .
Vector2
/ 6
.
6 7
zero
7 ;
)
; <
;
< =!
SendOnTextSelection
ÒÒ '
(
ÒÒ' (
)
ÒÒ( )
;
ÒÒ) *
}
ÚÚ 
helper
ÙÙ 
.
ÙÙ 
FillMesh
ÙÙ 
(
ÙÙ  
vbo
ÙÙ  #
)
ÙÙ# $
;
ÙÙ$ %
}
ıı 
}
ˆˆ 	
private
˘˘ 
void
˘˘ 
GenerateCaret
˘˘ "
(
˘˘" #
VertexHelper
˘˘# /
vbo
˘˘0 3
,
˘˘3 4
Vector2
˘˘5 <
roundingOffset
˘˘= K
)
˘˘K L
{
˙˙ 	
if
˚˚ 
(
˚˚ 
m_CaretVisible
˚˚ 
==
˚˚ !
false
˚˚" '
||
˚˚( *
m_TextComponent
˚˚+ :
.
˚˚: ;
canvas
˚˚; A
==
˚˚B D
null
˚˚E I
||
˚˚J L

m_ReadOnly
˚˚M W
)
˚˚W X
return
¸¸ 
;
¸¸ 
if
˛˛ 
(
˛˛ 
m_CursorVerts
˛˛ 
==
˛˛  
null
˛˛! %
)
˛˛% &
{
ˇˇ 
CreateCursorVerts
ÄÄ !
(
ÄÄ! "
)
ÄÄ" #
;
ÄÄ# $
}
ÅÅ 
float
ÉÉ 
width
ÉÉ 
=
ÉÉ 
m_CaretWidth
ÉÉ &
;
ÉÉ& '
Vector2
áá 
startPosition
áá !
=
áá" #
Vector2
áá$ +
.
áá+ ,
zero
áá, 0
;
áá0 1
float
àà 
height
àà 
=
àà 
$num
àà 
;
àà 
TMP_CharacterInfo
ââ 
currentCharacter
ââ .
;
ââ. /
if
åå 
(
åå #
caretPositionInternal
åå %
>=
åå& (
m_TextComponent
åå) 8
.
åå8 9
textInfo
åå9 A
.
ååA B
characterInfo
ååB O
.
ååO P
Length
ååP V
)
ååV W
return
çç 
;
çç 
int
èè 
currentLine
èè 
=
èè 
m_TextComponent
èè -
.
èè- .
textInfo
èè. 6
.
èè6 7
characterInfo
èè7 D
[
èèD E#
caretPositionInternal
èèE Z
]
èèZ [
.
èè[ \

lineNumber
èè\ f
;
èèf g
if
íí 
(
íí #
caretPositionInternal
íí %
==
íí& (
m_TextComponent
íí) 8
.
íí8 9
textInfo
íí9 A
.
ííA B
lineInfo
ííB J
[
ííJ K
currentLine
ííK V
]
ííV W
.
ííW X!
firstCharacterIndex
ííX k
)
íík l
{
ìì 
currentCharacter
îî  
=
îî! "
m_TextComponent
îî# 2
.
îî2 3
textInfo
îî3 ;
.
îî; <
characterInfo
îî< I
[
îîI J#
caretPositionInternal
îîJ _
]
îî_ `
;
îî` a
height
ïï 
=
ïï 
currentCharacter
ïï )
.
ïï) *
ascender
ïï* 2
-
ïï3 4
currentCharacter
ïï5 E
.
ïïE F
	descender
ïïF O
;
ïïO P
if
óó 
(
óó 
m_TextComponent
óó #
.
óó# $
verticalAlignment
óó$ 5
==
óó6 8&
VerticalAlignmentOptions
óó9 Q
.
óóQ R
Geometry
óóR Z
)
óóZ [
startPosition
òò !
=
òò" #
new
òò$ '
Vector2
òò( /
(
òò/ 0
currentCharacter
òò0 @
.
òò@ A
origin
òòA G
,
òòG H
$num
òòI J
-
òòK L
height
òòM S
/
òòT U
$num
òòV W
)
òòW X
;
òòX Y
else
ôô 
startPosition
öö !
=
öö" #
new
öö$ '
Vector2
öö( /
(
öö/ 0
currentCharacter
öö0 @
.
öö@ A
origin
ööA G
,
ööG H
currentCharacter
ööI Y
.
ööY Z
	descender
ööZ c
)
ööc d
;
ööd e
}
õõ 
else
úú 
{
ùù 
currentCharacter
ûû  
=
ûû! "
m_TextComponent
ûû# 2
.
ûû2 3
textInfo
ûû3 ;
.
ûû; <
characterInfo
ûû< I
[
ûûI J#
caretPositionInternal
ûûJ _
-
ûû` a
$num
ûûb c
]
ûûc d
;
ûûd e
height
üü 
=
üü 
currentCharacter
üü )
.
üü) *
ascender
üü* 2
-
üü3 4
currentCharacter
üü5 E
.
üüE F
	descender
üüF O
;
üüO P
if
°° 
(
°° 
m_TextComponent
°° #
.
°°# $
verticalAlignment
°°$ 5
==
°°6 8&
VerticalAlignmentOptions
°°9 Q
.
°°Q R
Geometry
°°R Z
)
°°Z [
startPosition
¢¢ !
=
¢¢" #
new
¢¢$ '
Vector2
¢¢( /
(
¢¢/ 0
currentCharacter
¢¢0 @
.
¢¢@ A
xAdvance
¢¢A I
,
¢¢I J
$num
¢¢K L
-
¢¢M N
height
¢¢O U
/
¢¢V W
$num
¢¢X Y
)
¢¢Y Z
;
¢¢Z [
else
££ 
startPosition
§§ !
=
§§" #
new
§§$ '
Vector2
§§( /
(
§§/ 0
currentCharacter
§§0 @
.
§§@ A
xAdvance
§§A I
,
§§I J
currentCharacter
§§K [
.
§§[ \
	descender
§§\ e
)
§§e f
;
§§f g
}
¶¶ 
if
®® 
(
®® 
m_SoftKeyboard
®® 
!=
®® !
null
®®" &
)
®®& '
{
©© 
int
™™ 
selectionStart
™™ "
=
™™# $
m_StringPosition
™™% 5
;
™™5 6
int
´´ &
softKeyboardStringLength
´´ ,
=
´´- .
m_SoftKeyboard
´´/ =
.
´´= >
text
´´> B
==
´´C E
null
´´F J
?
´´K L
$num
´´M N
:
´´O P
m_SoftKeyboard
´´Q _
.
´´_ `
text
´´` d
.
´´d e
Length
´´e k
;
´´k l
if
≠≠ 
(
≠≠ 
selectionStart
≠≠ "
<
≠≠# $
$num
≠≠% &
)
≠≠& '
selectionStart
ÆÆ "
=
ÆÆ# $
$num
ÆÆ% &
;
ÆÆ& '
if
∞∞ 
(
∞∞ 
selectionStart
∞∞ "
>
∞∞# $&
softKeyboardStringLength
∞∞% =
)
∞∞= >
selectionStart
±± "
=
±±# $&
softKeyboardStringLength
±±% =
;
±±= >
m_SoftKeyboard
≥≥ 
.
≥≥ 
	selection
≥≥ (
=
≥≥) *
new
≥≥+ .
RangeInt
≥≥/ 7
(
≥≥7 8
selectionStart
≥≥8 F
,
≥≥F G
$num
≥≥H I
)
≥≥I J
;
≥≥J K
}
¥¥ 
if
∑∑ 
(
∑∑ 
	isFocused
∑∑ 
&&
∑∑ 
startPosition
∑∑ *
!=
∑∑+ -
m_LastPosition
∑∑. <
||
∑∑= ?,
m_forceRectTransformAdjustment
∑∑@ ^
||
∑∑_ a"
m_isLastKeyBackspace
∑∑b v
)
∑∑v w3
%AdjustRectTransformRelativeToViewport
∏∏ 5
(
∏∏5 6
startPosition
∏∏6 C
,
∏∏C D
height
∏∏E K
,
∏∏K L
currentCharacter
∏∏M ]
.
∏∏] ^
	isVisible
∏∏^ g
)
∏∏g h
;
∏∏h i
m_LastPosition
∫∫ 
=
∫∫ 
startPosition
∫∫ *
;
∫∫* +
float
ΩΩ 
top
ΩΩ 
=
ΩΩ 
startPosition
ΩΩ %
.
ΩΩ% &
y
ΩΩ& '
+
ΩΩ( )
height
ΩΩ* 0
;
ΩΩ0 1
float
ææ 
bottom
ææ 
=
ææ 
top
ææ 
-
ææ  
height
ææ! '
;
ææ' (
float
¡¡ 
scale
¡¡ 
=
¡¡ 
m_TextComponent
¡¡ )
.
¡¡) *
canvas
¡¡* 0
.
¡¡0 1
scaleFactor
¡¡1 <
;
¡¡< =
m_CursorVerts
√√ 
[
√√ 
$num
√√ 
]
√√ 
.
√√ 
position
√√ %
=
√√& '
new
√√( +
Vector3
√√, 3
(
√√3 4
startPosition
√√4 A
.
√√A B
x
√√B C
,
√√C D
bottom
√√E K
,
√√K L
$num
√√M Q
)
√√Q R
;
√√R S
m_CursorVerts
ƒƒ 
[
ƒƒ 
$num
ƒƒ 
]
ƒƒ 
.
ƒƒ 
position
ƒƒ %
=
ƒƒ& '
new
ƒƒ( +
Vector3
ƒƒ, 3
(
ƒƒ3 4
startPosition
ƒƒ4 A
.
ƒƒA B
x
ƒƒB C
,
ƒƒC D
top
ƒƒE H
,
ƒƒH I
$num
ƒƒJ N
)
ƒƒN O
;
ƒƒO P
m_CursorVerts
≈≈ 
[
≈≈ 
$num
≈≈ 
]
≈≈ 
.
≈≈ 
position
≈≈ %
=
≈≈& '
new
≈≈( +
Vector3
≈≈, 3
(
≈≈3 4
startPosition
≈≈4 A
.
≈≈A B
x
≈≈B C
+
≈≈D E
width
≈≈F K
,
≈≈K L
top
≈≈M P
,
≈≈P Q
$num
≈≈R V
)
≈≈V W
;
≈≈W X
m_CursorVerts
∆∆ 
[
∆∆ 
$num
∆∆ 
]
∆∆ 
.
∆∆ 
position
∆∆ %
=
∆∆& '
new
∆∆( +
Vector3
∆∆, 3
(
∆∆3 4
startPosition
∆∆4 A
.
∆∆A B
x
∆∆B C
+
∆∆D E
width
∆∆F K
,
∆∆K L
bottom
∆∆M S
,
∆∆S T
$num
∆∆U Y
)
∆∆Y Z
;
∆∆Z [
m_CursorVerts
…… 
[
…… 
$num
…… 
]
…… 
.
…… 
color
…… "
=
……# $

caretColor
……% /
;
……/ 0
m_CursorVerts
   
[
   
$num
   
]
   
.
   
color
   "
=
  # $

caretColor
  % /
;
  / 0
m_CursorVerts
ÀÀ 
[
ÀÀ 
$num
ÀÀ 
]
ÀÀ 
.
ÀÀ 
color
ÀÀ "
=
ÀÀ# $

caretColor
ÀÀ% /
;
ÀÀ/ 0
m_CursorVerts
ÃÃ 
[
ÃÃ 
$num
ÃÃ 
]
ÃÃ 
.
ÃÃ 
color
ÃÃ "
=
ÃÃ# $

caretColor
ÃÃ% /
;
ÃÃ/ 0
vbo
ŒŒ 
.
ŒŒ 
AddUIVertexQuad
ŒŒ 
(
ŒŒ  
m_CursorVerts
ŒŒ  -
)
ŒŒ- .
;
ŒŒ. /
if
—— 
(
—— -
m_ShouldUpdateIMEWindowPosition
—— /
||
——0 2
currentLine
——3 >
!=
——? A(
m_PreviousIMEInsertionLine
——B \
)
——\ ]
{
““ -
m_ShouldUpdateIMEWindowPosition
”” /
=
””0 1
false
””2 7
;
””7 8(
m_PreviousIMEInsertionLine
‘‘ *
=
‘‘+ ,
currentLine
‘‘- 8
;
‘‘8 9
Camera
◊◊ 
	cameraRef
◊◊  
;
◊◊  !
if
ÿÿ 
(
ÿÿ 
m_TextComponent
ÿÿ #
.
ÿÿ# $
canvas
ÿÿ$ *
.
ÿÿ* +

renderMode
ÿÿ+ 5
==
ÿÿ6 8

RenderMode
ÿÿ9 C
.
ÿÿC D 
ScreenSpaceOverlay
ÿÿD V
)
ÿÿV W
	cameraRef
ŸŸ 
=
ŸŸ 
null
ŸŸ  $
;
ŸŸ$ %
else
⁄⁄ 
{
€€ 
	cameraRef
‹‹ 
=
‹‹ 
m_TextComponent
‹‹  /
.
‹‹/ 0
canvas
‹‹0 6
.
‹‹6 7
worldCamera
‹‹7 B
;
‹‹B C
if
ﬁﬁ 
(
ﬁﬁ 
	cameraRef
ﬁﬁ !
==
ﬁﬁ" $
null
ﬁﬁ% )
)
ﬁﬁ) *
	cameraRef
ﬂﬂ !
=
ﬂﬂ" #
Camera
ﬂﬂ$ *
.
ﬂﬂ* +
current
ﬂﬂ+ 2
;
ﬂﬂ2 3
}
‡‡ 
Vector3
‚‚ 
cursorPosition
‚‚ &
=
‚‚' (#
m_CachedInputRenderer
‚‚) >
.
‚‚> ?

gameObject
‚‚? I
.
‚‚I J
	transform
‚‚J S
.
‚‚S T
TransformPoint
‚‚T b
(
‚‚b c
m_CursorVerts
‚‚c p
[
‚‚p q
$num
‚‚q r
]
‚‚r s
.
‚‚s t
position
‚‚t |
)
‚‚| }
;
‚‚} ~
Vector2
„„ 
screenPosition
„„ &
=
„„' ("
RectTransformUtility
„„) =
.
„„= > 
WorldToScreenPoint
„„> P
(
„„P Q
	cameraRef
„„Q Z
,
„„Z [
cursorPosition
„„\ j
)
„„j k
;
„„k l
screenPosition
‰‰ 
.
‰‰ 
y
‰‰  
=
‰‰! "
Screen
‰‰# )
.
‰‰) *
height
‰‰* 0
-
‰‰1 2
screenPosition
‰‰3 A
.
‰‰A B
y
‰‰B C
;
‰‰C D
if
ÊÊ 
(
ÊÊ 
inputSystem
ÊÊ 
!=
ÊÊ  "
null
ÊÊ# '
)
ÊÊ' (
inputSystem
ÁÁ 
.
ÁÁ  "
compositionCursorPos
ÁÁ  4
=
ÁÁ5 6
screenPosition
ÁÁ7 E
;
ÁÁE F
}
ÍÍ 
}
ÔÔ 	
private
ÚÚ 
void
ÚÚ 
CreateCursorVerts
ÚÚ &
(
ÚÚ& '
)
ÚÚ' (
{
ÛÛ 	
m_CursorVerts
ÙÙ 
=
ÙÙ 
new
ÙÙ 
UIVertex
ÙÙ  (
[
ÙÙ( )
$num
ÙÙ) *
]
ÙÙ* +
;
ÙÙ+ ,
for
ˆˆ 
(
ˆˆ 
int
ˆˆ 
i
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ 
i
ˆˆ 
<
ˆˆ 
m_CursorVerts
ˆˆ  -
.
ˆˆ- .
Length
ˆˆ. 4
;
ˆˆ4 5
i
ˆˆ6 7
++
ˆˆ7 9
)
ˆˆ9 :
{
˜˜ 
m_CursorVerts
¯¯ 
[
¯¯ 
i
¯¯ 
]
¯¯  
=
¯¯! "
UIVertex
¯¯# +
.
¯¯+ ,

simpleVert
¯¯, 6
;
¯¯6 7
m_CursorVerts
˘˘ 
[
˘˘ 
i
˘˘ 
]
˘˘  
.
˘˘  !
uv0
˘˘! $
=
˘˘% &
Vector2
˘˘' .
.
˘˘. /
zero
˘˘/ 3
;
˘˘3 4
}
˙˙ 
}
˚˚ 	
private
˛˛ 
void
˛˛  
GenerateHightlight
˛˛ '
(
˛˛' (
VertexHelper
˛˛( 4
vbo
˛˛5 8
,
˛˛8 9
Vector2
˛˛: A
roundingOffset
˛˛B P
)
˛˛P Q
{
ˇˇ 	
UpdateMaskRegions
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ  
TMP_TextInfo
áá 
textInfo
áá !
=
áá" #
m_TextComponent
áá$ 3
.
áá3 4
textInfo
áá4 <
;
áá< =
m_CaretPosition
ââ 
=
ââ -
GetCaretPositionFromStringIndex
ââ =
(
ââ= >$
stringPositionInternal
ââ> T
)
ââT U
;
ââU V#
m_CaretSelectPosition
ää !
=
ää" #-
GetCaretPositionFromStringIndex
ää$ C
(
ääC D*
stringSelectPositionInternal
ääD `
)
ää` a
;
ääa b
if
åå 
(
åå 
m_SoftKeyboard
åå 
!=
åå !
null
åå" &
)
åå& '
{
çç 
int
éé 
stringPosition
éé "
=
éé# $
m_CaretPosition
éé% 4
<
éé5 6#
m_CaretSelectPosition
éé7 L
?
ééM N
textInfo
ééO W
.
ééW X
characterInfo
ééX e
[
éée f
m_CaretPosition
ééf u
]
ééu v
.
éév w
index
ééw |
:
éé} ~
textInfoéé á
.ééá à
characterInfoééà ï
[ééï ñ%
m_CaretSelectPositionééñ ´
]éé´ ¨
.éé¨ ≠
indexéé≠ ≤
;éé≤ ≥
int
èè 
length
èè 
=
èè 
m_CaretPosition
èè ,
<
èè- .#
m_CaretSelectPosition
èè/ D
?
èèE F*
stringSelectPositionInternal
èèG c
-
èèd e
stringPosition
èèf t
:
èèu v%
stringPositionInternalèèw ç
-èèé è
stringPositionèèê û
;èèû ü
m_SoftKeyboard
êê 
.
êê 
	selection
êê (
=
êê) *
new
êê+ .
RangeInt
êê/ 7
(
êê7 8
stringPosition
êê8 F
,
êêF G
length
êêH N
)
êêN O
;
êêO P
}
ëë 
Vector2
îî 
caretPosition
îî !
;
îî! "
float
ïï 
height
ïï 
=
ïï 
$num
ïï 
;
ïï 
if
ññ 
(
ññ #
m_CaretSelectPosition
ññ %
<
ññ& '
textInfo
ññ( 0
.
ññ0 1
characterCount
ññ1 ?
)
ññ? @
{
óó 
caretPosition
òò 
=
òò 
new
òò  #
Vector2
òò$ +
(
òò+ ,
textInfo
òò, 4
.
òò4 5
characterInfo
òò5 B
[
òòB C#
m_CaretSelectPosition
òòC X
]
òòX Y
.
òòY Z
origin
òòZ `
,
òò` a
textInfo
òòb j
.
òòj k
characterInfo
òòk x
[
òòx y$
m_CaretSelectPositionòòy é
]òòé è
.òòè ê
	descenderòòê ô
)òòô ö
;òòö õ
height
ôô 
=
ôô 
textInfo
ôô !
.
ôô! "
characterInfo
ôô" /
[
ôô/ 0#
m_CaretSelectPosition
ôô0 E
]
ôôE F
.
ôôF G
ascender
ôôG O
-
ôôP Q
textInfo
ôôR Z
.
ôôZ [
characterInfo
ôô[ h
[
ôôh i#
m_CaretSelectPosition
ôôi ~
]
ôô~ 
.ôô Ä
	descenderôôÄ â
;ôôâ ä
}
öö 
else
õõ 
{
úú 
caretPosition
ùù 
=
ùù 
new
ùù  #
Vector2
ùù$ +
(
ùù+ ,
textInfo
ùù, 4
.
ùù4 5
characterInfo
ùù5 B
[
ùùB C#
m_CaretSelectPosition
ùùC X
-
ùùY Z
$num
ùù[ \
]
ùù\ ]
.
ùù] ^
xAdvance
ùù^ f
,
ùùf g
textInfo
ùùh p
.
ùùp q
characterInfo
ùùq ~
[
ùù~ $
m_CaretSelectPositionùù î
-ùùï ñ
$numùùó ò
]ùùò ô
.ùùô ö
	descenderùùö £
)ùù£ §
;ùù§ •
height
ûû 
=
ûû 
textInfo
ûû !
.
ûû! "
characterInfo
ûû" /
[
ûû/ 0#
m_CaretSelectPosition
ûû0 E
-
ûûF G
$num
ûûH I
]
ûûI J
.
ûûJ K
ascender
ûûK S
-
ûûT U
textInfo
ûûV ^
.
ûû^ _
characterInfo
ûû_ l
[
ûûl m$
m_CaretSelectPositionûûm Ç
-ûûÉ Ñ
$numûûÖ Ü
]ûûÜ á
.ûûá à
	descenderûûà ë
;ûûë í
}
üü 3
%AdjustRectTransformRelativeToViewport
££ 1
(
££1 2
caretPosition
££2 ?
,
££? @
height
££A G
,
££G H
true
££I M
)
££M N
;
££N O
int
•• 
	startChar
•• 
=
•• 
Mathf
•• !
.
••! "
Max
••" %
(
••% &
$num
••& '
,
••' (
m_CaretPosition
••) 8
)
••8 9
;
••9 :
int
¶¶ 
endChar
¶¶ 
=
¶¶ 
Mathf
¶¶ 
.
¶¶  
Max
¶¶  #
(
¶¶# $
$num
¶¶$ %
,
¶¶% &#
m_CaretSelectPosition
¶¶' <
)
¶¶< =
;
¶¶= >
if
©© 
(
©© 
	startChar
©© 
>
©© 
endChar
©© #
)
©©# $
{
™™ 
int
´´ 
temp
´´ 
=
´´ 
	startChar
´´ $
;
´´$ %
	startChar
¨¨ 
=
¨¨ 
endChar
¨¨ #
;
¨¨# $
endChar
≠≠ 
=
≠≠ 
temp
≠≠ 
;
≠≠ 
}
ÆÆ 
endChar
∞∞ 
-=
∞∞ 
$num
∞∞ 
;
∞∞ 
int
µµ 
currentLineIndex
µµ  
=
µµ! "
textInfo
µµ# +
.
µµ+ ,
characterInfo
µµ, 9
[
µµ9 :
	startChar
µµ: C
]
µµC D
.
µµD E

lineNumber
µµE O
;
µµO P
int
∂∂ 
nextLineStartIdx
∂∂  
=
∂∂! "
textInfo
∂∂# +
.
∂∂+ ,
lineInfo
∂∂, 4
[
∂∂4 5
currentLineIndex
∂∂5 E
]
∂∂E F
.
∂∂F G 
lastCharacterIndex
∂∂G Y
;
∂∂Y Z
UIVertex
∏∏ 
vert
∏∏ 
=
∏∏ 
UIVertex
∏∏ $
.
∏∏$ %

simpleVert
∏∏% /
;
∏∏/ 0
vert
ππ 
.
ππ 
uv0
ππ 
=
ππ 
Vector2
ππ 
.
ππ 
zero
ππ #
;
ππ# $
vert
∫∫ 
.
∫∫ 
color
∫∫ 
=
∫∫ 
selectionColor
∫∫ '
;
∫∫' (
int
ºº 
currentChar
ºº 
=
ºº 
	startChar
ºº '
;
ºº' (
while
ΩΩ 
(
ΩΩ 
currentChar
ΩΩ 
<=
ΩΩ !
endChar
ΩΩ" )
&&
ΩΩ* ,
currentChar
ΩΩ- 8
<
ΩΩ9 :
textInfo
ΩΩ; C
.
ΩΩC D
characterCount
ΩΩD R
)
ΩΩR S
{
ææ 
if
øø 
(
øø 
currentChar
øø 
==
øø  "
nextLineStartIdx
øø# 3
||
øø4 6
currentChar
øø7 B
==
øøC E
endChar
øøF M
)
øøM N
{
¿¿ 
TMP_CharacterInfo
¡¡ %
startCharInfo
¡¡& 3
=
¡¡4 5
textInfo
¡¡6 >
.
¡¡> ?
characterInfo
¡¡? L
[
¡¡L M
	startChar
¡¡M V
]
¡¡V W
;
¡¡W X
TMP_CharacterInfo
¬¬ %
endCharInfo
¬¬& 1
=
¬¬2 3
textInfo
¬¬4 <
.
¬¬< =
characterInfo
¬¬= J
[
¬¬J K
currentChar
¬¬K V
]
¬¬V W
;
¬¬W X
if
≈≈ 
(
≈≈ 
currentChar
≈≈ #
>
≈≈$ %
$num
≈≈& '
&&
≈≈( *
endCharInfo
≈≈+ 6
.
≈≈6 7
	character
≈≈7 @
==
≈≈A C
$num
≈≈D F
&&
≈≈G I
textInfo
≈≈J R
.
≈≈R S
characterInfo
≈≈S `
[
≈≈` a
currentChar
≈≈a l
-
≈≈m n
$num
≈≈o p
]
≈≈p q
.
≈≈q r
	character
≈≈r {
==
≈≈| ~
$num≈≈ Å
)≈≈Å Ç
endCharInfo
∆∆ #
=
∆∆$ %
textInfo
∆∆& .
.
∆∆. /
characterInfo
∆∆/ <
[
∆∆< =
currentChar
∆∆= H
-
∆∆I J
$num
∆∆K L
]
∆∆L M
;
∆∆M N
Vector2
»» 
startPosition
»» )
=
»»* +
new
»», /
Vector2
»»0 7
(
»»7 8
startCharInfo
»»8 E
.
»»E F
origin
»»F L
,
»»L M
textInfo
»»N V
.
»»V W
lineInfo
»»W _
[
»»_ `
currentLineIndex
»»` p
]
»»p q
.
»»q r
ascender
»»r z
)
»»z {
;
»»{ |
Vector2
…… 
endPosition
…… '
=
……( )
new
……* -
Vector2
……. 5
(
……5 6
endCharInfo
……6 A
.
……A B
xAdvance
……B J
,
……J K
textInfo
……L T
.
……T U
lineInfo
……U ]
[
……] ^
currentLineIndex
……^ n
]
……n o
.
……o p
	descender
……p y
)
……y z
;
……z {
var
ÀÀ 

startIndex
ÀÀ "
=
ÀÀ# $
vbo
ÀÀ% (
.
ÀÀ( )
currentVertCount
ÀÀ) 9
;
ÀÀ9 :
vert
ÃÃ 
.
ÃÃ 
position
ÃÃ !
=
ÃÃ" #
new
ÃÃ$ '
Vector3
ÃÃ( /
(
ÃÃ/ 0
startPosition
ÃÃ0 =
.
ÃÃ= >
x
ÃÃ> ?
,
ÃÃ? @
endPosition
ÃÃA L
.
ÃÃL M
y
ÃÃM N
,
ÃÃN O
$num
ÃÃP T
)
ÃÃT U
;
ÃÃU V
vbo
ÕÕ 
.
ÕÕ 
AddVert
ÕÕ 
(
ÕÕ  
vert
ÕÕ  $
)
ÕÕ$ %
;
ÕÕ% &
vert
œœ 
.
œœ 
position
œœ !
=
œœ" #
new
œœ$ '
Vector3
œœ( /
(
œœ/ 0
endPosition
œœ0 ;
.
œœ; <
x
œœ< =
,
œœ= >
endPosition
œœ? J
.
œœJ K
y
œœK L
,
œœL M
$num
œœN R
)
œœR S
;
œœS T
vbo
–– 
.
–– 
AddVert
–– 
(
––  
vert
––  $
)
––$ %
;
––% &
vert
““ 
.
““ 
position
““ !
=
““" #
new
““$ '
Vector3
““( /
(
““/ 0
endPosition
““0 ;
.
““; <
x
““< =
,
““= >
startPosition
““? L
.
““L M
y
““M N
,
““N O
$num
““P T
)
““T U
;
““U V
vbo
”” 
.
”” 
AddVert
”” 
(
””  
vert
””  $
)
””$ %
;
””% &
vert
’’ 
.
’’ 
position
’’ !
=
’’" #
new
’’$ '
Vector3
’’( /
(
’’/ 0
startPosition
’’0 =
.
’’= >
x
’’> ?
,
’’? @
startPosition
’’A N
.
’’N O
y
’’O P
,
’’P Q
$num
’’R V
)
’’V W
;
’’W X
vbo
÷÷ 
.
÷÷ 
AddVert
÷÷ 
(
÷÷  
vert
÷÷  $
)
÷÷$ %
;
÷÷% &
vbo
ÿÿ 
.
ÿÿ 
AddTriangle
ÿÿ #
(
ÿÿ# $

startIndex
ÿÿ$ .
,
ÿÿ. /

startIndex
ÿÿ0 :
+
ÿÿ; <
$num
ÿÿ= >
,
ÿÿ> ?

startIndex
ÿÿ@ J
+
ÿÿK L
$num
ÿÿM N
)
ÿÿN O
;
ÿÿO P
vbo
ŸŸ 
.
ŸŸ 
AddTriangle
ŸŸ #
(
ŸŸ# $

startIndex
ŸŸ$ .
+
ŸŸ/ 0
$num
ŸŸ1 2
,
ŸŸ2 3

startIndex
ŸŸ4 >
+
ŸŸ? @
$num
ŸŸA B
,
ŸŸB C

startIndex
ŸŸD N
+
ŸŸO P
$num
ŸŸQ R
)
ŸŸR S
;
ŸŸS T
	startChar
€€ 
=
€€ 
currentChar
€€  +
+
€€, -
$num
€€. /
;
€€/ 0
currentLineIndex
‹‹ $
++
‹‹$ &
;
‹‹& '
if
ﬁﬁ 
(
ﬁﬁ 
currentLineIndex
ﬁﬁ (
<
ﬁﬁ) *
textInfo
ﬁﬁ+ 3
.
ﬁﬁ3 4
	lineCount
ﬁﬁ4 =
)
ﬁﬁ= >
nextLineStartIdx
ﬂﬂ (
=
ﬂﬂ) *
textInfo
ﬂﬂ+ 3
.
ﬂﬂ3 4
lineInfo
ﬂﬂ4 <
[
ﬂﬂ< =
currentLineIndex
ﬂﬂ= M
]
ﬂﬂM N
.
ﬂﬂN O 
lastCharacterIndex
ﬂﬂO a
;
ﬂﬂa b
}
‡‡ 
currentChar
·· 
++
·· 
;
·· 
}
‚‚ 
}
ÁÁ 	
private
 
void
 3
%AdjustRectTransformRelativeToViewport
 :
(
: ;
Vector2
; B
startPosition
C P
,
P Q
float
R W
height
X ^
,
^ _
bool
` d
isCharVisible
e r
)
r s
{
ÒÒ 	
if
ÙÙ 
(
ÙÙ 
m_TextViewport
ÙÙ 
==
ÙÙ !
null
ÙÙ" &
)
ÙÙ& '
return
ıı 
;
ıı 
Vector3
˜˜ 
localPosition
˜˜ !
=
˜˜" #
	transform
˜˜$ -
.
˜˜- .
localPosition
˜˜. ;
;
˜˜; <
Vector3
¯¯ (
textComponentLocalPosition
¯¯ .
=
¯¯/ 0
m_TextComponent
¯¯1 @
.
¯¯@ A
rectTransform
¯¯A N
.
¯¯N O
localPosition
¯¯O \
;
¯¯\ ]
Vector3
˘˘ '
textViewportLocalPosition
˘˘ -
=
˘˘. /
m_TextViewport
˘˘0 >
.
˘˘> ?
localPosition
˘˘? L
;
˘˘L M
Rect
˙˙ 
textViewportRect
˙˙ !
=
˙˙" #
m_TextViewport
˙˙$ 2
.
˙˙2 3
rect
˙˙3 7
;
˙˙7 8
Vector2
¸¸ 
caretPosition
¸¸ !
=
¸¸" #
new
¸¸$ '
Vector2
¸¸( /
(
¸¸/ 0
startPosition
¸¸0 =
.
¸¸= >
x
¸¸> ?
+
¸¸@ A(
textComponentLocalPosition
¸¸B \
.
¸¸\ ]
x
¸¸] ^
+
¸¸_ `'
textViewportLocalPosition
¸¸a z
.
¸¸z {
x
¸¸{ |
+
¸¸} ~
localPosition¸¸ å
.¸¸å ç
x¸¸ç é
,¸¸é è
startPosition¸¸ê ù
.¸¸ù û
y¸¸û ü
+¸¸† °*
textComponentLocalPosition¸¸¢ º
.¸¸º Ω
y¸¸Ω æ
+¸¸ø ¿)
textViewportLocalPosition¸¸¡ ⁄
.¸¸⁄ €
y¸¸€ ‹
+¸¸› ﬁ
localPosition¸¸ﬂ Ï
.¸¸Ï Ì
y¸¸Ì Ó
)¸¸Ó Ô
;¸¸Ô 
Rect
˝˝ 
viewportWSRect
˝˝ 
=
˝˝  !
new
˝˝" %
Rect
˝˝& *
(
˝˝* +
localPosition
˝˝+ 8
.
˝˝8 9
x
˝˝9 :
+
˝˝; <'
textViewportLocalPosition
˝˝= V
.
˝˝V W
x
˝˝W X
+
˝˝Y Z
textViewportRect
˝˝[ k
.
˝˝k l
x
˝˝l m
,
˝˝m n
localPosition
˝˝o |
.
˝˝| }
y
˝˝} ~
+˝˝ Ä)
textViewportLocalPosition˝˝Å ö
.˝˝ö õ
y˝˝õ ú
+˝˝ù û 
textViewportRect˝˝ü Ø
.˝˝Ø ∞
y˝˝∞ ±
,˝˝± ≤ 
textViewportRect˝˝≥ √
.˝˝√ ƒ
width˝˝ƒ …
,˝˝…   
textViewportRect˝˝À €
.˝˝€ ‹
height˝˝‹ ‚
)˝˝‚ „
;˝˝„ ‰
float
ÄÄ 
rightOffset
ÄÄ 
=
ÄÄ 
viewportWSRect
ÄÄ  .
.
ÄÄ. /
xMax
ÄÄ/ 3
-
ÄÄ4 5
(
ÄÄ6 7
caretPosition
ÄÄ7 D
.
ÄÄD E
x
ÄÄE F
+
ÄÄG H
m_TextComponent
ÄÄI X
.
ÄÄX Y
margin
ÄÄY _
.
ÄÄ_ `
z
ÄÄ` a
+
ÄÄb c
m_CaretWidth
ÄÄd p
)
ÄÄp q
;
ÄÄq r
if
ÅÅ 
(
ÅÅ 
rightOffset
ÅÅ 
<
ÅÅ 
$num
ÅÅ  
)
ÅÅ  !
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
!
ÉÉ 
	multiLine
ÉÉ 
||
ÉÉ !
(
ÉÉ" #
	multiLine
ÉÉ# ,
&&
ÉÉ- /
isCharVisible
ÉÉ0 =
)
ÉÉ= >
)
ÉÉ> ?
{
ÑÑ 
m_TextComponent
ÜÜ #
.
ÜÜ# $
rectTransform
ÜÜ$ 1
.
ÜÜ1 2
anchoredPosition
ÜÜ2 B
+=
ÜÜC E
new
ÜÜF I
Vector2
ÜÜJ Q
(
ÜÜQ R
rightOffset
ÜÜR ]
,
ÜÜ] ^
$num
ÜÜ_ `
)
ÜÜ` a
;
ÜÜa b'
AssignPositioningIfNeeded
àà -
(
àà- .
)
àà. /
;
àà/ 0
}
ââ 
}
ää 
float
åå 

leftOffset
åå 
=
åå 
(
åå  
caretPosition
åå  -
.
åå- .
x
åå. /
-
åå0 1
m_TextComponent
åå2 A
.
ååA B
margin
ååB H
.
ååH I
x
ååI J
)
ååJ K
-
ååL M
viewportWSRect
ååN \
.
åå\ ]
xMin
åå] a
;
ååa b
if
çç 
(
çç 

leftOffset
çç 
<
çç 
$num
çç 
)
çç  
{
éé 
m_TextComponent
êê 
.
êê  
rectTransform
êê  -
.
êê- .
anchoredPosition
êê. >
+=
êê? A
new
êêB E
Vector2
êêF M
(
êêM N
-
êêN O

leftOffset
êêO Y
,
êêY Z
$num
êê[ \
)
êê\ ]
;
êê] ^'
AssignPositioningIfNeeded
ëë )
(
ëë) *
)
ëë* +
;
ëë+ ,
}
íí 
if
ïï 
(
ïï 

m_LineType
ïï 
!=
ïï 
LineType
ïï &
.
ïï& '

SingleLine
ïï' 1
)
ïï1 2
{
ññ 
float
óó 
	topOffset
óó 
=
óó  !
viewportWSRect
óó" 0
.
óó0 1
yMax
óó1 5
-
óó6 7
(
óó8 9
caretPosition
óó9 F
.
óóF G
y
óóG H
+
óóI J
height
óóK Q
)
óóQ R
;
óóR S
if
òò 
(
òò 
	topOffset
òò 
<
òò 
-
òò  !
$num
òò! (
)
òò( )
{
ôô 
m_TextComponent
õõ #
.
õõ# $
rectTransform
õõ$ 1
.
õõ1 2
anchoredPosition
õõ2 B
+=
õõC E
new
õõF I
Vector2
õõJ Q
(
õõQ R
$num
õõR S
,
õõS T
	topOffset
õõU ^
)
õõ^ _
;
õõ_ `'
AssignPositioningIfNeeded
úú -
(
úú- .
)
úú. /
;
úú/ 0
}
ùù 
float
üü 
bottomOffset
üü "
=
üü# $
caretPosition
üü% 2
.
üü2 3
y
üü3 4
-
üü5 6
viewportWSRect
üü7 E
.
üüE F
yMin
üüF J
;
üüJ K
if
†† 
(
†† 
bottomOffset
††  
<
††! "
$num
††# %
)
††% &
{
°° 
m_TextComponent
££ #
.
££# $
rectTransform
££$ 1
.
££1 2
anchoredPosition
££2 B
-=
££C E
new
££F I
Vector2
££J Q
(
££Q R
$num
££R S
,
££S T
bottomOffset
££U a
)
££a b
;
££b c'
AssignPositioningIfNeeded
§§ -
(
§§- .
)
§§. /
;
§§/ 0
}
•• 
}
¶¶ 
if
©© 
(
©© "
m_isLastKeyBackspace
©© $
)
©©$ %
{
™™ 
float
´´ 
anchoredPositionX
´´ '
=
´´( )
m_TextComponent
´´* 9
.
´´9 :
rectTransform
´´: G
.
´´G H
anchoredPosition
´´H X
.
´´X Y
x
´´Y Z
;
´´Z [
float
≠≠ 
firstCharPosition
≠≠ '
=
≠≠( )
localPosition
≠≠* 7
.
≠≠7 8
x
≠≠8 9
+
≠≠: ;'
textViewportLocalPosition
≠≠< U
.
≠≠U V
x
≠≠V W
+
≠≠X Y(
textComponentLocalPosition
≠≠Z t
.
≠≠t u
x
≠≠u v
+
≠≠w x
m_TextComponent≠≠y à
.≠≠à â
textInfo≠≠â ë
.≠≠ë í
characterInfo≠≠í ü
[≠≠ü †
$num≠≠† °
]≠≠° ¢
.≠≠¢ £
origin≠≠£ ©
-≠≠™ ´
m_TextComponent≠≠¨ ª
.≠≠ª º
margin≠≠º ¬
.≠≠¬ √
x≠≠√ ƒ
;≠≠ƒ ≈
float
ÆÆ 
lastCharPosition
ÆÆ &
=
ÆÆ' (
localPosition
ÆÆ) 6
.
ÆÆ6 7
x
ÆÆ7 8
+
ÆÆ9 :'
textViewportLocalPosition
ÆÆ; T
.
ÆÆT U
x
ÆÆU V
+
ÆÆW X(
textComponentLocalPosition
ÆÆY s
.
ÆÆs t
x
ÆÆt u
+
ÆÆv w
m_TextComponentÆÆx á
.ÆÆá à
textInfoÆÆà ê
.ÆÆê ë
characterInfoÆÆë û
[ÆÆû ü
m_TextComponentÆÆü Æ
.ÆÆÆ Ø
textInfoÆÆØ ∑
.ÆÆ∑ ∏
characterCountÆÆ∏ ∆
-ÆÆ« »
$numÆÆ…  
]ÆÆ  À
.ÆÆÀ Ã
originÆÆÃ “
+ÆÆ” ‘
m_TextComponentÆÆ’ ‰
.ÆÆ‰ Â
marginÆÆÂ Î
.ÆÆÎ Ï
zÆÆÏ Ì
+ÆÆÓ Ô
m_CaretWidthÆÆ ¸
;ÆÆ¸ ˝
if
∞∞ 
(
∞∞ 
anchoredPositionX
∞∞ %
>
∞∞& '
$num
∞∞( /
&&
∞∞0 2
firstCharPosition
∞∞3 D
>
∞∞E F
viewportWSRect
∞∞G U
.
∞∞U V
xMin
∞∞V Z
)
∞∞Z [
{
±± 
float
≤≤ 
offset
≤≤  
=
≤≤! "
viewportWSRect
≤≤# 1
.
≤≤1 2
xMin
≤≤2 6
-
≤≤7 8
firstCharPosition
≤≤9 J
;
≤≤J K
if
¥¥ 
(
¥¥ 
anchoredPositionX
¥¥ )
<
¥¥* +
-
¥¥, -
offset
¥¥- 3
)
¥¥3 4
offset
µµ 
=
µµ  
-
µµ! "
anchoredPositionX
µµ" 3
;
µµ3 4
m_TextComponent
∑∑ #
.
∑∑# $
rectTransform
∑∑$ 1
.
∑∑1 2
anchoredPosition
∑∑2 B
+=
∑∑C E
new
∑∑F I
Vector2
∑∑J Q
(
∑∑Q R
offset
∑∑R X
,
∑∑X Y
$num
∑∑Z [
)
∑∑[ \
;
∑∑\ ]'
AssignPositioningIfNeeded
∏∏ -
(
∏∏- .
)
∏∏. /
;
∏∏/ 0
}
ππ 
else
∫∫ 
if
∫∫ 
(
∫∫ 
anchoredPositionX
∫∫ *
<
∫∫+ ,
-
∫∫- .
$num
∫∫. 5
&&
∫∫6 8
lastCharPosition
∫∫9 I
<
∫∫J K
viewportWSRect
∫∫L Z
.
∫∫Z [
xMax
∫∫[ _
)
∫∫_ `
{
ªª 
float
ºº 
offset
ºº  
=
ºº! "
viewportWSRect
ºº# 1
.
ºº1 2
xMax
ºº2 6
-
ºº7 8
lastCharPosition
ºº9 I
;
ººI J
if
ææ 
(
ææ 
-
ææ 
anchoredPositionX
ææ *
<
ææ+ ,
offset
ææ- 3
)
ææ3 4
offset
øø 
=
øø  
-
øø! "
anchoredPositionX
øø" 3
;
øø3 4
m_TextComponent
¡¡ #
.
¡¡# $
rectTransform
¡¡$ 1
.
¡¡1 2
anchoredPosition
¡¡2 B
+=
¡¡C E
new
¡¡F I
Vector2
¡¡J Q
(
¡¡Q R
offset
¡¡R X
,
¡¡X Y
$num
¡¡Z [
)
¡¡[ \
;
¡¡\ ]'
AssignPositioningIfNeeded
¬¬ -
(
¬¬- .
)
¬¬. /
;
¬¬/ 0
}
√√ "
m_isLastKeyBackspace
≈≈ $
=
≈≈% &
false
≈≈' ,
;
≈≈, -
}
∆∆ ,
m_forceRectTransformAdjustment
»» *
=
»»+ ,
false
»»- 2
;
»»2 3
}
…… 	
	protected
ŒŒ 
char
ŒŒ 
Validate
ŒŒ 
(
ŒŒ  
string
ŒŒ  &
text
ŒŒ' +
,
ŒŒ+ ,
int
ŒŒ- 0
pos
ŒŒ1 4
,
ŒŒ4 5
char
ŒŒ6 :
ch
ŒŒ; =
)
ŒŒ= >
{
œœ 	
if
—— 
(
—— !
characterValidation
—— #
==
——$ &!
CharacterValidation
——' :
.
——: ;
None
——; ?
||
——@ B
!
——C D
enabled
——D K
)
——K L
return
““ 
ch
““ 
;
““ 
if
‘‘ 
(
‘‘ !
characterValidation
‘‘ #
==
‘‘$ &!
CharacterValidation
‘‘' :
.
‘‘: ;
Integer
‘‘; B
||
‘‘C E!
characterValidation
‘‘F Y
==
‘‘Z \!
CharacterValidation
‘‘] p
.
‘‘p q
Decimal
‘‘q x
)
‘‘x y
{
’’ 
bool
◊◊ 
cursorBeforeDash
◊◊ %
=
◊◊& '
(
◊◊( )
pos
◊◊) ,
==
◊◊- /
$num
◊◊0 1
&&
◊◊2 4
text
◊◊5 9
.
◊◊9 :
Length
◊◊: @
>
◊◊A B
$num
◊◊C D
&&
◊◊E G
text
◊◊H L
[
◊◊L M
$num
◊◊M N
]
◊◊N O
==
◊◊P R
$char
◊◊S V
)
◊◊V W
;
◊◊W X
bool
ÿÿ 
selectionAtStart
ÿÿ %
=
ÿÿ& '$
stringPositionInternal
ÿÿ( >
==
ÿÿ? A
$num
ÿÿB C
||
ÿÿD F*
stringSelectPositionInternal
ÿÿG c
==
ÿÿd f
$num
ÿÿg h
;
ÿÿh i
if
ŸŸ 
(
ŸŸ 
!
ŸŸ 
cursorBeforeDash
ŸŸ %
)
ŸŸ% &
{
⁄⁄ 
if
€€ 
(
€€ 
ch
€€ 
>=
€€ 
$char
€€ !
&&
€€" $
ch
€€% '
<=
€€( *
$char
€€+ .
)
€€. /
return
€€0 6
ch
€€7 9
;
€€9 :
if
‹‹ 
(
‹‹ 
ch
‹‹ 
==
‹‹ 
$char
‹‹ !
&&
‹‹" $
(
‹‹% &
pos
‹‹& )
==
‹‹* ,
$num
‹‹- .
||
‹‹/ 1
selectionAtStart
‹‹2 B
)
‹‹B C
)
‹‹C D
return
‹‹E K
ch
‹‹L N
;
‹‹N O
var
ﬁﬁ 
	separator
ﬁﬁ !
=
ﬁﬁ" #
Thread
ﬁﬁ$ *
.
ﬁﬁ* +
CurrentThread
ﬁﬁ+ 8
.
ﬁﬁ8 9
CurrentCulture
ﬁﬁ9 G
.
ﬁﬁG H
NumberFormat
ﬁﬁH T
.
ﬁﬁT U$
NumberDecimalSeparator
ﬁﬁU k
;
ﬁﬁk l
if
ﬂﬂ 
(
ﬂﬂ 
ch
ﬂﬂ 
==
ﬂﬂ 
Convert
ﬂﬂ %
.
ﬂﬂ% &
ToChar
ﬂﬂ& ,
(
ﬂﬂ, -
	separator
ﬂﬂ- 6
)
ﬂﬂ6 7
&&
ﬂﬂ8 :!
characterValidation
ﬂﬂ; N
==
ﬂﬂO Q!
CharacterValidation
ﬂﬂR e
.
ﬂﬂe f
Decimal
ﬂﬂf m
&&
ﬂﬂn p
!
ﬂﬂq r
text
ﬂﬂr v
.
ﬂﬂv w
Contains
ﬂﬂw 
(ﬂﬂ Ä
	separatorﬂﬂÄ â
)ﬂﬂâ ä
)ﬂﬂä ã
returnﬂﬂå í
chﬂﬂì ï
;ﬂﬂï ñ
}
‡‡ 
}
·· 
else
‚‚ 
if
‚‚ 
(
‚‚ !
characterValidation
‚‚ (
==
‚‚) +!
CharacterValidation
‚‚, ?
.
‚‚? @
Digit
‚‚@ E
)
‚‚E F
{
„„ 
if
‰‰ 
(
‰‰ 
ch
‰‰ 
>=
‰‰ 
$char
‰‰ 
&&
‰‰  
ch
‰‰! #
<=
‰‰$ &
$char
‰‰' *
)
‰‰* +
return
‰‰, 2
ch
‰‰3 5
;
‰‰5 6
}
ÂÂ 
else
ÊÊ 
if
ÊÊ 
(
ÊÊ !
characterValidation
ÊÊ (
==
ÊÊ) +!
CharacterValidation
ÊÊ, ?
.
ÊÊ? @
Alphanumeric
ÊÊ@ L
)
ÊÊL M
{
ÁÁ 
if
ÈÈ 
(
ÈÈ 
ch
ÈÈ 
>=
ÈÈ 
$char
ÈÈ 
&&
ÈÈ  
ch
ÈÈ! #
<=
ÈÈ$ &
$char
ÈÈ' *
)
ÈÈ* +
return
ÈÈ, 2
ch
ÈÈ3 5
;
ÈÈ5 6
if
ÍÍ 
(
ÍÍ 
ch
ÍÍ 
>=
ÍÍ 
$char
ÍÍ 
&&
ÍÍ  
ch
ÍÍ! #
<=
ÍÍ$ &
$char
ÍÍ' *
)
ÍÍ* +
return
ÍÍ, 2
ch
ÍÍ3 5
;
ÍÍ5 6
if
ÎÎ 
(
ÎÎ 
ch
ÎÎ 
>=
ÎÎ 
$char
ÎÎ 
&&
ÎÎ  
ch
ÎÎ! #
<=
ÎÎ$ &
$char
ÎÎ' *
)
ÎÎ* +
return
ÎÎ, 2
ch
ÎÎ3 5
;
ÎÎ5 6
}
ÏÏ 
else
ÌÌ 
if
ÌÌ 
(
ÌÌ !
characterValidation
ÌÌ (
==
ÌÌ) +!
CharacterValidation
ÌÌ, ?
.
ÌÌ? @
Name
ÌÌ@ D
)
ÌÌD E
{
ÓÓ 
char
ÔÔ 
prevChar
ÔÔ 
=
ÔÔ 
(
ÔÔ  !
text
ÔÔ! %
.
ÔÔ% &
Length
ÔÔ& ,
>
ÔÔ- .
$num
ÔÔ/ 0
)
ÔÔ0 1
?
ÔÔ2 3
text
ÔÔ4 8
[
ÔÔ8 9
Mathf
ÔÔ9 >
.
ÔÔ> ?
Clamp
ÔÔ? D
(
ÔÔD E
pos
ÔÔE H
-
ÔÔI J
$num
ÔÔK L
,
ÔÔL M
$num
ÔÔN O
,
ÔÔO P
text
ÔÔQ U
.
ÔÔU V
Length
ÔÔV \
-
ÔÔ] ^
$num
ÔÔ_ `
)
ÔÔ` a
]
ÔÔa b
:
ÔÔc d
$char
ÔÔe h
;
ÔÔh i
char
 
lastChar
 
=
 
(
  !
text
! %
.
% &
Length
& ,
>
- .
$num
/ 0
)
0 1
?
2 3
text
4 8
[
8 9
Mathf
9 >
.
> ?
Clamp
? D
(
D E
pos
E H
,
H I
$num
J K
,
K L
text
M Q
.
Q R
Length
R X
-
Y Z
$num
[ \
)
\ ]
]
] ^
:
_ `
$char
a d
;
d e
char
ÒÒ 
nextChar
ÒÒ 
=
ÒÒ 
(
ÒÒ  !
text
ÒÒ! %
.
ÒÒ% &
Length
ÒÒ& ,
>
ÒÒ- .
$num
ÒÒ/ 0
)
ÒÒ0 1
?
ÒÒ2 3
text
ÒÒ4 8
[
ÒÒ8 9
Mathf
ÒÒ9 >
.
ÒÒ> ?
Clamp
ÒÒ? D
(
ÒÒD E
pos
ÒÒE H
+
ÒÒI J
$num
ÒÒK L
,
ÒÒL M
$num
ÒÒN O
,
ÒÒO P
text
ÒÒQ U
.
ÒÒU V
Length
ÒÒV \
-
ÒÒ] ^
$num
ÒÒ_ `
)
ÒÒ` a
]
ÒÒa b
:
ÒÒc d
$char
ÒÒe i
;
ÒÒi j
if
ÛÛ 
(
ÛÛ 
char
ÛÛ 
.
ÛÛ 
IsLetter
ÛÛ !
(
ÛÛ! "
ch
ÛÛ" $
)
ÛÛ$ %
)
ÛÛ% &
{
ÙÙ 
if
ˆˆ 
(
ˆˆ 
char
ˆˆ 
.
ˆˆ 
IsLower
ˆˆ $
(
ˆˆ$ %
ch
ˆˆ% '
)
ˆˆ' (
&&
ˆˆ) +
pos
ˆˆ, /
==
ˆˆ0 2
$num
ˆˆ3 4
)
ˆˆ4 5
return
˜˜ 
char
˜˜ #
.
˜˜# $
ToUpper
˜˜$ +
(
˜˜+ ,
ch
˜˜, .
)
˜˜. /
;
˜˜/ 0
if
˙˙ 
(
˙˙ 
char
˙˙ 
.
˙˙ 
IsLower
˙˙ $
(
˙˙$ %
ch
˙˙% '
)
˙˙' (
&&
˙˙) +
(
˙˙, -
prevChar
˙˙- 5
==
˙˙6 8
$char
˙˙9 <
||
˙˙= ?
prevChar
˙˙@ H
==
˙˙I K
$char
˙˙L O
)
˙˙O P
)
˙˙P Q
return
˚˚ 
char
˚˚ #
.
˚˚# $
ToUpper
˚˚$ +
(
˚˚+ ,
ch
˚˚, .
)
˚˚. /
;
˚˚/ 0
if
˛˛ 
(
˛˛ 
char
˛˛ 
.
˛˛ 
IsUpper
˛˛ $
(
˛˛$ %
ch
˛˛% '
)
˛˛' (
&&
˛˛) +
pos
˛˛, /
>
˛˛0 1
$num
˛˛2 3
&&
˛˛4 6
prevChar
˛˛7 ?
!=
˛˛@ B
$char
˛˛C F
&&
˛˛G I
prevChar
˛˛J R
!=
˛˛S U
$char
˛˛V Z
&&
˛˛[ ]
prevChar
˛˛^ f
!=
˛˛g i
$char
˛˛j m
&&
˛˛n p
!
˛˛q r
char
˛˛r v
.
˛˛v w
IsLower
˛˛w ~
(
˛˛~ 
prevChar˛˛ á
)˛˛á à
)˛˛à â
return
ˇˇ 
char
ˇˇ #
.
ˇˇ# $
ToLower
ˇˇ$ +
(
ˇˇ+ ,
ch
ˇˇ, .
)
ˇˇ. /
;
ˇˇ/ 0
if
ÇÇ 
(
ÇÇ 
char
ÇÇ 
.
ÇÇ 
IsUpper
ÇÇ $
(
ÇÇ$ %
ch
ÇÇ% '
)
ÇÇ' (
&&
ÇÇ) +
char
ÇÇ, 0
.
ÇÇ0 1
IsUpper
ÇÇ1 8
(
ÇÇ8 9
lastChar
ÇÇ9 A
)
ÇÇA B
)
ÇÇB C
return
ÉÉ 
(
ÉÉ  
char
ÉÉ  $
)
ÉÉ$ %
$num
ÉÉ% &
;
ÉÉ& '
return
áá 
ch
áá 
;
áá 
}
àà 
else
ââ 
if
ââ 
(
ââ 
ch
ââ 
==
ââ 
$char
ââ #
)
ââ# $
{
ää 
if
åå 
(
åå 
lastChar
åå  
!=
åå! #
$char
åå$ '
&&
åå( *
lastChar
åå+ 3
!=
åå4 6
$char
åå7 ;
&&
åå< >
nextChar
åå? G
!=
ååH J
$char
ååK O
&&
ååP R
!
ååS T
text
ååT X
.
ååX Y
Contains
ååY a
(
ååa b
$str
ååb e
)
ååe f
)
ååf g
return
çç 
ch
çç !
;
çç! "
}
éé 
if
ëë 
(
ëë 
char
ëë 
.
ëë 
IsLetter
ëë !
(
ëë! "
prevChar
ëë" *
)
ëë* +
&&
ëë, .
ch
ëë/ 1
==
ëë2 4
$char
ëë5 8
&&
ëë9 ;
lastChar
ëë< D
!=
ëëE G
$char
ëëH K
)
ëëK L
{
íí 
return
ìì 
ch
ìì 
;
ìì 
}
îî 
if
ññ 
(
ññ 
(
ññ 
ch
ññ 
==
ññ 
$char
ññ 
||
ññ !
ch
ññ" $
==
ññ% '
$char
ññ( +
)
ññ+ ,
&&
ññ- /
pos
ññ0 3
!=
ññ4 6
$num
ññ7 8
)
ññ8 9
{
óó 
if
ôô 
(
ôô 
prevChar
ôô  
!=
ôô! #
$char
ôô$ '
&&
ôô( *
prevChar
ôô+ 3
!=
ôô4 6
$char
ôô7 ;
&&
ôô< >
prevChar
ôô? G
!=
ôôH J
$char
ôôK N
&&
ôôO Q
lastChar
öö  
!=
öö! #
$char
öö$ '
&&
öö( *
lastChar
öö+ 3
!=
öö4 6
$char
öö7 ;
&&
öö< >
lastChar
öö? G
!=
ööH J
$char
ööK N
&&
ööO Q
nextChar
õõ  
!=
õõ! #
$char
õõ$ '
&&
õõ( *
nextChar
õõ+ 3
!=
õõ4 6
$char
õõ7 ;
&&
õõ< >
nextChar
õõ? G
!=
õõH J
$char
õõK N
)
õõN O
return
úú 
ch
úú !
;
úú! "
}
ùù 
}
ûû 
else
üü 
if
üü 
(
üü !
characterValidation
üü (
==
üü) +!
CharacterValidation
üü, ?
.
üü? @
EmailAddress
üü@ L
)
üüL M
{
†† 
if
®® 
(
®® 
ch
®® 
>=
®® 
$char
®® 
&&
®®  
ch
®®! #
<=
®®$ &
$char
®®' *
)
®®* +
return
®®, 2
ch
®®3 5
;
®®5 6
if
©© 
(
©© 
ch
©© 
>=
©© 
$char
©© 
&&
©©  
ch
©©! #
<=
©©$ &
$char
©©' *
)
©©* +
return
©©, 2
ch
©©3 5
;
©©5 6
if
™™ 
(
™™ 
ch
™™ 
>=
™™ 
$char
™™ 
&&
™™  
ch
™™! #
<=
™™$ &
$char
™™' *
)
™™* +
return
™™, 2
ch
™™3 5
;
™™5 6
if
´´ 
(
´´ 
ch
´´ 
==
´´ 
$char
´´ 
&&
´´  
text
´´! %
.
´´% &
IndexOf
´´& -
(
´´- .
$char
´´. 1
)
´´1 2
==
´´3 5
-
´´6 7
$num
´´7 8
)
´´8 9
return
´´: @
ch
´´A C
;
´´C D
if
¨¨ 
(
¨¨ %
kEmailSpecialCharacters
¨¨ +
.
¨¨+ ,
IndexOf
¨¨, 3
(
¨¨3 4
ch
¨¨4 6
)
¨¨6 7
!=
¨¨8 :
-
¨¨; <
$num
¨¨< =
)
¨¨= >
return
¨¨? E
ch
¨¨F H
;
¨¨H I
if
≠≠ 
(
≠≠ 
ch
≠≠ 
==
≠≠ 
$char
≠≠ 
)
≠≠ 
{
ÆÆ 
char
ØØ 
lastChar
ØØ !
=
ØØ" #
(
ØØ$ %
text
ØØ% )
.
ØØ) *
Length
ØØ* 0
>
ØØ1 2
$num
ØØ3 4
)
ØØ4 5
?
ØØ6 7
text
ØØ8 <
[
ØØ< =
Mathf
ØØ= B
.
ØØB C
Clamp
ØØC H
(
ØØH I
pos
ØØI L
,
ØØL M
$num
ØØN O
,
ØØO P
text
ØØQ U
.
ØØU V
Length
ØØV \
-
ØØ] ^
$num
ØØ_ `
)
ØØ` a
]
ØØa b
:
ØØc d
$char
ØØe h
;
ØØh i
char
∞∞ 
nextChar
∞∞ !
=
∞∞" #
(
∞∞$ %
text
∞∞% )
.
∞∞) *
Length
∞∞* 0
>
∞∞1 2
$num
∞∞3 4
)
∞∞4 5
?
∞∞6 7
text
∞∞8 <
[
∞∞< =
Mathf
∞∞= B
.
∞∞B C
Clamp
∞∞C H
(
∞∞H I
pos
∞∞I L
+
∞∞M N
$num
∞∞O P
,
∞∞P Q
$num
∞∞R S
,
∞∞S T
text
∞∞U Y
.
∞∞Y Z
Length
∞∞Z `
-
∞∞a b
$num
∞∞c d
)
∞∞d e
]
∞∞e f
:
∞∞g h
$char
∞∞i m
;
∞∞m n
if
±± 
(
±± 
lastChar
±±  
!=
±±! #
$char
±±$ '
&&
±±( *
nextChar
±±+ 3
!=
±±4 6
$char
±±7 :
)
±±: ;
return
≤≤ 
ch
≤≤ !
;
≤≤! "
}
≥≥ 
}
¥¥ 
else
µµ 
if
µµ 
(
µµ !
characterValidation
µµ (
==
µµ) +!
CharacterValidation
µµ, ?
.
µµ? @
Regex
µµ@ E
)
µµE F
{
∂∂ 
if
∏∏ 
(
∏∏ 
Regex
∏∏ 
.
∏∏ 
IsMatch
∏∏ !
(
∏∏! "
ch
∏∏" $
.
∏∏$ %
ToString
∏∏% -
(
∏∏- .
)
∏∏. /
,
∏∏/ 0
m_RegexValue
∏∏1 =
)
∏∏= >
)
∏∏> ?
{
ππ 
return
∫∫ 
ch
∫∫ 
;
∫∫ 
}
ªª 
}
ºº 
else
ΩΩ 
if
ΩΩ 
(
ΩΩ !
characterValidation
ΩΩ (
==
ΩΩ) +!
CharacterValidation
ΩΩ, ?
.
ΩΩ? @
CustomValidator
ΩΩ@ O
)
ΩΩO P
{
ææ 
if
øø 
(
øø 
m_InputValidator
øø $
!=
øø% '
null
øø( ,
)
øø, -
{
¿¿ 
char
¡¡ 
c
¡¡ 
=
¡¡ 
m_InputValidator
¡¡ -
.
¡¡- .
Validate
¡¡. 6
(
¡¡6 7
ref
¡¡7 :
text
¡¡; ?
,
¡¡? @
ref
¡¡A D
pos
¡¡E H
,
¡¡H I
ch
¡¡J L
)
¡¡L M
;
¡¡M N
m_Text
¬¬ 
=
¬¬ 
text
¬¬ !
;
¬¬! "*
stringSelectPositionInternal
√√ 0
=
√√1 2$
stringPositionInternal
√√3 I
=
√√J K
pos
√√L O
;
√√O P
return
ƒƒ 
c
ƒƒ 
;
ƒƒ 
}
≈≈ 
}
∆∆ 
return
«« 
(
«« 
char
«« 
)
«« 
$num
«« 
;
«« 
}
»» 	
public
   
void
    
ActivateInputField
   &
(
  & '
)
  ' (
{
ÀÀ 	
if
ÃÃ 
(
ÃÃ 
m_TextComponent
ÃÃ 
==
ÃÃ  "
null
ÃÃ# '
||
ÃÃ( *
m_TextComponent
ÃÃ+ :
.
ÃÃ: ;
font
ÃÃ; ?
==
ÃÃ@ B
null
ÃÃC G
||
ÃÃH J
!
ÃÃK L
IsActive
ÃÃL T
(
ÃÃT U
)
ÃÃU V
||
ÃÃW Y
!
ÃÃZ [
IsInteractable
ÃÃ[ i
(
ÃÃi j
)
ÃÃj k
)
ÃÃk l
return
ÕÕ 
;
ÕÕ 
if
œœ 
(
œœ 
	isFocused
œœ 
)
œœ 
{
–– 
if
—— 
(
—— 
m_SoftKeyboard
—— "
!=
——# %
null
——& *
&&
——+ -
!
——. /
m_SoftKeyboard
——/ =
.
——= >
active
——> D
)
——D E
{
““ 
m_SoftKeyboard
”” "
.
””" #
active
””# )
=
””* +
true
””, 0
;
””0 1
m_SoftKeyboard
‘‘ "
.
‘‘" #
text
‘‘# '
=
‘‘( )
m_Text
‘‘* 0
;
‘‘0 1
}
’’ 
}
÷÷ (
m_ShouldActivateNextUpdate
ÿÿ &
=
ÿÿ' (
true
ÿÿ) -
;
ÿÿ- .
}
ŸŸ 	
private
€€ 
void
€€ (
ActivateInputFieldInternal
€€ /
(
€€/ 0
)
€€0 1
{
‹‹ 	
if
›› 
(
›› 
EventSystem
›› 
.
›› 
current
›› #
==
››$ &
null
››' +
)
››+ ,
return
ﬁﬁ 
;
ﬁﬁ 
if
‡‡ 
(
‡‡ 
EventSystem
‡‡ 
.
‡‡ 
current
‡‡ #
.
‡‡# $'
currentSelectedGameObject
‡‡$ =
!=
‡‡> @

gameObject
‡‡A K
)
‡‡K L
EventSystem
·· 
.
·· 
current
·· #
.
··# $#
SetSelectedGameObject
··$ 9
(
··9 :

gameObject
··: D
)
··D E
;
··E F
if
„„ 
(
„„ !
TouchScreenKeyboard
„„ #
.
„„# $
isSupported
„„$ /
&&
„„0 2$
shouldHideSoftKeyboard
„„3 I
==
„„J L
false
„„M R
)
„„R S
{
‰‰ 
if
ÂÂ 
(
ÂÂ 
inputSystem
ÂÂ 
!=
ÂÂ  "
null
ÂÂ# '
&&
ÂÂ( *
inputSystem
ÂÂ+ 6
.
ÂÂ6 7
touchSupported
ÂÂ7 E
)
ÂÂE F
{
ÊÊ !
TouchScreenKeyboard
ÁÁ '
.
ÁÁ' (
	hideInput
ÁÁ( 1
=
ÁÁ2 3#
shouldHideMobileInput
ÁÁ4 I
;
ÁÁI J
}
ËË 
if
ÍÍ 
(
ÍÍ $
shouldHideSoftKeyboard
ÍÍ *
==
ÍÍ+ -
false
ÍÍ. 3
&&
ÍÍ4 6

m_ReadOnly
ÍÍ7 A
==
ÍÍB D
false
ÍÍE J
)
ÍÍJ K
{
ÎÎ 
m_SoftKeyboard
ÏÏ "
=
ÏÏ# $
(
ÏÏ% &
	inputType
ÏÏ& /
==
ÏÏ0 2
	InputType
ÏÏ3 <
.
ÏÏ< =
Password
ÏÏ= E
)
ÏÏE F
?
ÏÏG H!
TouchScreenKeyboard
ÌÌ +
.
ÌÌ+ ,
Open
ÌÌ, 0
(
ÌÌ0 1
m_Text
ÌÌ1 7
,
ÌÌ7 8
keyboardType
ÌÌ9 E
,
ÌÌE F
false
ÌÌG L
,
ÌÌL M
	multiLine
ÌÌN W
,
ÌÌW X
true
ÌÌY ]
,
ÌÌ] ^
false
ÌÌ_ d
,
ÌÌd e
$str
ÌÌf h
,
ÌÌh i
characterLimit
ÌÌj x
)
ÌÌx y
:
ÌÌz {!
TouchScreenKeyboard
ÓÓ +
.
ÓÓ+ ,
Open
ÓÓ, 0
(
ÓÓ0 1
m_Text
ÓÓ1 7
,
ÓÓ7 8
keyboardType
ÓÓ9 E
,
ÓÓE F
	inputType
ÓÓG P
==
ÓÓQ S
	InputType
ÓÓT ]
.
ÓÓ] ^
AutoCorrect
ÓÓ^ i
,
ÓÓi j
	multiLine
ÓÓk t
,
ÓÓt u
false
ÓÓv {
,
ÓÓ{ |
falseÓÓ} Ç
,ÓÓÇ É
$strÓÓÑ Ü
,ÓÓÜ á
characterLimitÓÓà ñ
)ÓÓñ ó
;ÓÓó ò
OnFocus
 
(
 
)
 
;
 
if
ÙÙ 
(
ÙÙ 
m_SoftKeyboard
ÙÙ &
!=
ÙÙ' )
null
ÙÙ* .
)
ÙÙ. /
{
ıı 
int
ˆˆ 
length
ˆˆ "
=
ˆˆ# $$
stringPositionInternal
ˆˆ% ;
<
ˆˆ< =*
stringSelectPositionInternal
ˆˆ> Z
?
ˆˆ[ \*
stringSelectPositionInternal
ˆˆ] y
-
ˆˆz {%
stringPositionInternalˆˆ| í
:ˆˆì î&
stringPositionInternalˆˆï ´
-ˆˆ¨ ≠,
stringSelectPositionInternalˆˆÆ  
;ˆˆ  À
m_SoftKeyboard
˜˜ &
.
˜˜& '
	selection
˜˜' 0
=
˜˜1 2
new
˜˜3 6
RangeInt
˜˜7 ?
(
˜˜? @$
stringPositionInternal
˜˜@ V
<
˜˜W X*
stringSelectPositionInternal
˜˜Y u
?
˜˜v w%
stringPositionInternal˜˜x é
:˜˜è ê,
stringSelectPositionInternal˜˜ë ≠
,˜˜≠ Æ
length˜˜Ø µ
)˜˜µ ∂
;˜˜∂ ∑
}
¯¯ 
}
˙˙ 1
#m_TouchKeyboardAllowsInPlaceEditing
ˇˇ 3
=
ˇˇ4 5!
TouchScreenKeyboard
ˇˇ6 I
.
ˇˇI J%
isInPlaceEditingAllowed
ˇˇJ a
;
ˇˇa b
}
Å Å  
else
Ç Ç  
{
É É  
if
Ñ Ñ  
(
Ñ Ñ  
!
Ñ Ñ  !
TouchScreenKeyboard
Ñ Ñ  (
.
Ñ Ñ ( )
isSupported
Ñ Ñ ) 4
&&
Ñ Ñ 5 7

m_ReadOnly
Ñ Ñ 8 B
==
Ñ Ñ C E
false
Ñ Ñ F K
&&
Ñ Ñ L N
inputSystem
Ñ Ñ O Z
!=
Ñ Ñ [ ]
null
Ñ Ñ ^ b
)
Ñ Ñ b c
inputSystem
Ö Ö  
.
Ö Ö    
imeCompositionMode
Ö Ö   2
=
Ö Ö 3 4 
IMECompositionMode
Ö Ö 5 G
.
Ö Ö G H
On
Ö Ö H J
;
Ö Ö J K
OnFocus
á á  
(
á á  
)
á á  
;
á á  
}
à à  
m_AllowInput
ä ä  
=
ä ä  
true
ä ä  
;
ä ä   
m_OriginalText
ã ã  
=
ã ã  
text
ã ã  !
;
ã ã ! "
m_WasCanceled
å å  
=
å å  
false
å å  !
;
å å ! "
SetCaretVisible
ç ç  
(
ç ç  
)
ç ç  
;
ç ç  
UpdateLabel
é é  
(
é é  
)
é é  
;
é é  
}
è è  	
public
ë ë  
override
ë ë  
void
ë ë  
OnSelect
ë ë  %
(
ë ë % &
BaseEventData
ë ë & 3
	eventData
ë ë 4 =
)
ë ë = >
{
í í  	
base
ï ï  
.
ï ï  
OnSelect
ï ï  
(
ï ï  
	eventData
ï ï  #
)
ï ï # $
;
ï ï $ %
SendOnFocus
ñ ñ  
(
ñ ñ  
)
ñ ñ  
;
ñ ñ   
ActivateInputField
ò ò  
(
ò ò  
)
ò ò   
;
ò ò   !
}
ô ô  	
public
õ õ  
virtual
õ õ  
void
õ õ  
OnPointerClick
õ õ  *
(
õ õ * +
PointerEventData
õ õ + ;
	eventData
õ õ < E
)
õ õ E F
{
ú ú  	
if
ü ü  
(
ü ü  
	eventData
ü ü  
.
ü ü  
button
ü ü   
!=
ü ü ! #
PointerEventData
ü ü $ 4
.
ü ü 4 5
InputButton
ü ü 5 @
.
ü ü @ A
Left
ü ü A E
)
ü ü E F
return
† †  
;
† †   
ActivateInputField
¢ ¢  
(
¢ ¢  
)
¢ ¢   
;
¢ ¢   !
}
£ £  	
public
• •  
void
• •  
OnControlClick
• •  "
(
• • " #
)
• • # $
{
¶ ¶  	
}
® ®  	
public
™ ™  
void
™ ™  
ReleaseSelection
™ ™  $
(
™ ™ $ %
)
™ ™ % &
{
´ ´  	$
m_SelectionStillActive
¨ ¨  "
=
¨ ¨ # $
false
¨ ¨ % *
;
¨ ¨ * + 
m_ReleaseSelection
≠ ≠  
=
≠ ≠   
false
≠ ≠ ! &
;
≠ ≠ & '(
m_PreviouslySelectedObject
Æ Æ  &
=
Æ Æ ' (
null
Æ Æ ) -
;
Æ Æ - .!
MarkGeometryAsDirty
∞ ∞  
(
∞ ∞   
)
∞ ∞   !
;
∞ ∞ ! "
SendOnEndEdit
≤ ≤  
(
≤ ≤  
)
≤ ≤  
;
≤ ≤  $
SendOnEndTextSelection
≥ ≥  "
(
≥ ≥ " #
)
≥ ≥ # $
;
≥ ≥ $ %
}
¥ ¥  	
public
∂ ∂  
void
∂ ∂  "
DeactivateInputField
∂ ∂  (
(
∂ ∂ ( )
bool
∂ ∂ ) -
clearSelection
∂ ∂ . <
=
∂ ∂ = >
false
∂ ∂ ? D
)
∂ ∂ D E
{
∑ ∑  	
if
ª ª  
(
ª ª  
!
ª ª  
m_AllowInput
ª ª  
)
ª ª  
return
º º  
;
º º  &
m_HasDoneFocusTransition
æ æ  $
=
æ æ % &
false
æ æ ' ,
;
æ æ , -
m_AllowInput
ø ø  
=
ø ø  
false
ø ø   
;
ø ø   !
if
¡ ¡  
(
¡ ¡  
m_Placeholder
¡ ¡  
!=
¡ ¡   
null
¡ ¡ ! %
)
¡ ¡ % &
m_Placeholder
¬ ¬  
.
¬ ¬  
enabled
¬ ¬  %
=
¬ ¬ & '
string
¬ ¬ ( .
.
¬ ¬ . /
IsNullOrEmpty
¬ ¬ / <
(
¬ ¬ < =
m_Text
¬ ¬ = C
)
¬ ¬ C D
;
¬ ¬ D E
if
ƒ ƒ  
(
ƒ ƒ  
m_TextComponent
ƒ ƒ  
!=
ƒ ƒ   "
null
ƒ ƒ # '
&&
ƒ ƒ ( *
IsInteractable
ƒ ƒ + 9
(
ƒ ƒ 9 :
)
ƒ ƒ : ;
)
ƒ ƒ ; <
{
≈ ≈  
if
∆ ∆  
(
∆ ∆  
m_WasCanceled
∆ ∆  !
&&
∆ ∆ " $+
m_RestoreOriginalTextOnEscape
∆ ∆ % B
)
∆ ∆ B C
text
« «  
=
« «  
m_OriginalText
« «  )
;
« « ) *
if
… …  
(
… …  
m_SoftKeyboard
… …  "
!=
… … # %
null
… … & *
)
… … * +
{
     
m_SoftKeyboard
À À  "
.
À À " #
active
À À # )
=
À À * +
false
À À , 1
;
À À 1 2
m_SoftKeyboard
Ã Ã  "
=
Ã Ã # $
null
Ã Ã % )
;
Ã Ã ) *
}
Õ Õ  $
m_SelectionStillActive
œ œ  &
=
œ œ ' (
true
œ œ ) -
;
œ œ - .
if
— —  
(
— —  #
m_ResetOnDeActivation
— —  )
||
— — * , 
m_ReleaseSelection
— — - ?
)
— — ? @
{
“ “  
if
◊ ◊  
(
◊ ◊  !
m_VerticalScrollbar
◊ ◊  +
==
◊ ◊ , .
null
◊ ◊ / 3
)
◊ ◊ 3 4
ReleaseSelection
ÿ ÿ  (
(
ÿ ÿ ( )
)
ÿ ÿ ) *
;
ÿ ÿ * +
}
Ÿ Ÿ  
if
€ €  
(
€ €  
inputSystem
€ €  
!=
€ €   "
null
€ € # '
)
€ € ' (
inputSystem
‹ ‹  
.
‹ ‹    
imeCompositionMode
‹ ‹   2
=
‹ ‹ 3 4 
IMECompositionMode
‹ ‹ 5 G
.
‹ ‹ G H
Auto
‹ ‹ H L
;
‹ ‹ L M
}
› ›  !
MarkGeometryAsDirty
ﬂ ﬂ  
(
ﬂ ﬂ   
)
ﬂ ﬂ   !
;
ﬂ ﬂ ! "
}
‡ ‡  	
public
‚ ‚  
override
‚ ‚  
void
‚ ‚  

OnDeselect
‚ ‚  '
(
‚ ‚ ' (
BaseEventData
‚ ‚ ( 5
	eventData
‚ ‚ 6 ?
)
‚ ‚ ? @
{
„ „  	"
DeactivateInputField
‰ ‰   
(
‰ ‰   !
)
‰ ‰ ! "
;
‰ ‰ " #
base
Ê Ê  
.
Ê Ê  

OnDeselect
Ê Ê  
(
Ê Ê  
	eventData
Ê Ê  %
)
Ê Ê % &
;
Ê Ê & '
SendOnFocusLost
Á Á  
(
Á Á  
)
Á Á  
;
Á Á  
}
Ë Ë  	
public
Í Í  
virtual
Í Í  
void
Í Í  
OnSubmit
Í Í  $
(
Í Í $ %
BaseEventData
Í Í % 2
	eventData
Í Í 3 <
)
Í Í < =
{
Î Î  	
if
Ó Ó  
(
Ó Ó  
!
Ó Ó  
IsActive
Ó Ó  
(
Ó Ó  
)
Ó Ó  
||
Ó Ó  
!
Ó Ó   
IsInteractable
Ó Ó   .
(
Ó Ó . /
)
Ó Ó / 0
)
Ó Ó 0 1
return
Ô Ô  
;
Ô Ô  
if
Ò Ò  
(
Ò Ò  
!
Ò Ò  
	isFocused
Ò Ò  
)
Ò Ò  (
m_ShouldActivateNextUpdate
Ú Ú  *
=
Ú Ú + ,
true
Ú Ú - 1
;
Ú Ú 1 2
SendOnSubmit
Ù Ù  
(
Ù Ù  
)
Ù Ù  
;
Ù Ù  
}
ı ı  	
private
˝ ˝  
void
˝ ˝   
EnforceContentType
˝ ˝  '
(
˝ ˝ ' (
)
˝ ˝ ( )
{
˛ ˛  	
switch
ˇ ˇ  
(
ˇ ˇ  
contentType
ˇ ˇ  
)
ˇ ˇ   
{
Ä!Ä! 
case
Å!Å! 
ContentType
Å!Å!  
.
Å!Å!  !
Standard
Å!Å!! )
:
Å!Å!) *
{
Ç!Ç! 
m_InputType
Ñ!Ñ! #
=
Ñ!Ñ!$ %
	InputType
Ñ!Ñ!& /
.
Ñ!Ñ!/ 0
Standard
Ñ!Ñ!0 8
;
Ñ!Ñ!8 9
m_KeyboardType
Ö!Ö! &
=
Ö!Ö!' (%
TouchScreenKeyboardType
Ö!Ö!) @
.
Ö!Ö!@ A
Default
Ö!Ö!A H
;
Ö!Ö!H I#
m_CharacterValidation
Ü!Ü! -
=
Ü!Ü!. /!
CharacterValidation
Ü!Ü!0 C
.
Ü!Ü!C D
None
Ü!Ü!D H
;
Ü!Ü!H I
break
á!á! 
;
á!á! 
}
à!à! 
case
â!â! 
ContentType
â!â!  
.
â!â!  !
Autocorrected
â!â!! .
:
â!â!. /
{
ä!ä! 
m_InputType
å!å! #
=
å!å!$ %
	InputType
å!å!& /
.
å!å!/ 0
AutoCorrect
å!å!0 ;
;
å!å!; <
m_KeyboardType
ç!ç! &
=
ç!ç!' (%
TouchScreenKeyboardType
ç!ç!) @
.
ç!ç!@ A
Default
ç!ç!A H
;
ç!ç!H I#
m_CharacterValidation
é!é! -
=
é!é!. /!
CharacterValidation
é!é!0 C
.
é!é!C D
None
é!é!D H
;
é!é!H I
break
è!è! 
;
è!è! 
}
ê!ê! 
case
ë!ë! 
ContentType
ë!ë!  
.
ë!ë!  !
IntegerNumber
ë!ë!! .
:
ë!ë!. /
{
í!í! 

m_LineType
ì!ì! "
=
ì!ì!# $
LineType
ì!ì!% -
.
ì!ì!- .

SingleLine
ì!ì!. 8
;
ì!ì!8 9
m_InputType
î!î! #
=
î!î!$ %
	InputType
î!î!& /
.
î!î!/ 0
Standard
î!î!0 8
;
î!î!8 9
m_KeyboardType
ï!ï! &
=
ï!ï!' (%
TouchScreenKeyboardType
ï!ï!) @
.
ï!ï!@ A
	NumberPad
ï!ï!A J
;
ï!ï!J K#
m_CharacterValidation
ñ!ñ! -
=
ñ!ñ!. /!
CharacterValidation
ñ!ñ!0 C
.
ñ!ñ!C D
Integer
ñ!ñ!D K
;
ñ!ñ!K L
break
ó!ó! 
;
ó!ó! 
}
ò!ò! 
case
ô!ô! 
ContentType
ô!ô!  
.
ô!ô!  !
DecimalNumber
ô!ô!! .
:
ô!ô!. /
{
ö!ö! 

m_LineType
õ!õ! "
=
õ!õ!# $
LineType
õ!õ!% -
.
õ!õ!- .

SingleLine
õ!õ!. 8
;
õ!õ!8 9
m_InputType
ú!ú! #
=
ú!ú!$ %
	InputType
ú!ú!& /
.
ú!ú!/ 0
Standard
ú!ú!0 8
;
ú!ú!8 9
m_KeyboardType
ù!ù! &
=
ù!ù!' (%
TouchScreenKeyboardType
ù!ù!) @
.
ù!ù!@ A#
NumbersAndPunctuation
ù!ù!A V
;
ù!ù!V W#
m_CharacterValidation
û!û! -
=
û!û!. /!
CharacterValidation
û!û!0 C
.
û!û!C D
Decimal
û!û!D K
;
û!û!K L
break
ü!ü! 
;
ü!ü! 
}
†!†! 
case
°!°! 
ContentType
°!°!  
.
°!°!  !
Alphanumeric
°!°!! -
:
°!°!- .
{
¢!¢! 

m_LineType
£!£! "
=
£!£!# $
LineType
£!£!% -
.
£!£!- .

SingleLine
£!£!. 8
;
£!£!8 9
m_InputType
§!§! #
=
§!§!$ %
	InputType
§!§!& /
.
§!§!/ 0
Standard
§!§!0 8
;
§!§!8 9
m_KeyboardType
•!•! &
=
•!•!' (%
TouchScreenKeyboardType
•!•!) @
.
•!•!@ A
ASCIICapable
•!•!A M
;
•!•!M N#
m_CharacterValidation
¶!¶! -
=
¶!¶!. /!
CharacterValidation
¶!¶!0 C
.
¶!¶!C D
Alphanumeric
¶!¶!D P
;
¶!¶!P Q
break
ß!ß! 
;
ß!ß! 
}
®!®! 
case
©!©! 
ContentType
©!©!  
.
©!©!  !
Name
©!©!! %
:
©!©!% &
{
™!™! 

m_LineType
´!´! "
=
´!´!# $
LineType
´!´!% -
.
´!´!- .

SingleLine
´!´!. 8
;
´!´!8 9
m_InputType
¨!¨! #
=
¨!¨!$ %
	InputType
¨!¨!& /
.
¨!¨!/ 0
Standard
¨!¨!0 8
;
¨!¨!8 9
m_KeyboardType
≠!≠! &
=
≠!≠!' (%
TouchScreenKeyboardType
≠!≠!) @
.
≠!≠!@ A
Default
≠!≠!A H
;
≠!≠!H I#
m_CharacterValidation
Æ!Æ! -
=
Æ!Æ!. /!
CharacterValidation
Æ!Æ!0 C
.
Æ!Æ!C D
Name
Æ!Æ!D H
;
Æ!Æ!H I
break
Ø!Ø! 
;
Ø!Ø! 
}
∞!∞! 
case
±!±! 
ContentType
±!±!  
.
±!±!  !
EmailAddress
±!±!! -
:
±!±!- .
{
≤!≤! 

m_LineType
≥!≥! "
=
≥!≥!# $
LineType
≥!≥!% -
.
≥!≥!- .

SingleLine
≥!≥!. 8
;
≥!≥!8 9
m_InputType
¥!¥! #
=
¥!¥!$ %
	InputType
¥!¥!& /
.
¥!¥!/ 0
Standard
¥!¥!0 8
;
¥!¥!8 9
m_KeyboardType
µ!µ! &
=
µ!µ!' (%
TouchScreenKeyboardType
µ!µ!) @
.
µ!µ!@ A
EmailAddress
µ!µ!A M
;
µ!µ!M N#
m_CharacterValidation
∂!∂! -
=
∂!∂!. /!
CharacterValidation
∂!∂!0 C
.
∂!∂!C D
EmailAddress
∂!∂!D P
;
∂!∂!P Q
break
∑!∑! 
;
∑!∑! 
}
∏!∏! 
case
π!π! 
ContentType
π!π!  
.
π!π!  !
Password
π!π!! )
:
π!π!) *
{
∫!∫! 

m_LineType
ª!ª! "
=
ª!ª!# $
LineType
ª!ª!% -
.
ª!ª!- .

SingleLine
ª!ª!. 8
;
ª!ª!8 9
m_InputType
º!º! #
=
º!º!$ %
	InputType
º!º!& /
.
º!º!/ 0
Password
º!º!0 8
;
º!º!8 9
m_KeyboardType
Ω!Ω! &
=
Ω!Ω!' (%
TouchScreenKeyboardType
Ω!Ω!) @
.
Ω!Ω!@ A
Default
Ω!Ω!A H
;
Ω!Ω!H I#
m_CharacterValidation
æ!æ! -
=
æ!æ!. /!
CharacterValidation
æ!æ!0 C
.
æ!æ!C D
None
æ!æ!D H
;
æ!æ!H I
break
ø!ø! 
;
ø!ø! 
}
¿!¿! 
case
¡!¡! 
ContentType
¡!¡!  
.
¡!¡!  !
Pin
¡!¡!! $
:
¡!¡!$ %
{
¬!¬! 

m_LineType
√!√! "
=
√!√!# $
LineType
√!√!% -
.
√!√!- .

SingleLine
√!√!. 8
;
√!√!8 9
m_InputType
ƒ!ƒ! #
=
ƒ!ƒ!$ %
	InputType
ƒ!ƒ!& /
.
ƒ!ƒ!/ 0
Password
ƒ!ƒ!0 8
;
ƒ!ƒ!8 9
m_KeyboardType
≈!≈! &
=
≈!≈!' (%
TouchScreenKeyboardType
≈!≈!) @
.
≈!≈!@ A
	NumberPad
≈!≈!A J
;
≈!≈!J K#
m_CharacterValidation
∆!∆! -
=
∆!∆!. /!
CharacterValidation
∆!∆!0 C
.
∆!∆!C D
Digit
∆!∆!D I
;
∆!∆!I J
break
«!«! 
;
«!«! 
}
»!»! 
default
…!…! 
:
…!…! 
{
 ! ! 
break
Ã!Ã! 
;
Ã!Ã! 
}
Õ!Õ! 
}
Œ!Œ! &
SetTextComponentWrapMode
–!–! $
(
–!–!$ %
)
–!–!% &
;
–!–!& '
}
—!—! 	
void
”!”! &
SetTextComponentWrapMode
”!”! %
(
”!”!% &
)
”!”!& '
{
‘!‘! 	
if
’!’! 
(
’!’! 
m_TextComponent
’!’! 
==
’!’!  "
null
’!’!# '
)
’!’!' (
return
÷!÷! 
;
÷!÷! 
if
ÿ!ÿ! 
(
ÿ!ÿ! 
	multiLine
ÿ!ÿ! 
)
ÿ!ÿ! 
m_TextComponent
Ÿ!Ÿ! 
.
Ÿ!Ÿ!   
enableWordWrapping
Ÿ!Ÿ!  2
=
Ÿ!Ÿ!3 4
true
Ÿ!Ÿ!5 9
;
Ÿ!Ÿ!9 :
else
⁄!⁄! 
m_TextComponent
€!€! 
.
€!€!   
enableWordWrapping
€!€!  2
=
€!€!3 4
false
€!€!5 :
;
€!€!: ;
}
‹!‹! 	
void
ﬂ!ﬂ! *
SetTextComponentRichTextMode
ﬂ!ﬂ! )
(
ﬂ!ﬂ!) *
)
ﬂ!ﬂ!* +
{
‡!‡! 	
if
·!·! 
(
·!·! 
m_TextComponent
·!·! 
==
·!·!  "
null
·!·!# '
)
·!·!' (
return
‚!‚! 
;
‚!‚! 
m_TextComponent
‰!‰! 
.
‰!‰! 
richText
‰!‰! $
=
‰!‰!% &

m_RichText
‰!‰!' 1
;
‰!‰!1 2
}
Â!Â! 	
void
Á!Á! +
SetToCustomIfContentTypeIsNot
Á!Á! *
(
Á!Á!* +
params
Á!Á!+ 1
ContentType
Á!Á!2 =
[
Á!Á!= >
]
Á!Á!> ?!
allowedContentTypes
Á!Á!@ S
)
Á!Á!S T
{
Ë!Ë! 	
if
È!È! 
(
È!È! 
contentType
È!È! 
==
È!È! 
ContentType
È!È! *
.
È!È!* +
Custom
È!È!+ 1
)
È!È!1 2
return
Í!Í! 
;
Í!Í! 
for
Ï!Ï! 
(
Ï!Ï! 
int
Ï!Ï! 
i
Ï!Ï! 
=
Ï!Ï! 
$num
Ï!Ï! 
;
Ï!Ï! 
i
Ï!Ï! 
<
Ï!Ï! !
allowedContentTypes
Ï!Ï!  3
.
Ï!Ï!3 4
Length
Ï!Ï!4 :
;
Ï!Ï!: ;
i
Ï!Ï!< =
++
Ï!Ï!= ?
)
Ï!Ï!? @
if
Ì!Ì! 
(
Ì!Ì! 
contentType
Ì!Ì! 
==
Ì!Ì!  "!
allowedContentTypes
Ì!Ì!# 6
[
Ì!Ì!6 7
i
Ì!Ì!7 8
]
Ì!Ì!8 9
)
Ì!Ì!9 :
return
Ó!Ó! 
;
Ó!Ó! 
contentType
!! 
=
!! 
ContentType
!! %
.
!!% &
Custom
!!& ,
;
!!, -
}
Ò!Ò! 	
void
Û!Û! 
SetToCustom
Û!Û! 
(
Û!Û! 
)
Û!Û! 
{
Ù!Ù! 	
if
ı!ı! 
(
ı!ı! 
contentType
ı!ı! 
==
ı!ı! 
ContentType
ı!ı! *
.
ı!ı!* +
Custom
ı!ı!+ 1
)
ı!ı!1 2
return
ˆ!ˆ! 
;
ˆ!ˆ! 
contentType
¯!¯! 
=
¯!¯! 
ContentType
¯!¯! %
.
¯!¯!% &
Custom
¯!¯!& ,
;
¯!¯!, -
}
˘!˘! 	
void
˚!˚! 
SetToCustom
˚!˚! 
(
˚!˚! !
CharacterValidation
˚!˚! ,!
characterValidation
˚!˚!- @
)
˚!˚!@ A
{
¸!¸! 	
if
˝!˝! 
(
˝!˝! 
contentType
˝!˝! 
==
˝!˝! 
ContentType
˝!˝! *
.
˝!˝!* +
Custom
˝!˝!+ 1
)
˝!˝!1 2
{
˛!˛! !
characterValidation
ˇ!ˇ! #
=
ˇ!ˇ!$ %!
CharacterValidation
ˇ!ˇ!& 9
.
ˇ!ˇ!9 :
CustomValidator
ˇ!ˇ!: I
;
ˇ!ˇ!I J
return
Ä"Ä" 
;
Ä"Ä" 
}
Å"Å" 
contentType
É"É" 
=
É"É" 
ContentType
É"É" %
.
É"É"% &
Custom
É"É"& ,
;
É"É", -!
characterValidation
Ñ"Ñ" 
=
Ñ"Ñ"  !!
CharacterValidation
Ñ"Ñ"" 5
.
Ñ"Ñ"5 6
CustomValidator
Ñ"Ñ"6 E
;
Ñ"Ñ"E F
}
Ö"Ö" 	
	protected
à"à" 
override
à"à" 
void
à"à" 
DoStateTransition
à"à"  1
(
à"à"1 2
SelectionState
à"à"2 @
state
à"à"A F
,
à"à"F G
bool
à"à"H L
instant
à"à"M T
)
à"à"T U
{
â"â" 	
if
ä"ä" 
(
ä"ä" &
m_HasDoneFocusTransition
ä"ä" (
)
ä"ä"( )
state
ã"ã" 
=
ã"ã" 
SelectionState
ã"ã" &
.
ã"ã"& '
Selected
ã"ã"' /
;
ã"ã"/ 0
else
å"å" 
if
å"å" 
(
å"å" 
state
å"å" 
==
å"å" 
SelectionState
å"å" ,
.
å"å", -
Pressed
å"å"- 4
)
å"å"4 5&
m_HasDoneFocusTransition
ç"ç" (
=
ç"ç") *
true
ç"ç"+ /
;
ç"ç"/ 0
base
è"è" 
.
è"è" 
DoStateTransition
è"è" "
(
è"è"" #
state
è"è"# (
,
è"è"( )
instant
è"è"* 1
)
è"è"1 2
;
è"è"2 3
}
ê"ê" 	
public
ñ"ñ" 
virtual
ñ"ñ" 
void
ñ"ñ" ,
CalculateLayoutInputHorizontal
ñ"ñ" :
(
ñ"ñ": ;
)
ñ"ñ"; <
{
ó"ó" 	
}
ó"ó"
 
public
ú"ú" 
virtual
ú"ú" 
void
ú"ú" *
CalculateLayoutInputVertical
ú"ú" 8
(
ú"ú"8 9
)
ú"ú"9 :
{
ù"ù" 	
}
ù"ù"
 
public
¢"¢" 
virtual
¢"¢" 
float
¢"¢" 
minWidth
¢"¢" %
{
¢"¢"& '
get
¢"¢"( +
{
¢"¢", -
return
¢"¢". 4
$num
¢"¢"5 6
;
¢"¢"6 7
}
¢"¢"8 9
}
¢"¢": ;
public
ß"ß" 
virtual
ß"ß" 
float
ß"ß" 
preferredWidth
ß"ß" +
{
®"®" 	
get
©"©" 
{
™"™" 
if
´"´" 
(
´"´" 
textComponent
´"´" !
==
´"´"" $
null
´"´"% )
)
´"´") *
return
¨"¨" 
$num
¨"¨" 
;
¨"¨" 
float
Æ"Æ" 
horizontalPadding
Æ"Æ" '
=
Æ"Æ"( )
$num
Æ"Æ"* +
;
Æ"Æ"+ ,
if
∞"∞" 
(
∞"∞" 
m_LayoutGroup
∞"∞" !
!=
∞"∞"" $
null
∞"∞"% )
)
∞"∞") *
horizontalPadding
±"±" %
=
±"±"& '
m_LayoutGroup
±"±"( 5
.
±"±"5 6
padding
±"±"6 =
.
±"±"= >

horizontal
±"±"> H
;
±"±"H I
if
≥"≥" 
(
≥"≥" 
m_TextViewport
≥"≥" "
!=
≥"≥"# %
null
≥"≥"& *
)
≥"≥"* +
horizontalPadding
¥"¥" %
+=
¥"¥"& (
m_TextViewport
¥"¥") 7
.
¥"¥"7 8
	offsetMin
¥"¥"8 A
.
¥"¥"A B
x
¥"¥"B C
-
¥"¥"D E
m_TextViewport
¥"¥"F T
.
¥"¥"T U
	offsetMax
¥"¥"U ^
.
¥"¥"^ _
x
¥"¥"_ `
;
¥"¥"` a
return
∂"∂" 
m_TextComponent
∂"∂" &
.
∂"∂"& '
preferredWidth
∂"∂"' 5
+
∂"∂"6 7
horizontalPadding
∂"∂"8 I
;
∂"∂"I J
}
∑"∑" 
}
∏"∏" 	
public
Ω"Ω" 
virtual
Ω"Ω" 
float
Ω"Ω" 
flexibleWidth
Ω"Ω" *
{
Ω"Ω"+ ,
get
Ω"Ω"- 0
{
Ω"Ω"1 2
return
Ω"Ω"3 9
-
Ω"Ω": ;
$num
Ω"Ω"; <
;
Ω"Ω"< =
}
Ω"Ω"> ?
}
Ω"Ω"@ A
public
¬"¬" 
virtual
¬"¬" 
float
¬"¬" 
	minHeight
¬"¬" &
{
¬"¬"' (
get
¬"¬") ,
{
¬"¬"- .
return
¬"¬"/ 5
$num
¬"¬"6 7
;
¬"¬"7 8
}
¬"¬"9 :
}
¬"¬"; <
public
«"«" 
virtual
«"«" 
float
«"«" 
preferredHeight
«"«" ,
{
»"»" 	
get
…"…" 
{
 " " 
if
À"À" 
(
À"À" 
textComponent
À"À" !
==
À"À"" $
null
À"À"% )
)
À"À") *
return
Ã"Ã" 
$num
Ã"Ã" 
;
Ã"Ã" 
float
Œ"Œ" 
verticalPadding
Œ"Œ" %
=
Œ"Œ"& '
$num
Œ"Œ"( )
;
Œ"Œ") *
if
–"–" 
(
–"–" 
m_LayoutGroup
–"–" !
!=
–"–"" $
null
–"–"% )
)
–"–") *
verticalPadding
—"—" #
=
—"—"$ %
m_LayoutGroup
—"—"& 3
.
—"—"3 4
padding
—"—"4 ;
.
—"—"; <
vertical
—"—"< D
;
—"—"D E
if
”"”" 
(
”"”" 
m_TextViewport
”"”" "
!=
”"”"# %
null
”"”"& *
)
”"”"* +
verticalPadding
‘"‘" #
+=
‘"‘"$ &
m_TextViewport
‘"‘"' 5
.
‘"‘"5 6
	offsetMin
‘"‘"6 ?
.
‘"‘"? @
y
‘"‘"@ A
-
‘"‘"B C
m_TextViewport
‘"‘"D R
.
‘"‘"R S
	offsetMax
‘"‘"S \
.
‘"‘"\ ]
y
‘"‘"] ^
;
‘"‘"^ _
return
÷"÷" 
m_TextComponent
÷"÷" &
.
÷"÷"& '
preferredHeight
÷"÷"' 6
+
÷"÷"7 8
verticalPadding
÷"÷"9 H
;
÷"÷"H I
}
◊"◊" 
}
ÿ"ÿ" 	
public
›"›" 
virtual
›"›" 
float
›"›" 
flexibleHeight
›"›" +
{
›"›", -
get
›"›". 1
{
›"›"2 3
return
›"›"4 :
-
›"›"; <
$num
›"›"< =
;
›"›"= >
}
›"›"? @
}
›"›"A B
public
‚"‚" 
virtual
‚"‚" 
int
‚"‚" 
layoutPriority
‚"‚" )
{
‚"‚"* +
get
‚"‚", /
{
‚"‚"0 1
return
‚"‚"2 8
$num
‚"‚"9 :
;
‚"‚": ;
}
‚"‚"< =
}
‚"‚"> ?
public
È"È" 
void
È"È"  
SetGlobalPointSize
È"È" &
(
È"È"& '
float
È"È"' ,
	pointSize
È"È"- 6
)
È"È"6 7
{
Í"Í" 	
TMP_Text
Î"Î" &
placeholderTextComponent
Î"Î" -
=
Î"Î". /
m_Placeholder
Î"Î"0 =
as
Î"Î"> @
TMP_Text
Î"Î"A I
;
Î"Î"I J
if
Ì"Ì" 
(
Ì"Ì" &
placeholderTextComponent
Ì"Ì" (
!=
Ì"Ì") +
null
Ì"Ì", 0
)
Ì"Ì"0 1&
placeholderTextComponent
Ì"Ì"2 J
.
Ì"Ì"J K
fontSize
Ì"Ì"K S
=
Ì"Ì"T U
	pointSize
Ì"Ì"V _
;
Ì"Ì"_ `
textComponent
Ó"Ó" 
.
Ó"Ó" 
fontSize
Ó"Ó" "
=
Ó"Ó"# $
	pointSize
Ó"Ó"% .
;
Ó"Ó". /
}
Ô"Ô" 	
public
ı"ı" 
void
ı"ı"  
SetGlobalFontAsset
ı"ı" &
(
ı"ı"& '
TMP_FontAsset
ı"ı"' 4
	fontAsset
ı"ı"5 >
)
ı"ı"> ?
{
ˆ"ˆ" 	
TMP_Text
˜"˜" &
placeholderTextComponent
˜"˜" -
=
˜"˜". /
m_Placeholder
˜"˜"0 =
as
˜"˜"> @
TMP_Text
˜"˜"A I
;
˜"˜"I J
if
˘"˘" 
(
˘"˘" &
placeholderTextComponent
˘"˘" (
!=
˘"˘") +
null
˘"˘", 0
)
˘"˘"0 1&
placeholderTextComponent
˘"˘"2 J
.
˘"˘"J K
font
˘"˘"K O
=
˘"˘"P Q
	fontAsset
˘"˘"R [
;
˘"˘"[ \
textComponent
˙"˙" 
.
˙"˙" 
font
˙"˙" 
=
˙"˙"  
	fontAsset
˙"˙"! *
;
˙"˙"* +
}
¸"¸" 	
}
˛"˛" 
static
Å#Å# 

class
Å#Å#  
SetPropertyUtility
Å#Å# #
{
Ç#Ç# 
public
É#É# 
static
É#É# 
bool
É#É# 
SetColor
É#É# #
(
É#É## $
ref
É#É#$ '
Color
É#É#( -
currentValue
É#É#. :
,
É#É#: ;
Color
É#É#< A
newValue
É#É#B J
)
É#É#J K
{
Ñ#Ñ# 	
if
Ö#Ö# 
(
Ö#Ö# 
currentValue
Ö#Ö# 
.
Ö#Ö# 
r
Ö#Ö# 
==
Ö#Ö# !
newValue
Ö#Ö#" *
.
Ö#Ö#* +
r
Ö#Ö#+ ,
&&
Ö#Ö#- /
currentValue
Ö#Ö#0 <
.
Ö#Ö#< =
g
Ö#Ö#= >
==
Ö#Ö#? A
newValue
Ö#Ö#B J
.
Ö#Ö#J K
g
Ö#Ö#K L
&&
Ö#Ö#M O
currentValue
Ö#Ö#P \
.
Ö#Ö#\ ]
b
Ö#Ö#] ^
==
Ö#Ö#_ a
newValue
Ö#Ö#b j
.
Ö#Ö#j k
b
Ö#Ö#k l
&&
Ö#Ö#m o
currentValue
Ö#Ö#p |
.
Ö#Ö#| }
a
Ö#Ö#} ~
==Ö#Ö# Å
newValueÖ#Ö#Ç ä
.Ö#Ö#ä ã
aÖ#Ö#ã å
)Ö#Ö#å ç
return
Ü#Ü# 
false
Ü#Ü# 
;
Ü#Ü# 
currentValue
à#à# 
=
à#à# 
newValue
à#à# #
;
à#à## $
return
â#â# 
true
â#â# 
;
â#â# 
}
ä#ä# 	
public
å#å# 
static
å#å# 
bool
å#å#  
SetEquatableStruct
å#å# -
<
å#å#- .
T
å#å#. /
>
å#å#/ 0
(
å#å#0 1
ref
å#å#1 4
T
å#å#5 6
currentValue
å#å#7 C
,
å#å#C D
T
å#å#E F
newValue
å#å#G O
)
å#å#O P
where
å#å#Q V
T
å#å#W X
:
å#å#Y Z

IEquatable
å#å#[ e
<
å#å#e f
T
å#å#f g
>
å#å#g h
{
ç#ç# 	
if
é#é# 
(
é#é# 
currentValue
é#é# 
.
é#é# 
Equals
é#é# #
(
é#é## $
newValue
é#é#$ ,
)
é#é#, -
)
é#é#- .
return
è#è# 
false
è#è# 
;
è#è# 
currentValue
ë#ë# 
=
ë#ë# 
newValue
ë#ë# #
;
ë#ë## $
return
í#í# 
true
í#í# 
;
í#í# 
}
ì#ì# 	
public
ï#ï# 
static
ï#ï# 
bool
ï#ï# 
	SetStruct
ï#ï# $
<
ï#ï#$ %
T
ï#ï#% &
>
ï#ï#& '
(
ï#ï#' (
ref
ï#ï#( +
T
ï#ï#, -
currentValue
ï#ï#. :
,
ï#ï#: ;
T
ï#ï#< =
newValue
ï#ï#> F
)
ï#ï#F G
where
ï#ï#H M
T
ï#ï#N O
:
ï#ï#P Q
struct
ï#ï#R X
{
ñ#ñ# 	
if
ó#ó# 
(
ó#ó# 
currentValue
ó#ó# 
.
ó#ó# 
Equals
ó#ó# #
(
ó#ó## $
newValue
ó#ó#$ ,
)
ó#ó#, -
)
ó#ó#- .
return
ò#ò# 
false
ò#ò# 
;
ò#ò# 
currentValue
ö#ö# 
=
ö#ö# 
newValue
ö#ö# #
;
ö#ö## $
return
õ#õ# 
true
õ#õ# 
;
õ#õ# 
}
ú#ú# 	
public
û#û# 
static
û#û# 
bool
û#û# 
SetClass
û#û# #
<
û#û## $
T
û#û#$ %
>
û#û#% &
(
û#û#& '
ref
û#û#' *
T
û#û#+ ,
currentValue
û#û#- 9
,
û#û#9 :
T
û#û#; <
newValue
û#û#= E
)
û#û#E F
where
û#û#G L
T
û#û#M N
:
û#û#O P
class
û#û#Q V
{
ü#ü# 	
if
†#†# 
(
†#†# 
(
†#†# 
currentValue
†#†# 
==
†#†#  
null
†#†#! %
&&
†#†#& (
newValue
†#†#) 1
==
†#†#2 4
null
†#†#5 9
)
†#†#9 :
||
†#†#; =
(
†#†#> ?
currentValue
†#†#? K
!=
†#†#L N
null
†#†#O S
&&
†#†#T V
currentValue
†#†#W c
.
†#†#c d
Equals
†#†#d j
(
†#†#j k
newValue
†#†#k s
)
†#†#s t
)
†#†#t u
)
†#†#u v
return
°#°# 
false
°#°# 
;
°#°# 
currentValue
£#£# 
=
£#£# 
newValue
£#£# #
;
£#£## $
return
§#§# 
true
§#§# 
;
§#§# 
}
•#•# 	
}
¶#¶# 
}ß#ß# ∫ä
bC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_FontAsset.cs
	namespace 	
TMPro
 
{ 
public 

enum 
AtlasPopulationMode #
{ 
Static 
= 
$num 
, 
Dynamic 
= 
$num 
, 
} 
[ 
Serializable 
] 
[ &
ExcludeFromPresetAttribute -
]- .
public 

class 
TMP_FontAsset 
:  
	TMP_Asset! *
{ 
public 
string 
version 
{   	
get!! 
{!! 
return!! 
	m_Version!! "
;!!" #
}!!$ %
internal"" 
set"" 
{"" 
	m_Version"" $
=""% &
value""' ,
;"", -
}"". /
}## 	
[$$ 	
SerializeField$$	 
]$$ 
private%% 
string%% 
	m_Version%%  
;%%  !
[** 	
SerializeField**	 
]** 
internal++ 
string++  
m_SourceFontFileGUID++ ,
;++, -
[11 	
SerializeField11	 
]11 
internal22 
Font22 &
m_SourceFontFile_EditorRef22 0
;220 1
public88 
Font88 
sourceFontFile88 "
{99 	
get:: 
{:: 
return:: 
m_SourceFontFile:: )
;::) *
}::+ ,
internal;; 
set;; 
{;; 
m_SourceFontFile;; +
=;;, -
value;;. 3
;;;3 4
};;5 6
}<< 	
[== 	
SerializeField==	 
]== 
private>> 
Font>> 
m_SourceFontFile>> %
;>>% &
public@@ 
AtlasPopulationMode@@ "
atlasPopulationMode@@# 6
{AA 	
getBB 
{BB 
returnBB !
m_AtlasPopulationModeBB .
;BB. /
}BB0 1
setDD 
{EE !
m_AtlasPopulationModeFF %
=FF& '
valueFF( -
;FF- .
ifII 
(II !
m_AtlasPopulationModeII )
==II* ,
AtlasPopulationModeII- @
.II@ A
StaticIIA G
)IIG H
m_SourceFontFileJJ $
=JJ% &
nullJJ' +
;JJ+ ,
elseKK 
ifKK 
(KK !
m_AtlasPopulationModeKK .
==KK/ 1
AtlasPopulationModeKK2 E
.KKE F
DynamicKKF M
)KKM N
m_SourceFontFileLL $
=LL% &&
m_SourceFontFile_EditorRefLL' A
;LLA B
}NN 
}OO 	
[PP 	
SerializeFieldPP	 
]PP 
privateQQ 
AtlasPopulationModeQQ #!
m_AtlasPopulationModeQQ$ 9
;QQ9 :
publicWW 
FaceInfoWW 
faceInfoWW  
{XX 	
getYY 
{YY 
returnYY 

m_FaceInfoYY #
;YY# $
}YY% &
setZZ 
{ZZ 

m_FaceInfoZZ 
=ZZ 
valueZZ $
;ZZ$ %
}ZZ& '
}[[ 	
[\\ 	
SerializeField\\	 
]\\ 
internal]] 
FaceInfo]] 

m_FaceInfo]] $
;]]$ %
publiccc 
Listcc 
<cc 
Glyphcc 
>cc 

glyphTablecc %
{dd 	
getee 
{ee 
returnee 
m_GlyphTableee %
;ee% &
}ee' (
internalff 
setff 
{ff 
m_GlyphTableff '
=ff( )
valueff* /
;ff/ 0
}ff1 2
}gg 	
[hh 	
SerializeFieldhh	 
]hh 
internalii 
Listii 
<ii 
Glyphii 
>ii 
m_GlyphTableii )
=ii* +
newii, /
Listii0 4
<ii4 5
Glyphii5 :
>ii: ;
(ii; <
)ii< =
;ii= >
publicnn 

Dictionarynn 
<nn 
uintnn 
,nn 
Glyphnn  %
>nn% &
glyphLookupTablenn' 7
{oo 	
getpp 
{qq 
ifrr 
(rr #
m_GlyphLookupDictionaryrr +
==rr, .
nullrr/ 3
)rr3 4#
ReadFontAssetDefinitionss +
(ss+ ,
)ss, -
;ss- .
returnuu #
m_GlyphLookupDictionaryuu .
;uu. /
}vv 
}ww 	
internalxx 

Dictionaryxx 
<xx 
uintxx  
,xx  !
Glyphxx" '
>xx' (#
m_GlyphLookupDictionaryxx) @
;xx@ A
public~~ 
List~~ 
<~~ 
TMP_Character~~ !
>~~! "
characterTable~~# 1
{ 	
get
ÄÄ 
{
ÄÄ 
return
ÄÄ 
m_CharacterTable
ÄÄ )
;
ÄÄ) *
}
ÄÄ+ ,
internal
ÅÅ 
set
ÅÅ 
{
ÅÅ 
m_CharacterTable
ÅÅ +
=
ÅÅ, -
value
ÅÅ. 3
;
ÅÅ3 4
}
ÅÅ5 6
}
ÇÇ 	
[
ÉÉ 	
SerializeField
ÉÉ	 
]
ÉÉ 
internal
ÑÑ 
List
ÑÑ 
<
ÑÑ 
TMP_Character
ÑÑ #
>
ÑÑ# $
m_CharacterTable
ÑÑ% 5
=
ÑÑ6 7
new
ÑÑ8 ;
List
ÑÑ< @
<
ÑÑ@ A
TMP_Character
ÑÑA N
>
ÑÑN O
(
ÑÑO P
)
ÑÑP Q
;
ÑÑQ R
public
ââ 

Dictionary
ââ 
<
ââ 
uint
ââ 
,
ââ 
TMP_Character
ââ  -
>
ââ- ."
characterLookupTable
ââ/ C
{
ää 	
get
ãã 
{
åå 
if
çç 
(
çç )
m_CharacterLookupDictionary
çç /
==
çç0 2
null
çç3 7
)
çç7 8%
ReadFontAssetDefinition
éé +
(
éé+ ,
)
éé, -
;
éé- .
return
ëë )
m_CharacterLookupDictionary
ëë 2
;
ëë2 3
}
íí 
}
ìì 	
internal
îî 

Dictionary
îî 
<
îî 
uint
îî  
,
îî  !
TMP_Character
îî" /
>
îî/ 0)
m_CharacterLookupDictionary
îî1 L
;
îîL M
public
¶¶ 
	Texture2D
¶¶ 
atlasTexture
¶¶ %
{
ßß 	
get
®® 
{
©© 
if
™™ 
(
™™ 
m_AtlasTexture
™™ "
==
™™# %
null
™™& *
)
™™* +
{
´´ 
m_AtlasTexture
¨¨ "
=
¨¨# $
atlasTextures
¨¨% 2
[
¨¨2 3
$num
¨¨3 4
]
¨¨4 5
;
¨¨5 6
}
≠≠ 
return
ØØ 
m_AtlasTexture
ØØ %
;
ØØ% &
}
∞∞ 
}
±± 	
internal
≤≤ 
	Texture2D
≤≤ 
m_AtlasTexture
≤≤ )
;
≤≤) *
public
∑∑ 
	Texture2D
∑∑ 
[
∑∑ 
]
∑∑ 
atlasTextures
∑∑ (
{
∏∏ 	
get
ππ 
{
∫∫ 
if
ªª 
(
ªª 
m_AtlasTextures
ªª #
==
ªª$ &
null
ªª' +
)
ªª+ ,
{
ºº 
}
ææ 
return
√√ 
m_AtlasTextures
√√ &
;
√√& '
}
ƒƒ 
set
∆∆ 
{
«« 
m_AtlasTextures
»» 
=
»»  !
value
»»" '
;
»»' (
}
…… 
}
   	
[
ÀÀ 	
SerializeField
ÀÀ	 
]
ÀÀ 
internal
ÃÃ 
	Texture2D
ÃÃ 
[
ÃÃ 
]
ÃÃ 
m_AtlasTextures
ÃÃ ,
;
ÃÃ, -
[
—— 	
SerializeField
——	 
]
—— 
internal
““ 
int
““ !
m_AtlasTextureIndex
““ (
;
““( )
public
◊◊ 
int
◊◊ 
atlasTextureCount
◊◊ $
{
◊◊% &
get
◊◊' *
{
◊◊+ ,
return
◊◊- 3!
m_AtlasTextureIndex
◊◊4 G
+
◊◊H I
$num
◊◊J K
;
◊◊K L
}
◊◊M N
}
◊◊O P
public
‹‹ 
bool
‹‹ )
isMultiAtlasTexturesEnabled
‹‹ /
{
›› 	
get
ﬁﬁ 
{
ﬁﬁ 
return
ﬁﬁ +
m_IsMultiAtlasTexturesEnabled
ﬁﬁ 6
;
ﬁﬁ6 7
}
ﬁﬁ8 9
set
ﬂﬂ 
{
ﬂﬂ +
m_IsMultiAtlasTexturesEnabled
ﬂﬂ /
=
ﬂﬂ0 1
value
ﬂﬂ2 7
;
ﬂﬂ7 8
}
ﬂﬂ9 :
}
‡‡ 	
[
‚‚ 	
SerializeField
‚‚	 
]
‚‚ 
private
„„ 
bool
„„ +
m_IsMultiAtlasTexturesEnabled
„„ 2
;
„„2 3
internal
ËË 
bool
ËË %
clearDynamicDataOnBuild
ËË -
{
ÈÈ 	
get
ÍÍ 
{
ÍÍ 
return
ÍÍ '
m_ClearDynamicDataOnBuild
ÍÍ 2
;
ÍÍ2 3
}
ÍÍ4 5
set
ÎÎ 
{
ÎÎ '
m_ClearDynamicDataOnBuild
ÎÎ +
=
ÎÎ, -
value
ÎÎ. 3
;
ÎÎ3 4
}
ÎÎ5 6
}
ÏÏ 	
[
ÌÌ 	
SerializeField
ÌÌ	 
]
ÌÌ 
private
ÓÓ 
bool
ÓÓ '
m_ClearDynamicDataOnBuild
ÓÓ .
;
ÓÓ. /
internal
ÛÛ 
List
ÛÛ 
<
ÛÛ 
	GlyphRect
ÛÛ 
>
ÛÛ  
usedGlyphRects
ÛÛ! /
{
ÙÙ 	
get
ıı 
{
ıı 
return
ıı 
m_UsedGlyphRects
ıı )
;
ıı) *
}
ıı+ ,
set
ˆˆ 
{
ˆˆ 
m_UsedGlyphRects
ˆˆ "
=
ˆˆ# $
value
ˆˆ% *
;
ˆˆ* +
}
ˆˆ, -
}
˜˜ 	
[
¯¯ 	
SerializeField
¯¯	 
]
¯¯ 
private
˘˘ 
List
˘˘ 
<
˘˘ 
	GlyphRect
˘˘ 
>
˘˘ 
m_UsedGlyphRects
˘˘  0
;
˘˘0 1
internal
˛˛ 
List
˛˛ 
<
˛˛ 
	GlyphRect
˛˛ 
>
˛˛  
freeGlyphRects
˛˛! /
{
ˇˇ 	
get
ÄÄ 
{
ÄÄ 
return
ÄÄ 
m_FreeGlyphRects
ÄÄ )
;
ÄÄ) *
}
ÄÄ+ ,
set
ÅÅ 
{
ÅÅ 
m_FreeGlyphRects
ÅÅ "
=
ÅÅ# $
value
ÅÅ% *
;
ÅÅ* +
}
ÅÅ, -
}
ÇÇ 	
[
ÉÉ 	
SerializeField
ÉÉ	 
]
ÉÉ 
private
ÑÑ 
List
ÑÑ 
<
ÑÑ 
	GlyphRect
ÑÑ 
>
ÑÑ 
m_FreeGlyphRects
ÑÑ  0
;
ÑÑ0 1
[
ää 
Obsolete
ää 
(
ää 
$strää Ñ
)ääÑ Ö
]ääÖ Ü
public
ãã 
FaceInfo_Legacy
ãã 
fontInfo
ãã '
{
åå 	
get
çç 
{
çç 
return
çç 

m_fontInfo
çç #
;
çç# $
}
çç% &
}
éé 	
[
êê 	
SerializeField
êê	 
]
êê 
private
ëë 
FaceInfo_Legacy
ëë 

m_fontInfo
ëë  *
=
ëë+ ,
null
ëë- 1
;
ëë1 2
[
ññ 	
SerializeField
ññ	 
]
ññ 
public
óó 
	Texture2D
óó 
atlas
óó 
;
óó 
public
úú 
int
úú 

atlasWidth
úú 
{
ùù 	
get
ûû 
{
ûû 
return
ûû 
m_AtlasWidth
ûû %
;
ûû% &
}
ûû' (
internal
üü 
set
üü 
{
üü 
m_AtlasWidth
üü '
=
üü( )
value
üü* /
;
üü/ 0
}
üü1 2
}
†† 	
[
°° 	
SerializeField
°°	 
]
°° 
internal
¢¢ 
int
¢¢ 
m_AtlasWidth
¢¢ !
;
¢¢! "
public
ßß 
int
ßß 
atlasHeight
ßß 
{
®® 	
get
©© 
{
©© 
return
©© 
m_AtlasHeight
©© &
;
©©& '
}
©©( )
internal
™™ 
set
™™ 
{
™™ 
m_AtlasHeight
™™ (
=
™™) *
value
™™+ 0
;
™™0 1
}
™™2 3
}
´´ 	
[
¨¨ 	
SerializeField
¨¨	 
]
¨¨ 
internal
≠≠ 
int
≠≠ 
m_AtlasHeight
≠≠ "
;
≠≠" #
public
≤≤ 
int
≤≤ 
atlasPadding
≤≤ 
{
≥≥ 	
get
¥¥ 
{
¥¥ 
return
¥¥ 
m_AtlasPadding
¥¥ '
;
¥¥' (
}
¥¥) *
internal
µµ 
set
µµ 
{
µµ 
m_AtlasPadding
µµ )
=
µµ* +
value
µµ, 1
;
µµ1 2
}
µµ3 4
}
∂∂ 	
[
∑∑ 	
SerializeField
∑∑	 
]
∑∑ 
internal
∏∏ 
int
∏∏ 
m_AtlasPadding
∏∏ #
;
∏∏# $
public
∫∫ 
GlyphRenderMode
∫∫ 
atlasRenderMode
∫∫ .
{
ªª 	
get
ºº 
{
ºº 
return
ºº 
m_AtlasRenderMode
ºº *
;
ºº* +
}
ºº, -
internal
ΩΩ 
set
ΩΩ 
{
ΩΩ 
m_AtlasRenderMode
ΩΩ ,
=
ΩΩ- .
value
ΩΩ/ 4
;
ΩΩ4 5
}
ΩΩ6 7
}
ææ 	
[
øø 	
SerializeField
øø	 
]
øø 
internal
¿¿ 
GlyphRenderMode
¿¿  
m_AtlasRenderMode
¿¿! 2
;
¿¿2 3
[
√√ 	
SerializeField
√√	 
]
√√ 
internal
ƒƒ 
List
ƒƒ 
<
ƒƒ 
	TMP_Glyph
ƒƒ 
>
ƒƒ  
m_glyphInfoList
ƒƒ! 0
;
ƒƒ0 1
[
∆∆ 	
SerializeField
∆∆	 
]
∆∆ 
[
«« 	"
FormerlySerializedAs
««	 
(
«« 
$str
«« -
)
««- .
]
««. /
internal
»» 
KerningTable
»» 
m_KerningTable
»» ,
=
»»- .
new
»»/ 2
KerningTable
»»3 ?
(
»»? @
)
»»@ A
;
»»A B
public
ÕÕ "
TMP_FontFeatureTable
ÕÕ #
fontFeatureTable
ÕÕ$ 4
{
ŒŒ 	
get
œœ 
{
œœ 
return
œœ  
m_FontFeatureTable
œœ +
;
œœ+ ,
}
œœ- .
internal
–– 
set
–– 
{
––  
m_FontFeatureTable
–– -
=
––. /
value
––0 5
;
––5 6
}
––7 8
}
—— 	
[
““ 	
SerializeField
““	 
]
““ 
internal
”” "
TMP_FontFeatureTable
”” % 
m_FontFeatureTable
””& 8
=
””9 :
new
””; >"
TMP_FontFeatureTable
””? S
(
””S T
)
””T U
;
””U V
[
÷÷ 	
SerializeField
÷÷	 
]
÷÷ 
private
ÿÿ 
List
ÿÿ 
<
ÿÿ 
TMP_FontAsset
ÿÿ "
>
ÿÿ" # 
fallbackFontAssets
ÿÿ$ 6
;
ÿÿ6 7
public
›› 
List
›› 
<
›› 
TMP_FontAsset
›› !
>
››! "$
fallbackFontAssetTable
››# 9
{
ﬁﬁ 	
get
ﬂﬂ 
{
ﬂﬂ 
return
ﬂﬂ &
m_FallbackFontAssetTable
ﬂﬂ 1
;
ﬂﬂ1 2
}
ﬂﬂ3 4
set
‡‡ 
{
‡‡ &
m_FallbackFontAssetTable
‡‡ *
=
‡‡+ ,
value
‡‡- 2
;
‡‡2 3
}
‡‡4 5
}
·· 	
[
‚‚ 	
SerializeField
‚‚	 
]
‚‚ 
internal
„„ 
List
„„ 
<
„„ 
TMP_FontAsset
„„ #
>
„„# $&
m_FallbackFontAssetTable
„„% =
;
„„= >
public
ËË '
FontAssetCreationSettings
ËË (
creationSettings
ËË) 9
{
ÈÈ 	
get
ÍÍ 
{
ÍÍ 
return
ÍÍ  
m_CreationSettings
ÍÍ +
;
ÍÍ+ ,
}
ÍÍ- .
set
ÎÎ 
{
ÎÎ  
m_CreationSettings
ÎÎ $
=
ÎÎ% &
value
ÎÎ' ,
;
ÎÎ, -
}
ÎÎ. /
}
ÏÏ 	
[
ÌÌ 	
SerializeField
ÌÌ	 
]
ÌÌ 
internal
ÓÓ '
FontAssetCreationSettings
ÓÓ * 
m_CreationSettings
ÓÓ+ =
;
ÓÓ= >
public
ÛÛ  
TMP_FontWeightPair
ÛÛ !
[
ÛÛ! "
]
ÛÛ" #
fontWeightTable
ÛÛ$ 3
{
ÙÙ 	
get
ıı 
{
ıı 
return
ıı 
m_FontWeightTable
ıı *
;
ıı* +
}
ıı, -
internal
ˆˆ 
set
ˆˆ 
{
ˆˆ 
m_FontWeightTable
ˆˆ ,
=
ˆˆ- .
value
ˆˆ/ 4
;
ˆˆ4 5
}
ˆˆ6 7
}
˜˜ 	
[
¯¯ 	
SerializeField
¯¯	 
]
¯¯ 
private
˘˘  
TMP_FontWeightPair
˘˘ "
[
˘˘" #
]
˘˘# $
m_FontWeightTable
˘˘% 6
=
˘˘7 8
new
˘˘9 < 
TMP_FontWeightPair
˘˘= O
[
˘˘O P
$num
˘˘P R
]
˘˘R S
;
˘˘S T
[
ÄÄ 	
SerializeField
ÄÄ	 
]
ÄÄ 
private
ÅÅ  
TMP_FontWeightPair
ÅÅ "
[
ÅÅ" #
]
ÅÅ# $
fontWeights
ÅÅ% 0
=
ÅÅ1 2
null
ÅÅ3 7
;
ÅÅ7 8
public
àà 
float
àà 
normalStyle
àà  
=
àà! "
$num
àà# $
;
àà$ %
public
çç 
float
çç !
normalSpacingOffset
çç (
=
çç) *
$num
çç+ ,
;
çç, -
public
íí 
float
íí 
	boldStyle
íí 
=
íí  
$num
íí! &
;
íí& '
public
óó 
float
óó 
boldSpacing
óó  
=
óó! "
$num
óó# %
;
óó% &
public
úú 
byte
úú 
italicStyle
úú 
=
úú  !
$num
úú" $
;
úú$ %
public
ûû 
byte
ûû 
tabSize
ûû 
=
ûû 
$num
ûû  
;
ûû  !
internal
†† 
bool
†† *
IsFontAssetLookupTablesDirty
†† 2
;
††2 3
private
££ 
static
££ 
ProfilerMarker
££ %-
k_ReadFontAssetDefinitionMarker
££& E
=
££F G
new
££H K
ProfilerMarker
££L Z
(
££Z [
$str
££[ x
)
££x y
;
££y z
private
§§ 
static
§§ 
ProfilerMarker
§§ %.
 k_AddSynthesizedCharactersMarker
§§& F
=
§§G H
new
§§I L
ProfilerMarker
§§M [
(
§§[ \
$str
§§\ z
)
§§z {
;
§§{ |
private
•• 
static
•• 
ProfilerMarker
•• %%
k_TryAddCharacterMarker
••& =
=
••> ?
new
••@ C
ProfilerMarker
••D R
(
••R S
$str
••S h
)
••h i
;
••i j
private
¶¶ 
static
¶¶ 
ProfilerMarker
¶¶ %&
k_TryAddCharactersMarker
¶¶& >
=
¶¶? @
new
¶¶A D
ProfilerMarker
¶¶E S
(
¶¶S T
$str
¶¶T j
)
¶¶j k
;
¶¶k l
private
ßß 
static
ßß 
ProfilerMarker
ßß %2
$k_UpdateGlyphAdjustmentRecordsMarker
ßß& J
=
ßßK L
new
ßßM P
ProfilerMarker
ßßQ _
(
ßß_ `
$strßß` Ç
)ßßÇ É
;ßßÉ Ñ
private
®® 
static
®® 
ProfilerMarker
®® %(
k_ClearFontAssetDataMarker
®®& @
=
®®A B
new
®®C F
ProfilerMarker
®®G U
(
®®U V
$str
®®V n
)
®®n o
;
®®o p
private
©© 
static
©© 
ProfilerMarker
©© %)
k_UpdateFontAssetDataMarker
©©& A
=
©©B C
new
©©D G
ProfilerMarker
©©H V
(
©©V W
$str
©©W p
)
©©p q
;
©©q r
public
∞∞ 
static
∞∞ 
TMP_FontAsset
∞∞ #
CreateFontAsset
∞∞$ 3
(
∞∞3 4
Font
∞∞4 8
font
∞∞9 =
)
∞∞= >
{
±± 	
return
≤≤ 
CreateFontAsset
≤≤ "
(
≤≤" #
font
≤≤# '
,
≤≤' (
$num
≤≤) +
,
≤≤+ ,
$num
≤≤- .
,
≤≤. /
GlyphRenderMode
≤≤0 ?
.
≤≤? @
SDFAA
≤≤@ E
,
≤≤E F
$num
≤≤G K
,
≤≤K L
$num
≤≤M Q
,
≤≤Q R!
AtlasPopulationMode
≤≤S f
.
≤≤f g
Dynamic
≤≤g n
)
≤≤n o
;
≤≤o p
}
≥≥ 	
public
¿¿ 
static
¿¿ 
TMP_FontAsset
¿¿ #
CreateFontAsset
¿¿$ 3
(
¿¿3 4
Font
¿¿4 8
font
¿¿9 =
,
¿¿= >
int
¿¿? B
samplingPointSize
¿¿C T
,
¿¿T U
int
¿¿V Y
atlasPadding
¿¿Z f
,
¿¿f g
GlyphRenderMode
¿¿h w

renderMode¿¿x Ç
,¿¿Ç É
int¿¿Ñ á

atlasWidth¿¿à í
,¿¿í ì
int¿¿î ó
atlasHeight¿¿ò £
,¿¿£ §#
AtlasPopulationMode¿¿• ∏#
atlasPopulationMode¿¿π Ã
=¿¿Õ Œ#
AtlasPopulationMode¿¿œ ‚
.¿¿‚ „
Dynamic¿¿„ Í
,¿¿Í Î
bool¿¿Ï '
enableMultiAtlasSupport¿¿Ò à
=¿¿â ä
true¿¿ã è
)¿¿è ê
{
¡¡ 	

FontEngine
√√ 
.
√√ "
InitializeFontEngine
√√ +
(
√√+ ,
)
√√, -
;
√√- .
if
∆∆ 
(
∆∆ 

FontEngine
∆∆ 
.
∆∆ 
LoadFontFace
∆∆ '
(
∆∆' (
font
∆∆( ,
,
∆∆, -
samplingPointSize
∆∆. ?
)
∆∆? @
!=
∆∆A C
FontEngineError
∆∆D S
.
∆∆S T
Success
∆∆T [
)
∆∆[ \
{
«« 
Debug
»» 
.
»» 

LogWarning
»»  
(
»»  !
$str
»»! A
+
»»B C
font
»»D H
.
»»H I
name
»»I M
+
»»N O
$str»»P ú
,»»ú ù
font»»û ¢
)»»¢ £
;»»£ §
return
…… 
null
…… 
;
…… 
}
   
TMP_FontAsset
ÕÕ 
	fontAsset
ÕÕ #
=
ÕÕ$ %
ScriptableObject
ÕÕ& 6
.
ÕÕ6 7
CreateInstance
ÕÕ7 E
<
ÕÕE F
TMP_FontAsset
ÕÕF S
>
ÕÕS T
(
ÕÕT U
)
ÕÕU V
;
ÕÕV W
	fontAsset
œœ 
.
œœ 
	m_Version
œœ 
=
œœ  !
$str
œœ" )
;
œœ) *
	fontAsset
–– 
.
–– 
faceInfo
–– 
=
––  

FontEngine
––! +
.
––+ ,
GetFaceInfo
––, 7
(
––7 8
)
––8 9
;
––9 :
if
”” 
(
”” !
atlasPopulationMode
”” #
==
””$ &!
AtlasPopulationMode
””' :
.
””: ;
Dynamic
””; B
)
””B C
	fontAsset
‘‘ 
.
‘‘ 
sourceFontFile
‘‘ (
=
‘‘) *
font
‘‘+ /
;
‘‘/ 0
string
ÿÿ 
guid
ÿÿ 
;
ÿÿ 
long
ŸŸ 
localID
ŸŸ 
;
ŸŸ 
UnityEditor
€€ 
.
€€ 
AssetDatabase
€€ %
.
€€% &.
 TryGetGUIDAndLocalFileIdentifier
€€& F
(
€€F G
font
€€G K
,
€€K L
out
€€M P
guid
€€Q U
,
€€U V
out
€€W Z
localID
€€[ b
)
€€b c
;
€€c d
	fontAsset
‹‹ 
.
‹‹ "
m_SourceFontFileGUID
‹‹ *
=
‹‹+ ,
guid
‹‹- 1
;
‹‹1 2
	fontAsset
›› 
.
›› (
m_SourceFontFile_EditorRef
›› 0
=
››1 2
font
››3 7
;
››7 8
	fontAsset
‡‡ 
.
‡‡ !
atlasPopulationMode
‡‡ )
=
‡‡* +!
atlasPopulationMode
‡‡, ?
;
‡‡? @
	fontAsset
‚‚ 
.
‚‚ 

atlasWidth
‚‚  
=
‚‚! "

atlasWidth
‚‚# -
;
‚‚- .
	fontAsset
„„ 
.
„„ 
atlasHeight
„„ !
=
„„" #
atlasHeight
„„$ /
;
„„/ 0
	fontAsset
‰‰ 
.
‰‰ 
atlasPadding
‰‰ "
=
‰‰# $
atlasPadding
‰‰% 1
;
‰‰1 2
	fontAsset
ÂÂ 
.
ÂÂ 
atlasRenderMode
ÂÂ %
=
ÂÂ& '

renderMode
ÂÂ( 2
;
ÂÂ2 3
	fontAsset
ËË 
.
ËË 
atlasTextures
ËË #
=
ËË$ %
new
ËË& )
	Texture2D
ËË* 3
[
ËË3 4
$num
ËË4 5
]
ËË5 6
;
ËË6 7
	Texture2D
ÎÎ 
texture
ÎÎ 
=
ÎÎ 
new
ÎÎ  #
	Texture2D
ÎÎ$ -
(
ÎÎ- .
$num
ÎÎ. /
,
ÎÎ/ 0
$num
ÎÎ1 2
,
ÎÎ2 3
TextureFormat
ÎÎ4 A
.
ÎÎA B
Alpha8
ÎÎB H
,
ÎÎH I
false
ÎÎJ O
)
ÎÎO P
;
ÎÎP Q
	fontAsset
ÏÏ 
.
ÏÏ 
atlasTextures
ÏÏ #
[
ÏÏ# $
$num
ÏÏ$ %
]
ÏÏ% &
=
ÏÏ' (
texture
ÏÏ) 0
;
ÏÏ0 1
	fontAsset
ÓÓ 
.
ÓÓ )
isMultiAtlasTexturesEnabled
ÓÓ 1
=
ÓÓ2 3%
enableMultiAtlasSupport
ÓÓ4 K
;
ÓÓK L
int
ÒÒ 
packingModifier
ÒÒ 
;
ÒÒ  
if
ÚÚ 
(
ÚÚ 
(
ÚÚ 
(
ÚÚ 
GlyphRasterModes
ÚÚ "
)
ÚÚ" #

renderMode
ÚÚ# -
&
ÚÚ. /
GlyphRasterModes
ÚÚ0 @
.
ÚÚ@ A 
RASTER_MODE_BITMAP
ÚÚA S
)
ÚÚS T
==
ÚÚU W
GlyphRasterModes
ÚÚX h
.
ÚÚh i 
RASTER_MODE_BITMAP
ÚÚi {
)
ÚÚ{ |
{
ÛÛ 
packingModifier
ÙÙ 
=
ÙÙ  !
$num
ÙÙ" #
;
ÙÙ# $
Material
˜˜ 
tmp_material
˜˜ %
=
˜˜& '
new
˜˜( +
Material
˜˜, 4
(
˜˜4 5
ShaderUtilities
˜˜5 D
.
˜˜D E$
ShaderRef_MobileBitmap
˜˜E [
)
˜˜[ \
;
˜˜\ ]
tmp_material
˙˙ 
.
˙˙ 

SetTexture
˙˙ '
(
˙˙' (
ShaderUtilities
˙˙( 7
.
˙˙7 8

ID_MainTex
˙˙8 B
,
˙˙B C
texture
˙˙D K
)
˙˙K L
;
˙˙L M
tmp_material
˚˚ 
.
˚˚ 
SetFloat
˚˚ %
(
˚˚% &
ShaderUtilities
˚˚& 5
.
˚˚5 6
ID_TextureWidth
˚˚6 E
,
˚˚E F

atlasWidth
˚˚G Q
)
˚˚Q R
;
˚˚R S
tmp_material
¸¸ 
.
¸¸ 
SetFloat
¸¸ %
(
¸¸% &
ShaderUtilities
¸¸& 5
.
¸¸5 6
ID_TextureHeight
¸¸6 F
,
¸¸F G
atlasHeight
¸¸H S
)
¸¸S T
;
¸¸T U
	fontAsset
˛˛ 
.
˛˛ 
material
˛˛ "
=
˛˛# $
tmp_material
˛˛% 1
;
˛˛1 2
}
ˇˇ 
else
ÄÄ 
{
ÅÅ 
packingModifier
ÇÇ 
=
ÇÇ  !
$num
ÇÇ" #
;
ÇÇ# $
Material
ÖÖ 
tmp_material
ÖÖ %
=
ÖÖ& '
new
ÖÖ( +
Material
ÖÖ, 4
(
ÖÖ4 5
ShaderUtilities
ÖÖ5 D
.
ÖÖD E!
ShaderRef_MobileSDF
ÖÖE X
)
ÖÖX Y
;
ÖÖY Z
tmp_material
àà 
.
àà 

SetTexture
àà '
(
àà' (
ShaderUtilities
àà( 7
.
àà7 8

ID_MainTex
àà8 B
,
ààB C
texture
ààD K
)
ààK L
;
ààL M
tmp_material
ââ 
.
ââ 
SetFloat
ââ %
(
ââ% &
ShaderUtilities
ââ& 5
.
ââ5 6
ID_TextureWidth
ââ6 E
,
ââE F

atlasWidth
ââG Q
)
ââQ R
;
ââR S
tmp_material
ää 
.
ää 
SetFloat
ää %
(
ää% &
ShaderUtilities
ää& 5
.
ää5 6
ID_TextureHeight
ää6 F
,
ääF G
atlasHeight
ääH S
)
ääS T
;
ääT U
tmp_material
åå 
.
åå 
SetFloat
åå %
(
åå% &
ShaderUtilities
åå& 5
.
åå5 6
ID_GradientScale
åå6 F
,
ååF G
atlasPadding
ååH T
+
ååU V
packingModifier
ååW f
)
ååf g
;
ååg h
tmp_material
éé 
.
éé 
SetFloat
éé %
(
éé% &
ShaderUtilities
éé& 5
.
éé5 6
ID_WeightNormal
éé6 E
,
ééE F
	fontAsset
ééG P
.
ééP Q
normalStyle
ééQ \
)
éé\ ]
;
éé] ^
tmp_material
èè 
.
èè 
SetFloat
èè %
(
èè% &
ShaderUtilities
èè& 5
.
èè5 6
ID_WeightBold
èè6 C
,
èèC D
	fontAsset
èèE N
.
èèN O
	boldStyle
èèO X
)
èèX Y
;
èèY Z
	fontAsset
ëë 
.
ëë 
material
ëë "
=
ëë# $
tmp_material
ëë% 1
;
ëë1 2
}
íí 
	fontAsset
îî 
.
îî 
freeGlyphRects
îî $
=
îî% &
new
îî' *
List
îî+ /
<
îî/ 0
	GlyphRect
îî0 9
>
îî9 :
(
îî: ;
$num
îî; <
)
îî< =
{
îî> ?
new
îî@ C
	GlyphRect
îîD M
(
îîM N
$num
îîN O
,
îîO P
$num
îîQ R
,
îîR S

atlasWidth
îîT ^
-
îî_ `
packingModifier
îîa p
,
îîp q
atlasHeight
îîr }
-
îî~ 
packingModifierîîÄ è
)îîè ê
}îîë í
;îîí ì
	fontAsset
ïï 
.
ïï 
usedGlyphRects
ïï $
=
ïï% &
new
ïï' *
List
ïï+ /
<
ïï/ 0
	GlyphRect
ïï0 9
>
ïï9 :
(
ïï: ;
$num
ïï; <
)
ïï< =
;
ïï= >
	fontAsset
ôô 
.
ôô %
ReadFontAssetDefinition
ôô -
(
ôô- .
)
ôô. /
;
ôô/ 0
return
õõ 
	fontAsset
õõ 
;
õõ 
}
úú 	
void
üü 
Awake
üü 
(
üü 
)
üü 
{
†† 	
if
¢¢ 
(
¢¢ 
this
¢¢ 
.
¢¢ 
material
¢¢ 
!=
¢¢  
null
¢¢! %
&&
¢¢& (
string
¢¢) /
.
¢¢/ 0
IsNullOrEmpty
¢¢0 =
(
¢¢= >
	m_Version
¢¢> G
)
¢¢G H
)
¢¢H I
UpgradeFontAsset
££  
(
££  !
)
££! "
;
££" #
}
§§ 	
private
ßß 
void
ßß 

OnValidate
ßß 
(
ßß  
)
ßß  !
{
®® 	
if
™™ 
(
™™ )
m_CharacterLookupDictionary
™™ +
==
™™, .
null
™™/ 3
||
™™4 6%
m_GlyphLookupDictionary
™™7 N
==
™™O Q
null
™™R V
)
™™V W%
ReadFontAssetDefinition
´´ '
(
´´' (
)
´´( )
;
´´) *
}
¨¨ 	
private
ØØ 
static
ØØ 
string
ØØ %
s_DefaultMaterialSuffix
ØØ 5
=
ØØ6 7
$str
ØØ8 I
;
ØØI J
public
±± 
void
±± %
ReadFontAssetDefinition
±± +
(
±±+ ,
)
±±, -
{
≤≤ 	-
k_ReadFontAssetDefinitionMarker
≥≥ +
.
≥≥+ ,
Begin
≥≥, 1
(
≥≥1 2
)
≥≥2 3
;
≥≥3 4
if
∏∏ 
(
∏∏ 
this
∏∏ 
.
∏∏ 
material
∏∏ 
!=
∏∏  
null
∏∏! %
&&
∏∏& (
string
∏∏) /
.
∏∏/ 0
IsNullOrEmpty
∏∏0 =
(
∏∏= >
	m_Version
∏∏> G
)
∏∏G H
)
∏∏H I
UpgradeFontAsset
ππ  
(
ππ  !
)
ππ! "
;
ππ" #.
 InitializeDictionaryLookupTables
ºº ,
(
ºº, -
)
ºº- .
;
ºº. /4
&AddSynthesizedCharactersAndFaceMetrics
øø 2
(
øø2 3
)
øø3 4
;
øø4 5
if
¬¬ 
(
¬¬ 

m_FaceInfo
¬¬ 
.
¬¬ 
scale
¬¬  
==
¬¬! #
$num
¬¬$ %
)
¬¬% &

m_FaceInfo
√√ 
.
√√ 
scale
√√  
=
√√! "
$num
√√# '
;
√√' (
if
∆∆ 
(
∆∆ 

m_FaceInfo
∆∆ 
.
∆∆ !
strikethroughOffset
∆∆ .
==
∆∆/ 1
$num
∆∆2 3
)
∆∆3 4

m_FaceInfo
«« 
.
«« !
strikethroughOffset
«« .
=
««/ 0

m_FaceInfo
««1 ;
.
««; <
capLine
««< C
/
««D E
$num
««F J
;
««J K
if
   
(
   
m_AtlasPadding
   
==
   !
$num
  " #
)
  # $
{
ÀÀ 
if
ÃÃ 
(
ÃÃ 
material
ÃÃ 
.
ÃÃ 
HasProperty
ÃÃ (
(
ÃÃ( )
ShaderUtilities
ÃÃ) 8
.
ÃÃ8 9
ID_GradientScale
ÃÃ9 I
)
ÃÃI J
)
ÃÃJ K
m_AtlasPadding
ÕÕ "
=
ÕÕ# $
(
ÕÕ% &
int
ÕÕ& )
)
ÕÕ) *
material
ÕÕ* 2
.
ÕÕ2 3
GetFloat
ÕÕ3 ;
(
ÕÕ; <
ShaderUtilities
ÕÕ< K
.
ÕÕK L
ID_GradientScale
ÕÕL \
)
ÕÕ\ ]
-
ÕÕ^ _
$num
ÕÕ` a
;
ÕÕa b
}
ŒŒ 
hashCode
—— 
=
—— 
TMP_TextUtilities
—— (
.
——( )
GetSimpleHashCode
——) :
(
——: ;
this
——; ?
.
——? @
name
——@ D
)
——D E
;
——E F
materialHashCode
‘‘ 
=
‘‘ 
TMP_TextUtilities
‘‘ 0
.
‘‘0 1
GetSimpleHashCode
‘‘1 B
(
‘‘B C
this
‘‘C G
.
‘‘G H
name
‘‘H L
+
‘‘M N%
s_DefaultMaterialSuffix
‘‘O f
)
‘‘f g
;
‘‘g h*
IsFontAssetLookupTablesDirty
ŸŸ (
=
ŸŸ) *
false
ŸŸ+ 0
;
ŸŸ0 1-
k_ReadFontAssetDefinitionMarker
€€ +
.
€€+ ,
End
€€, /
(
€€/ 0
)
€€0 1
;
€€1 2
}
‹‹ 	
internal
‚‚ 
void
‚‚ .
 InitializeDictionaryLookupTables
‚‚ 6
(
‚‚6 7
)
‚‚7 8
{
„„ 	-
InitializeGlyphLookupDictionary
ÂÂ +
(
ÂÂ+ ,
)
ÂÂ, -
;
ÂÂ- .1
#InitializeCharacterLookupDictionary
ËË /
(
ËË/ 0
)
ËË0 1
;
ËË1 2B
4InitializeGlyphPaidAdjustmentRecordsLookupDictionary
ÎÎ @
(
ÎÎ@ A
)
ÎÎA B
;
ÎÎB C
}
ÏÏ 	
internal
ÓÓ 
void
ÓÓ -
InitializeGlyphLookupDictionary
ÓÓ 5
(
ÓÓ5 6
)
ÓÓ6 7
{
ÔÔ 	
if
ÒÒ 
(
ÒÒ %
m_GlyphLookupDictionary
ÒÒ '
==
ÒÒ( *
null
ÒÒ+ /
)
ÒÒ/ 0%
m_GlyphLookupDictionary
ÚÚ '
=
ÚÚ( )
new
ÚÚ* -

Dictionary
ÚÚ. 8
<
ÚÚ8 9
uint
ÚÚ9 =
,
ÚÚ= >
Glyph
ÚÚ? D
>
ÚÚD E
(
ÚÚE F
)
ÚÚF G
;
ÚÚG H
else
ÛÛ %
m_GlyphLookupDictionary
ÙÙ '
.
ÙÙ' (
Clear
ÙÙ( -
(
ÙÙ- .
)
ÙÙ. /
;
ÙÙ/ 0
if
˜˜ 
(
˜˜ 
m_GlyphIndexList
˜˜  
==
˜˜! #
null
˜˜$ (
)
˜˜( )
m_GlyphIndexList
¯¯  
=
¯¯! "
new
¯¯# &
List
¯¯' +
<
¯¯+ ,
uint
¯¯, 0
>
¯¯0 1
(
¯¯1 2
)
¯¯2 3
;
¯¯3 4
else
˘˘ 
m_GlyphIndexList
˙˙  
.
˙˙  !
Clear
˙˙! &
(
˙˙& '
)
˙˙' (
;
˙˙( )
if
˝˝ 
(
˝˝ (
m_GlyphIndexListNewlyAdded
˝˝ *
==
˝˝+ -
null
˝˝. 2
)
˝˝2 3(
m_GlyphIndexListNewlyAdded
˛˛ *
=
˛˛+ ,
new
˛˛- 0
List
˛˛1 5
<
˛˛5 6
uint
˛˛6 :
>
˛˛: ;
(
˛˛; <
)
˛˛< =
;
˛˛= >
else
ˇˇ (
m_GlyphIndexListNewlyAdded
ÄÄ *
.
ÄÄ* +
Clear
ÄÄ+ 0
(
ÄÄ0 1
)
ÄÄ1 2
;
ÄÄ2 3
int
ÉÉ 

glyphCount
ÉÉ 
=
ÉÉ 
m_GlyphTable
ÉÉ )
.
ÉÉ) *
Count
ÉÉ* /
;
ÉÉ/ 0
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
i
ÜÜ 
<
ÜÜ 

glyphCount
ÜÜ  *
;
ÜÜ* +
i
ÜÜ, -
++
ÜÜ- /
)
ÜÜ/ 0
{
áá 
Glyph
àà 
glyph
àà 
=
àà 
m_GlyphTable
àà *
[
àà* +
i
àà+ ,
]
àà, -
;
àà- .
uint
ää 
index
ää 
=
ää 
glyph
ää "
.
ää" #
index
ää# (
;
ää( )
if
çç 
(
çç %
m_GlyphLookupDictionary
çç +
.
çç+ ,
ContainsKey
çç, 7
(
çç7 8
index
çç8 =
)
çç= >
==
çç? A
false
ççB G
)
ççG H
{
éé %
m_GlyphLookupDictionary
èè +
.
èè+ ,
Add
èè, /
(
èè/ 0
index
èè0 5
,
èè5 6
glyph
èè7 <
)
èè< =
;
èè= >
m_GlyphIndexList
êê $
.
êê$ %
Add
êê% (
(
êê( )
index
êê) .
)
êê. /
;
êê/ 0
}
ëë 
}
íí 
}
ìì 	
internal
ïï 
void
ïï 1
#InitializeCharacterLookupDictionary
ïï 9
(
ïï9 :
)
ïï: ;
{
ññ 	
if
òò 
(
òò )
m_CharacterLookupDictionary
òò +
==
òò, .
null
òò/ 3
)
òò3 4)
m_CharacterLookupDictionary
ôô +
=
ôô, -
new
ôô. 1

Dictionary
ôô2 <
<
ôô< =
uint
ôô= A
,
ôôA B
TMP_Character
ôôC P
>
ôôP Q
(
ôôQ R
)
ôôR S
;
ôôS T
else
öö )
m_CharacterLookupDictionary
õõ +
.
õõ+ ,
Clear
õõ, 1
(
õõ1 2
)
õõ2 3
;
õõ3 4
for
ûû 
(
ûû 
int
ûû 
i
ûû 
=
ûû 
$num
ûû 
;
ûû 
i
ûû 
<
ûû 
m_CharacterTable
ûû  0
.
ûû0 1
Count
ûû1 6
;
ûû6 7
i
ûû8 9
++
ûû9 ;
)
ûû; <
{
üü 
TMP_Character
†† 
	character
†† '
=
††( )
m_CharacterTable
††* :
[
††: ;
i
††; <
]
††< =
;
††= >
uint
¢¢ 
unicode
¢¢ 
=
¢¢ 
	character
¢¢ (
.
¢¢( )
unicode
¢¢) 0
;
¢¢0 1
uint
££ 

glyphIndex
££ 
=
££  !
	character
££" +
.
££+ ,

glyphIndex
££, 6
;
££6 7
if
¶¶ 
(
¶¶ )
m_CharacterLookupDictionary
¶¶ /
.
¶¶/ 0
ContainsKey
¶¶0 ;
(
¶¶; <
unicode
¶¶< C
)
¶¶C D
==
¶¶E G
false
¶¶H M
)
¶¶M N
{
ßß )
m_CharacterLookupDictionary
®® /
.
®®/ 0
Add
®®0 3
(
®®3 4
unicode
®®4 ;
,
®®; <
	character
®®= F
)
®®F G
;
®®G H
	character
©© 
.
©© 
	textAsset
©© '
=
©©( )
this
©©* .
;
©©. /
	character
™™ 
.
™™ 
glyph
™™ #
=
™™$ %%
m_GlyphLookupDictionary
™™& =
[
™™= >

glyphIndex
™™> H
]
™™H I
;
™™I J
}
´´ 
}
¨¨ 
if
ØØ 
(
ØØ '
FallbackSearchQueryLookup
ØØ )
==
ØØ* ,
null
ØØ- 1
)
ØØ1 2'
FallbackSearchQueryLookup
∞∞ )
=
∞∞* +
new
∞∞, /
HashSet
∞∞0 7
<
∞∞7 8
int
∞∞8 ;
>
∞∞; <
(
∞∞< =
)
∞∞= >
;
∞∞> ?
else
±± '
FallbackSearchQueryLookup
≤≤ )
.
≤≤) *
Clear
≤≤* /
(
≤≤/ 0
)
≤≤0 1
;
≤≤1 2
}
≥≥ 	
internal
µµ 
void
µµ B
4InitializeGlyphPaidAdjustmentRecordsLookupDictionary
µµ J
(
µµJ K
)
µµK L
{
∂∂ 	
if
∏∏ 
(
∏∏ 
m_KerningTable
∏∏ 
!=
∏∏ !
null
∏∏" &
&&
∏∏' )
m_KerningTable
∏∏* 8
.
∏∏8 9
kerningPairs
∏∏9 E
!=
∏∏F H
null
∏∏I M
&&
∏∏N P
m_KerningTable
∏∏Q _
.
∏∏_ `
kerningPairs
∏∏` l
.
∏∏l m
Count
∏∏m r
>
∏∏s t
$num
∏∏u v
)
∏∏v w;
-UpgradeGlyphAdjustmentTableToFontFeatureTable
ππ =
(
ππ= >
)
ππ> ?
;
ππ? @
if
ºº 
(
ºº  
m_FontFeatureTable
ºº "
.
ºº" #9
+m_GlyphPairAdjustmentRecordLookupDictionary
ºº# N
==
ººO Q
null
ººR V
)
ººV W 
m_FontFeatureTable
ΩΩ "
.
ΩΩ" #9
+m_GlyphPairAdjustmentRecordLookupDictionary
ΩΩ# N
=
ΩΩO P
new
ΩΩQ T

Dictionary
ΩΩU _
<
ΩΩ_ `
uint
ΩΩ` d
,
ΩΩd e,
TMP_GlyphPairAdjustmentRecordΩΩf É
>ΩΩÉ Ñ
(ΩΩÑ Ö
)ΩΩÖ Ü
;ΩΩÜ á
else
ææ  
m_FontFeatureTable
øø "
.
øø" #9
+m_GlyphPairAdjustmentRecordLookupDictionary
øø# N
.
øøN O
Clear
øøO T
(
øøT U
)
øøU V
;
øøV W
List
¡¡ 
<
¡¡ +
TMP_GlyphPairAdjustmentRecord
¡¡ .
>
¡¡. /(
glyphPairAdjustmentRecords
¡¡0 J
=
¡¡K L 
m_FontFeatureTable
¡¡M _
.
¡¡_ `*
m_GlyphPairAdjustmentRecords
¡¡` |
;
¡¡| }
if
¬¬ 
(
¬¬ (
glyphPairAdjustmentRecords
¬¬ *
!=
¬¬+ -
null
¬¬. 2
)
¬¬2 3
{
√√ 
for
ƒƒ 
(
ƒƒ 
int
ƒƒ 
i
ƒƒ 
=
ƒƒ 
$num
ƒƒ 
;
ƒƒ 
i
ƒƒ  !
<
ƒƒ" #(
glyphPairAdjustmentRecords
ƒƒ$ >
.
ƒƒ> ?
Count
ƒƒ? D
;
ƒƒD E
i
ƒƒF G
++
ƒƒG I
)
ƒƒI J
{
≈≈ +
TMP_GlyphPairAdjustmentRecord
∆∆ 1
record
∆∆2 8
=
∆∆9 :(
glyphPairAdjustmentRecords
∆∆; U
[
∆∆U V
i
∆∆V W
]
∆∆W X
;
∆∆X Y
uint
»» 
key
»» 
=
»» 
new
»» "
GlyphPairKey
»»# /
(
»»/ 0
record
»»0 6
)
»»6 7
.
»»7 8
key
»»8 ;
;
»»; <
if
   
(
   
!
    
m_FontFeatureTable
   +
.
  + ,9
+m_GlyphPairAdjustmentRecordLookupDictionary
  , W
.
  W X
ContainsKey
  X c
(
  c d
key
  d g
)
  g h
)
  h i 
m_FontFeatureTable
ÀÀ *
.
ÀÀ* +9
+m_GlyphPairAdjustmentRecordLookupDictionary
ÀÀ+ V
.
ÀÀV W
Add
ÀÀW Z
(
ÀÀZ [
key
ÀÀ[ ^
,
ÀÀ^ _
record
ÀÀ` f
)
ÀÀf g
;
ÀÀg h
}
ÃÃ 
}
ÕÕ 
}
ŒŒ 	
internal
–– 
void
–– 4
&AddSynthesizedCharactersAndFaceMetrics
–– <
(
––< =
)
––= >
{
—— 	.
 k_AddSynthesizedCharactersMarker
““ ,
.
““, -
Begin
““- 2
(
““2 3
)
““3 4
;
““4 5
bool
‘‘ 
isFontFaceLoaded
‘‘ !
=
‘‘" #
false
‘‘$ )
;
‘‘) *
if
÷÷ 
(
÷÷ #
m_AtlasPopulationMode
÷÷ %
==
÷÷& (!
AtlasPopulationMode
÷÷) <
.
÷÷< =
Dynamic
÷÷= D
)
÷÷D E
isFontFaceLoaded
◊◊  
=
◊◊! "

FontEngine
◊◊# -
.
◊◊- .
LoadFontFace
◊◊. :
(
◊◊: ;
sourceFontFile
◊◊; I
,
◊◊I J

m_FaceInfo
◊◊K U
.
◊◊U V
	pointSize
◊◊V _
)
◊◊_ `
==
◊◊a c
FontEngineError
◊◊d s
.
◊◊s t
Success
◊◊t {
;
◊◊{ |%
AddSynthesizedCharacter
›› #
(
››# $
$num
››$ (
,
››( )
isFontFaceLoaded
››* :
,
››: ;
true
››< @
)
››@ A
;
››A B%
AddSynthesizedCharacter
‡‡ #
(
‡‡# $
$num
‡‡$ (
,
‡‡( )
isFontFaceLoaded
‡‡* :
,
‡‡: ;
true
‡‡< @
)
‡‡@ A
;
‡‡A B%
AddSynthesizedCharacter
„„ #
(
„„# $
$num
„„$ (
,
„„( )
isFontFaceLoaded
„„* :
)
„„: ;
;
„„; <%
AddSynthesizedCharacter
ÊÊ #
(
ÊÊ# $
$num
ÊÊ$ (
,
ÊÊ( )
isFontFaceLoaded
ÊÊ* :
)
ÊÊ: ;
;
ÊÊ; <%
AddSynthesizedCharacter
ÈÈ #
(
ÈÈ# $
$num
ÈÈ$ (
,
ÈÈ( )
isFontFaceLoaded
ÈÈ* :
)
ÈÈ: ;
;
ÈÈ; <%
AddSynthesizedCharacter
ÏÏ #
(
ÏÏ# $
$num
ÏÏ$ *
,
ÏÏ* +
isFontFaceLoaded
ÏÏ, <
)
ÏÏ< =
;
ÏÏ= >%
AddSynthesizedCharacter
ÔÔ #
(
ÔÔ# $
$num
ÔÔ$ *
,
ÔÔ* +
isFontFaceLoaded
ÔÔ, <
)
ÔÔ< =
;
ÔÔ= >%
AddSynthesizedCharacter
ÚÚ #
(
ÚÚ# $
$num
ÚÚ$ *
,
ÚÚ* +
isFontFaceLoaded
ÚÚ, <
)
ÚÚ< =
;
ÚÚ= >%
AddSynthesizedCharacter
ıı #
(
ıı# $
$num
ıı$ *
,
ıı* +
isFontFaceLoaded
ıı, <
)
ıı< =
;
ıı= >%
AddSynthesizedCharacter
¯¯ #
(
¯¯# $
$num
¯¯$ *
,
¯¯* +
isFontFaceLoaded
¯¯, <
)
¯¯< =
;
¯¯= >%
AddSynthesizedCharacter
˚˚ #
(
˚˚# $
$num
˚˚$ *
,
˚˚* +
isFontFaceLoaded
˚˚, <
)
˚˚< =
;
˚˚= >%
AddSynthesizedCharacter
˛˛ #
(
˛˛# $
$num
˛˛$ *
,
˛˛* +
isFontFaceLoaded
˛˛, <
)
˛˛< =
;
˛˛= >
if
ÅÅ 
(
ÅÅ 

m_FaceInfo
ÅÅ 
.
ÅÅ 
capLine
ÅÅ "
==
ÅÅ# %
$num
ÅÅ& '
&&
ÅÅ( *)
m_CharacterLookupDictionary
ÅÅ+ F
.
ÅÅF G
ContainsKey
ÅÅG R
(
ÅÅR S
$char
ÅÅS V
)
ÅÅV W
)
ÅÅW X
{
ÇÇ 
uint
ÉÉ 

glyphIndex
ÉÉ 
=
ÉÉ  !)
m_CharacterLookupDictionary
ÉÉ" =
[
ÉÉ= >
$char
ÉÉ> A
]
ÉÉA B
.
ÉÉB C

glyphIndex
ÉÉC M
;
ÉÉM N

m_FaceInfo
ÑÑ 
.
ÑÑ 
capLine
ÑÑ "
=
ÑÑ# $%
m_GlyphLookupDictionary
ÑÑ% <
[
ÑÑ< =

glyphIndex
ÑÑ= G
]
ÑÑG H
.
ÑÑH I
metrics
ÑÑI P
.
ÑÑP Q 
horizontalBearingY
ÑÑQ c
;
ÑÑc d
}
ÖÖ 
if
àà 
(
àà 

m_FaceInfo
àà 
.
àà 
meanLine
àà #
==
àà$ &
$num
àà' (
&&
àà) +)
m_CharacterLookupDictionary
àà, G
.
ààG H
ContainsKey
ààH S
(
ààS T
$char
ààT W
)
ààW X
)
ààX Y
{
ââ 
uint
ää 

glyphIndex
ää 
=
ää  !)
m_CharacterLookupDictionary
ää" =
[
ää= >
$char
ää> A
]
ääA B
.
ääB C

glyphIndex
ääC M
;
ääM N

m_FaceInfo
ãã 
.
ãã 
meanLine
ãã #
=
ãã$ %%
m_GlyphLookupDictionary
ãã& =
[
ãã= >

glyphIndex
ãã> H
]
ããH I
.
ããI J
metrics
ããJ Q
.
ããQ R 
horizontalBearingY
ããR d
;
ããd e
}
åå .
 k_AddSynthesizedCharactersMarker
éé ,
.
éé, -
End
éé- 0
(
éé0 1
)
éé1 2
;
éé2 3
}
èè 	
void
ëë %
AddSynthesizedCharacter
ëë $
(
ëë$ %
uint
ëë% )
unicode
ëë* 1
,
ëë1 2
bool
ëë3 7
isFontFaceLoaded
ëë8 H
,
ëëH I
bool
ëëJ N
addImmediately
ëëO ]
=
ëë^ _
false
ëë` e
)
ëëe f
{
íí 	
if
îî 
(
îî )
m_CharacterLookupDictionary
îî +
.
îî+ ,
ContainsKey
îî, 7
(
îî7 8
unicode
îî8 ?
)
îî? @
)
îî@ A
return
ïï 
;
ïï 
Glyph
óó 
glyph
óó 
;
óó 
if
ôô 
(
ôô 
isFontFaceLoaded
ôô  
)
ôô  !
{
öö 
if
úú 
(
úú 

FontEngine
úú 
.
úú 
GetGlyphIndex
úú ,
(
úú, -
unicode
úú- 4
)
úú4 5
!=
úú6 8
$num
úú9 :
)
úú: ;
{
ùù 
if
ûû 
(
ûû 
addImmediately
ûû &
==
ûû' )
false
ûû* /
)
ûû/ 0
return
üü 
;
üü 
GlyphLoadFlags
££ "
glyphLoadFlags
££# 1
=
££2 3
(
££4 5
(
££5 6
GlyphRasterModes
££6 F
)
££F G
m_AtlasRenderMode
££G X
&
££Y Z
GlyphRasterModes
££[ k
.
££k l%
RASTER_MODE_NO_HINTING££l Ç
)££Ç É
==££Ñ Ü 
GlyphRasterModes££á ó
.££ó ò&
RASTER_MODE_NO_HINTING££ò Æ
?
§§ 
GlyphLoadFlags
§§ (
.
§§( )
LOAD_NO_BITMAP
§§) 7
|
§§8 9
GlyphLoadFlags
§§: H
.
§§H I
LOAD_NO_HINTING
§§I X
:
•• 
GlyphLoadFlags
•• (
.
••( )
LOAD_NO_BITMAP
••) 7
;
••7 8
if
ßß 
(
ßß 

FontEngine
ßß "
.
ßß" #)
TryGetGlyphWithUnicodeValue
ßß# >
(
ßß> ?
unicode
ßß? F
,
ßßF G
glyphLoadFlags
ßßH V
,
ßßV W
out
ßßX [
glyph
ßß\ a
)
ßßa b
)
ßßb c)
m_CharacterLookupDictionary
®® 3
.
®®3 4
Add
®®4 7
(
®®7 8
unicode
®®8 ?
,
®®? @
new
®®A D
TMP_Character
®®E R
(
®®R S
unicode
®®S Z
,
®®Z [
this
®®\ `
,
®®` a
glyph
®®b g
)
®®g h
)
®®h i
;
®®i j
return
™™ 
;
™™ 
}
´´ 
}
¨¨ 
glyph
±± 
=
±± 
new
±± 
Glyph
±± 
(
±± 
$num
±± 
,
±±  
new
±±! $
GlyphMetrics
±±% 1
(
±±1 2
$num
±±2 3
,
±±3 4
$num
±±5 6
,
±±6 7
$num
±±8 9
,
±±9 :
$num
±±; <
,
±±< =
$num
±±> ?
)
±±? @
,
±±@ A
	GlyphRect
±±B K
.
±±K L
zero
±±L P
,
±±P Q
$num
±±R V
,
±±V W
$num
±±X Y
)
±±Y Z
;
±±Z [)
m_CharacterLookupDictionary
≤≤ '
.
≤≤' (
Add
≤≤( +
(
≤≤+ ,
unicode
≤≤, 3
,
≤≤3 4
new
≤≤5 8
TMP_Character
≤≤9 F
(
≤≤F G
unicode
≤≤G N
,
≤≤N O
this
≤≤P T
,
≤≤T U
glyph
≤≤V [
)
≤≤[ \
)
≤≤\ ]
;
≤≤] ^
}
≥≥ 	
internal
µµ 
HashSet
µµ 
<
µµ 
int
µµ 
>
µµ '
FallbackSearchQueryLookup
µµ 7
=
µµ8 9
new
µµ: =
HashSet
µµ> E
<
µµE F
int
µµF I
>
µµI J
(
µµJ K
)
µµK L
;
µµL M
internal
∑∑ 
void
∑∑ '
AddCharacterToLookupCache
∑∑ /
(
∑∑/ 0
uint
∑∑0 4
unicode
∑∑5 <
,
∑∑< =
TMP_Character
∑∑> K
	character
∑∑L U
)
∑∑U V
{
∏∏ 	)
m_CharacterLookupDictionary
ππ '
.
ππ' (
Add
ππ( +
(
ππ+ ,
unicode
ππ, 3
,
ππ3 4
	character
ππ5 >
)
ππ> ?
;
ππ? @'
FallbackSearchQueryLookup
ºº %
.
ºº% &
Add
ºº& )
(
ºº) *
	character
ºº* 3
.
ºº3 4
	textAsset
ºº4 =
.
ºº= >

instanceID
ºº> H
)
ººH I
;
ººI J
}
ΩΩ 	
internal
¬¬ 
void
¬¬  
SortCharacterTable
¬¬ (
(
¬¬( )
)
¬¬) *
{
√√ 	
if
ƒƒ 
(
ƒƒ 
m_CharacterTable
ƒƒ  
!=
ƒƒ! #
null
ƒƒ$ (
&&
ƒƒ) +
m_CharacterTable
ƒƒ, <
.
ƒƒ< =
Count
ƒƒ= B
>
ƒƒC D
$num
ƒƒE F
)
ƒƒF G
m_CharacterTable
≈≈  
=
≈≈! "
m_CharacterTable
≈≈# 3
.
≈≈3 4
OrderBy
≈≈4 ;
(
≈≈; <
c
≈≈< =
=>
≈≈> @
c
≈≈A B
.
≈≈B C
unicode
≈≈C J
)
≈≈J K
.
≈≈K L
ToList
≈≈L R
(
≈≈R S
)
≈≈S T
;
≈≈T U
}
∆∆ 	
internal
ÀÀ 
void
ÀÀ 
SortGlyphTable
ÀÀ $
(
ÀÀ$ %
)
ÀÀ% &
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
m_GlyphTable
ÕÕ 
!=
ÕÕ 
null
ÕÕ  $
&&
ÕÕ% '
m_GlyphTable
ÕÕ( 4
.
ÕÕ4 5
Count
ÕÕ5 :
>
ÕÕ; <
$num
ÕÕ= >
)
ÕÕ> ?
m_GlyphTable
ŒŒ 
=
ŒŒ 
m_GlyphTable
ŒŒ +
.
ŒŒ+ ,
OrderBy
ŒŒ, 3
(
ŒŒ3 4
c
ŒŒ4 5
=>
ŒŒ6 8
c
ŒŒ9 :
.
ŒŒ: ;
index
ŒŒ; @
)
ŒŒ@ A
.
ŒŒA B
ToList
ŒŒB H
(
ŒŒH I
)
ŒŒI J
;
ŒŒJ K
}
œœ 	
internal
—— 
void
—— "
SortFontFeatureTable
—— *
(
——* +
)
——+ ,
{
““ 	 
m_FontFeatureTable
”” 
.
”” ,
SortGlyphPairAdjustmentRecords
”” =
(
””= >
)
””> ?
;
””? @
}
‘‘ 	
internal
ŸŸ 
void
ŸŸ 
SortAllTables
ŸŸ #
(
ŸŸ# $
)
ŸŸ$ %
{
⁄⁄ 	
SortGlyphTable
€€ 
(
€€ 
)
€€ 
;
€€  
SortCharacterTable
‹‹ 
(
‹‹ 
)
‹‹  
;
‹‹  !"
SortFontFeatureTable
››  
(
››  !
)
››! "
;
››" #
}
ﬁﬁ 	
private
„„ 
static
„„ 
HashSet
„„ 
<
„„ 
int
„„ "
>
„„" #'
k_SearchedFontAssetLookup
„„$ =
;
„„= >
public
ÍÍ 
bool
ÍÍ 
HasCharacter
ÍÍ  
(
ÍÍ  !
int
ÍÍ! $
	character
ÍÍ% .
)
ÍÍ. /
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ )
m_CharacterLookupDictionary
ÏÏ +
==
ÏÏ, .
null
ÏÏ/ 3
)
ÏÏ3 4
return
ÌÌ 
false
ÌÌ 
;
ÌÌ 
return
ÔÔ )
m_CharacterLookupDictionary
ÔÔ .
.
ÔÔ. /
ContainsKey
ÔÔ/ :
(
ÔÔ: ;
(
ÔÔ; <
uint
ÔÔ< @
)
ÔÔ@ A
	character
ÔÔA J
)
ÔÔJ K
;
ÔÔK L
}
 	
public
˘˘ 
bool
˘˘ 
HasCharacter
˘˘  
(
˘˘  !
char
˘˘! %
	character
˘˘& /
,
˘˘/ 0
bool
˘˘1 5
searchFallbacks
˘˘6 E
=
˘˘F G
false
˘˘H M
,
˘˘M N
bool
˘˘O S
tryAddCharacter
˘˘T c
=
˘˘d e
false
˘˘f k
)
˘˘k l
{
˙˙ 	
if
¸¸ 
(
¸¸ )
m_CharacterLookupDictionary
¸¸ +
==
¸¸, .
null
¸¸/ 3
)
¸¸3 4
{
˝˝ %
ReadFontAssetDefinition
˛˛ '
(
˛˛' (
)
˛˛( )
;
˛˛) *
if
ÄÄ 
(
ÄÄ )
m_CharacterLookupDictionary
ÄÄ /
==
ÄÄ0 2
null
ÄÄ3 7
)
ÄÄ7 8
return
ÅÅ 
false
ÅÅ  
;
ÅÅ  !
}
ÇÇ 
if
ÖÖ 
(
ÖÖ )
m_CharacterLookupDictionary
ÖÖ +
.
ÖÖ+ ,
ContainsKey
ÖÖ, 7
(
ÖÖ7 8
	character
ÖÖ8 A
)
ÖÖA B
)
ÖÖB C
return
ÜÜ 
true
ÜÜ 
;
ÜÜ 
if
ââ 
(
ââ 
tryAddCharacter
ââ 
&&
ââ  "#
m_AtlasPopulationMode
ââ# 8
==
ââ9 ;!
AtlasPopulationMode
ââ< O
.
ââO P
Dynamic
ââP W
)
ââW X
{
ää 
TMP_Character
ãã 
returnedCharacter
ãã /
;
ãã/ 0
if
çç 
(
çç %
TryAddCharacterInternal
çç +
(
çç+ ,
	character
çç, 5
,
çç5 6
out
çç7 :
returnedCharacter
çç; L
)
ççL M
)
ççM N
return
éé 
true
éé 
;
éé  
}
èè 
if
ëë 
(
ëë 
searchFallbacks
ëë 
)
ëë  
{
íí 
if
îî 
(
îî '
k_SearchedFontAssetLookup
îî -
==
îî. 0
null
îî1 5
)
îî5 6'
k_SearchedFontAssetLookup
ïï -
=
ïï. /
new
ïï0 3
HashSet
ïï4 ;
<
ïï; <
int
ïï< ?
>
ïï? @
(
ïï@ A
)
ïïA B
;
ïïB C
else
ññ '
k_SearchedFontAssetLookup
óó -
.
óó- .
Clear
óó. 3
(
óó3 4
)
óó4 5
;
óó5 6'
k_SearchedFontAssetLookup
öö )
.
öö) *
Add
öö* -
(
öö- .
GetInstanceID
öö. ;
(
öö; <
)
öö< =
)
öö= >
;
öö> ?
if
ùù 
(
ùù $
fallbackFontAssetTable
ùù *
!=
ùù+ -
null
ùù. 2
&&
ùù3 5$
fallbackFontAssetTable
ùù6 L
.
ùùL M
Count
ùùM R
>
ùùS T
$num
ùùU V
)
ùùV W
{
ûû 
for
üü 
(
üü 
int
üü 
i
üü 
=
üü  
$num
üü! "
;
üü" #
i
üü$ %
<
üü& '$
fallbackFontAssetTable
üü( >
.
üü> ?
Count
üü? D
&&
üüE G$
fallbackFontAssetTable
üüH ^
[
üü^ _
i
üü_ `
]
üü` a
!=
üüb d
null
üüe i
;
üüi j
i
üük l
++
üül n
)
üün o
{
†† 
TMP_FontAsset
°° %
fallback
°°& .
=
°°/ 0$
fallbackFontAssetTable
°°1 G
[
°°G H
i
°°H I
]
°°I J
;
°°J K
int
¢¢ 

fallbackID
¢¢ &
=
¢¢' (
fallback
¢¢) 1
.
¢¢1 2
GetInstanceID
¢¢2 ?
(
¢¢? @
)
¢¢@ A
;
¢¢A B
if
•• 
(
•• '
k_SearchedFontAssetLookup
•• 5
.
••5 6
Add
••6 9
(
••9 :

fallbackID
••: D
)
••D E
)
••E F
{
¶¶ 
if
ßß 
(
ßß  
fallback
ßß  (
.
ßß( )#
HasCharacter_Internal
ßß) >
(
ßß> ?
	character
ßß? H
,
ßßH I
true
ßßJ N
,
ßßN O
tryAddCharacter
ßßP _
)
ßß_ `
)
ßß` a
return
®®  &
true
®®' +
;
®®+ ,
}
©© 
}
™™ 
}
´´ 
if
ÆÆ 
(
ÆÆ 
TMP_Settings
ÆÆ  
.
ÆÆ  ! 
fallbackFontAssets
ÆÆ! 3
!=
ÆÆ4 6
null
ÆÆ7 ;
&&
ÆÆ< >
TMP_Settings
ÆÆ? K
.
ÆÆK L 
fallbackFontAssets
ÆÆL ^
.
ÆÆ^ _
Count
ÆÆ_ d
>
ÆÆe f
$num
ÆÆg h
)
ÆÆh i
{
ØØ 
for
∞∞ 
(
∞∞ 
int
∞∞ 
i
∞∞ 
=
∞∞  
$num
∞∞! "
;
∞∞" #
i
∞∞$ %
<
∞∞& '
TMP_Settings
∞∞( 4
.
∞∞4 5 
fallbackFontAssets
∞∞5 G
.
∞∞G H
Count
∞∞H M
&&
∞∞N P
TMP_Settings
∞∞Q ]
.
∞∞] ^ 
fallbackFontAssets
∞∞^ p
[
∞∞p q
i
∞∞q r
]
∞∞r s
!=
∞∞t v
null
∞∞w {
;
∞∞{ |
i
∞∞} ~
++∞∞~ Ä
)∞∞Ä Å
{
±± 
TMP_FontAsset
≤≤ %
fallback
≤≤& .
=
≤≤/ 0
TMP_Settings
≤≤1 =
.
≤≤= > 
fallbackFontAssets
≤≤> P
[
≤≤P Q
i
≤≤Q R
]
≤≤R S
;
≤≤S T
int
≥≥ 

fallbackID
≥≥ &
=
≥≥' (
fallback
≥≥) 1
.
≥≥1 2
GetInstanceID
≥≥2 ?
(
≥≥? @
)
≥≥@ A
;
≥≥A B
if
∂∂ 
(
∂∂ '
k_SearchedFontAssetLookup
∂∂ 5
.
∂∂5 6
Add
∂∂6 9
(
∂∂9 :

fallbackID
∂∂: D
)
∂∂D E
)
∂∂E F
{
∑∑ 
if
∏∏ 
(
∏∏  
fallback
∏∏  (
.
∏∏( )#
HasCharacter_Internal
∏∏) >
(
∏∏> ?
	character
∏∏? H
,
∏∏H I
true
∏∏J N
,
∏∏N O
tryAddCharacter
∏∏P _
)
∏∏_ `
)
∏∏` a
return
ππ  &
true
ππ' +
;
ππ+ ,
}
∫∫ 
}
ªª 
}
ºº 
if
øø 
(
øø 
TMP_Settings
øø  
.
øø  !
defaultFontAsset
øø! 1
!=
øø2 4
null
øø5 9
)
øø9 :
{
¿¿ 
TMP_FontAsset
¡¡ !
fallback
¡¡" *
=
¡¡+ ,
TMP_Settings
¡¡- 9
.
¡¡9 :
defaultFontAsset
¡¡: J
;
¡¡J K
int
¬¬ 

fallbackID
¬¬ "
=
¬¬# $
fallback
¬¬% -
.
¬¬- .
GetInstanceID
¬¬. ;
(
¬¬; <
)
¬¬< =
;
¬¬= >
if
≈≈ 
(
≈≈ '
k_SearchedFontAssetLookup
≈≈ 1
.
≈≈1 2
Add
≈≈2 5
(
≈≈5 6

fallbackID
≈≈6 @
)
≈≈@ A
)
≈≈A B
{
∆∆ 
if
«« 
(
«« 
fallback
«« $
.
««$ %#
HasCharacter_Internal
««% :
(
««: ;
	character
««; D
,
««D E
true
««F J
,
««J K
tryAddCharacter
««L [
)
««[ \
)
««\ ]
return
»» "
true
»»# '
;
»»' (
}
…… 
}
   
}
ÀÀ 
return
ÕÕ 
false
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
bool
ŸŸ #
HasCharacter_Internal
ŸŸ "
(
ŸŸ" #
uint
ŸŸ# '
	character
ŸŸ( 1
,
ŸŸ1 2
bool
ŸŸ3 7
searchFallbacks
ŸŸ8 G
=
ŸŸH I
false
ŸŸJ O
,
ŸŸO P
bool
ŸŸQ U
tryAddCharacter
ŸŸV e
=
ŸŸf g
false
ŸŸh m
)
ŸŸm n
{
⁄⁄ 	
if
‹‹ 
(
‹‹ )
m_CharacterLookupDictionary
‹‹ +
==
‹‹, .
null
‹‹/ 3
)
‹‹3 4
{
›› %
ReadFontAssetDefinition
ﬁﬁ '
(
ﬁﬁ' (
)
ﬁﬁ( )
;
ﬁﬁ) *
if
‡‡ 
(
‡‡ )
m_CharacterLookupDictionary
‡‡ /
==
‡‡0 2
null
‡‡3 7
)
‡‡7 8
return
·· 
false
··  
;
··  !
}
‚‚ 
if
ÂÂ 
(
ÂÂ )
m_CharacterLookupDictionary
ÂÂ +
.
ÂÂ+ ,
ContainsKey
ÂÂ, 7
(
ÂÂ7 8
	character
ÂÂ8 A
)
ÂÂA B
)
ÂÂB C
return
ÊÊ 
true
ÊÊ 
;
ÊÊ 
if
ÈÈ 
(
ÈÈ 
tryAddCharacter
ÈÈ 
&&
ÈÈ  "!
atlasPopulationMode
ÈÈ# 6
==
ÈÈ7 9!
AtlasPopulationMode
ÈÈ: M
.
ÈÈM N
Dynamic
ÈÈN U
)
ÈÈU V
{
ÍÍ 
TMP_Character
ÎÎ 
returnedCharacter
ÎÎ /
;
ÎÎ/ 0
if
ÌÌ 
(
ÌÌ %
TryAddCharacterInternal
ÌÌ +
(
ÌÌ+ ,
	character
ÌÌ, 5
,
ÌÌ5 6
out
ÌÌ7 :
returnedCharacter
ÌÌ; L
)
ÌÌL M
)
ÌÌM N
return
ÓÓ 
true
ÓÓ 
;
ÓÓ  
}
ÔÔ 
if
ÒÒ 
(
ÒÒ 
searchFallbacks
ÒÒ 
)
ÒÒ  
{
ÚÚ 
if
ÙÙ 
(
ÙÙ $
fallbackFontAssetTable
ÙÙ *
==
ÙÙ+ -
null
ÙÙ. 2
||
ÙÙ3 5$
fallbackFontAssetTable
ÙÙ6 L
.
ÙÙL M
Count
ÙÙM R
==
ÙÙS U
$num
ÙÙV W
)
ÙÙW X
return
ıı 
false
ıı  
;
ıı  !
for
˜˜ 
(
˜˜ 
int
˜˜ 
i
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
i
˜˜  !
<
˜˜" #$
fallbackFontAssetTable
˜˜$ :
.
˜˜: ;
Count
˜˜; @
&&
˜˜A C$
fallbackFontAssetTable
˜˜D Z
[
˜˜Z [
i
˜˜[ \
]
˜˜\ ]
!=
˜˜^ `
null
˜˜a e
;
˜˜e f
i
˜˜g h
++
˜˜h j
)
˜˜j k
{
¯¯ 
TMP_FontAsset
˘˘ !
fallback
˘˘" *
=
˘˘+ ,$
fallbackFontAssetTable
˘˘- C
[
˘˘C D
i
˘˘D E
]
˘˘E F
;
˘˘F G
int
˙˙ 

fallbackID
˙˙ "
=
˙˙# $
fallback
˙˙% -
.
˙˙- .
GetInstanceID
˙˙. ;
(
˙˙; <
)
˙˙< =
;
˙˙= >
if
˝˝ 
(
˝˝ '
k_SearchedFontAssetLookup
˝˝ 1
.
˝˝1 2
Add
˝˝2 5
(
˝˝5 6

fallbackID
˝˝6 @
)
˝˝@ A
)
˝˝A B
{
˛˛ 
if
ˇˇ 
(
ˇˇ 
fallback
ˇˇ $
.
ˇˇ$ %#
HasCharacter_Internal
ˇˇ% :
(
ˇˇ: ;
	character
ˇˇ; D
,
ˇˇD E
true
ˇˇF J
,
ˇˇJ K
tryAddCharacter
ˇˇL [
)
ˇˇ[ \
)
ˇˇ\ ]
return
ÄÄ "
true
ÄÄ# '
;
ÄÄ' (
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 
return
ÖÖ 
false
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
public
èè 
bool
èè 
HasCharacters
èè !
(
èè! "
string
èè" (
text
èè) -
,
èè- .
out
èè/ 2
List
èè3 7
<
èè7 8
char
èè8 <
>
èè< =
missingCharacters
èè> O
)
èèO P
{
êê 	
if
ëë 
(
ëë )
m_CharacterLookupDictionary
ëë +
==
ëë, .
null
ëë/ 3
)
ëë3 4
{
íí 
missingCharacters
ìì !
=
ìì" #
null
ìì$ (
;
ìì( )
return
îî 
false
îî 
;
îî 
}
ïï 
missingCharacters
óó 
=
óó 
new
óó  #
List
óó$ (
<
óó( )
char
óó) -
>
óó- .
(
óó. /
)
óó/ 0
;
óó0 1
for
ôô 
(
ôô 
int
ôô 
i
ôô 
=
ôô 
$num
ôô 
;
ôô 
i
ôô 
<
ôô 
text
ôô  $
.
ôô$ %
Length
ôô% +
;
ôô+ ,
i
ôô- .
++
ôô. 0
)
ôô0 1
{
öö 
if
õõ 
(
õõ 
!
õõ )
m_CharacterLookupDictionary
õõ 0
.
õõ0 1
ContainsKey
õõ1 <
(
õõ< =
text
õõ= A
[
õõA B
i
õõB C
]
õõC D
)
õõD E
)
õõE F
missingCharacters
úú %
.
úú% &
Add
úú& )
(
úú) *
text
úú* .
[
úú. /
i
úú/ 0
]
úú0 1
)
úú1 2
;
úú2 3
}
ùù 
if
üü 
(
üü 
missingCharacters
üü !
.
üü! "
Count
üü" '
==
üü( *
$num
üü+ ,
)
üü, -
return
†† 
true
†† 
;
†† 
return
¢¢ 
false
¢¢ 
;
¢¢ 
}
££ 	
public
≠≠ 
bool
≠≠ 
HasCharacters
≠≠ !
(
≠≠! "
string
≠≠" (
text
≠≠) -
,
≠≠- .
out
≠≠/ 2
uint
≠≠3 7
[
≠≠7 8
]
≠≠8 9
missingCharacters
≠≠: K
,
≠≠K L
bool
≠≠M Q
searchFallbacks
≠≠R a
=
≠≠b c
false
≠≠d i
,
≠≠i j
bool
≠≠k o
tryAddCharacter
≠≠p 
=≠≠Ä Å
false≠≠Ç á
)≠≠á à
{
ÆÆ 	
missingCharacters
ØØ 
=
ØØ 
null
ØØ  $
;
ØØ$ %
if
≤≤ 
(
≤≤ )
m_CharacterLookupDictionary
≤≤ +
==
≤≤, .
null
≤≤/ 3
)
≤≤3 4
{
≥≥ %
ReadFontAssetDefinition
¥¥ '
(
¥¥' (
)
¥¥( )
;
¥¥) *
if
∂∂ 
(
∂∂ )
m_CharacterLookupDictionary
∂∂ /
==
∂∂0 2
null
∂∂3 7
)
∂∂7 8
return
∑∑ 
false
∑∑  
;
∑∑  !
}
∏∏ $
s_MissingCharacterList
ªª "
.
ªª" #
Clear
ªª# (
(
ªª( )
)
ªª) *
;
ªª* +
for
ΩΩ 
(
ΩΩ 
int
ΩΩ 
i
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
i
ΩΩ 
<
ΩΩ 
text
ΩΩ  $
.
ΩΩ$ %
Length
ΩΩ% +
;
ΩΩ+ ,
i
ΩΩ- .
++
ΩΩ. 0
)
ΩΩ0 1
{
ææ 
bool
øø  
isMissingCharacter
øø '
=
øø( )
true
øø* .
;
øø. /
uint
¿¿ 
	character
¿¿ 
=
¿¿  
text
¿¿! %
[
¿¿% &
i
¿¿& '
]
¿¿' (
;
¿¿( )
if
¬¬ 
(
¬¬ )
m_CharacterLookupDictionary
¬¬ /
.
¬¬/ 0
ContainsKey
¬¬0 ;
(
¬¬; <
	character
¬¬< E
)
¬¬E F
)
¬¬F G
continue
√√ 
;
√√ 
if
∆∆ 
(
∆∆ 
tryAddCharacter
∆∆ #
&&
∆∆$ &!
atlasPopulationMode
∆∆' :
==
∆∆; =!
AtlasPopulationMode
∆∆> Q
.
∆∆Q R
Dynamic
∆∆R Y
)
∆∆Y Z
{
«« 
TMP_Character
»» !
returnedCharacter
»»" 3
;
»»3 4
if
   
(
   %
TryAddCharacterInternal
   /
(
  / 0
	character
  0 9
,
  9 :
out
  ; >
returnedCharacter
  ? P
)
  P Q
)
  Q R
continue
ÀÀ  
;
ÀÀ  !
}
ÃÃ 
if
ŒŒ 
(
ŒŒ 
searchFallbacks
ŒŒ #
)
ŒŒ# $
{
œœ 
if
—— 
(
—— '
k_SearchedFontAssetLookup
—— 1
==
——2 4
null
——5 9
)
——9 :'
k_SearchedFontAssetLookup
““ 1
=
““2 3
new
““4 7
HashSet
““8 ?
<
““? @
int
““@ C
>
““C D
(
““D E
)
““E F
;
““F G
else
”” '
k_SearchedFontAssetLookup
‘‘ 1
.
‘‘1 2
Clear
‘‘2 7
(
‘‘7 8
)
‘‘8 9
;
‘‘9 :'
k_SearchedFontAssetLookup
◊◊ -
.
◊◊- .
Add
◊◊. 1
(
◊◊1 2
GetInstanceID
◊◊2 ?
(
◊◊? @
)
◊◊@ A
)
◊◊A B
;
◊◊B C
if
⁄⁄ 
(
⁄⁄ $
fallbackFontAssetTable
⁄⁄ .
!=
⁄⁄/ 1
null
⁄⁄2 6
&&
⁄⁄7 9$
fallbackFontAssetTable
⁄⁄: P
.
⁄⁄P Q
Count
⁄⁄Q V
>
⁄⁄W X
$num
⁄⁄Y Z
)
⁄⁄Z [
{
€€ 
for
‹‹ 
(
‹‹ 
int
‹‹  
j
‹‹! "
=
‹‹# $
$num
‹‹% &
;
‹‹& '
j
‹‹( )
<
‹‹* +$
fallbackFontAssetTable
‹‹, B
.
‹‹B C
Count
‹‹C H
&&
‹‹I K$
fallbackFontAssetTable
‹‹L b
[
‹‹b c
j
‹‹c d
]
‹‹d e
!=
‹‹f h
null
‹‹i m
;
‹‹m n
j
‹‹o p
++
‹‹p r
)
‹‹r s
{
›› 
TMP_FontAsset
ﬁﬁ )
fallback
ﬁﬁ* 2
=
ﬁﬁ3 4$
fallbackFontAssetTable
ﬁﬁ5 K
[
ﬁﬁK L
j
ﬁﬁL M
]
ﬁﬁM N
;
ﬁﬁN O
int
ﬂﬂ 

fallbackID
ﬂﬂ  *
=
ﬂﬂ+ ,
fallback
ﬂﬂ- 5
.
ﬂﬂ5 6
GetInstanceID
ﬂﬂ6 C
(
ﬂﬂC D
)
ﬂﬂD E
;
ﬂﬂE F
if
‚‚ 
(
‚‚  '
k_SearchedFontAssetLookup
‚‚  9
.
‚‚9 :
Add
‚‚: =
(
‚‚= >

fallbackID
‚‚> H
)
‚‚H I
)
‚‚I J
{
„„ 
if
‰‰  "
(
‰‰# $
fallback
‰‰$ ,
.
‰‰, -#
HasCharacter_Internal
‰‰- B
(
‰‰B C
	character
‰‰C L
,
‰‰L M
true
‰‰N R
,
‰‰R S
tryAddCharacter
‰‰T c
)
‰‰c d
==
‰‰e g
false
‰‰h m
)
‰‰m n
continue
ÂÂ$ ,
;
ÂÂ, - 
isMissingCharacter
ÁÁ  2
=
ÁÁ3 4
false
ÁÁ5 :
;
ÁÁ: ;
break
ËË  %
;
ËË% &
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
if
ÓÓ 
(
ÓÓ  
isMissingCharacter
ÓÓ *
&&
ÓÓ+ -
TMP_Settings
ÓÓ. :
.
ÓÓ: ; 
fallbackFontAssets
ÓÓ; M
!=
ÓÓN P
null
ÓÓQ U
&&
ÓÓV X
TMP_Settings
ÓÓY e
.
ÓÓe f 
fallbackFontAssets
ÓÓf x
.
ÓÓx y
Count
ÓÓy ~
>ÓÓ Ä
$numÓÓÅ Ç
)ÓÓÇ É
{
ÔÔ 
for
 
(
 
int
  
j
! "
=
# $
$num
% &
;
& '
j
( )
<
* +
TMP_Settings
, 8
.
8 9 
fallbackFontAssets
9 K
.
K L
Count
L Q
&&
R T
TMP_Settings
U a
.
a b 
fallbackFontAssets
b t
[
t u
j
u v
]
v w
!=
x z
null
{ 
; Ä
jÅ Ç
++Ç Ñ
)Ñ Ö
{
ÒÒ 
TMP_FontAsset
ÚÚ )
fallback
ÚÚ* 2
=
ÚÚ3 4
TMP_Settings
ÚÚ5 A
.
ÚÚA B 
fallbackFontAssets
ÚÚB T
[
ÚÚT U
j
ÚÚU V
]
ÚÚV W
;
ÚÚW X
int
ÛÛ 

fallbackID
ÛÛ  *
=
ÛÛ+ ,
fallback
ÛÛ- 5
.
ÛÛ5 6
GetInstanceID
ÛÛ6 C
(
ÛÛC D
)
ÛÛD E
;
ÛÛE F
if
ˆˆ 
(
ˆˆ  '
k_SearchedFontAssetLookup
ˆˆ  9
.
ˆˆ9 :
Add
ˆˆ: =
(
ˆˆ= >

fallbackID
ˆˆ> H
)
ˆˆH I
)
ˆˆI J
{
˜˜ 
if
¯¯  "
(
¯¯# $
fallback
¯¯$ ,
.
¯¯, -#
HasCharacter_Internal
¯¯- B
(
¯¯B C
	character
¯¯C L
,
¯¯L M
true
¯¯N R
,
¯¯R S
tryAddCharacter
¯¯T c
)
¯¯c d
==
¯¯e g
false
¯¯h m
)
¯¯m n
continue
˘˘$ ,
;
˘˘, - 
isMissingCharacter
˚˚  2
=
˚˚3 4
false
˚˚5 :
;
˚˚: ;
break
¸¸  %
;
¸¸% &
}
˝˝ 
}
˛˛ 
}
ˇˇ 
if
Ç	Ç	 
(
Ç	Ç	  
isMissingCharacter
Ç	Ç	 *
&&
Ç	Ç	+ -
TMP_Settings
Ç	Ç	. :
.
Ç	Ç	: ;
defaultFontAsset
Ç	Ç	; K
!=
Ç	Ç	L N
null
Ç	Ç	O S
)
Ç	Ç	S T
{
É	É	 
TMP_FontAsset
Ñ	Ñ	 %
fallback
Ñ	Ñ	& .
=
Ñ	Ñ	/ 0
TMP_Settings
Ñ	Ñ	1 =
.
Ñ	Ñ	= >
defaultFontAsset
Ñ	Ñ	> N
;
Ñ	Ñ	N O
int
Ö	Ö	 

fallbackID
Ö	Ö	 &
=
Ö	Ö	' (
fallback
Ö	Ö	) 1
.
Ö	Ö	1 2
GetInstanceID
Ö	Ö	2 ?
(
Ö	Ö	? @
)
Ö	Ö	@ A
;
Ö	Ö	A B
if
à	à	 
(
à	à	 '
k_SearchedFontAssetLookup
à	à	 5
.
à	à	5 6
Add
à	à	6 9
(
à	à	9 :

fallbackID
à	à	: D
)
à	à	D E
)
à	à	E F
{
â	â	 
if
ä	ä	 
(
ä	ä	  
fallback
ä	ä	  (
.
ä	ä	( )#
HasCharacter_Internal
ä	ä	) >
(
ä	ä	> ?
	character
ä	ä	? H
,
ä	ä	H I
true
ä	ä	J N
,
ä	ä	N O
tryAddCharacter
ä	ä	P _
)
ä	ä	_ `
)
ä	ä	` a 
isMissingCharacter
ã	ã	  2
=
ã	ã	3 4
false
ã	ã	5 :
;
ã	ã	: ;
}
å	å	 
}
ç	ç	 
}
é	é	 
if
ê	ê	 
(
ê	ê	  
isMissingCharacter
ê	ê	 &
)
ê	ê	& '$
s_MissingCharacterList
ë	ë	 *
.
ë	ë	* +
Add
ë	ë	+ .
(
ë	ë	. /
	character
ë	ë	/ 8
)
ë	ë	8 9
;
ë	ë	9 :
}
í	í	 
if
î	î	 
(
î	î	 $
s_MissingCharacterList
î	î	 &
.
î	î	& '
Count
î	î	' ,
>
î	î	- .
$num
î	î	/ 0
)
î	î	0 1
{
ï	ï	 
missingCharacters
ñ	ñ	 !
=
ñ	ñ	" #$
s_MissingCharacterList
ñ	ñ	$ :
.
ñ	ñ	: ;
ToArray
ñ	ñ	; B
(
ñ	ñ	B C
)
ñ	ñ	C D
;
ñ	ñ	D E
return
ó	ó	 
false
ó	ó	 
;
ó	ó	 
}
ò	ò	 
return
ö	ö	 
true
ö	ö	 
;
ö	ö	 
}
õ	õ	 	
public
£	£	 
bool
£	£	 
HasCharacters
£	£	 !
(
£	£	! "
string
£	£	" (
text
£	£	) -
)
£	£	- .
{
§	§	 	
if
•	•	 
(
•	•	 )
m_CharacterLookupDictionary
•	•	 +
==
•	•	, .
null
•	•	/ 3
)
•	•	3 4
return
¶	¶	 
false
¶	¶	 
;
¶	¶	 
for
®	®	 
(
®	®	 
int
®	®	 
i
®	®	 
=
®	®	 
$num
®	®	 
;
®	®	 
i
®	®	 
<
®	®	 
text
®	®	  $
.
®	®	$ %
Length
®	®	% +
;
®	®	+ ,
i
®	®	- .
++
®	®	. 0
)
®	®	0 1
{
©	©	 
if
™	™	 
(
™	™	 
!
™	™	 )
m_CharacterLookupDictionary
™	™	 0
.
™	™	0 1
ContainsKey
™	™	1 <
(
™	™	< =
text
™	™	= A
[
™	™	A B
i
™	™	B C
]
™	™	C D
)
™	™	D E
)
™	™	E F
return
´	´	 
false
´	´	  
;
´	´	  !
}
¨	¨	 
return
Æ	Æ	 
true
Æ	Æ	 
;
Æ	Æ	 
}
Ø	Ø	 	
public
∑	∑	 
static
∑	∑	 
string
∑	∑	 
GetCharacters
∑	∑	 *
(
∑	∑	* +
TMP_FontAsset
∑	∑	+ 8
	fontAsset
∑	∑	9 B
)
∑	∑	B C
{
∏	∏	 	
string
π	π	 

characters
π	π	 
=
π	π	 
string
π	π	  &
.
π	π	& '
Empty
π	π	' ,
;
π	π	, -
for
ª	ª	 
(
ª	ª	 
int
ª	ª	 
i
ª	ª	 
=
ª	ª	 
$num
ª	ª	 
;
ª	ª	 
i
ª	ª	 
<
ª	ª	 
	fontAsset
ª	ª	  )
.
ª	ª	) *
characterTable
ª	ª	* 8
.
ª	ª	8 9
Count
ª	ª	9 >
;
ª	ª	> ?
i
ª	ª	@ A
++
ª	ª	A C
)
ª	ª	C D
{
º	º	 

characters
Ω	Ω	 
+=
Ω	Ω	 
(
Ω	Ω	 
char
Ω	Ω	 #
)
Ω	Ω	# $
	fontAsset
Ω	Ω	$ -
.
Ω	Ω	- .
characterTable
Ω	Ω	. <
[
Ω	Ω	< =
i
Ω	Ω	= >
]
Ω	Ω	> ?
.
Ω	Ω	? @
unicode
Ω	Ω	@ G
;
Ω	Ω	G H
}
æ	æ	 
return
¿	¿	 

characters
¿	¿	 
;
¿	¿	 
}
¡	¡	 	
public
…	…	 
static
…	…	 
int
…	…	 
[
…	…	 
]
…	…	  
GetCharactersArray
…	…	 .
(
…	…	. /
TMP_FontAsset
…	…	/ <
	fontAsset
…	…	= F
)
…	…	F G
{
 	 	 	
int
À	À	 
[
À	À	 
]
À	À	 

characters
À	À	 
=
À	À	 
new
À	À	 "
int
À	À	# &
[
À	À	& '
	fontAsset
À	À	' 0
.
À	À	0 1
characterTable
À	À	1 ?
.
À	À	? @
Count
À	À	@ E
]
À	À	E F
;
À	À	F G
for
Õ	Õ	 
(
Õ	Õ	 
int
Õ	Õ	 
i
Õ	Õ	 
=
Õ	Õ	 
$num
Õ	Õ	 
;
Õ	Õ	 
i
Õ	Õ	 
<
Õ	Õ	 
	fontAsset
Õ	Õ	  )
.
Õ	Õ	) *
characterTable
Õ	Õ	* 8
.
Õ	Õ	8 9
Count
Õ	Õ	9 >
;
Õ	Õ	> ?
i
Õ	Õ	@ A
++
Õ	Õ	A C
)
Õ	Õ	C D
{
Œ	Œ	 

characters
œ	œ	 
[
œ	œ	 
i
œ	œ	 
]
œ	œ	 
=
œ	œ	 
(
œ	œ	  !
int
œ	œ	! $
)
œ	œ	$ %
	fontAsset
œ	œ	% .
.
œ	œ	. /
characterTable
œ	œ	/ =
[
œ	œ	= >
i
œ	œ	> ?
]
œ	œ	? @
.
œ	œ	@ A
unicode
œ	œ	A H
;
œ	œ	H I
}
–	–	 
return
“	“	 

characters
“	“	 
;
“	“	 
}
”	”	 	
internal
⁄	⁄	 
uint
⁄	⁄	 
GetGlyphIndex
⁄	⁄	 #
(
⁄	⁄	# $
uint
⁄	⁄	$ (
unicode
⁄	⁄	) 0
)
⁄	⁄	0 1
{
€	€	 	
if
›	›	 
(
›	›	 )
m_CharacterLookupDictionary
›	›	 +
.
›	›	+ ,
ContainsKey
›	›	, 7
(
›	›	7 8
unicode
›	›	8 ?
)
›	›	? @
)
›	›	@ A
return
ﬁ	ﬁ	 )
m_CharacterLookupDictionary
ﬁ	ﬁ	 2
[
ﬁ	ﬁ	2 3
unicode
ﬁ	ﬁ	3 :
]
ﬁ	ﬁ	: ;
.
ﬁ	ﬁ	; <

glyphIndex
ﬁ	ﬁ	< F
;
ﬁ	ﬁ	F G
if
·	·	 
(
·	·	 

FontEngine
·	·	 
.
·	·	 
LoadFontFace
·	·	 '
(
·	·	' (
sourceFontFile
·	·	( 6
,
·	·	6 7

m_FaceInfo
·	·	8 B
.
·	·	B C
	pointSize
·	·	C L
)
·	·	L M
!=
·	·	N P
FontEngineError
·	·	Q `
.
·	·	` a
Success
·	·	a h
)
·	·	h i
return
‚	‚	 
$num
‚	‚	 
;
‚	‚	 
return
‰	‰	 

FontEngine
‰	‰	 
.
‰	‰	 
GetGlyphIndex
‰	‰	 +
(
‰	‰	+ ,
unicode
‰	‰	, 3
)
‰	‰	3 4
;
‰	‰	4 5
}
Â	Â	 	
private
Ì	Ì	 
static
Ì	Ì	 
List
Ì	Ì	 
<
Ì	Ì	 
TMP_FontAsset
Ì	Ì	 )
>
Ì	Ì	) *2
$k_FontAssets_FontFeaturesUpdateQueue
Ì	Ì	+ O
=
Ì	Ì	P Q
new
Ì	Ì	R U
List
Ì	Ì	V Z
<
Ì	Ì	Z [
TMP_FontAsset
Ì	Ì	[ h
>
Ì	Ì	h i
(
Ì	Ì	i j
)
Ì	Ì	j k
;
Ì	Ì	k l
private
Ó	Ó	 
static
Ó	Ó	 
HashSet
Ó	Ó	 
<
Ó	Ó	 
int
Ó	Ó	 "
>
Ó	Ó	" #8
*k_FontAssets_FontFeaturesUpdateQueueLookup
Ó	Ó	$ N
=
Ó	Ó	O P
new
Ó	Ó	Q T
HashSet
Ó	Ó	U \
<
Ó	Ó	\ ]
int
Ó	Ó	] `
>
Ó	Ó	` a
(
Ó	Ó	a b
)
Ó	Ó	b c
;
Ó	Ó	c d
private
		 
static
		 
List
		 
<
		 
TMP_FontAsset
		 )
>
		) *3
%k_FontAssets_AtlasTexturesUpdateQueue
		+ P
=
		Q R
new
		S V
List
		W [
<
		[ \
TMP_FontAsset
		\ i
>
		i j
(
		j k
)
		k l
;
		l m
private
Ò	Ò	 
static
Ò	Ò	 
HashSet
Ò	Ò	 
<
Ò	Ò	 
int
Ò	Ò	 "
>
Ò	Ò	" #9
+k_FontAssets_AtlasTexturesUpdateQueueLookup
Ò	Ò	$ O
=
Ò	Ò	P Q
new
Ò	Ò	R U
HashSet
Ò	Ò	V ]
<
Ò	Ò	] ^
int
Ò	Ò	^ a
>
Ò	Ò	a b
(
Ò	Ò	b c
)
Ò	Ò	c d
;
Ò	Ò	d e
internal
˜	˜	 
static
˜	˜	 
void
˜	˜	 3
%RegisterFontAssetForFontFeatureUpdate
˜	˜	 B
(
˜	˜	B C
TMP_FontAsset
˜	˜	C P
	fontAsset
˜	˜	Q Z
)
˜	˜	Z [
{
¯	¯	 	
int
˘	˘	 

instanceID
˘	˘	 
=
˘	˘	 
	fontAsset
˘	˘	 &
.
˘	˘	& '

instanceID
˘	˘	' 1
;
˘	˘	1 2
if
˚	˚	 
(
˚	˚	 8
*k_FontAssets_FontFeaturesUpdateQueueLookup
˚	˚	 :
.
˚	˚	: ;
Add
˚	˚	; >
(
˚	˚	> ?

instanceID
˚	˚	? I
)
˚	˚	I J
)
˚	˚	J K2
$k_FontAssets_FontFeaturesUpdateQueue
¸	¸	 4
.
¸	¸	4 5
Add
¸	¸	5 8
(
¸	¸	8 9
	fontAsset
¸	¸	9 B
)
¸	¸	B C
;
¸	¸	C D
}
˝	˝	 	
internal
É
É
 
static
É
É
 
void
É
É
 4
&UpdateFontFeaturesForFontAssetsInQueue
É
É
 C
(
É
É
C D
)
É
É
D E
{
Ñ
Ñ
 	
int
Ö
Ö
 
count
Ö
Ö
 
=
Ö
Ö
 2
$k_FontAssets_FontFeaturesUpdateQueue
Ö
Ö
 <
.
Ö
Ö
< =
Count
Ö
Ö
= B
;
Ö
Ö
B C
for
á
á
 
(
á
á
 
int
á
á
 
i
á
á
 
=
á
á
 
$num
á
á
 
;
á
á
 
i
á
á
 
<
á
á
 
count
á
á
  %
;
á
á
% &
i
á
á
' (
++
á
á
( *
)
á
á
* +2
$k_FontAssets_FontFeaturesUpdateQueue
à
à
 4
[
à
à
4 5
i
à
à
5 6
]
à
à
6 7
.
à
à
7 8*
UpdateGlyphAdjustmentRecords
à
à
8 T
(
à
à
T U
)
à
à
U V
;
à
à
V W
if
ä
ä
 
(
ä
ä
 
count
ä
ä
 
>
ä
ä
 
$num
ä
ä
 
)
ä
ä
 
{
ã
ã
 2
$k_FontAssets_FontFeaturesUpdateQueue
å
å
 4
.
å
å
4 5
Clear
å
å
5 :
(
å
å
: ;
)
å
å
; <
;
å
å
< =8
*k_FontAssets_FontFeaturesUpdateQueueLookup
ç
ç
 :
.
ç
ç
: ;
Clear
ç
ç
; @
(
ç
ç
@ A
)
ç
ç
A B
;
ç
ç
B C
}
é
é
 
}
è
è
 	
internal
ï
ï
 
static
ï
ï
 
void
ï
ï
 4
&RegisterFontAssetForAtlasTextureUpdate
ï
ï
 C
(
ï
ï
C D
TMP_FontAsset
ï
ï
D Q
	fontAsset
ï
ï
R [
)
ï
ï
[ \
{
ñ
ñ
 	
int
ó
ó
 

instanceID
ó
ó
 
=
ó
ó
 
	fontAsset
ó
ó
 &
.
ó
ó
& '

instanceID
ó
ó
' 1
;
ó
ó
1 2
if
ô
ô
 
(
ô
ô
 9
+k_FontAssets_AtlasTexturesUpdateQueueLookup
ô
ô
 ;
.
ô
ô
; <
Add
ô
ô
< ?
(
ô
ô
? @

instanceID
ô
ô
@ J
)
ô
ô
J K
)
ô
ô
K L3
%k_FontAssets_AtlasTexturesUpdateQueue
ö
ö
 5
.
ö
ö
5 6
Add
ö
ö
6 9
(
ö
ö
9 :
	fontAsset
ö
ö
: C
)
ö
ö
C D
;
ö
ö
D E
}
õ
õ
 	
internal
†
†
 
static
†
†
 
void
†
†
 5
'UpdateAtlasTexturesForFontAssetsInQueue
†
†
 D
(
†
†
D E
)
†
†
E F
{
°
°
 	
int
¢
¢
 
count
¢
¢
 
=
¢
¢
 9
+k_FontAssets_AtlasTexturesUpdateQueueLookup
¢
¢
 C
.
¢
¢
C D
Count
¢
¢
D I
;
¢
¢
I J
for
§
§
 
(
§
§
 
int
§
§
 
i
§
§
 
=
§
§
 
$num
§
§
 
;
§
§
 
i
§
§
 
<
§
§
 
count
§
§
  %
;
§
§
% &
i
§
§
' (
++
§
§
( *
)
§
§
* +3
%k_FontAssets_AtlasTexturesUpdateQueue
•
•
 5
[
•
•
5 6
i
•
•
6 7
]
•
•
7 8
.
•
•
8 9)
TryAddGlyphsToAtlasTextures
•
•
9 T
(
•
•
T U
)
•
•
U V
;
•
•
V W
if
ß
ß
 
(
ß
ß
 
count
ß
ß
 
>
ß
ß
 
$num
ß
ß
 
)
ß
ß
 
{
®
®
 3
%k_FontAssets_AtlasTexturesUpdateQueue
©
©
 5
.
©
©
5 6
Clear
©
©
6 ;
(
©
©
; <
)
©
©
< =
;
©
©
= >9
+k_FontAssets_AtlasTexturesUpdateQueueLookup
™
™
 ;
.
™
™
; <
Clear
™
™
< A
(
™
™
A B
)
™
™
B C
;
™
™
C D
}
´
´
 
}
¨
¨
 	
private
∂
∂
 
List
∂
∂
 
<
∂
∂
 
Glyph
∂
∂
 
>
∂
∂
 
m_GlyphsToRender
∂
∂
 ,
=
∂
∂
- .
new
∂
∂
/ 2
List
∂
∂
3 7
<
∂
∂
7 8
Glyph
∂
∂
8 =
>
∂
∂
= >
(
∂
∂
> ?
)
∂
∂
? @
;
∂
∂
@ A
private
ª
ª
 
List
ª
ª
 
<
ª
ª
 
Glyph
ª
ª
 
>
ª
ª
 
m_GlyphsRendered
ª
ª
 ,
=
ª
ª
- .
new
ª
ª
/ 2
List
ª
ª
3 7
<
ª
ª
7 8
Glyph
ª
ª
8 =
>
ª
ª
= >
(
ª
ª
> ?
)
ª
ª
? @
;
ª
ª
@ A
private
¿
¿
 
List
¿
¿
 
<
¿
¿
 
uint
¿
¿
 
>
¿
¿
 
m_GlyphIndexList
¿
¿
 +
=
¿
¿
, -
new
¿
¿
. 1
List
¿
¿
2 6
<
¿
¿
6 7
uint
¿
¿
7 ;
>
¿
¿
; <
(
¿
¿
< =
)
¿
¿
= >
;
¿
¿
> ?
private
∆
∆
 
List
∆
∆
 
<
∆
∆
 
uint
∆
∆
 
>
∆
∆
 (
m_GlyphIndexListNewlyAdded
∆
∆
 5
=
∆
∆
6 7
new
∆
∆
8 ;
List
∆
∆
< @
<
∆
∆
@ A
uint
∆
∆
A E
>
∆
∆
E F
(
∆
∆
F G
)
∆
∆
G H
;
∆
∆
H I
internal
À
À
 
List
À
À
 
<
À
À
 
uint
À
À
 
>
À
À
 
m_GlyphsToAdd
À
À
 )
=
À
À
* +
new
À
À
, /
List
À
À
0 4
<
À
À
4 5
uint
À
À
5 9
>
À
À
9 :
(
À
À
: ;
)
À
À
; <
;
À
À
< =
internal
Ã
Ã
 
HashSet
Ã
Ã
 
<
Ã
Ã
 
uint
Ã
Ã
 
>
Ã
Ã
 !
m_GlyphsToAddLookup
Ã
Ã
 2
=
Ã
Ã
3 4
new
Ã
Ã
5 8
HashSet
Ã
Ã
9 @
<
Ã
Ã
@ A
uint
Ã
Ã
A E
>
Ã
Ã
E F
(
Ã
Ã
F G
)
Ã
Ã
G H
;
Ã
Ã
H I
internal
Œ
Œ
 
List
Œ
Œ
 
<
Œ
Œ
 
TMP_Character
Œ
Œ
 #
>
Œ
Œ
# $
m_CharactersToAdd
Œ
Œ
% 6
=
Œ
Œ
7 8
new
Œ
Œ
9 <
List
Œ
Œ
= A
<
Œ
Œ
A B
TMP_Character
Œ
Œ
B O
>
Œ
Œ
O P
(
Œ
Œ
P Q
)
Œ
Œ
Q R
;
Œ
Œ
R S
internal
œ
œ
 
HashSet
œ
œ
 
<
œ
œ
 
uint
œ
œ
 
>
œ
œ
 %
m_CharactersToAddLookup
œ
œ
 6
=
œ
œ
7 8
new
œ
œ
9 <
HashSet
œ
œ
= D
<
œ
œ
D E
uint
œ
œ
E I
>
œ
œ
I J
(
œ
œ
J K
)
œ
œ
K L
;
œ
œ
L M
internal
‘
‘
 
List
‘
‘
 
<
‘
‘
 
uint
‘
‘
 
>
‘
‘
 $
s_MissingCharacterList
‘
‘
 2
=
‘
‘
3 4
new
‘
‘
5 8
List
‘
‘
9 =
<
‘
‘
= >
uint
‘
‘
> B
>
‘
‘
B C
(
‘
‘
C D
)
‘
‘
D E
;
‘
‘
E F
internal
Ÿ
Ÿ
 
HashSet
Ÿ
Ÿ
 
<
Ÿ
Ÿ
 
uint
Ÿ
Ÿ
 
>
Ÿ
Ÿ
 +
m_MissingUnicodesFromFontFile
Ÿ
Ÿ
 <
=
Ÿ
Ÿ
= >
new
Ÿ
Ÿ
? B
HashSet
Ÿ
Ÿ
C J
<
Ÿ
Ÿ
J K
uint
Ÿ
Ÿ
K O
>
Ÿ
Ÿ
O P
(
Ÿ
Ÿ
P Q
)
Ÿ
Ÿ
Q R
;
Ÿ
Ÿ
R S
internal
ﬁ
ﬁ
 
static
ﬁ
ﬁ
 
uint
ﬁ
ﬁ
 
[
ﬁ
ﬁ
 
]
ﬁ
ﬁ
 
k_GlyphIndexArray
ﬁ
ﬁ
 0
;
ﬁ
ﬁ
0 1
public
Ê
Ê
 
bool
Ê
Ê
 
TryAddCharacters
Ê
Ê
 $
(
Ê
Ê
$ %
uint
Ê
Ê
% )
[
Ê
Ê
) *
]
Ê
Ê
* +
unicodes
Ê
Ê
, 4
,
Ê
Ê
4 5
bool
Ê
Ê
6 :!
includeFontFeatures
Ê
Ê
; N
=
Ê
Ê
O P
false
Ê
Ê
Q V
)
Ê
Ê
V W
{
Á
Á
 	
uint
Ë
Ë
 
[
Ë
Ë
 
]
Ë
Ë
 
missingUnicodes
Ë
Ë
 "
;
Ë
Ë
" #
return
Í
Í
 
TryAddCharacters
Í
Í
 #
(
Í
Í
# $
unicodes
Í
Í
$ ,
,
Í
Í
, -
out
Í
Í
. 1
missingUnicodes
Í
Í
2 A
,
Í
Í
A B!
includeFontFeatures
Í
Í
C V
)
Í
Í
V W
;
Í
Í
W X
}
Î
Î
 	
public
Ù
Ù
 
bool
Ù
Ù
 
TryAddCharacters
Ù
Ù
 $
(
Ù
Ù
$ %
uint
Ù
Ù
% )
[
Ù
Ù
) *
]
Ù
Ù
* +
unicodes
Ù
Ù
, 4
,
Ù
Ù
4 5
out
Ù
Ù
6 9
uint
Ù
Ù
: >
[
Ù
Ù
> ?
]
Ù
Ù
? @
missingUnicodes
Ù
Ù
A P
,
Ù
Ù
P Q
bool
Ù
Ù
R V!
includeFontFeatures
Ù
Ù
W j
=
Ù
Ù
k l
false
Ù
Ù
m r
)
Ù
Ù
r s
{
ı
ı
 	&
k_TryAddCharactersMarker
ˆ
ˆ
 $
.
ˆ
ˆ
$ %
Begin
ˆ
ˆ
% *
(
ˆ
ˆ
* +
)
ˆ
ˆ
+ ,
;
ˆ
ˆ
, -
if
˘
˘
 
(
˘
˘
 
unicodes
˘
˘
 
==
˘
˘
 
null
˘
˘
  
||
˘
˘
! #
unicodes
˘
˘
$ ,
.
˘
˘
, -
Length
˘
˘
- 3
==
˘
˘
4 6
$num
˘
˘
7 8
||
˘
˘
9 ;#
m_AtlasPopulationMode
˘
˘
< Q
==
˘
˘
R T!
AtlasPopulationMode
˘
˘
U h
.
˘
˘
h i
Static
˘
˘
i o
)
˘
˘
o p
{
˙
˙
 
if
˚
˚
 
(
˚
˚
 #
m_AtlasPopulationMode
˚
˚
 )
==
˚
˚
* ,!
AtlasPopulationMode
˚
˚
- @
.
˚
˚
@ A
Static
˚
˚
A G
)
˚
˚
G H
Debug
¸
¸
 
.
¸
¸
 

LogWarning
¸
¸
 $
(
¸
¸
$ %
$str
¸
¸
% O
+
¸
¸
P Q
this
¸
¸
R V
.
¸
¸
V W
name
¸
¸
W [
+
¸
¸
\ ]
$str¸
¸
^ ì
,¸
¸
ì î
this¸
¸
ï ô
)¸
¸
ô ö
;¸
¸
ö õ
else
˝
˝
 
Debug
˛
˛
 
.
˛
˛
 

LogWarning
˛
˛
 $
(
˛
˛
$ %
$str
˛
˛
% O
+
˛
˛
P Q
this
˛
˛
R V
.
˛
˛
V W
name
˛
˛
W [
+
˛
˛
\ ]
$str˛
˛
^ ï
,˛
˛
ï ñ
this˛
˛
ó õ
)˛
˛
õ ú
;˛
˛
ú ù
missingUnicodes
ÄÄ 
=
ÄÄ  !
null
ÄÄ" &
;
ÄÄ& '&
k_TryAddCharactersMarker
ÅÅ (
.
ÅÅ( )
End
ÅÅ) ,
(
ÅÅ, -
)
ÅÅ- .
;
ÅÅ. /
return
ÇÇ 
false
ÇÇ 
;
ÇÇ 
}
ÉÉ 
if
ÜÜ 
(
ÜÜ 

FontEngine
ÜÜ 
.
ÜÜ 
LoadFontFace
ÜÜ '
(
ÜÜ' (
m_SourceFontFile
ÜÜ( 8
,
ÜÜ8 9

m_FaceInfo
ÜÜ: D
.
ÜÜD E
	pointSize
ÜÜE N
)
ÜÜN O
!=
ÜÜP R
FontEngineError
ÜÜS b
.
ÜÜb c
Success
ÜÜc j
)
ÜÜj k
{
áá 
missingUnicodes
àà 
=
àà  !
unicodes
àà" *
.
àà* +
ToArray
àà+ 2
(
àà2 3
)
àà3 4
;
àà4 5&
k_TryAddCharactersMarker
ââ (
.
ââ( )
End
ââ) ,
(
ââ, -
)
ââ- .
;
ââ. /
return
ää 
false
ää 
;
ää 
}
ãã 
if
éé 
(
éé )
m_CharacterLookupDictionary
éé +
==
éé, .
null
éé/ 3
||
éé4 6%
m_GlyphLookupDictionary
éé7 N
==
ééO Q
null
ééR V
)
ééV W%
ReadFontAssetDefinition
èè '
(
èè' (
)
èè( )
;
èè) *
m_GlyphsToAdd
íí 
.
íí 
Clear
íí 
(
íí  
)
íí  !
;
íí! "!
m_GlyphsToAddLookup
ìì 
.
ìì  
Clear
ìì  %
(
ìì% &
)
ìì& '
;
ìì' (
m_CharactersToAdd
îî 
.
îî 
Clear
îî #
(
îî# $
)
îî$ %
;
îî% &%
m_CharactersToAddLookup
ïï #
.
ïï# $
Clear
ïï$ )
(
ïï) *
)
ïï* +
;
ïï+ ,$
s_MissingCharacterList
ññ "
.
ññ" #
Clear
ññ# (
(
ññ( )
)
ññ) *
;
ññ* +
bool
òò !
isMissingCharacters
òò $
=
òò% &
false
òò' ,
;
òò, -
int
ôô 
unicodeCount
ôô 
=
ôô 
unicodes
ôô '
.
ôô' (
Length
ôô( .
;
ôô. /
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ 
<
õõ 
unicodeCount
õõ  ,
;
õõ, -
i
õõ. /
++
õõ/ 1
)
õõ1 2
{
úú 
uint
ùù 
unicode
ùù 
=
ùù 
unicodes
ùù '
[
ùù' (
i
ùù( )
]
ùù) *
;
ùù* +
if
†† 
(
†† )
m_CharacterLookupDictionary
†† /
.
††/ 0
ContainsKey
††0 ;
(
††; <
unicode
††< C
)
††C D
)
††D E
continue
°° 
;
°° 
uint
§§ 

glyphIndex
§§ 
=
§§  !

FontEngine
§§" ,
.
§§, -
GetGlyphIndex
§§- :
(
§§: ;
unicode
§§; B
)
§§B C
;
§§C D
if
ßß 
(
ßß 

glyphIndex
ßß 
==
ßß !
$num
ßß" #
)
ßß# $
{
®® 
switch
™™ 
(
™™ 
unicode
™™ #
)
™™# $
{
´´ 
case
¨¨ 
$num
¨¨ !
:
¨¨! "

glyphIndex
ÆÆ &
=
ÆÆ' (

FontEngine
ÆÆ) 3
.
ÆÆ3 4
GetGlyphIndex
ÆÆ4 A
(
ÆÆA B
$num
ÆÆB F
)
ÆÆF G
;
ÆÆG H
break
ØØ !
;
ØØ! "
case
∞∞ 
$num
∞∞ !
:
∞∞! "
case
±± 
$num
±± #
:
±±# $

glyphIndex
≥≥ &
=
≥≥' (

FontEngine
≥≥) 3
.
≥≥3 4
GetGlyphIndex
≥≥4 A
(
≥≥A B
$num
≥≥B F
)
≥≥F G
;
≥≥G H
break
¥¥ !
;
¥¥! "
}
µµ 
if
∏∏ 
(
∏∏ 

glyphIndex
∏∏ "
==
∏∏# %
$num
∏∏& '
)
∏∏' (
{
ππ $
s_MissingCharacterList
ªª .
.
ªª. /
Add
ªª/ 2
(
ªª2 3
unicode
ªª3 :
)
ªª: ;
;
ªª; <!
isMissingCharacters
ΩΩ +
=
ΩΩ, -
true
ΩΩ. 2
;
ΩΩ2 3
continue
ææ  
;
ææ  !
}
øø 
}
¿¿ 
TMP_Character
¬¬ 
	character
¬¬ '
=
¬¬( )
new
¬¬* -
TMP_Character
¬¬. ;
(
¬¬; <
unicode
¬¬< C
,
¬¬C D

glyphIndex
¬¬E O
)
¬¬O P
;
¬¬P Q
if
≈≈ 
(
≈≈ %
m_GlyphLookupDictionary
≈≈ +
.
≈≈+ ,
ContainsKey
≈≈, 7
(
≈≈7 8

glyphIndex
≈≈8 B
)
≈≈B C
)
≈≈C D
{
∆∆ 
	character
»» 
.
»» 
glyph
»» #
=
»»$ %%
m_GlyphLookupDictionary
»»& =
[
»»= >

glyphIndex
»»> H
]
»»H I
;
»»I J
	character
…… 
.
…… 
	textAsset
…… '
=
……( )
this
……* .
;
……. /
m_CharacterTable
ÀÀ $
.
ÀÀ$ %
Add
ÀÀ% (
(
ÀÀ( )
	character
ÀÀ) 2
)
ÀÀ2 3
;
ÀÀ3 4)
m_CharacterLookupDictionary
ÃÃ /
.
ÃÃ/ 0
Add
ÃÃ0 3
(
ÃÃ3 4
unicode
ÃÃ4 ;
,
ÃÃ; <
	character
ÃÃ= F
)
ÃÃF G
;
ÃÃG H
continue
ÕÕ 
;
ÕÕ 
}
ŒŒ 
if
—— 
(
—— !
m_GlyphsToAddLookup
—— '
.
——' (
Add
——( +
(
——+ ,

glyphIndex
——, 6
)
——6 7
)
——7 8
m_GlyphsToAdd
““ !
.
““! "
Add
““" %
(
““% &

glyphIndex
““& 0
)
““0 1
;
““1 2
if
’’ 
(
’’ %
m_CharactersToAddLookup
’’ +
.
’’+ ,
Add
’’, /
(
’’/ 0
unicode
’’0 7
)
’’7 8
)
’’8 9
m_CharactersToAdd
÷÷ %
.
÷÷% &
Add
÷÷& )
(
÷÷) *
	character
÷÷* 3
)
÷÷3 4
;
÷÷4 5
}
◊◊ 
if
ŸŸ 
(
ŸŸ 
m_GlyphsToAdd
ŸŸ 
.
ŸŸ 
Count
ŸŸ #
==
ŸŸ$ &
$num
ŸŸ' (
)
ŸŸ( )
{
⁄⁄ 
missingUnicodes
‹‹ 
=
‹‹  !
unicodes
‹‹" *
;
‹‹* +&
k_TryAddCharactersMarker
›› (
.
››( )
End
››) ,
(
››, -
)
››- .
;
››. /
return
ﬁﬁ 
false
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
if
‚‚ 
(
‚‚ 
m_AtlasTextures
‚‚ 
[
‚‚  !
m_AtlasTextureIndex
‚‚  3
]
‚‚3 4
.
‚‚4 5
width
‚‚5 :
==
‚‚; =
$num
‚‚> ?
||
‚‚@ B
m_AtlasTextures
‚‚C R
[
‚‚R S!
m_AtlasTextureIndex
‚‚S f
]
‚‚f g
.
‚‚g h
height
‚‚h n
==
‚‚o q
$num
‚‚r s
)
‚‚s t
{
„„ 
m_AtlasTextures
‰‰ 
[
‰‰  !
m_AtlasTextureIndex
‰‰  3
]
‰‰3 4
.
‰‰4 5
Resize
‰‰5 ;
(
‰‰; <
m_AtlasWidth
‰‰< H
,
‰‰H I
m_AtlasHeight
‰‰J W
)
‰‰W X
;
‰‰X Y

FontEngine
ÂÂ 
.
ÂÂ 
ResetAtlasTexture
ÂÂ ,
(
ÂÂ, -
m_AtlasTextures
ÂÂ- <
[
ÂÂ< =!
m_AtlasTextureIndex
ÂÂ= P
]
ÂÂP Q
)
ÂÂQ R
;
ÂÂR S
}
ÊÊ 
Glyph
ËË 
[
ËË 
]
ËË 
glyphs
ËË 
;
ËË 
bool
ÈÈ %
allGlyphsAddedToTexture
ÈÈ (
=
ÈÈ) *

FontEngine
ÈÈ+ 5
.
ÈÈ5 6#
TryAddGlyphsToTexture
ÈÈ6 K
(
ÈÈK L
m_GlyphsToAdd
ÈÈL Y
,
ÈÈY Z
m_AtlasPadding
ÈÈ[ i
,
ÈÈi j
GlyphPackingMode
ÈÈk {
.
ÈÈ{ |
BestShortSideFitÈÈ| å
,ÈÈå ç 
m_FreeGlyphRectsÈÈé û
,ÈÈû ü 
m_UsedGlyphRectsÈÈ† ∞
,ÈÈ∞ ±!
m_AtlasRenderModeÈÈ≤ √
,ÈÈ√ ƒ
m_AtlasTexturesÈÈ≈ ‘
[ÈÈ‘ ’#
m_AtlasTextureIndexÈÈ’ Ë
]ÈÈË È
,ÈÈÈ Í
outÈÈÎ Ó
glyphsÈÈÔ ı
)ÈÈı ˆ
;ÈÈˆ ˜
for
ÏÏ 
(
ÏÏ 
int
ÏÏ 
i
ÏÏ 
=
ÏÏ 
$num
ÏÏ 
;
ÏÏ 
i
ÏÏ 
<
ÏÏ 
glyphs
ÏÏ  &
.
ÏÏ& '
Length
ÏÏ' -
&&
ÏÏ. 0
glyphs
ÏÏ1 7
[
ÏÏ7 8
i
ÏÏ8 9
]
ÏÏ9 :
!=
ÏÏ; =
null
ÏÏ> B
;
ÏÏB C
i
ÏÏD E
++
ÏÏE G
)
ÏÏG H
{
ÌÌ 
Glyph
ÓÓ 
glyph
ÓÓ 
=
ÓÓ 
glyphs
ÓÓ $
[
ÓÓ$ %
i
ÓÓ% &
]
ÓÓ& '
;
ÓÓ' (
uint
ÔÔ 

glyphIndex
ÔÔ 
=
ÔÔ  !
glyph
ÔÔ" '
.
ÔÔ' (
index
ÔÔ( -
;
ÔÔ- .
glyph
ÒÒ 
.
ÒÒ 

atlasIndex
ÒÒ  
=
ÒÒ! "!
m_AtlasTextureIndex
ÒÒ# 6
;
ÒÒ6 7
m_GlyphTable
ÙÙ 
.
ÙÙ 
Add
ÙÙ  
(
ÙÙ  !
glyph
ÙÙ! &
)
ÙÙ& '
;
ÙÙ' (%
m_GlyphLookupDictionary
ıı '
.
ıı' (
Add
ıı( +
(
ıı+ ,

glyphIndex
ıı, 6
,
ıı6 7
glyph
ıı8 =
)
ıı= >
;
ıı> ?(
m_GlyphIndexListNewlyAdded
˜˜ *
.
˜˜* +
Add
˜˜+ .
(
˜˜. /

glyphIndex
˜˜/ 9
)
˜˜9 :
;
˜˜: ;
m_GlyphIndexList
¯¯  
.
¯¯  !
Add
¯¯! $
(
¯¯$ %

glyphIndex
¯¯% /
)
¯¯/ 0
;
¯¯0 1
}
˘˘ 
m_GlyphsToAdd
¸¸ 
.
¸¸ 
Clear
¸¸ 
(
¸¸  
)
¸¸  !
;
¸¸! "
for
ˇˇ 
(
ˇˇ 
int
ˇˇ 
i
ˇˇ 
=
ˇˇ 
$num
ˇˇ 
;
ˇˇ 
i
ˇˇ 
<
ˇˇ 
m_CharactersToAdd
ˇˇ  1
.
ˇˇ1 2
Count
ˇˇ2 7
;
ˇˇ7 8
i
ˇˇ9 :
++
ˇˇ: <
)
ˇˇ< =
{
ÄÄ 
TMP_Character
ÅÅ 
	character
ÅÅ '
=
ÅÅ( )
m_CharactersToAdd
ÅÅ* ;
[
ÅÅ; <
i
ÅÅ< =
]
ÅÅ= >
;
ÅÅ> ?
Glyph
ÇÇ 
glyph
ÇÇ 
;
ÇÇ 
if
ÑÑ 
(
ÑÑ %
m_GlyphLookupDictionary
ÑÑ +
.
ÑÑ+ ,
TryGetValue
ÑÑ, 7
(
ÑÑ7 8
	character
ÑÑ8 A
.
ÑÑA B

glyphIndex
ÑÑB L
,
ÑÑL M
out
ÑÑN Q
glyph
ÑÑR W
)
ÑÑW X
==
ÑÑY [
false
ÑÑ\ a
)
ÑÑa b
{
ÖÖ 
m_GlyphsToAdd
ÜÜ !
.
ÜÜ! "
Add
ÜÜ" %
(
ÜÜ% &
	character
ÜÜ& /
.
ÜÜ/ 0

glyphIndex
ÜÜ0 :
)
ÜÜ: ;
;
ÜÜ; <
continue
áá 
;
áá 
}
àà 
	character
ãã 
.
ãã 
glyph
ãã 
=
ãã  !
glyph
ãã" '
;
ãã' (
	character
åå 
.
åå 
	textAsset
åå #
=
åå$ %
this
åå& *
;
åå* +
m_CharacterTable
éé  
.
éé  !
Add
éé! $
(
éé$ %
	character
éé% .
)
éé. /
;
éé/ 0)
m_CharacterLookupDictionary
èè +
.
èè+ ,
Add
èè, /
(
èè/ 0
	character
èè0 9
.
èè9 :
unicode
èè: A
,
èèA B
	character
èèC L
)
èèL M
;
èèM N
m_CharactersToAdd
íí !
.
íí! "
RemoveAt
íí" *
(
íí* +
i
íí+ ,
)
íí, -
;
íí- .
i
ìì 
-=
ìì 
$num
ìì 
;
ìì 
}
îî 
if
óó 
(
óó +
m_IsMultiAtlasTexturesEnabled
óó -
&&
óó. 0%
allGlyphsAddedToTexture
óó1 H
==
óóI K
false
óóL Q
)
óóQ R
{
òò 
while
ôô 
(
ôô %
allGlyphsAddedToTexture
ôô .
==
ôô/ 1
false
ôô2 7
)
ôô7 8%
allGlyphsAddedToTexture
öö +
=
öö, -+
TryAddGlyphsToNewAtlasTexture
öö. K
(
ööK L
)
ööL M
;
ööM N
}
õõ 
if
ûû 
(
ûû !
includeFontFeatures
ûû #
)
ûû# $*
UpdateGlyphAdjustmentRecords
üü ,
(
üü, -
)
üü- .
;
üü. /
if
££ 
(
££ 
UnityEditor
££ 
.
££ 
EditorUtility
££ )
.
££) *
IsPersistent
££* 6
(
££6 7
this
££7 ;
)
££; <
)
££< =
{
§§ '
TMP_EditorResourceManager
•• )
.
••) *'
RegisterResourceForUpdate
••* C
(
••C D
this
••D H
)
••H I
;
••I J
}
¶¶ 
for
™™ 
(
™™ 
int
™™ 
i
™™ 
=
™™ 
$num
™™ 
;
™™ 
i
™™ 
<
™™ 
m_CharactersToAdd
™™  1
.
™™1 2
Count
™™2 7
;
™™7 8
i
™™9 :
++
™™: <
)
™™< =
{
´´ 
TMP_Character
¨¨ 
	character
¨¨ '
=
¨¨( )
m_CharactersToAdd
¨¨* ;
[
¨¨; <
i
¨¨< =
]
¨¨= >
;
¨¨> ?$
s_MissingCharacterList
≠≠ &
.
≠≠& '
Add
≠≠' *
(
≠≠* +
	character
≠≠+ 4
.
≠≠4 5
unicode
≠≠5 <
)
≠≠< =
;
≠≠= >
}
ÆÆ 
missingUnicodes
∞∞ 
=
∞∞ 
null
∞∞ "
;
∞∞" #
if
≤≤ 
(
≤≤ $
s_MissingCharacterList
≤≤ &
.
≤≤& '
Count
≤≤' ,
>
≤≤- .
$num
≤≤/ 0
)
≤≤0 1
missingUnicodes
≥≥ 
=
≥≥  !$
s_MissingCharacterList
≥≥" 8
.
≥≥8 9
ToArray
≥≥9 @
(
≥≥@ A
)
≥≥A B
;
≥≥B C&
k_TryAddCharactersMarker
µµ $
.
µµ$ %
End
µµ% (
(
µµ( )
)
µµ) *
;
µµ* +
return
∑∑ %
allGlyphsAddedToTexture
∑∑ *
&&
∑∑+ -
!
∑∑. /!
isMissingCharacters
∑∑/ B
;
∑∑B C
}
∏∏ 	
public
¿¿ 
bool
¿¿ 
TryAddCharacters
¿¿ $
(
¿¿$ %
string
¿¿% +

characters
¿¿, 6
,
¿¿6 7
bool
¿¿8 <!
includeFontFeatures
¿¿= P
=
¿¿Q R
false
¿¿S X
)
¿¿X Y
{
¡¡ 	
string
¬¬ 
missingCharacters
¬¬ $
;
¬¬$ %
return
ƒƒ 
TryAddCharacters
ƒƒ #
(
ƒƒ# $

characters
ƒƒ$ .
,
ƒƒ. /
out
ƒƒ0 3
missingCharacters
ƒƒ4 E
,
ƒƒE F!
includeFontFeatures
ƒƒG Z
)
ƒƒZ [
;
ƒƒ[ \
}
≈≈ 	
public
œœ 
bool
œœ 
TryAddCharacters
œœ $
(
œœ$ %
string
œœ% +

characters
œœ, 6
,
œœ6 7
out
œœ8 ;
string
œœ< B
missingCharacters
œœC T
,
œœT U
bool
œœV Z!
includeFontFeatures
œœ[ n
=
œœo p
false
œœq v
)
œœv w
{
–– 	&
k_TryAddCharactersMarker
—— $
.
——$ %
Begin
——% *
(
——* +
)
——+ ,
;
——, -
if
‘‘ 
(
‘‘ 
string
‘‘ 
.
‘‘ 
IsNullOrEmpty
‘‘ $
(
‘‘$ %

characters
‘‘% /
)
‘‘/ 0
||
‘‘1 3#
m_AtlasPopulationMode
‘‘4 I
==
‘‘J L!
AtlasPopulationMode
‘‘M `
.
‘‘` a
Static
‘‘a g
)
‘‘g h
{
’’ 
if
÷÷ 
(
÷÷ #
m_AtlasPopulationMode
÷÷ )
==
÷÷* ,!
AtlasPopulationMode
÷÷- @
.
÷÷@ A
Static
÷÷A G
)
÷÷G H
Debug
◊◊ 
.
◊◊ 

LogWarning
◊◊ $
(
◊◊$ %
$str
◊◊% O
+
◊◊P Q
this
◊◊R V
.
◊◊V W
name
◊◊W [
+
◊◊\ ]
$str◊◊^ ì
,◊◊ì î
this◊◊ï ô
)◊◊ô ö
;◊◊ö õ
else
ÿÿ 
{
ŸŸ 
Debug
⁄⁄ 
.
⁄⁄ 

LogWarning
⁄⁄ $
(
⁄⁄$ %
$str
⁄⁄% O
+
⁄⁄P Q
this
⁄⁄R V
.
⁄⁄V W
name
⁄⁄W [
+
⁄⁄\ ]
$str⁄⁄^ ó
,⁄⁄ó ò
this⁄⁄ô ù
)⁄⁄ù û
;⁄⁄û ü
}
€€ 
missingCharacters
›› !
=
››" #

characters
››$ .
;
››. /&
k_TryAddCharactersMarker
ﬁﬁ (
.
ﬁﬁ( )
End
ﬁﬁ) ,
(
ﬁﬁ, -
)
ﬁﬁ- .
;
ﬁﬁ. /
return
ﬂﬂ 
false
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
if
„„ 
(
„„ 

FontEngine
„„ 
.
„„ 
LoadFontFace
„„ '
(
„„' (
m_SourceFontFile
„„( 8
,
„„8 9

m_FaceInfo
„„: D
.
„„D E
	pointSize
„„E N
)
„„N O
!=
„„P R
FontEngineError
„„S b
.
„„b c
Success
„„c j
)
„„j k
{
‰‰ 
missingCharacters
ÂÂ !
=
ÂÂ" #

characters
ÂÂ$ .
;
ÂÂ. /&
k_TryAddCharactersMarker
ÊÊ (
.
ÊÊ( )
End
ÊÊ) ,
(
ÊÊ, -
)
ÊÊ- .
;
ÊÊ. /
return
ÁÁ 
false
ÁÁ 
;
ÁÁ 
}
ËË 
if
ÎÎ 
(
ÎÎ )
m_CharacterLookupDictionary
ÎÎ +
==
ÎÎ, .
null
ÎÎ/ 3
||
ÎÎ4 6%
m_GlyphLookupDictionary
ÎÎ7 N
==
ÎÎO Q
null
ÎÎR V
)
ÎÎV W%
ReadFontAssetDefinition
ÏÏ '
(
ÏÏ' (
)
ÏÏ( )
;
ÏÏ) *
m_GlyphsToAdd
ÔÔ 
.
ÔÔ 
Clear
ÔÔ 
(
ÔÔ  
)
ÔÔ  !
;
ÔÔ! "!
m_GlyphsToAddLookup
 
.
  
Clear
  %
(
% &
)
& '
;
' (
m_CharactersToAdd
ÒÒ 
.
ÒÒ 
Clear
ÒÒ #
(
ÒÒ# $
)
ÒÒ$ %
;
ÒÒ% &%
m_CharactersToAddLookup
ÚÚ #
.
ÚÚ# $
Clear
ÚÚ$ )
(
ÚÚ) *
)
ÚÚ* +
;
ÚÚ+ ,$
s_MissingCharacterList
ÛÛ "
.
ÛÛ" #
Clear
ÛÛ# (
(
ÛÛ( )
)
ÛÛ) *
;
ÛÛ* +
bool
ıı !
isMissingCharacters
ıı $
=
ıı% &
false
ıı' ,
;
ıı, -
int
ˆˆ 
characterCount
ˆˆ 
=
ˆˆ  

characters
ˆˆ! +
.
ˆˆ+ ,
Length
ˆˆ, 2
;
ˆˆ2 3
for
˘˘ 
(
˘˘ 
int
˘˘ 
i
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
i
˘˘ 
<
˘˘ 
characterCount
˘˘  .
;
˘˘. /
i
˘˘0 1
++
˘˘1 3
)
˘˘3 4
{
˙˙ 
uint
˚˚ 
unicode
˚˚ 
=
˚˚ 

characters
˚˚ )
[
˚˚) *
i
˚˚* +
]
˚˚+ ,
;
˚˚, -
if
˛˛ 
(
˛˛ )
m_CharacterLookupDictionary
˛˛ /
.
˛˛/ 0
ContainsKey
˛˛0 ;
(
˛˛; <
unicode
˛˛< C
)
˛˛C D
)
˛˛D E
continue
ˇˇ 
;
ˇˇ 
uint
ÇÇ 

glyphIndex
ÇÇ 
=
ÇÇ  !

FontEngine
ÇÇ" ,
.
ÇÇ, -
GetGlyphIndex
ÇÇ- :
(
ÇÇ: ;
unicode
ÇÇ; B
)
ÇÇB C
;
ÇÇC D
if
ÖÖ 
(
ÖÖ 

glyphIndex
ÖÖ 
==
ÖÖ !
$num
ÖÖ" #
)
ÖÖ# $
{
ÜÜ 
switch
àà 
(
àà 
unicode
àà #
)
àà# $
{
ââ 
case
ää 
$num
ää !
:
ää! "

glyphIndex
åå &
=
åå' (

FontEngine
åå) 3
.
åå3 4
GetGlyphIndex
åå4 A
(
ååA B
$num
ååB F
)
ååF G
;
ååG H
break
çç !
;
çç! "
case
éé 
$num
éé !
:
éé! "
case
èè 
$num
èè #
:
èè# $

glyphIndex
ëë &
=
ëë' (

FontEngine
ëë) 3
.
ëë3 4
GetGlyphIndex
ëë4 A
(
ëëA B
$num
ëëB F
)
ëëF G
;
ëëG H
break
íí !
;
íí! "
}
ìì 
if
ññ 
(
ññ 

glyphIndex
ññ "
==
ññ# %
$num
ññ& '
)
ññ' (
{
óó $
s_MissingCharacterList
ôô .
.
ôô. /
Add
ôô/ 2
(
ôô2 3
unicode
ôô3 :
)
ôô: ;
;
ôô; <!
isMissingCharacters
õõ +
=
õõ, -
true
õõ. 2
;
õõ2 3
continue
úú  
;
úú  !
}
ùù 
}
ûû 
TMP_Character
†† 
	character
†† '
=
††( )
new
††* -
TMP_Character
††. ;
(
††; <
unicode
††< C
,
††C D

glyphIndex
††E O
)
††O P
;
††P Q
if
££ 
(
££ %
m_GlyphLookupDictionary
££ +
.
££+ ,
ContainsKey
££, 7
(
££7 8

glyphIndex
££8 B
)
££B C
)
££C D
{
§§ 
	character
¶¶ 
.
¶¶ 
glyph
¶¶ #
=
¶¶$ %%
m_GlyphLookupDictionary
¶¶& =
[
¶¶= >

glyphIndex
¶¶> H
]
¶¶H I
;
¶¶I J
	character
ßß 
.
ßß 
	textAsset
ßß '
=
ßß( )
this
ßß* .
;
ßß. /
m_CharacterTable
©© $
.
©©$ %
Add
©©% (
(
©©( )
	character
©©) 2
)
©©2 3
;
©©3 4)
m_CharacterLookupDictionary
™™ /
.
™™/ 0
Add
™™0 3
(
™™3 4
unicode
™™4 ;
,
™™; <
	character
™™= F
)
™™F G
;
™™G H
continue
´´ 
;
´´ 
}
¨¨ 
if
ØØ 
(
ØØ !
m_GlyphsToAddLookup
ØØ '
.
ØØ' (
Add
ØØ( +
(
ØØ+ ,

glyphIndex
ØØ, 6
)
ØØ6 7
)
ØØ7 8
m_GlyphsToAdd
∞∞ !
.
∞∞! "
Add
∞∞" %
(
∞∞% &

glyphIndex
∞∞& 0
)
∞∞0 1
;
∞∞1 2
if
≥≥ 
(
≥≥ %
m_CharactersToAddLookup
≥≥ +
.
≥≥+ ,
Add
≥≥, /
(
≥≥/ 0
unicode
≥≥0 7
)
≥≥7 8
)
≥≥8 9
m_CharactersToAdd
¥¥ %
.
¥¥% &
Add
¥¥& )
(
¥¥) *
	character
¥¥* 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
if
∑∑ 
(
∑∑ 
m_GlyphsToAdd
∑∑ 
.
∑∑ 
Count
∑∑ #
==
∑∑$ &
$num
∑∑' (
)
∑∑( )
{
∏∏ 
missingCharacters
ππ !
=
ππ" #

characters
ππ$ .
;
ππ. /&
k_TryAddCharactersMarker
∫∫ (
.
∫∫( )
End
∫∫) ,
(
∫∫, -
)
∫∫- .
;
∫∫. /
return
ªª 
false
ªª 
;
ªª 
}
ºº 
if
øø 
(
øø 
m_AtlasTextures
øø 
[
øø  !
m_AtlasTextureIndex
øø  3
]
øø3 4
.
øø4 5
width
øø5 :
==
øø; =
$num
øø> ?
||
øø@ B
m_AtlasTextures
øøC R
[
øøR S!
m_AtlasTextureIndex
øøS f
]
øøf g
.
øøg h
height
øøh n
==
øøo q
$num
øør s
)
øøs t
{
¿¿ 
m_AtlasTextures
¬¬ 
[
¬¬  !
m_AtlasTextureIndex
¬¬  3
]
¬¬3 4
.
¬¬4 5
Resize
¬¬5 ;
(
¬¬; <
m_AtlasWidth
¬¬< H
,
¬¬H I
m_AtlasHeight
¬¬J W
)
¬¬W X
;
¬¬X Y

FontEngine
√√ 
.
√√ 
ResetAtlasTexture
√√ ,
(
√√, -
m_AtlasTextures
√√- <
[
√√< =!
m_AtlasTextureIndex
√√= P
]
√√P Q
)
√√Q R
;
√√R S
}
ƒƒ 
Glyph
∆∆ 
[
∆∆ 
]
∆∆ 
glyphs
∆∆ 
;
∆∆ 
bool
»» %
allGlyphsAddedToTexture
»» (
=
»») *

FontEngine
»»+ 5
.
»»5 6#
TryAddGlyphsToTexture
»»6 K
(
»»K L
m_GlyphsToAdd
»»L Y
,
»»Y Z
m_AtlasPadding
»»[ i
,
»»i j
GlyphPackingMode
»»k {
.
»»{ |
BestShortSideFit»»| å
,»»å ç 
m_FreeGlyphRects»»é û
,»»û ü 
m_UsedGlyphRects»»† ∞
,»»∞ ±!
m_AtlasRenderMode»»≤ √
,»»√ ƒ
m_AtlasTextures»»≈ ‘
[»»‘ ’#
m_AtlasTextureIndex»»’ Ë
]»»Ë È
,»»È Í
out»»Î Ó
glyphs»»Ô ı
)»»ı ˆ
;»»ˆ ˜
for
   
(
   
int
   
i
   
=
   
$num
   
;
   
i
   
<
   
glyphs
    &
.
  & '
Length
  ' -
&&
  . 0
glyphs
  1 7
[
  7 8
i
  8 9
]
  9 :
!=
  ; =
null
  > B
;
  B C
i
  D E
++
  E G
)
  G H
{
ÀÀ 
Glyph
ÃÃ 
glyph
ÃÃ 
=
ÃÃ 
glyphs
ÃÃ $
[
ÃÃ$ %
i
ÃÃ% &
]
ÃÃ& '
;
ÃÃ' (
uint
ÕÕ 

glyphIndex
ÕÕ 
=
ÕÕ  !
glyph
ÕÕ" '
.
ÕÕ' (
index
ÕÕ( -
;
ÕÕ- .
glyph
œœ 
.
œœ 

atlasIndex
œœ  
=
œœ! "!
m_AtlasTextureIndex
œœ# 6
;
œœ6 7
m_GlyphTable
““ 
.
““ 
Add
““  
(
““  !
glyph
““! &
)
““& '
;
““' (%
m_GlyphLookupDictionary
”” '
.
””' (
Add
””( +
(
””+ ,

glyphIndex
””, 6
,
””6 7
glyph
””8 =
)
””= >
;
””> ?(
m_GlyphIndexListNewlyAdded
’’ *
.
’’* +
Add
’’+ .
(
’’. /

glyphIndex
’’/ 9
)
’’9 :
;
’’: ;
m_GlyphIndexList
÷÷  
.
÷÷  !
Add
÷÷! $
(
÷÷$ %

glyphIndex
÷÷% /
)
÷÷/ 0
;
÷÷0 1
}
◊◊ 
m_GlyphsToAdd
⁄⁄ 
.
⁄⁄ 
Clear
⁄⁄ 
(
⁄⁄  
)
⁄⁄  !
;
⁄⁄! "
for
›› 
(
›› 
int
›› 
i
›› 
=
›› 
$num
›› 
;
›› 
i
›› 
<
›› 
m_CharactersToAdd
››  1
.
››1 2
Count
››2 7
;
››7 8
i
››9 :
++
››: <
)
››< =
{
ﬁﬁ 
TMP_Character
ﬂﬂ 
	character
ﬂﬂ '
=
ﬂﬂ( )
m_CharactersToAdd
ﬂﬂ* ;
[
ﬂﬂ; <
i
ﬂﬂ< =
]
ﬂﬂ= >
;
ﬂﬂ> ?
Glyph
‡‡ 
glyph
‡‡ 
;
‡‡ 
if
‚‚ 
(
‚‚ %
m_GlyphLookupDictionary
‚‚ +
.
‚‚+ ,
TryGetValue
‚‚, 7
(
‚‚7 8
	character
‚‚8 A
.
‚‚A B

glyphIndex
‚‚B L
,
‚‚L M
out
‚‚N Q
glyph
‚‚R W
)
‚‚W X
==
‚‚Y [
false
‚‚\ a
)
‚‚a b
{
„„ 
m_GlyphsToAdd
‰‰ !
.
‰‰! "
Add
‰‰" %
(
‰‰% &
	character
‰‰& /
.
‰‰/ 0

glyphIndex
‰‰0 :
)
‰‰: ;
;
‰‰; <
continue
ÂÂ 
;
ÂÂ 
}
ÊÊ 
	character
ÈÈ 
.
ÈÈ 
glyph
ÈÈ 
=
ÈÈ  !
glyph
ÈÈ" '
;
ÈÈ' (
	character
ÍÍ 
.
ÍÍ 
	textAsset
ÍÍ #
=
ÍÍ$ %
this
ÍÍ& *
;
ÍÍ* +
m_CharacterTable
ÏÏ  
.
ÏÏ  !
Add
ÏÏ! $
(
ÏÏ$ %
	character
ÏÏ% .
)
ÏÏ. /
;
ÏÏ/ 0)
m_CharacterLookupDictionary
ÌÌ +
.
ÌÌ+ ,
Add
ÌÌ, /
(
ÌÌ/ 0
	character
ÌÌ0 9
.
ÌÌ9 :
unicode
ÌÌ: A
,
ÌÌA B
	character
ÌÌC L
)
ÌÌL M
;
ÌÌM N
m_CharactersToAdd
 !
.
! "
RemoveAt
" *
(
* +
i
+ ,
)
, -
;
- .
i
ÒÒ 
-=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
}
ÚÚ 
if
ıı 
(
ıı +
m_IsMultiAtlasTexturesEnabled
ıı -
&&
ıı. 0%
allGlyphsAddedToTexture
ıı1 H
==
ııI K
false
ııL Q
)
ııQ R
{
ˆˆ 
while
˜˜ 
(
˜˜ %
allGlyphsAddedToTexture
˜˜ .
==
˜˜/ 1
false
˜˜2 7
)
˜˜7 8%
allGlyphsAddedToTexture
¯¯ +
=
¯¯, -+
TryAddGlyphsToNewAtlasTexture
¯¯. K
(
¯¯K L
)
¯¯L M
;
¯¯M N
}
˘˘ 
if
¸¸ 
(
¸¸ !
includeFontFeatures
¸¸ #
)
¸¸# $*
UpdateGlyphAdjustmentRecords
˝˝ ,
(
˝˝, -
)
˝˝- .
;
˝˝. /
if
ÅÅ 
(
ÅÅ 
UnityEditor
ÅÅ 
.
ÅÅ 
EditorUtility
ÅÅ )
.
ÅÅ) *
IsPersistent
ÅÅ* 6
(
ÅÅ6 7
this
ÅÅ7 ;
)
ÅÅ; <
)
ÅÅ< =
{
ÇÇ '
TMP_EditorResourceManager
ÉÉ )
.
ÉÉ) *'
RegisterResourceForUpdate
ÉÉ* C
(
ÉÉC D
this
ÉÉD H
)
ÉÉH I
;
ÉÉI J
}
ÑÑ 
missingCharacters
áá 
=
áá 
string
áá  &
.
áá& '
Empty
áá' ,
;
áá, -
for
ää 
(
ää 
int
ää 
i
ää 
=
ää 
$num
ää 
;
ää 
i
ää 
<
ää 
m_CharactersToAdd
ää  1
.
ää1 2
Count
ää2 7
;
ää7 8
i
ää9 :
++
ää: <
)
ää< =
{
ãã 
TMP_Character
åå 
	character
åå '
=
åå( )
m_CharactersToAdd
åå* ;
[
åå; <
i
åå< =
]
åå= >
;
åå> ?$
s_MissingCharacterList
çç &
.
çç& '
Add
çç' *
(
çç* +
	character
çç+ 4
.
çç4 5
unicode
çç5 <
)
çç< =
;
çç= >
}
éé 
if
êê 
(
êê $
s_MissingCharacterList
êê &
.
êê& '
Count
êê' ,
>
êê- .
$num
êê/ 0
)
êê0 1
missingCharacters
ëë !
=
ëë" #$
s_MissingCharacterList
ëë$ :
.
ëë: ;
UintToString
ëë; G
(
ëëG H
)
ëëH I
;
ëëI J&
k_TryAddCharactersMarker
ìì $
.
ìì$ %
End
ìì% (
(
ìì( )
)
ìì) *
;
ìì* +
return
îî %
allGlyphsAddedToTexture
îî *
&&
îî+ -
!
îî. /!
isMissingCharacters
îî/ B
;
îîB C
}
ïï 	
internal
¨¨ 
bool
¨¨ %
TryAddCharacterInternal
¨¨ -
(
¨¨- .
uint
¨¨. 2
unicode
¨¨3 :
,
¨¨: ;
out
¨¨< ?
TMP_Character
¨¨@ M
	character
¨¨N W
)
¨¨W X
{
≠≠ 	%
k_TryAddCharacterMarker
ÆÆ #
.
ÆÆ# $
Begin
ÆÆ$ )
(
ÆÆ) *
)
ÆÆ* +
;
ÆÆ+ ,
	character
∞∞ 
=
∞∞ 
null
∞∞ 
;
∞∞ 
if
≥≥ 
(
≥≥ +
m_MissingUnicodesFromFontFile
≥≥ -
.
≥≥- .
Contains
≥≥. 6
(
≥≥6 7
unicode
≥≥7 >
)
≥≥> ?
)
≥≥? @
{
¥¥ %
k_TryAddCharacterMarker
µµ '
.
µµ' (
End
µµ( +
(
µµ+ ,
)
µµ, -
;
µµ- .
return
∂∂ 
false
∂∂ 
;
∂∂ 
}
∑∑ 
if
∫∫ 
(
∫∫ 

FontEngine
∫∫ 
.
∫∫ 
LoadFontFace
∫∫ '
(
∫∫' (
sourceFontFile
∫∫( 6
,
∫∫6 7

m_FaceInfo
∫∫8 B
.
∫∫B C
	pointSize
∫∫C L
)
∫∫L M
!=
∫∫N P
FontEngineError
∫∫Q `
.
∫∫` a
Success
∫∫a h
)
∫∫h i
{
ªª %
k_TryAddCharacterMarker
ºº '
.
ºº' (
End
ºº( +
(
ºº+ ,
)
ºº, -
;
ºº- .
return
ΩΩ 
false
ΩΩ 
;
ΩΩ 
}
ææ 
uint
¿¿ 

glyphIndex
¿¿ 
=
¿¿ 

FontEngine
¿¿ (
.
¿¿( )
GetGlyphIndex
¿¿) 6
(
¿¿6 7
unicode
¿¿7 >
)
¿¿> ?
;
¿¿? @
if
¡¡ 
(
¡¡ 

glyphIndex
¡¡ 
==
¡¡ 
$num
¡¡ 
)
¡¡  
{
¬¬ 
switch
ƒƒ 
(
ƒƒ 
unicode
ƒƒ 
)
ƒƒ  
{
≈≈ 
case
∆∆ 
$num
∆∆ 
:
∆∆ 

glyphIndex
»» "
=
»»# $

FontEngine
»»% /
.
»»/ 0
GetGlyphIndex
»»0 =
(
»»= >
$num
»»> B
)
»»B C
;
»»C D
break
…… 
;
…… 
case
   
$num
   
:
   
case
ÀÀ 
$num
ÀÀ 
:
ÀÀ  

glyphIndex
ÕÕ "
=
ÕÕ# $

FontEngine
ÕÕ% /
.
ÕÕ/ 0
GetGlyphIndex
ÕÕ0 =
(
ÕÕ= >
$num
ÕÕ> B
)
ÕÕB C
;
ÕÕC D
break
ŒŒ 
;
ŒŒ 
}
œœ 
if
““ 
(
““ 

glyphIndex
““ 
==
““ !
$num
““" #
)
““# $
{
”” +
m_MissingUnicodesFromFontFile
‘‘ 1
.
‘‘1 2
Add
‘‘2 5
(
‘‘5 6
unicode
‘‘6 =
)
‘‘= >
;
‘‘> ?%
k_TryAddCharacterMarker
÷÷ +
.
÷÷+ ,
End
÷÷, /
(
÷÷/ 0
)
÷÷0 1
;
÷÷1 2
return
◊◊ 
false
◊◊  
;
◊◊  !
}
ÿÿ 
}
ŸŸ 
if
‹‹ 
(
‹‹ %
m_GlyphLookupDictionary
‹‹ '
.
‹‹' (
ContainsKey
‹‹( 3
(
‹‹3 4

glyphIndex
‹‹4 >
)
‹‹> ?
)
‹‹? @
{
›› 
	character
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ 
TMP_Character
ﬁﬁ  -
(
ﬁﬁ- .
unicode
ﬁﬁ. 5
,
ﬁﬁ5 6
this
ﬁﬁ7 ;
,
ﬁﬁ; <%
m_GlyphLookupDictionary
ﬁﬁ= T
[
ﬁﬁT U

glyphIndex
ﬁﬁU _
]
ﬁﬁ_ `
)
ﬁﬁ` a
;
ﬁﬁa b
m_CharacterTable
ﬂﬂ  
.
ﬂﬂ  !
Add
ﬂﬂ! $
(
ﬂﬂ$ %
	character
ﬂﬂ% .
)
ﬂﬂ. /
;
ﬂﬂ/ 0)
m_CharacterLookupDictionary
‡‡ +
.
‡‡+ ,
Add
‡‡, /
(
‡‡/ 0
unicode
‡‡0 7
,
‡‡7 8
	character
‡‡9 B
)
‡‡B C
;
‡‡C D
if
ÁÁ 
(
ÁÁ 
UnityEditor
ÁÁ 
.
ÁÁ  
EditorUtility
ÁÁ  -
.
ÁÁ- .
IsPersistent
ÁÁ. :
(
ÁÁ: ;
this
ÁÁ; ?
)
ÁÁ? @
)
ÁÁ@ A
{
ËË '
TMP_EditorResourceManager
ÈÈ -
.
ÈÈ- .'
RegisterResourceForUpdate
ÈÈ. G
(
ÈÈG H
this
ÈÈH L
)
ÈÈL M
;
ÈÈM N
}
ÍÍ %
k_TryAddCharacterMarker
ÌÌ '
.
ÌÌ' (
End
ÌÌ( +
(
ÌÌ+ ,
)
ÌÌ, -
;
ÌÌ- .
return
ÓÓ 
true
ÓÓ 
;
ÓÓ 
}
ÔÔ 
Glyph
ÒÒ 
glyph
ÒÒ 
=
ÒÒ 
null
ÒÒ 
;
ÒÒ 
if
èè 
(
èè 
m_AtlasTextures
èè 
[
èè  !
m_AtlasTextureIndex
èè  3
]
èè3 4
.
èè4 5

isReadable
èè5 ?
==
èè@ B
false
èèC H
)
èèH I
{
êê 
Debug
ëë 
.
ëë 

LogWarning
ëë  
(
ëë  !
$str
ëë! X
+
ëëY Z
this
ëë[ _
.
ëë_ `
name
ëë` d
+
ëëe f
$strëëg ï
+ëëñ ó
m_AtlasTexturesëëò ß
[ëëß ®#
m_AtlasTextureIndexëë® ª
]ëëª º
.ëëº Ω
nameëëΩ ¡
+ëë¬ √
$strëëƒ —
,ëë— “
m_AtlasTexturesëë” ‚
[ëë‚ „#
m_AtlasTextureIndexëë„ ˆ
]ëëˆ ˜
)ëë˜ ¯
;ëë¯ ˘%
k_TryAddCharacterMarker
ìì '
.
ìì' (
End
ìì( +
(
ìì+ ,
)
ìì, -
;
ìì- .
return
îî 
false
îî 
;
îî 
}
ïï 
if
òò 
(
òò 
m_AtlasTextures
òò 
[
òò  !
m_AtlasTextureIndex
òò  3
]
òò3 4
.
òò4 5
width
òò5 :
==
òò; =
$num
òò> ?
||
òò@ B
m_AtlasTextures
òòC R
[
òòR S!
m_AtlasTextureIndex
òòS f
]
òòf g
.
òòg h
height
òòh n
==
òòo q
$num
òòr s
)
òòs t
{
ôô 
m_AtlasTextures
öö 
[
öö  !
m_AtlasTextureIndex
öö  3
]
öö3 4
.
öö4 5
Resize
öö5 ;
(
öö; <
m_AtlasWidth
öö< H
,
ööH I
m_AtlasHeight
ööJ W
)
ööW X
;
ööX Y

FontEngine
õõ 
.
õõ 
ResetAtlasTexture
õõ ,
(
õõ, -
m_AtlasTextures
õõ- <
[
õõ< =!
m_AtlasTextureIndex
õõ= P
]
õõP Q
)
õõQ R
;
õõR S
}
úú 
if
üü 
(
üü 

FontEngine
üü 
.
üü "
TryAddGlyphToTexture
üü /
(
üü/ 0

glyphIndex
üü0 :
,
üü: ;
m_AtlasPadding
üü< J
,
üüJ K
GlyphPackingMode
üüL \
.
üü\ ]
BestShortSideFit
üü] m
,
üüm n
m_FreeGlyphRects
üüo 
,üü Ä 
m_UsedGlyphRectsüüÅ ë
,üüë í!
m_AtlasRenderModeüüì §
,üü§ •
m_AtlasTexturesüü¶ µ
[üüµ ∂#
m_AtlasTextureIndexüü∂ …
]üü…  
,üü  À
outüüÃ œ
glyphüü– ’
)üü’ ÷
)üü÷ ◊
{
†† 
glyph
¢¢ 
.
¢¢ 

atlasIndex
¢¢  
=
¢¢! "!
m_AtlasTextureIndex
¢¢# 6
;
¢¢6 7
m_GlyphTable
•• 
.
•• 
Add
••  
(
••  !
glyph
••! &
)
••& '
;
••' (%
m_GlyphLookupDictionary
¶¶ '
.
¶¶' (
Add
¶¶( +
(
¶¶+ ,

glyphIndex
¶¶, 6
,
¶¶6 7
glyph
¶¶8 =
)
¶¶= >
;
¶¶> ?
	character
©© 
=
©© 
new
©© 
TMP_Character
©©  -
(
©©- .
unicode
©©. 5
,
©©5 6
this
©©7 ;
,
©©; <
glyph
©©= B
)
©©B C
;
©©C D
m_CharacterTable
™™  
.
™™  !
Add
™™! $
(
™™$ %
	character
™™% .
)
™™. /
;
™™/ 0)
m_CharacterLookupDictionary
´´ +
.
´´+ ,
Add
´´, /
(
´´/ 0
unicode
´´0 7
,
´´7 8
	character
´´9 B
)
´´B C
;
´´C D
m_GlyphIndexList
≠≠  
.
≠≠  !
Add
≠≠! $
(
≠≠$ %

glyphIndex
≠≠% /
)
≠≠/ 0
;
≠≠0 1(
m_GlyphIndexListNewlyAdded
ÆÆ *
.
ÆÆ* +
Add
ÆÆ+ .
(
ÆÆ. /

glyphIndex
ÆÆ/ 9
)
ÆÆ9 :
;
ÆÆ: ;
if
∞∞ 
(
∞∞ 
TMP_Settings
∞∞  
.
∞∞  !&
getFontFeaturesAtRuntime
∞∞! 9
)
∞∞9 :3
%RegisterFontAssetForFontFeatureUpdate
±± 9
(
±±9 :
this
±±: >
)
±±> ?
;
±±? @
if
∏∏ 
(
∏∏ 
UnityEditor
∏∏ 
.
∏∏  
EditorUtility
∏∏  -
.
∏∏- .
IsPersistent
∏∏. :
(
∏∏: ;
this
∏∏; ?
)
∏∏? @
)
∏∏@ A
{
ππ '
TMP_EditorResourceManager
∫∫ -
.
∫∫- .'
RegisterResourceForUpdate
∫∫. G
(
∫∫G H
this
∫∫H L
)
∫∫L M
;
∫∫M N
}
ªª %
k_TryAddCharacterMarker
ææ '
.
ææ' (
End
ææ( +
(
ææ+ ,
)
ææ, -
;
ææ- .
return
øø 
true
øø 
;
øø 
}
¿¿ 
if
√√ 
(
√√ +
m_IsMultiAtlasTexturesEnabled
√√ -
)
√√- .
{
ƒƒ "
SetupNewAtlasTexture
∆∆ $
(
∆∆$ %
)
∆∆% &
;
∆∆& '
if
…… 
(
…… 

FontEngine
…… 
.
…… "
TryAddGlyphToTexture
…… 3
(
……3 4

glyphIndex
……4 >
,
……> ?
m_AtlasPadding
……@ N
,
……N O
GlyphPackingMode
……P `
.
……` a
BestShortSideFit
……a q
,
……q r
m_FreeGlyphRects……s É
,……É Ñ 
m_UsedGlyphRects……Ö ï
,……ï ñ!
m_AtlasRenderMode……ó ®
,……® ©
m_AtlasTextures……™ π
[……π ∫#
m_AtlasTextureIndex……∫ Õ
]……Õ Œ
,……Œ œ
out……– ”
glyph……‘ Ÿ
)……Ÿ ⁄
)……⁄ €
{
   
glyph
ÃÃ 
.
ÃÃ 

atlasIndex
ÃÃ $
=
ÃÃ% &!
m_AtlasTextureIndex
ÃÃ' :
;
ÃÃ: ;
m_GlyphTable
œœ  
.
œœ  !
Add
œœ! $
(
œœ$ %
glyph
œœ% *
)
œœ* +
;
œœ+ ,%
m_GlyphLookupDictionary
–– +
.
––+ ,
Add
––, /
(
––/ 0

glyphIndex
––0 :
,
––: ;
glyph
––< A
)
––A B
;
––B C
	character
”” 
=
”” 
new
””  #
TMP_Character
””$ 1
(
””1 2
unicode
””2 9
,
””9 :
this
””; ?
,
””? @
glyph
””A F
)
””F G
;
””G H
m_CharacterTable
‘‘ $
.
‘‘$ %
Add
‘‘% (
(
‘‘( )
	character
‘‘) 2
)
‘‘2 3
;
‘‘3 4)
m_CharacterLookupDictionary
’’ /
.
’’/ 0
Add
’’0 3
(
’’3 4
unicode
’’4 ;
,
’’; <
	character
’’= F
)
’’F G
;
’’G H
m_GlyphIndexList
◊◊ $
.
◊◊$ %
Add
◊◊% (
(
◊◊( )

glyphIndex
◊◊) 3
)
◊◊3 4
;
◊◊4 5(
m_GlyphIndexListNewlyAdded
ÿÿ .
.
ÿÿ. /
Add
ÿÿ/ 2
(
ÿÿ2 3

glyphIndex
ÿÿ3 =
)
ÿÿ= >
;
ÿÿ> ?
if
⁄⁄ 
(
⁄⁄ 
TMP_Settings
⁄⁄ $
.
⁄⁄$ %&
getFontFeaturesAtRuntime
⁄⁄% =
)
⁄⁄= >3
%RegisterFontAssetForFontFeatureUpdate
€€ =
(
€€= >
this
€€> B
)
€€B C
;
€€C D
if
ﬂﬂ 
(
ﬂﬂ 
UnityEditor
ﬂﬂ #
.
ﬂﬂ# $
EditorUtility
ﬂﬂ$ 1
.
ﬂﬂ1 2
IsPersistent
ﬂﬂ2 >
(
ﬂﬂ> ?
this
ﬂﬂ? C
)
ﬂﬂC D
)
ﬂﬂD E
{
‡‡ '
TMP_EditorResourceManager
·· 1
.
··1 2'
RegisterResourceForUpdate
··2 K
(
··K L
this
··L P
)
··P Q
;
··Q R
}
‚‚ %
k_TryAddCharacterMarker
ÂÂ +
.
ÂÂ+ ,
End
ÂÂ, /
(
ÂÂ/ 0
)
ÂÂ0 1
;
ÂÂ1 2
return
ÊÊ 
true
ÊÊ 
;
ÊÊ  
}
ÁÁ 
}
ËË %
k_TryAddCharacterMarker
ÍÍ #
.
ÍÍ# $
End
ÍÍ$ '
(
ÍÍ' (
)
ÍÍ( )
;
ÍÍ) *
return
ÏÏ 
false
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
internal
 
bool
 6
(TryGetCharacter_and_QueueRenderToTexture
 >
(
> ?
uint
? C
unicode
D K
,
K L
out
M P
TMP_Character
Q ^
	character
_ h
)
h i
{
ÒÒ 	%
k_TryAddCharacterMarker
ÚÚ #
.
ÚÚ# $
Begin
ÚÚ$ )
(
ÚÚ) *
)
ÚÚ* +
;
ÚÚ+ ,
	character
ÙÙ 
=
ÙÙ 
null
ÙÙ 
;
ÙÙ 
if
˜˜ 
(
˜˜ +
m_MissingUnicodesFromFontFile
˜˜ -
.
˜˜- .
Contains
˜˜. 6
(
˜˜6 7
unicode
˜˜7 >
)
˜˜> ?
)
˜˜? @
{
¯¯ %
k_TryAddCharacterMarker
˘˘ '
.
˘˘' (
End
˘˘( +
(
˘˘+ ,
)
˘˘, -
;
˘˘- .
return
˙˙ 
false
˙˙ 
;
˙˙ 
}
˚˚ 
if
˛˛ 
(
˛˛ 

FontEngine
˛˛ 
.
˛˛ 
LoadFontFace
˛˛ '
(
˛˛' (
sourceFontFile
˛˛( 6
,
˛˛6 7

m_FaceInfo
˛˛8 B
.
˛˛B C
	pointSize
˛˛C L
)
˛˛L M
!=
˛˛N P
FontEngineError
˛˛Q `
.
˛˛` a
Success
˛˛a h
)
˛˛h i
{
ˇˇ %
k_TryAddCharacterMarker
ÄÄ '
.
ÄÄ' (
End
ÄÄ( +
(
ÄÄ+ ,
)
ÄÄ, -
;
ÄÄ- .
return
ÅÅ 
false
ÅÅ 
;
ÅÅ 
}
ÇÇ 
uint
ÑÑ 

glyphIndex
ÑÑ 
=
ÑÑ 

FontEngine
ÑÑ (
.
ÑÑ( )
GetGlyphIndex
ÑÑ) 6
(
ÑÑ6 7
unicode
ÑÑ7 >
)
ÑÑ> ?
;
ÑÑ? @
if
ÖÖ 
(
ÖÖ 

glyphIndex
ÖÖ 
==
ÖÖ 
$num
ÖÖ 
)
ÖÖ  
{
ÜÜ 
switch
àà 
(
àà 
unicode
àà 
)
àà  
{
ââ 
case
ää 
$num
ää 
:
ää 

glyphIndex
åå "
=
åå# $

FontEngine
åå% /
.
åå/ 0
GetGlyphIndex
åå0 =
(
åå= >
$num
åå> B
)
ååB C
;
ååC D
break
çç 
;
çç 
case
éé 
$num
éé 
:
éé 
case
èè 
$num
èè 
:
èè  

glyphIndex
ëë "
=
ëë# $

FontEngine
ëë% /
.
ëë/ 0
GetGlyphIndex
ëë0 =
(
ëë= >
$num
ëë> B
)
ëëB C
;
ëëC D
break
íí 
;
íí 
}
ìì 
if
ññ 
(
ññ 

glyphIndex
ññ 
==
ññ !
$num
ññ" #
)
ññ# $
{
óó +
m_MissingUnicodesFromFontFile
òò 1
.
òò1 2
Add
òò2 5
(
òò5 6
unicode
òò6 =
)
òò= >
;
òò> ?%
k_TryAddCharacterMarker
öö +
.
öö+ ,
End
öö, /
(
öö/ 0
)
öö0 1
;
öö1 2
return
õõ 
false
õõ  
;
õõ  !
}
úú 
}
ùù 
if
†† 
(
†† %
m_GlyphLookupDictionary
†† '
.
††' (
ContainsKey
††( 3
(
††3 4

glyphIndex
††4 >
)
††> ?
)
††? @
{
°° 
	character
¢¢ 
=
¢¢ 
new
¢¢ 
TMP_Character
¢¢  -
(
¢¢- .
unicode
¢¢. 5
,
¢¢5 6
this
¢¢7 ;
,
¢¢; <%
m_GlyphLookupDictionary
¢¢= T
[
¢¢T U

glyphIndex
¢¢U _
]
¢¢_ `
)
¢¢` a
;
¢¢a b
m_CharacterTable
££  
.
££  !
Add
££! $
(
££$ %
	character
££% .
)
££. /
;
££/ 0)
m_CharacterLookupDictionary
§§ +
.
§§+ ,
Add
§§, /
(
§§/ 0
unicode
§§0 7
,
§§7 8
	character
§§9 B
)
§§B C
;
§§C D
if
´´ 
(
´´ 
UnityEditor
´´ 
.
´´  
EditorUtility
´´  -
.
´´- .
IsPersistent
´´. :
(
´´: ;
this
´´; ?
)
´´? @
)
´´@ A
{
¨¨ '
TMP_EditorResourceManager
≠≠ -
.
≠≠- .'
RegisterResourceForUpdate
≠≠. G
(
≠≠G H
this
≠≠H L
)
≠≠L M
;
≠≠M N
}
ÆÆ %
k_TryAddCharacterMarker
±± '
.
±±' (
End
±±( +
(
±±+ ,
)
±±, -
;
±±- .
return
≤≤ 
true
≤≤ 
;
≤≤ 
}
≥≥ 
GlyphLoadFlags
µµ 
glyphLoadFlags
µµ )
=
µµ* +
(
µµ, -
GlyphRasterModes
µµ- =
.
µµ= >$
RASTER_MODE_NO_HINTING
µµ> T
&
µµU V
(
µµW X
GlyphRasterModes
µµX h
)
µµh i
m_AtlasRenderMode
µµi z
)
µµz {
==
µµ| ~
GlyphRasterModesµµ è
.µµè ê&
RASTER_MODE_NO_HINTINGµµê ¶
?
∂∂ 
GlyphLoadFlags
∂∂  
.
∂∂  !
LOAD_NO_BITMAP
∂∂! /
|
∂∂0 1
GlyphLoadFlags
∂∂2 @
.
∂∂@ A
LOAD_NO_HINTING
∂∂A P
:
∑∑ 
GlyphLoadFlags
∑∑  
.
∑∑  !
LOAD_NO_BITMAP
∑∑! /
;
∑∑/ 0
Glyph
ππ 
glyph
ππ 
=
ππ 
null
ππ 
;
ππ 
if
ªª 
(
ªª 

FontEngine
ªª 
.
ªª '
TryGetGlyphWithIndexValue
ªª 4
(
ªª4 5

glyphIndex
ªª5 ?
,
ªª? @
glyphLoadFlags
ªªA O
,
ªªO P
out
ªªQ T
glyph
ªªU Z
)
ªªZ [
)
ªª[ \
{
ºº 
m_GlyphTable
ææ 
.
ææ 
Add
ææ  
(
ææ  !
glyph
ææ! &
)
ææ& '
;
ææ' (%
m_GlyphLookupDictionary
øø '
.
øø' (
Add
øø( +
(
øø+ ,

glyphIndex
øø, 6
,
øø6 7
glyph
øø8 =
)
øø= >
;
øø> ?
	character
¬¬ 
=
¬¬ 
new
¬¬ 
TMP_Character
¬¬  -
(
¬¬- .
unicode
¬¬. 5
,
¬¬5 6
this
¬¬7 ;
,
¬¬; <
glyph
¬¬= B
)
¬¬B C
;
¬¬C D
m_CharacterTable
√√  
.
√√  !
Add
√√! $
(
√√$ %
	character
√√% .
)
√√. /
;
√√/ 0)
m_CharacterLookupDictionary
ƒƒ +
.
ƒƒ+ ,
Add
ƒƒ, /
(
ƒƒ/ 0
unicode
ƒƒ0 7
,
ƒƒ7 8
	character
ƒƒ9 B
)
ƒƒB C
;
ƒƒC D
m_GlyphIndexList
∆∆  
.
∆∆  !
Add
∆∆! $
(
∆∆$ %

glyphIndex
∆∆% /
)
∆∆/ 0
;
∆∆0 1(
m_GlyphIndexListNewlyAdded
«« *
.
««* +
Add
««+ .
(
««. /

glyphIndex
««/ 9
)
««9 :
;
««: ;
if
…… 
(
…… 
TMP_Settings
……  
.
……  !&
getFontFeaturesAtRuntime
……! 9
)
……9 :3
%RegisterFontAssetForFontFeatureUpdate
   9
(
  9 :
this
  : >
)
  > ?
;
  ? @
m_GlyphsToRender
ÕÕ  
.
ÕÕ  !
Add
ÕÕ! $
(
ÕÕ$ %
glyph
ÕÕ% *
)
ÕÕ* +
;
ÕÕ+ ,4
&RegisterFontAssetForAtlasTextureUpdate
–– 6
(
––6 7
this
––7 ;
)
––; <
;
––< =
if
◊◊ 
(
◊◊ 
UnityEditor
◊◊ 
.
◊◊  
EditorUtility
◊◊  -
.
◊◊- .
IsPersistent
◊◊. :
(
◊◊: ;
this
◊◊; ?
)
◊◊? @
)
◊◊@ A
{
ÿÿ '
TMP_EditorResourceManager
ŸŸ -
.
ŸŸ- .'
RegisterResourceForUpdate
ŸŸ. G
(
ŸŸG H
this
ŸŸH L
)
ŸŸL M
;
ŸŸM N
}
⁄⁄ %
k_TryAddCharacterMarker
›› '
.
››' (
End
››( +
(
››+ ,
)
››, -
;
››- .
return
ﬁﬁ 
true
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ %
k_TryAddCharacterMarker
·· #
.
··# $
End
··$ '
(
··' (
)
··( )
;
··) *
return
‚‚ 
false
‚‚ 
;
‚‚ 
}
„„ 	
internal
ËË 
void
ËË )
TryAddGlyphsToAtlasTextures
ËË 1
(
ËË1 2
)
ËË2 3
{
ÈÈ 	
}
ïï 	
bool
úú +
TryAddGlyphsToNewAtlasTexture
úú *
(
úú* +
)
úú+ ,
{
ùù 	"
SetupNewAtlasTexture
üü  
(
üü  !
)
üü! "
;
üü" #
Glyph
°° 
[
°° 
]
°° 
glyphs
°° 
;
°° 
bool
§§ %
allGlyphsAddedToTexture
§§ (
=
§§) *

FontEngine
§§+ 5
.
§§5 6#
TryAddGlyphsToTexture
§§6 K
(
§§K L
m_GlyphsToAdd
§§L Y
,
§§Y Z
m_AtlasPadding
§§[ i
,
§§i j
GlyphPackingMode
§§k {
.
§§{ |
BestShortSideFit§§| å
,§§å ç 
m_FreeGlyphRects§§é û
,§§û ü 
m_UsedGlyphRects§§† ∞
,§§∞ ±!
m_AtlasRenderMode§§≤ √
,§§√ ƒ
m_AtlasTextures§§≈ ‘
[§§‘ ’#
m_AtlasTextureIndex§§’ Ë
]§§Ë È
,§§È Í
out§§Î Ó
glyphs§§Ô ı
)§§ı ˆ
;§§ˆ ˜
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß 
<
ßß 
glyphs
ßß  &
.
ßß& '
Length
ßß' -
&&
ßß. 0
glyphs
ßß1 7
[
ßß7 8
i
ßß8 9
]
ßß9 :
!=
ßß; =
null
ßß> B
;
ßßB C
i
ßßD E
++
ßßE G
)
ßßG H
{
®® 
Glyph
©© 
glyph
©© 
=
©© 
glyphs
©© $
[
©©$ %
i
©©% &
]
©©& '
;
©©' (
uint
™™ 

glyphIndex
™™ 
=
™™  !
glyph
™™" '
.
™™' (
index
™™( -
;
™™- .
glyph
¨¨ 
.
¨¨ 

atlasIndex
¨¨  
=
¨¨! "!
m_AtlasTextureIndex
¨¨# 6
;
¨¨6 7
m_GlyphTable
ØØ 
.
ØØ 
Add
ØØ  
(
ØØ  !
glyph
ØØ! &
)
ØØ& '
;
ØØ' (%
m_GlyphLookupDictionary
∞∞ '
.
∞∞' (
Add
∞∞( +
(
∞∞+ ,

glyphIndex
∞∞, 6
,
∞∞6 7
glyph
∞∞8 =
)
∞∞= >
;
∞∞> ?(
m_GlyphIndexListNewlyAdded
≤≤ *
.
≤≤* +
Add
≤≤+ .
(
≤≤. /

glyphIndex
≤≤/ 9
)
≤≤9 :
;
≤≤: ;
m_GlyphIndexList
≥≥  
.
≥≥  !
Add
≥≥! $
(
≥≥$ %

glyphIndex
≥≥% /
)
≥≥/ 0
;
≥≥0 1
}
¥¥ 
m_GlyphsToAdd
∑∑ 
.
∑∑ 
Clear
∑∑ 
(
∑∑  
)
∑∑  !
;
∑∑! "
for
∫∫ 
(
∫∫ 
int
∫∫ 
i
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫ 
i
∫∫ 
<
∫∫ 
m_CharactersToAdd
∫∫  1
.
∫∫1 2
Count
∫∫2 7
;
∫∫7 8
i
∫∫9 :
++
∫∫: <
)
∫∫< =
{
ªª 
TMP_Character
ºº 
	character
ºº '
=
ºº( )
m_CharactersToAdd
ºº* ;
[
ºº; <
i
ºº< =
]
ºº= >
;
ºº> ?
Glyph
ΩΩ 
glyph
ΩΩ 
;
ΩΩ 
if
øø 
(
øø %
m_GlyphLookupDictionary
øø +
.
øø+ ,
TryGetValue
øø, 7
(
øø7 8
	character
øø8 A
.
øøA B

glyphIndex
øøB L
,
øøL M
out
øøN Q
glyph
øøR W
)
øøW X
==
øøY [
false
øø\ a
)
øøa b
{
¿¿ 
m_GlyphsToAdd
¡¡ !
.
¡¡! "
Add
¡¡" %
(
¡¡% &
	character
¡¡& /
.
¡¡/ 0

glyphIndex
¡¡0 :
)
¡¡: ;
;
¡¡; <
continue
¬¬ 
;
¬¬ 
}
√√ 
	character
∆∆ 
.
∆∆ 
glyph
∆∆ 
=
∆∆  !
glyph
∆∆" '
;
∆∆' (
	character
«« 
.
«« 
	textAsset
«« #
=
««$ %
this
««& *
;
««* +
m_CharacterTable
……  
.
……  !
Add
……! $
(
……$ %
	character
……% .
)
……. /
;
……/ 0)
m_CharacterLookupDictionary
   +
.
  + ,
Add
  , /
(
  / 0
	character
  0 9
.
  9 :
unicode
  : A
,
  A B
	character
  C L
)
  L M
;
  M N
m_CharactersToAdd
ÕÕ !
.
ÕÕ! "
RemoveAt
ÕÕ" *
(
ÕÕ* +
i
ÕÕ+ ,
)
ÕÕ, -
;
ÕÕ- .
i
ŒŒ 
-=
ŒŒ 
$num
ŒŒ 
;
ŒŒ 
}
œœ 
return
—— %
allGlyphsAddedToTexture
—— *
;
——* +
}
““ 	
void
ÿÿ "
SetupNewAtlasTexture
ÿÿ !
(
ÿÿ! "
)
ÿÿ" #
{
ŸŸ 	!
m_AtlasTextureIndex
⁄⁄ 
+=
⁄⁄  "
$num
⁄⁄# $
;
⁄⁄$ %
if
›› 
(
›› 
m_AtlasTextures
›› 
.
››  
Length
››  &
==
››' )!
m_AtlasTextureIndex
››* =
)
››= >
Array
ﬁﬁ 
.
ﬁﬁ 
Resize
ﬁﬁ 
(
ﬁﬁ 
ref
ﬁﬁ  
m_AtlasTextures
ﬁﬁ! 0
,
ﬁﬁ0 1
m_AtlasTextures
ﬁﬁ2 A
.
ﬁﬁA B
Length
ﬁﬁB H
*
ﬁﬁI J
$num
ﬁﬁK L
)
ﬁﬁL M
;
ﬁﬁM N
m_AtlasTextures
·· 
[
·· !
m_AtlasTextureIndex
·· /
]
··/ 0
=
··1 2
new
··3 6
	Texture2D
··7 @
(
··@ A
m_AtlasWidth
··A M
,
··M N
m_AtlasHeight
··O \
,
··\ ]
TextureFormat
··^ k
.
··k l
Alpha8
··l r
,
··r s
false
··t y
)
··y z
;
··z {

FontEngine
‚‚ 
.
‚‚ 
ResetAtlasTexture
‚‚ (
(
‚‚( )
m_AtlasTextures
‚‚) 8
[
‚‚8 9!
m_AtlasTextureIndex
‚‚9 L
]
‚‚L M
)
‚‚M N
;
‚‚N O
int
ÂÂ 
packingModifier
ÂÂ 
=
ÂÂ  !
(
ÂÂ" #
(
ÂÂ# $
GlyphRasterModes
ÂÂ$ 4
)
ÂÂ4 5
m_AtlasRenderMode
ÂÂ5 F
&
ÂÂG H
GlyphRasterModes
ÂÂI Y
.
ÂÂY Z 
RASTER_MODE_BITMAP
ÂÂZ l
)
ÂÂl m
==
ÂÂn p
GlyphRasterModesÂÂq Å
.ÂÂÅ Ç"
RASTER_MODE_BITMAPÂÂÇ î
?ÂÂï ñ
$numÂÂó ò
:ÂÂô ö
$numÂÂõ ú
;ÂÂú ù
m_FreeGlyphRects
ÊÊ 
.
ÊÊ 
Clear
ÊÊ "
(
ÊÊ" #
)
ÊÊ# $
;
ÊÊ$ %
m_FreeGlyphRects
ÁÁ 
.
ÁÁ 
Add
ÁÁ  
(
ÁÁ  !
new
ÁÁ! $
	GlyphRect
ÁÁ% .
(
ÁÁ. /
$num
ÁÁ/ 0
,
ÁÁ0 1
$num
ÁÁ2 3
,
ÁÁ3 4
m_AtlasWidth
ÁÁ5 A
-
ÁÁB C
packingModifier
ÁÁD S
,
ÁÁS T
m_AtlasHeight
ÁÁU b
-
ÁÁc d
packingModifier
ÁÁe t
)
ÁÁt u
)
ÁÁu v
;
ÁÁv w
m_UsedGlyphRects
ËË 
.
ËË 
Clear
ËË "
(
ËË" #
)
ËË# $
;
ËË$ %
if
ÏÏ 
(
ÏÏ 
UnityEditor
ÏÏ 
.
ÏÏ 
EditorUtility
ÏÏ )
.
ÏÏ) *
IsPersistent
ÏÏ* 6
(
ÏÏ6 7
this
ÏÏ7 ;
)
ÏÏ; <
)
ÏÏ< =
{
ÌÌ 
	Texture2D
ÓÓ 
tex
ÓÓ 
=
ÓÓ 
m_AtlasTextures
ÓÓ  /
[
ÓÓ/ 0!
m_AtlasTextureIndex
ÓÓ0 C
]
ÓÓC D
;
ÓÓD E
tex
ÔÔ 
.
ÔÔ 
name
ÔÔ 
=
ÔÔ 
m_AtlasTexture
ÔÔ )
.
ÔÔ) *
name
ÔÔ* .
+
ÔÔ/ 0
$str
ÔÔ1 4
+
ÔÔ5 6!
m_AtlasTextureIndex
ÔÔ7 J
;
ÔÔJ K
UnityEditor
ÒÒ 
.
ÒÒ 
AssetDatabase
ÒÒ )
.
ÒÒ) *
AddObjectToAsset
ÒÒ* :
(
ÒÒ: ;
m_AtlasTextures
ÒÒ; J
[
ÒÒJ K!
m_AtlasTextureIndex
ÒÒK ^
]
ÒÒ^ _
,
ÒÒ_ `
this
ÒÒa e
)
ÒÒe f
;
ÒÒf g'
TMP_EditorResourceManager
ÚÚ )
.
ÚÚ) *)
RegisterResourceForReimport
ÚÚ* E
(
ÚÚE F
this
ÚÚF J
)
ÚÚJ K
;
ÚÚK L
}
ÛÛ 
}
ıı 	
internal
˚˚ 
void
˚˚  
UpdateAtlasTexture
˚˚ (
(
˚˚( )
)
˚˚) *
{
¸¸ 	
if
˛˛ 
(
˛˛ 
m_GlyphsToRender
˛˛  
.
˛˛  !
Count
˛˛! &
==
˛˛' )
$num
˛˛* +
)
˛˛+ ,
return
ˇˇ 
;
ˇˇ 
if
ââ 
(
ââ 
m_AtlasTextures
ââ 
[
ââ  !
m_AtlasTextureIndex
ââ  3
]
ââ3 4
.
ââ4 5
width
ââ5 :
==
ââ; =
$num
ââ> ?
||
ââ@ B
m_AtlasTextures
ââC R
[
ââR S!
m_AtlasTextureIndex
ââS f
]
ââf g
.
ââg h
height
ââh n
==
ââo q
$num
ââr s
)
ââs t
{
ää 
m_AtlasTextures
åå 
[
åå  !
m_AtlasTextureIndex
åå  3
]
åå3 4
.
åå4 5
Resize
åå5 ;
(
åå; <
m_AtlasWidth
åå< H
,
ååH I
m_AtlasHeight
ååJ W
)
ååW X
;
ååX Y

FontEngine
çç 
.
çç 
ResetAtlasTexture
çç ,
(
çç, -
m_AtlasTextures
çç- <
[
çç< =!
m_AtlasTextureIndex
çç= P
]
ççP Q
)
ççQ R
;
ççR S
}
éé 
m_AtlasTextures
ìì 
[
ìì !
m_AtlasTextureIndex
ìì /
]
ìì/ 0
.
ìì0 1
Apply
ìì1 6
(
ìì6 7
false
ìì7 <
,
ìì< =
false
ìì> C
)
ììC D
;
ììD E'
TMP_EditorResourceManager
∫∫ %
.
∫∫% &'
RegisterResourceForUpdate
∫∫& ?
(
∫∫? @
this
∫∫@ D
)
∫∫D E
;
∫∫E F
}
ºº 	
internal
¡¡ 
void
¡¡ *
UpdateGlyphAdjustmentRecords
¡¡ 2
(
¡¡2 3
)
¡¡3 4
{
¬¬ 	2
$k_UpdateGlyphAdjustmentRecordsMarker
√√ 0
.
√√0 1
Begin
√√1 6
(
√√6 7
)
√√7 8
;
√√8 9'
GlyphPairAdjustmentRecord
ÀÀ )
[
ÀÀ) *
]
ÀÀ* +#
pairAdjustmentRecords
ÀÀ, A
=
ÀÀB C

FontEngine
ÀÀD N
.
ÀÀN O+
GetGlyphPairAdjustmentRecords
ÀÀO l
(
ÀÀl m
m_GlyphIndexList
ÀÀm }
,
ÀÀ} ~
outÀÀ Ç
intÀÀÉ Ü
recordCountÀÀá í
)ÀÀí ì
;ÀÀì î(
m_GlyphIndexListNewlyAdded
œœ &
.
œœ& '
Clear
œœ' ,
(
œœ, -
)
œœ- .
;
œœ. /
if
—— 
(
—— #
pairAdjustmentRecords
—— %
==
——& (
null
——) -
||
——. 0#
pairAdjustmentRecords
——1 F
.
——F G
Length
——G M
==
——N P
$num
——Q R
)
——R S
{
““ 2
$k_UpdateGlyphAdjustmentRecordsMarker
”” 4
.
””4 5
End
””5 8
(
””8 9
)
””9 :
;
””: ;
return
‘‘ 
;
‘‘ 
}
’’ 
if
◊◊ 
(
◊◊  
m_FontFeatureTable
◊◊ "
==
◊◊# %
null
◊◊& *
)
◊◊* + 
m_FontFeatureTable
ÿÿ "
=
ÿÿ# $
new
ÿÿ% ("
TMP_FontFeatureTable
ÿÿ) =
(
ÿÿ= >
)
ÿÿ> ?
;
ÿÿ? @
for
⁄⁄ 
(
⁄⁄ 
int
⁄⁄ 
i
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
;
⁄⁄ 
i
⁄⁄ 
<
⁄⁄ #
pairAdjustmentRecords
⁄⁄  5
.
⁄⁄5 6
Length
⁄⁄6 <
&&
⁄⁄= ?#
pairAdjustmentRecords
⁄⁄@ U
[
⁄⁄U V
i
⁄⁄V W
]
⁄⁄W X
.
⁄⁄X Y#
firstAdjustmentRecord
⁄⁄Y n
.
⁄⁄n o

glyphIndex
⁄⁄o y
!=
⁄⁄z |
$num
⁄⁄} ~
;
⁄⁄~ 
i⁄⁄Ä Å
++⁄⁄Å É
)⁄⁄É Ñ
{
€€ 
uint
‹‹ 
pairKey
‹‹ 
=
‹‹ #
pairAdjustmentRecords
‹‹ 4
[
‹‹4 5
i
‹‹5 6
]
‹‹6 7
.
‹‹7 8$
secondAdjustmentRecord
‹‹8 N
.
‹‹N O

glyphIndex
‹‹O Y
<<
‹‹Z \
$num
‹‹] _
|
‹‹` a#
pairAdjustmentRecords
‹‹b w
[
‹‹w x
i
‹‹x y
]
‹‹y z
.
‹‹z {$
firstAdjustmentRecord‹‹{ ê
.‹‹ê ë

glyphIndex‹‹ë õ
;‹‹õ ú
if
ﬂﬂ 
(
ﬂﬂ  
m_FontFeatureTable
ﬂﬂ &
.
ﬂﬂ& '9
+m_GlyphPairAdjustmentRecordLookupDictionary
ﬂﬂ' R
.
ﬂﬂR S
ContainsKey
ﬂﬂS ^
(
ﬂﬂ^ _
pairKey
ﬂﬂ_ f
)
ﬂﬂf g
)
ﬂﬂg h
continue
‡‡ 
;
‡‡ +
TMP_GlyphPairAdjustmentRecord
‚‚ -
record
‚‚. 4
=
‚‚5 6
new
‚‚7 :+
TMP_GlyphPairAdjustmentRecord
‚‚; X
(
‚‚X Y#
pairAdjustmentRecords
‚‚Y n
[
‚‚n o
i
‚‚o p
]
‚‚p q
)
‚‚q r
;
‚‚r s 
m_FontFeatureTable
‰‰ "
.
‰‰" #*
m_GlyphPairAdjustmentRecords
‰‰# ?
.
‰‰? @
Add
‰‰@ C
(
‰‰C D
record
‰‰D J
)
‰‰J K
;
‰‰K L 
m_FontFeatureTable
ÂÂ "
.
ÂÂ" #9
+m_GlyphPairAdjustmentRecordLookupDictionary
ÂÂ# N
.
ÂÂN O
Add
ÂÂO R
(
ÂÂR S
pairKey
ÂÂS Z
,
ÂÂZ [
record
ÂÂ\ b
)
ÂÂb c
;
ÂÂc d
}
ÊÊ 2
$k_UpdateGlyphAdjustmentRecordsMarker
ËË 0
.
ËË0 1
End
ËË1 4
(
ËË4 5
)
ËË5 6
;
ËË6 7
}
ÈÈ 	
internal
ÔÔ 
void
ÔÔ *
UpdateGlyphAdjustmentRecords
ÔÔ 2
(
ÔÔ2 3
uint
ÔÔ3 7
[
ÔÔ7 8
]
ÔÔ8 9
glyphIndexes
ÔÔ: F
)
ÔÔF G
{
 	2
$k_UpdateGlyphAdjustmentRecordsMarker
ÒÒ 0
.
ÒÒ0 1
Begin
ÒÒ1 6
(
ÒÒ6 7
)
ÒÒ7 8
;
ÒÒ8 9'
GlyphPairAdjustmentRecord
ÙÙ %
[
ÙÙ% &
]
ÙÙ& '#
pairAdjustmentRecords
ÙÙ( =
=
ÙÙ> ?

FontEngine
ÙÙ@ J
.
ÙÙJ K)
GetGlyphPairAdjustmentTable
ÙÙK f
(
ÙÙf g
glyphIndexes
ÙÙg s
)
ÙÙs t
;
ÙÙt u
if
˘˘ 
(
˘˘ #
pairAdjustmentRecords
˘˘ %
==
˘˘& (
null
˘˘) -
||
˘˘. 0#
pairAdjustmentRecords
˘˘1 F
.
˘˘F G
Length
˘˘G M
==
˘˘N P
$num
˘˘Q R
)
˘˘R S
{
˙˙ 2
$k_UpdateGlyphAdjustmentRecordsMarker
˚˚ 4
.
˚˚4 5
End
˚˚5 8
(
˚˚8 9
)
˚˚9 :
;
˚˚: ;
return
¸¸ 
;
¸¸ 
}
˝˝ 
if
ˇˇ 
(
ˇˇ  
m_FontFeatureTable
ˇˇ "
==
ˇˇ# %
null
ˇˇ& *
)
ˇˇ* + 
m_FontFeatureTable
ÄÄ "
=
ÄÄ# $
new
ÄÄ% ("
TMP_FontFeatureTable
ÄÄ) =
(
ÄÄ= >
)
ÄÄ> ?
;
ÄÄ? @
for
ÇÇ 
(
ÇÇ 
int
ÇÇ 
i
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
i
ÇÇ 
<
ÇÇ #
pairAdjustmentRecords
ÇÇ  5
.
ÇÇ5 6
Length
ÇÇ6 <
&&
ÇÇ= ?#
pairAdjustmentRecords
ÇÇ@ U
[
ÇÇU V
i
ÇÇV W
]
ÇÇW X
.
ÇÇX Y#
firstAdjustmentRecord
ÇÇY n
.
ÇÇn o

glyphIndex
ÇÇo y
!=
ÇÇz |
$num
ÇÇ} ~
;
ÇÇ~ 
iÇÇÄ Å
++ÇÇÅ É
)ÇÇÉ Ñ
{
ÉÉ 
uint
ÑÑ 
pairKey
ÑÑ 
=
ÑÑ #
pairAdjustmentRecords
ÑÑ 4
[
ÑÑ4 5
i
ÑÑ5 6
]
ÑÑ6 7
.
ÑÑ7 8$
secondAdjustmentRecord
ÑÑ8 N
.
ÑÑN O

glyphIndex
ÑÑO Y
<<
ÑÑZ \
$num
ÑÑ] _
|
ÑÑ` a#
pairAdjustmentRecords
ÑÑb w
[
ÑÑw x
i
ÑÑx y
]
ÑÑy z
.
ÑÑz {$
firstAdjustmentRecordÑÑ{ ê
.ÑÑê ë

glyphIndexÑÑë õ
;ÑÑõ ú
if
áá 
(
áá  
m_FontFeatureTable
áá &
.
áá& '9
+m_GlyphPairAdjustmentRecordLookupDictionary
áá' R
.
ááR S
ContainsKey
ááS ^
(
áá^ _
pairKey
áá_ f
)
ááf g
)
áág h
continue
àà 
;
àà +
TMP_GlyphPairAdjustmentRecord
ää -
record
ää. 4
=
ää5 6
new
ää7 :+
TMP_GlyphPairAdjustmentRecord
ää; X
(
ääX Y#
pairAdjustmentRecords
ääY n
[
ään o
i
ääo p
]
ääp q
)
ääq r
;
äär s 
m_FontFeatureTable
åå "
.
åå" #*
m_GlyphPairAdjustmentRecords
åå# ?
.
åå? @
Add
åå@ C
(
ååC D
record
ååD J
)
ååJ K
;
ååK L 
m_FontFeatureTable
çç "
.
çç" #9
+m_GlyphPairAdjustmentRecordLookupDictionary
çç# N
.
ççN O
Add
ççO R
(
ççR S
pairKey
ççS Z
,
ççZ [
record
çç\ b
)
ççb c
;
ççc d
}
éé 2
$k_UpdateGlyphAdjustmentRecordsMarker
êê 0
.
êê0 1
End
êê1 4
(
êê4 5
)
êê5 6
;
êê6 7
}
ëë 	
internal
óó 
void
óó *
UpdateGlyphAdjustmentRecords
óó 2
(
óó2 3
List
óó3 7
<
óó7 8
uint
óó8 <
>
óó< =
glyphIndexes
óó> J
)
óóJ K
{
òò 	
}
¿¿ 	
internal
«« 
void
«« *
UpdateGlyphAdjustmentRecords
«« 2
(
««2 3
List
««3 7
<
««7 8
uint
««8 <
>
««< =
newGlyphIndexes
««> M
,
««M N
List
««O S
<
««S T
uint
««T X
>
««X Y
allGlyphIndexes
««Z i
)
««i j
{
»» 	
}
ÍÍ 	
void
ÚÚ !
CopyListDataToArray
ÚÚ  
<
ÚÚ  !
T
ÚÚ! "
>
ÚÚ" #
(
ÚÚ# $
List
ÚÚ$ (
<
ÚÚ( )
T
ÚÚ) *
>
ÚÚ* +
srcList
ÚÚ, 3
,
ÚÚ3 4
ref
ÚÚ5 8
T
ÚÚ9 :
[
ÚÚ: ;
]
ÚÚ; <
dstArray
ÚÚ= E
)
ÚÚE F
{
ÛÛ 	
int
ÙÙ 
size
ÙÙ 
=
ÙÙ 
srcList
ÙÙ 
.
ÙÙ 
Count
ÙÙ $
;
ÙÙ$ %
if
˜˜ 
(
˜˜ 
dstArray
˜˜ 
==
˜˜ 
null
˜˜  
)
˜˜  !
dstArray
¯¯ 
=
¯¯ 
new
¯¯ 
T
¯¯  
[
¯¯  !
size
¯¯! %
]
¯¯% &
;
¯¯& '
else
˘˘ 
Array
˙˙ 
.
˙˙ 
Resize
˙˙ 
(
˙˙ 
ref
˙˙  
dstArray
˙˙! )
,
˙˙) *
size
˙˙+ /
)
˙˙/ 0
;
˙˙0 1
for
¸¸ 
(
¸¸ 
int
¸¸ 
i
¸¸ 
=
¸¸ 
$num
¸¸ 
;
¸¸ 
i
¸¸ 
<
¸¸ 
size
¸¸  $
;
¸¸$ %
i
¸¸& '
++
¸¸' )
)
¸¸) *
dstArray
˝˝ 
[
˝˝ 
i
˝˝ 
]
˝˝ 
=
˝˝ 
srcList
˝˝ %
[
˝˝% &
i
˝˝& '
]
˝˝' (
;
˝˝( )
}
˛˛ 	
public
ÖÖ 
void
ÖÖ  
ClearFontAssetData
ÖÖ &
(
ÖÖ& '
bool
ÖÖ' + 
setAtlasSizeToZero
ÖÖ, >
=
ÖÖ? @
false
ÖÖA F
)
ÖÖF G
{
ÜÜ 	(
k_ClearFontAssetDataMarker
áá &
.
áá& '
Begin
áá' ,
(
áá, -
)
áá- .
;
áá. /"
ClearFontAssetTables
èè  
(
èè  !
)
èè! "
;
èè" # 
ClearAtlasTextures
íí 
(
íí  
setAtlasSizeToZero
íí 1
)
íí1 2
;
íí2 3%
ReadFontAssetDefinition
îî #
(
îî# $
)
îî$ %
;
îî% &'
TMP_EditorResourceManager
öö %
.
öö% &'
RegisterResourceForUpdate
öö& ?
(
öö? @
this
öö@ D
)
ööD E
;
ööE F(
k_ClearFontAssetDataMarker
ùù &
.
ùù& '
End
ùù' *
(
ùù* +
)
ùù+ ,
;
ùù, -
}
ûû 	
internal
†† 
void
†† (
ClearFontAssetDataInternal
†† 0
(
††0 1
)
††1 2
{
°° 	"
ClearFontAssetTables
££  
(
££  !
)
££! "
;
££" # 
ClearAtlasTextures
¶¶ 
(
¶¶ 
true
¶¶ #
)
¶¶# $
;
¶¶$ %'
TMP_EditorResourceManager
™™ %
.
™™% &'
RegisterResourceForUpdate
™™& ?
(
™™? @
this
™™@ D
)
™™D E
;
™™E F
}
¨¨ 	
internal
±± 
void
±± !
UpdateFontAssetData
±± )
(
±±) *
)
±±* +
{
≤≤ 	)
k_UpdateFontAssetDataMarker
≥≥ '
.
≥≥' (
Begin
≥≥( -
(
≥≥- .
)
≥≥. /
;
≥≥/ 0
uint
∂∂ 
[
∂∂ 
]
∂∂ 
unicodeCharacters
∂∂ $
=
∂∂% &
new
∂∂' *
uint
∂∂+ /
[
∂∂/ 0
m_CharacterTable
∂∂0 @
.
∂∂@ A
Count
∂∂A F
]
∂∂F G
;
∂∂G H
for
∏∏ 
(
∏∏ 
int
∏∏ 
i
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
i
∏∏ 
<
∏∏ 
m_CharacterTable
∏∏  0
.
∏∏0 1
Count
∏∏1 6
;
∏∏6 7
i
∏∏8 9
++
∏∏9 ;
)
∏∏; <
unicodeCharacters
ππ !
[
ππ! "
i
ππ" #
]
ππ# $
=
ππ% &
m_CharacterTable
ππ' 7
[
ππ7 8
i
ππ8 9
]
ππ9 :
.
ππ: ;
unicode
ππ; B
;
ππB C"
ClearFontAssetTables
ºº  
(
ºº  !
)
ºº! "
;
ºº" # 
ClearAtlasTextures
øø 
(
øø 
true
øø #
)
øø# $
;
øø$ %%
ReadFontAssetDefinition
¡¡ #
(
¡¡# $
)
¡¡$ %
;
¡¡% &
if
∆∆ 
(
∆∆ 
unicodeCharacters
∆∆ !
.
∆∆! "
Length
∆∆" (
>
∆∆) *
$num
∆∆+ ,
)
∆∆, -
TryAddCharacters
««  
(
««  !
unicodeCharacters
««! 2
,
««2 3
true
««4 8
)
««8 9
;
««9 :)
k_UpdateFontAssetDataMarker
…… '
.
……' (
End
……( +
(
……+ ,
)
……, -
;
……- .
}
   	
internal
œœ 
void
œœ "
ClearFontAssetTables
œœ *
(
œœ* +
)
œœ+ ,
{
–– 	
if
““ 
(
““ 
m_GlyphTable
““ 
!=
““ 
null
““  $
)
““$ %
m_GlyphTable
”” 
.
”” 
Clear
”” "
(
””" #
)
””# $
;
””$ %
if
’’ 
(
’’ 
m_CharacterTable
’’  
!=
’’! #
null
’’$ (
)
’’( )
m_CharacterTable
÷÷  
.
÷÷  !
Clear
÷÷! &
(
÷÷& '
)
÷÷' (
;
÷÷( )
if
ŸŸ 
(
ŸŸ 
m_UsedGlyphRects
ŸŸ  
!=
ŸŸ! #
null
ŸŸ$ (
)
ŸŸ( )
m_UsedGlyphRects
⁄⁄  
.
⁄⁄  !
Clear
⁄⁄! &
(
⁄⁄& '
)
⁄⁄' (
;
⁄⁄( )
if
‹‹ 
(
‹‹ 
m_FreeGlyphRects
‹‹  
!=
‹‹! #
null
‹‹$ (
)
‹‹( )
{
›› 
int
ﬁﬁ 
packingModifier
ﬁﬁ #
=
ﬁﬁ$ %
(
ﬁﬁ& '
(
ﬁﬁ' (
GlyphRasterModes
ﬁﬁ( 8
)
ﬁﬁ8 9
m_AtlasRenderMode
ﬁﬁ9 J
&
ﬁﬁK L
GlyphRasterModes
ﬁﬁM ]
.
ﬁﬁ] ^ 
RASTER_MODE_BITMAP
ﬁﬁ^ p
)
ﬁﬁp q
==
ﬁﬁr t
GlyphRasterModesﬁﬁu Ö
.ﬁﬁÖ Ü"
RASTER_MODE_BITMAPﬁﬁÜ ò
?ﬁﬁô ö
$numﬁﬁõ ú
:ﬁﬁù û
$numﬁﬁü †
;ﬁﬁ† °
m_FreeGlyphRects
ﬂﬂ  
.
ﬂﬂ  !
Clear
ﬂﬂ! &
(
ﬂﬂ& '
)
ﬂﬂ' (
;
ﬂﬂ( )
m_FreeGlyphRects
‡‡  
.
‡‡  !
Add
‡‡! $
(
‡‡$ %
new
‡‡% (
	GlyphRect
‡‡) 2
(
‡‡2 3
$num
‡‡3 4
,
‡‡4 5
$num
‡‡6 7
,
‡‡7 8
m_AtlasWidth
‡‡9 E
-
‡‡F G
packingModifier
‡‡H W
,
‡‡W X
m_AtlasHeight
‡‡Y f
-
‡‡g h
packingModifier
‡‡i x
)
‡‡x y
)
‡‡y z
;
‡‡z {
}
·· 
if
„„ 
(
„„ 
m_GlyphsToRender
„„  
!=
„„! #
null
„„$ (
)
„„( )
m_GlyphsToRender
‰‰  
.
‰‰  !
Clear
‰‰! &
(
‰‰& '
)
‰‰' (
;
‰‰( )
if
ÊÊ 
(
ÊÊ 
m_GlyphsRendered
ÊÊ  
!=
ÊÊ! #
null
ÊÊ$ (
)
ÊÊ( )
m_GlyphsRendered
ÁÁ  
.
ÁÁ  !
Clear
ÁÁ! &
(
ÁÁ& '
)
ÁÁ' (
;
ÁÁ( )
if
ÍÍ 
(
ÍÍ  
m_FontFeatureTable
ÍÍ "
!=
ÍÍ# %
null
ÍÍ& *
&&
ÍÍ+ - 
m_FontFeatureTable
ÍÍ. @
.
ÍÍ@ A*
m_GlyphPairAdjustmentRecords
ÍÍA ]
!=
ÍÍ^ `
null
ÍÍa e
)
ÍÍe f 
m_FontFeatureTable
ÎÎ "
.
ÎÎ" #(
glyphPairAdjustmentRecords
ÎÎ# =
.
ÎÎ= >
Clear
ÎÎ> C
(
ÎÎC D
)
ÎÎD E
;
ÎÎE F
}
ÏÏ 	
internal
ÚÚ 
void
ÚÚ  
ClearAtlasTextures
ÚÚ (
(
ÚÚ( )
bool
ÚÚ) - 
setAtlasSizeToZero
ÚÚ. @
=
ÚÚA B
false
ÚÚC H
)
ÚÚH I
{
ÛÛ 	!
m_AtlasTextureIndex
ÙÙ 
=
ÙÙ  !
$num
ÙÙ" #
;
ÙÙ# $
if
˜˜ 
(
˜˜ 
m_AtlasTextures
˜˜ 
==
˜˜  "
null
˜˜# '
)
˜˜' (
return
¯¯ 
;
¯¯ 
	Texture2D
˙˙ 
texture
˙˙ 
=
˙˙ 
null
˙˙  $
;
˙˙$ %
for
˝˝ 
(
˝˝ 
int
˝˝ 
i
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ 
i
˝˝ 
<
˝˝ 
m_AtlasTextures
˝˝  /
.
˝˝/ 0
Length
˝˝0 6
;
˝˝6 7
i
˝˝8 9
++
˝˝9 ;
)
˝˝; <
{
˛˛ 
texture
ˇˇ 
=
ˇˇ 
m_AtlasTextures
ˇˇ )
[
ˇˇ) *
i
ˇˇ* +
]
ˇˇ+ ,
;
ˇˇ, -
if
ÅÅ 
(
ÅÅ 
texture
ÅÅ 
==
ÅÅ 
null
ÅÅ #
)
ÅÅ# $
continue
ÇÇ 
;
ÇÇ 
DestroyImmediate
ÑÑ  
(
ÑÑ  !
texture
ÑÑ! (
,
ÑÑ( )
true
ÑÑ* .
)
ÑÑ. /
;
ÑÑ/ 0
if
áá 
(
áá 
UnityEditor
áá 
.
áá  
EditorUtility
áá  -
.
áá- .
IsPersistent
áá. :
(
áá: ;
this
áá; ?
)
áá? @
)
áá@ A'
TMP_EditorResourceManager
àà -
.
àà- .)
RegisterResourceForReimport
àà. I
(
ààI J
this
ààJ N
)
ààN O
;
ààO P
}
ää 
Array
çç 
.
çç 
Resize
çç 
(
çç 
ref
çç 
m_AtlasTextures
çç ,
,
çç, -
$num
çç. /
)
çç/ 0
;
çç0 1
texture
èè 
=
èè 
m_AtlasTexture
èè $
=
èè% &
m_AtlasTextures
èè' 6
[
èè6 7
$num
èè7 8
]
èè8 9
;
èè9 :
if
íí 
(
íí 
texture
íí 
.
íí 

isReadable
íí "
==
íí# %
false
íí& +
)
íí+ ,
{
ìì '
FontEngineEditorUtilities
ïï -
.
ïï- .'
SetAtlasTextureIsReadable
ïï. G
(
ïïG H
texture
ïïH O
,
ïïO P
true
ïïQ U
)
ïïU V
;
ïïV W
}
öö 
if
úú 
(
úú  
setAtlasSizeToZero
úú "
)
úú" #
{
ùù 
texture
ûû 
.
ûû 
Resize
ûû 
(
ûû 
$num
ûû  
,
ûû  !
$num
ûû" #
,
ûû# $
TextureFormat
ûû% 2
.
ûû2 3
Alpha8
ûû3 9
,
ûû9 :
false
ûû; @
)
ûû@ A
;
ûûA B
}
üü 
else
†† 
if
†† 
(
†† 
texture
†† 
.
†† 
width
†† "
!=
††# %
m_AtlasWidth
††& 2
||
††3 5
texture
††6 =
.
††= >
height
††> D
!=
††E G
m_AtlasHeight
††H U
)
††U V
{
°° 
texture
¢¢ 
.
¢¢ 
Resize
¢¢ 
(
¢¢ 
m_AtlasWidth
¢¢ +
,
¢¢+ ,
m_AtlasHeight
¢¢- :
,
¢¢: ;
TextureFormat
¢¢< I
.
¢¢I J
Alpha8
¢¢J P
,
¢¢P Q
false
¢¢R W
)
¢¢W X
;
¢¢X Y
}
££ 

FontEngine
¶¶ 
.
¶¶ 
ResetAtlasTexture
¶¶ (
(
¶¶( )
texture
¶¶) 0
)
¶¶0 1
;
¶¶1 2
texture
ßß 
.
ßß 
Apply
ßß 
(
ßß 
)
ßß 
;
ßß 
}
®® 	
internal
≠≠ 
void
≠≠ 
UpgradeFontAsset
≠≠ &
(
≠≠& '
)
≠≠' (
{
ÆÆ 	
	m_Version
ØØ 
=
ØØ 
$str
ØØ 
;
ØØ  
Debug
±± 
.
±± 
Log
±± 
(
±± 
$str
±± .
+
±±/ 0
this
±±1 5
.
±±5 6
name
±±6 :
+
±±; <
$str
±±= L
+
±±M N
	m_Version
±±O X
+
±±Y Z
$str
±±[ ^
,
±±^ _
this
±±` d
)
±±d e
;
±±e f

m_FaceInfo
≥≥ 
.
≥≥ 

familyName
≥≥ !
=
≥≥" #

m_fontInfo
≥≥$ .
.
≥≥. /
Name
≥≥/ 3
;
≥≥3 4

m_FaceInfo
¥¥ 
.
¥¥ 
	styleName
¥¥  
=
¥¥! "
string
¥¥# )
.
¥¥) *
Empty
¥¥* /
;
¥¥/ 0

m_FaceInfo
∂∂ 
.
∂∂ 
	pointSize
∂∂  
=
∂∂! "
(
∂∂# $
int
∂∂$ '
)
∂∂' (

m_fontInfo
∂∂( 2
.
∂∂2 3
	PointSize
∂∂3 <
;
∂∂< =

m_FaceInfo
∑∑ 
.
∑∑ 
scale
∑∑ 
=
∑∑ 

m_fontInfo
∑∑ )
.
∑∑) *
Scale
∑∑* /
;
∑∑/ 0

m_FaceInfo
ππ 
.
ππ 

lineHeight
ππ !
=
ππ" #

m_fontInfo
ππ$ .
.
ππ. /

LineHeight
ππ/ 9
;
ππ9 :

m_FaceInfo
∫∫ 
.
∫∫ 

ascentLine
∫∫ !
=
∫∫" #

m_fontInfo
∫∫$ .
.
∫∫. /
Ascender
∫∫/ 7
;
∫∫7 8

m_FaceInfo
ªª 
.
ªª 
capLine
ªª 
=
ªª  

m_fontInfo
ªª! +
.
ªª+ ,
	CapHeight
ªª, 5
;
ªª5 6

m_FaceInfo
ºº 
.
ºº 
meanLine
ºº 
=
ºº  !

m_fontInfo
ºº" ,
.
ºº, -

CenterLine
ºº- 7
;
ºº7 8

m_FaceInfo
ΩΩ 
.
ΩΩ 
baseline
ΩΩ 
=
ΩΩ  !

m_fontInfo
ΩΩ" ,
.
ΩΩ, -
Baseline
ΩΩ- 5
;
ΩΩ5 6

m_FaceInfo
ææ 
.
ææ 
descentLine
ææ "
=
ææ# $

m_fontInfo
ææ% /
.
ææ/ 0
	Descender
ææ0 9
;
ææ9 :

m_FaceInfo
¿¿ 
.
¿¿ 
superscriptOffset
¿¿ (
=
¿¿) *

m_fontInfo
¿¿+ 5
.
¿¿5 6
SuperscriptOffset
¿¿6 G
;
¿¿G H

m_FaceInfo
¡¡ 
.
¡¡ 
superscriptSize
¡¡ &
=
¡¡' (

m_fontInfo
¡¡) 3
.
¡¡3 4
SubSize
¡¡4 ;
;
¡¡; <

m_FaceInfo
¬¬ 
.
¬¬ 
subscriptOffset
¬¬ &
=
¬¬' (

m_fontInfo
¬¬) 3
.
¬¬3 4
SubscriptOffset
¬¬4 C
;
¬¬C D

m_FaceInfo
√√ 
.
√√ 
subscriptSize
√√ $
=
√√% &

m_fontInfo
√√' 1
.
√√1 2
SubSize
√√2 9
;
√√9 :

m_FaceInfo
≈≈ 
.
≈≈ 
underlineOffset
≈≈ &
=
≈≈' (

m_fontInfo
≈≈) 3
.
≈≈3 4
	Underline
≈≈4 =
;
≈≈= >

m_FaceInfo
∆∆ 
.
∆∆  
underlineThickness
∆∆ )
=
∆∆* +

m_fontInfo
∆∆, 6
.
∆∆6 7 
UnderlineThickness
∆∆7 I
;
∆∆I J

m_FaceInfo
«« 
.
«« !
strikethroughOffset
«« *
=
««+ ,

m_fontInfo
««- 7
.
««7 8
strikethrough
««8 E
;
««E F

m_FaceInfo
»» 
.
»» $
strikethroughThickness
»» -
=
»». /

m_fontInfo
»»0 :
.
»»: ;$
strikethroughThickness
»»; Q
;
»»Q R

m_FaceInfo
   
.
   
tabWidth
   
=
    !

m_fontInfo
  " ,
.
  , -
TabWidth
  - 5
;
  5 6
if
ÃÃ 
(
ÃÃ 
m_AtlasTextures
ÃÃ 
==
ÃÃ  "
null
ÃÃ# '
||
ÃÃ( *
m_AtlasTextures
ÃÃ+ :
.
ÃÃ: ;
Length
ÃÃ; A
==
ÃÃB D
$num
ÃÃE F
)
ÃÃF G
m_AtlasTextures
ÕÕ 
=
ÕÕ  !
new
ÕÕ" %
	Texture2D
ÕÕ& /
[
ÕÕ/ 0
$num
ÕÕ0 1
]
ÕÕ1 2
;
ÕÕ2 3
m_AtlasTextures
œœ 
[
œœ 
$num
œœ 
]
œœ 
=
œœ  
atlas
œœ! &
;
œœ& '
m_AtlasWidth
”” 
=
”” 
(
”” 
int
”” 
)
””  

m_fontInfo
””  *
.
””* +

AtlasWidth
””+ 5
;
””5 6
m_AtlasHeight
‘‘ 
=
‘‘ 
(
‘‘ 
int
‘‘  
)
‘‘  !

m_fontInfo
‘‘! +
.
‘‘+ ,
AtlasHeight
‘‘, 7
;
‘‘7 8
m_AtlasPadding
’’ 
=
’’ 
(
’’ 
int
’’ !
)
’’! "

m_fontInfo
’’" ,
.
’’, -
Padding
’’- 4
;
’’4 5
switch
◊◊ 
(
◊◊  
m_CreationSettings
◊◊ %
.
◊◊% &

renderMode
◊◊& 0
)
◊◊0 1
{
ÿÿ 
case
ŸŸ 
$num
ŸŸ 
:
ŸŸ 
m_AtlasRenderMode
⁄⁄ %
=
⁄⁄& '
GlyphRenderMode
⁄⁄( 7
.
⁄⁄7 8
SMOOTH_HINTED
⁄⁄8 E
;
⁄⁄E F
break
€€ 
;
€€ 
case
‹‹ 
$num
‹‹ 
:
‹‹ 
m_AtlasRenderMode
›› %
=
››& '
GlyphRenderMode
››( 7
.
››7 8
SMOOTH
››8 >
;
››> ?
break
ﬁﬁ 
;
ﬁﬁ 
case
ﬂﬂ 
$num
ﬂﬂ 
:
ﬂﬂ 
m_AtlasRenderMode
‡‡ %
=
‡‡& '
GlyphRenderMode
‡‡( 7
.
‡‡7 8
RASTER_HINTED
‡‡8 E
;
‡‡E F
break
·· 
;
·· 
case
‚‚ 
$num
‚‚ 
:
‚‚ 
m_AtlasRenderMode
„„ %
=
„„& '
GlyphRenderMode
„„( 7
.
„„7 8
RASTER
„„8 >
;
„„> ?
break
‰‰ 
;
‰‰ 
case
ÂÂ 
$num
ÂÂ 
:
ÂÂ 
m_AtlasRenderMode
ÊÊ %
=
ÊÊ& '
GlyphRenderMode
ÊÊ( 7
.
ÊÊ7 8
SDF16
ÊÊ8 =
;
ÊÊ= >
break
ÁÁ 
;
ÁÁ 
case
ËË 
$num
ËË 
:
ËË 
m_AtlasRenderMode
ÈÈ %
=
ÈÈ& '
GlyphRenderMode
ÈÈ( 7
.
ÈÈ7 8
SDF32
ÈÈ8 =
;
ÈÈ= >
break
ÍÍ 
;
ÍÍ 
}
ÎÎ 
if
 
(
 
fontWeights
 
!=
 
null
 #
&&
$ &
fontWeights
' 2
.
2 3
Length
3 9
>
: ;
$num
< =
)
= >
{
ÒÒ 
m_FontWeightTable
ÚÚ !
[
ÚÚ! "
$num
ÚÚ" #
]
ÚÚ# $
=
ÚÚ% &
fontWeights
ÚÚ' 2
[
ÚÚ2 3
$num
ÚÚ3 4
]
ÚÚ4 5
;
ÚÚ5 6
m_FontWeightTable
ÛÛ !
[
ÛÛ! "
$num
ÛÛ" #
]
ÛÛ# $
=
ÛÛ% &
fontWeights
ÛÛ' 2
[
ÛÛ2 3
$num
ÛÛ3 4
]
ÛÛ4 5
;
ÛÛ5 6
}
˜˜ 
if
˙˙ 
(
˙˙  
fallbackFontAssets
˙˙ "
!=
˙˙# %
null
˙˙& *
&&
˙˙+ - 
fallbackFontAssets
˙˙. @
.
˙˙@ A
Count
˙˙A F
>
˙˙G H
$num
˙˙I J
)
˙˙J K
{
˚˚ 
if
¸¸ 
(
¸¸ &
m_FallbackFontAssetTable
¸¸ ,
==
¸¸- /
null
¸¸0 4
)
¸¸4 5&
m_FallbackFontAssetTable
˝˝ ,
=
˝˝- .
new
˝˝/ 2
List
˝˝3 7
<
˝˝7 8
TMP_FontAsset
˝˝8 E
>
˝˝E F
(
˝˝F G 
fallbackFontAssets
˝˝G Y
.
˝˝Y Z
Count
˝˝Z _
)
˝˝_ `
;
˝˝` a
for
ˇˇ 
(
ˇˇ 
int
ˇˇ 
i
ˇˇ 
=
ˇˇ 
$num
ˇˇ 
;
ˇˇ 
i
ˇˇ  !
<
ˇˇ" # 
fallbackFontAssets
ˇˇ$ 6
.
ˇˇ6 7
Count
ˇˇ7 <
;
ˇˇ< =
i
ˇˇ> ?
++
ˇˇ? A
)
ˇˇA B&
m_FallbackFontAssetTable
ÄÄ ,
.
ÄÄ, -
Add
ÄÄ- 0
(
ÄÄ0 1 
fallbackFontAssets
ÄÄ1 C
[
ÄÄC D
i
ÄÄD E
]
ÄÄE F
)
ÄÄF G
;
ÄÄG H
}
ÑÑ 
if
áá 
(
áá  
m_CreationSettings
áá "
.
áá" # 
sourceFontFileGUID
áá# 5
!=
áá6 8
null
áá9 =
||
áá> @ 
m_CreationSettings
ááA S
.
ááS T 
sourceFontFileGUID
ááT f
!=
áág i
string
ááj p
.
ááp q
Empty
ááq v
)
ááv w
{
àà "
m_SourceFontFileGUID
ââ $
=
ââ% & 
m_CreationSettings
ââ' 9
.
ââ9 : 
sourceFontFileGUID
ââ: L
;
ââL M
}
ää 
else
ãã 
{
åå 
Debug
çç 
.
çç 

LogWarning
çç  
(
çç  !
$str
çç! /
+
çç0 1
this
çç2 6
.
çç6 7
name
çç7 ;
+
çç< =
$strçç> Ô
,ççÔ 
thisççÒ ı
)ççı ˆ
;ççˆ ˜
}
éé 
m_GlyphTable
ëë 
.
ëë 
Clear
ëë 
(
ëë 
)
ëë  
;
ëë  !
m_CharacterTable
íí 
.
íí 
Clear
íí "
(
íí" #
)
íí# $
;
íí$ %
bool
†† %
isSpaceCharacterPresent
†† (
=
††) *
false
††+ 0
;
††0 1
for
°° 
(
°° 
int
°° 
i
°° 
=
°° 
$num
°° 
;
°° 
i
°° 
<
°° 
m_glyphInfoList
°°  /
.
°°/ 0
Count
°°0 5
;
°°5 6
i
°°7 8
++
°°8 :
)
°°: ;
{
¢¢ 
	TMP_Glyph
££ 
oldGlyph
££ "
=
££# $
m_glyphInfoList
££% 4
[
££4 5
i
££5 6
]
££6 7
;
££7 8
Glyph
•• 
glyph
•• 
=
•• 
new
•• !
Glyph
••" '
(
••' (
)
••( )
;
••) *
uint
ßß 

glyphIndex
ßß 
=
ßß  !
(
ßß" #
uint
ßß# '
)
ßß' (
i
ßß( )
+
ßß* +
$num
ßß, -
;
ßß- .
glyph
ÆÆ 
.
ÆÆ 
index
ÆÆ 
=
ÆÆ 

glyphIndex
ÆÆ (
;
ÆÆ( )
glyph
ØØ 
.
ØØ 
	glyphRect
ØØ 
=
ØØ  !
new
ØØ" %
	GlyphRect
ØØ& /
(
ØØ/ 0
(
ØØ0 1
int
ØØ1 4
)
ØØ4 5
oldGlyph
ØØ5 =
.
ØØ= >
x
ØØ> ?
,
ØØ? @
m_AtlasHeight
ØØA N
-
ØØO P
(
ØØQ R
int
ØØR U
)
ØØU V
(
ØØV W
oldGlyph
ØØW _
.
ØØ_ `
y
ØØ` a
+
ØØb c
oldGlyph
ØØd l
.
ØØl m
height
ØØm s
+
ØØt u
$num
ØØv z
)
ØØz {
,
ØØ{ |
(
ØØ} ~
intØØ~ Å
)ØØÅ Ç
(ØØÇ É
oldGlyphØØÉ ã
.ØØã å
widthØØå ë
+ØØí ì
$numØØî ò
)ØØò ô
,ØØô ö
(ØØõ ú
intØØú ü
)ØØü †
(ØØ† °
oldGlyphØØ° ©
.ØØ© ™
heightØØ™ ∞
+ØØ± ≤
$numØØ≥ ∑
)ØØ∑ ∏
)ØØ∏ π
;ØØπ ∫
glyph
∞∞ 
.
∞∞ 
metrics
∞∞ 
=
∞∞ 
new
∞∞  #
GlyphMetrics
∞∞$ 0
(
∞∞0 1
oldGlyph
∞∞1 9
.
∞∞9 :
width
∞∞: ?
,
∞∞? @
oldGlyph
∞∞A I
.
∞∞I J
height
∞∞J P
,
∞∞P Q
oldGlyph
∞∞R Z
.
∞∞Z [
xOffset
∞∞[ b
,
∞∞b c
oldGlyph
∞∞d l
.
∞∞l m
yOffset
∞∞m t
,
∞∞t u
oldGlyph
∞∞v ~
.
∞∞~ 
xAdvance∞∞ á
)∞∞á à
;∞∞à â
glyph
±± 
.
±± 
scale
±± 
=
±± 
oldGlyph
±± &
.
±±& '
scale
±±' ,
;
±±, -
glyph
≤≤ 
.
≤≤ 

atlasIndex
≤≤  
=
≤≤! "
$num
≤≤# $
;
≤≤$ %
m_GlyphTable
¥¥ 
.
¥¥ 
Add
¥¥  
(
¥¥  !
glyph
¥¥! &
)
¥¥& '
;
¥¥' (
TMP_Character
∂∂ 
	character
∂∂ '
=
∂∂( )
new
∂∂* -
TMP_Character
∂∂. ;
(
∂∂; <
(
∂∂< =
uint
∂∂= A
)
∂∂A B
oldGlyph
∂∂B J
.
∂∂J K
id
∂∂K M
,
∂∂M N
this
∂∂O S
,
∂∂S T
glyph
∂∂U Z
)
∂∂Z [
;
∂∂[ \
if
∏∏ 
(
∏∏ 
oldGlyph
∏∏ 
.
∏∏ 
id
∏∏ 
==
∏∏  "
$num
∏∏# %
)
∏∏% &%
isSpaceCharacterPresent
ππ +
=
ππ, -
true
ππ. 2
;
ππ2 3
m_CharacterTable
ªª  
.
ªª  !
Add
ªª! $
(
ªª$ %
	character
ªª% .
)
ªª. /
;
ªª/ 0
}
ºº 
if
øø 
(
øø 
!
øø %
isSpaceCharacterPresent
øø (
)
øø( )
{
¿¿ 
Debug
¡¡ 
.
¡¡ 
Log
¡¡ 
(
¡¡ 
$str
¡¡ 4
+
¡¡5 6
this
¡¡7 ;
.
¡¡; <
name
¡¡< @
+
¡¡A B
$str
¡¡C F
)
¡¡F G
;
¡¡G H
Glyph
¬¬ 
glyph
¬¬ 
=
¬¬ 
new
¬¬ !
Glyph
¬¬" '
(
¬¬' (
$num
¬¬( )
,
¬¬) *
new
¬¬+ .
GlyphMetrics
¬¬/ ;
(
¬¬; <
$num
¬¬< =
,
¬¬= >
$num
¬¬? @
,
¬¬@ A
$num
¬¬B C
,
¬¬C D
$num
¬¬E F
,
¬¬F G

m_FaceInfo
¬¬H R
.
¬¬R S

ascentLine
¬¬S ]
/
¬¬^ _
$num
¬¬` a
)
¬¬a b
,
¬¬b c
	GlyphRect
¬¬d m
.
¬¬m n
zero
¬¬n r
,
¬¬r s
$num
¬¬t x
,
¬¬x y
$num
¬¬z {
)
¬¬{ |
;
¬¬| }
m_GlyphTable
√√ 
.
√√ 
Add
√√  
(
√√  !
glyph
√√! &
)
√√& '
;
√√' (
m_CharacterTable
ƒƒ  
.
ƒƒ  !
Add
ƒƒ! $
(
ƒƒ$ %
new
ƒƒ% (
TMP_Character
ƒƒ) 6
(
ƒƒ6 7
$num
ƒƒ7 9
,
ƒƒ9 :
this
ƒƒ; ?
,
ƒƒ? @
glyph
ƒƒA F
)
ƒƒF G
)
ƒƒG H
;
ƒƒH I
}
≈≈ %
ReadFontAssetDefinition
   #
(
  # $
)
  $ %
;
  % &
if
œœ 
(
œœ 
UnityEditor
œœ 
.
œœ 
EditorUtility
œœ )
.
œœ) *
IsPersistent
œœ* 6
(
œœ6 7
this
œœ7 ;
)
œœ; <
)
œœ< =
{
–– '
TMP_EditorResourceManager
—— )
.
——) *'
RegisterResourceForUpdate
——* C
(
——C D
this
——D H
)
——H I
;
——I J
}
““ 
}
‘‘ 	
void
ŸŸ ;
-UpgradeGlyphAdjustmentTableToFontFeatureTable
ŸŸ :
(
ŸŸ: ;
)
ŸŸ; <
{
⁄⁄ 	
Debug
€€ 
.
€€ 
Log
€€ 
(
€€ 
$str
€€ .
+
€€/ 0
this
€€1 5
.
€€5 6
name
€€6 :
+
€€; <
$str
€€= X
,
€€X Y
this
€€Z ^
)
€€^ _
;
€€_ `
if
›› 
(
››  
m_FontFeatureTable
›› "
==
››# %
null
››& *
)
››* + 
m_FontFeatureTable
ﬁﬁ "
=
ﬁﬁ# $
new
ﬁﬁ% ("
TMP_FontFeatureTable
ﬁﬁ) =
(
ﬁﬁ= >
)
ﬁﬁ> ?
;
ﬁﬁ? @
int
‡‡ 
	pairCount
‡‡ 
=
‡‡ 
m_KerningTable
‡‡ *
.
‡‡* +
kerningPairs
‡‡+ 7
.
‡‡7 8
Count
‡‡8 =
;
‡‡= > 
m_FontFeatureTable
‚‚ 
.
‚‚ *
m_GlyphPairAdjustmentRecords
‚‚ ;
=
‚‚< =
new
‚‚> A
List
‚‚B F
<
‚‚F G+
TMP_GlyphPairAdjustmentRecord
‚‚G d
>
‚‚d e
(
‚‚e f
	pairCount
‚‚f o
)
‚‚o p
;
‚‚p q
for
‰‰ 
(
‰‰ 
int
‰‰ 
i
‰‰ 
=
‰‰ 
$num
‰‰ 
;
‰‰ 
i
‰‰ 
<
‰‰ 
	pairCount
‰‰  )
;
‰‰) *
i
‰‰+ ,
++
‰‰, .
)
‰‰. /
{
ÂÂ 
KerningPair
ÊÊ 
pair
ÊÊ  
=
ÊÊ! "
m_KerningTable
ÊÊ# 1
.
ÊÊ1 2
kerningPairs
ÊÊ2 >
[
ÊÊ> ?
i
ÊÊ? @
]
ÊÊ@ A
;
ÊÊA B
uint
ËË 
firstGlyphIndex
ËË $
=
ËË% &
$num
ËË' (
;
ËË( )
TMP_Character
ÈÈ 
firstCharacter
ÈÈ ,
;
ÈÈ, -
if
ÎÎ 
(
ÎÎ )
m_CharacterLookupDictionary
ÎÎ /
.
ÎÎ/ 0
TryGetValue
ÎÎ0 ;
(
ÎÎ; <
pair
ÎÎ< @
.
ÎÎ@ A

firstGlyph
ÎÎA K
,
ÎÎK L
out
ÎÎM P
firstCharacter
ÎÎQ _
)
ÎÎ_ `
)
ÎÎ` a
firstGlyphIndex
ÏÏ #
=
ÏÏ$ %
firstCharacter
ÏÏ& 4
.
ÏÏ4 5

glyphIndex
ÏÏ5 ?
;
ÏÏ? @
uint
ÓÓ 
secondGlyphIndex
ÓÓ %
=
ÓÓ& '
$num
ÓÓ( )
;
ÓÓ) *
TMP_Character
ÔÔ 
secondCharacter
ÔÔ -
;
ÔÔ- .
if
ÒÒ 
(
ÒÒ )
m_CharacterLookupDictionary
ÒÒ /
.
ÒÒ/ 0
TryGetValue
ÒÒ0 ;
(
ÒÒ; <
pair
ÒÒ< @
.
ÒÒ@ A
secondGlyph
ÒÒA L
,
ÒÒL M
out
ÒÒN Q
secondCharacter
ÒÒR a
)
ÒÒa b
)
ÒÒb c
secondGlyphIndex
ÚÚ $
=
ÚÚ% &
secondCharacter
ÚÚ' 6
.
ÚÚ6 7

glyphIndex
ÚÚ7 A
;
ÚÚA B'
TMP_GlyphAdjustmentRecord
ÙÙ )#
firstAdjustmentRecord
ÙÙ* ?
=
ÙÙ@ A
new
ÙÙB E'
TMP_GlyphAdjustmentRecord
ÙÙF _
(
ÙÙ_ `
firstGlyphIndex
ÙÙ` o
,
ÙÙo p
new
ÙÙq t#
TMP_GlyphValueRecordÙÙu â
(ÙÙâ ä
pairÙÙä é
.ÙÙé è%
firstGlyphAdjustmentsÙÙè §
.ÙÙ§ •

xPlacementÙÙ• Ø
,ÙÙØ ∞
pairÙÙ± µ
.ÙÙµ ∂%
firstGlyphAdjustmentsÙÙ∂ À
.ÙÙÀ Ã

yPlacementÙÙÃ ÷
,ÙÙ÷ ◊
pairÙÙÿ ‹
.ÙÙ‹ ›%
firstGlyphAdjustmentsÙÙ› Ú
.ÙÙÚ Û
xAdvanceÙÙÛ ˚
,ÙÙ˚ ¸
pairÙÙ˝ Å
.ÙÙÅ Ç%
firstGlyphAdjustmentsÙÙÇ ó
.ÙÙó ò
yAdvanceÙÙò †
)ÙÙ† °
)ÙÙ° ¢
;ÙÙ¢ £'
TMP_GlyphAdjustmentRecord
ıı )$
secondAdjustmentRecord
ıı* @
=
ııA B
new
ııC F'
TMP_GlyphAdjustmentRecord
ııG `
(
ıı` a
secondGlyphIndex
ııa q
,
ııq r
new
ııs v#
TMP_GlyphValueRecordııw ã
(ııã å
pairııå ê
.ııê ë&
secondGlyphAdjustmentsııë ß
.ııß ®

xPlacementıı® ≤
,ıı≤ ≥
pairıı¥ ∏
.ıı∏ π&
secondGlyphAdjustmentsııπ œ
.ııœ –

yPlacementıı– ⁄
,ıı⁄ €
pairıı‹ ‡
.ıı‡ ·&
secondGlyphAdjustmentsıı· ˜
.ıı˜ ¯
xAdvanceıı¯ Ä
,ııÄ Å
pairııÇ Ü
.ııÜ á&
secondGlyphAdjustmentsııá ù
.ııù û
yAdvanceııû ¶
)ıı¶ ß
)ııß ®
;ıı® ©+
TMP_GlyphPairAdjustmentRecord
ˆˆ -
record
ˆˆ. 4
=
ˆˆ5 6
new
ˆˆ7 :+
TMP_GlyphPairAdjustmentRecord
ˆˆ; X
(
ˆˆX Y#
firstAdjustmentRecord
ˆˆY n
,
ˆˆn o%
secondAdjustmentRecordˆˆp Ü
)ˆˆÜ á
;ˆˆá à 
m_FontFeatureTable
¯¯ "
.
¯¯" #*
m_GlyphPairAdjustmentRecords
¯¯# ?
.
¯¯? @
Add
¯¯@ C
(
¯¯C D
record
¯¯D J
)
¯¯J K
;
¯¯K L
}
˘˘ 
m_KerningTable
¸¸ 
.
¸¸ 
kerningPairs
¸¸ '
=
¸¸( )
null
¸¸* .
;
¸¸. /
m_KerningTable
˝˝ 
=
˝˝ 
null
˝˝ !
;
˝˝! "
if
ÄÄ 
(
ÄÄ 
UnityEditor
ÄÄ 
.
ÄÄ 
EditorUtility
ÄÄ )
.
ÄÄ) *
IsPersistent
ÄÄ* 6
(
ÄÄ6 7
this
ÄÄ7 ;
)
ÄÄ; <
)
ÄÄ< =
{
ÅÅ '
TMP_EditorResourceManager
ÇÇ )
.
ÇÇ) *'
RegisterResourceForUpdate
ÇÇ* C
(
ÇÇC D
this
ÇÇD H
)
ÇÇH I
;
ÇÇI J
}
ÉÉ 
}
ÖÖ 	
}
áá 
}àà Úø
kC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMPro_ExtensionMethods.cs
	namespace 	
TMPro
 
{ 
public 

static 
class "
TMPro_ExtensionMethods .
{		 
public 
static 
int 
[ 
] 

ToIntArray &
(& '
this' +
string, 2
text3 7
)7 8
{ 	
int 
[ 
] 
intArray 
= 
new  
int! $
[$ %
text% )
.) *
Length* 0
]0 1
;1 2
for 
( 
int 
i 
= 
$num 
; 
i 
< 
text  $
.$ %
Length% +
;+ ,
i- .
++. 0
)0 1
{ 
intArray 
[ 
i 
] 
= 
text "
[" #
i# $
]$ %
;% &
} 
return 
intArray 
; 
} 	
public 
static 
string 
ArrayToString *
(* +
this+ /
char0 4
[4 5
]5 6
chars7 <
)< =
{ 	
string 
s 
= 
string 
. 
Empty #
;# $
for 
( 
int 
i 
= 
$num 
; 
i 
< 
chars  %
.% &
Length& ,
&&- /
chars0 5
[5 6
i6 7
]7 8
!=9 ;
$num< =
;= >
i? @
++@ B
)B C
{ 
s 
+= 
chars 
[ 
i 
] 
; 
} 
return   
s   
;   
}!! 	
public## 
static## 
string## 
IntToString## (
(##( )
this##) -
int##. 1
[##1 2
]##2 3
unicodes##4 <
)##< =
{$$ 	
char%% 
[%% 
]%% 
chars%% 
=%% 
new%% 
char%% #
[%%# $
unicodes%%$ ,
.%%, -
Length%%- 3
]%%3 4
;%%4 5
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i'' 
<'' 
unicodes''  (
.''( )
Length'') /
;''/ 0
i''1 2
++''2 4
)''4 5
{(( 
chars)) 
[)) 
i)) 
])) 
=)) 
()) 
char))  
)))  !
unicodes))! )
[))) *
i))* +
]))+ ,
;)), -
}** 
return,, 
new,, 
string,, 
(,, 
chars,, #
),,# $
;,,$ %
}-- 	
internal// 
static// 
string// 
UintToString// +
(//+ ,
this//, 0
List//1 5
<//5 6
uint//6 :
>//: ;
unicodes//< D
)//D E
{00 	
char11 
[11 
]11 
chars11 
=11 
new11 
char11 #
[11# $
unicodes11$ ,
.11, -
Count11- 2
]112 3
;113 4
for33 
(33 
int33 
i33 
=33 
$num33 
;33 
i33 
<33 
unicodes33  (
.33( )
Count33) .
;33. /
i330 1
++331 3
)333 4
{44 
chars55 
[55 
i55 
]55 
=55 
(55 
char55  
)55  !
unicodes55! )
[55) *
i55* +
]55+ ,
;55, -
}66 
return88 
new88 
string88 
(88 
chars88 #
)88# $
;88$ %
}99 	
public;; 
static;; 
string;; 
IntToString;; (
(;;( )
this;;) -
int;;. 1
[;;1 2
];;2 3
unicodes;;4 <
,;;< =
int;;> A
start;;B G
,;;G H
int;;I L
length;;M S
);;S T
{<< 	
if== 
(== 
start== 
>== 
unicodes==  
.==  !
Length==! '
)==' (
return>> 
string>> 
.>> 
Empty>> #
;>># $
int@@ 
end@@ 
=@@ 
Mathf@@ 
.@@ 
Min@@ 
(@@  
start@@  %
+@@& '
length@@( .
,@@. /
unicodes@@0 8
.@@8 9
Length@@9 ?
)@@? @
;@@@ A
charBB 
[BB 
]BB 
charsBB 
=BB 
newBB 
charBB #
[BB# $
endBB$ '
-BB( )
startBB* /
]BB/ 0
;BB0 1
intDD 

writeIndexDD 
=DD 
$numDD 
;DD 
forFF 
(FF 
intFF 
iFF 
=FF 
startFF 
;FF 
iFF  !
<FF" #
endFF$ '
;FF' (
iFF) *
++FF* ,
)FF, -
{GG 
charsHH 
[HH 

writeIndexHH  
++HH  "
]HH" #
=HH$ %
(HH& '
charHH' +
)HH+ ,
unicodesHH, 4
[HH4 5
iHH5 6
]HH6 7
;HH7 8
}II 
returnKK 
newKK 
stringKK 
(KK 
charsKK #
)KK# $
;KK$ %
}LL 	
publicOO 
staticOO 
intOO 
FindInstanceIDOO (
<OO) *
TOO* +
>OO+ ,
(OO- .
thisOO. 2
ListOO3 7
<OO7 8
TOO8 9
>OO9 :
listOO; ?
,OO? @
TOOA B
targetOOC I
)OOI J
whereOOK P
TOOQ R
:OOS T
ObjectOOU [
{PP 	
intQQ 
targetIDQQ 
=QQ 
targetQQ !
.QQ! "
GetInstanceIDQQ" /
(QQ/ 0
)QQ0 1
;QQ1 2
forSS 
(SS 
intSS 
iSS 
=SS 
$numSS 
;SS 
iSS 
<SS 
listSS  $
.SS$ %
CountSS% *
;SS* +
iSS, -
++SS- /
)SS/ 0
{TT 
ifUU 
(UU 
listUU 
[UU 
iUU 
]UU 
.UU 
GetInstanceIDUU )
(UU) *
)UU* +
==UU, .
targetIDUU/ 7
)UU7 8
returnVV 
iVV 
;VV 
}WW 
returnXX 
-XX 
$numXX 
;XX 
}YY 	
public\\ 
static\\ 
bool\\ 
Compare\\ "
(\\" #
this\\# '
Color32\\( /
a\\0 1
,\\1 2
Color32\\3 :
b\\; <
)\\< =
{]] 	
return^^ 
a^^ 
.^^ 
r^^ 
==^^ 
b^^ 
.^^ 
r^^ 
&&^^  
a^^! "
.^^" #
g^^# $
==^^% '
b^^( )
.^^) *
g^^* +
&&^^, .
a^^/ 0
.^^0 1
b^^1 2
==^^3 5
b^^6 7
.^^7 8
b^^8 9
&&^^: <
a^^= >
.^^> ?
a^^? @
==^^A C
b^^D E
.^^E F
a^^F G
;^^G H
}__ 	
publicaa 
staticaa	 
boolaa 

CompareRGBaa 
(aa  
thisaa  $
Color32aa% ,
aaa- .
,aa. /
Color32aa0 7
baa8 9
)aa9 :
{bb 
returncc 	
acc
 
.cc 
rcc 
==cc 
bcc 
.cc 
rcc 
&&cc 
acc 
.cc 
gcc 
==cc 
bcc  
.cc  !
gcc! "
&&cc# %
acc& '
.cc' (
bcc( )
==cc* ,
bcc- .
.cc. /
bcc/ 0
;cc0 1
}dd 
publicff 
staticff	 
boolff 
Compareff 
(ff 
thisff !
Colorff" '
aff( )
,ff) *
Colorff+ 0
bff1 2
)ff2 3
{gg 	
returnhh 
ahh 
.hh 
rhh 
==hh 
bhh 
.hh 
rhh 
&&hh  
ahh! "
.hh" #
ghh# $
==hh% '
bhh( )
.hh) *
ghh* +
&&hh, .
ahh/ 0
.hh0 1
bhh1 2
==hh3 5
bhh6 7
.hh7 8
bhh8 9
&&hh: <
ahh= >
.hh> ?
ahh? @
==hhA C
bhhD E
.hhE F
ahhF G
;hhG H
}ii 	
publicll 
staticll	 
boolll 

CompareRGBll 
(ll  
thisll  $
Colorll% *
all+ ,
,ll, -
Colorll. 3
bll4 5
)ll5 6
{mm 
returnnn 	
ann
 
.nn 
rnn 
==nn 
bnn 
.nn 
rnn 
&&nn 
ann 
.nn 
gnn 
==nn 
bnn  
.nn  !
gnn! "
&&nn# %
ann& '
.nn' (
bnn( )
==nn* ,
bnn- .
.nn. /
bnn/ 0
;nn0 1
}oo 
publicrr 
staticrr 
Color32rr 
Multiplyrr &
(rr' (
thisrr( ,
Color32rr- 4
c1rr5 7
,rr7 8
Color32rr9 @
c2rrA C
)rrC D
{ss 	
bytett 
rtt 
=tt 
(tt 
bytett 
)tt 
(tt 
(tt 
c1tt 
.tt  
rtt  !
/tt" #
$numtt$ (
)tt( )
*tt* +
(tt, -
c2tt- /
.tt/ 0
rtt0 1
/tt2 3
$numtt4 8
)tt8 9
*tt: ;
$numtt< ?
)tt? @
;tt@ A
byteuu 
guu 
=uu 
(uu 
byteuu 
)uu 
(uu 
(uu 
c1uu 
.uu  
guu  !
/uu" #
$numuu$ (
)uu( )
*uu* +
(uu, -
c2uu- /
.uu/ 0
guu0 1
/uu2 3
$numuu4 8
)uu8 9
*uu: ;
$numuu< ?
)uu? @
;uu@ A
bytevv 
bvv 
=vv 
(vv 
bytevv 
)vv 
(vv 
(vv 
c1vv 
.vv  
bvv  !
/vv" #
$numvv$ (
)vv( )
*vv* +
(vv, -
c2vv- /
.vv/ 0
bvv0 1
/vv2 3
$numvv4 8
)vv8 9
*vv: ;
$numvv< ?
)vv? @
;vv@ A
byteww 
aww 
=ww 
(ww 
byteww 
)ww 
(ww 
(ww 
c1ww 
.ww  
aww  !
/ww" #
$numww$ (
)ww( )
*ww* +
(ww, -
c2ww- /
.ww/ 0
aww0 1
/ww2 3
$numww4 8
)ww8 9
*ww: ;
$numww< ?
)ww? @
;ww@ A
returnyy 
newyy 
Color32yy 
(yy 
ryy  
,yy  !
gyy" #
,yy# $
byy% &
,yy& '
ayy( )
)yy) *
;yy* +
}zz 	
public}} 
static}} 
Color32}} 
Tint}} "
(}}# $
this}}$ (
Color32}}) 0
c1}}1 3
,}}3 4
Color32}}5 <
c2}}= ?
)}}? @
{~~ 	
byte 
r 
= 
( 
byte 
) 
( 
( 
c1 
.  
r  !
/" #
$num$ (
)( )
** +
(, -
c2- /
./ 0
r0 1
/2 3
$num4 8
)8 9
*: ;
$num< ?
)? @
;@ A
byte
ÄÄ 
g
ÄÄ 
=
ÄÄ 
(
ÄÄ 
byte
ÄÄ 
)
ÄÄ 
(
ÄÄ 
(
ÄÄ 
c1
ÄÄ 
.
ÄÄ  
g
ÄÄ  !
/
ÄÄ" #
$num
ÄÄ$ (
)
ÄÄ( )
*
ÄÄ* +
(
ÄÄ, -
c2
ÄÄ- /
.
ÄÄ/ 0
g
ÄÄ0 1
/
ÄÄ2 3
$num
ÄÄ4 8
)
ÄÄ8 9
*
ÄÄ: ;
$num
ÄÄ< ?
)
ÄÄ? @
;
ÄÄ@ A
byte
ÅÅ 
b
ÅÅ 
=
ÅÅ 
(
ÅÅ 
byte
ÅÅ 
)
ÅÅ 
(
ÅÅ 
(
ÅÅ 
c1
ÅÅ 
.
ÅÅ  
b
ÅÅ  !
/
ÅÅ" #
$num
ÅÅ$ (
)
ÅÅ( )
*
ÅÅ* +
(
ÅÅ, -
c2
ÅÅ- /
.
ÅÅ/ 0
b
ÅÅ0 1
/
ÅÅ2 3
$num
ÅÅ4 8
)
ÅÅ8 9
*
ÅÅ: ;
$num
ÅÅ< ?
)
ÅÅ? @
;
ÅÅ@ A
byte
ÇÇ 
a
ÇÇ 
=
ÇÇ 
(
ÇÇ 
byte
ÇÇ 
)
ÇÇ 
(
ÇÇ 
(
ÇÇ 
c1
ÇÇ 
.
ÇÇ  
a
ÇÇ  !
/
ÇÇ" #
$num
ÇÇ$ (
)
ÇÇ( )
*
ÇÇ* +
(
ÇÇ, -
c2
ÇÇ- /
.
ÇÇ/ 0
a
ÇÇ0 1
/
ÇÇ2 3
$num
ÇÇ4 8
)
ÇÇ8 9
*
ÇÇ: ;
$num
ÇÇ< ?
)
ÇÇ? @
;
ÇÇ@ A
return
ÑÑ 
new
ÑÑ 
Color32
ÑÑ 
(
ÑÑ 
r
ÑÑ  
,
ÑÑ  !
g
ÑÑ" #
,
ÑÑ# $
b
ÑÑ% &
,
ÑÑ& '
a
ÑÑ( )
)
ÑÑ) *
;
ÑÑ* +
}
ÖÖ 	
public
áá 
static
áá 
Color32
áá 
Tint
áá "
(
áá" #
this
áá# '
Color32
áá( /
c1
áá0 2
,
áá2 3
float
áá4 9
tint
áá: >
)
áá> ?
{
àà 	
byte
ââ 
r
ââ 
=
ââ 
(
ââ 
byte
ââ 
)
ââ 
(
ââ 
Mathf
ââ !
.
ââ! "
Clamp
ââ" '
(
ââ' (
c1
ââ( *
.
ââ* +
r
ââ+ ,
/
ââ- .
$num
ââ/ 3
*
ââ4 5
tint
ââ6 :
*
ââ; <
$num
ââ= @
,
ââ@ A
$num
ââB C
,
ââC D
$num
ââE H
)
ââH I
)
ââI J
;
ââJ K
byte
ää 
g
ää 
=
ää 
(
ää 
byte
ää 
)
ää 
(
ää 
Mathf
ää !
.
ää! "
Clamp
ää" '
(
ää' (
c1
ää( *
.
ää* +
g
ää+ ,
/
ää- .
$num
ää/ 3
*
ää4 5
tint
ää6 :
*
ää; <
$num
ää= @
,
ää@ A
$num
ääB C
,
ääC D
$num
ääE H
)
ääH I
)
ääI J
;
ääJ K
byte
ãã 
b
ãã 
=
ãã 
(
ãã 
byte
ãã 
)
ãã 
(
ãã 
Mathf
ãã !
.
ãã! "
Clamp
ãã" '
(
ãã' (
c1
ãã( *
.
ãã* +
b
ãã+ ,
/
ãã- .
$num
ãã/ 3
*
ãã4 5
tint
ãã6 :
*
ãã; <
$num
ãã= @
,
ãã@ A
$num
ããB C
,
ããC D
$num
ããE H
)
ããH I
)
ããI J
;
ããJ K
byte
åå 
a
åå 
=
åå 
(
åå 
byte
åå 
)
åå 
(
åå 
Mathf
åå !
.
åå! "
Clamp
åå" '
(
åå' (
c1
åå( *
.
åå* +
a
åå+ ,
/
åå- .
$num
åå/ 3
*
åå4 5
tint
åå6 :
*
åå; <
$num
åå= @
,
åå@ A
$num
ååB C
,
ååC D
$num
ååE H
)
ååH I
)
ååI J
;
ååJ K
return
éé 
new
éé 
Color32
éé 
(
éé 
r
éé  
,
éé  !
g
éé" #
,
éé# $
b
éé% &
,
éé& '
a
éé( )
)
éé) *
;
éé* +
}
èè 	
public
ëë 
static
ëë 
Color
ëë 
MinAlpha
ëë $
(
ëë$ %
this
ëë% )
Color
ëë* /
c1
ëë0 2
,
ëë2 3
Color
ëë4 9
c2
ëë: <
)
ëë< =
{
íí 	
float
ìì 
a
ìì 
=
ìì 
c1
ìì 
.
ìì 
a
ìì 
<
ìì 
c2
ìì 
.
ìì  
a
ìì  !
?
ìì" #
c1
ìì$ &
.
ìì& '
a
ìì' (
:
ìì) *
c2
ìì+ -
.
ìì- .
a
ìì. /
;
ìì/ 0
return
ïï 
new
ïï 
Color
ïï 
(
ïï 
c1
ïï 
.
ïï  
r
ïï  !
,
ïï! "
c1
ïï# %
.
ïï% &
g
ïï& '
,
ïï' (
c1
ïï) +
.
ïï+ ,
b
ïï, -
,
ïï- .
a
ïï/ 0
)
ïï0 1
;
ïï1 2
}
ññ 	
public
ôô 
static
ôô 
bool
ôô 
Compare
ôô "
(
ôô" #
this
ôô# '
Vector3
ôô( /
v1
ôô0 2
,
ôô2 3
Vector3
ôô4 ;
v2
ôô< >
,
ôô> ?
int
ôô@ C
accuracy
ôôD L
)
ôôL M
{
öö 	
bool
õõ 
x
õõ 
=
õõ 
(
õõ 
int
õõ 
)
õõ 
(
õõ 
v1
õõ 
.
õõ 
x
õõ 
*
õõ  !
accuracy
õõ" *
)
õõ* +
==
õõ, .
(
õõ/ 0
int
õõ0 3
)
õõ3 4
(
õõ4 5
v2
õõ5 7
.
õõ7 8
x
õõ8 9
*
õõ: ;
accuracy
õõ< D
)
õõD E
;
õõE F
bool
úú 
y
úú 
=
úú 
(
úú 
int
úú 
)
úú 
(
úú 
v1
úú 
.
úú 
y
úú 
*
úú  !
accuracy
úú" *
)
úú* +
==
úú, .
(
úú/ 0
int
úú0 3
)
úú3 4
(
úú4 5
v2
úú5 7
.
úú7 8
y
úú8 9
*
úú: ;
accuracy
úú< D
)
úúD E
;
úúE F
bool
ùù 
z
ùù 
=
ùù 
(
ùù 
int
ùù 
)
ùù 
(
ùù 
v1
ùù 
.
ùù 
z
ùù 
*
ùù  !
accuracy
ùù" *
)
ùù* +
==
ùù, .
(
ùù/ 0
int
ùù0 3
)
ùù3 4
(
ùù4 5
v2
ùù5 7
.
ùù7 8
z
ùù8 9
*
ùù: ;
accuracy
ùù< D
)
ùùD E
;
ùùE F
return
üü 
x
üü 
&&
üü 
y
üü 
&&
üü 
z
üü 
;
üü 
}
†† 	
public
¢¢ 
static
¢¢ 
bool
¢¢ 
Compare
¢¢ "
(
¢¢" #
this
¢¢# '

Quaternion
¢¢( 2
q1
¢¢3 5
,
¢¢5 6

Quaternion
¢¢7 A
q2
¢¢B D
,
¢¢D E
int
¢¢F I
accuracy
¢¢J R
)
¢¢R S
{
££ 	
bool
§§ 
x
§§ 
=
§§ 
(
§§ 
int
§§ 
)
§§ 
(
§§ 
q1
§§ 
.
§§ 
x
§§ 
*
§§  !
accuracy
§§" *
)
§§* +
==
§§, .
(
§§/ 0
int
§§0 3
)
§§3 4
(
§§4 5
q2
§§5 7
.
§§7 8
x
§§8 9
*
§§: ;
accuracy
§§< D
)
§§D E
;
§§E F
bool
•• 
y
•• 
=
•• 
(
•• 
int
•• 
)
•• 
(
•• 
q1
•• 
.
•• 
y
•• 
*
••  !
accuracy
••" *
)
••* +
==
••, .
(
••/ 0
int
••0 3
)
••3 4
(
••4 5
q2
••5 7
.
••7 8
y
••8 9
*
••: ;
accuracy
••< D
)
••D E
;
••E F
bool
¶¶ 
z
¶¶ 
=
¶¶ 
(
¶¶ 
int
¶¶ 
)
¶¶ 
(
¶¶ 
q1
¶¶ 
.
¶¶ 
z
¶¶ 
*
¶¶  !
accuracy
¶¶" *
)
¶¶* +
==
¶¶, .
(
¶¶/ 0
int
¶¶0 3
)
¶¶3 4
(
¶¶4 5
q2
¶¶5 7
.
¶¶7 8
z
¶¶8 9
*
¶¶: ;
accuracy
¶¶< D
)
¶¶D E
;
¶¶E F
bool
ßß 
w
ßß 
=
ßß 
(
ßß 
int
ßß 
)
ßß 
(
ßß 
q1
ßß 
.
ßß 
w
ßß 
*
ßß  !
accuracy
ßß" *
)
ßß* +
==
ßß, .
(
ßß/ 0
int
ßß0 3
)
ßß3 4
(
ßß4 5
q2
ßß5 7
.
ßß7 8
w
ßß8 9
*
ßß: ;
accuracy
ßß< D
)
ßßD E
;
ßßE F
return
©© 
x
©© 
&&
©© 
y
©© 
&&
©© 
z
©© 
&&
©© !
w
©©" #
;
©©# $
}
™™ 	
}
ÎÎ 
public
ÌÌ 

static
ÌÌ 
class
ÌÌ 
TMP_Math
ÌÌ  
{
ÓÓ 
public
ÔÔ 
const
ÔÔ 
float
ÔÔ 
	FLOAT_MAX
ÔÔ $
=
ÔÔ% &
$num
ÔÔ' ,
;
ÔÔ, -
public
 
const
 
float
 
	FLOAT_MIN
 $
=
% &
-
' (
$num
( -
;
- .
public
ÒÒ 
const
ÒÒ 
int
ÒÒ 
INT_MAX
ÒÒ  
=
ÒÒ! "
$num
ÒÒ# -
;
ÒÒ- .
public
ÚÚ 
const
ÚÚ 
int
ÚÚ 
INT_MIN
ÚÚ  
=
ÚÚ! "
-
ÚÚ# $
$num
ÚÚ$ .
;
ÚÚ. /
public
ÙÙ 
const
ÙÙ 
float
ÙÙ 
FLOAT_UNSET
ÙÙ &
=
ÙÙ' (
-
ÙÙ) *
$num
ÙÙ* /
;
ÙÙ/ 0
public
ıı 
const
ıı 
int
ıı 
	INT_UNSET
ıı "
=
ıı# $
-
ıı% &
$num
ıı& +
;
ıı+ ,
public
˜˜ 
static
˜˜ 
Vector2
˜˜ 
	MAX_16BIT
˜˜ '
=
˜˜( )
new
˜˜* -
Vector2
˜˜. 5
(
˜˜5 6
	FLOAT_MAX
˜˜6 ?
,
˜˜? @
	FLOAT_MAX
˜˜A J
)
˜˜J K
;
˜˜K L
public
¯¯ 
static
¯¯ 
Vector2
¯¯ 
	MIN_16BIT
¯¯ '
=
¯¯( )
new
¯¯* -
Vector2
¯¯. 5
(
¯¯5 6
	FLOAT_MIN
¯¯6 ?
,
¯¯? @
	FLOAT_MIN
¯¯A J
)
¯¯J K
;
¯¯K L
public
˙˙ 
static
˙˙ 
bool
˙˙ 
Approximately
˙˙ (
(
˙˙( )
float
˙˙) .
a
˙˙/ 0
,
˙˙0 1
float
˙˙2 7
b
˙˙8 9
)
˙˙9 :
{
˚˚ 	
return
¸¸ 
(
¸¸ 
b
¸¸ 
-
¸¸ 
$num
¸¸ 
)
¸¸  
<
¸¸! "
a
¸¸# $
&&
¸¸% '
a
¸¸( )
<
¸¸* +
(
¸¸, -
b
¸¸- .
+
¸¸/ 0
$num
¸¸1 8
)
¸¸8 9
;
¸¸9 :
}
˝˝ 	
public
ˇˇ 
static
ˇˇ 
int
ˇˇ 
Mod
ˇˇ 
(
ˇˇ 
int
ˇˇ !
a
ˇˇ" #
,
ˇˇ# $
int
ˇˇ% (
b
ˇˇ) *
)
ˇˇ* +
{
ÄÄ 	
int
ÅÅ 
r
ÅÅ 
=
ÅÅ 
a
ÅÅ 
%
ÅÅ 
b
ÅÅ 
;
ÅÅ 
return
ÇÇ 
r
ÇÇ 
<
ÇÇ 
$num
ÇÇ 
?
ÇÇ 
r
ÇÇ 
+
ÇÇ 
b
ÇÇ  
:
ÇÇ! "
r
ÇÇ# $
;
ÇÇ$ %
}
ÉÉ 	
}
ÑÑ 
}ÖÖ —!
hC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_SpriteCharacter.cs
	namespace 	
TMPro
 
{ 
[		 
Serializable		 
]		 
public

 

class

 
TMP_SpriteCharacter

 $
:

% &
TMP_TextElement

' 6
{ 
public 
string 
name 
{ 	
get 
{ 
return 
m_Name 
;  
}! "
set 
{ 
if 
( 
value 
== 
m_Name #
)# $
return 
; 
m_Name 
= 
value 
; 

m_HashCode 
= $
TMP_TextParsingUtilities 5
.5 6$
GetHashCodeCaseSensitive6 N
(N O
m_NameO U
)U V
;V W
} 
} 	
public   
int   
hashCode   
{   
get   !
{  " #
return  $ *

m_HashCode  + 5
;  5 6
}  7 8
}  9 :
['' 	
SerializeField''	 
]'' 
private(( 
string(( 
m_Name(( 
;(( 
[** 	
SerializeField**	 
]** 
private++ 
int++ 

m_HashCode++ 
;++ 
public55 
TMP_SpriteCharacter55 "
(55" #
)55# $
{66 	
m_ElementType77 
=77 
TextElementType77 +
.77+ ,
Sprite77, 2
;772 3
}88 	
public?? 
TMP_SpriteCharacter?? "
(??" #
uint??# '
unicode??( /
,??/ 0
TMP_SpriteGlyph??1 @
glyph??A F
)??F G
{@@ 	
m_ElementTypeAA 
=AA 
TextElementTypeAA +
.AA+ ,
SpriteAA, 2
;AA2 3
thisCC 
.CC 
unicodeCC 
=CC 
unicodeCC "
;CC" #
thisDD 
.DD 

glyphIndexDD 
=DD 
glyphDD #
.DD# $
indexDD$ )
;DD) *
thisEE 
.EE 
glyphEE 
=EE 
glyphEE 
;EE 
thisFF 
.FF 
scaleFF 
=FF 
$numFF 
;FF 
}GG 	
publicOO 
TMP_SpriteCharacterOO "
(OO" #
uintOO# '
unicodeOO( /
,OO/ 0
TMP_SpriteAssetOO1 @
spriteAssetOOA L
,OOL M
TMP_SpriteGlyphOON ]
glyphOO^ c
)OOc d
{PP 	
m_ElementTypeQQ 
=QQ 
TextElementTypeQQ +
.QQ+ ,
SpriteQQ, 2
;QQ2 3
thisSS 
.SS 
unicodeSS 
=SS 
unicodeSS "
;SS" #
thisTT 
.TT 
	textAssetTT 
=TT 
spriteAssetTT (
;TT( )
thisUU 
.UU 
glyphUU 
=UU 
glyphUU 
;UU 
thisVV 
.VV 

glyphIndexVV 
=VV 
glyphVV #
.VV# $
indexVV$ )
;VV) *
thisWW 
.WW 
scaleWW 
=WW 
$numWW 
;WW 
}XX 	
internal__ 
TMP_SpriteCharacter__ $
(__$ %
uint__% )
unicode__* 1
,__1 2
uint__3 7

glyphIndex__8 B
)__B C
{`` 	
m_ElementTypeaa 
=aa 
TextElementTypeaa +
.aa+ ,
Spriteaa, 2
;aa2 3
thiscc 
.cc 
unicodecc 
=cc 
unicodecc "
;cc" #
thisdd 
.dd 
	textAssetdd 
=dd 
nulldd !
;dd! "
thisee 
.ee 
glyphee 
=ee 
nullee 
;ee 
thisff 
.ff 

glyphIndexff 
=ff 

glyphIndexff (
;ff( )
thisgg 
.gg 
scalegg 
=gg 
$numgg 
;gg 
}hh 	
}ii 
}jj ÿ˝
hC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_MaterialManager.cs
	namespace		 	
TMPro		
 
{

 
public 

static 
class 
TMP_MaterialManager +
{ 
private 
static 
List 
< 
MaskingMaterial +
>+ ,
m_materialList- ;
=< =
new> A
ListB F
<F G
MaskingMaterialG V
>V W
(W X
)X Y
;Y Z
private 
static 

Dictionary !
<! "
long" &
,& '
FallbackMaterial( 8
>8 9
m_fallbackMaterials: M
=N O
newP S

DictionaryT ^
<^ _
long_ c
,c d
FallbackMateriale u
>u v
(v w
)w x
;x y
private 
static 

Dictionary !
<! "
int" %
,% &
long' +
>+ ,$
m_fallbackMaterialLookup- E
=F G
newH K

DictionaryL V
<V W
intW Z
,Z [
long\ `
>` a
(a b
)b c
;c d
private 
static 
List 
< 
FallbackMaterial ,
>, -!
m_fallbackCleanupList. C
=D E
newF I
ListJ N
<N O
FallbackMaterialO _
>_ `
(` a
)a b
;b c
private 
static 
bool 
isFallbackListDirty /
;/ 0
static 
TMP_MaterialManager "
(" #
)# $
{ 	
Canvas 
. 
willRenderCanvases %
+=& (
OnPreRender) 4
;4 5
} 	
static 
void 
OnPreRender 
(  
)  !
{ 	
if 
( 
isFallbackListDirty #
)# $
{ $
CleanupFallbackMaterials   (
(  ( )
)  ) *
;  * +
isFallbackListDirty!! #
=!!$ %
false!!& +
;!!+ ,
}"" 
}## 	
public++ 
static++ 
Material++ 
GetStencilMaterial++ 1
(++1 2
Material++2 :
baseMaterial++; G
,++G H
int++I L
	stencilID++M V
)++V W
{,, 	
if.. 
(.. 
!.. 
baseMaterial.. 
... 
HasProperty.. )
(..) *
ShaderUtilities..* 9
...9 :
ID_StencilID..: F
)..F G
)..G H
{// 
Debug00 
.00 

LogWarning00  
(00  !
$str	00! ñ
)
00ñ ó
;
00ó ò
return11 
baseMaterial11 #
;11# $
}22 
int44 
baseMaterialID44 
=44  
baseMaterial44! -
.44- .
GetInstanceID44. ;
(44; <
)44< =
;44= >
for77 
(77 
int77 
i77 
=77 
$num77 
;77 
i77 
<77 
m_materialList77  .
.77. /
Count77/ 4
;774 5
i776 7
++777 9
)779 :
{88 
if99 
(99 
m_materialList99 "
[99" #
i99# $
]99$ %
.99% &
baseMaterial99& 2
.992 3
GetInstanceID993 @
(99@ A
)99A B
==99C E
baseMaterialID99F T
&&99U W
m_materialList99X f
[99f g
i99g h
]99h i
.99i j
	stencilID99j s
==99t v
	stencilID	99w Ä
)
99Ä Å
{:: 
m_materialList;; "
[;;" #
i;;# $
];;$ %
.;;% &
count;;& +
+=;;, .
$num;;/ 0
;;;0 1
returnAA 
m_materialListAA )
[AA) *
iAA* +
]AA+ ,
.AA, -
stencilMaterialAA- <
;AA< =
}BB 
}CC 
MaterialGG 
stencilMaterialGG $
;GG$ %
stencilMaterialJJ 
=JJ 
newJJ !
MaterialJJ" *
(JJ* +
baseMaterialJJ+ 7
)JJ7 8
;JJ8 9
stencilMaterialKK 
.KK 
	hideFlagsKK %
=KK& '
	HideFlagsKK( 1
.KK1 2
HideAndDontSaveKK2 A
;KKA B
stencilMaterialNN 
.NN  
nameNN  $
+=NN% '
$strNN( 6
+NN7 8
	stencilIDNN9 B
;NNB C
stencilMaterialQQ 
.QQ 
shaderKeywordsQQ *
=QQ+ ,
baseMaterialQQ- 9
.QQ9 :
shaderKeywordsQQ: H
;QQH I
ShaderUtilitiesTT 
.TT  
GetShaderPropertyIDsTT 0
(TT0 1
)TT1 2
;TT2 3
stencilMaterialUU 
.UU 
SetFloatUU $
(UU$ %
ShaderUtilitiesUU% 4
.UU4 5
ID_StencilIDUU5 A
,UUA B
	stencilIDUUC L
)UUL M
;UUM N
stencilMaterialWW 
.WW 
SetFloatWW $
(WW$ %
ShaderUtilitiesWW% 4
.WW4 5
ID_StencilCompWW5 C
,WWC D
$numWWE F
)WWF G
;WWG H
MaskingMaterial[[ 
temp[[  
=[[! "
new[[# &
MaskingMaterial[[' 6
([[6 7
)[[7 8
;[[8 9
temp\\ 
.\\ 
baseMaterial\\ 
=\\ 
baseMaterial\\  ,
;\\, -
temp]] 
.]] 
stencilMaterial]]  
=]]! "
stencilMaterial]]# 2
;]]2 3
temp^^ 
.^^ 
	stencilID^^ 
=^^ 
	stencilID^^ &
;^^& '
temp__ 
.__ 
count__ 
=__ 
$num__ 
;__ 
m_materialListaa 
.aa 
Addaa 
(aa 
tempaa #
)aa# $
;aa$ %
returngg 
stencilMaterialgg "
;gg" #
}hh 	
publicoo 
staticoo 
voidoo "
ReleaseStencilMaterialoo 1
(oo1 2
Materialoo2 :
stencilMaterialoo; J
)ooJ K
{pp 	
intqq 
stencilMaterialIDqq !
=qq" #
stencilMaterialqq$ 3
.qq3 4
GetInstanceIDqq4 A
(qqA B
)qqB C
;qqC D
forss 
(ss 
intss 
iss 
=ss 
$numss 
;ss 
iss 
<ss 
m_materialListss  .
.ss. /
Countss/ 4
;ss4 5
iss6 7
++ss7 9
)ss9 :
{tt 
ifuu 
(uu 
m_materialListuu "
[uu" #
iuu# $
]uu$ %
.uu% &
stencilMaterialuu& 5
.uu5 6
GetInstanceIDuu6 C
(uuC D
)uuD E
==uuF H
stencilMaterialIDuuI Z
)uuZ [
{vv 
ifww 
(ww 
m_materialListww &
[ww& '
iww' (
]ww( )
.ww) *
countww* /
>ww0 1
$numww2 3
)ww3 4
m_materialListxx &
[xx& '
ixx' (
]xx( )
.xx) *
countxx* /
-=xx0 2
$numxx3 4
;xx4 5
elseyy 
{zz 
Object{{ 
.{{ 
DestroyImmediate{{ /
({{/ 0
m_materialList{{0 >
[{{> ?
i{{? @
]{{@ A
.{{A B
stencilMaterial{{B Q
){{Q R
;{{R S
m_materialList|| &
.||& '
RemoveAt||' /
(||/ 0
i||0 1
)||1 2
;||2 3
stencilMaterial}} '
=}}( )
null}}* .
;}}. /
}~~ 
break
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}
ÇÇ 
}
àà 	
public
åå 
static
åå 
Material
åå 
GetBaseMaterial
åå .
(
åå. /
Material
åå/ 7
stencilMaterial
åå8 G
)
ååG H
{
çç 	
int
èè 
index
èè 
=
èè 
m_materialList
èè &
.
èè& '
	FindIndex
èè' 0
(
èè0 1
item
èè1 5
=>
èè6 8
item
èè9 =
.
èè= >
stencilMaterial
èè> M
==
èèN P
stencilMaterial
èèQ `
)
èè` a
;
èèa b
if
ëë 
(
ëë 
index
ëë 
==
ëë 
-
ëë 
$num
ëë 
)
ëë 
return
íí 
null
íí 
;
íí 
else
ìì 
return
îî 
m_materialList
îî %
[
îî% &
index
îî& +
]
îî+ ,
.
îî, -
baseMaterial
îî- 9
;
îî9 :
}
ññ 	
public
üü 
static
üü 
Material
üü 

SetStencil
üü )
(
üü) *
Material
üü* 2
material
üü3 ;
,
üü; <
int
üü= @
	stencilID
üüA J
)
üüJ K
{
†† 	
material
°° 
.
°° 
SetFloat
°° 
(
°° 
ShaderUtilities
°° -
.
°°- .
ID_StencilID
°°. :
,
°°: ;
	stencilID
°°< E
)
°°E F
;
°°F G
if
££ 
(
££ 
	stencilID
££ 
==
££ 
$num
££ 
)
££ 
material
§§ 
.
§§ 
SetFloat
§§ !
(
§§! "
ShaderUtilities
§§" 1
.
§§1 2
ID_StencilComp
§§2 @
,
§§@ A
$num
§§B C
)
§§C D
;
§§D E
else
•• 
material
¶¶ 
.
¶¶ 
SetFloat
¶¶ !
(
¶¶! "
ShaderUtilities
¶¶" 1
.
¶¶1 2
ID_StencilComp
¶¶2 @
,
¶¶@ A
$num
¶¶B C
)
¶¶C D
;
¶¶D E
return
®® 
material
®® 
;
®® 
}
©© 	
public
¨¨ 
static
¨¨ 
void
¨¨  
AddMaskingMaterial
¨¨ -
(
¨¨- .
Material
¨¨. 6
baseMaterial
¨¨7 C
,
¨¨C D
Material
¨¨E M
stencilMaterial
¨¨N ]
,
¨¨] ^
int
¨¨_ b
	stencilID
¨¨c l
)
¨¨l m
{
≠≠ 	
int
ØØ 
index
ØØ 
=
ØØ 
m_materialList
ØØ &
.
ØØ& '
	FindIndex
ØØ' 0
(
ØØ0 1
item
ØØ1 5
=>
ØØ6 8
item
ØØ9 =
.
ØØ= >
stencilMaterial
ØØ> M
==
ØØN P
stencilMaterial
ØØQ `
)
ØØ` a
;
ØØa b
if
±± 
(
±± 
index
±± 
==
±± 
-
±± 
$num
±± 
)
±± 
{
≤≤ 
MaskingMaterial
≥≥ 
temp
≥≥  $
=
≥≥% &
new
≥≥' *
MaskingMaterial
≥≥+ :
(
≥≥: ;
)
≥≥; <
;
≥≥< =
temp
¥¥ 
.
¥¥ 
baseMaterial
¥¥ !
=
¥¥" #
baseMaterial
¥¥$ 0
;
¥¥0 1
temp
µµ 
.
µµ 
stencilMaterial
µµ $
=
µµ% &
stencilMaterial
µµ' 6
;
µµ6 7
temp
∂∂ 
.
∂∂ 
	stencilID
∂∂ 
=
∂∂  
	stencilID
∂∂! *
;
∂∂* +
temp
∑∑ 
.
∑∑ 
count
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
m_materialList
ππ 
.
ππ 
Add
ππ "
(
ππ" #
temp
ππ# '
)
ππ' (
;
ππ( )
}
∫∫ 
else
ªª 
{
ºº 
stencilMaterial
ΩΩ 
=
ΩΩ  !
m_materialList
ΩΩ" 0
[
ΩΩ0 1
index
ΩΩ1 6
]
ΩΩ6 7
.
ΩΩ7 8
stencilMaterial
ΩΩ8 G
;
ΩΩG H
m_materialList
ææ 
[
ææ 
index
ææ $
]
ææ$ %
.
ææ% &
count
ææ& +
+=
ææ, .
$num
ææ/ 0
;
ææ0 1
}
øø 
}
¿¿ 	
public
ƒƒ 
static
ƒƒ 
void
ƒƒ #
RemoveStencilMaterial
ƒƒ 0
(
ƒƒ0 1
Material
ƒƒ1 9
stencilMaterial
ƒƒ: I
)
ƒƒI J
{
≈≈ 	
int
«« 
index
«« 
=
«« 
m_materialList
«« &
.
««& '
	FindIndex
««' 0
(
««0 1
item
««1 5
=>
««6 8
item
««9 =
.
««= >
stencilMaterial
««> M
==
««N P
stencilMaterial
««Q `
)
««` a
;
««a b
if
…… 
(
…… 
index
…… 
!=
…… 
-
…… 
$num
…… 
)
…… 
{
   
m_materialList
ÀÀ 
.
ÀÀ 
RemoveAt
ÀÀ '
(
ÀÀ' (
index
ÀÀ( -
)
ÀÀ- .
;
ÀÀ. /
}
ÃÃ 
}
—— 	
public
’’ 
static
’’ 
void
’’ !
ReleaseBaseMaterial
’’ .
(
’’. /
Material
’’/ 7
baseMaterial
’’8 D
)
’’D E
{
÷÷ 	
int
ÿÿ 
index
ÿÿ 
=
ÿÿ 
m_materialList
ÿÿ &
.
ÿÿ& '
	FindIndex
ÿÿ' 0
(
ÿÿ0 1
item
ÿÿ1 5
=>
ÿÿ6 8
item
ÿÿ9 =
.
ÿÿ= >
baseMaterial
ÿÿ> J
==
ÿÿK M
baseMaterial
ÿÿN Z
)
ÿÿZ [
;
ÿÿ[ \
if
⁄⁄ 
(
⁄⁄ 
index
⁄⁄ 
==
⁄⁄ 
-
⁄⁄ 
$num
⁄⁄ 
)
⁄⁄ 
{
€€ 
Debug
‹‹ 
.
‹‹ 
Log
‹‹ 
(
‹‹ 
$str
‹‹ ;
+
‹‹< =
baseMaterial
‹‹> J
.
‹‹J K
name
‹‹K O
)
‹‹O P
;
‹‹P Q
}
›› 
else
ﬁﬁ 
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
m_materialList
‡‡ "
[
‡‡" #
index
‡‡# (
]
‡‡( )
.
‡‡) *
count
‡‡* /
>
‡‡0 1
$num
‡‡2 3
)
‡‡3 4
{
·· 
m_materialList
‚‚ "
[
‚‚" #
index
‚‚# (
]
‚‚( )
.
‚‚) *
count
‚‚* /
-=
‚‚0 2
$num
‚‚3 4
;
‚‚4 5
Debug
„„ 
.
„„ 
Log
„„ 
(
„„ 
$str
„„ 9
+
„„: ;
m_materialList
„„< J
[
„„J K
index
„„K P
]
„„P Q
.
„„Q R
stencilMaterial
„„R a
.
„„a b
name
„„b f
+
„„g h
$str
„„i w
+
„„x y
m_materialList„„z à
[„„à â
index„„â é
]„„é è
.„„è ê
count„„ê ï
+„„ñ ó
$str„„ò ´
)„„´ ¨
;„„¨ ≠
}
‰‰ 
else
ÂÂ 
{
ÊÊ 
Debug
ÁÁ 
.
ÁÁ 
Log
ÁÁ 
(
ÁÁ 
$str
ÁÁ :
+
ÁÁ; <
m_materialList
ÁÁ= K
[
ÁÁK L
index
ÁÁL Q
]
ÁÁQ R
.
ÁÁR S
stencilMaterial
ÁÁS b
.
ÁÁb c
name
ÁÁc g
+
ÁÁh i
$str
ÁÁj u
+
ÁÁv w
m_materialListÁÁx Ü
[ÁÁÜ á
indexÁÁá å
]ÁÁå ç
.ÁÁç é
stencilMaterialÁÁé ù
.ÁÁù û
GetInstanceIDÁÁû ´
(ÁÁ´ ¨
)ÁÁ¨ ≠
)ÁÁ≠ Æ
;ÁÁÆ Ø
Object
ËË 
.
ËË 
DestroyImmediate
ËË +
(
ËË+ ,
m_materialList
ËË, :
[
ËË: ;
index
ËË; @
]
ËË@ A
.
ËËA B
stencilMaterial
ËËB Q
)
ËËQ R
;
ËËR S
m_materialList
ÈÈ "
.
ÈÈ" #
RemoveAt
ÈÈ# +
(
ÈÈ+ ,
index
ÈÈ, 1
)
ÈÈ1 2
;
ÈÈ2 3
}
ÍÍ 
}
ÎÎ 
}
 	
public
ÛÛ 
static
ÛÛ 
void
ÛÛ 
ClearMaterials
ÛÛ )
(
ÛÛ) *
)
ÛÛ* +
{
ÙÙ 	
if
ıı 
(
ıı 
m_materialList
ıı 
.
ıı 
Count
ıı $
==
ıı% '
$num
ıı( )
)
ıı) *
{
ˆˆ 
Debug
˜˜ 
.
˜˜ 
Log
˜˜ 
(
˜˜ 
$str
˜˜ C
)
˜˜C D
;
˜˜D E
return
¯¯ 
;
¯¯ 
}
˘˘ 
for
˚˚ 
(
˚˚ 
int
˚˚ 
i
˚˚ 
=
˚˚ 
$num
˚˚ 
;
˚˚ 
i
˚˚ 
<
˚˚ 
m_materialList
˚˚  .
.
˚˚. /
Count
˚˚/ 4
;
˚˚4 5
i
˚˚6 7
++
˚˚7 9
)
˚˚9 :
{
¸¸ 
Material
˛˛ 
stencilMaterial
˛˛ (
=
˛˛) *
m_materialList
˛˛+ 9
[
˛˛9 :
i
˛˛: ;
]
˛˛; <
.
˛˛< =
stencilMaterial
˛˛= L
;
˛˛L M
Object
ÄÄ 
.
ÄÄ 
DestroyImmediate
ÄÄ '
(
ÄÄ' (
stencilMaterial
ÄÄ( 7
)
ÄÄ7 8
;
ÄÄ8 9
}
ÅÅ 
m_materialList
ÇÇ 
.
ÇÇ 
Clear
ÇÇ  
(
ÇÇ  !
)
ÇÇ! "
;
ÇÇ" #
}
ÉÉ 	
public
ãã 
static
ãã 
int
ãã 
GetStencilID
ãã &
(
ãã& '

GameObject
ãã' 1
obj
ãã2 5
)
ãã5 6
{
åå 	
var
èè 
count
èè 
=
èè 
$num
èè 
;
èè 
var
ëë 
	transform
ëë 
=
ëë 
obj
ëë 
.
ëë  
	transform
ëë  )
;
ëë) *
var
íí 
	stopAfter
íí 
=
íí (
FindRootSortOverrideCanvas
íí 6
(
íí6 7
	transform
íí7 @
)
íí@ A
;
ííA B
if
ìì 
(
ìì 
	transform
ìì 
==
ìì 
	stopAfter
ìì &
)
ìì& '
return
îî 
count
îî 
;
îî 
var
ññ 
t
ññ 
=
ññ 
	transform
ññ 
.
ññ 
parent
ññ $
;
ññ$ %
var
óó 

components
óó 
=
óó 
TMP_ListPool
óó )
<
óó) *
Mask
óó* .
>
óó. /
.
óó/ 0
Get
óó0 3
(
óó3 4
)
óó4 5
;
óó5 6
while
òò 
(
òò 
t
òò 
!=
òò 
null
òò 
)
òò 
{
ôô 
t
öö 
.
öö 
GetComponents
öö 
<
öö  
Mask
öö  $
>
öö$ %
(
öö% &

components
öö& 0
)
öö0 1
;
öö1 2
for
õõ 
(
õõ 
var
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ  !
<
õõ" #

components
õõ$ .
.
õõ. /
Count
õõ/ 4
;
õõ4 5
++
õõ6 8
i
õõ8 9
)
õõ9 :
{
úú 
var
ùù 
mask
ùù 
=
ùù 

components
ùù )
[
ùù) *
i
ùù* +
]
ùù+ ,
;
ùù, -
if
ûû 
(
ûû 
mask
ûû 
!=
ûû 
null
ûû  $
&&
ûû% '
mask
ûû( ,
.
ûû, -
MaskEnabled
ûû- 8
(
ûû8 9
)
ûû9 :
&&
ûû; =
mask
ûû> B
.
ûûB C
graphic
ûûC J
.
ûûJ K
IsActive
ûûK S
(
ûûS T
)
ûûT U
)
ûûU V
{
üü 
++
†† 
count
†† 
;
††  
break
°° 
;
°° 
}
¢¢ 
}
££ 
if
•• 
(
•• 
t
•• 
==
•• 
	stopAfter
•• "
)
••" #
break
¶¶ 
;
¶¶ 
t
®® 
=
®® 
t
®® 
.
®® 
parent
®® 
;
®® 
}
©© 
TMP_ListPool
™™ 
<
™™ 
Mask
™™ 
>
™™ 
.
™™ 
Release
™™ &
(
™™& '

components
™™' 1
)
™™1 2
;
™™2 3
return
¨¨ 
Mathf
¨¨ 
.
¨¨ 
Min
¨¨ 
(
¨¨ 
(
¨¨ 
$num
¨¨ 
<<
¨¨  "
count
¨¨# (
)
¨¨( )
-
¨¨* +
$num
¨¨, -
,
¨¨- .
$num
¨¨/ 2
)
¨¨2 3
;
¨¨3 4
}
≠≠ 	
public
∞∞ 
static
∞∞ 
Material
∞∞ %
GetMaterialForRendering
∞∞ 6
(
∞∞6 7
MaskableGraphic
∞∞7 F
graphic
∞∞G N
,
∞∞N O
Material
∞∞P X
baseMaterial
∞∞Y e
)
∞∞e f
{
±± 	
if
≤≤ 
(
≤≤ 
baseMaterial
≤≤ 
==
≤≤ 
null
≤≤  $
)
≤≤$ %
return
≥≥ 
null
≥≥ 
;
≥≥ 
var
µµ 
	modifiers
µµ 
=
µµ 
TMP_ListPool
µµ (
<
µµ( )
IMaterialModifier
µµ) :
>
µµ: ;
.
µµ; <
Get
µµ< ?
(
µµ? @
)
µµ@ A
;
µµA B
graphic
∂∂ 
.
∂∂ 
GetComponents
∂∂ !
(
∂∂! "
	modifiers
∂∂" +
)
∂∂+ ,
;
∂∂, -
var
∏∏ 
result
∏∏ 
=
∏∏ 
baseMaterial
∏∏ %
;
∏∏% &
for
ππ 
(
ππ 
int
ππ 
i
ππ 
=
ππ 
$num
ππ 
;
ππ 
i
ππ 
<
ππ 
	modifiers
ππ  )
.
ππ) *
Count
ππ* /
;
ππ/ 0
i
ππ1 2
++
ππ2 4
)
ππ4 5
result
∫∫ 
=
∫∫ 
	modifiers
∫∫ "
[
∫∫" #
i
∫∫# $
]
∫∫$ %
.
∫∫% &!
GetModifiedMaterial
∫∫& 9
(
∫∫9 :
result
∫∫: @
)
∫∫@ A
;
∫∫A B
TMP_ListPool
ºº 
<
ºº 
IMaterialModifier
ºº *
>
ºº* +
.
ºº+ ,
Release
ºº, 3
(
ºº3 4
	modifiers
ºº4 =
)
ºº= >
;
ºº> ?
return
ææ 
result
ææ 
;
ææ 
}
øø 	
private
¡¡ 
static
¡¡ 
	Transform
¡¡  (
FindRootSortOverrideCanvas
¡¡! ;
(
¡¡; <
	Transform
¡¡< E
start
¡¡F K
)
¡¡K L
{
¬¬ 	
var
≈≈ 

canvasList
≈≈ 
=
≈≈ 
TMP_ListPool
≈≈ )
<
≈≈) *
Canvas
≈≈* 0
>
≈≈0 1
.
≈≈1 2
Get
≈≈2 5
(
≈≈5 6
)
≈≈6 7
;
≈≈7 8
start
∆∆ 
.
∆∆ #
GetComponentsInParent
∆∆ '
(
∆∆' (
false
∆∆( -
,
∆∆- .

canvasList
∆∆/ 9
)
∆∆9 :
;
∆∆: ;
Canvas
«« 
canvas
«« 
=
«« 
null
««  
;
««  !
for
…… 
(
…… 
int
…… 
i
…… 
=
…… 
$num
…… 
;
…… 
i
…… 
<
…… 

canvasList
……  *
.
……* +
Count
……+ 0
;
……0 1
++
……2 4
i
……4 5
)
……5 6
{
   
canvas
ÀÀ 
=
ÀÀ 

canvasList
ÀÀ #
[
ÀÀ# $
i
ÀÀ$ %
]
ÀÀ% &
;
ÀÀ& '
if
ŒŒ 
(
ŒŒ 
canvas
ŒŒ 
.
ŒŒ 
overrideSorting
ŒŒ *
)
ŒŒ* +
break
œœ 
;
œœ 
}
–– 
TMP_ListPool
—— 
<
—— 
Canvas
—— 
>
——  
.
——  !
Release
——! (
(
——( )

canvasList
——) 3
)
——3 4
;
——4 5
return
”” 
canvas
”” 
!=
”” 
null
”” !
?
””" #
canvas
””$ *
.
””* +
	transform
””+ 4
:
””5 6
null
””7 ;
;
””; <
}
‘‘ 	
internal
◊◊ 
static
◊◊ 
Material
◊◊  !
GetFallbackMaterial
◊◊! 4
(
◊◊4 5
TMP_FontAsset
◊◊5 B
	fontAsset
◊◊C L
,
◊◊L M
Material
◊◊N V
sourceMaterial
◊◊W e
,
◊◊e f
int
◊◊g j

atlasIndex
◊◊k u
)
◊◊u v
{
ÿÿ 	
int
ŸŸ 
sourceMaterialID
ŸŸ  
=
ŸŸ! "
sourceMaterial
ŸŸ# 1
.
ŸŸ1 2
GetInstanceID
ŸŸ2 ?
(
ŸŸ? @
)
ŸŸ@ A
;
ŸŸA B
Texture
⁄⁄ 
tex
⁄⁄ 
=
⁄⁄ 
	fontAsset
⁄⁄ #
.
⁄⁄# $
atlasTextures
⁄⁄$ 1
[
⁄⁄1 2

atlasIndex
⁄⁄2 <
]
⁄⁄< =
;
⁄⁄= >
int
€€ 
texID
€€ 
=
€€ 
tex
€€ 
.
€€ 
GetInstanceID
€€ )
(
€€) *
)
€€* +
;
€€+ ,
long
‹‹ 
key
‹‹ 
=
‹‹ 
(
‹‹ 
long
‹‹ 
)
‹‹ 
sourceMaterialID
‹‹ -
<<
‹‹. 0
$num
‹‹1 3
|
‹‹4 5
(
‹‹6 7
long
‹‹7 ;
)
‹‹; <
(
‹‹< =
uint
‹‹= A
)
‹‹A B
texID
‹‹B G
;
‹‹G H
FallbackMaterial
›› 
fallback
›› %
;
››% &
if
ﬂﬂ 
(
ﬂﬂ !
m_fallbackMaterials
ﬂﬂ #
.
ﬂﬂ# $
TryGetValue
ﬂﬂ$ /
(
ﬂﬂ/ 0
key
ﬂﬂ0 3
,
ﬂﬂ3 4
out
ﬂﬂ5 8
fallback
ﬂﬂ9 A
)
ﬂﬂA B
)
ﬂﬂB C
{
‡‡ 
int
‚‚ 
sourceMaterialCRC
‚‚ %
=
‚‚& '
sourceMaterial
‚‚( 6
.
‚‚6 7

ComputeCRC
‚‚7 A
(
‚‚A B
)
‚‚B C
;
‚‚C D
if
„„ 
(
„„ 
sourceMaterialCRC
„„ %
==
„„& (
fallback
„„) 1
.
„„1 2
sourceMaterialCRC
„„2 C
)
„„C D
return
‰‰ 
fallback
‰‰ #
.
‰‰# $
fallbackMaterial
‰‰$ 4
;
‰‰4 5*
CopyMaterialPresetProperties
ÊÊ ,
(
ÊÊ, -
sourceMaterial
ÊÊ- ;
,
ÊÊ; <
fallback
ÊÊ= E
.
ÊÊE F
fallbackMaterial
ÊÊF V
)
ÊÊV W
;
ÊÊW X
fallback
ÁÁ 
.
ÁÁ 
sourceMaterialCRC
ÁÁ *
=
ÁÁ+ ,
sourceMaterialCRC
ÁÁ- >
;
ÁÁ> ?
return
ËË 
fallback
ËË 
.
ËË  
fallbackMaterial
ËË  0
;
ËË0 1
}
ÈÈ 
Material
ÏÏ 
fallbackMaterial
ÏÏ %
=
ÏÏ& '
new
ÏÏ( +
Material
ÏÏ, 4
(
ÏÏ4 5
sourceMaterial
ÏÏ5 C
)
ÏÏC D
;
ÏÏD E
fallbackMaterial
ÌÌ 
.
ÌÌ 

SetTexture
ÌÌ '
(
ÌÌ' (
ShaderUtilities
ÌÌ( 7
.
ÌÌ7 8

ID_MainTex
ÌÌ8 B
,
ÌÌB C
tex
ÌÌD G
)
ÌÌG H
;
ÌÌH I
fallbackMaterial
ÔÔ 
.
ÔÔ 
	hideFlags
ÔÔ &
=
ÔÔ' (
	HideFlags
ÔÔ) 2
.
ÔÔ2 3
HideAndDontSave
ÔÔ3 B
;
ÔÔB C
fallbackMaterial
ÚÚ  
.
ÚÚ  !
name
ÚÚ! %
+=
ÚÚ& (
$str
ÚÚ) .
+
ÚÚ/ 0
tex
ÚÚ1 4
.
ÚÚ4 5
name
ÚÚ5 9
;
ÚÚ9 :
fallback
ıı 
=
ıı 
new
ıı 
FallbackMaterial
ıı +
(
ıı+ ,
)
ıı, -
;
ıı- .
fallback
ˆˆ 
.
ˆˆ 

fallbackID
ˆˆ 
=
ˆˆ  !
key
ˆˆ" %
;
ˆˆ% &
fallback
˜˜ 
.
˜˜ 
sourceMaterial
˜˜ #
=
˜˜$ %
	fontAsset
˜˜& /
.
˜˜/ 0
material
˜˜0 8
;
˜˜8 9
fallback
¯¯ 
.
¯¯ 
sourceMaterialCRC
¯¯ &
=
¯¯' (
sourceMaterial
¯¯) 7
.
¯¯7 8

ComputeCRC
¯¯8 B
(
¯¯B C
)
¯¯C D
;
¯¯D E
fallback
˘˘ 
.
˘˘ 
fallbackMaterial
˘˘ %
=
˘˘& '
fallbackMaterial
˘˘( 8
;
˘˘8 9
fallback
˙˙ 
.
˙˙ 
count
˙˙ 
=
˙˙ 
$num
˙˙ 
;
˙˙ !
m_fallbackMaterials
¸¸ 
.
¸¸  
Add
¸¸  #
(
¸¸# $
key
¸¸$ '
,
¸¸' (
fallback
¸¸) 1
)
¸¸1 2
;
¸¸2 3&
m_fallbackMaterialLookup
˝˝ $
.
˝˝$ %
Add
˝˝% (
(
˝˝( )
fallbackMaterial
˝˝) 9
.
˝˝9 :
GetInstanceID
˝˝: G
(
˝˝G H
)
˝˝H I
,
˝˝I J
key
˝˝K N
)
˝˝N O
;
˝˝O P
return
ÉÉ 
fallbackMaterial
ÉÉ #
;
ÉÉ# $
}
ÑÑ 	
public
çç 
static
çç 
Material
çç !
GetFallbackMaterial
çç 2
(
çç3 4
Material
çç4 <
sourceMaterial
çç= K
,
ççK L
Material
ççM U
targetMaterial
ççV d
)
ççd e
{
éé 	
int
èè 
sourceID
èè 
=
èè 
sourceMaterial
èè )
.
èè) *
GetInstanceID
èè* 7
(
èè7 8
)
èè8 9
;
èè9 :
Texture
êê 
tex
êê 
=
êê 
targetMaterial
êê (
.
êê( )

GetTexture
êê) 3
(
êê3 4
ShaderUtilities
êê4 C
.
êêC D

ID_MainTex
êêD N
)
êêN O
;
êêO P
int
ëë 
texID
ëë 
=
ëë 
tex
ëë 
.
ëë 
GetInstanceID
ëë )
(
ëë) *
)
ëë* +
;
ëë+ ,
long
íí 
key
íí 
=
íí 
(
íí 
long
íí 
)
íí 
sourceID
íí %
<<
íí& (
$num
íí) +
|
íí, -
(
íí. /
long
íí/ 3
)
íí3 4
(
íí4 5
uint
íí5 9
)
íí9 :
texID
íí: ?
;
íí? @
FallbackMaterial
ìì 
fallback
ìì %
;
ìì% &
if
ïï 
(
ïï !
m_fallbackMaterials
ïï #
.
ïï# $
TryGetValue
ïï$ /
(
ïï/ 0
key
ïï0 3
,
ïï3 4
out
ïï5 8
fallback
ïï9 A
)
ïïA B
)
ïïB C
{
ññ 
int
òò 
sourceMaterialCRC
òò %
=
òò& '
sourceMaterial
òò( 6
.
òò6 7

ComputeCRC
òò7 A
(
òòA B
)
òòB C
;
òòC D
if
ôô 
(
ôô 
sourceMaterialCRC
ôô %
==
ôô& (
fallback
ôô) 1
.
ôô1 2
sourceMaterialCRC
ôô2 C
)
ôôC D
return
öö 
fallback
öö #
.
öö# $
fallbackMaterial
öö$ 4
;
öö4 5*
CopyMaterialPresetProperties
úú ,
(
úú, -
sourceMaterial
úú- ;
,
úú; <
fallback
úú= E
.
úúE F
fallbackMaterial
úúF V
)
úúV W
;
úúW X
fallback
ùù 
.
ùù 
sourceMaterialCRC
ùù *
=
ùù+ ,
sourceMaterialCRC
ùù- >
;
ùù> ?
return
ûû 
fallback
ûû 
.
ûû  
fallbackMaterial
ûû  0
;
ûû0 1
}
üü 
Material
¢¢ 
fallbackMaterial
¢¢ %
;
¢¢% &
if
££ 
(
££ 
sourceMaterial
££ 
.
££ 
HasProperty
££ *
(
££* +
ShaderUtilities
££+ :
.
££: ;
ID_GradientScale
££; K
)
££K L
&&
££M O
targetMaterial
££P ^
.
££^ _
HasProperty
££_ j
(
££j k
ShaderUtilities
££k z
.
££z {
ID_GradientScale££{ ã
)££ã å
)££å ç
{
§§ 
fallbackMaterial
••  
=
••! "
new
••# &
Material
••' /
(
••/ 0
sourceMaterial
••0 >
)
••> ?
;
••? @
fallbackMaterial
¶¶  
.
¶¶  !
	hideFlags
¶¶! *
=
¶¶+ ,
	HideFlags
¶¶- 6
.
¶¶6 7
HideAndDontSave
¶¶7 F
;
¶¶F G
fallbackMaterial
©©  
.
©©  !
name
©©! %
+=
©©& (
$str
©©) .
+
©©/ 0
tex
©©1 4
.
©©4 5
name
©©5 9
;
©©9 :
fallbackMaterial
≠≠  
.
≠≠  !

SetTexture
≠≠! +
(
≠≠+ ,
ShaderUtilities
≠≠, ;
.
≠≠; <

ID_MainTex
≠≠< F
,
≠≠F G
tex
≠≠H K
)
≠≠K L
;
≠≠L M
fallbackMaterial
ØØ  
.
ØØ  !
SetFloat
ØØ! )
(
ØØ) *
ShaderUtilities
ØØ* 9
.
ØØ9 :
ID_GradientScale
ØØ: J
,
ØØJ K
targetMaterial
ØØL Z
.
ØØZ [
GetFloat
ØØ[ c
(
ØØc d
ShaderUtilities
ØØd s
.
ØØs t
ID_GradientScaleØØt Ñ
)ØØÑ Ö
)ØØÖ Ü
;ØØÜ á
fallbackMaterial
∞∞  
.
∞∞  !
SetFloat
∞∞! )
(
∞∞) *
ShaderUtilities
∞∞* 9
.
∞∞9 :
ID_TextureWidth
∞∞: I
,
∞∞I J
targetMaterial
∞∞K Y
.
∞∞Y Z
GetFloat
∞∞Z b
(
∞∞b c
ShaderUtilities
∞∞c r
.
∞∞r s
ID_TextureWidth∞∞s Ç
)∞∞Ç É
)∞∞É Ñ
;∞∞Ñ Ö
fallbackMaterial
±±  
.
±±  !
SetFloat
±±! )
(
±±) *
ShaderUtilities
±±* 9
.
±±9 :
ID_TextureHeight
±±: J
,
±±J K
targetMaterial
±±L Z
.
±±Z [
GetFloat
±±[ c
(
±±c d
ShaderUtilities
±±d s
.
±±s t
ID_TextureHeight±±t Ñ
)±±Ñ Ö
)±±Ö Ü
;±±Ü á
fallbackMaterial
≤≤  
.
≤≤  !
SetFloat
≤≤! )
(
≤≤) *
ShaderUtilities
≤≤* 9
.
≤≤9 :
ID_WeightNormal
≤≤: I
,
≤≤I J
targetMaterial
≤≤K Y
.
≤≤Y Z
GetFloat
≤≤Z b
(
≤≤b c
ShaderUtilities
≤≤c r
.
≤≤r s
ID_WeightNormal≤≤s Ç
)≤≤Ç É
)≤≤É Ñ
;≤≤Ñ Ö
fallbackMaterial
≥≥  
.
≥≥  !
SetFloat
≥≥! )
(
≥≥) *
ShaderUtilities
≥≥* 9
.
≥≥9 :
ID_WeightBold
≥≥: G
,
≥≥G H
targetMaterial
≥≥I W
.
≥≥W X
GetFloat
≥≥X `
(
≥≥` a
ShaderUtilities
≥≥a p
.
≥≥p q
ID_WeightBold
≥≥q ~
)
≥≥~ 
)≥≥ Ä
;≥≥Ä Å
}
¥¥ 
else
µµ 
{
∂∂ 
fallbackMaterial
∑∑  
=
∑∑! "
new
∑∑# &
Material
∑∑' /
(
∑∑/ 0
targetMaterial
∑∑0 >
)
∑∑> ?
;
∑∑? @
}
∏∏ 
fallback
∫∫ 
=
∫∫ 
new
∫∫ 
FallbackMaterial
∫∫ +
(
∫∫+ ,
)
∫∫, -
;
∫∫- .
fallback
ªª 
.
ªª 

fallbackID
ªª 
=
ªª  !
key
ªª" %
;
ªª% &
fallback
ºº 
.
ºº 
sourceMaterial
ºº #
=
ºº$ %
sourceMaterial
ºº& 4
;
ºº4 5
fallback
ΩΩ 
.
ΩΩ 
sourceMaterialCRC
ΩΩ &
=
ΩΩ' (
sourceMaterial
ΩΩ) 7
.
ΩΩ7 8

ComputeCRC
ΩΩ8 B
(
ΩΩB C
)
ΩΩC D
;
ΩΩD E
fallback
ææ 
.
ææ 
fallbackMaterial
ææ %
=
ææ& '
fallbackMaterial
ææ( 8
;
ææ8 9
fallback
øø 
.
øø 
count
øø 
=
øø 
$num
øø 
;
øø !
m_fallbackMaterials
¡¡ 
.
¡¡  
Add
¡¡  #
(
¡¡# $
key
¡¡$ '
,
¡¡' (
fallback
¡¡) 1
)
¡¡1 2
;
¡¡2 3&
m_fallbackMaterialLookup
¬¬ $
.
¬¬$ %
Add
¬¬% (
(
¬¬( )
fallbackMaterial
¬¬) 9
.
¬¬9 :
GetInstanceID
¬¬: G
(
¬¬G H
)
¬¬H I
,
¬¬I J
key
¬¬K N
)
¬¬N O
;
¬¬O P
return
»» 
fallbackMaterial
»» #
;
»»# $
}
…… 	
public
–– 
static
–– 
void
–– *
AddFallbackMaterialReference
–– 7
(
––7 8
Material
––8 @
targetMaterial
––A O
)
––O P
{
—— 	
if
““ 
(
““ 
targetMaterial
““ 
==
““ !
null
““" &
)
““& '
return
““( .
;
““. /
int
‘‘ 
sourceID
‘‘ 
=
‘‘ 
targetMaterial
‘‘ )
.
‘‘) *
GetInstanceID
‘‘* 7
(
‘‘7 8
)
‘‘8 9
;
‘‘9 :
long
’’ 
key
’’ 
;
’’ 
if
ÿÿ 
(
ÿÿ &
m_fallbackMaterialLookup
ÿÿ (
.
ÿÿ( )
TryGetValue
ÿÿ) 4
(
ÿÿ4 5
sourceID
ÿÿ5 =
,
ÿÿ= >
out
ÿÿ? B
key
ÿÿC F
)
ÿÿF G
)
ÿÿG H
{
ŸŸ 
FallbackMaterial
⁄⁄  
fallback
⁄⁄! )
;
⁄⁄) *
if
€€ 
(
€€ !
m_fallbackMaterials
€€ '
.
€€' (
TryGetValue
€€( 3
(
€€3 4
key
€€4 7
,
€€7 8
out
€€9 <
fallback
€€= E
)
€€E F
)
€€F G
{
‹‹ 
fallback
ﬁﬁ 
.
ﬁﬁ 
count
ﬁﬁ "
+=
ﬁﬁ# %
$num
ﬁﬁ& '
;
ﬁﬁ' (
}
ﬂﬂ 
}
‡‡ 
}
·· 	
public
ËË 
static
ËË 
void
ËË -
RemoveFallbackMaterialReference
ËË :
(
ËË: ;
Material
ËË; C
targetMaterial
ËËD R
)
ËËR S
{
ÈÈ 	
if
ÍÍ 
(
ÍÍ 
targetMaterial
ÍÍ 
==
ÍÍ !
null
ÍÍ" &
)
ÍÍ& '
return
ÍÍ( .
;
ÍÍ. /
int
ÏÏ 
sourceID
ÏÏ 
=
ÏÏ 
targetMaterial
ÏÏ )
.
ÏÏ) *
GetInstanceID
ÏÏ* 7
(
ÏÏ7 8
)
ÏÏ8 9
;
ÏÏ9 :
long
ÌÌ 
key
ÌÌ 
;
ÌÌ 
if
 
(
 &
m_fallbackMaterialLookup
 (
.
( )
TryGetValue
) 4
(
4 5
sourceID
5 =
,
= >
out
? B
key
C F
)
F G
)
G H
{
ÒÒ 
FallbackMaterial
ÚÚ  
fallback
ÚÚ! )
;
ÚÚ) *
if
ÛÛ 
(
ÛÛ !
m_fallbackMaterials
ÛÛ '
.
ÛÛ' (
TryGetValue
ÛÛ( 3
(
ÛÛ3 4
key
ÛÛ4 7
,
ÛÛ7 8
out
ÛÛ9 <
fallback
ÛÛ= E
)
ÛÛE F
)
ÛÛF G
{
ÙÙ 
fallback
ıı 
.
ıı 
count
ıı "
-=
ıı# %
$num
ıı& '
;
ıı' (
if
˜˜ 
(
˜˜ 
fallback
˜˜  
.
˜˜  !
count
˜˜! &
<
˜˜' (
$num
˜˜) *
)
˜˜* +#
m_fallbackCleanupList
¯¯ -
.
¯¯- .
Add
¯¯. 1
(
¯¯1 2
fallback
¯¯2 :
)
¯¯: ;
;
¯¯; <
}
˘˘ 
}
˙˙ 
}
˚˚ 	
public
ÅÅ 
static
ÅÅ 
void
ÅÅ &
CleanupFallbackMaterials
ÅÅ 3
(
ÅÅ3 4
)
ÅÅ4 5
{
ÇÇ 	
if
ÑÑ 
(
ÑÑ #
m_fallbackCleanupList
ÑÑ %
.
ÑÑ% &
Count
ÑÑ& +
==
ÑÑ, .
$num
ÑÑ/ 0
)
ÑÑ0 1
return
ÑÑ2 8
;
ÑÑ8 9
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
i
ÜÜ 
<
ÜÜ #
m_fallbackCleanupList
ÜÜ  5
.
ÜÜ5 6
Count
ÜÜ6 ;
;
ÜÜ; <
i
ÜÜ= >
++
ÜÜ> @
)
ÜÜ@ A
{
áá 
FallbackMaterial
àà  
fallback
àà! )
=
àà* +#
m_fallbackCleanupList
àà, A
[
ààA B
i
ààB C
]
ààC D
;
ààD E
if
ää 
(
ää 
fallback
ää 
.
ää 
count
ää "
<
ää# $
$num
ää% &
)
ää& '
{
ãã 
Material
éé 
mat
éé  
=
éé! "
fallback
éé# +
.
éé+ ,
fallbackMaterial
éé, <
;
éé< =!
m_fallbackMaterials
èè '
.
èè' (
Remove
èè( .
(
èè. /
fallback
èè/ 7
.
èè7 8

fallbackID
èè8 B
)
èèB C
;
èèC D&
m_fallbackMaterialLookup
êê ,
.
êê, -
Remove
êê- 3
(
êê3 4
mat
êê4 7
.
êê7 8
GetInstanceID
êê8 E
(
êêE F
)
êêF G
)
êêG H
;
êêH I
Object
ëë 
.
ëë 
DestroyImmediate
ëë +
(
ëë+ ,
mat
ëë, /
)
ëë/ 0
;
ëë0 1
mat
íí 
=
íí 
null
íí 
;
íí 
}
ìì 
}
îî #
m_fallbackCleanupList
ññ !
.
ññ! "
Clear
ññ" '
(
ññ' (
)
ññ( )
;
ññ) *
}
óó 	
public
ûû 
static
ûû 
void
ûû %
ReleaseFallbackMaterial
ûû 2
(
ûû2 3
Material
ûû3 ;
fallbackMaterial
ûû< L
)
ûûL M
{
üü 	
if
†† 
(
†† 
fallbackMaterial
††  
==
††! #
null
††$ (
)
††( )
return
††* 0
;
††0 1
int
¢¢ 

materialID
¢¢ 
=
¢¢ 
fallbackMaterial
¢¢ -
.
¢¢- .
GetInstanceID
¢¢. ;
(
¢¢; <
)
¢¢< =
;
¢¢= >
long
££ 
key
££ 
;
££ 
if
•• 
(
•• &
m_fallbackMaterialLookup
•• (
.
••( )
TryGetValue
••) 4
(
••4 5

materialID
••5 ?
,
••? @
out
••A D
key
••E H
)
••H I
)
••I J
{
¶¶ 
FallbackMaterial
ßß  
fallback
ßß! )
;
ßß) *
if
®® 
(
®® !
m_fallbackMaterials
®® '
.
®®' (
TryGetValue
®®( 3
(
®®3 4
key
®®4 7
,
®®7 8
out
®®9 <
fallback
®®= E
)
®®E F
)
®®F G
{
©© 
fallback
¨¨ 
.
¨¨ 
count
¨¨ "
-=
¨¨# %
$num
¨¨& '
;
¨¨' (
if
ÆÆ 
(
ÆÆ 
fallback
ÆÆ  
.
ÆÆ  !
count
ÆÆ! &
<
ÆÆ' (
$num
ÆÆ) *
)
ÆÆ* +#
m_fallbackCleanupList
ØØ -
.
ØØ- .
Add
ØØ. 1
(
ØØ1 2
fallback
ØØ2 :
)
ØØ: ;
;
ØØ; <
}
∞∞ 
}
±± !
isFallbackListDirty
≥≥ 
=
≥≥  !
true
≥≥" &
;
≥≥& '
}
∏∏ 	
private
ªª 
class
ªª 
FallbackMaterial
ªª &
{
ºº 	
public
ΩΩ 
long
ΩΩ 

fallbackID
ΩΩ "
;
ΩΩ" #
public
ææ 
Material
ææ 
sourceMaterial
ææ *
;
ææ* +
internal
øø 
int
øø 
sourceMaterialCRC
øø *
;
øø* +
public
¿¿ 
Material
¿¿ 
fallbackMaterial
¿¿ ,
;
¿¿, -
public
¡¡ 
int
¡¡ 
count
¡¡ 
;
¡¡ 
}
¬¬ 	
private
≈≈ 
class
≈≈ 
MaskingMaterial
≈≈ %
{
∆∆ 	
public
«« 
Material
«« 
baseMaterial
«« (
;
««( )
public
»» 
Material
»» 
stencilMaterial
»» +
;
»»+ ,
public
…… 
int
…… 
count
…… 
;
…… 
public
   
int
   
	stencilID
    
;
    !
}
ÀÀ 	
public
”” 
static
”” 
void
”” *
CopyMaterialPresetProperties
”” 7
(
””7 8
Material
””8 @
source
””A G
,
””G H
Material
””I Q
destination
””R ]
)
””] ^
{
‘‘ 	
if
’’ 
(
’’ 
!
’’ 
source
’’ 
.
’’ 
HasProperty
’’ #
(
’’# $
ShaderUtilities
’’$ 3
.
’’3 4
ID_GradientScale
’’4 D
)
’’D E
||
’’F H
!
’’I J
destination
’’J U
.
’’U V
HasProperty
’’V a
(
’’a b
ShaderUtilities
’’b q
.
’’q r
ID_GradientScale’’r Ç
)’’Ç É
)’’É Ñ
return
÷÷ 
;
÷÷ 
Texture
ŸŸ 
dst_texture
ŸŸ 
=
ŸŸ  !
destination
ŸŸ" -
.
ŸŸ- .

GetTexture
ŸŸ. 8
(
ŸŸ8 9
ShaderUtilities
ŸŸ9 H
.
ŸŸH I

ID_MainTex
ŸŸI S
)
ŸŸS T
;
ŸŸT U
float
⁄⁄ 
dst_gradientScale
⁄⁄ #
=
⁄⁄$ %
destination
⁄⁄& 1
.
⁄⁄1 2
GetFloat
⁄⁄2 :
(
⁄⁄: ;
ShaderUtilities
⁄⁄; J
.
⁄⁄J K
ID_GradientScale
⁄⁄K [
)
⁄⁄[ \
;
⁄⁄\ ]
float
€€ 
dst_texWidth
€€ 
=
€€  
destination
€€! ,
.
€€, -
GetFloat
€€- 5
(
€€5 6
ShaderUtilities
€€6 E
.
€€E F
ID_TextureWidth
€€F U
)
€€U V
;
€€V W
float
‹‹ 
dst_texHeight
‹‹ 
=
‹‹  !
destination
‹‹" -
.
‹‹- .
GetFloat
‹‹. 6
(
‹‹6 7
ShaderUtilities
‹‹7 F
.
‹‹F G
ID_TextureHeight
‹‹G W
)
‹‹W X
;
‹‹X Y
float
›› 
dst_weightNormal
›› "
=
››# $
destination
››% 0
.
››0 1
GetFloat
››1 9
(
››9 :
ShaderUtilities
››: I
.
››I J
ID_WeightNormal
››J Y
)
››Y Z
;
››Z [
float
ﬁﬁ 
dst_weightBold
ﬁﬁ  
=
ﬁﬁ! "
destination
ﬁﬁ# .
.
ﬁﬁ. /
GetFloat
ﬁﬁ/ 7
(
ﬁﬁ7 8
ShaderUtilities
ﬁﬁ8 G
.
ﬁﬁG H
ID_WeightBold
ﬁﬁH U
)
ﬁﬁU V
;
ﬁﬁV W
destination
·· 
.
·· (
CopyPropertiesFromMaterial
·· 2
(
··2 3
source
··3 9
)
··9 :
;
··: ;
destination
‰‰ 
.
‰‰ 
shaderKeywords
‰‰ &
=
‰‰' (
source
‰‰) /
.
‰‰/ 0
shaderKeywords
‰‰0 >
;
‰‰> ?
destination
ÁÁ 
.
ÁÁ 

SetTexture
ÁÁ "
(
ÁÁ" #
ShaderUtilities
ÁÁ# 2
.
ÁÁ2 3

ID_MainTex
ÁÁ3 =
,
ÁÁ= >
dst_texture
ÁÁ? J
)
ÁÁJ K
;
ÁÁK L
destination
ËË 
.
ËË 
SetFloat
ËË  
(
ËË  !
ShaderUtilities
ËË! 0
.
ËË0 1
ID_GradientScale
ËË1 A
,
ËËA B
dst_gradientScale
ËËC T
)
ËËT U
;
ËËU V
destination
ÈÈ 
.
ÈÈ 
SetFloat
ÈÈ  
(
ÈÈ  !
ShaderUtilities
ÈÈ! 0
.
ÈÈ0 1
ID_TextureWidth
ÈÈ1 @
,
ÈÈ@ A
dst_texWidth
ÈÈB N
)
ÈÈN O
;
ÈÈO P
destination
ÍÍ 
.
ÍÍ 
SetFloat
ÍÍ  
(
ÍÍ  !
ShaderUtilities
ÍÍ! 0
.
ÍÍ0 1
ID_TextureHeight
ÍÍ1 A
,
ÍÍA B
dst_texHeight
ÍÍC P
)
ÍÍP Q
;
ÍÍQ R
destination
ÎÎ 
.
ÎÎ 
SetFloat
ÎÎ  
(
ÎÎ  !
ShaderUtilities
ÎÎ! 0
.
ÎÎ0 1
ID_WeightNormal
ÎÎ1 @
,
ÎÎ@ A
dst_weightNormal
ÎÎB R
)
ÎÎR S
;
ÎÎS T
destination
ÏÏ 
.
ÏÏ 
SetFloat
ÏÏ  
(
ÏÏ  !
ShaderUtilities
ÏÏ! 0
.
ÏÏ0 1
ID_WeightBold
ÏÏ1 >
,
ÏÏ> ?
dst_weightBold
ÏÏ@ N
)
ÏÏN O
;
ÏÏO P
}
ÌÌ 	
}
ßß 
}©© ê9
^C:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_Style.cs
	namespace 	
TMPro
 
{ 
[ 
System 
. 
Serializable 
] 
public		 

class		 
	TMP_Style		 
{

 
public 
static 
	TMP_Style 
NormalStyle  +
{ 	
get 
{ 
if 
( 
k_NormalStyle !
==" $
null% )
)) *
k_NormalStyle !
=" #
new$ '
	TMP_Style( 1
(1 2
$str2 :
,: ;
string< B
.B C
EmptyC H
,H I
stringJ P
.P Q
EmptyQ V
)V W
;W X
return 
k_NormalStyle $
;$ %
} 
} 	
internal 
static 
	TMP_Style !
k_NormalStyle" /
;/ 0
public 
string 
name 
{ 	
get
 
{ 
return 
m_Name 
; 
}  
set! $
{% &
if' )
(* +
value+ 0
!=1 3
m_Name4 :
): ;
m_Name< B
=C D
valueE J
;J K
}L M
}N O
public"" 
int"" 
hashCode"" 
{## 	
get##
 
{## 
return## 

m_HashCode## !
;##! "
}### $
set##% (
{##) *
if##+ -
(##. /
value##/ 4
!=##5 7

m_HashCode##8 B
)##B C

m_HashCode##D N
=##O P
value##Q V
;##V W
}##X Y
}##Z [
public(( 
string(( "
styleOpeningDefinition(( ,
{)) 	
get))
 
{)) 
return)) 
m_OpeningDefinition)) *
;))* +
})), -
})). /
public.. 
string.. "
styleClosingDefinition.. ,
{// 	
get//
 
{// 
return// 
m_ClosingDefinition// *
;//* +
}//, -
}//. /
public22 
int22 
[22 
]22  
styleOpeningTagArray22 )
{33 	
get33
 
{33 
return33 
m_OpeningTagArray33 (
;33( )
}33* +
}33, -
public66 
int66 
[66 
]66  
styleClosingTagArray66 )
{77 	
get77
 
{77 
return77 
m_ClosingTagArray77 (
;77( )
}77* +
}77, -
[;; 	
SerializeField;;	 
];; 
private<< 
string<< 
m_Name<< 
;<< 
[>> 	
SerializeField>>	 
]>> 
private?? 
int?? 

m_HashCode?? 
;?? 
[AA 	
SerializeFieldAA	 
]AA 
privateBB 
stringBB 
m_OpeningDefinitionBB *
;BB* +
[DD 	
SerializeFieldDD	 
]DD 
privateEE 
stringEE 
m_ClosingDefinitionEE *
;EE* +
[GG 	
SerializeFieldGG	 
]GG 
privateHH 
intHH 
[HH 
]HH 
m_OpeningTagArrayHH '
;HH' (
[JJ 	
SerializeFieldJJ	 
]JJ 
privateKK 
intKK 
[KK 
]KK 
m_ClosingTagArrayKK '
;KK' (
[MM 	
SerializeFieldMM	 
]MM 
internalNN 
uintNN 
[NN 
]NN $
m_OpeningTagUnicodeArrayNN 0
;NN0 1
[PP 	
SerializeFieldPP	 
]PP 
internalQQ 
uintQQ 
[QQ 
]QQ $
m_ClosingTagUnicodeArrayQQ 0
;QQ0 1
internalYY 
	TMP_StyleYY 
(YY 
stringYY !
	styleNameYY" +
,YY+ ,
stringYY- 3"
styleOpeningDefinitionYY4 J
,YYJ K
stringYYL R"
styleClosingDefinitionYYS i
)YYi j
{ZZ 	
m_Name[[ 
=[[ 
	styleName[[ 
;[[ 

m_HashCode\\ 
=\\ $
TMP_TextParsingUtilities\\ 1
.\\1 2
GetHashCode\\2 =
(\\= >
	styleName\\> G
)\\G H
;\\H I
m_OpeningDefinition]] 
=]]  !"
styleOpeningDefinition]]" 8
;]]8 9
m_ClosingDefinition^^ 
=^^  !"
styleClosingDefinition^^" 8
;^^8 9
RefreshStyle`` 
(`` 
)`` 
;`` 
}aa 	
publicgg 
voidgg 
RefreshStylegg  
(gg  !
)gg! "
{hh 	

m_HashCodeii 
=ii $
TMP_TextParsingUtilitiesii 1
.ii1 2
GetHashCodeii2 =
(ii= >
m_Nameii> D
)iiD E
;iiE F
intkk 
s1kk 
=kk 
m_OpeningDefinitionkk (
.kk( )
Lengthkk) /
;kk/ 0
m_OpeningTagArrayll 
=ll 
newll  #
intll$ '
[ll' (
s1ll( *
]ll* +
;ll+ ,$
m_OpeningTagUnicodeArraymm $
=mm% &
newmm' *
uintmm+ /
[mm/ 0
s1mm0 2
]mm2 3
;mm3 4
foroo 
(oo 
intoo 
ioo 
=oo 
$numoo 
;oo 
ioo 
<oo 
s1oo  "
;oo" #
ioo$ %
++oo% '
)oo' (
{pp 
m_OpeningTagArrayqq !
[qq! "
iqq" #
]qq# $
=qq% &
m_OpeningDefinitionqq' :
[qq: ;
iqq; <
]qq< =
;qq= >$
m_OpeningTagUnicodeArrayrr (
[rr( )
irr) *
]rr* +
=rr, -
m_OpeningDefinitionrr. A
[rrA B
irrB C
]rrC D
;rrD E
}ss 
intuu 
s2uu 
=uu 
m_ClosingDefinitionuu (
.uu( )
Lengthuu) /
;uu/ 0
m_ClosingTagArrayvv 
=vv 
newvv  #
intvv$ '
[vv' (
s2vv( *
]vv* +
;vv+ ,$
m_ClosingTagUnicodeArrayww $
=ww% &
newww' *
uintww+ /
[ww/ 0
s2ww0 2
]ww2 3
;ww3 4
foryy 
(yy 
intyy 
iyy 
=yy 
$numyy 
;yy 
iyy 
<yy 
s2yy  "
;yy" #
iyy$ %
++yy% '
)yy' (
{zz 
m_ClosingTagArray{{ !
[{{! "
i{{" #
]{{# $
={{% &
m_ClosingDefinition{{' :
[{{: ;
i{{; <
]{{< =
;{{= >$
m_ClosingTagUnicodeArray|| (
[||( )
i||) *
]||* +
=||, -
m_ClosingDefinition||. A
[||A B
i||B C
]||C D
;||D E
}}} 
}~~ 	
}
ÄÄ 
}ÅÅ †ô
dC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TextMeshProUGUI.cs
	namespace

 	
TMPro


 
{ 
[ %
DisallowMultipleComponent 
] 
[ 
RequireComponent 
( 
typeof 
( 
RectTransform *
)* +
)+ ,
], -
[ 
RequireComponent 
( 
typeof 
( 
CanvasRenderer +
)+ ,
), -
]- .
[ 
AddComponentMenu 
( 
$str 2
,2 3
$num4 6
)6 7
]7 8
[ 
ExecuteAlways 
] 
[ 
HelpURL 
( 
$str J
)J K
]K L
public 

partial 
class 
TextMeshProUGUI (
:) *
TMP_Text+ 3
,3 4
ILayoutElement5 C
{ 
public 
override 
Material   
materialForRendering! 5
{ 	
get 
{ 
return 
TMP_MaterialManager ,
., -#
GetMaterialForRendering- D
(D E
thisE I
,I J
m_sharedMaterialK [
)[ \
;\ ]
}^ _
} 	
public   
override   
bool   !
autoSizeTextContainer   2
{!! 	
get"" 
{"" 
return"" #
m_autoSizeTextContainer"" 0
;""0 1
}""2 3
set$$ 
{$$ 
if$$ 
($$ #
m_autoSizeTextContainer$$ -
==$$. 0
value$$1 6
)$$6 7
return$$8 >
;$$> ?#
m_autoSizeTextContainer$$@ W
=$$X Y
value$$Z _
;$$_ `
if$$a c
($$d e#
m_autoSizeTextContainer$$e |
)$$| }
{$$~ "
CanvasUpdateRegistry
$$Ä î
.
$$î ï3
%RegisterCanvasElementForLayoutRebuild
$$ï ∫
(
$$∫ ª
this
$$ª ø
)
$$ø ¿
;
$$¿ ¡
SetLayoutDirty
$$¬ –
(
$$– —
)
$$— “
;
$$“ ”
}
$$‘ ’
}
$$÷ ◊
}%% 	
public++ 
override++ 
Mesh++ 
mesh++ !
{,, 	
get-- 
{-- 
return-- 
m_mesh-- 
;--  
}--! "
}.. 	
public44 
new44 
CanvasRenderer44 !
canvasRenderer44" 0
{55 	
get66 
{77 
if88 
(88 
m_canvasRenderer88 $
==88% '
null88( ,
)88, -
m_canvasRenderer88. >
=88? @
GetComponent88A M
<88M N
CanvasRenderer88N \
>88\ ]
(88] ^
)88^ _
;88_ `
return:: 
m_canvasRenderer:: '
;::' (
};; 
}<< 	
privateMM 
boolMM  
m_isRebuildingLayoutMM )
=MM* +
falseMM, 1
;MM1 2
privateNN 
	CoroutineNN #
m_DelayedGraphicRebuildNN 1
;NN1 2
privateOO 
	CoroutineOO $
m_DelayedMaterialRebuildOO 2
;OO2 3
publicTT 
voidTT *
CalculateLayoutInputHorizontalTT 2
(TT2 3
)TT3 4
{UU 	
}WW 	
public]] 
void]] (
CalculateLayoutInputVertical]] 0
(]]0 1
)]]1 2
{^^ 	
}`` 	
publiccc 
overridecc 
voidcc 
SetVerticesDirtycc -
(cc- .
)cc. /
{dd 	
ifee 
(ee 
thisee 
==ee 
nullee 
||ee 
!ee  !
thisee! %
.ee% &
IsActiveee& .
(ee. /
)ee/ 0
)ee0 1
returnff 
;ff 
ifhh 
(hh  
CanvasUpdateRegistryhh $
.hh$ % 
IsRebuildingGraphicshh% 9
(hh9 :
)hh: ;
)hh; <
returnii 
;ii  
CanvasUpdateRegistrykk  
.kk  !2
&RegisterCanvasElementForGraphicRebuildkk! G
(kkG H
thiskkH L
)kkL M
;kkM N
ifmm 
(mm "
m_OnDirtyVertsCallbackmm &
!=mm' )
nullmm* .
)mm. /"
m_OnDirtyVertsCallbacknn &
(nn& '
)nn' (
;nn( )
}oo 	
publicuu 
overrideuu 
voiduu 
SetLayoutDirtyuu +
(uu+ ,
)uu, -
{vv 	#
m_isPreferredWidthDirtyww #
=ww$ %
trueww& *
;ww* +$
m_isPreferredHeightDirtyxx $
=xx% &
truexx' +
;xx+ ,
ifzz 
(zz 
thiszz 
==zz 
nullzz 
||zz 
!zz  !
thiszz! %
.zz% &
IsActivezz& .
(zz. /
)zz/ 0
)zz0 1
return{{ 
;{{ 
LayoutRebuilder}} 
.}}  
MarkLayoutForRebuild}} 0
(}}0 1
this}}1 5
.}}5 6
rectTransform}}6 C
)}}C D
;}}D E
m_isLayoutDirty 
= 
true "
;" #
if
ÅÅ 
(
ÅÅ %
m_OnDirtyLayoutCallback
ÅÅ '
!=
ÅÅ( *
null
ÅÅ+ /
)
ÅÅ/ 0%
m_OnDirtyLayoutCallback
ÇÇ '
(
ÇÇ' (
)
ÇÇ( )
;
ÇÇ) *
}
ÉÉ 	
public
ââ 
override
ââ 
void
ââ 
SetMaterialDirty
ââ -
(
ââ- .
)
ââ. /
{
ää 	
if
ãã 
(
ãã 
this
ãã 
==
ãã 
null
ãã 
||
ãã 
!
ãã  !
this
ãã! %
.
ãã% &
IsActive
ãã& .
(
ãã. /
)
ãã/ 0
)
ãã0 1
return
åå 
;
åå 
if
éé 
(
éé "
CanvasUpdateRegistry
éé $
.
éé$ %"
IsRebuildingGraphics
éé% 9
(
éé9 :
)
éé: ;
)
éé; <
return
èè 
;
èè 
m_isMaterialDirty
ëë 
=
ëë 
true
ëë  $
;
ëë$ %"
CanvasUpdateRegistry
íí  
.
íí  !4
&RegisterCanvasElementForGraphicRebuild
íí! G
(
ííG H
this
ííH L
)
ííL M
;
ííM N
if
îî 
(
îî '
m_OnDirtyMaterialCallback
îî )
!=
îî* ,
null
îî- 1
)
îî1 2'
m_OnDirtyMaterialCallback
ïï )
(
ïï) *
)
ïï* +
;
ïï+ ,
}
ññ 	
public
úú 
override
úú 
void
úú 
SetAllDirty
úú (
(
úú( )
)
úú) *
{
ùù 	
SetLayoutDirty
ûû 
(
ûû 
)
ûû 
;
ûû 
SetVerticesDirty
üü 
(
üü 
)
üü 
;
üü 
SetMaterialDirty
†† 
(
†† 
)
†† 
;
†† 
}
°° 	
IEnumerator
®® #
DelayedGraphicRebuild
®® )
(
®®) *
)
®®* +
{
©© 	
yield
™™ 
return
™™ 
null
™™ 
;
™™ "
CanvasUpdateRegistry
¨¨  
.
¨¨  !4
&RegisterCanvasElementForGraphicRebuild
¨¨! G
(
¨¨G H
this
¨¨H L
)
¨¨L M
;
¨¨M N
if
ÆÆ 
(
ÆÆ $
m_OnDirtyVertsCallback
ÆÆ &
!=
ÆÆ' )
null
ÆÆ* .
)
ÆÆ. /$
m_OnDirtyVertsCallback
ØØ &
(
ØØ& '
)
ØØ' (
;
ØØ( )%
m_DelayedGraphicRebuild
±± #
=
±±$ %
null
±±& *
;
±±* +
}
≤≤ 	
IEnumerator
ππ $
DelayedMaterialRebuild
ππ *
(
ππ* +
)
ππ+ ,
{
∫∫ 	
yield
ªª 
return
ªª 
null
ªª 
;
ªª 
m_isMaterialDirty
ΩΩ 
=
ΩΩ 
true
ΩΩ  $
;
ΩΩ$ %"
CanvasUpdateRegistry
ææ  
.
ææ  !4
&RegisterCanvasElementForGraphicRebuild
ææ! G
(
ææG H
this
ææH L
)
ææL M
;
ææM N
if
¿¿ 
(
¿¿ '
m_OnDirtyMaterialCallback
¿¿ )
!=
¿¿* ,
null
¿¿- 1
)
¿¿1 2'
m_OnDirtyMaterialCallback
¡¡ )
(
¡¡) *
)
¡¡* +
;
¡¡+ ,&
m_DelayedMaterialRebuild
√√ $
=
√√% &
null
√√' +
;
√√+ ,
}
ƒƒ 	
public
ÀÀ 
override
ÀÀ 
void
ÀÀ 
Rebuild
ÀÀ $
(
ÀÀ$ %
CanvasUpdate
ÀÀ% 1
update
ÀÀ2 8
)
ÀÀ8 9
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
this
ÕÕ 
==
ÕÕ 
null
ÕÕ 
)
ÕÕ 
return
ÕÕ $
;
ÕÕ$ %
if
œœ 
(
œœ 
update
œœ 
==
œœ 
CanvasUpdate
œœ &
.
œœ& '
	Prelayout
œœ' 0
)
œœ0 1
{
–– 
if
—— 
(
—— %
m_autoSizeTextContainer
—— +
)
——+ ,
{
““ 
m_rectTransform
”” #
.
””# $
	sizeDelta
””$ -
=
””. / 
GetPreferredValues
””0 B
(
””B C
Mathf
””C H
.
””H I
Infinity
””I Q
,
””Q R
Mathf
””S X
.
””X Y
Infinity
””Y a
)
””a b
;
””b c
}
‘‘ 
}
’’ 
else
÷÷ 
if
÷÷ 
(
÷÷ 
update
÷÷ 
==
÷÷ 
CanvasUpdate
÷÷ +
.
÷÷+ ,
	PreRender
÷÷, 5
)
÷÷5 6
{
◊◊ 
OnPreRenderCanvas
ÿÿ !
(
ÿÿ! "
)
ÿÿ" #
;
ÿÿ# $
if
⁄⁄ 
(
⁄⁄ 
!
⁄⁄ 
m_isMaterialDirty
⁄⁄ &
)
⁄⁄& '
return
⁄⁄( .
;
⁄⁄. /
UpdateMaterial
‹‹ 
(
‹‹ 
)
‹‹  
;
‹‹  !
m_isMaterialDirty
›› !
=
››" #
false
››$ )
;
››) *
}
ﬁﬁ 
}
ﬂﬂ 	
private
ÂÂ 
void
ÂÂ "
UpdateSubObjectPivot
ÂÂ )
(
ÂÂ) *
)
ÂÂ* +
{
ÊÊ 	
if
ÁÁ 
(
ÁÁ 

m_textInfo
ÁÁ 
==
ÁÁ 
null
ÁÁ "
)
ÁÁ" #
return
ÁÁ$ *
;
ÁÁ* +
for
ÈÈ 
(
ÈÈ 
int
ÈÈ 
i
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
i
ÈÈ 
<
ÈÈ 
m_subTextObjects
ÈÈ  0
.
ÈÈ0 1
Length
ÈÈ1 7
&&
ÈÈ8 :
m_subTextObjects
ÈÈ; K
[
ÈÈK L
i
ÈÈL M
]
ÈÈM N
!=
ÈÈO Q
null
ÈÈR V
;
ÈÈV W
i
ÈÈX Y
++
ÈÈY [
)
ÈÈ[ \
{
ÍÍ 
m_subTextObjects
ÎÎ  
[
ÎÎ  !
i
ÎÎ! "
]
ÎÎ" #
.
ÎÎ# $
SetPivotDirty
ÎÎ$ 1
(
ÎÎ1 2
)
ÎÎ2 3
;
ÎÎ3 4
}
ÏÏ 
}
ÓÓ 	
public
ˆˆ 
override
ˆˆ 
Material
ˆˆ  !
GetModifiedMaterial
ˆˆ! 4
(
ˆˆ4 5
Material
ˆˆ5 =
baseMaterial
ˆˆ> J
)
ˆˆJ K
{
˜˜ 	
Material
¯¯ 
mat
¯¯ 
=
¯¯ 
baseMaterial
¯¯ '
;
¯¯' (
if
˙˙ 
(
˙˙ (
m_ShouldRecalculateStencil
˙˙ *
)
˙˙* +
{
˚˚ 
var
¸¸ 

rootCanvas
¸¸ 
=
¸¸  
MaskUtilities
¸¸! .
.
¸¸. /(
FindRootSortOverrideCanvas
¸¸/ I
(
¸¸I J
	transform
¸¸J S
)
¸¸S T
;
¸¸T U
m_StencilValue
˝˝ 
=
˝˝  
maskable
˝˝! )
?
˝˝* +
MaskUtilities
˝˝, 9
.
˝˝9 :
GetStencilDepth
˝˝: I
(
˝˝I J
	transform
˝˝J S
,
˝˝S T

rootCanvas
˝˝U _
)
˝˝_ `
:
˝˝a b
$num
˝˝c d
;
˝˝d e(
m_ShouldRecalculateStencil
˛˛ *
=
˛˛+ ,
false
˛˛- 2
;
˛˛2 3
}
ˇˇ 
if
ÅÅ 
(
ÅÅ 
m_StencilValue
ÅÅ 
>
ÅÅ  
$num
ÅÅ! "
)
ÅÅ" #
{
ÇÇ 
var
ÉÉ 
maskMat
ÉÉ 
=
ÉÉ 
StencilMaterial
ÉÉ -
.
ÉÉ- .
Add
ÉÉ. 1
(
ÉÉ1 2
mat
ÉÉ2 5
,
ÉÉ5 6
(
ÉÉ7 8
$num
ÉÉ8 9
<<
ÉÉ: <
m_StencilValue
ÉÉ= K
)
ÉÉK L
-
ÉÉM N
$num
ÉÉO P
,
ÉÉP Q
	StencilOp
ÉÉR [
.
ÉÉ[ \
Keep
ÉÉ\ `
,
ÉÉ` a
CompareFunction
ÉÉb q
.
ÉÉq r
Equal
ÉÉr w
,
ÉÉw x
ColorWriteMaskÉÉy á
.ÉÉá à
AllÉÉà ã
,ÉÉã å
(ÉÉç é
$numÉÉé è
<<ÉÉê í
m_StencilValueÉÉì °
)ÉÉ° ¢
-ÉÉ£ §
$numÉÉ• ¶
,ÉÉ¶ ß
$numÉÉ® ©
)ÉÉ© ™
;ÉÉ™ ´
StencilMaterial
ÑÑ 
.
ÑÑ  
Remove
ÑÑ  &
(
ÑÑ& '
m_MaskMaterial
ÑÑ' 5
)
ÑÑ5 6
;
ÑÑ6 7
m_MaskMaterial
ÖÖ 
=
ÖÖ  
maskMat
ÖÖ! (
;
ÖÖ( )
mat
ÜÜ 
=
ÜÜ 
m_MaskMaterial
ÜÜ $
;
ÜÜ$ %
}
áá 
return
ââ 
mat
ââ 
;
ââ 
}
ää 	
	protected
êê 
override
êê 
void
êê 
UpdateMaterial
êê  .
(
êê. /
)
êê/ 0
{
ëë 	
if
óó 
(
óó 
m_sharedMaterial
óó  
==
óó! #
null
óó$ (
||
óó) +
canvasRenderer
óó, :
==
óó; =
null
óó> B
)
óóB C
return
óóD J
;
óóJ K
m_canvasRenderer
ôô 
.
ôô 
materialCount
ôô *
=
ôô+ ,
$num
ôô- .
;
ôô. /
m_canvasRenderer
öö 
.
öö 
SetMaterial
öö (
(
öö( )"
materialForRendering
öö) =
,
öö= >
$num
öö? @
)
öö@ A
;
ööA B
}
úú 	
public
≥≥ 
Vector4
≥≥ 

maskOffset
≥≥ !
{
¥¥ 	
get
µµ 
{
µµ 
return
µµ 
m_maskOffset
µµ %
;
µµ% &
}
µµ' (
set
∂∂ 
{
∂∂ 
m_maskOffset
∂∂ 
=
∂∂  
value
∂∂! &
;
∂∂& '

UpdateMask
∂∂( 2
(
∂∂2 3
)
∂∂3 4
;
∂∂4 5%
m_havePropertiesChanged
∂∂6 M
=
∂∂N O
true
∂∂P T
;
∂∂T U
}
∂∂V W
}
∑∑ 	
public
ÀÀ 
override
ÀÀ 
void
ÀÀ !
RecalculateClipping
ÀÀ 0
(
ÀÀ0 1
)
ÀÀ1 2
{
ÃÃ 	
base
œœ 
.
œœ !
RecalculateClipping
œœ $
(
œœ$ %
)
œœ% &
;
œœ& '
}
–– 	
public
ÌÌ 
override
ÌÌ 
void
ÌÌ 
Cull
ÌÌ !
(
ÌÌ! "
Rect
ÌÌ" &
clipRect
ÌÌ' /
,
ÌÌ/ 0
bool
ÌÌ1 5
	validRect
ÌÌ6 ?
)
ÌÌ? @
{
ÓÓ 	
if
 
(
 
m_isLayoutDirty
 
)
  
{
ÒÒ 
TMP_UpdateManager
ÚÚ !
.
ÚÚ! "1
#RegisterTextElementForCullingUpdate
ÚÚ" E
(
ÚÚE F
this
ÚÚF J
)
ÚÚJ K
;
ÚÚK L

m_ClipRect
ÛÛ 
=
ÛÛ 
clipRect
ÛÛ %
;
ÛÛ% &
m_ValidRect
ÙÙ 
=
ÙÙ 
	validRect
ÙÙ '
;
ÙÙ' (
return
ıı 
;
ıı 
}
ˆˆ 
Rect
˘˘ 
rect
˘˘ 
=
˘˘ (
GetCanvasSpaceClippingRect
˘˘ 2
(
˘˘2 3
)
˘˘3 4
;
˘˘4 5
if
¸¸ 
(
¸¸ 
rect
¸¸ 
.
¸¸ 
width
¸¸ 
==
¸¸ 
$num
¸¸ 
||
¸¸  "
rect
¸¸# '
.
¸¸' (
height
¸¸( .
==
¸¸/ 1
$num
¸¸2 3
)
¸¸3 4
return
˝˝ 
;
˝˝ 
var
ˇˇ 
cull
ˇˇ 
=
ˇˇ 
!
ˇˇ 
	validRect
ˇˇ !
||
ˇˇ" $
!
ˇˇ% &
clipRect
ˇˇ& .
.
ˇˇ. /
Overlaps
ˇˇ/ 7
(
ˇˇ7 8
rect
ˇˇ8 <
,
ˇˇ< =
true
ˇˇ> B
)
ˇˇB C
;
ˇˇC D
if
ÄÄ 
(
ÄÄ 
m_canvasRenderer
ÄÄ  
.
ÄÄ  !
cull
ÄÄ! %
!=
ÄÄ& (
cull
ÄÄ) -
)
ÄÄ- .
{
ÅÅ 
m_canvasRenderer
ÇÇ  
.
ÇÇ  !
cull
ÇÇ! %
=
ÇÇ& '
cull
ÇÇ( ,
;
ÇÇ, - 
onCullStateChanged
ÉÉ "
.
ÉÉ" #
Invoke
ÉÉ# )
(
ÉÉ) *
cull
ÉÉ* .
)
ÉÉ. /
;
ÉÉ/ 0
OnCullingChanged
ÑÑ  
(
ÑÑ  !
)
ÑÑ! "
;
ÑÑ" #
for
áá 
(
áá 
int
áá 
i
áá 
=
áá 
$num
áá 
;
áá 
i
áá  !
<
áá" #
m_subTextObjects
áá$ 4
.
áá4 5
Length
áá5 ;
&&
áá< >
m_subTextObjects
áá? O
[
ááO P
i
ááP Q
]
ááQ R
!=
ááS U
null
ááV Z
;
ááZ [
i
áá\ ]
++
áá] _
)
áá_ `
{
àà 
m_subTextObjects
ââ $
[
ââ$ %
i
ââ% &
]
ââ& '
.
ââ' (
canvasRenderer
ââ( 6
.
ââ6 7
cull
ââ7 ;
=
ââ< =
cull
ââ> B
;
ââB C
}
ää 
}
ãã 
}
åå 	
private
éé 
Rect
éé 

m_ClipRect
éé 
;
éé  
private
èè 
bool
èè 
m_ValidRect
èè  
;
èè  !
internal
îî 
override
îî 
void
îî 
UpdateCulling
îî ,
(
îî, -
)
îî- .
{
ïï 	
Rect
óó 
rect
óó 
=
óó (
GetCanvasSpaceClippingRect
óó 2
(
óó2 3
)
óó3 4
;
óó4 5
if
öö 
(
öö 
rect
öö 
.
öö 
width
öö 
==
öö 
$num
öö 
||
öö  "
rect
öö# '
.
öö' (
height
öö( .
==
öö/ 1
$num
öö2 3
)
öö3 4
return
õõ 
;
õõ 
var
ùù 
cull
ùù 
=
ùù 
!
ùù 
m_ValidRect
ùù #
||
ùù$ &
!
ùù' (

m_ClipRect
ùù( 2
.
ùù2 3
Overlaps
ùù3 ;
(
ùù; <
rect
ùù< @
,
ùù@ A
true
ùùB F
)
ùùF G
;
ùùG H
if
ûû 
(
ûû 
m_canvasRenderer
ûû  
.
ûû  !
cull
ûû! %
!=
ûû& (
cull
ûû) -
)
ûû- .
{
üü 
m_canvasRenderer
††  
.
††  !
cull
††! %
=
††& '
cull
††( ,
;
††, - 
onCullStateChanged
°° "
.
°°" #
Invoke
°°# )
(
°°) *
cull
°°* .
)
°°. /
;
°°/ 0
OnCullingChanged
¢¢  
(
¢¢  !
)
¢¢! "
;
¢¢" #
for
•• 
(
•• 
int
•• 
i
•• 
=
•• 
$num
•• 
;
•• 
i
••  !
<
••" #
m_subTextObjects
••$ 4
.
••4 5
Length
••5 ;
&&
••< >
m_subTextObjects
••? O
[
••O P
i
••P Q
]
••Q R
!=
••S U
null
••V Z
;
••Z [
i
••\ ]
++
••] _
)
••_ `
{
¶¶ 
m_subTextObjects
ßß $
[
ßß$ %
i
ßß% &
]
ßß& '
.
ßß' (
canvasRenderer
ßß( 6
.
ßß6 7
cull
ßß7 ;
=
ßß< =
cull
ßß> B
;
ßßB C
}
®® 
}
©© 
}
™™ 	
public
‹‹ 
override
‹‹ 
void
‹‹ 
UpdateMeshPadding
‹‹ .
(
‹‹. /
)
‹‹/ 0
{
›› 	
	m_padding
ﬁﬁ 
=
ﬁﬁ 
ShaderUtilities
ﬁﬁ '
.
ﬁﬁ' (

GetPadding
ﬁﬁ( 2
(
ﬁﬁ2 3
m_sharedMaterial
ﬁﬁ3 C
,
ﬁﬁC D"
m_enableExtraPadding
ﬁﬁE Y
,
ﬁﬁY Z
m_isUsingBold
ﬁﬁ[ h
)
ﬁﬁh i
;
ﬁﬁi j 
m_isMaskingEnabled
ﬂﬂ 
=
ﬂﬂ  
ShaderUtilities
ﬂﬂ! 0
.
ﬂﬂ0 1
IsMaskingEnabled
ﬂﬂ1 A
(
ﬂﬂA B
m_sharedMaterial
ﬂﬂB R
)
ﬂﬂR S
;
ﬂﬂS T%
m_havePropertiesChanged
‡‡ #
=
‡‡$ %
true
‡‡& *
;
‡‡* +"
checkPaddingRequired
··  
=
··! "
false
··# (
;
··( )
if
‰‰ 
(
‰‰ 

m_textInfo
‰‰ 
==
‰‰ 
null
‰‰ "
)
‰‰" #
return
‰‰$ *
;
‰‰* +
for
ÁÁ 
(
ÁÁ 
int
ÁÁ 
i
ÁÁ 
=
ÁÁ 
$num
ÁÁ 
;
ÁÁ 
i
ÁÁ 
<
ÁÁ 

m_textInfo
ÁÁ  *
.
ÁÁ* +
materialCount
ÁÁ+ 8
;
ÁÁ8 9
i
ÁÁ: ;
++
ÁÁ; =
)
ÁÁ= >
m_subTextObjects
ËË  
[
ËË  !
i
ËË! "
]
ËË" #
.
ËË# $
UpdateMeshPadding
ËË$ 5
(
ËË5 6"
m_enableExtraPadding
ËË6 J
,
ËËJ K
m_isUsingBold
ËËL Y
)
ËËY Z
;
ËËZ [
}
ÈÈ 	
	protected
ÛÛ 
override
ÛÛ 
void
ÛÛ $
InternalCrossFadeColor
ÛÛ  6
(
ÛÛ6 7
Color
ÛÛ7 <
targetColor
ÛÛ= H
,
ÛÛH I
float
ÛÛJ O
duration
ÛÛP X
,
ÛÛX Y
bool
ÛÛZ ^
ignoreTimeScale
ÛÛ_ n
,
ÛÛn o
bool
ÛÛp t
useAlpha
ÛÛu }
)
ÛÛ} ~
{
ÙÙ 	
if
ıı 
(
ıı 

m_textInfo
ıı 
==
ıı 
null
ıı "
)
ıı" #
return
ˆˆ 
;
ˆˆ 
int
¯¯ 
materialCount
¯¯ 
=
¯¯ 

m_textInfo
¯¯  *
.
¯¯* +
materialCount
¯¯+ 8
;
¯¯8 9
for
˙˙ 
(
˙˙ 
int
˙˙ 
i
˙˙ 
=
˙˙ 
$num
˙˙ 
;
˙˙ 
i
˙˙ 
<
˙˙ 
materialCount
˙˙  -
;
˙˙- .
i
˙˙/ 0
++
˙˙0 2
)
˙˙2 3
{
˚˚ 
m_subTextObjects
¸¸  
[
¸¸  !
i
¸¸! "
]
¸¸" #
.
¸¸# $
CrossFadeColor
¸¸$ 2
(
¸¸2 3
targetColor
¸¸3 >
,
¸¸> ?
duration
¸¸@ H
,
¸¸H I
ignoreTimeScale
¸¸J Y
,
¸¸Y Z
useAlpha
¸¸[ c
)
¸¸c d
;
¸¸d e
}
˝˝ 
}
˛˛ 	
	protected
áá 
override
áá 
void
áá $
InternalCrossFadeAlpha
áá  6
(
áá6 7
float
áá7 <
alpha
áá= B
,
ááB C
float
ááD I
duration
ááJ R
,
ááR S
bool
ááT X
ignoreTimeScale
ááY h
)
ááh i
{
àà 	
if
ââ 
(
ââ 

m_textInfo
ââ 
==
ââ 
null
ââ "
)
ââ" #
return
ää 
;
ää 
int
åå 
materialCount
åå 
=
åå 

m_textInfo
åå  *
.
åå* +
materialCount
åå+ 8
;
åå8 9
for
éé 
(
éé 
int
éé 
i
éé 
=
éé 
$num
éé 
;
éé 
i
éé 
<
éé 
materialCount
éé  -
;
éé- .
i
éé/ 0
++
éé0 2
)
éé2 3
{
èè 
m_subTextObjects
êê  
[
êê  !
i
êê! "
]
êê" #
.
êê# $
CrossFadeAlpha
êê$ 2
(
êê2 3
alpha
êê3 8
,
êê8 9
duration
êê: B
,
êêB C
ignoreTimeScale
êêD S
)
êêS T
;
êêT U
}
ëë 
}
íí 	
public
öö 
override
öö 
void
öö 
ForceMeshUpdate
öö ,
(
öö, -
bool
öö- 1
ignoreActiveState
öö2 C
=
ööD E
false
ööF K
,
ööK L
bool
ööM Q 
forceTextReparsing
ööR d
=
ööe f
false
öög l
)
ööl m
{
õõ 	%
m_havePropertiesChanged
úú #
=
úú$ %
true
úú& *
;
úú* +!
m_ignoreActiveState
ùù 
=
ùù  !
ignoreActiveState
ùù" 3
;
ùù3 4
if
†† 
(
†† 
m_canvas
†† 
==
†† 
null
††  
)
††  !
m_canvas
°° 
=
°° "
GetComponentInParent
°° /
<
°°/ 0
Canvas
°°0 6
>
°°6 7
(
°°7 8
)
°°8 9
;
°°9 :
OnPreRenderCanvas
££ 
(
££ 
)
££ 
;
££  
}
§§ 	
public
¨¨ 
override
¨¨ 
TMP_TextInfo
¨¨ $
GetTextInfo
¨¨% 0
(
¨¨0 1
string
¨¨1 7
text
¨¨8 <
)
¨¨< =
{
≠≠ 	
SetText
ÆÆ 
(
ÆÆ 
text
ÆÆ 
)
ÆÆ 
;
ÆÆ 
SetArraySizes
ØØ 
(
ØØ #
m_TextProcessingArray
ØØ /
)
ØØ/ 0
;
ØØ0 1
m_renderMode
±± 
=
±± 
TextRenderFlags
±± *
.
±±* +

DontRender
±±+ 5
;
±±5 6
ComputeMarginSize
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥  
if
∂∂ 
(
∂∂ 
m_canvas
∂∂ 
==
∂∂ 
null
∂∂  
)
∂∂  !
m_canvas
∂∂" *
=
∂∂+ ,
this
∂∂- 1
.
∂∂1 2
canvas
∂∂2 8
;
∂∂8 9
GenerateTextMesh
∏∏ 
(
∏∏ 
)
∏∏ 
;
∏∏ 
m_renderMode
∫∫ 
=
∫∫ 
TextRenderFlags
∫∫ *
.
∫∫* +
Render
∫∫+ 1
;
∫∫1 2
return
ºº 
this
ºº 
.
ºº 
textInfo
ºº  
;
ºº  !
}
ΩΩ 	
public
√√ 
override
√√ 
void
√√ 
	ClearMesh
√√ &
(
√√& '
)
√√' (
{
ƒƒ 	
m_canvasRenderer
≈≈ 
.
≈≈ 
SetMesh
≈≈ $
(
≈≈$ %
null
≈≈% )
)
≈≈) *
;
≈≈* +
for
«« 
(
«« 
int
«« 
i
«« 
=
«« 
$num
«« 
;
«« 
i
«« 
<
«« 
m_subTextObjects
««  0
.
««0 1
Length
««1 7
&&
««8 :
m_subTextObjects
««; K
[
««K L
i
««L M
]
««M N
!=
««O Q
null
««R V
;
««V W
i
««X Y
++
««Y [
)
««[ \
m_subTextObjects
»»  
[
»»  !
i
»»! "
]
»»" #
.
»»# $
canvasRenderer
»»$ 2
.
»»2 3
SetMesh
»»3 :
(
»»: ;
null
»»; ?
)
»»? @
;
»»@ A
}
…… 	
public
œœ 
override
œœ 
event
œœ 
Action
œœ $
<
œœ$ %
TMP_TextInfo
œœ% 1
>
œœ1 2
OnPreRenderText
œœ3 B
;
œœB C
public
◊◊ 
override
◊◊ 
void
◊◊ 
UpdateGeometry
◊◊ +
(
◊◊+ ,
Mesh
◊◊, 0
mesh
◊◊1 5
,
◊◊5 6
int
◊◊7 :
index
◊◊; @
)
◊◊@ A
{
ÿÿ 	
mesh
ŸŸ 
.
ŸŸ 
RecalculateBounds
ŸŸ "
(
ŸŸ" #
)
ŸŸ# $
;
ŸŸ$ %
if
€€ 
(
€€ 
index
€€ 
==
€€ 
$num
€€ 
)
€€ 
{
‹‹ 
m_canvasRenderer
››  
.
››  !
SetMesh
››! (
(
››( )
mesh
››) -
)
››- .
;
››. /
}
ﬁﬁ 
else
ﬂﬂ 
{
‡‡ 
m_subTextObjects
··  
[
··  !
index
··! &
]
··& '
.
··' (
canvasRenderer
··( 6
.
··6 7
SetMesh
··7 >
(
··> ?
mesh
··? C
)
··C D
;
··D E
}
‚‚ 
}
„„ 	
public
ÈÈ 
override
ÈÈ 
void
ÈÈ 
UpdateVertexData
ÈÈ -
(
ÈÈ- .'
TMP_VertexDataUpdateFlags
ÈÈ. G
flags
ÈÈH M
)
ÈÈM N
{
ÍÍ 	
int
ÎÎ 
materialCount
ÎÎ 
=
ÎÎ 

m_textInfo
ÎÎ  *
.
ÎÎ* +
materialCount
ÎÎ+ 8
;
ÎÎ8 9
for
ÌÌ 
(
ÌÌ 
int
ÌÌ 
i
ÌÌ 
=
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
i
ÌÌ 
<
ÌÌ 
materialCount
ÌÌ  -
;
ÌÌ- .
i
ÌÌ/ 0
++
ÌÌ0 2
)
ÌÌ2 3
{
ÓÓ 
Mesh
ÔÔ 
mesh
ÔÔ 
;
ÔÔ 
if
ÒÒ 
(
ÒÒ 
i
ÒÒ 
==
ÒÒ 
$num
ÒÒ 
)
ÒÒ 
mesh
ÚÚ 
=
ÚÚ 
m_mesh
ÚÚ !
;
ÚÚ! "
else
ÛÛ 
{
ÙÙ 
mesh
˘˘ 
=
˘˘ 
m_subTextObjects
˘˘ +
[
˘˘+ ,
i
˘˘, -
]
˘˘- .
.
˘˘. /
mesh
˘˘/ 3
;
˘˘3 4
}
˙˙ 
if
¸¸ 
(
¸¸ 
(
¸¸ 
flags
¸¸ 
&
¸¸ '
TMP_VertexDataUpdateFlags
¸¸ 6
.
¸¸6 7
Vertices
¸¸7 ?
)
¸¸? @
==
¸¸A C'
TMP_VertexDataUpdateFlags
¸¸D ]
.
¸¸] ^
Vertices
¸¸^ f
)
¸¸f g
mesh
˝˝ 
.
˝˝ 
vertices
˝˝ !
=
˝˝" #

m_textInfo
˝˝$ .
.
˝˝. /
meshInfo
˝˝/ 7
[
˝˝7 8
i
˝˝8 9
]
˝˝9 :
.
˝˝: ;
vertices
˝˝; C
;
˝˝C D
if
ˇˇ 
(
ˇˇ 
(
ˇˇ 
flags
ˇˇ 
&
ˇˇ '
TMP_VertexDataUpdateFlags
ˇˇ 6
.
ˇˇ6 7
Uv0
ˇˇ7 :
)
ˇˇ: ;
==
ˇˇ< >'
TMP_VertexDataUpdateFlags
ˇˇ? X
.
ˇˇX Y
Uv0
ˇˇY \
)
ˇˇ\ ]
mesh
ÄÄ 
.
ÄÄ 
uv
ÄÄ 
=
ÄÄ 

m_textInfo
ÄÄ (
.
ÄÄ( )
meshInfo
ÄÄ) 1
[
ÄÄ1 2
i
ÄÄ2 3
]
ÄÄ3 4
.
ÄÄ4 5
uvs0
ÄÄ5 9
;
ÄÄ9 :
if
ÇÇ 
(
ÇÇ 
(
ÇÇ 
flags
ÇÇ 
&
ÇÇ '
TMP_VertexDataUpdateFlags
ÇÇ 6
.
ÇÇ6 7
Uv2
ÇÇ7 :
)
ÇÇ: ;
==
ÇÇ< >'
TMP_VertexDataUpdateFlags
ÇÇ? X
.
ÇÇX Y
Uv2
ÇÇY \
)
ÇÇ\ ]
mesh
ÉÉ 
.
ÉÉ 
uv2
ÉÉ 
=
ÉÉ 

m_textInfo
ÉÉ )
.
ÉÉ) *
meshInfo
ÉÉ* 2
[
ÉÉ2 3
i
ÉÉ3 4
]
ÉÉ4 5
.
ÉÉ5 6
uvs2
ÉÉ6 :
;
ÉÉ: ;
if
àà 
(
àà 
(
àà 
flags
àà 
&
àà '
TMP_VertexDataUpdateFlags
àà 6
.
àà6 7
Colors32
àà7 ?
)
àà? @
==
ààA C'
TMP_VertexDataUpdateFlags
ààD ]
.
àà] ^
Colors32
àà^ f
)
ààf g
mesh
ââ 
.
ââ 
colors32
ââ !
=
ââ" #

m_textInfo
ââ$ .
.
ââ. /
meshInfo
ââ/ 7
[
ââ7 8
i
ââ8 9
]
ââ9 :
.
ââ: ;
colors32
ââ; C
;
ââC D
mesh
ãã 
.
ãã 
RecalculateBounds
ãã &
(
ãã& '
)
ãã' (
;
ãã( )
if
çç 
(
çç 
i
çç 
==
çç 
$num
çç 
)
çç 
m_canvasRenderer
éé $
.
éé$ %
SetMesh
éé% ,
(
éé, -
mesh
éé- 1
)
éé1 2
;
éé2 3
else
èè 
m_subTextObjects
êê $
[
êê$ %
i
êê% &
]
êê& '
.
êê' (
canvasRenderer
êê( 6
.
êê6 7
SetMesh
êê7 >
(
êê> ?
mesh
êê? C
)
êêC D
;
êêD E
}
ëë 
}
íí 	
public
òò 
override
òò 
void
òò 
UpdateVertexData
òò -
(
òò- .
)
òò. /
{
ôô 	
int
öö 
materialCount
öö 
=
öö 

m_textInfo
öö  *
.
öö* +
materialCount
öö+ 8
;
öö8 9
for
úú 
(
úú 
int
úú 
i
úú 
=
úú 
$num
úú 
;
úú 
i
úú 
<
úú 
materialCount
úú  -
;
úú- .
i
úú/ 0
++
úú0 2
)
úú2 3
{
ùù 
Mesh
ûû 
mesh
ûû 
;
ûû 
if
†† 
(
†† 
i
†† 
==
†† 
$num
†† 
)
†† 
mesh
°° 
=
°° 
m_mesh
°° !
;
°°! "
else
¢¢ 
{
££ 

m_textInfo
•• 
.
•• 
meshInfo
•• '
[
••' (
i
••( )
]
••) *
.
••* +!
ClearUnusedVertices
••+ >
(
••> ?
)
••? @
;
••@ A
mesh
ßß 
=
ßß 
m_subTextObjects
ßß +
[
ßß+ ,
i
ßß, -
]
ßß- .
.
ßß. /
mesh
ßß/ 3
;
ßß3 4
}
®® 
mesh
´´ 
.
´´ 
vertices
´´ 
=
´´ 

m_textInfo
´´  *
.
´´* +
meshInfo
´´+ 3
[
´´3 4
i
´´4 5
]
´´5 6
.
´´6 7
vertices
´´7 ?
;
´´? @
mesh
¨¨ 
.
¨¨ 
uv
¨¨ 
=
¨¨ 

m_textInfo
¨¨ $
.
¨¨$ %
meshInfo
¨¨% -
[
¨¨- .
i
¨¨. /
]
¨¨/ 0
.
¨¨0 1
uvs0
¨¨1 5
;
¨¨5 6
mesh
≠≠ 
.
≠≠ 
uv2
≠≠ 
=
≠≠ 

m_textInfo
≠≠ %
.
≠≠% &
meshInfo
≠≠& .
[
≠≠. /
i
≠≠/ 0
]
≠≠0 1
.
≠≠1 2
uvs2
≠≠2 6
;
≠≠6 7
mesh
ØØ 
.
ØØ 
colors32
ØØ 
=
ØØ 

m_textInfo
ØØ  *
.
ØØ* +
meshInfo
ØØ+ 3
[
ØØ3 4
i
ØØ4 5
]
ØØ5 6
.
ØØ6 7
colors32
ØØ7 ?
;
ØØ? @
mesh
±± 
.
±± 
RecalculateBounds
±± &
(
±±& '
)
±±' (
;
±±( )
if
≥≥ 
(
≥≥ 
i
≥≥ 
==
≥≥ 
$num
≥≥ 
)
≥≥ 
m_canvasRenderer
¥¥ $
.
¥¥$ %
SetMesh
¥¥% ,
(
¥¥, -
mesh
¥¥- 1
)
¥¥1 2
;
¥¥2 3
else
µµ 
m_subTextObjects
∂∂ $
[
∂∂$ %
i
∂∂% &
]
∂∂& '
.
∂∂' (
canvasRenderer
∂∂( 6
.
∂∂6 7
SetMesh
∂∂7 >
(
∂∂> ?
mesh
∂∂? C
)
∂∂C D
;
∂∂D E
}
∑∑ 
}
∏∏ 	
public
ªª 
void
ªª 
UpdateFontAsset
ªª #
(
ªª# $
)
ªª$ %
{
ºº 	
LoadFontAsset
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ 
}
ææ 	
}
¿¿ 
}¡¡ ˙
aC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_ListPool.cs
	namespace 	
TMPro
 
{ 
internal 
static 
class 
TMP_ListPool &
<& '
T' (
>( )
{ 
private		 
static		 
readonly		 
TMP_ObjectPool		  .
<		. /
List		/ 3
<		3 4
T		4 5
>		5 6
>		6 7

s_ListPool		8 B
=		C D
new		E H
TMP_ObjectPool		I W
<		W X
List		X \
<		\ ]
T		] ^
>		^ _
>		_ `
(		` a
null		a e
,		e f
l		g h
=>		i k
l		l m
.		m n
Clear		n s
(		s t
)		t u
)		u v
;		v w
public 
static 
List 
< 
T 
> 
Get !
(! "
)" #
{ 	
return 

s_ListPool 
. 
Get !
(! "
)" #
;# $
} 	
public 
static 
void 
Release "
(" #
List# '
<' (
T( )
>) *
	toRelease+ 4
)4 5
{ 	

s_ListPool 
. 
Release 
( 
	toRelease (
)( )
;) *
} 	
} 
} «Z
nC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_EditorResourceManager.cs
	namespace 	
TMPro
 
{		 
public

 

class

 %
TMP_EditorResourceManager

 *
{ 
private 
static %
TMP_EditorResourceManager 0

s_Instance1 ;
;; <
private 
readonly 
List 
< 
Object $
>$ %
m_ObjectUpdateQueue& 9
=: ;
new< ?
List@ D
<D E
ObjectE K
>K L
(L M
)M N
;N O
private 
HashSet 
< 
int 
> %
m_ObjectUpdateQueueLookup 6
=7 8
new9 <
HashSet= D
<D E
intE H
>H I
(I J
)J K
;K L
private 
readonly 
List 
< 
Object $
>$ %!
m_ObjectReImportQueue& ;
=< =
new> A
ListB F
<F G
ObjectG M
>M N
(N O
)O P
;P Q
private 
HashSet 
< 
int 
> '
m_ObjectReImportQueueLookup 8
=9 :
new; >
HashSet? F
<F G
intG J
>J K
(K L
)L M
;M N
private 
readonly 
List 
< 
TMP_FontAsset +
>+ ,-
!m_FontAssetDefinitionRefreshQueue- N
=O P
newQ T
ListU Y
<Y Z
TMP_FontAssetZ g
>g h
(h i
)i j
;j k
private 
HashSet 
< 
int 
> 3
'm_FontAssetDefinitionRefreshQueueLookup D
=E F
newG J
HashSetK R
<R S
intS V
>V W
(W X
)X Y
;Y Z
public 
static %
TMP_EditorResourceManager /
instance0 8
{ 	
get 
{ 
if 
( 

s_Instance 
== !
null" &
)& '

s_Instance 
=  
new! $%
TMP_EditorResourceManager% >
(> ?
)? @
;@ A
return!! 

s_Instance!! !
;!!! "
}"" 
}## 	
private(( %
TMP_EditorResourceManager(( )
((() *
)((* +
{)) 	
Camera** 
.** 
onPostRender** 
+=**  "
OnCameraPostRender**# 5
;**5 6
Canvas++ 
.++ 
willRenderCanvases++ %
+=++& (
OnPreRenderCanvases++) <
;++< =
},, 	
void.. 
OnCameraPostRender.. 
(..  
Camera..  &
cam..' *
)..* +
{// 	
if11 
(11 
cam11 
.11 

cameraType11 
!=11 !

CameraType11" ,
.11, -
	SceneView11- 6
)116 7
return22 
;22 
DoPostRenderUpdates44 
(44  
)44  !
;44! "
}55 	
void77 
OnPreRenderCanvases77  
(77  !
)77! "
{88 	
DoPreRenderUpdates99 
(99 
)99  
;99  !
}:: 	
internal@@ 
static@@ 
void@@ '
RegisterResourceForReimport@@ 8
(@@8 9
Object@@9 ?
obj@@@ C
)@@C D
{AA 	
instanceBB 
.BB /
#InternalRegisterResourceForReimportBB 8
(BB8 9
objBB9 <
)BB< =
;BB= >
}CC 	
privateEE 
voidEE /
#InternalRegisterResourceForReimportEE 8
(EE8 9
ObjectEE9 ?
objEE@ C
)EEC D
{FF 	
intGG 
idGG 
=GG 
objGG 
.GG 
GetInstanceIDGG &
(GG& '
)GG' (
;GG( )
ifII 
(II '
m_ObjectReImportQueueLookupII +
.II+ ,
ContainsII, 4
(II4 5
idII5 7
)II7 8
)II8 9
returnJJ 
;JJ '
m_ObjectReImportQueueLookupLL '
.LL' (
AddLL( +
(LL+ ,
idLL, .
)LL. /
;LL/ 0!
m_ObjectReImportQueueMM !
.MM! "
AddMM" %
(MM% &
objMM& )
)MM) *
;MM* +
}NN 	
internalTT 
staticTT 
voidTT %
RegisterResourceForUpdateTT 6
(TT6 7
ObjectTT7 =
objTT> A
)TTA B
{UU 	
instanceVV 
.VV -
!InternalRegisterResourceForUpdateVV 6
(VV6 7
objVV7 :
)VV: ;
;VV; <
}WW 	
privateYY 
voidYY -
!InternalRegisterResourceForUpdateYY 6
(YY6 7
ObjectYY7 =
objYY> A
)YYA B
{ZZ 	
int[[ 
id[[ 
=[[ 
obj[[ 
.[[ 
GetInstanceID[[ &
([[& '
)[[' (
;[[( )
if]] 
(]] %
m_ObjectUpdateQueueLookup]] )
.]]) *
Contains]]* 2
(]]2 3
id]]3 5
)]]5 6
)]]6 7
return^^ 
;^^ %
m_ObjectUpdateQueueLookup`` %
.``% &
Add``& )
(``) *
id``* ,
)``, -
;``- .
m_ObjectUpdateQueueaa 
.aa  
Addaa  #
(aa# $
objaa$ '
)aa' (
;aa( )
}bb 	
internalhh 
statichh 
voidhh 1
%RegisterFontAssetForDefinitionRefreshhh B
(hhB C
TMP_FontAssethhC P
	fontAssethhQ Z
)hhZ [
{ii 	
instancejj 
.jj 9
-InternalRegisterFontAssetForDefinitionRefreshjj B
(jjB C
	fontAssetjjC L
)jjL M
;jjM N
}kk 	
privatemm 
voidmm 9
-InternalRegisterFontAssetForDefinitionRefreshmm B
(mmB C
TMP_FontAssetmmC P
	fontAssetmmQ Z
)mmZ [
{nn 	
intoo 
idoo 
=oo 
	fontAssetoo 
.oo 
GetInstanceIDoo ,
(oo, -
)oo- .
;oo. /
ifqq 
(qq 3
'm_FontAssetDefinitionRefreshQueueLookupqq 7
.qq7 8
Containsqq8 @
(qq@ A
idqqA C
)qqC D
)qqD E
returnrr 
;rr 3
'm_FontAssetDefinitionRefreshQueueLookuptt 3
.tt3 4
Addtt4 7
(tt7 8
idtt8 :
)tt: ;
;tt; <-
!m_FontAssetDefinitionRefreshQueueuu -
.uu- .
Adduu. 1
(uu1 2
	fontAssetuu2 ;
)uu; <
;uu< =
}vv 	
voidxx 
DoPostRenderUpdatesxx  
(xx  !
)xx! "
{yy 	
int{{ 
objUpdateCount{{ 
={{  
m_ObjectUpdateQueue{{! 4
.{{4 5
Count{{5 :
;{{: ;
for}} 
(}} 
int}} 
i}} 
=}} 
$num}} 
;}} 
i}} 
<}} 
objUpdateCount}}  .
;}}. /
i}}0 1
++}}1 3
)}}3 4
{~~ 
Object 
obj 
= 
m_ObjectUpdateQueue 0
[0 1
i1 2
]2 3
;3 4
if
ÄÄ 
(
ÄÄ 
obj
ÄÄ 
!=
ÄÄ 
null
ÄÄ 
)
ÄÄ  
{
ÅÅ 
EditorUtility
ÇÇ !
.
ÇÇ! "
SetDirty
ÇÇ" *
(
ÇÇ* +
obj
ÇÇ+ .
)
ÇÇ. /
;
ÇÇ/ 0
}
ÉÉ 
}
ÑÑ 
if
ÜÜ 
(
ÜÜ 
objUpdateCount
ÜÜ 
>
ÜÜ  
$num
ÜÜ! "
)
ÜÜ" #
{
áá !
m_ObjectUpdateQueue
ãã #
.
ãã# $
Clear
ãã$ )
(
ãã) *
)
ãã* +
;
ãã+ ,'
m_ObjectUpdateQueueLookup
åå )
.
åå) *
Clear
åå* /
(
åå/ 0
)
åå0 1
;
åå1 2
}
çç 
int
êê 
objReImportCount
êê  
=
êê! "#
m_ObjectReImportQueue
êê# 8
.
êê8 9
Count
êê9 >
;
êê> ?
for
íí 
(
íí 
int
íí 
i
íí 
=
íí 
$num
íí 
;
íí 
i
íí 
<
íí 
objReImportCount
íí  0
;
íí0 1
i
íí2 3
++
íí3 5
)
íí5 6
{
ìì 
Object
îî 
obj
îî 
=
îî #
m_ObjectReImportQueue
îî 2
[
îî2 3
i
îî3 4
]
îî4 5
;
îî5 6
if
ïï 
(
ïï 
obj
ïï 
!=
ïï 
null
ïï 
)
ïï  
{
ññ 
AssetDatabase
óó !
.
óó! "
ImportAsset
óó" -
(
óó- .
AssetDatabase
óó. ;
.
óó; <
GetAssetPath
óó< H
(
óóH I
obj
óóI L
)
óóL M
)
óóM N
;
óóN O
}
òò 
}
ôô 
if
õõ 
(
õõ 
objReImportCount
õõ  
>
õõ! "
$num
õõ# $
)
õõ$ %
{
úú #
m_ObjectReImportQueue
ùù %
.
ùù% &
Clear
ùù& +
(
ùù+ ,
)
ùù, -
;
ùù- .)
m_ObjectReImportQueueLookup
ûû +
.
ûû+ ,
Clear
ûû, 1
(
ûû1 2
)
ûû2 3
;
ûû3 4
}
üü 
}
†† 	
void
¢¢  
DoPreRenderUpdates
¢¢ 
(
¢¢  
)
¢¢  !
{
££ 	
for
•• 
(
•• 
int
•• 
i
•• 
=
•• 
$num
•• 
;
•• 
i
•• 
<
•• /
!m_FontAssetDefinitionRefreshQueue
••  A
.
••A B
Count
••B G
;
••G H
i
••I J
++
••J L
)
••L M
{
¶¶ 
TMP_FontAsset
ßß 
	fontAsset
ßß '
=
ßß( )/
!m_FontAssetDefinitionRefreshQueue
ßß* K
[
ßßK L
i
ßßL M
]
ßßM N
;
ßßN O
if
©© 
(
©© 
	fontAsset
©© 
!=
©©  
null
©©! %
)
©©% &
{
™™ 
	fontAsset
´´ 
.
´´ %
ReadFontAssetDefinition
´´ 5
(
´´5 6
)
´´6 7
;
´´7 8 
TMPro_EventManager
¨¨ &
.
¨¨& '&
ON_FONT_PROPERTY_CHANGED
¨¨' ?
(
¨¨? @
true
¨¨@ D
,
¨¨D E
	fontAsset
¨¨F O
)
¨¨O P
;
¨¨P Q
}
≠≠ 
}
ÆÆ 
if
∞∞ 
(
∞∞ /
!m_FontAssetDefinitionRefreshQueue
∞∞ 1
.
∞∞1 2
Count
∞∞2 7
>
∞∞8 9
$num
∞∞: ;
)
∞∞; <
{
±± /
!m_FontAssetDefinitionRefreshQueue
≤≤ 1
.
≤≤1 2
Clear
≤≤2 7
(
≤≤7 8
)
≤≤8 9
;
≤≤9 :5
'm_FontAssetDefinitionRefreshQueueLookup
≥≥ 7
.
≥≥7 8
Clear
≥≥8 =
(
≥≥= >
)
≥≥> ?
;
≥≥? @
}
¥¥ 
}
µµ 	
}
∂∂ 
}∑∑ ü
dC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_TextElement.cs
	namespace 	
TMPro
 
{ 
public 

enum 
TextElementType 
:  !
byte" &
{ 
	Character		 
=		 
$num		 
,		 
Sprite

 
=

 
$num

 
,

 
} 
[ 
Serializable 
] 
public 

class 
TMP_TextElement  
{ 
public 
TextElementType 
elementType *
{+ ,
get- 0
{1 2
return3 9
m_ElementType: G
;G H
}I J
}K L
public 
uint 
unicode 
{ 
get !
{" #
return$ *
	m_Unicode+ 4
;4 5
}6 7
set8 ;
{< =
	m_Unicode> G
=H I
valueJ O
;O P
}Q R
}S T
public   
	TMP_Asset   
	textAsset   "
{  # $
get  % (
{  ) *
return  + 1
m_TextAsset  2 =
;  = >
}  ? @
set  A D
{  E F
m_TextAsset  G R
=  S T
value  U Z
;  Z [
}  \ ]
}  ^ _
public%% 
Glyph%% 
glyph%% 
{%% 
get%%  
{%%! "
return%%# )
m_Glyph%%* 1
;%%1 2
}%%3 4
set%%5 8
{%%9 :
m_Glyph%%; B
=%%C D
value%%E J
;%%J K
}%%L M
}%%N O
public** 
uint** 

glyphIndex** 
{**  
get**! $
{**% &
return**' -
m_GlyphIndex**. :
;**: ;
}**< =
set**> A
{**B C
m_GlyphIndex**D P
=**Q R
value**S X
;**X Y
}**Z [
}**\ ]
public// 
float// 
scale// 
{// 
get//  
{//! "
return//# )
m_Scale//* 1
;//1 2
}//3 4
set//5 8
{//9 :
m_Scale//; B
=//C D
value//E J
;//J K
}//L M
}//N O
[55 	
SerializeField55	 
]55 
	protected66 
TextElementType66 !
m_ElementType66" /
;66/ 0
[88 	
SerializeField88	 
]88 
internal99 
uint99 
	m_Unicode99 
;99  
internal;; 
	TMP_Asset;; 
m_TextAsset;; &
;;;& '
internal== 
Glyph== 
m_Glyph== 
;== 
[?? 	
SerializeField??	 
]?? 
internal@@ 
uint@@ 
m_GlyphIndex@@ "
;@@" #
[BB 	
SerializeFieldBB	 
]BB 
internalCC 
floatCC 
m_ScaleCC 
;CC 
}DD 
}EE ˜r
gC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_CoroutineTween.cs
	namespace 	
TMPro
 
{ 
internal 
	interface 
ITweenValue "
{ 
void 

TweenValue 
( 
float 
floatPercentage -
)- .
;. /
bool 
ignoreTimeScale 
{ 
get "
;" #
}$ %
float 
duration 
{ 
get 
; 
} 
bool 
ValidTarget 
( 
) 
; 
} 
internal 
struct 

ColorTween 
:  
ITweenValue! ,
{ 
public 
enum 
ColorTweenMode "
{ 	
All 
, 
RGB 
, 
Alpha 
} 	
public   
class   
ColorTweenCallback   '
:  ( )

UnityEvent  * 4
<  4 5
Color  5 :
>  : ;
{  < =
}  > ?
private"" 
ColorTweenCallback"" "
m_Target""# +
;""+ ,
private## 
Color## 
m_StartColor## "
;##" #
private$$ 
Color$$ 
m_TargetColor$$ #
;$$# $
private%% 
ColorTweenMode%% 
m_TweenMode%% *
;%%* +
private'' 
float'' 

m_Duration''  
;''  !
private(( 
bool(( 
m_IgnoreTimeScale(( &
;((& '
public** 
Color** 

startColor** 
{++ 	
get,, 
{,, 
return,, 
m_StartColor,, %
;,,% &
},,' (
set-- 
{-- 
m_StartColor-- 
=--  
value--! &
;--& '
}--( )
}.. 	
public00 
Color00 
targetColor00  
{11 	
get22 
{22 
return22 
m_TargetColor22 &
;22& '
}22( )
set33 
{33 
m_TargetColor33 
=33  !
value33" '
;33' (
}33) *
}44 	
public66 
ColorTweenMode66 
	tweenMode66 '
{77 	
get88 
{88 
return88 
m_TweenMode88 $
;88$ %
}88& '
set99 
{99 
m_TweenMode99 
=99 
value99  %
;99% &
}99' (
}:: 	
public<< 
float<< 
duration<< 
{== 	
get>> 
{>> 
return>> 

m_Duration>> #
;>># $
}>>% &
set?? 
{?? 

m_Duration?? 
=?? 
value?? $
;??$ %
}??& '
}@@ 	
publicBB 
boolBB 
ignoreTimeScaleBB #
{CC 	
getDD 
{DD 
returnDD 
m_IgnoreTimeScaleDD *
;DD* +
}DD, -
setEE 
{EE 
m_IgnoreTimeScaleEE #
=EE$ %
valueEE& +
;EE+ ,
}EE- .
}FF 	
publicHH 
voidHH 

TweenValueHH 
(HH 
floatHH $
floatPercentageHH% 4
)HH4 5
{II 	
ifJJ 
(JJ 
!JJ 
ValidTargetJJ 
(JJ 
)JJ 
)JJ 
returnKK 
;KK 
varMM 
newColorMM 
=MM 
ColorMM  
.MM  !
LerpMM! %
(MM% &
m_StartColorMM& 2
,MM2 3
m_TargetColorMM4 A
,MMA B
floatPercentageMMC R
)MMR S
;MMS T
ifOO 
(OO 
m_TweenModeOO 
==OO 
ColorTweenModeOO -
.OO- .
AlphaOO. 3
)OO3 4
{PP 
newColorQQ 
.QQ 
rQQ 
=QQ 
m_StartColorQQ )
.QQ) *
rQQ* +
;QQ+ ,
newColorRR 
.RR 
gRR 
=RR 
m_StartColorRR )
.RR) *
gRR* +
;RR+ ,
newColorSS 
.SS 
bSS 
=SS 
m_StartColorSS )
.SS) *
bSS* +
;SS+ ,
}TT 
elseUU 
ifUU 
(UU 
m_TweenModeUU  
==UU! #
ColorTweenModeUU$ 2
.UU2 3
RGBUU3 6
)UU6 7
{VV 
newColorWW 
.WW 
aWW 
=WW 
m_StartColorWW )
.WW) *
aWW* +
;WW+ ,
}XX 
m_TargetYY 
.YY 
InvokeYY 
(YY 
newColorYY $
)YY$ %
;YY% &
}ZZ 	
public\\ 
void\\  
AddOnChangedCallback\\ (
(\\( )
UnityAction\\) 4
<\\4 5
Color\\5 :
>\\: ;
callback\\< D
)\\D E
{]] 	
if^^ 
(^^ 
m_Target^^ 
==^^ 
null^^  
)^^  !
m_Target__ 
=__ 
new__ 
ColorTweenCallback__ 1
(__1 2
)__2 3
;__3 4
m_Targetaa 
.aa 
AddListeneraa  
(aa  !
callbackaa! )
)aa) *
;aa* +
}bb 	
publicdd 
booldd 
GetIgnoreTimescaledd &
(dd& '
)dd' (
{ee 	
returnff 
m_IgnoreTimeScaleff $
;ff$ %
}gg 	
publicii 
floatii 
GetDurationii  
(ii  !
)ii! "
{jj 	
returnkk 

m_Durationkk 
;kk 
}ll 	
publicnn 
boolnn 
ValidTargetnn 
(nn  
)nn  !
{oo 	
returnpp 
m_Targetpp 
!=pp 
nullpp #
;pp# $
}qq 	
}rr 
internalww 
structww 

FloatTweenww 
:ww  
ITweenValueww! ,
{xx 
publicyy 
classyy 
FloatTweenCallbackyy '
:yy( )

UnityEventyy* 4
<yy4 5
floatyy5 :
>yy: ;
{yy< =
}yy> ?
private{{ 
FloatTweenCallback{{ "
m_Target{{# +
;{{+ ,
private|| 
float|| 
m_StartValue|| "
;||" #
private}} 
float}} 
m_TargetValue}} #
;}}# $
private 
float 

m_Duration  
;  !
private
ÄÄ 
bool
ÄÄ 
m_IgnoreTimeScale
ÄÄ &
;
ÄÄ& '
public
ÇÇ 
float
ÇÇ 

startValue
ÇÇ 
{
ÉÉ 	
get
ÑÑ 
{
ÑÑ 
return
ÑÑ 
m_StartValue
ÑÑ %
;
ÑÑ% &
}
ÑÑ' (
set
ÖÖ 
{
ÖÖ 
m_StartValue
ÖÖ 
=
ÖÖ  
value
ÖÖ! &
;
ÖÖ& '
}
ÖÖ( )
}
ÜÜ 	
public
àà 
float
àà 
targetValue
àà  
{
ââ 	
get
ää 
{
ää 
return
ää 
m_TargetValue
ää &
;
ää& '
}
ää( )
set
ãã 
{
ãã 
m_TargetValue
ãã 
=
ãã  !
value
ãã" '
;
ãã' (
}
ãã) *
}
åå 	
public
éé 
float
éé 
duration
éé 
{
èè 	
get
êê 
{
êê 
return
êê 

m_Duration
êê #
;
êê# $
}
êê% &
set
ëë 
{
ëë 

m_Duration
ëë 
=
ëë 
value
ëë $
;
ëë$ %
}
ëë& '
}
íí 	
public
îî 
bool
îî 
ignoreTimeScale
îî #
{
ïï 	
get
ññ 
{
ññ 
return
ññ 
m_IgnoreTimeScale
ññ *
;
ññ* +
}
ññ, -
set
óó 
{
óó 
m_IgnoreTimeScale
óó #
=
óó$ %
value
óó& +
;
óó+ ,
}
óó- .
}
òò 	
public
öö 
void
öö 

TweenValue
öö 
(
öö 
float
öö $
floatPercentage
öö% 4
)
öö4 5
{
õõ 	
if
úú 
(
úú 
!
úú 
ValidTarget
úú 
(
úú 
)
úú 
)
úú 
return
ùù 
;
ùù 
var
üü 
newValue
üü 
=
üü 
Mathf
üü  
.
üü  !
Lerp
üü! %
(
üü% &
m_StartValue
üü& 2
,
üü2 3
m_TargetValue
üü4 A
,
üüA B
floatPercentage
üüC R
)
üüR S
;
üüS T
m_Target
†† 
.
†† 
Invoke
†† 
(
†† 
newValue
†† $
)
††$ %
;
††% &
}
°° 	
public
££ 
void
££ "
AddOnChangedCallback
££ (
(
££( )
UnityAction
££) 4
<
££4 5
float
££5 :
>
££: ;
callback
££< D
)
££D E
{
§§ 	
if
•• 
(
•• 
m_Target
•• 
==
•• 
null
••  
)
••  !
m_Target
¶¶ 
=
¶¶ 
new
¶¶  
FloatTweenCallback
¶¶ 1
(
¶¶1 2
)
¶¶2 3
;
¶¶3 4
m_Target
®® 
.
®® 
AddListener
®®  
(
®®  !
callback
®®! )
)
®®) *
;
®®* +
}
©© 	
public
´´ 
bool
´´  
GetIgnoreTimescale
´´ &
(
´´& '
)
´´' (
{
¨¨ 	
return
≠≠ 
m_IgnoreTimeScale
≠≠ $
;
≠≠$ %
}
ÆÆ 	
public
∞∞ 
float
∞∞ 
GetDuration
∞∞  
(
∞∞  !
)
∞∞! "
{
±± 	
return
≤≤ 

m_Duration
≤≤ 
;
≤≤ 
}
≥≥ 	
public
µµ 
bool
µµ 
ValidTarget
µµ 
(
µµ  
)
µµ  !
{
∂∂ 	
return
∑∑ 
m_Target
∑∑ 
!=
∑∑ 
null
∑∑ #
;
∑∑# $
}
∏∏ 	
}
ππ 
internal
ææ 
class
ææ 
TweenRunner
ææ 
<
ææ 
T
ææ  
>
ææ  !
where
ææ" '
T
ææ( )
:
ææ* +
struct
ææ, 2
,
ææ2 3
ITweenValue
ææ4 ?
{
øø 
	protected
¿¿ 
MonoBehaviour
¿¿ "
m_CoroutineContainer
¿¿  4
;
¿¿4 5
	protected
¡¡ 
IEnumerator
¡¡ 
m_Tween
¡¡ %
;
¡¡% &
private
ƒƒ 
static
ƒƒ 
IEnumerator
ƒƒ "
Start
ƒƒ# (
(
ƒƒ( )
T
ƒƒ) *
	tweenInfo
ƒƒ+ 4
)
ƒƒ4 5
{
≈≈ 	
if
∆∆ 
(
∆∆ 
!
∆∆ 
	tweenInfo
∆∆ 
.
∆∆ 
ValidTarget
∆∆ &
(
∆∆& '
)
∆∆' (
)
∆∆( )
yield
«« 
break
«« 
;
«« 
var
…… 
elapsedTime
…… 
=
…… 
$num
…… "
;
……" #
while
   
(
   
elapsedTime
   
<
    
	tweenInfo
  ! *
.
  * +
duration
  + 3
)
  3 4
{
ÀÀ 
elapsedTime
ÃÃ 
+=
ÃÃ 
	tweenInfo
ÃÃ (
.
ÃÃ( )
ignoreTimeScale
ÃÃ) 8
?
ÃÃ9 :
Time
ÃÃ; ?
.
ÃÃ? @
unscaledDeltaTime
ÃÃ@ Q
:
ÃÃR S
Time
ÃÃT X
.
ÃÃX Y
	deltaTime
ÃÃY b
;
ÃÃb c
var
ÕÕ 

percentage
ÕÕ 
=
ÕÕ  
Mathf
ÕÕ! &
.
ÕÕ& '
Clamp01
ÕÕ' .
(
ÕÕ. /
elapsedTime
ÕÕ/ :
/
ÕÕ; <
	tweenInfo
ÕÕ= F
.
ÕÕF G
duration
ÕÕG O
)
ÕÕO P
;
ÕÕP Q
	tweenInfo
ŒŒ 
.
ŒŒ 

TweenValue
ŒŒ $
(
ŒŒ$ %

percentage
ŒŒ% /
)
ŒŒ/ 0
;
ŒŒ0 1
yield
œœ 
return
œœ 
null
œœ !
;
œœ! "
}
–– 
	tweenInfo
—— 
.
—— 

TweenValue
——  
(
——  !
$num
——! %
)
——% &
;
——& '
}
““ 	
public
‘‘ 
void
‘‘ 
Init
‘‘ 
(
‘‘ 
MonoBehaviour
‘‘ & 
coroutineContainer
‘‘' 9
)
‘‘9 :
{
’’ 	"
m_CoroutineContainer
÷÷  
=
÷÷! " 
coroutineContainer
÷÷# 5
;
÷÷5 6
}
◊◊ 	
public
ŸŸ 
void
ŸŸ 

StartTween
ŸŸ 
(
ŸŸ 
T
ŸŸ  
info
ŸŸ! %
)
ŸŸ% &
{
⁄⁄ 	
if
€€ 
(
€€ "
m_CoroutineContainer
€€ $
==
€€% '
null
€€( ,
)
€€, -
{
‹‹ 
Debug
›› 
.
›› 

LogWarning
››  
(
››  !
$str
››! e
)
››e f
;
››f g
return
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
	StopTween
·· 
(
·· 
)
·· 
;
·· 
if
„„ 
(
„„ 
!
„„ "
m_CoroutineContainer
„„ %
.
„„% &

gameObject
„„& 0
.
„„0 1
activeInHierarchy
„„1 B
)
„„B C
{
‰‰ 
info
ÂÂ 
.
ÂÂ 

TweenValue
ÂÂ 
(
ÂÂ  
$num
ÂÂ  $
)
ÂÂ$ %
;
ÂÂ% &
return
ÊÊ 
;
ÊÊ 
}
ÁÁ 
m_Tween
ÈÈ 
=
ÈÈ 
Start
ÈÈ 
(
ÈÈ 
info
ÈÈ  
)
ÈÈ  !
;
ÈÈ! ""
m_CoroutineContainer
ÍÍ  
.
ÍÍ  !
StartCoroutine
ÍÍ! /
(
ÍÍ/ 0
m_Tween
ÍÍ0 7
)
ÍÍ7 8
;
ÍÍ8 9
}
ÎÎ 	
public
ÌÌ 
void
ÌÌ 
	StopTween
ÌÌ 
(
ÌÌ 
)
ÌÌ 
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
m_Tween
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ  
{
 "
m_CoroutineContainer
ÒÒ $
.
ÒÒ$ %
StopCoroutine
ÒÒ% 2
(
ÒÒ2 3
m_Tween
ÒÒ3 :
)
ÒÒ: ;
;
ÒÒ; <
m_Tween
ÚÚ 
=
ÚÚ 
null
ÚÚ 
;
ÚÚ 
}
ÛÛ 
}
ÙÙ 	
}
ıı 
}ˆˆ ¨§
aC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_MeshInfo.cs
	namespace		 	
TMPro		
 
{

 
public 

enum 
VertexSortingOrder "
{# $
Normal% +
,+ ,
Reverse- 4
}5 6
;6 7
public 

struct 
TMP_MeshInfo 
{ 
private 
static 
readonly 
Color32  '
s_DefaultColor( 6
=7 8
new9 <
Color32= D
(D E
byteE I
.I J
MaxValueJ R
,R S
byteT X
.X Y
MaxValueY a
,a b
bytec g
.g h
MaxValueh p
,p q
byter v
.v w
MaxValuew 
)	 Ä
;
Ä Å
private 
static 
readonly 
Vector3  '
s_DefaultNormal( 7
=8 9
new: =
Vector3> E
(E F
$numF J
,J K
$numL P
,P Q
-R S
$numS U
)U V
;V W
private 
static 
readonly 
Vector4  '
s_DefaultTangent( 8
=9 :
new; >
Vector4? F
(F G
-G H
$numH J
,J K
$numL P
,P Q
$numR V
,V W
$numX Z
)Z [
;[ \
private 
static 
readonly 
Bounds  &
s_DefaultBounds' 6
=7 8
new9 <
Bounds= C
(C D
)D E
;E F
public 
Mesh 
mesh 
; 
public 
int 
vertexCount 
; 
public 
Vector3 
[ 
] 
vertices !
;! "
public 
Vector3 
[ 
] 
normals  
;  !
public 
Vector4 
[ 
] 
tangents !
;! "
public 
Vector2 
[ 
] 
uvs0 
; 
public 
Vector2 
[ 
] 
uvs2 
; 
public!! 
Color32!! 
[!! 
]!! 
colors32!! !
;!!! "
public"" 
int"" 
["" 
]"" 
	triangles"" 
;"" 
public$$ 
Material$$ 
material$$  
;$$  !
public,, 
TMP_MeshInfo,, 
(,, 
Mesh,,  
mesh,,! %
,,,% &
int,,' *
size,,+ /
),,/ 0
{-- 	
if22 
(22 
mesh22 
==22 
null22 
)22 
mesh33 
=33 
new33 
Mesh33 
(33  
)33  !
;33! "
else44 
mesh55 
.55 
Clear55 
(55 
)55 
;55 
this77 
.77 
mesh77 
=77 
mesh77 
;77 
size:: 
=:: 
Mathf:: 
.:: 
Min:: 
(:: 
size:: !
,::! "
$num::# (
)::( )
;::) *
int<< 
sizeX4<< 
=<< 
size<< 
*<< 
$num<<  !
;<<! "
int== 
sizeX6== 
=== 
size== 
*== 
$num==  !
;==! "
this?? 
.?? 
vertexCount?? 
=?? 
$num??  
;??  !
thisAA 
.AA 
verticesAA 
=AA 
newAA 
Vector3AA  '
[AA' (
sizeX4AA( .
]AA. /
;AA/ 0
thisBB 
.BB 
uvs0BB 
=BB 
newBB 
Vector2BB #
[BB# $
sizeX4BB$ *
]BB* +
;BB+ ,
thisCC 
.CC 
uvs2CC 
=CC 
newCC 
Vector2CC #
[CC# $
sizeX4CC$ *
]CC* +
;CC+ ,
thisEE 
.EE 
colors32EE 
=EE 
newEE 
Color32EE  '
[EE' (
sizeX4EE( .
]EE. /
;EE/ 0
thisGG 
.GG 
normalsGG 
=GG 
newGG 
Vector3GG &
[GG& '
sizeX4GG' -
]GG- .
;GG. /
thisHH 
.HH 
tangentsHH 
=HH 
newHH 
Vector4HH  '
[HH' (
sizeX4HH( .
]HH. /
;HH/ 0
thisJJ 
.JJ 
	trianglesJJ 
=JJ 
newJJ  
intJJ! $
[JJ$ %
sizeX6JJ% +
]JJ+ ,
;JJ, -
intLL 
index_X6LL 
=LL 
$numLL 
;LL 
intMM 
index_X4MM 
=MM 
$numMM 
;MM 
whileNN 
(NN 
index_X4NN 
/NN 
$numNN 
<NN  !
sizeNN" &
)NN& '
{OO 
forPP 
(PP 
intPP 
iPP 
=PP 
$numPP 
;PP 
iPP  !
<PP" #
$numPP$ %
;PP% &
iPP' (
++PP( *
)PP* +
{QQ 
thisRR 
.RR 
verticesRR !
[RR! "
index_X4RR" *
+RR+ ,
iRR- .
]RR. /
=RR0 1
Vector3RR2 9
.RR9 :
zeroRR: >
;RR> ?
thisSS 
.SS 
uvs0SS 
[SS 
index_X4SS &
+SS' (
iSS) *
]SS* +
=SS, -
Vector2SS. 5
.SS5 6
zeroSS6 :
;SS: ;
thisTT 
.TT 
uvs2TT 
[TT 
index_X4TT &
+TT' (
iTT) *
]TT* +
=TT, -
Vector2TT. 5
.TT5 6
zeroTT6 :
;TT: ;
thisVV 
.VV 
colors32VV !
[VV! "
index_X4VV" *
+VV+ ,
iVV- .
]VV. /
=VV0 1
s_DefaultColorVV2 @
;VV@ A
thisWW 
.WW 
normalsWW  
[WW  !
index_X4WW! )
+WW* +
iWW, -
]WW- .
=WW/ 0
s_DefaultNormalWW1 @
;WW@ A
thisXX 
.XX 
tangentsXX !
[XX! "
index_X4XX" *
+XX+ ,
iXX- .
]XX. /
=XX0 1
s_DefaultTangentXX2 B
;XXB C
}YY 
this[[ 
.[[ 
	triangles[[ 
[[[ 
index_X6[[ '
+[[( )
$num[[* +
][[+ ,
=[[- .
index_X4[[/ 7
+[[8 9
$num[[: ;
;[[; <
this\\ 
.\\ 
	triangles\\ 
[\\ 
index_X6\\ '
+\\( )
$num\\* +
]\\+ ,
=\\- .
index_X4\\/ 7
+\\8 9
$num\\: ;
;\\; <
this]] 
.]] 
	triangles]] 
[]] 
index_X6]] '
+]]( )
$num]]* +
]]]+ ,
=]]- .
index_X4]]/ 7
+]]8 9
$num]]: ;
;]]; <
this^^ 
.^^ 
	triangles^^ 
[^^ 
index_X6^^ '
+^^( )
$num^^* +
]^^+ ,
=^^- .
index_X4^^/ 7
+^^8 9
$num^^: ;
;^^; <
this__ 
.__ 
	triangles__ 
[__ 
index_X6__ '
+__( )
$num__* +
]__+ ,
=__- .
index_X4__/ 7
+__8 9
$num__: ;
;__; <
this`` 
.`` 
	triangles`` 
[`` 
index_X6`` '
+``( )
$num``* +
]``+ ,
=``- .
index_X4``/ 7
+``8 9
$num``: ;
;``; <
index_X4bb 
+=bb 
$numbb 
;bb 
index_X6cc 
+=cc 
$numcc 
;cc 
}dd 
thisgg 
.gg 
meshgg 
.gg 
verticesgg 
=gg  
thisgg! %
.gg% &
verticesgg& .
;gg. /
thishh 
.hh 
meshhh 
.hh 
normalshh 
=hh 
thishh  $
.hh$ %
normalshh% ,
;hh, -
thisii 
.ii 
meshii 
.ii 
tangentsii 
=ii  
thisii! %
.ii% &
tangentsii& .
;ii. /
thisjj 
.jj 
meshjj 
.jj 
	trianglesjj 
=jj  !
thisjj" &
.jj& '
	trianglesjj' 0
;jj0 1
thiskk 
.kk 
meshkk 
.kk 
boundskk 
=kk 
s_DefaultBoundskk .
;kk. /
thisll 
.ll 
materialll 
=ll 
nullll  
;ll  !
}mm 	
publicvv 
TMP_MeshInfovv 
(vv 
Meshvv  
meshvv! %
,vv% &
intvv' *
sizevv+ /
,vv/ 0
boolvv1 5
isVolumetricvv6 B
)vvB C
{ww 	
if|| 
(|| 
mesh|| 
==|| 
null|| 
)|| 
mesh}} 
=}} 
new}} 
Mesh}} 
(}}  
)}}  !
;}}! "
else~~ 
mesh 
. 
Clear 
( 
) 
; 
this
ÅÅ 
.
ÅÅ 
mesh
ÅÅ 
=
ÅÅ 
mesh
ÅÅ 
;
ÅÅ 
int
ÉÉ 
s0
ÉÉ 
=
ÉÉ 
!
ÉÉ 
isVolumetric
ÉÉ "
?
ÉÉ# $
$num
ÉÉ% &
:
ÉÉ' (
$num
ÉÉ) *
;
ÉÉ* +
int
ÑÑ 
s1
ÑÑ 
=
ÑÑ 
!
ÑÑ 
isVolumetric
ÑÑ "
?
ÑÑ# $
$num
ÑÑ% &
:
ÑÑ' (
$num
ÑÑ) +
;
ÑÑ+ ,
size
áá 
=
áá 
Mathf
áá 
.
áá 
Min
áá 
(
áá 
size
áá !
,
áá! "
$num
áá# (
/
áá) *
s0
áá+ -
)
áá- .
;
áá. /
int
ââ 
	size_x_s0
ââ 
=
ââ 
size
ââ  
*
ââ! "
s0
ââ# %
;
ââ% &
int
ää 
	size_x_s1
ää 
=
ää 
size
ää  
*
ää! "
s1
ää# %
;
ää% &
this
åå 
.
åå 
vertexCount
åå 
=
åå 
$num
åå  
;
åå  !
this
éé 
.
éé 
vertices
éé 
=
éé 
new
éé 
Vector3
éé  '
[
éé' (
	size_x_s0
éé( 1
]
éé1 2
;
éé2 3
this
èè 
.
èè 
uvs0
èè 
=
èè 
new
èè 
Vector2
èè #
[
èè# $
	size_x_s0
èè$ -
]
èè- .
;
èè. /
this
êê 
.
êê 
uvs2
êê 
=
êê 
new
êê 
Vector2
êê #
[
êê# $
	size_x_s0
êê$ -
]
êê- .
;
êê. /
this
íí 
.
íí 
colors32
íí 
=
íí 
new
íí 
Color32
íí  '
[
íí' (
	size_x_s0
íí( 1
]
íí1 2
;
íí2 3
this
îî 
.
îî 
normals
îî 
=
îî 
new
îî 
Vector3
îî &
[
îî& '
	size_x_s0
îî' 0
]
îî0 1
;
îî1 2
this
ïï 
.
ïï 
tangents
ïï 
=
ïï 
new
ïï 
Vector4
ïï  '
[
ïï' (
	size_x_s0
ïï( 1
]
ïï1 2
;
ïï2 3
this
óó 
.
óó 
	triangles
óó 
=
óó 
new
óó  
int
óó! $
[
óó$ %
	size_x_s1
óó% .
]
óó. /
;
óó/ 0
int
ôô 

index_x_s0
ôô 
=
ôô 
$num
ôô 
;
ôô 
int
öö 

index_x_s1
öö 
=
öö 
$num
öö 
;
öö 
while
õõ 
(
õõ 

index_x_s0
õõ 
/
õõ 
s0
õõ  "
<
õõ# $
size
õõ% )
)
õõ) *
{
úú 
for
ùù 
(
ùù 
int
ùù 
i
ùù 
=
ùù 
$num
ùù 
;
ùù 
i
ùù  !
<
ùù" #
s0
ùù$ &
;
ùù& '
i
ùù( )
++
ùù) +
)
ùù+ ,
{
ûû 
this
üü 
.
üü 
vertices
üü !
[
üü! "

index_x_s0
üü" ,
+
üü- .
i
üü/ 0
]
üü0 1
=
üü2 3
Vector3
üü4 ;
.
üü; <
zero
üü< @
;
üü@ A
this
†† 
.
†† 
uvs0
†† 
[
†† 

index_x_s0
†† (
+
††) *
i
††+ ,
]
††, -
=
††. /
Vector2
††0 7
.
††7 8
zero
††8 <
;
††< =
this
°° 
.
°° 
uvs2
°° 
[
°° 

index_x_s0
°° (
+
°°) *
i
°°+ ,
]
°°, -
=
°°. /
Vector2
°°0 7
.
°°7 8
zero
°°8 <
;
°°< =
this
££ 
.
££ 
colors32
££ !
[
££! "

index_x_s0
££" ,
+
££- .
i
££/ 0
]
££0 1
=
££2 3
s_DefaultColor
££4 B
;
££B C
this
§§ 
.
§§ 
normals
§§  
[
§§  !

index_x_s0
§§! +
+
§§, -
i
§§. /
]
§§/ 0
=
§§1 2
s_DefaultNormal
§§3 B
;
§§B C
this
•• 
.
•• 
tangents
•• !
[
••! "

index_x_s0
••" ,
+
••- .
i
••/ 0
]
••0 1
=
••2 3
s_DefaultTangent
••4 D
;
••D E
}
¶¶ 
this
©© 
.
©© 
	triangles
©© 
[
©© 

index_x_s1
©© )
+
©©* +
$num
©©, -
]
©©- .
=
©©/ 0

index_x_s0
©©1 ;
+
©©< =
$num
©©> ?
;
©©? @
this
™™ 
.
™™ 
	triangles
™™ 
[
™™ 

index_x_s1
™™ )
+
™™* +
$num
™™, -
]
™™- .
=
™™/ 0

index_x_s0
™™1 ;
+
™™< =
$num
™™> ?
;
™™? @
this
´´ 
.
´´ 
	triangles
´´ 
[
´´ 

index_x_s1
´´ )
+
´´* +
$num
´´, -
]
´´- .
=
´´/ 0

index_x_s0
´´1 ;
+
´´< =
$num
´´> ?
;
´´? @
this
¨¨ 
.
¨¨ 
	triangles
¨¨ 
[
¨¨ 

index_x_s1
¨¨ )
+
¨¨* +
$num
¨¨, -
]
¨¨- .
=
¨¨/ 0

index_x_s0
¨¨1 ;
+
¨¨< =
$num
¨¨> ?
;
¨¨? @
this
≠≠ 
.
≠≠ 
	triangles
≠≠ 
[
≠≠ 

index_x_s1
≠≠ )
+
≠≠* +
$num
≠≠, -
]
≠≠- .
=
≠≠/ 0

index_x_s0
≠≠1 ;
+
≠≠< =
$num
≠≠> ?
;
≠≠? @
this
ÆÆ 
.
ÆÆ 
	triangles
ÆÆ 
[
ÆÆ 

index_x_s1
ÆÆ )
+
ÆÆ* +
$num
ÆÆ, -
]
ÆÆ- .
=
ÆÆ/ 0

index_x_s0
ÆÆ1 ;
+
ÆÆ< =
$num
ÆÆ> ?
;
ÆÆ? @
if
∞∞ 
(
∞∞ 
isVolumetric
∞∞  
)
∞∞  !
{
±± 
this
≥≥ 
.
≥≥ 
	triangles
≥≥ "
[
≥≥" #

index_x_s1
≥≥# -
+
≥≥. /
$num
≥≥0 1
]
≥≥1 2
=
≥≥3 4

index_x_s0
≥≥5 ?
+
≥≥@ A
$num
≥≥B C
;
≥≥C D
this
¥¥ 
.
¥¥ 
	triangles
¥¥ "
[
¥¥" #

index_x_s1
¥¥# -
+
¥¥. /
$num
¥¥0 1
]
¥¥1 2
=
¥¥3 4

index_x_s0
¥¥5 ?
+
¥¥@ A
$num
¥¥B C
;
¥¥C D
this
µµ 
.
µµ 
	triangles
µµ "
[
µµ" #

index_x_s1
µµ# -
+
µµ. /
$num
µµ0 1
]
µµ1 2
=
µµ3 4

index_x_s0
µµ5 ?
+
µµ@ A
$num
µµB C
;
µµC D
this
∂∂ 
.
∂∂ 
	triangles
∂∂ "
[
∂∂" #

index_x_s1
∂∂# -
+
∂∂. /
$num
∂∂0 1
]
∂∂1 2
=
∂∂3 4

index_x_s0
∂∂5 ?
+
∂∂@ A
$num
∂∂B C
;
∂∂C D
this
∑∑ 
.
∑∑ 
	triangles
∑∑ "
[
∑∑" #

index_x_s1
∑∑# -
+
∑∑. /
$num
∑∑0 2
]
∑∑2 3
=
∑∑4 5

index_x_s0
∑∑6 @
+
∑∑A B
$num
∑∑C D
;
∑∑D E
this
∏∏ 
.
∏∏ 
	triangles
∏∏ "
[
∏∏" #

index_x_s1
∏∏# -
+
∏∏. /
$num
∏∏0 2
]
∏∏2 3
=
∏∏4 5

index_x_s0
∏∏6 @
+
∏∏A B
$num
∏∏C D
;
∏∏D E
this
ªª 
.
ªª 
	triangles
ªª "
[
ªª" #

index_x_s1
ªª# -
+
ªª. /
$num
ªª0 2
]
ªª2 3
=
ªª4 5

index_x_s0
ªª6 @
+
ªªA B
$num
ªªC D
;
ªªD E
this
ºº 
.
ºº 
	triangles
ºº "
[
ºº" #

index_x_s1
ºº# -
+
ºº. /
$num
ºº0 2
]
ºº2 3
=
ºº4 5

index_x_s0
ºº6 @
+
ººA B
$num
ººC D
;
ººD E
this
ΩΩ 
.
ΩΩ 
	triangles
ΩΩ "
[
ΩΩ" #

index_x_s1
ΩΩ# -
+
ΩΩ. /
$num
ΩΩ0 2
]
ΩΩ2 3
=
ΩΩ4 5

index_x_s0
ΩΩ6 @
+
ΩΩA B
$num
ΩΩC D
;
ΩΩD E
this
ææ 
.
ææ 
	triangles
ææ "
[
ææ" #

index_x_s1
ææ# -
+
ææ. /
$num
ææ0 2
]
ææ2 3
=
ææ4 5

index_x_s0
ææ6 @
+
ææA B
$num
ææC D
;
ææD E
this
øø 
.
øø 
	triangles
øø "
[
øø" #

index_x_s1
øø# -
+
øø. /
$num
øø0 2
]
øø2 3
=
øø4 5

index_x_s0
øø6 @
+
øøA B
$num
øøC D
;
øøD E
this
¿¿ 
.
¿¿ 
	triangles
¿¿ "
[
¿¿" #

index_x_s1
¿¿# -
+
¿¿. /
$num
¿¿0 2
]
¿¿2 3
=
¿¿4 5

index_x_s0
¿¿6 @
+
¿¿A B
$num
¿¿C D
;
¿¿D E
this
√√ 
.
√√ 
	triangles
√√ "
[
√√" #

index_x_s1
√√# -
+
√√. /
$num
√√0 2
]
√√2 3
=
√√4 5

index_x_s0
√√6 @
+
√√A B
$num
√√C D
;
√√D E
this
ƒƒ 
.
ƒƒ 
	triangles
ƒƒ "
[
ƒƒ" #

index_x_s1
ƒƒ# -
+
ƒƒ. /
$num
ƒƒ0 2
]
ƒƒ2 3
=
ƒƒ4 5

index_x_s0
ƒƒ6 @
+
ƒƒA B
$num
ƒƒC D
;
ƒƒD E
this
≈≈ 
.
≈≈ 
	triangles
≈≈ "
[
≈≈" #

index_x_s1
≈≈# -
+
≈≈. /
$num
≈≈0 2
]
≈≈2 3
=
≈≈4 5

index_x_s0
≈≈6 @
+
≈≈A B
$num
≈≈C D
;
≈≈D E
this
∆∆ 
.
∆∆ 
	triangles
∆∆ "
[
∆∆" #

index_x_s1
∆∆# -
+
∆∆. /
$num
∆∆0 2
]
∆∆2 3
=
∆∆4 5

index_x_s0
∆∆6 @
+
∆∆A B
$num
∆∆C D
;
∆∆D E
this
«« 
.
«« 
	triangles
«« "
[
««" #

index_x_s1
««# -
+
««. /
$num
««0 2
]
««2 3
=
««4 5

index_x_s0
««6 @
+
««A B
$num
««C D
;
««D E
this
»» 
.
»» 
	triangles
»» "
[
»»" #

index_x_s1
»»# -
+
»». /
$num
»»0 2
]
»»2 3
=
»»4 5

index_x_s0
»»6 @
+
»»A B
$num
»»C D
;
»»D E
this
ÀÀ 
.
ÀÀ 
	triangles
ÀÀ "
[
ÀÀ" #

index_x_s1
ÀÀ# -
+
ÀÀ. /
$num
ÀÀ0 2
]
ÀÀ2 3
=
ÀÀ4 5

index_x_s0
ÀÀ6 @
+
ÀÀA B
$num
ÀÀC D
;
ÀÀD E
this
ÃÃ 
.
ÃÃ 
	triangles
ÃÃ "
[
ÃÃ" #

index_x_s1
ÃÃ# -
+
ÃÃ. /
$num
ÃÃ0 2
]
ÃÃ2 3
=
ÃÃ4 5

index_x_s0
ÃÃ6 @
+
ÃÃA B
$num
ÃÃC D
;
ÃÃD E
this
ÕÕ 
.
ÕÕ 
	triangles
ÕÕ "
[
ÕÕ" #

index_x_s1
ÕÕ# -
+
ÕÕ. /
$num
ÕÕ0 2
]
ÕÕ2 3
=
ÕÕ4 5

index_x_s0
ÕÕ6 @
+
ÕÕA B
$num
ÕÕC D
;
ÕÕD E
this
ŒŒ 
.
ŒŒ 
	triangles
ŒŒ "
[
ŒŒ" #

index_x_s1
ŒŒ# -
+
ŒŒ. /
$num
ŒŒ0 2
]
ŒŒ2 3
=
ŒŒ4 5

index_x_s0
ŒŒ6 @
+
ŒŒA B
$num
ŒŒC D
;
ŒŒD E
this
œœ 
.
œœ 
	triangles
œœ "
[
œœ" #

index_x_s1
œœ# -
+
œœ. /
$num
œœ0 2
]
œœ2 3
=
œœ4 5

index_x_s0
œœ6 @
+
œœA B
$num
œœC D
;
œœD E
this
–– 
.
–– 
	triangles
–– "
[
––" #

index_x_s1
––# -
+
––. /
$num
––0 2
]
––2 3
=
––4 5

index_x_s0
––6 @
+
––A B
$num
––C D
;
––D E
this
”” 
.
”” 
	triangles
”” "
[
””" #

index_x_s1
””# -
+
””. /
$num
””0 2
]
””2 3
=
””4 5

index_x_s0
””6 @
+
””A B
$num
””C D
;
””D E
this
‘‘ 
.
‘‘ 
	triangles
‘‘ "
[
‘‘" #

index_x_s1
‘‘# -
+
‘‘. /
$num
‘‘0 2
]
‘‘2 3
=
‘‘4 5

index_x_s0
‘‘6 @
+
‘‘A B
$num
‘‘C D
;
‘‘D E
this
’’ 
.
’’ 
	triangles
’’ "
[
’’" #

index_x_s1
’’# -
+
’’. /
$num
’’0 2
]
’’2 3
=
’’4 5

index_x_s0
’’6 @
+
’’A B
$num
’’C D
;
’’D E
this
÷÷ 
.
÷÷ 
	triangles
÷÷ "
[
÷÷" #

index_x_s1
÷÷# -
+
÷÷. /
$num
÷÷0 2
]
÷÷2 3
=
÷÷4 5

index_x_s0
÷÷6 @
+
÷÷A B
$num
÷÷C D
;
÷÷D E
this
◊◊ 
.
◊◊ 
	triangles
◊◊ "
[
◊◊" #

index_x_s1
◊◊# -
+
◊◊. /
$num
◊◊0 2
]
◊◊2 3
=
◊◊4 5

index_x_s0
◊◊6 @
+
◊◊A B
$num
◊◊C D
;
◊◊D E
this
ÿÿ 
.
ÿÿ 
	triangles
ÿÿ "
[
ÿÿ" #

index_x_s1
ÿÿ# -
+
ÿÿ. /
$num
ÿÿ0 2
]
ÿÿ2 3
=
ÿÿ4 5

index_x_s0
ÿÿ6 @
+
ÿÿA B
$num
ÿÿC D
;
ÿÿD E
}
ŸŸ 

index_x_s0
€€ 
+=
€€ 
s0
€€  
;
€€  !

index_x_s1
‹‹ 
+=
‹‹ 
s1
‹‹  
;
‹‹  !
}
›› 
this
‡‡ 
.
‡‡ 
mesh
‡‡ 
.
‡‡ 
vertices
‡‡ 
=
‡‡  
this
‡‡! %
.
‡‡% &
vertices
‡‡& .
;
‡‡. /
this
·· 
.
·· 
mesh
·· 
.
·· 
normals
·· 
=
·· 
this
··  $
.
··$ %
normals
··% ,
;
··, -
this
‚‚ 
.
‚‚ 
mesh
‚‚ 
.
‚‚ 
tangents
‚‚ 
=
‚‚  
this
‚‚! %
.
‚‚% &
tangents
‚‚& .
;
‚‚. /
this
„„ 
.
„„ 
mesh
„„ 
.
„„ 
	triangles
„„ 
=
„„  !
this
„„" &
.
„„& '
	triangles
„„' 0
;
„„0 1
this
‰‰ 
.
‰‰ 
mesh
‰‰ 
.
‰‰ 
bounds
‰‰ 
=
‰‰ 
s_DefaultBounds
‰‰ .
;
‰‰. /
this
ÂÂ 
.
ÂÂ 
material
ÂÂ 
=
ÂÂ 
null
ÂÂ  
;
ÂÂ  !
}
ÊÊ 	
public
ÓÓ 
void
ÓÓ 
ResizeMeshInfo
ÓÓ "
(
ÓÓ" #
int
ÓÓ# &
size
ÓÓ' +
)
ÓÓ+ ,
{
ÔÔ 	
size
ÛÛ 
=
ÛÛ 
Mathf
ÛÛ 
.
ÛÛ 
Min
ÛÛ 
(
ÛÛ 
size
ÛÛ !
,
ÛÛ! "
$num
ÛÛ# (
)
ÛÛ( )
;
ÛÛ) *
int
ıı 
size_X4
ıı 
=
ıı 
size
ıı 
*
ıı  
$num
ıı! "
;
ıı" #
int
ˆˆ 
size_X6
ˆˆ 
=
ˆˆ 
size
ˆˆ 
*
ˆˆ  
$num
ˆˆ! "
;
ˆˆ" #
int
¯¯ 
previousSize
¯¯ 
=
¯¯ 
this
¯¯ #
.
¯¯# $
vertices
¯¯$ ,
.
¯¯, -
Length
¯¯- 3
/
¯¯4 5
$num
¯¯6 7
;
¯¯7 8
Array
˙˙ 
.
˙˙ 
Resize
˙˙ 
(
˙˙ 
ref
˙˙ 
this
˙˙ !
.
˙˙! "
vertices
˙˙" *
,
˙˙* +
size_X4
˙˙, 3
)
˙˙3 4
;
˙˙4 5
Array
˚˚ 
.
˚˚ 
Resize
˚˚ 
(
˚˚ 
ref
˚˚ 
this
˚˚ !
.
˚˚! "
normals
˚˚" )
,
˚˚) *
size_X4
˚˚+ 2
)
˚˚2 3
;
˚˚3 4
Array
¸¸ 
.
¸¸ 
Resize
¸¸ 
(
¸¸ 
ref
¸¸ 
this
¸¸ !
.
¸¸! "
tangents
¸¸" *
,
¸¸* +
size_X4
¸¸, 3
)
¸¸3 4
;
¸¸4 5
Array
˛˛ 
.
˛˛ 
Resize
˛˛ 
(
˛˛ 
ref
˛˛ 
this
˛˛ !
.
˛˛! "
uvs0
˛˛" &
,
˛˛& '
size_X4
˛˛( /
)
˛˛/ 0
;
˛˛0 1
Array
ˇˇ 
.
ˇˇ 
Resize
ˇˇ 
(
ˇˇ 
ref
ˇˇ 
this
ˇˇ !
.
ˇˇ! "
uvs2
ˇˇ" &
,
ˇˇ& '
size_X4
ˇˇ( /
)
ˇˇ/ 0
;
ˇˇ0 1
Array
ÇÇ 
.
ÇÇ 
Resize
ÇÇ 
(
ÇÇ 
ref
ÇÇ 
this
ÇÇ !
.
ÇÇ! "
colors32
ÇÇ" *
,
ÇÇ* +
size_X4
ÇÇ, 3
)
ÇÇ3 4
;
ÇÇ4 5
Array
ÑÑ 
.
ÑÑ 
Resize
ÑÑ 
(
ÑÑ 
ref
ÑÑ 
this
ÑÑ !
.
ÑÑ! "
	triangles
ÑÑ" +
,
ÑÑ+ ,
size_X6
ÑÑ- 4
)
ÑÑ4 5
;
ÑÑ5 6
if
àà 
(
àà 
size
àà 
<=
àà 
previousSize
àà $
)
àà$ %
{
ââ 
this
ää 
.
ää 
mesh
ää 
.
ää 
	triangles
ää #
=
ää$ %
this
ää& *
.
ää* +
	triangles
ää+ 4
;
ää4 5
this
ãã 
.
ãã 
mesh
ãã 
.
ãã 
vertices
ãã "
=
ãã# $
this
ãã% )
.
ãã) *
vertices
ãã* 2
;
ãã2 3
this
åå 
.
åå 
mesh
åå 
.
åå 
normals
åå !
=
åå" #
this
åå$ (
.
åå( )
normals
åå) 0
;
åå0 1
this
çç 
.
çç 
mesh
çç 
.
çç 
tangents
çç "
=
çç# $
this
çç% )
.
çç) *
tangents
çç* 2
;
çç2 3
return
èè 
;
èè 
}
êê 
for
íí 
(
íí 
int
íí 
i
íí 
=
íí 
previousSize
íí %
;
íí% &
i
íí' (
<
íí) *
size
íí+ /
;
íí/ 0
i
íí1 2
++
íí2 4
)
íí4 5
{
ìì 
int
îî 
index_X4
îî 
=
îî 
i
îî  
*
îî! "
$num
îî# $
;
îî$ %
int
ïï 
index_X6
ïï 
=
ïï 
i
ïï  
*
ïï! "
$num
ïï# $
;
ïï$ %
this
óó 
.
óó 
normals
óó 
[
óó 
$num
óó 
+
óó  
index_X4
óó! )
]
óó) *
=
óó+ ,
s_DefaultNormal
óó- <
;
óó< =
this
òò 
.
òò 
normals
òò 
[
òò 
$num
òò 
+
òò  
index_X4
òò! )
]
òò) *
=
òò+ ,
s_DefaultNormal
òò- <
;
òò< =
this
ôô 
.
ôô 
normals
ôô 
[
ôô 
$num
ôô 
+
ôô  
index_X4
ôô! )
]
ôô) *
=
ôô+ ,
s_DefaultNormal
ôô- <
;
ôô< =
this
öö 
.
öö 
normals
öö 
[
öö 
$num
öö 
+
öö  
index_X4
öö! )
]
öö) *
=
öö+ ,
s_DefaultNormal
öö- <
;
öö< =
this
úú 
.
úú 
tangents
úú 
[
úú 
$num
úú 
+
úú  !
index_X4
úú" *
]
úú* +
=
úú, -
s_DefaultTangent
úú. >
;
úú> ?
this
ùù 
.
ùù 
tangents
ùù 
[
ùù 
$num
ùù 
+
ùù  !
index_X4
ùù" *
]
ùù* +
=
ùù, -
s_DefaultTangent
ùù. >
;
ùù> ?
this
ûû 
.
ûû 
tangents
ûû 
[
ûû 
$num
ûû 
+
ûû  !
index_X4
ûû" *
]
ûû* +
=
ûû, -
s_DefaultTangent
ûû. >
;
ûû> ?
this
üü 
.
üü 
tangents
üü 
[
üü 
$num
üü 
+
üü  !
index_X4
üü" *
]
üü* +
=
üü, -
s_DefaultTangent
üü. >
;
üü> ?
this
¢¢ 
.
¢¢ 
	triangles
¢¢ 
[
¢¢ 
$num
¢¢  
+
¢¢! "
index_X6
¢¢# +
]
¢¢+ ,
=
¢¢- .
$num
¢¢/ 0
+
¢¢1 2
index_X4
¢¢3 ;
;
¢¢; <
this
££ 
.
££ 
	triangles
££ 
[
££ 
$num
££  
+
££! "
index_X6
££# +
]
££+ ,
=
££- .
$num
££/ 0
+
££1 2
index_X4
££3 ;
;
££; <
this
§§ 
.
§§ 
	triangles
§§ 
[
§§ 
$num
§§  
+
§§! "
index_X6
§§# +
]
§§+ ,
=
§§- .
$num
§§/ 0
+
§§1 2
index_X4
§§3 ;
;
§§; <
this
•• 
.
•• 
	triangles
•• 
[
•• 
$num
••  
+
••! "
index_X6
••# +
]
••+ ,
=
••- .
$num
••/ 0
+
••1 2
index_X4
••3 ;
;
••; <
this
¶¶ 
.
¶¶ 
	triangles
¶¶ 
[
¶¶ 
$num
¶¶  
+
¶¶! "
index_X6
¶¶# +
]
¶¶+ ,
=
¶¶- .
$num
¶¶/ 0
+
¶¶1 2
index_X4
¶¶3 ;
;
¶¶; <
this
ßß 
.
ßß 
	triangles
ßß 
[
ßß 
$num
ßß  
+
ßß! "
index_X6
ßß# +
]
ßß+ ,
=
ßß- .
$num
ßß/ 0
+
ßß1 2
index_X4
ßß3 ;
;
ßß; <
}
®® 
this
™™ 
.
™™ 
mesh
™™ 
.
™™ 
vertices
™™ 
=
™™  
this
™™! %
.
™™% &
vertices
™™& .
;
™™. /
this
´´ 
.
´´ 
mesh
´´ 
.
´´ 
normals
´´ 
=
´´ 
this
´´  $
.
´´$ %
normals
´´% ,
;
´´, -
this
¨¨ 
.
¨¨ 
mesh
¨¨ 
.
¨¨ 
tangents
¨¨ 
=
¨¨  
this
¨¨! %
.
¨¨% &
tangents
¨¨& .
;
¨¨. /
this
≠≠ 
.
≠≠ 
mesh
≠≠ 
.
≠≠ 
	triangles
≠≠ 
=
≠≠  !
this
≠≠" &
.
≠≠& '
	triangles
≠≠' 0
;
≠≠0 1
}
ÆÆ 	
public
∂∂ 
void
∂∂ 
ResizeMeshInfo
∂∂ "
(
∂∂" #
int
∂∂# &
size
∂∂' +
,
∂∂+ ,
bool
∂∂- 1
isVolumetric
∂∂2 >
)
∂∂> ?
{
∑∑ 	
int
∏∏ 
s0
∏∏ 
=
∏∏ 
!
∏∏ 
isVolumetric
∏∏ "
?
∏∏# $
$num
∏∏% &
:
∏∏' (
$num
∏∏) *
;
∏∏* +
int
ππ 
s1
ππ 
=
ππ 
!
ππ 
isVolumetric
ππ "
?
ππ# $
$num
ππ% &
:
ππ' (
$num
ππ) +
;
ππ+ ,
size
ºº 
=
ºº 
Mathf
ºº 
.
ºº 
Min
ºº 
(
ºº 
size
ºº !
,
ºº! "
$num
ºº# (
/
ºº) *
s0
ºº+ -
)
ºº- .
;
ºº. /
int
ææ 
size_X4
ææ 
=
ææ 
size
ææ 
*
ææ  
s0
ææ! #
;
ææ# $
int
øø 
size_X6
øø 
=
øø 
size
øø 
*
øø  
s1
øø! #
;
øø# $
int
¡¡ 
previousSize
¡¡ 
=
¡¡ 
this
¡¡ #
.
¡¡# $
vertices
¡¡$ ,
.
¡¡, -
Length
¡¡- 3
/
¡¡4 5
s0
¡¡6 8
;
¡¡8 9
Array
√√ 
.
√√ 
Resize
√√ 
(
√√ 
ref
√√ 
this
√√ !
.
√√! "
vertices
√√" *
,
√√* +
size_X4
√√, 3
)
√√3 4
;
√√4 5
Array
ƒƒ 
.
ƒƒ 
Resize
ƒƒ 
(
ƒƒ 
ref
ƒƒ 
this
ƒƒ !
.
ƒƒ! "
normals
ƒƒ" )
,
ƒƒ) *
size_X4
ƒƒ+ 2
)
ƒƒ2 3
;
ƒƒ3 4
Array
≈≈ 
.
≈≈ 
Resize
≈≈ 
(
≈≈ 
ref
≈≈ 
this
≈≈ !
.
≈≈! "
tangents
≈≈" *
,
≈≈* +
size_X4
≈≈, 3
)
≈≈3 4
;
≈≈4 5
Array
«« 
.
«« 
Resize
«« 
(
«« 
ref
«« 
this
«« !
.
««! "
uvs0
««" &
,
««& '
size_X4
««( /
)
««/ 0
;
««0 1
Array
»» 
.
»» 
Resize
»» 
(
»» 
ref
»» 
this
»» !
.
»»! "
uvs2
»»" &
,
»»& '
size_X4
»»( /
)
»»/ 0
;
»»0 1
Array
ÀÀ 
.
ÀÀ 
Resize
ÀÀ 
(
ÀÀ 
ref
ÀÀ 
this
ÀÀ !
.
ÀÀ! "
colors32
ÀÀ" *
,
ÀÀ* +
size_X4
ÀÀ, 3
)
ÀÀ3 4
;
ÀÀ4 5
Array
ÕÕ 
.
ÕÕ 
Resize
ÕÕ 
(
ÕÕ 
ref
ÕÕ 
this
ÕÕ !
.
ÕÕ! "
	triangles
ÕÕ" +
,
ÕÕ+ ,
size_X6
ÕÕ- 4
)
ÕÕ4 5
;
ÕÕ5 6
if
—— 
(
—— 
size
—— 
<=
—— 
previousSize
—— $
)
——$ %
{
““ 
this
”” 
.
”” 
mesh
”” 
.
”” 
	triangles
”” #
=
””$ %
this
””& *
.
””* +
	triangles
””+ 4
;
””4 5
this
‘‘ 
.
‘‘ 
mesh
‘‘ 
.
‘‘ 
vertices
‘‘ "
=
‘‘# $
this
‘‘% )
.
‘‘) *
vertices
‘‘* 2
;
‘‘2 3
this
’’ 
.
’’ 
mesh
’’ 
.
’’ 
normals
’’ !
=
’’" #
this
’’$ (
.
’’( )
normals
’’) 0
;
’’0 1
this
÷÷ 
.
÷÷ 
mesh
÷÷ 
.
÷÷ 
tangents
÷÷ "
=
÷÷# $
this
÷÷% )
.
÷÷) *
tangents
÷÷* 2
;
÷÷2 3
return
ÿÿ 
;
ÿÿ 
}
ŸŸ 
for
€€ 
(
€€ 
int
€€ 
i
€€ 
=
€€ 
previousSize
€€ %
;
€€% &
i
€€' (
<
€€) *
size
€€+ /
;
€€/ 0
i
€€1 2
++
€€2 4
)
€€4 5
{
‹‹ 
int
›› 
index_X4
›› 
=
›› 
i
››  
*
››! "
s0
››# %
;
››% &
int
ﬁﬁ 
index_X6
ﬁﬁ 
=
ﬁﬁ 
i
ﬁﬁ  
*
ﬁﬁ! "
s1
ﬁﬁ# %
;
ﬁﬁ% &
this
‡‡ 
.
‡‡ 
normals
‡‡ 
[
‡‡ 
$num
‡‡ 
+
‡‡  
index_X4
‡‡! )
]
‡‡) *
=
‡‡+ ,
s_DefaultNormal
‡‡- <
;
‡‡< =
this
·· 
.
·· 
normals
·· 
[
·· 
$num
·· 
+
··  
index_X4
··! )
]
··) *
=
··+ ,
s_DefaultNormal
··- <
;
··< =
this
‚‚ 
.
‚‚ 
normals
‚‚ 
[
‚‚ 
$num
‚‚ 
+
‚‚  
index_X4
‚‚! )
]
‚‚) *
=
‚‚+ ,
s_DefaultNormal
‚‚- <
;
‚‚< =
this
„„ 
.
„„ 
normals
„„ 
[
„„ 
$num
„„ 
+
„„  
index_X4
„„! )
]
„„) *
=
„„+ ,
s_DefaultNormal
„„- <
;
„„< =
this
ÂÂ 
.
ÂÂ 
tangents
ÂÂ 
[
ÂÂ 
$num
ÂÂ 
+
ÂÂ  !
index_X4
ÂÂ" *
]
ÂÂ* +
=
ÂÂ, -
s_DefaultTangent
ÂÂ. >
;
ÂÂ> ?
this
ÊÊ 
.
ÊÊ 
tangents
ÊÊ 
[
ÊÊ 
$num
ÊÊ 
+
ÊÊ  !
index_X4
ÊÊ" *
]
ÊÊ* +
=
ÊÊ, -
s_DefaultTangent
ÊÊ. >
;
ÊÊ> ?
this
ÁÁ 
.
ÁÁ 
tangents
ÁÁ 
[
ÁÁ 
$num
ÁÁ 
+
ÁÁ  !
index_X4
ÁÁ" *
]
ÁÁ* +
=
ÁÁ, -
s_DefaultTangent
ÁÁ. >
;
ÁÁ> ?
this
ËË 
.
ËË 
tangents
ËË 
[
ËË 
$num
ËË 
+
ËË  !
index_X4
ËË" *
]
ËË* +
=
ËË, -
s_DefaultTangent
ËË. >
;
ËË> ?
if
ÍÍ 
(
ÍÍ 
isVolumetric
ÍÍ  
)
ÍÍ  !
{
ÎÎ 
this
ÏÏ 
.
ÏÏ 
normals
ÏÏ  
[
ÏÏ  !
$num
ÏÏ! "
+
ÏÏ# $
index_X4
ÏÏ% -
]
ÏÏ- .
=
ÏÏ/ 0
s_DefaultNormal
ÏÏ1 @
;
ÏÏ@ A
this
ÌÌ 
.
ÌÌ 
normals
ÌÌ  
[
ÌÌ  !
$num
ÌÌ! "
+
ÌÌ# $
index_X4
ÌÌ% -
]
ÌÌ- .
=
ÌÌ/ 0
s_DefaultNormal
ÌÌ1 @
;
ÌÌ@ A
this
ÓÓ 
.
ÓÓ 
normals
ÓÓ  
[
ÓÓ  !
$num
ÓÓ! "
+
ÓÓ# $
index_X4
ÓÓ% -
]
ÓÓ- .
=
ÓÓ/ 0
s_DefaultNormal
ÓÓ1 @
;
ÓÓ@ A
this
ÔÔ 
.
ÔÔ 
normals
ÔÔ  
[
ÔÔ  !
$num
ÔÔ! "
+
ÔÔ# $
index_X4
ÔÔ% -
]
ÔÔ- .
=
ÔÔ/ 0
s_DefaultNormal
ÔÔ1 @
;
ÔÔ@ A
this
ÒÒ 
.
ÒÒ 
tangents
ÒÒ !
[
ÒÒ! "
$num
ÒÒ" #
+
ÒÒ$ %
index_X4
ÒÒ& .
]
ÒÒ. /
=
ÒÒ0 1
s_DefaultTangent
ÒÒ2 B
;
ÒÒB C
this
ÚÚ 
.
ÚÚ 
tangents
ÚÚ !
[
ÚÚ! "
$num
ÚÚ" #
+
ÚÚ$ %
index_X4
ÚÚ& .
]
ÚÚ. /
=
ÚÚ0 1
s_DefaultTangent
ÚÚ2 B
;
ÚÚB C
this
ÛÛ 
.
ÛÛ 
tangents
ÛÛ !
[
ÛÛ! "
$num
ÛÛ" #
+
ÛÛ$ %
index_X4
ÛÛ& .
]
ÛÛ. /
=
ÛÛ0 1
s_DefaultTangent
ÛÛ2 B
;
ÛÛB C
this
ÙÙ 
.
ÙÙ 
tangents
ÙÙ !
[
ÙÙ! "
$num
ÙÙ" #
+
ÙÙ$ %
index_X4
ÙÙ& .
]
ÙÙ. /
=
ÙÙ0 1
s_DefaultTangent
ÙÙ2 B
;
ÙÙB C
}
ıı 
this
¯¯ 
.
¯¯ 
	triangles
¯¯ 
[
¯¯ 
$num
¯¯  
+
¯¯! "
index_X6
¯¯# +
]
¯¯+ ,
=
¯¯- .
$num
¯¯/ 0
+
¯¯1 2
index_X4
¯¯3 ;
;
¯¯; <
this
˘˘ 
.
˘˘ 
	triangles
˘˘ 
[
˘˘ 
$num
˘˘  
+
˘˘! "
index_X6
˘˘# +
]
˘˘+ ,
=
˘˘- .
$num
˘˘/ 0
+
˘˘1 2
index_X4
˘˘3 ;
;
˘˘; <
this
˙˙ 
.
˙˙ 
	triangles
˙˙ 
[
˙˙ 
$num
˙˙  
+
˙˙! "
index_X6
˙˙# +
]
˙˙+ ,
=
˙˙- .
$num
˙˙/ 0
+
˙˙1 2
index_X4
˙˙3 ;
;
˙˙; <
this
˚˚ 
.
˚˚ 
	triangles
˚˚ 
[
˚˚ 
$num
˚˚  
+
˚˚! "
index_X6
˚˚# +
]
˚˚+ ,
=
˚˚- .
$num
˚˚/ 0
+
˚˚1 2
index_X4
˚˚3 ;
;
˚˚; <
this
¸¸ 
.
¸¸ 
	triangles
¸¸ 
[
¸¸ 
$num
¸¸  
+
¸¸! "
index_X6
¸¸# +
]
¸¸+ ,
=
¸¸- .
$num
¸¸/ 0
+
¸¸1 2
index_X4
¸¸3 ;
;
¸¸; <
this
˝˝ 
.
˝˝ 
	triangles
˝˝ 
[
˝˝ 
$num
˝˝  
+
˝˝! "
index_X6
˝˝# +
]
˝˝+ ,
=
˝˝- .
$num
˝˝/ 0
+
˝˝1 2
index_X4
˝˝3 ;
;
˝˝; <
if
ˇˇ 
(
ˇˇ 
isVolumetric
ˇˇ  
)
ˇˇ  !
{
ÄÄ 
this
ÇÇ 
.
ÇÇ 
	triangles
ÇÇ "
[
ÇÇ" #
index_X6
ÇÇ# +
+
ÇÇ, -
$num
ÇÇ. /
]
ÇÇ/ 0
=
ÇÇ1 2
index_X4
ÇÇ3 ;
+
ÇÇ< =
$num
ÇÇ> ?
;
ÇÇ? @
this
ÉÉ 
.
ÉÉ 
	triangles
ÉÉ "
[
ÉÉ" #
index_X6
ÉÉ# +
+
ÉÉ, -
$num
ÉÉ. /
]
ÉÉ/ 0
=
ÉÉ1 2
index_X4
ÉÉ3 ;
+
ÉÉ< =
$num
ÉÉ> ?
;
ÉÉ? @
this
ÑÑ 
.
ÑÑ 
	triangles
ÑÑ "
[
ÑÑ" #
index_X6
ÑÑ# +
+
ÑÑ, -
$num
ÑÑ. /
]
ÑÑ/ 0
=
ÑÑ1 2
index_X4
ÑÑ3 ;
+
ÑÑ< =
$num
ÑÑ> ?
;
ÑÑ? @
this
ÖÖ 
.
ÖÖ 
	triangles
ÖÖ "
[
ÖÖ" #
index_X6
ÖÖ# +
+
ÖÖ, -
$num
ÖÖ. /
]
ÖÖ/ 0
=
ÖÖ1 2
index_X4
ÖÖ3 ;
+
ÖÖ< =
$num
ÖÖ> ?
;
ÖÖ? @
this
ÜÜ 
.
ÜÜ 
	triangles
ÜÜ "
[
ÜÜ" #
index_X6
ÜÜ# +
+
ÜÜ, -
$num
ÜÜ. 0
]
ÜÜ0 1
=
ÜÜ2 3
index_X4
ÜÜ4 <
+
ÜÜ= >
$num
ÜÜ? @
;
ÜÜ@ A
this
áá 
.
áá 
	triangles
áá "
[
áá" #
index_X6
áá# +
+
áá, -
$num
áá. 0
]
áá0 1
=
áá2 3
index_X4
áá4 <
+
áá= >
$num
áá? @
;
áá@ A
this
ää 
.
ää 
	triangles
ää "
[
ää" #
index_X6
ää# +
+
ää, -
$num
ää. 0
]
ää0 1
=
ää2 3
index_X4
ää4 <
+
ää= >
$num
ää? @
;
ää@ A
this
ãã 
.
ãã 
	triangles
ãã "
[
ãã" #
index_X6
ãã# +
+
ãã, -
$num
ãã. 0
]
ãã0 1
=
ãã2 3
index_X4
ãã4 <
+
ãã= >
$num
ãã? @
;
ãã@ A
this
åå 
.
åå 
	triangles
åå "
[
åå" #
index_X6
åå# +
+
åå, -
$num
åå. 0
]
åå0 1
=
åå2 3
index_X4
åå4 <
+
åå= >
$num
åå? @
;
åå@ A
this
çç 
.
çç 
	triangles
çç "
[
çç" #
index_X6
çç# +
+
çç, -
$num
çç. 0
]
çç0 1
=
çç2 3
index_X4
çç4 <
+
çç= >
$num
çç? @
;
çç@ A
this
éé 
.
éé 
	triangles
éé "
[
éé" #
index_X6
éé# +
+
éé, -
$num
éé. 0
]
éé0 1
=
éé2 3
index_X4
éé4 <
+
éé= >
$num
éé? @
;
éé@ A
this
èè 
.
èè 
	triangles
èè "
[
èè" #
index_X6
èè# +
+
èè, -
$num
èè. 0
]
èè0 1
=
èè2 3
index_X4
èè4 <
+
èè= >
$num
èè? @
;
èè@ A
this
íí 
.
íí 
	triangles
íí "
[
íí" #
index_X6
íí# +
+
íí, -
$num
íí. 0
]
íí0 1
=
íí2 3
index_X4
íí4 <
+
íí= >
$num
íí? @
;
íí@ A
this
ìì 
.
ìì 
	triangles
ìì "
[
ìì" #
index_X6
ìì# +
+
ìì, -
$num
ìì. 0
]
ìì0 1
=
ìì2 3
index_X4
ìì4 <
+
ìì= >
$num
ìì? @
;
ìì@ A
this
îî 
.
îî 
	triangles
îî "
[
îî" #
index_X6
îî# +
+
îî, -
$num
îî. 0
]
îî0 1
=
îî2 3
index_X4
îî4 <
+
îî= >
$num
îî? @
;
îî@ A
this
ïï 
.
ïï 
	triangles
ïï "
[
ïï" #
index_X6
ïï# +
+
ïï, -
$num
ïï. 0
]
ïï0 1
=
ïï2 3
index_X4
ïï4 <
+
ïï= >
$num
ïï? @
;
ïï@ A
this
ññ 
.
ññ 
	triangles
ññ "
[
ññ" #
index_X6
ññ# +
+
ññ, -
$num
ññ. 0
]
ññ0 1
=
ññ2 3
index_X4
ññ4 <
+
ññ= >
$num
ññ? @
;
ññ@ A
this
óó 
.
óó 
	triangles
óó "
[
óó" #
index_X6
óó# +
+
óó, -
$num
óó. 0
]
óó0 1
=
óó2 3
index_X4
óó4 <
+
óó= >
$num
óó? @
;
óó@ A
this
öö 
.
öö 
	triangles
öö "
[
öö" #
index_X6
öö# +
+
öö, -
$num
öö. 0
]
öö0 1
=
öö2 3
index_X4
öö4 <
+
öö= >
$num
öö? @
;
öö@ A
this
õõ 
.
õõ 
	triangles
õõ "
[
õõ" #
index_X6
õõ# +
+
õõ, -
$num
õõ. 0
]
õõ0 1
=
õõ2 3
index_X4
õõ4 <
+
õõ= >
$num
õõ? @
;
õõ@ A
this
úú 
.
úú 
	triangles
úú "
[
úú" #
index_X6
úú# +
+
úú, -
$num
úú. 0
]
úú0 1
=
úú2 3
index_X4
úú4 <
+
úú= >
$num
úú? @
;
úú@ A
this
ùù 
.
ùù 
	triangles
ùù "
[
ùù" #
index_X6
ùù# +
+
ùù, -
$num
ùù. 0
]
ùù0 1
=
ùù2 3
index_X4
ùù4 <
+
ùù= >
$num
ùù? @
;
ùù@ A
this
ûû 
.
ûû 
	triangles
ûû "
[
ûû" #
index_X6
ûû# +
+
ûû, -
$num
ûû. 0
]
ûû0 1
=
ûû2 3
index_X4
ûû4 <
+
ûû= >
$num
ûû? @
;
ûû@ A
this
üü 
.
üü 
	triangles
üü "
[
üü" #
index_X6
üü# +
+
üü, -
$num
üü. 0
]
üü0 1
=
üü2 3
index_X4
üü4 <
+
üü= >
$num
üü? @
;
üü@ A
this
¢¢ 
.
¢¢ 
	triangles
¢¢ "
[
¢¢" #
index_X6
¢¢# +
+
¢¢, -
$num
¢¢. 0
]
¢¢0 1
=
¢¢2 3
index_X4
¢¢4 <
+
¢¢= >
$num
¢¢? @
;
¢¢@ A
this
££ 
.
££ 
	triangles
££ "
[
££" #
index_X6
££# +
+
££, -
$num
££. 0
]
££0 1
=
££2 3
index_X4
££4 <
+
££= >
$num
££? @
;
££@ A
this
§§ 
.
§§ 
	triangles
§§ "
[
§§" #
index_X6
§§# +
+
§§, -
$num
§§. 0
]
§§0 1
=
§§2 3
index_X4
§§4 <
+
§§= >
$num
§§? @
;
§§@ A
this
•• 
.
•• 
	triangles
•• "
[
••" #
index_X6
••# +
+
••, -
$num
••. 0
]
••0 1
=
••2 3
index_X4
••4 <
+
••= >
$num
••? @
;
••@ A
this
¶¶ 
.
¶¶ 
	triangles
¶¶ "
[
¶¶" #
index_X6
¶¶# +
+
¶¶, -
$num
¶¶. 0
]
¶¶0 1
=
¶¶2 3
index_X4
¶¶4 <
+
¶¶= >
$num
¶¶? @
;
¶¶@ A
this
ßß 
.
ßß 
	triangles
ßß "
[
ßß" #
index_X6
ßß# +
+
ßß, -
$num
ßß. 0
]
ßß0 1
=
ßß2 3
index_X4
ßß4 <
+
ßß= >
$num
ßß? @
;
ßß@ A
}
®® 
}
©© 
this
´´ 
.
´´ 
mesh
´´ 
.
´´ 
vertices
´´ 
=
´´  
this
´´! %
.
´´% &
vertices
´´& .
;
´´. /
this
¨¨ 
.
¨¨ 
mesh
¨¨ 
.
¨¨ 
normals
¨¨ 
=
¨¨ 
this
¨¨  $
.
¨¨$ %
normals
¨¨% ,
;
¨¨, -
this
≠≠ 
.
≠≠ 
mesh
≠≠ 
.
≠≠ 
tangents
≠≠ 
=
≠≠  
this
≠≠! %
.
≠≠% &
tangents
≠≠& .
;
≠≠. /
this
ÆÆ 
.
ÆÆ 
mesh
ÆÆ 
.
ÆÆ 
	triangles
ÆÆ 
=
ÆÆ  !
this
ÆÆ" &
.
ÆÆ& '
	triangles
ÆÆ' 0
;
ÆÆ0 1
}
ØØ 	
public
µµ 
void
µµ 
Clear
µµ 
(
µµ 
)
µµ 
{
∂∂ 	
if
∑∑ 
(
∑∑ 
this
∑∑ 
.
∑∑ 
vertices
∑∑ 
==
∑∑  
null
∑∑! %
)
∑∑% &
return
∑∑' -
;
∑∑- .
Array
ππ 
.
ππ 
Clear
ππ 
(
ππ 
this
ππ 
.
ππ 
vertices
ππ %
,
ππ% &
$num
ππ' (
,
ππ( )
this
ππ* .
.
ππ. /
vertices
ππ/ 7
.
ππ7 8
Length
ππ8 >
)
ππ> ?
;
ππ? @
this
∫∫ 
.
∫∫ 
vertexCount
∫∫ 
=
∫∫ 
$num
∫∫  
;
∫∫  !
if
ºº 
(
ºº 
this
ºº 
.
ºº 
mesh
ºº 
!=
ºº 
null
ºº !
)
ºº! "
this
ΩΩ 
.
ΩΩ 
mesh
ΩΩ 
.
ΩΩ 
vertices
ΩΩ "
=
ΩΩ# $
this
ΩΩ% )
.
ΩΩ) *
vertices
ΩΩ* 2
;
ΩΩ2 3
}
ææ 	
public
ƒƒ 
void
ƒƒ 
Clear
ƒƒ 
(
ƒƒ 
bool
ƒƒ 
uploadChanges
ƒƒ ,
)
ƒƒ, -
{
≈≈ 	
if
∆∆ 
(
∆∆ 
this
∆∆ 
.
∆∆ 
vertices
∆∆ 
==
∆∆  
null
∆∆! %
)
∆∆% &
return
∆∆' -
;
∆∆- .
Array
»» 
.
»» 
Clear
»» 
(
»» 
this
»» 
.
»» 
vertices
»» %
,
»»% &
$num
»»' (
,
»»( )
this
»»* .
.
»». /
vertices
»»/ 7
.
»»7 8
Length
»»8 >
)
»»> ?
;
»»? @
this
…… 
.
…… 
vertexCount
…… 
=
…… 
$num
……  
;
……  !
if
ÀÀ 
(
ÀÀ 
uploadChanges
ÀÀ 
&&
ÀÀ  
this
ÀÀ! %
.
ÀÀ% &
mesh
ÀÀ& *
!=
ÀÀ+ -
null
ÀÀ. 2
)
ÀÀ2 3
this
ÃÃ 
.
ÃÃ 
mesh
ÃÃ 
.
ÃÃ 
vertices
ÃÃ "
=
ÃÃ# $
this
ÃÃ% )
.
ÃÃ) *
vertices
ÃÃ* 2
;
ÃÃ2 3
if
ŒŒ 
(
ŒŒ 
this
ŒŒ 
.
ŒŒ 
mesh
ŒŒ 
!=
ŒŒ 
null
ŒŒ !
)
ŒŒ! "
this
œœ 
.
œœ 
mesh
œœ 
.
œœ 
bounds
œœ  
=
œœ! "
s_DefaultBounds
œœ# 2
;
œœ2 3
}
–– 	
public
÷÷ 
void
÷÷ !
ClearUnusedVertices
÷÷ '
(
÷÷' (
)
÷÷( )
{
◊◊ 	
int
ÿÿ 
length
ÿÿ 
=
ÿÿ 
vertices
ÿÿ !
.
ÿÿ! "
Length
ÿÿ" (
-
ÿÿ) *
vertexCount
ÿÿ+ 6
;
ÿÿ6 7
if
⁄⁄ 
(
⁄⁄ 
length
⁄⁄ 
>
⁄⁄ 
$num
⁄⁄ 
)
⁄⁄ 
Array
€€ 
.
€€ 
Clear
€€ 
(
€€ 
vertices
€€ $
,
€€$ %
vertexCount
€€& 1
,
€€1 2
length
€€3 9
)
€€9 :
;
€€: ;
}
‹‹ 	
public
„„ 
void
„„ !
ClearUnusedVertices
„„ '
(
„„' (
int
„„( +

startIndex
„„, 6
)
„„6 7
{
‰‰ 	
int
ÂÂ 
length
ÂÂ 
=
ÂÂ 
this
ÂÂ 
.
ÂÂ 
vertices
ÂÂ &
.
ÂÂ& '
Length
ÂÂ' -
-
ÂÂ. /

startIndex
ÂÂ0 :
;
ÂÂ: ;
if
ÁÁ 
(
ÁÁ 
length
ÁÁ 
>
ÁÁ 
$num
ÁÁ 
)
ÁÁ 
Array
ËË 
.
ËË 
Clear
ËË 
(
ËË 
this
ËË  
.
ËË  !
vertices
ËË! )
,
ËË) *

startIndex
ËË+ 5
,
ËË5 6
length
ËË7 =
)
ËË= >
;
ËË> ?
}
ÈÈ 	
public
 
void
 !
ClearUnusedVertices
 '
(
' (
int
( +

startIndex
, 6
,
6 7
bool
8 <

updateMesh
= G
)
G H
{
ÒÒ 	
int
ÚÚ 
length
ÚÚ 
=
ÚÚ 
this
ÚÚ 
.
ÚÚ 
vertices
ÚÚ &
.
ÚÚ& '
Length
ÚÚ' -
-
ÚÚ. /

startIndex
ÚÚ0 :
;
ÚÚ: ;
if
ÙÙ 
(
ÙÙ 
length
ÙÙ 
>
ÙÙ 
$num
ÙÙ 
)
ÙÙ 
Array
ıı 
.
ıı 
Clear
ıı 
(
ıı 
this
ıı  
.
ıı  !
vertices
ıı! )
,
ıı) *

startIndex
ıı+ 5
,
ıı5 6
length
ıı7 =
)
ıı= >
;
ıı> ?
if
˜˜ 
(
˜˜ 

updateMesh
˜˜ 
&&
˜˜ 
mesh
˜˜ "
!=
˜˜# %
null
˜˜& *
)
˜˜* +
this
¯¯ 
.
¯¯ 
mesh
¯¯ 
.
¯¯ 
vertices
¯¯ "
=
¯¯# $
this
¯¯% )
.
¯¯) *
vertices
¯¯* 2
;
¯¯2 3
}
˘˘ 	
public
¸¸ 
void
¸¸ 
SortGeometry
¸¸  
(
¸¸! " 
VertexSortingOrder
¸¸" 4
order
¸¸5 :
)
¸¸: ;
{
˝˝ 	
switch
˛˛ 
(
˛˛ 
order
˛˛ 
)
˛˛ 
{
ˇˇ 
case
ÄÄ  
VertexSortingOrder
ÄÄ '
.
ÄÄ' (
Normal
ÄÄ( .
:
ÄÄ. /
break
ÇÇ 
;
ÇÇ 
case
ÉÉ  
VertexSortingOrder
ÉÉ '
.
ÉÉ' (
Reverse
ÉÉ( /
:
ÉÉ/ 0
int
ÑÑ 
size
ÑÑ 
=
ÑÑ 
vertexCount
ÑÑ *
/
ÑÑ+ ,
$num
ÑÑ- .
;
ÑÑ. /
for
ÖÖ 
(
ÖÖ 
int
ÖÖ 
i
ÖÖ 
=
ÖÖ  
$num
ÖÖ! "
;
ÖÖ" #
i
ÖÖ$ %
<
ÖÖ& '
size
ÖÖ( ,
;
ÖÖ, -
i
ÖÖ. /
++
ÖÖ/ 1
)
ÖÖ1 2
{
ÜÜ 
int
áá 
src
áá 
=
áá  !
i
áá" #
*
áá$ %
$num
áá& '
;
áá' (
int
àà 
dst
àà 
=
àà  !
(
àà" #
size
àà# '
-
àà( )
i
àà* +
-
àà, -
$num
àà. /
)
àà/ 0
*
àà1 2
$num
àà3 4
;
àà4 5
if
ää 
(
ää 
src
ää 
<
ää  !
dst
ää" %
)
ää% &
SwapVertexData
ãã *
(
ãã* +
src
ãã+ .
,
ãã. /
dst
ãã0 3
)
ãã3 4
;
ãã4 5
}
çç 
break
éé 
;
éé 
}
íí 
}
ìì 	
public
öö 
void
öö 
SortGeometry
öö  
(
öö  !
IList
öö! &
<
öö& '
int
öö' *
>
öö* +
sortingOrder
öö, 8
)
öö8 9
{
õõ 	
int
ùù 

indexCount
ùù 
=
ùù 
sortingOrder
ùù )
.
ùù) *
Count
ùù* /
;
ùù/ 0
if
üü 
(
üü 

indexCount
üü 
*
üü 
$num
üü 
>
üü  
vertices
üü! )
.
üü) *
Length
üü* 0
)
üü0 1
return
üü2 8
;
üü8 9
int
°° 
	src_index
°° 
;
°° 
for
££ 
(
££ 
int
££ 
	dst_index
££ 
=
££  
$num
££! "
;
££" #
	dst_index
££$ -
<
££. /

indexCount
££0 :
;
££: ;
	dst_index
££< E
++
££E G
)
££G H
{
§§ 
	src_index
•• 
=
•• 
sortingOrder
•• (
[
••( )
	dst_index
••) 2
]
••2 3
;
••3 4
while
ßß 
(
ßß 
	src_index
ßß  
<
ßß! "
	dst_index
ßß# ,
)
ßß, -
{
®® 
	src_index
©© 
=
©© 
sortingOrder
©©  ,
[
©©, -
	src_index
©©- 6
]
©©6 7
;
©©7 8
}
™™ 
if
≠≠ 
(
≠≠ 
	src_index
≠≠ 
!=
≠≠  
	dst_index
≠≠! *
)
≠≠* +
SwapVertexData
ÆÆ "
(
ÆÆ" #
	src_index
ÆÆ# ,
*
ÆÆ- .
$num
ÆÆ/ 0
,
ÆÆ0 1
	dst_index
ÆÆ2 ;
*
ÆÆ< =
$num
ÆÆ> ?
)
ÆÆ? @
;
ÆÆ@ A
}
±± 
}
≤≤ 	
public
∫∫ 
void
∫∫ 
SwapVertexData
∫∫ "
(
∫∫" #
int
∫∫# &
src
∫∫' *
,
∫∫* +
int
∫∫, /
dst
∫∫0 3
)
∫∫3 4
{
ªª 	
int
ºº 
	src_Index
ºº 
=
ºº 
src
ºº 
;
ºº  
int
ΩΩ 
	dst_Index
ΩΩ 
=
ΩΩ 
dst
ΩΩ 
;
ΩΩ  
Vector3
¿¿ 
vertex
¿¿ 
;
¿¿ 
vertex
¡¡ 
=
¡¡ 
vertices
¡¡ 
[
¡¡ 
	dst_Index
¡¡ '
+
¡¡( )
$num
¡¡* +
]
¡¡+ ,
;
¡¡, -
vertices
¬¬ 
[
¬¬ 
	dst_Index
¬¬ 
+
¬¬  
$num
¬¬! "
]
¬¬" #
=
¬¬$ %
vertices
¬¬& .
[
¬¬. /
	src_Index
¬¬/ 8
+
¬¬9 :
$num
¬¬; <
]
¬¬< =
;
¬¬= >
vertices
√√ 
[
√√ 
	src_Index
√√ 
+
√√  
$num
√√! "
]
√√" #
=
√√$ %
vertex
√√& ,
;
√√, -
vertex
≈≈ 
=
≈≈ 
vertices
≈≈ 
[
≈≈ 
	dst_Index
≈≈ '
+
≈≈( )
$num
≈≈* +
]
≈≈+ ,
;
≈≈, -
vertices
∆∆ 
[
∆∆ 
	dst_Index
∆∆ 
+
∆∆  
$num
∆∆! "
]
∆∆" #
=
∆∆$ %
vertices
∆∆& .
[
∆∆. /
	src_Index
∆∆/ 8
+
∆∆9 :
$num
∆∆; <
]
∆∆< =
;
∆∆= >
vertices
«« 
[
«« 
	src_Index
«« 
+
««  
$num
««! "
]
««" #
=
««$ %
vertex
««& ,
;
««, -
vertex
…… 
=
…… 
vertices
…… 
[
…… 
	dst_Index
…… '
+
……( )
$num
……* +
]
……+ ,
;
……, -
vertices
   
[
   
	dst_Index
   
+
    
$num
  ! "
]
  " #
=
  $ %
vertices
  & .
[
  . /
	src_Index
  / 8
+
  9 :
$num
  ; <
]
  < =
;
  = >
vertices
ÀÀ 
[
ÀÀ 
	src_Index
ÀÀ 
+
ÀÀ  
$num
ÀÀ! "
]
ÀÀ" #
=
ÀÀ$ %
vertex
ÀÀ& ,
;
ÀÀ, -
vertex
ÕÕ 
=
ÕÕ 
vertices
ÕÕ 
[
ÕÕ 
	dst_Index
ÕÕ '
+
ÕÕ( )
$num
ÕÕ* +
]
ÕÕ+ ,
;
ÕÕ, -
vertices
ŒŒ 
[
ŒŒ 
	dst_Index
ŒŒ 
+
ŒŒ  
$num
ŒŒ! "
]
ŒŒ" #
=
ŒŒ$ %
vertices
ŒŒ& .
[
ŒŒ. /
	src_Index
ŒŒ/ 8
+
ŒŒ9 :
$num
ŒŒ; <
]
ŒŒ< =
;
ŒŒ= >
vertices
œœ 
[
œœ 
	src_Index
œœ 
+
œœ  
$num
œœ! "
]
œœ" #
=
œœ$ %
vertex
œœ& ,
;
œœ, -
Vector2
”” 
uvs
”” 
;
”” 
uvs
‘‘ 
=
‘‘ 
uvs0
‘‘ 
[
‘‘ 
	dst_Index
‘‘  
+
‘‘! "
$num
‘‘# $
]
‘‘$ %
;
‘‘% &
uvs0
’’ 
[
’’ 
	dst_Index
’’ 
+
’’ 
$num
’’ 
]
’’ 
=
’’  !
uvs0
’’" &
[
’’& '
	src_Index
’’' 0
+
’’1 2
$num
’’3 4
]
’’4 5
;
’’5 6
uvs0
÷÷ 
[
÷÷ 
	src_Index
÷÷ 
+
÷÷ 
$num
÷÷ 
]
÷÷ 
=
÷÷  !
uvs
÷÷" %
;
÷÷% &
uvs
ÿÿ 
=
ÿÿ 
uvs0
ÿÿ 
[
ÿÿ 
	dst_Index
ÿÿ  
+
ÿÿ! "
$num
ÿÿ# $
]
ÿÿ$ %
;
ÿÿ% &
uvs0
ŸŸ 
[
ŸŸ 
	dst_Index
ŸŸ 
+
ŸŸ 
$num
ŸŸ 
]
ŸŸ 
=
ŸŸ  !
uvs0
ŸŸ" &
[
ŸŸ& '
	src_Index
ŸŸ' 0
+
ŸŸ1 2
$num
ŸŸ3 4
]
ŸŸ4 5
;
ŸŸ5 6
uvs0
⁄⁄ 
[
⁄⁄ 
	src_Index
⁄⁄ 
+
⁄⁄ 
$num
⁄⁄ 
]
⁄⁄ 
=
⁄⁄  !
uvs
⁄⁄" %
;
⁄⁄% &
uvs
‹‹ 
=
‹‹ 
uvs0
‹‹ 
[
‹‹ 
	dst_Index
‹‹  
+
‹‹! "
$num
‹‹# $
]
‹‹$ %
;
‹‹% &
uvs0
›› 
[
›› 
	dst_Index
›› 
+
›› 
$num
›› 
]
›› 
=
››  !
uvs0
››" &
[
››& '
	src_Index
››' 0
+
››1 2
$num
››3 4
]
››4 5
;
››5 6
uvs0
ﬁﬁ 
[
ﬁﬁ 
	src_Index
ﬁﬁ 
+
ﬁﬁ 
$num
ﬁﬁ 
]
ﬁﬁ 
=
ﬁﬁ  !
uvs
ﬁﬁ" %
;
ﬁﬁ% &
uvs
‡‡ 
=
‡‡ 
uvs0
‡‡ 
[
‡‡ 
	dst_Index
‡‡  
+
‡‡! "
$num
‡‡# $
]
‡‡$ %
;
‡‡% &
uvs0
·· 
[
·· 
	dst_Index
·· 
+
·· 
$num
·· 
]
·· 
=
··  !
uvs0
··" &
[
··& '
	src_Index
··' 0
+
··1 2
$num
··3 4
]
··4 5
;
··5 6
uvs0
‚‚ 
[
‚‚ 
	src_Index
‚‚ 
+
‚‚ 
$num
‚‚ 
]
‚‚ 
=
‚‚  !
uvs
‚‚" %
;
‚‚% &
uvs
ÂÂ 
=
ÂÂ 
uvs2
ÂÂ 
[
ÂÂ 
	dst_Index
ÂÂ  
+
ÂÂ! "
$num
ÂÂ# $
]
ÂÂ$ %
;
ÂÂ% &
uvs2
ÊÊ 
[
ÊÊ 
	dst_Index
ÊÊ 
+
ÊÊ 
$num
ÊÊ 
]
ÊÊ 
=
ÊÊ  !
uvs2
ÊÊ" &
[
ÊÊ& '
	src_Index
ÊÊ' 0
+
ÊÊ1 2
$num
ÊÊ3 4
]
ÊÊ4 5
;
ÊÊ5 6
uvs2
ÁÁ 
[
ÁÁ 
	src_Index
ÁÁ 
+
ÁÁ 
$num
ÁÁ 
]
ÁÁ 
=
ÁÁ  !
uvs
ÁÁ" %
;
ÁÁ% &
uvs
ÈÈ 
=
ÈÈ 
uvs2
ÈÈ 
[
ÈÈ 
	dst_Index
ÈÈ  
+
ÈÈ! "
$num
ÈÈ# $
]
ÈÈ$ %
;
ÈÈ% &
uvs2
ÍÍ 
[
ÍÍ 
	dst_Index
ÍÍ 
+
ÍÍ 
$num
ÍÍ 
]
ÍÍ 
=
ÍÍ  !
uvs2
ÍÍ" &
[
ÍÍ& '
	src_Index
ÍÍ' 0
+
ÍÍ1 2
$num
ÍÍ3 4
]
ÍÍ4 5
;
ÍÍ5 6
uvs2
ÎÎ 
[
ÎÎ 
	src_Index
ÎÎ 
+
ÎÎ 
$num
ÎÎ 
]
ÎÎ 
=
ÎÎ  !
uvs
ÎÎ" %
;
ÎÎ% &
uvs
ÌÌ 
=
ÌÌ 
uvs2
ÌÌ 
[
ÌÌ 
	dst_Index
ÌÌ  
+
ÌÌ! "
$num
ÌÌ# $
]
ÌÌ$ %
;
ÌÌ% &
uvs2
ÓÓ 
[
ÓÓ 
	dst_Index
ÓÓ 
+
ÓÓ 
$num
ÓÓ 
]
ÓÓ 
=
ÓÓ  !
uvs2
ÓÓ" &
[
ÓÓ& '
	src_Index
ÓÓ' 0
+
ÓÓ1 2
$num
ÓÓ3 4
]
ÓÓ4 5
;
ÓÓ5 6
uvs2
ÔÔ 
[
ÔÔ 
	src_Index
ÔÔ 
+
ÔÔ 
$num
ÔÔ 
]
ÔÔ 
=
ÔÔ  !
uvs
ÔÔ" %
;
ÔÔ% &
uvs
ÒÒ 
=
ÒÒ 
uvs2
ÒÒ 
[
ÒÒ 
	dst_Index
ÒÒ  
+
ÒÒ! "
$num
ÒÒ# $
]
ÒÒ$ %
;
ÒÒ% &
uvs2
ÚÚ 
[
ÚÚ 
	dst_Index
ÚÚ 
+
ÚÚ 
$num
ÚÚ 
]
ÚÚ 
=
ÚÚ  !
uvs2
ÚÚ" &
[
ÚÚ& '
	src_Index
ÚÚ' 0
+
ÚÚ1 2
$num
ÚÚ3 4
]
ÚÚ4 5
;
ÚÚ5 6
uvs2
ÛÛ 
[
ÛÛ 
	src_Index
ÛÛ 
+
ÛÛ 
$num
ÛÛ 
]
ÛÛ 
=
ÛÛ  !
uvs
ÛÛ" %
;
ÛÛ% &
Color32
ˆˆ 
color
ˆˆ 
;
ˆˆ 
color
˜˜ 
=
˜˜ 
colors32
˜˜ 
[
˜˜ 
	dst_Index
˜˜ &
+
˜˜' (
$num
˜˜) *
]
˜˜* +
;
˜˜+ ,
colors32
¯¯ 
[
¯¯ 
	dst_Index
¯¯ 
+
¯¯  
$num
¯¯! "
]
¯¯" #
=
¯¯$ %
colors32
¯¯& .
[
¯¯. /
	src_Index
¯¯/ 8
+
¯¯9 :
$num
¯¯; <
]
¯¯< =
;
¯¯= >
colors32
˘˘ 
[
˘˘ 
	src_Index
˘˘ 
+
˘˘  
$num
˘˘! "
]
˘˘" #
=
˘˘$ %
color
˘˘& +
;
˘˘+ ,
color
˚˚ 
=
˚˚ 
colors32
˚˚ 
[
˚˚ 
	dst_Index
˚˚ &
+
˚˚' (
$num
˚˚) *
]
˚˚* +
;
˚˚+ ,
colors32
¸¸ 
[
¸¸ 
	dst_Index
¸¸ 
+
¸¸  
$num
¸¸! "
]
¸¸" #
=
¸¸$ %
colors32
¸¸& .
[
¸¸. /
	src_Index
¸¸/ 8
+
¸¸9 :
$num
¸¸; <
]
¸¸< =
;
¸¸= >
colors32
˝˝ 
[
˝˝ 
	src_Index
˝˝ 
+
˝˝  
$num
˝˝! "
]
˝˝" #
=
˝˝$ %
color
˝˝& +
;
˝˝+ ,
color
ˇˇ 
=
ˇˇ 
colors32
ˇˇ 
[
ˇˇ 
	dst_Index
ˇˇ &
+
ˇˇ' (
$num
ˇˇ) *
]
ˇˇ* +
;
ˇˇ+ ,
colors32
ÄÄ 
[
ÄÄ 
	dst_Index
ÄÄ 
+
ÄÄ  
$num
ÄÄ! "
]
ÄÄ" #
=
ÄÄ$ %
colors32
ÄÄ& .
[
ÄÄ. /
	src_Index
ÄÄ/ 8
+
ÄÄ9 :
$num
ÄÄ; <
]
ÄÄ< =
;
ÄÄ= >
colors32
ÅÅ 
[
ÅÅ 
	src_Index
ÅÅ 
+
ÅÅ  
$num
ÅÅ! "
]
ÅÅ" #
=
ÅÅ$ %
color
ÅÅ& +
;
ÅÅ+ ,
color
ÉÉ 
=
ÉÉ 
colors32
ÉÉ 
[
ÉÉ 
	dst_Index
ÉÉ &
+
ÉÉ' (
$num
ÉÉ) *
]
ÉÉ* +
;
ÉÉ+ ,
colors32
ÑÑ 
[
ÑÑ 
	dst_Index
ÑÑ 
+
ÑÑ  
$num
ÑÑ! "
]
ÑÑ" #
=
ÑÑ$ %
colors32
ÑÑ& .
[
ÑÑ. /
	src_Index
ÑÑ/ 8
+
ÑÑ9 :
$num
ÑÑ; <
]
ÑÑ< =
;
ÑÑ= >
colors32
ÖÖ 
[
ÖÖ 
	src_Index
ÖÖ 
+
ÖÖ  
$num
ÖÖ! "
]
ÖÖ" #
=
ÖÖ$ %
color
ÖÖ& +
;
ÖÖ+ ,
}
ÜÜ 	
}
¢¢ 
}££ ë
cC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_ObjectPool.cs
	namespace 	
TMPro
 
{ 
internal		 
class		 
TMP_ObjectPool		 !
<		! "
T		" #
>		# $
where		% *
T		+ ,
:		- .
new		/ 2
(		2 3
)		3 4
{

 
private 
readonly 
Stack 
< 
T  
>  !
m_Stack" )
=* +
new, /
Stack0 5
<5 6
T6 7
>7 8
(8 9
)9 :
;: ;
private 
readonly 
UnityAction $
<$ %
T% &
>& '
m_ActionOnGet( 5
;5 6
private 
readonly 
UnityAction $
<$ %
T% &
>& '
m_ActionOnRelease( 9
;9 :
public 
int 
countAll 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
int 
countActive 
{  
get! $
{% &
return' -
countAll. 6
-7 8
countInactive9 F
;F G
}H I
}J K
public 
int 
countInactive  
{! "
get# &
{' (
return) /
m_Stack0 7
.7 8
Count8 =
;= >
}? @
}A B
public 
TMP_ObjectPool 
( 
UnityAction )
<) *
T* +
>+ ,
actionOnGet- 8
,8 9
UnityAction: E
<E F
TF G
>G H
actionOnReleaseI X
)X Y
{ 	
m_ActionOnGet 
= 
actionOnGet '
;' (
m_ActionOnRelease 
= 
actionOnRelease  /
;/ 0
} 	
public 
T 
Get 
( 
) 
{ 	
T 
element 
; 
if 
( 
m_Stack 
. 
Count 
==  
$num! "
)" #
{ 
element 
= 
new 
T 
(  
)  !
;! "
countAll 
++ 
; 
}   
else!! 
{"" 
element## 
=## 
m_Stack## !
.##! "
Pop##" %
(##% &
)##& '
;##' (
}$$ 
if%% 
(%% 
m_ActionOnGet%% 
!=%%  
null%%! %
)%%% &
m_ActionOnGet&& 
(&& 
element&& %
)&&% &
;&&& '
return'' 
element'' 
;'' 
}(( 	
public** 
void** 
Release** 
(** 
T** 
element** %
)**% &
{++ 	
if,, 
(,, 
m_Stack,, 
.,, 
Count,, 
>,, 
$num,,  !
&&,," $
ReferenceEquals,,% 4
(,,4 5
m_Stack,,5 <
.,,< =
Peek,,= A
(,,A B
),,B C
,,,C D
element,,E L
),,L M
),,M N
Debug-- 
.-- 
LogError-- 
(-- 
$str-- k
)--k l
;--l m
if.. 
(.. 
m_ActionOnRelease.. !
!=.." $
null..% )
)..) *
m_ActionOnRelease// !
(//! "
element//" )
)//) *
;//* +
m_Stack00 
.00 
Push00 
(00 
element00  
)00  !
;00! "
}11 	
}22 
}33 ‰P
hC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_UpdateRegistery.cs
	namespace 	
TMPro
 
{		 
public 

class 
TMP_UpdateRegistry #
{ 
private 
static 
TMP_UpdateRegistry )

s_Instance* 4
;4 5
private 
readonly 
List 
< 
ICanvasElement ,
>, - 
m_LayoutRebuildQueue. B
=C D
newE H
ListI M
<M N
ICanvasElementN \
>\ ]
(] ^
)^ _
;_ `
private 
HashSet 
< 
int 
> 
m_LayoutQueueLookup 0
=1 2
new3 6
HashSet7 >
<> ?
int? B
>B C
(C D
)D E
;E F
private 
readonly 
List 
< 
ICanvasElement ,
>, -!
m_GraphicRebuildQueue. C
=D E
newF I
ListJ N
<N O
ICanvasElementO ]
>] ^
(^ _
)_ `
;` a
private 
HashSet 
< 
int 
>  
m_GraphicQueueLookup 1
=2 3
new4 7
HashSet8 ?
<? @
int@ C
>C D
(D E
)E F
;F G
public 
static 
TMP_UpdateRegistry (
instance) 1
{ 	
get 
{   
if!! 
(!! 
TMP_UpdateRegistry!! &
.!!& '

s_Instance!!' 1
==!!2 4
null!!5 9
)!!9 :
TMP_UpdateRegistry"" &
.""& '

s_Instance""' 1
=""2 3
new""4 7
TMP_UpdateRegistry""8 J
(""J K
)""K L
;""L M
return## 
TMP_UpdateRegistry## )
.##) *

s_Instance##* 4
;##4 5
}$$ 
}%% 	
	protected++ 
TMP_UpdateRegistry++ $
(++$ %
)++% &
{,, 	
Canvas.. 
... 
willRenderCanvases.. %
+=..& (1
%PerformUpdateForCanvasRendererObjects..) N
;..N O
}// 	
public66 
static66 
void66 1
%RegisterCanvasElementForLayoutRebuild66 @
(66@ A
ICanvasElement66A O
element66P W
)66W X
{77 	
TMP_UpdateRegistry88 
.88 
instance88 '
.88' (9
-InternalRegisterCanvasElementForLayoutRebuild88( U
(88U V
element88V ]
)88] ^
;88^ _
}99 	
private;; 
bool;; 9
-InternalRegisterCanvasElementForLayoutRebuild;; B
(;;B C
ICanvasElement;;C Q
element;;R Y
);;Y Z
{<< 	
int== 
id== 
=== 
(== 
element== 
as==  
Object==! '
)==' (
.==( )
GetInstanceID==) 6
(==6 7
)==7 8
;==8 9
if?? 
(?? 
m_LayoutQueueLookup?? #
.??# $
Contains??$ ,
(??, -
id??- /
)??/ 0
)??0 1
return@@ 
false@@ 
;@@ 
m_LayoutQueueLookupBB 
.BB  
AddBB  #
(BB# $
idBB$ &
)BB& '
;BB' ( 
m_LayoutRebuildQueueCC  
.CC  !
AddCC! $
(CC$ %
elementCC% ,
)CC, -
;CC- .
returnEE 
trueEE 
;EE 
}FF 	
publicMM 
staticMM 
voidMM 2
&RegisterCanvasElementForGraphicRebuildMM A
(MMA B
ICanvasElementMMB P
elementMMQ X
)MMX Y
{NN 	
TMP_UpdateRegistryOO 
.OO 
instanceOO '
.OO' (:
.InternalRegisterCanvasElementForGraphicRebuildOO( V
(OOV W
elementOOW ^
)OO^ _
;OO_ `
}PP 	
privateRR 
boolRR :
.InternalRegisterCanvasElementForGraphicRebuildRR C
(RRC D
ICanvasElementRRD R
elementRRS Z
)RRZ [
{SS 	
intTT 
idTT 
=TT 
(TT 
elementTT 
asTT  
ObjectTT! '
)TT' (
.TT( )
GetInstanceIDTT) 6
(TT6 7
)TT7 8
;TT8 9
ifVV 
(VV  
m_GraphicQueueLookupVV $
.VV$ %
ContainsVV% -
(VV- .
idVV. 0
)VV0 1
)VV1 2
returnWW 
falseWW 
;WW  
m_GraphicQueueLookupYY  
.YY  !
AddYY! $
(YY$ %
idYY% '
)YY' (
;YY( )!
m_GraphicRebuildQueueZZ !
.ZZ! "
AddZZ" %
(ZZ% &
elementZZ& -
)ZZ- .
;ZZ. /
return\\ 
true\\ 
;\\ 
}]] 	
privatecc 
voidcc 1
%PerformUpdateForCanvasRendererObjectscc :
(cc: ;
)cc; <
{dd 	
forii 
(ii 
intii 
indexii 
=ii 
$numii 
;ii 
indexii  %
<ii& ' 
m_LayoutRebuildQueueii( <
.ii< =
Countii= B
;iiB C
indexiiD I
++iiI K
)iiK L
{jj 
ICanvasElementkk 
elementkk &
=kk' (
TMP_UpdateRegistrykk) ;
.kk; <
instancekk< D
.kkD E 
m_LayoutRebuildQueuekkE Y
[kkY Z
indexkkZ _
]kk_ `
;kk` a
elementmm 
.mm 
Rebuildmm 
(mm  
CanvasUpdatemm  ,
.mm, -
	Prelayoutmm- 6
)mm6 7
;mm7 8
}nn 
ifpp 
(pp  
m_LayoutRebuildQueuepp $
.pp$ %
Countpp% *
>pp+ ,
$numpp- .
)pp. /
{qq  
m_LayoutRebuildQueuerr $
.rr$ %
Clearrr% *
(rr* +
)rr+ ,
;rr, -
m_LayoutQueueLookupss #
.ss# $
Clearss$ )
(ss) *
)ss* +
;ss+ ,
}tt 
forzz 
(zz 
intzz 
indexzz 
=zz 
$numzz 
;zz 
indexzz  %
<zz& '!
m_GraphicRebuildQueuezz( =
.zz= >
Countzz> C
;zzC D
indexzzE J
++zzJ L
)zzL M
{{{ 
ICanvasElement|| 
element|| &
=||' (
TMP_UpdateRegistry||) ;
.||; <
instance||< D
.||D E!
m_GraphicRebuildQueue||E Z
[||Z [
index||[ `
]||` a
;||a b
element~~ 
.~~ 
Rebuild~~ 
(~~  
CanvasUpdate~~  ,
.~~, -
	PreRender~~- 6
)~~6 7
;~~7 8
} 
if
ÇÇ 
(
ÇÇ #
m_GraphicRebuildQueue
ÇÇ %
.
ÇÇ% &
Count
ÇÇ& +
>
ÇÇ, -
$num
ÇÇ. /
)
ÇÇ/ 0
{
ÉÉ #
m_GraphicRebuildQueue
ÑÑ %
.
ÑÑ% &
Clear
ÑÑ& +
(
ÑÑ+ ,
)
ÑÑ, -
;
ÑÑ- ."
m_GraphicQueueLookup
ÖÖ $
.
ÖÖ$ %
Clear
ÖÖ% *
(
ÖÖ* +
)
ÖÖ+ ,
;
ÖÖ, -
}
ÜÜ 
}
áá 	
private
çç 
void
çç 1
#PerformUpdateForMeshRendererObjects
çç 8
(
çç8 9
)
çç9 :
{
éé 	
Debug
èè 
.
èè 
Log
èè 
(
èè 
$str
èè ?
)
èè? @
;
èè@ A
}
êê 	
public
óó 
static
óó 
void
óó /
!UnRegisterCanvasElementForRebuild
óó <
(
óó< =
ICanvasElement
óó= K
element
óóL S
)
óóS T
{
òò 	 
TMP_UpdateRegistry
ôô 
.
ôô 
instance
ôô '
.
ôô' (=
/InternalUnRegisterCanvasElementForLayoutRebuild
ôô( W
(
ôôW X
element
ôôX _
)
ôô_ `
;
ôô` a 
TMP_UpdateRegistry
öö 
.
öö 
instance
öö '
.
öö' (>
0InternalUnRegisterCanvasElementForGraphicRebuild
öö( X
(
ööX Y
element
ööY `
)
öö` a
;
ööa b
}
õõ 	
private
ûû 
void
ûû =
/InternalUnRegisterCanvasElementForLayoutRebuild
ûû D
(
ûûD E
ICanvasElement
ûûE S
element
ûûT [
)
ûû[ \
{
üü 	
int
†† 
id
†† 
=
†† 
(
†† 
element
†† 
as
††  
Object
††! '
)
††' (
.
††( )
GetInstanceID
††) 6
(
††6 7
)
††7 8
;
††8 9 
TMP_UpdateRegistry
££ 
.
££ 
instance
££ '
.
££' ("
m_LayoutRebuildQueue
££( <
.
££< =
Remove
££= C
(
££C D
element
££D K
)
££K L
;
££L M"
m_GraphicQueueLookup
§§  
.
§§  !
Remove
§§! '
(
§§' (
id
§§( *
)
§§* +
;
§§+ ,
}
•• 	
private
®® 
void
®® >
0InternalUnRegisterCanvasElementForGraphicRebuild
®® E
(
®®E F
ICanvasElement
®®F T
element
®®U \
)
®®\ ]
{
©© 	
int
™™ 
id
™™ 
=
™™ 
(
™™ 
element
™™ 
as
™™  
Object
™™! '
)
™™' (
.
™™( )
GetInstanceID
™™) 6
(
™™6 7
)
™™7 8
;
™™8 9 
TMP_UpdateRegistry
≠≠ 
.
≠≠ 
instance
≠≠ '
.
≠≠' (#
m_GraphicRebuildQueue
≠≠( =
.
≠≠= >
Remove
≠≠> D
(
≠≠D E
element
≠≠E L
)
≠≠L M
;
≠≠M N!
m_LayoutQueueLookup
ÆÆ 
.
ÆÆ  
Remove
ÆÆ  &
(
ÆÆ& '
id
ÆÆ' )
)
ÆÆ) *
;
ÆÆ* +
}
ØØ 	
}
∞∞ 
}±± Û$
iC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_ResourcesManager.cs
	namespace 	
TMPro
 
{ 
public 

class 
TMP_ResourceManager $
{ 
private 
static 
readonly 
TMP_ResourceManager  3

s_instance4 >
=? @
newA D
TMP_ResourceManagerE X
(X Y
)Y Z
;Z [
static 
TMP_ResourceManager "
(" #
)# $
{% &
}' (
private 
static 
TMP_Settings #
s_TextSettings$ 2
;2 3
internal 
static 
TMP_Settings $
GetTextSettings% 4
(4 5
)5 6
{ 	
if 
( 
s_TextSettings 
== !
null" &
)& '
{ 
s_TextSettings 
=  
	Resources! *
.* +
Load+ /
</ 0
TMP_Settings0 <
>< =
(= >
$str> L
)L M
;M N
if 
( 
s_TextSettings "
==# %
null& *
)* +
{   -
!TMP_PackageResourceImporterWindow"" 5
.""5 6%
ShowPackageImporterWindow""6 O
(""O P
)""P Q
;""Q R
}## 
}%% 
return'' 
s_TextSettings'' !
;''! "
}(( 	
private.. 
static.. 
readonly.. 
List..  $
<..$ %
TMP_FontAsset..% 2
>..2 3!
s_FontAssetReferences..4 I
=..J K
new..L O
List..P T
<..T U
TMP_FontAsset..U b
>..b c
(..c d
)..d e
;..e f
private// 
static// 
readonly// 

Dictionary//  *
<//* +
int//+ .
,//. /
TMP_FontAsset//0 =
>//= >&
s_FontAssetReferenceLookup//? Y
=//Z [
new//\ _

Dictionary//` j
<//j k
int//k n
,//n o
TMP_FontAsset//p }
>//} ~
(//~ 
)	// Ä
;
//Ä Å
public55 
static55 
void55 
AddFontAsset55 '
(55' (
TMP_FontAsset55( 5
	fontAsset556 ?
)55? @
{66 	
int77 
hashcode77 
=77 
	fontAsset77 $
.77$ %
hashCode77% -
;77- .
if99 
(99 &
s_FontAssetReferenceLookup99 *
.99* +
ContainsKey99+ 6
(996 7
hashcode997 ?
)99? @
)99@ A
return:: 
;:: !
s_FontAssetReferences<< !
.<<! "
Add<<" %
(<<% &
	fontAsset<<& /
)<</ 0
;<<0 1&
s_FontAssetReferenceLookup== &
.==& '
Add==' *
(==* +
hashcode==+ 3
,==3 4
	fontAsset==5 >
)==> ?
;==? @
}>> 	
publicFF 
staticFF 
boolFF 
TryGetFontAssetFF *
(FF* +
intFF+ .
hashcodeFF/ 7
,FF7 8
outFF9 <
TMP_FontAssetFF= J
	fontAssetFFK T
)FFT U
{GG 	
	fontAssetHH 
=HH 
nullHH 
;HH 
returnJJ &
s_FontAssetReferenceLookupJJ -
.JJ- .
TryGetValueJJ. 9
(JJ9 :
hashcodeJJ: B
,JJB C
outJJD G
	fontAssetJJH Q
)JJQ R
;JJR S
}KK 	
internalNN 
staticNN 
voidNN !
RebuildFontAssetCacheNN 2
(NN2 3
intNN3 6

instanceIDNN7 A
)NNA B
{OO 	
forQQ 
(QQ 
intQQ 
iQQ 
=QQ 
$numQQ 
;QQ 
iQQ 
<QQ !
s_FontAssetReferencesQQ  5
.QQ5 6
CountQQ6 ;
;QQ; <
iQQ= >
++QQ> @
)QQ@ A
{RR 
TMP_FontAssetSS 
	fontAssetSS '
=SS( )!
s_FontAssetReferencesSS* ?
[SS? @
iSS@ A
]SSA B
;SSB C
ifUU 
(UU 
	fontAssetUU 
.UU %
FallbackSearchQueryLookupUU 7
.UU7 8
ContainsUU8 @
(UU@ A

instanceIDUUA K
)UUK L
)UUL M
	fontAssetVV 
.VV #
ReadFontAssetDefinitionVV 5
(VV5 6
)VV6 7
;VV7 8
}WW 
}XX 	
}YY 
}ZZ –Ü
`C:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_SubMesh.cs
	namespace 	
TMPro
 
{		 
[

 
RequireComponent

 
(

 
typeof

 
(

 
MeshRenderer

 )
)

) *
)

* +
]

+ ,
[ 
ExecuteAlways 
] 
public 

class 
TMP_SubMesh 
: 
MonoBehaviour ,
{ 
public 
TMP_FontAsset 
	fontAsset &
{ 	
get 
{ 
return 
m_fontAsset $
;$ %
}& '
set 
{ 
m_fontAsset 
= 
value  %
;% &
}' (
} 	
[ 	
SerializeField	 
] 
private 
TMP_FontAsset 
m_fontAsset )
;) *
public 
TMP_SpriteAsset 
spriteAsset *
{ 	
get 
{ 
return 
m_spriteAsset &
;& '
}( )
set   
{   
m_spriteAsset   
=    !
value  " '
;  ' (
}  ) *
}!! 	
["" 	
SerializeField""	 
]"" 
private## 
TMP_SpriteAsset## 
m_spriteAsset##  -
;##- .
public)) 
Material)) 
material))  
{** 	
get,, 
{,, 
return,, 
GetMaterial,, $
(,,$ %
m_sharedMaterial,,% 5
),,5 6
;,,6 7
},,8 9
set// 
{00 
if11 
(11 
m_sharedMaterial11 $
.11$ %
GetInstanceID11% 2
(112 3
)113 4
==115 7
value118 =
.11= >
GetInstanceID11> K
(11K L
)11L M
)11M N
return22 
;22 
m_sharedMaterial44  
=44! "

m_material44# -
=44. /
value440 5
;445 6
	m_padding66 
=66 !
GetPaddingForMaterial66 1
(661 2
)662 3
;663 4
SetVerticesDirty88  
(88  !
)88! "
;88" #
SetMaterialDirty99  
(99  !
)99! "
;99" #
}:: 
};; 	
[<< 	
SerializeField<<	 
]<< 
private== 
Material== 

m_material== #
;==# $
publicCC 
MaterialCC 
sharedMaterialCC &
{DD 	
getEE 
{EE 
returnEE 
m_sharedMaterialEE )
;EE) *
}EE+ ,
setFF 
{FF 
SetSharedMaterialFF #
(FF# $
valueFF$ )
)FF) *
;FF* +
}FF, -
}GG 	
[HH 	
SerializeFieldHH	 
]HH 
privateII 
MaterialII 
m_sharedMaterialII )
;II) *
publicOO 
MaterialOO 
fallbackMaterialOO (
{PP 	
getQQ 
{QQ 
returnQQ 
m_fallbackMaterialQQ +
;QQ+ ,
}QQ- .
setRR 
{SS 
ifTT 
(TT 
m_fallbackMaterialTT &
==TT' )
valueTT* /
)TT/ 0
returnTT1 7
;TT7 8
ifVV 
(VV 
m_fallbackMaterialVV &
!=VV' )
nullVV* .
&&VV/ 1
m_fallbackMaterialVV2 D
!=VVE G
valueVVH M
)VVM N
TMP_MaterialManagerWW '
.WW' (#
ReleaseFallbackMaterialWW( ?
(WW? @
m_fallbackMaterialWW@ R
)WWR S
;WWS T
m_fallbackMaterialYY "
=YY# $
valueYY% *
;YY* +
TMP_MaterialManagerZZ #
.ZZ# $(
AddFallbackMaterialReferenceZZ$ @
(ZZ@ A
m_fallbackMaterialZZA S
)ZZS T
;ZZT U
SetSharedMaterial\\ !
(\\! "
m_fallbackMaterial\\" 4
)\\4 5
;\\5 6
}]] 
}^^ 	
private__ 
Material__ 
m_fallbackMaterial__ +
;__+ ,
publicee 
Materialee "
fallbackSourceMaterialee .
{ff 	
getgg 
{gg 
returngg $
m_fallbackSourceMaterialgg 1
;gg1 2
}gg3 4
sethh 
{hh $
m_fallbackSourceMaterialhh *
=hh+ ,
valuehh- 2
;hh2 3
}hh4 5
}ii 	
privatejj 
Materialjj $
m_fallbackSourceMaterialjj 1
;jj1 2
publicpp 
boolpp 
isDefaultMaterialpp %
{qq 	
getrr 
{rr 
returnrr 
m_isDefaultMaterialrr ,
;rr, -
}rr. /
setss 
{ss 
m_isDefaultMaterialss %
=ss& '
valuess( -
;ss- .
}ss/ 0
}tt 	
[uu 	
SerializeFielduu	 
]uu 
privatevv 
boolvv 
m_isDefaultMaterialvv (
;vv( )
public|| 
float|| 
padding|| 
{}} 	
get~~ 
{~~ 
return~~ 
	m_padding~~ "
;~~" #
}~~$ %
set 
{ 
	m_padding 
= 
value #
;# $
}% &
}
ÄÄ 	
[
ÅÅ 	
SerializeField
ÅÅ	 
]
ÅÅ 
private
ÇÇ 
float
ÇÇ 
	m_padding
ÇÇ 
;
ÇÇ  
public
àà 
new
àà 
Renderer
àà 
renderer
àà $
{
ââ 	
get
ää 
{
ää 
if
ää 
(
ää 

m_renderer
ää  
==
ää! #
null
ää$ (
)
ää( )

m_renderer
ää* 4
=
ää5 6
GetComponent
ää7 C
<
ääC D
Renderer
ääD L
>
ääL M
(
ääM N
)
ääN O
;
ääO P
return
åå 

m_renderer
åå !
;
åå! "
}
çç 
}
éé 	
[
èè 	
SerializeField
èè	 
]
èè 
private
êê 
Renderer
êê 

m_renderer
êê #
;
êê# $
public
ññ 

MeshFilter
ññ 

meshFilter
ññ $
{
óó 	
get
òò 
{
ôô 
if
öö 
(
öö 
m_meshFilter
öö  
==
öö! #
null
öö$ (
)
öö( )
{
õõ 
m_meshFilter
úú  
=
úú! "
GetComponent
úú# /
<
úú/ 0

MeshFilter
úú0 :
>
úú: ;
(
úú; <
)
úú< =
;
úú= >
if
ûû 
(
ûû 
m_meshFilter
ûû $
==
ûû% '
null
ûû( ,
)
ûû, -
{
üü 
m_meshFilter
†† $
=
††% &

gameObject
††' 1
.
††1 2
AddComponent
††2 >
<
††> ?

MeshFilter
††? I
>
††I J
(
††J K
)
††K L
;
††L M
m_meshFilter
°° $
.
°°$ %
	hideFlags
°°% .
=
°°/ 0
	HideFlags
°°1 :
.
°°: ;
HideInInspector
°°; J
|
°°K L
	HideFlags
°°M V
.
°°V W
HideAndDontSave
°°W f
;
°°f g
}
¢¢ 
}
££ 
return
•• 
m_meshFilter
•• #
;
••# $
}
¶¶ 
}
ßß 	
private
®® 

MeshFilter
®® 
m_meshFilter
®® '
;
®®' (
public
ÆÆ 
Mesh
ÆÆ 
mesh
ÆÆ 
{
ØØ 	
get
∞∞ 
{
±± 
if
≤≤ 
(
≤≤ 
m_mesh
≤≤ 
==
≤≤ 
null
≤≤ "
)
≤≤" #
{
≥≥ 
m_mesh
¥¥ 
=
¥¥ 
new
¥¥  
Mesh
¥¥! %
(
¥¥% &
)
¥¥& '
;
¥¥' (
m_mesh
µµ 
.
µµ 
	hideFlags
µµ $
=
µµ% &
	HideFlags
µµ' 0
.
µµ0 1
HideAndDontSave
µµ1 @
;
µµ@ A
}
∂∂ 
return
∏∏ 
m_mesh
∏∏ 
;
∏∏ 
}
ππ 
set
∫∫ 
{
∫∫ 
m_mesh
∫∫ 
=
∫∫ 
value
∫∫  
;
∫∫  !
}
∫∫" #
}
ªª 	
private
ºº 
Mesh
ºº 
m_mesh
ºº 
;
ºº 
public
⁄⁄ 
TMP_Text
⁄⁄ 
textComponent
⁄⁄ %
{
€€ 	
get
‹‹ 
{
›› 
if
ﬁﬁ 
(
ﬁﬁ 
m_TextComponent
ﬁﬁ #
==
ﬁﬁ$ &
null
ﬁﬁ' +
)
ﬁﬁ+ ,
m_TextComponent
ﬂﬂ #
=
ﬂﬂ$ %"
GetComponentInParent
ﬂﬂ& :
<
ﬂﬂ: ;
TextMeshPro
ﬂﬂ; F
>
ﬂﬂF G
(
ﬂﬂG H
)
ﬂﬂH I
;
ﬂﬂI J
return
·· 
m_TextComponent
·· &
;
··& '
}
‚‚ 
}
„„ 	
[
‰‰ 	
SerializeField
‰‰	 
]
‰‰ 
private
ÂÂ 
TextMeshPro
ÂÂ 
m_TextComponent
ÂÂ +
;
ÂÂ+ ,
[
ÁÁ 	
NonSerialized
ÁÁ	 
]
ÁÁ 
private
ËË 
bool
ËË %
m_isRegisteredForEvents
ËË ,
;
ËË, -
public
ÎÎ 
static
ÎÎ 
TMP_SubMesh
ÎÎ !
AddSubTextObject
ÎÎ" 2
(
ÎÎ2 3
TextMeshPro
ÎÎ3 >
textComponent
ÎÎ? L
,
ÎÎL M
MaterialReference
ÎÎN _
materialReference
ÎÎ` q
)
ÎÎq r
{
ÏÏ 	

GameObject
ÌÌ 
go
ÌÌ 
=
ÌÌ 
new
ÌÌ 

GameObject
ÌÌ  *
(
ÌÌ* +
$str
ÌÌ+ :
+
ÌÌ; <
materialReference
ÌÌ= N
.
ÌÌN O
material
ÌÌO W
.
ÌÌW X
name
ÌÌX \
+
ÌÌ] ^
$str
ÌÌ_ b
,
ÌÌb c
typeof
ÌÌd j
(
ÌÌj k
TMP_SubMesh
ÌÌk v
)
ÌÌv w
)
ÌÌw x
;
ÌÌx y
go
ÓÓ 
.
ÓÓ 
	hideFlags
ÓÓ 
=
ÓÓ 
	HideFlags
ÓÓ $
.
ÓÓ$ %
DontSave
ÓÓ% -
;
ÓÓ- .
TMP_SubMesh
 
subMesh
 
=
  !
go
" $
.
$ %
GetComponent
% 1
<
1 2
TMP_SubMesh
2 =
>
= >
(
> ?
)
? @
;
@ A
go
ÚÚ 
.
ÚÚ 
	transform
ÚÚ 
.
ÚÚ 
	SetParent
ÚÚ "
(
ÚÚ" #
textComponent
ÚÚ# 0
.
ÚÚ0 1
	transform
ÚÚ1 :
,
ÚÚ: ;
false
ÚÚ< A
)
ÚÚA B
;
ÚÚB C
go
ÛÛ 
.
ÛÛ 
	transform
ÛÛ 
.
ÛÛ 
localPosition
ÛÛ &
=
ÛÛ' (
Vector3
ÛÛ) 0
.
ÛÛ0 1
zero
ÛÛ1 5
;
ÛÛ5 6
go
ÙÙ 
.
ÙÙ 
	transform
ÙÙ 
.
ÙÙ 
localRotation
ÙÙ &
=
ÙÙ' (

Quaternion
ÙÙ) 3
.
ÙÙ3 4
identity
ÙÙ4 <
;
ÙÙ< =
go
ıı 
.
ıı 
	transform
ıı 
.
ıı 

localScale
ıı #
=
ıı$ %
Vector3
ıı& -
.
ıı- .
one
ıı. 1
;
ıı1 2
go
ˆˆ 
.
ˆˆ 
layer
ˆˆ 
=
ˆˆ 
textComponent
ˆˆ $
.
ˆˆ$ %

gameObject
ˆˆ% /
.
ˆˆ/ 0
layer
ˆˆ0 5
;
ˆˆ5 6
subMesh
¯¯ 
.
¯¯ 
m_TextComponent
¯¯ #
=
¯¯$ %
textComponent
¯¯& 3
;
¯¯3 4
subMesh
˘˘ 
.
˘˘ 
m_fontAsset
˘˘ 
=
˘˘  !
materialReference
˘˘" 3
.
˘˘3 4
	fontAsset
˘˘4 =
;
˘˘= >
subMesh
˙˙ 
.
˙˙ 
m_spriteAsset
˙˙ !
=
˙˙" #
materialReference
˙˙$ 5
.
˙˙5 6
spriteAsset
˙˙6 A
;
˙˙A B
subMesh
˚˚ 
.
˚˚ !
m_isDefaultMaterial
˚˚ '
=
˚˚( )
materialReference
˚˚* ;
.
˚˚; <
isDefaultMaterial
˚˚< M
;
˚˚M N
subMesh
¸¸ 
.
¸¸ 
SetSharedMaterial
¸¸ %
(
¸¸% &
materialReference
¸¸& 7
.
¸¸7 8
material
¸¸8 @
)
¸¸@ A
;
¸¸A B
subMesh
˛˛ 
.
˛˛ 
renderer
˛˛ 
.
˛˛ 
sortingLayerID
˛˛ +
=
˛˛, -
textComponent
˛˛. ;
.
˛˛; <
renderer
˛˛< D
.
˛˛D E
sortingLayerID
˛˛E S
;
˛˛S T
subMesh
ˇˇ 
.
ˇˇ 
renderer
ˇˇ 
.
ˇˇ 
sortingOrder
ˇˇ )
=
ˇˇ* +
textComponent
ˇˇ, 9
.
ˇˇ9 :
renderer
ˇˇ: B
.
ˇˇB C
sortingOrder
ˇˇC O
;
ˇˇO P
return
ÅÅ 
subMesh
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
void
ÖÖ 
OnEnable
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 	
if
ää 
(
ää 
!
ää %
m_isRegisteredForEvents
ää (
)
ää( )
{
ãã  
TMPro_EventManager
çç "
.
çç" #%
MATERIAL_PROPERTY_EVENT
çç# :
.
çç: ;
Add
çç; >
(
çç> ?*
ON_MATERIAL_PROPERTY_CHANGED
çç? [
)
çç[ \
;
çç\ ] 
TMPro_EventManager
éé "
.
éé" #!
FONT_PROPERTY_EVENT
éé# 6
.
éé6 7
Add
éé7 :
(
éé: ;&
ON_FONT_PROPERTY_CHANGED
éé; S
)
ééS T
;
ééT U 
TMPro_EventManager
êê "
.
êê" #*
DRAG_AND_DROP_MATERIAL_EVENT
êê# ?
.
êê? @
Add
êê@ C
(
êêC D'
ON_DRAG_AND_DROP_MATERIAL
êêD ]
)
êê] ^
;
êê^ _ 
TMPro_EventManager
íí "
.
íí" #)
SPRITE_ASSET_PROPERTY_EVENT
íí# >
.
íí> ?
Add
íí? B
(
ííB C.
 ON_SPRITE_ASSET_PROPERTY_CHANGED
ííC c
)
ííc d
;
ííd e%
m_isRegisteredForEvents
ññ '
=
ññ( )
true
ññ* .
;
ññ. /
}
óó 
if
öö 
(
öö 
	hideFlags
öö 
!=
öö 
	HideFlags
öö &
.
öö& '
DontSave
öö' /
)
öö/ 0
	hideFlags
õõ 
=
õõ 
	HideFlags
õõ %
.
õõ% &
DontSave
õõ& .
;
õõ. /

meshFilter
ûû 
.
ûû 

sharedMesh
ûû !
=
ûû" #
mesh
ûû$ (
;
ûû( )
if
°° 
(
°° 
m_sharedMaterial
°°  
!=
°°! #
null
°°$ (
)
°°( )
m_sharedMaterial
¢¢  
.
¢¢  !
	SetVector
¢¢! *
(
¢¢* +
ShaderUtilities
¢¢+ :
.
¢¢: ;
ID_ClipRect
¢¢; F
,
¢¢F G
new
¢¢H K
Vector4
¢¢L S
(
¢¢S T
-
¢¢T U
$num
¢¢U Z
,
¢¢Z [
-
¢¢\ ]
$num
¢¢] b
,
¢¢b c
$num
¢¢d i
,
¢¢i j
$num
¢¢k p
)
¢¢p q
)
¢¢q r
;
¢¢r s
}
££ 	
void
¶¶ 
	OnDisable
¶¶ 
(
¶¶ 
)
¶¶ 
{
ßß 	
m_meshFilter
´´ 
.
´´ 

sharedMesh
´´ #
=
´´$ %
null
´´& *
;
´´* +
if
≠≠ 
(
≠≠  
m_fallbackMaterial
≠≠ "
!=
≠≠# %
null
≠≠& *
)
≠≠* +
{
ÆÆ !
TMP_MaterialManager
ØØ #
.
ØØ# $%
ReleaseFallbackMaterial
ØØ$ ;
(
ØØ; < 
m_fallbackMaterial
ØØ< N
)
ØØN O
;
ØØO P 
m_fallbackMaterial
∞∞ "
=
∞∞# $
null
∞∞% )
;
∞∞) *
}
±± 
}
≤≤ 	
void
µµ 
	OnDestroy
µµ 
(
µµ 
)
µµ 
{
∂∂ 	
if
∫∫ 
(
∫∫ 
m_mesh
∫∫ 
!=
∫∫ 
null
∫∫ 
)
∫∫ 
DestroyImmediate
∫∫  0
(
∫∫0 1
m_mesh
∫∫1 7
)
∫∫7 8
;
∫∫8 9
if
ºº 
(
ºº  
m_fallbackMaterial
ºº "
!=
ºº# %
null
ºº& *
)
ºº* +
{
ΩΩ !
TMP_MaterialManager
ææ #
.
ææ# $%
ReleaseFallbackMaterial
ææ$ ;
(
ææ; < 
m_fallbackMaterial
ææ< N
)
ææN O
;
ææO P 
m_fallbackMaterial
øø "
=
øø# $
null
øø% )
;
øø) *
}
¿¿  
TMPro_EventManager
ƒƒ 
.
ƒƒ %
MATERIAL_PROPERTY_EVENT
ƒƒ 6
.
ƒƒ6 7
Remove
ƒƒ7 =
(
ƒƒ= >*
ON_MATERIAL_PROPERTY_CHANGED
ƒƒ> Z
)
ƒƒZ [
;
ƒƒ[ \ 
TMPro_EventManager
≈≈ 
.
≈≈ !
FONT_PROPERTY_EVENT
≈≈ 2
.
≈≈2 3
Remove
≈≈3 9
(
≈≈9 :&
ON_FONT_PROPERTY_CHANGED
≈≈: R
)
≈≈R S
;
≈≈S T 
TMPro_EventManager
«« 
.
«« *
DRAG_AND_DROP_MATERIAL_EVENT
«« ;
.
««; <
Remove
««< B
(
««B C'
ON_DRAG_AND_DROP_MATERIAL
««C \
)
««\ ]
;
««] ^ 
TMPro_EventManager
…… 
.
…… )
SPRITE_ASSET_PROPERTY_EVENT
…… :
.
……: ;
Remove
……; A
(
……A B.
 ON_SPRITE_ASSET_PROPERTY_CHANGED
……B b
)
……b c
;
……c d%
m_isRegisteredForEvents
ÃÃ #
=
ÃÃ$ %
false
ÃÃ& +
;
ÃÃ+ ,
if
œœ 
(
œœ 
m_TextComponent
œœ 
!=
œœ  "
null
œœ# '
)
œœ' (
{
–– 
m_TextComponent
—— 
.
——  #
havePropertiesChanged
——  5
=
——6 7
true
——8 <
;
——< =
m_TextComponent
““ 
.
““  
SetAllDirty
““  +
(
““+ ,
)
““, -
;
““- .
}
”” 
}
‘‘ 	
void
ŸŸ *
ON_MATERIAL_PROPERTY_CHANGED
ŸŸ )
(
ŸŸ) *
bool
ŸŸ* .
	isChanged
ŸŸ/ 8
,
ŸŸ8 9
Material
ŸŸ: B
mat
ŸŸC F
)
ŸŸF G
{
⁄⁄ 	
if
‹‹ 
(
‹‹ 
m_sharedMaterial
‹‹  
==
‹‹! #
null
‹‹$ (
)
‹‹( )
return
›› 
;
›› 
int
ﬂﬂ 
targetMaterialID
ﬂﬂ  
=
ﬂﬂ! "
mat
ﬂﬂ# &
.
ﬂﬂ& '
GetInstanceID
ﬂﬂ' 4
(
ﬂﬂ4 5
)
ﬂﬂ5 6
;
ﬂﬂ6 7
int
‡‡ 
sharedMaterialID
‡‡  
=
‡‡! "
m_sharedMaterial
‡‡# 3
.
‡‡3 4
GetInstanceID
‡‡4 A
(
‡‡A B
)
‡‡B C
;
‡‡C D
int
·· &
fallbackSourceMaterialID
·· (
=
··) *&
m_fallbackSourceMaterial
··+ C
==
··D F
null
··G K
?
··L M
$num
··N O
:
··P Q&
m_fallbackSourceMaterial
··R j
.
··j k
GetInstanceID
··k x
(
··x y
)
··y z
;
··z {
bool
‰‰ !
hasCullModeProperty
‰‰ $
=
‰‰% &
m_sharedMaterial
‰‰' 7
.
‰‰7 8
HasProperty
‰‰8 C
(
‰‰C D
ShaderUtilities
‰‰D S
.
‰‰S T 
ShaderTag_CullMode
‰‰T f
)
‰‰f g
;
‰‰g h
float
ÂÂ 
cullMode
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
if
ÁÁ 
(
ÁÁ !
hasCullModeProperty
ÁÁ #
)
ÁÁ# $
{
ËË 
cullMode
ÈÈ 
=
ÈÈ 
textComponent
ÈÈ (
.
ÈÈ( ) 
fontSharedMaterial
ÈÈ) ;
.
ÈÈ; <
GetFloat
ÈÈ< D
(
ÈÈD E
ShaderUtilities
ÈÈE T
.
ÈÈT U 
ShaderTag_CullMode
ÈÈU g
)
ÈÈg h
;
ÈÈh i
m_sharedMaterial
ÍÍ  
.
ÍÍ  !
SetFloat
ÍÍ! )
(
ÍÍ) *
ShaderUtilities
ÍÍ* 9
.
ÍÍ9 : 
ShaderTag_CullMode
ÍÍ: L
,
ÍÍL M
cullMode
ÍÍN V
)
ÍÍV W
;
ÍÍW X
}
ÎÎ 
if
ÓÓ 
(
ÓÓ 
targetMaterialID
ÓÓ  
!=
ÓÓ! #
sharedMaterialID
ÓÓ$ 4
)
ÓÓ4 5
{
ÔÔ 
if
ÒÒ 
(
ÒÒ  
m_fallbackMaterial
ÒÒ &
!=
ÒÒ' )
null
ÒÒ* .
&&
ÒÒ/ 1&
fallbackSourceMaterialID
ÒÒ2 J
==
ÒÒK M
targetMaterialID
ÒÒN ^
&&
ÒÒ_ a
TMP_Settings
ÒÒb n
.
ÒÒn o"
matchMaterialPresetÒÒo Ç
)ÒÒÇ É
{
ÚÚ !
TMP_MaterialManager
ÛÛ '
.
ÛÛ' (*
CopyMaterialPresetProperties
ÛÛ( D
(
ÛÛD E
mat
ÛÛE H
,
ÛÛH I 
m_fallbackMaterial
ÛÛJ \
)
ÛÛ\ ]
;
ÛÛ] ^
if
ˆˆ 
(
ˆˆ !
hasCullModeProperty
ˆˆ +
)
ˆˆ+ , 
m_fallbackMaterial
˜˜ *
.
˜˜* +
SetFloat
˜˜+ 3
(
˜˜3 4
ShaderUtilities
˜˜4 C
.
˜˜C D 
ShaderTag_CullMode
˜˜D V
,
˜˜V W
cullMode
˜˜X `
)
˜˜` a
;
˜˜a b
}
¯¯ 
else
˘˘ 
return
˙˙ 
;
˙˙ 
}
˚˚ 
	m_padding
˝˝ 
=
˝˝ #
GetPaddingForMaterial
˝˝ -
(
˝˝- .
)
˝˝. /
;
˝˝/ 0
m_TextComponent
ˇˇ 
.
ˇˇ #
havePropertiesChanged
ˇˇ 1
=
ˇˇ2 3
true
ˇˇ4 8
;
ˇˇ8 9
m_TextComponent
ÄÄ 
.
ÄÄ 
SetVerticesDirty
ÄÄ ,
(
ÄÄ, -
)
ÄÄ- .
;
ÄÄ. /
}
ÅÅ 	
void
ÖÖ '
ON_DRAG_AND_DROP_MATERIAL
ÖÖ &
(
ÖÖ& '

GameObject
ÖÖ' 1
obj
ÖÖ2 5
,
ÖÖ5 6
Material
ÖÖ7 ?
currentMaterial
ÖÖ@ O
,
ÖÖO P
Material
ÖÖQ Y
newMaterial
ÖÖZ e
)
ÖÖe f
{
ÜÜ 	
if
ââ 
(
ââ 
obj
ââ 
==
ââ 

gameObject
ââ !
||
ââ" $
UnityEditor
ââ% 0
.
ââ0 1
PrefabUtility
ââ1 >
.
ââ> ?.
 GetCorrespondingObjectFromSource
ââ? _
(
ââ_ `

gameObject
ââ` j
)
ââj k
==
ââl n
obj
ââo r
)
ââr s
{
çç 
if
éé 
(
éé 
!
éé !
m_isDefaultMaterial
éé (
)
éé( )
return
éé* 0
;
éé0 1
if
ëë 
(
ëë 

m_renderer
ëë 
==
ëë !
null
ëë" &
)
ëë& '

m_renderer
ëë( 2
=
ëë3 4
GetComponent
ëë5 A
<
ëëA B
Renderer
ëëB J
>
ëëJ K
(
ëëK L
)
ëëL M
;
ëëM N
UnityEditor
ìì 
.
ìì 
Undo
ìì  
.
ìì  !
RecordObject
ìì! -
(
ìì- .
this
ìì. 2
,
ìì2 3
$str
ìì4 I
)
ììI J
;
ììJ K
UnityEditor
îî 
.
îî 
Undo
îî  
.
îî  !
RecordObject
îî! -
(
îî- .

m_renderer
îî. 8
,
îî8 9
$str
îî: O
)
îîO P
;
îîP Q
SetSharedMaterial
ññ !
(
ññ! "
newMaterial
ññ" -
)
ññ- .
;
ññ. /
m_TextComponent
óó 
.
óó  #
havePropertiesChanged
óó  5
=
óó6 7
true
óó8 <
;
óó< =
}
òò 
}
ôô 	
void
ùù .
 ON_SPRITE_ASSET_PROPERTY_CHANGED
ùù -
(
ùù- .
bool
ùù. 2
	isChanged
ùù3 <
,
ùù< =
UnityEngine
ùù> I
.
ùùI J
Object
ùùJ P
obj
ùùQ T
)
ùùT U
{
ûû 	
if
°° 
(
°° 
m_TextComponent
°° 
!=
°°  "
null
°°# '
)
°°' (
{
¢¢ 
m_TextComponent
££ 
.
££  #
havePropertiesChanged
££  5
=
££6 7
true
££8 <
;
££< =
}
•• 
}
®® 	
void
´´ &
ON_FONT_PROPERTY_CHANGED
´´ %
(
´´% &
bool
´´& *
	isChanged
´´+ 4
,
´´4 5
Object
´´6 <
	fontAsset
´´= F
)
´´F G
{
¨¨ 	
if
≠≠ 
(
≠≠ 
m_fontAsset
≠≠ 
!=
≠≠ 
null
≠≠ #
&&
≠≠$ &
	fontAsset
≠≠' 0
.
≠≠0 1
GetInstanceID
≠≠1 >
(
≠≠> ?
)
≠≠? @
==
≠≠A C
m_fontAsset
≠≠D O
.
≠≠O P
GetInstanceID
≠≠P ]
(
≠≠] ^
)
≠≠^ _
)
≠≠_ `
{
ÆÆ 
if
∞∞ 
(
∞∞  
m_fallbackMaterial
∞∞ &
!=
∞∞' )
null
∞∞* .
)
∞∞. /
{
±± 
if
≤≤ 
(
≤≤ 
TMP_Settings
≤≤ $
.
≤≤$ %!
matchMaterialPreset
≤≤% 8
)
≤≤8 9
{
≥≥ !
TMP_MaterialManager
¥¥ +
.
¥¥+ ,%
ReleaseFallbackMaterial
¥¥, C
(
¥¥C D 
m_fallbackMaterial
¥¥D V
)
¥¥V W
;
¥¥W X!
TMP_MaterialManager
µµ +
.
µµ+ ,&
CleanupFallbackMaterials
µµ, D
(
µµD E
)
µµE F
;
µµF G
}
∂∂ 
}
∑∑ 
}
∏∏ 
}
ππ 	
void
ææ %
ON_TMP_SETTINGS_CHANGED
ææ $
(
ææ$ %
)
ææ% &
{
øø 	
}
√√ 	
public
«« 
void
«« 
DestroySelf
«« 
(
««  
)
««  !
{
»» 	
Destroy
…… 
(
…… 
this
…… 
.
…… 

gameObject
…… #
,
……# $
$num
……% '
)
……' (
;
……( )
}
   	
Material
ÕÕ 
GetMaterial
ÕÕ 
(
ÕÕ 
Material
ÕÕ %
mat
ÕÕ& )
)
ÕÕ) *
{
ŒŒ 	
if
—— 
(
—— 

m_renderer
—— 
==
—— 
null
—— "
)
——" #

m_renderer
““ 
=
““ 
GetComponent
““ )
<
““) *
Renderer
““* 2
>
““2 3
(
““3 4
)
““4 5
;
““5 6
if
’’ 
(
’’ 

m_material
’’ 
==
’’ 
null
’’ "
||
’’# %

m_material
’’& 0
.
’’0 1
GetInstanceID
’’1 >
(
’’> ?
)
’’? @
!=
’’A C
mat
’’D G
.
’’G H
GetInstanceID
’’H U
(
’’U V
)
’’V W
)
’’W X

m_material
÷÷ 
=
÷÷ $
CreateMaterialInstance
÷÷ 3
(
÷÷3 4
mat
÷÷4 7
)
÷÷7 8
;
÷÷8 9
m_sharedMaterial
ÿÿ 
=
ÿÿ 

m_material
ÿÿ )
;
ÿÿ) *
	m_padding
€€ 
=
€€ #
GetPaddingForMaterial
€€ -
(
€€- .
)
€€. /
;
€€/ 0
SetVerticesDirty
›› 
(
›› 
)
›› 
;
›› 
SetMaterialDirty
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
return
‡‡ 
m_sharedMaterial
‡‡ #
;
‡‡# $
}
·· 	
Material
ÈÈ $
CreateMaterialInstance
ÈÈ '
(
ÈÈ' (
Material
ÈÈ( 0
source
ÈÈ1 7
)
ÈÈ7 8
{
ÍÍ 	
Material
ÎÎ 
mat
ÎÎ 
=
ÎÎ 
new
ÎÎ 
Material
ÎÎ '
(
ÎÎ' (
source
ÎÎ( .
)
ÎÎ. /
;
ÎÎ/ 0
mat
ÏÏ 
.
ÏÏ 
shaderKeywords
ÏÏ 
=
ÏÏ  
source
ÏÏ! '
.
ÏÏ' (
shaderKeywords
ÏÏ( 6
;
ÏÏ6 7
mat
ÌÌ 
.
ÌÌ 
name
ÌÌ 
+=
ÌÌ 
$str
ÌÌ %
;
ÌÌ% &
return
ÔÔ 
mat
ÔÔ 
;
ÔÔ 
}
 	
Material
˜˜ 
GetSharedMaterial
˜˜ "
(
˜˜" #
)
˜˜# $
{
¯¯ 	
if
˘˘ 
(
˘˘ 

m_renderer
˘˘ 
==
˘˘ 
null
˘˘ "
)
˘˘" #

m_renderer
˙˙ 
=
˙˙ 
GetComponent
˙˙ )
<
˙˙) *
Renderer
˙˙* 2
>
˙˙2 3
(
˙˙3 4
)
˙˙4 5
;
˙˙5 6
return
¸¸ 

m_renderer
¸¸ 
.
¸¸ 
sharedMaterial
¸¸ ,
;
¸¸, -
}
˝˝ 	
void
ÑÑ 
SetSharedMaterial
ÑÑ 
(
ÑÑ 
Material
ÑÑ '
mat
ÑÑ( +
)
ÑÑ+ ,
{
ÖÖ 	
m_sharedMaterial
ââ 
=
ââ 
mat
ââ "
;
ââ" #
	m_padding
åå 
=
åå #
GetPaddingForMaterial
åå -
(
åå- .
)
åå. /
;
åå/ 0
SetMaterialDirty
éé 
(
éé 
)
éé 
;
éé 
if
ëë 
(
ëë 
m_sharedMaterial
ëë  
!=
ëë! #
null
ëë$ (
)
ëë( )

gameObject
íí 
.
íí 
name
íí 
=
íí  !
$str
íí" 1
+
íí2 3
m_sharedMaterial
íí4 D
.
ííD E
name
ííE I
+
ííJ K
$str
ííL O
;
ííO P
}
îî 	
public
õõ 
float
õõ #
GetPaddingForMaterial
õõ *
(
õõ* +
)
õõ+ ,
{
úú 	
float
ùù 
padding
ùù 
=
ùù 
ShaderUtilities
ùù +
.
ùù+ ,

GetPadding
ùù, 6
(
ùù6 7
m_sharedMaterial
ùù7 G
,
ùùG H
m_TextComponent
ùùI X
.
ùùX Y
extraPadding
ùùY e
,
ùùe f
m_TextComponent
ùùg v
.
ùùv w
isUsingBoldùùw Ç
)ùùÇ É
;ùùÉ Ñ
return
üü 
padding
üü 
;
üü 
}
†† 	
public
®® 
void
®® 
UpdateMeshPadding
®® %
(
®®% &
bool
®®& *
isExtraPadding
®®+ 9
,
®®9 :
bool
®®; ?
isUsingBold
®®@ K
)
®®K L
{
©© 	
	m_padding
™™ 
=
™™ 
ShaderUtilities
™™ '
.
™™' (

GetPadding
™™( 2
(
™™2 3
m_sharedMaterial
™™3 C
,
™™C D
isExtraPadding
™™E S
,
™™S T
isUsingBold
™™U `
)
™™` a
;
™™a b
}
´´ 	
public
±± 
void
±± 
SetVerticesDirty
±± $
(
±±$ %
)
±±% &
{
≤≤ 	
if
≥≥ 
(
≥≥ 
!
≥≥ 
this
≥≥ 
.
≥≥ 
enabled
≥≥ 
)
≥≥ 
return
¥¥ 
;
¥¥ 
if
∑∑ 
(
∑∑ 
m_TextComponent
∑∑ 
!=
∑∑  "
null
∑∑# '
)
∑∑' (
{
∏∏ 
m_TextComponent
ππ 
.
ππ  #
havePropertiesChanged
ππ  5
=
ππ6 7
true
ππ8 <
;
ππ< =
m_TextComponent
∫∫ 
.
∫∫  
SetVerticesDirty
∫∫  0
(
∫∫0 1
)
∫∫1 2
;
∫∫2 3
}
ªª 
}
ºº 	
public
¬¬ 
void
¬¬ 
SetMaterialDirty
¬¬ $
(
¬¬$ %
)
¬¬% &
{
√√ 	
UpdateMaterial
«« 
(
«« 
)
«« 
;
«« 
}
ÀÀ 	
	protected
—— 
void
—— 
UpdateMaterial
—— %
(
——% &
)
——& '
{
““ 	
if
’’ 
(
’’ 
renderer
’’ 
==
’’ 
null
’’  
||
’’! #
m_sharedMaterial
’’$ 4
==
’’5 7
null
’’8 <
)
’’< =
return
’’> D
;
’’D E

m_renderer
◊◊ 
.
◊◊ 
sharedMaterial
◊◊ %
=
◊◊& '
m_sharedMaterial
◊◊( 8
;
◊◊8 9
if
⁄⁄ 
(
⁄⁄ 
m_sharedMaterial
⁄⁄  
.
⁄⁄  !
HasProperty
⁄⁄! ,
(
⁄⁄, -
ShaderUtilities
⁄⁄- <
.
⁄⁄< = 
ShaderTag_CullMode
⁄⁄= O
)
⁄⁄O P
)
⁄⁄P Q
{
€€ 
float
‹‹ 
cullMode
‹‹ 
=
‹‹  
textComponent
‹‹! .
.
‹‹. / 
fontSharedMaterial
‹‹/ A
.
‹‹A B
GetFloat
‹‹B J
(
‹‹J K
ShaderUtilities
‹‹K Z
.
‹‹Z [ 
ShaderTag_CullMode
‹‹[ m
)
‹‹m n
;
‹‹n o
m_sharedMaterial
››  
.
››  !
SetFloat
››! )
(
››) *
ShaderUtilities
››* 9
.
››9 : 
ShaderTag_CullMode
››: L
,
››L M
cullMode
››N V
)
››V W
;
››W X
}
ﬁﬁ 
if
·· 
(
·· 
m_sharedMaterial
··  
!=
··! #
null
··$ (
&&
··) +

gameObject
··, 6
.
··6 7
name
··7 ;
!=
··< >
$str
··? N
+
··O P
m_sharedMaterial
··Q a
.
··a b
name
··b f
+
··g h
$str
··i l
)
··l m

gameObject
‚‚ 
.
‚‚ 
name
‚‚ 
=
‚‚  !
$str
‚‚" 1
+
‚‚2 3
m_sharedMaterial
‚‚4 D
.
‚‚D E
name
‚‚E I
+
‚‚J K
$str
‚‚L O
;
‚‚O P
}
‰‰ 	
}
ˇˇ 
}ÄÄ ß
aC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\AssemblyInfo.cs
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str .
). /
]/ 0
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str 6
)6 7
]7 8
[		 
assembly		 	
:			 

InternalsVisibleTo		 
(		 
$str		 5
)		5 6
]		6 7
[

 
assembly

 	
:

	 

InternalsVisibleTo

 
(

 
$str

 8
)

8 9
]

9 :◊
gC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_InputValidator.cs
	namespace 	
TMPro
 
{ 
[

 
System

 
.

 
Serializable

 
]

 
public 

abstract 
class 
TMP_InputValidator ,
:- .
ScriptableObject/ ?
{ 
public 
abstract 
char 
Validate %
(% &
ref& )
string* 0
text1 5
,5 6
ref7 :
int; >
pos? B
,B C
charD H
chI K
)K L
;L M
} 
} ’
^C:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_Asset.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public		 

abstract		 
class		 
	TMP_Asset		 #
:		$ %
ScriptableObject		& 6
{

 
public 
int 

instanceID 
{ 	
get 
{ 
if 
( 
m_InstanceID  
==! #
$num$ %
)% &
m_InstanceID  
=! "
GetInstanceID# 0
(0 1
)1 2
;2 3
return 
m_InstanceID #
;# $
} 
} 	
private 
int 
m_InstanceID  
;  !
public 
int 
hashCode 
; 
public"" 
Material"" 
material""  
;""  !
public'' 
int'' 
materialHashCode'' #
;''# $
})) 
}** ‡
aC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_LineInfo.cs
	namespace 	
TMPro
 
{ 
public 

struct 
TMP_LineInfo 
{ 
internal		 
int		 !
controlCharacterCount		 *
;		* +
public 
int 
characterCount !
;! "
public 
int !
visibleCharacterCount (
;( )
public 
int 

spaceCount 
; 
public 
int 
	wordCount 
; 
public 
int 
firstCharacterIndex &
;& '
public 
int &
firstVisibleCharacterIndex -
;- .
public 
int 
lastCharacterIndex %
;% &
public 
int %
lastVisibleCharacterIndex ,
;, -
public 
float 
length 
; 
public 
float 

lineHeight 
;  
public 
float 
ascender 
; 
public 
float 
baseline 
; 
public 
float 
	descender 
; 
public 
float 

maxAdvance 
;  
public 
float 
width 
; 
public 
float 

marginLeft 
;  
public 
float 
marginRight  
;  !
public &
HorizontalAlignmentOptions )
	alignment* 3
;3 4
public   
Extents   
lineExtents   "
;  " #
}22 
}33 ÷ƒ
bC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TextContainer.cs
	namespace 	
TMPro
 
{ 
public		 

enum		  
TextContainerAnchors		 $
{		% &
TopLeft		' .
=		/ 0
$num		1 2
,		2 3
Top		4 7
=		8 9
$num		: ;
,		; <
TopRight		= E
=		F G
$num		H I
,		I J
Left		K O
=		P Q
$num		R S
,		S T
Middle		U [
=		\ ]
$num		^ _
,		_ `
Right		a f
=		g h
$num		i j
,		j k

BottomLeft		l v
=		w x
$num		y z
,		z {
Bottom			| Ç
=
		É Ñ
$num
		Ö Ü
,
		Ü á
BottomRight
		à ì
=
		î ï
$num
		ñ ó
,
		ó ò
Custom
		ô ü
=
		† °
$num
		¢ £
}
		§ •
;
		• ¶
[ 
RequireComponent 
( 
typeof 
( 
RectTransform *
)* +
)+ ,
], -
public 

class 
TextContainer 
:  
UIBehaviour! ,
{ 
public 
bool 

hasChanged 
{ 	
get 
{ 
return 
m_hasChanged %
;% &
}' (
set 
{ 
m_hasChanged 
=  
value! &
;& '
}( )
} 	
private 
bool 
m_hasChanged !
;! "
public 
Vector2 
pivot 
{ 	
get 
{ 
return 
m_pivot  
;  !
}" #
set 
{ 
if7 9
(: ;
m_pivot; B
!=C E
valueF K
)K L
{M N
m_pivotO V
=W X
valueY ^
;^ _
m_anchorPosition` p
=q r
GetAnchorPosition	s Ñ
(
Ñ Ö
m_pivot
Ö å
)
å ç
;
ç é
m_hasChanged
è õ
=
ú ù
true
û ¢
;
¢ £ 
OnContainerChanged
§ ∂
(
∂ ∑
)
∑ ∏
;
∏ π
}
∫ ª
}
º Ω
}   	
[!! 	
SerializeField!!	 
]!! 
private"" 
Vector2"" 
m_pivot"" 
;""  
public%%  
TextContainerAnchors%% #
anchorPosition%%$ 2
{&& 	
get'' 
{'' 
return'' 
m_anchorPosition'' )
;'') *
}''+ ,
set(( 
{(( 
if((8 :
(((; <
m_anchorPosition((< L
!=((M O
value((P U
)((U V
{((W X
m_anchorPosition((Y i
=((j k
value((l q
;((q r
m_pivot((s z
=(({ |
GetPivot	((} Ö
(
((Ö Ü
m_anchorPosition
((Ü ñ
)
((ñ ó
;
((ó ò
m_hasChanged
((ô •
=
((¶ ß
true
((® ¨
;
((¨ ≠ 
OnContainerChanged
((Æ ¿
(
((¿ ¡
)
((¡ ¬
;
((¬ √
}
((ƒ ≈
}
((∆ «
})) 	
[** 	
SerializeField**	 
]** 
private++  
TextContainerAnchors++ $
m_anchorPosition++% 5
=++6 7 
TextContainerAnchors++8 L
.++L M
Middle++M S
;++S T
public// 
Rect// 
rect// 
{00 	
get11 
{11 
return11 
m_rect11 
;11  
}11! "
set22 
{22 
if22; =
(22> ?
m_rect22? E
!=22F H
value22I N
)22N O
{22P Q
m_rect22R X
=22Y Z
value22[ `
;22` a
m_hasChanged
22ô •
=
22¶ ß
true
22® ¨
;
22¨ ≠ 
OnContainerChanged
22Æ ¿
(
22¿ ¡
)
22¡ ¬
;
22¬ √
}
22ƒ ≈
}
22∆ «
}33 	
[44 	
SerializeField44	 
]44 
private55 
Rect55 
m_rect55 
;55 
public88 
Vector288 
size88 
{99 	
get:: 
{:: 
return:: 
new:: 
Vector2:: $
(::$ %
m_rect::% +
.::+ ,
width::, 1
,::1 2
m_rect::3 9
.::9 :
height::: @
)::@ A
;::A B
}::C D
set;; 
{;; 
if;;6 8
(;;9 :
new;;: =
Vector2;;> E
(;;E F
m_rect;;F L
.;;L M
width;;M R
,;;R S
m_rect;;T Z
.;;Z [
height;;[ a
);;a b
!=;;c e
value;;f k
);;k l
{;;m n
SetRect;;o v
(;;v w
value;;w |
);;| }
;;;} ~
m_hasChanged	;; ã
=
;;å ç
true
;;é í
;
;;í ì
m_isDefaultWidth
;;î §
=
;;• ¶
false
;;ß ¨
;
;;¨ ≠
m_isDefaultHeight
;;Æ ø
=
;;¿ ¡
false
;;¬ «
;
;;« » 
OnContainerChanged
;;… €
(
;;€ ‹
)
;;‹ ›
;
;;› ﬁ
}
;;ﬂ ‡
}
;;· ‚
}<< 	
public@@ 
float@@ 
width@@ 
{AA 	
getBB 
{BB 
returnBB 
m_rectBB 
.BB  
widthBB  %
;BB% &
}BB' (
setCC 
{CC 
SetRectCC7 >
(CC> ?
newCC? B
Vector2CCC J
(CCJ K
valueCCK P
,CCP Q
m_rectCCR X
.CCX Y
heightCCY _
)CC_ `
)CC` a
;CCa b
m_hasChangedCCc o
=CCp q
trueCCr v
;CCv w
m_isDefaultWidth	CCx à
=
CCâ ä
false
CCã ê
;
CCê ë 
OnContainerChanged
CCí §
(
CC§ •
)
CC• ¶
;
CC¶ ß
}
CC® ©
}DD 	
publicHH 
floatHH 
heightHH 
{II 	
getJJ 
{JJ 
returnJJ 
m_rectJJ 
.JJ  
heightJJ  &
;JJ& '
}JJ( )
setKK 
{KK 
SetRectKK 
(KK 
newKK 
Vector2KK %
(KK% &
m_rectKK& ,
.KK, -
widthKK- 2
,KK2 3
valueKK4 9
)KK9 :
)KK: ;
;KK; <
m_hasChangedKK= I
=KKJ K
trueKKL P
;KKP Q
m_isDefaultHeightKKR c
=KKd e
falseKKf k
;KKk l
OnContainerChangedKKm 
(	KK Ä
)
KKÄ Å
;
KKÅ Ç
}
KKÉ Ñ
}LL 	
publicPP 
boolPP 
isDefaultWidthPP "
{QQ 	
getRR 
{RR 
returnRR 
m_isDefaultWidthRR )
;RR) *
}RR+ ,
}SS 	
privateTT 
boolTT 
m_isDefaultWidthTT %
;TT% &
publicWW 
boolWW 
isDefaultHeightWW #
{XX 	
getYY 
{YY 
returnYY 
m_isDefaultHeightYY *
;YY* +
}YY, -
}ZZ 	
private[[ 
bool[[ 
m_isDefaultHeight[[ &
;[[& '
public^^ 
bool^^ 
isAutoFitting^^ !
{__ 	
get`` 
{`` 
return`` 
m_isAutoFitting`` (
;``( )
}``* +
setaa 
{aa 
m_isAutoFittingaa !
=aa" #
valueaa$ )
;aa) *
}aa+ ,
}bb 	
privatecc 
boolcc 
m_isAutoFittingcc $
=cc% &
falsecc' ,
;cc, -
publicgg 
Vector3gg 
[gg 
]gg 
cornersgg  
{hh 	
getii 
{ii 
returnii 
	m_cornersii "
;ii" #
}ii$ %
}jj 	
privatekk 
Vector3kk 
[kk 
]kk 
	m_cornerskk #
=kk$ %
newkk& )
Vector3kk* 1
[kk1 2
$numkk2 3
]kk3 4
;kk4 5
publicnn 
Vector3nn 
[nn 
]nn 
worldCornersnn %
{oo 	
getpp 
{pp 
returnpp 
m_worldCornerspp '
;pp' (
}pp) *
}qq 	
privaterr 
Vector3rr 
[rr 
]rr 
m_worldCornersrr (
=rr) *
newrr+ .
Vector3rr/ 6
[rr6 7
$numrr7 8
]rr8 9
;rr9 :
public}} 
Vector4}} 
margins}} 
{~~ 	
get 
{ 
return 
	m_margins "
;" #
}$ %
set
ÄÄ 
{
ÄÄ 
if
ÄÄ 
(
ÄÄ 
	m_margins
ÄÄ 
!=
ÄÄ  "
value
ÄÄ# (
)
ÄÄ( )
{
ÄÄ* +
	m_margins
ÄÄT ]
=
ÄÄ^ _
value
ÄÄ` e
;
ÄÄe f
m_hasChanged
ÄÄg s
=
ÄÄt u
true
ÄÄv z
;
ÄÄz {!
OnContainerChangedÄÄ| é
(ÄÄé è
)ÄÄè ê
;ÄÄê ë
}ÄÄí ì
}ÄÄî ï
}
ÅÅ 	
[
ÇÇ 	
SerializeField
ÇÇ	 
]
ÇÇ 
private
ÉÉ 
Vector4
ÉÉ 
	m_margins
ÉÉ !
;
ÉÉ! "
public
ââ 
RectTransform
ââ 
rectTransform
ââ *
{
ää 	
get
ãã 
{
åå 
if
çç 
(
çç 
m_rectTransform
çç #
==
çç$ &
null
çç' +
)
çç+ ,
m_rectTransform
çç- <
=
çç= >
GetComponent
çç? K
<
ççK L
RectTransform
ççL Y
>
ççY Z
(
ççZ [
)
çç[ \
;
çç\ ]
return
èè 
m_rectTransform
èè &
;
èè& '
}
êê 
}
ëë 	
private
íí 
RectTransform
íí 
m_rectTransform
íí -
;
íí- .
private
óó 
static
óó 
Vector2
óó 
k_defaultSize
óó ,
=
óó- .
new
óó/ 2
Vector2
óó3 :
(
óó: ;
$num
óó; >
,
óó> ?
$num
óó@ C
)
óóC D
;
óóD E
public
ùù 
TextMeshPro
ùù 
textMeshPro
ùù &
{
ûû 	
get
üü 
{
†† 
if
°° 
(
°° 
m_textMeshPro
°° !
==
°°" $
null
°°% )
)
°°) *
m_textMeshPro
°°+ 8
=
°°9 :
GetComponent
°°; G
<
°°G H
TextMeshPro
°°H S
>
°°S T
(
°°T U
)
°°U V
;
°°V W
return
¢¢ 
m_textMeshPro
¢¢ $
;
¢¢$ %
}
££ 
}
§§ 	
private
•• 
TextMeshPro
•• 
m_textMeshPro
•• )
;
••) *
	protected
®® 
override
®® 
void
®® 
Awake
®®  %
(
®®% &
)
®®& '
{
©© 	
Debug
™™ 
.
™™ 

LogWarning
™™ 
(
™™ 
$str
™™ l
+
™™m n

gameObject
™™o y
.
™™y z
name
™™z ~
+™™ Ä
$str™™Å Ö
,™™Ö Ü
this™™á ã
)™™ã å
;™™å ç
return
¨¨ 
;
¨¨ 
}
≠≠ 	
	protected
≥≥ 
override
≥≥ 
void
≥≥ 
OnEnable
≥≥  (
(
≥≥( )
)
≥≥) *
{
¥¥ 	 
OnContainerChanged
∑∑ 
(
∑∑ 
)
∑∑  
;
∑∑  !
}
∏∏ 	
	protected
ææ 
override
ææ 
void
ææ 
	OnDisable
ææ  )
(
ææ) *
)
ææ* +
{
øø 	
}
¡¡ 	
void
««  
OnContainerChanged
«« 
(
««  
)
««  !
{
»» 	
UpdateCorners
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
if
ŒŒ 
(
ŒŒ 
this
ŒŒ 
.
ŒŒ 
m_rectTransform
ŒŒ $
!=
ŒŒ% '
null
ŒŒ( ,
)
ŒŒ, -
{
œœ 
m_rectTransform
–– 
.
––  
	sizeDelta
––  )
=
––* +
this
––, 0
.
––0 1
size
––1 5
;
––5 6
m_rectTransform
—— 
.
——  

hasChanged
——  *
=
——+ ,
true
——- 1
;
——1 2
}
““ 
if
‘‘ 
(
‘‘ 
this
‘‘ 
.
‘‘ 
textMeshPro
‘‘  
!=
‘‘! #
null
‘‘$ (
)
‘‘( )
{
’’ 
m_textMeshPro
÷÷ 
.
÷÷ 
SetVerticesDirty
÷÷ .
(
÷÷. /
)
÷÷/ 0
;
÷÷0 1
m_textMeshPro
◊◊ 
.
◊◊ 
margin
◊◊ $
=
◊◊% &
	m_margins
◊◊' 0
;
◊◊0 1
}
ÿÿ 
}
ŸŸ 	
	protected
‡‡ 
override
‡‡ 
void
‡‡ 

OnValidate
‡‡  *
(
‡‡* +
)
‡‡+ ,
{
·· 	
m_hasChanged
„„ 
=
„„ 
true
„„ 
;
„„   
OnContainerChanged
‰‰ 
(
‰‰ 
)
‰‰  
;
‰‰  !
}
ÂÂ 	
	protected
˜˜ 
override
˜˜ 
void
˜˜ -
OnRectTransformDimensionsChange
˜˜  ?
(
˜˜? @
)
˜˜@ A
{
¯¯ 	
if
˙˙ 
(
˙˙ 
this
˙˙ 
.
˙˙ 
rectTransform
˙˙ "
==
˙˙# %
null
˙˙& *
)
˙˙* +
m_rectTransform
˙˙, ;
=
˙˙< =

gameObject
˙˙> H
.
˙˙H I
AddComponent
˙˙I U
<
˙˙U V
RectTransform
˙˙V c
>
˙˙c d
(
˙˙d e
)
˙˙e f
;
˙˙f g
if
¸¸ 
(
¸¸ 
m_rectTransform
¸¸ 
.
¸¸  
	sizeDelta
¸¸  )
!=
¸¸* ,
k_defaultSize
¸¸- :
)
¸¸: ;
this
˝˝ 
.
˝˝ 
size
˝˝ 
=
˝˝ 
m_rectTransform
˝˝ +
.
˝˝+ ,
	sizeDelta
˝˝, 5
;
˝˝5 6
pivot
ˇˇ 
=
ˇˇ 
m_rectTransform
ˇˇ #
.
ˇˇ# $
pivot
ˇˇ$ )
;
ˇˇ) *
m_hasChanged
ÅÅ 
=
ÅÅ 
true
ÅÅ 
;
ÅÅ   
OnContainerChanged
ÇÇ 
(
ÇÇ 
)
ÇÇ  
;
ÇÇ  !
}
ÉÉ 	
private
ÜÜ 
void
ÜÜ 
SetRect
ÜÜ 
(
ÜÜ 
Vector2
ÜÜ $
size
ÜÜ% )
)
ÜÜ) *
{
áá 	
m_rect
àà 
=
àà 
new
àà 
Rect
àà 
(
àà 
m_rect
àà $
.
àà$ %
x
àà% &
,
àà& '
m_rect
àà( .
.
àà. /
y
àà/ 0
,
àà0 1
size
àà2 6
.
àà6 7
x
àà7 8
,
àà8 9
size
àà: >
.
àà> ?
y
àà? @
)
àà@ A
;
ààA B
}
ää 	
private
åå 
void
åå 
UpdateCorners
åå "
(
åå" #
)
åå# $
{
çç 	
	m_corners
éé 
[
éé 
$num
éé 
]
éé 
=
éé 
new
éé 
Vector3
éé &
(
éé& '
-
éé' (
m_pivot
éé( /
.
éé/ 0
x
éé0 1
*
éé2 3
m_rect
éé4 :
.
éé: ;
width
éé; @
,
éé@ A
(
ééB C
-
ééC D
m_pivot
ééE L
.
ééL M
y
ééM N
)
ééN O
*
ééP Q
m_rect
ééR X
.
ééX Y
height
ééY _
)
éé_ `
;
éé` a
	m_corners
èè 
[
èè 
$num
èè 
]
èè 
=
èè 
new
èè 
Vector3
èè &
(
èè& '
-
èè' (
m_pivot
èè( /
.
èè/ 0
x
èè0 1
*
èè2 3
m_rect
èè4 :
.
èè: ;
width
èè; @
,
èè@ A
(
èèB C
$num
èèC D
-
èèE F
m_pivot
èèG N
.
èèN O
y
èèO P
)
èèP Q
*
èèR S
m_rect
èèT Z
.
èèZ [
height
èè[ a
)
èèa b
;
èèb c
	m_corners
êê 
[
êê 
$num
êê 
]
êê 
=
êê 
new
êê 
Vector3
êê &
(
êê& '
(
êê' (
$num
êê( )
-
êê* +
m_pivot
êê, 3
.
êê3 4
x
êê4 5
)
êê5 6
*
êê7 8
m_rect
êê9 ?
.
êê? @
width
êê@ E
,
êêE F
(
êêG H
$num
êêH I
-
êêJ K
m_pivot
êêL S
.
êêS T
y
êêT U
)
êêU V
*
êêW X
m_rect
êêY _
.
êê_ `
height
êê` f
)
êêf g
;
êêg h
	m_corners
ëë 
[
ëë 
$num
ëë 
]
ëë 
=
ëë 
new
ëë 
Vector3
ëë &
(
ëë& '
(
ëë' (
$num
ëë( )
-
ëë* +
m_pivot
ëë, 3
.
ëë3 4
x
ëë4 5
)
ëë5 6
*
ëë7 8
m_rect
ëë9 ?
.
ëë? @
width
ëë@ E
,
ëëE F
(
ëëG H
-
ëëH I
m_pivot
ëëJ Q
.
ëëQ R
y
ëëR S
)
ëëS T
*
ëëU V
m_rect
ëëW ]
.
ëë] ^
height
ëë^ d
)
ëëd e
;
ëëe f
if
îî 
(
îî 
m_rectTransform
îî 
!=
îî  "
null
îî# '
)
îî' (
m_rectTransform
ïï 
.
ïï  
pivot
ïï  %
=
ïï& '
m_pivot
ïï( /
;
ïï/ 0
}
ññ 	
Vector2
∞∞ 
GetPivot
∞∞ 
(
∞∞ "
TextContainerAnchors
∞∞ -
anchor
∞∞. 4
)
∞∞4 5
{
±± 	
Vector2
≤≤ 
pivot
≤≤ 
=
≤≤ 
Vector2
≤≤ #
.
≤≤# $
zero
≤≤$ (
;
≤≤( )
switch
¥¥ 
(
¥¥ 
anchor
¥¥ 
)
¥¥ 
{
µµ 
case
∂∂ "
TextContainerAnchors
∂∂ )
.
∂∂) *
TopLeft
∂∂* 1
:
∂∂1 2
pivot
∑∑ 
=
∑∑ 
new
∑∑ 
Vector2
∑∑  '
(
∑∑' (
$num
∑∑( )
,
∑∑) *
$num
∑∑+ ,
)
∑∑, -
;
∑∑- .
break
∏∏ 
;
∏∏ 
case
ππ "
TextContainerAnchors
ππ )
.
ππ) *
Top
ππ* -
:
ππ- .
pivot
∫∫ 
=
∫∫ 
new
∫∫ 
Vector2
∫∫  '
(
∫∫' (
$num
∫∫( ,
,
∫∫, -
$num
∫∫. /
)
∫∫/ 0
;
∫∫0 1
break
ªª 
;
ªª 
case
ºº "
TextContainerAnchors
ºº )
.
ºº) *
TopRight
ºº* 2
:
ºº2 3
pivot
ΩΩ 
=
ΩΩ 
new
ΩΩ 
Vector2
ΩΩ  '
(
ΩΩ' (
$num
ΩΩ( )
,
ΩΩ) *
$num
ΩΩ+ ,
)
ΩΩ, -
;
ΩΩ- .
break
ææ 
;
ææ 
case
øø "
TextContainerAnchors
øø )
.
øø) *
Left
øø* .
:
øø. /
pivot
¿¿ 
=
¿¿ 
new
¿¿ 
Vector2
¿¿  '
(
¿¿' (
$num
¿¿( )
,
¿¿) *
$num
¿¿+ /
)
¿¿/ 0
;
¿¿0 1
break
¡¡ 
;
¡¡ 
case
¬¬ "
TextContainerAnchors
¬¬ )
.
¬¬) *
Middle
¬¬* 0
:
¬¬0 1
pivot
√√ 
=
√√ 
new
√√ 
Vector2
√√  '
(
√√' (
$num
√√( ,
,
√√, -
$num
√√. 2
)
√√2 3
;
√√3 4
break
ƒƒ 
;
ƒƒ 
case
≈≈ "
TextContainerAnchors
≈≈ )
.
≈≈) *
Right
≈≈* /
:
≈≈/ 0
pivot
∆∆ 
=
∆∆ 
new
∆∆ 
Vector2
∆∆  '
(
∆∆' (
$num
∆∆( )
,
∆∆) *
$num
∆∆+ /
)
∆∆/ 0
;
∆∆0 1
break
«« 
;
«« 
case
»» "
TextContainerAnchors
»» )
.
»») *

BottomLeft
»»* 4
:
»»4 5
pivot
…… 
=
…… 
new
…… 
Vector2
……  '
(
……' (
$num
……( )
,
……) *
$num
……+ ,
)
……, -
;
……- .
break
   
;
   
case
ÀÀ "
TextContainerAnchors
ÀÀ )
.
ÀÀ) *
Bottom
ÀÀ* 0
:
ÀÀ0 1
pivot
ÃÃ 
=
ÃÃ 
new
ÃÃ 
Vector2
ÃÃ  '
(
ÃÃ' (
$num
ÃÃ( ,
,
ÃÃ, -
$num
ÃÃ. /
)
ÃÃ/ 0
;
ÃÃ0 1
break
ÕÕ 
;
ÕÕ 
case
ŒŒ "
TextContainerAnchors
ŒŒ )
.
ŒŒ) *
BottomRight
ŒŒ* 5
:
ŒŒ5 6
pivot
œœ 
=
œœ 
new
œœ 
Vector2
œœ  '
(
œœ' (
$num
œœ( )
,
œœ) *
$num
œœ+ ,
)
œœ, -
;
œœ- .
break
–– 
;
–– 
}
—— 
return
”” 
pivot
”” 
;
”” 
}
‘‘ 	"
TextContainerAnchors
ÿÿ 
GetAnchorPosition
ÿÿ .
(
ÿÿ. /
Vector2
ÿÿ/ 6
pivot
ÿÿ7 <
)
ÿÿ< =
{
ŸŸ 	
if
€€ 
(
€€ 
pivot
€€ 
==
€€ 
new
€€ 
Vector2
€€ $
(
€€$ %
$num
€€% &
,
€€& '
$num
€€( )
)
€€) *
)
€€* +
return
‹‹ "
TextContainerAnchors
‹‹ +
.
‹‹+ ,
TopLeft
‹‹, 3
;
‹‹3 4
else
›› 
if
›› 
(
›› 
pivot
›› 
==
›› 
new
›› !
Vector2
››" )
(
››) *
$num
››* .
,
››. /
$num
››0 1
)
››1 2
)
››2 3
return
ﬁﬁ "
TextContainerAnchors
ﬁﬁ +
.
ﬁﬁ+ ,
Top
ﬁﬁ, /
;
ﬁﬁ/ 0
else
ﬂﬂ 
if
ﬂﬂ 
(
ﬂﬂ 
pivot
ﬂﬂ 
==
ﬂﬂ 
new
ﬂﬂ !
Vector2
ﬂﬂ" )
(
ﬂﬂ) *
$num
ﬂﬂ* ,
,
ﬂﬂ, -
$num
ﬂﬂ. /
)
ﬂﬂ/ 0
)
ﬂﬂ0 1
return
‡‡ "
TextContainerAnchors
‡‡ +
.
‡‡+ ,
TopRight
‡‡, 4
;
‡‡4 5
else
·· 
if
·· 
(
·· 
pivot
·· 
==
·· 
new
·· !
Vector2
··" )
(
··) *
$num
··* +
,
··+ ,
$num
··- 1
)
··1 2
)
··2 3
return
‚‚ "
TextContainerAnchors
‚‚ +
.
‚‚+ ,
Left
‚‚, 0
;
‚‚0 1
else
„„ 
if
„„ 
(
„„ 
pivot
„„ 
==
„„ 
new
„„ !
Vector2
„„" )
(
„„) *
$num
„„* .
,
„„. /
$num
„„0 4
)
„„4 5
)
„„5 6
return
‰‰ "
TextContainerAnchors
‰‰ +
.
‰‰+ ,
Middle
‰‰, 2
;
‰‰2 3
else
ÂÂ 
if
ÂÂ 
(
ÂÂ 
pivot
ÂÂ 
==
ÂÂ 
new
ÂÂ !
Vector2
ÂÂ" )
(
ÂÂ) *
$num
ÂÂ* +
,
ÂÂ+ ,
$num
ÂÂ- 1
)
ÂÂ1 2
)
ÂÂ2 3
return
ÊÊ "
TextContainerAnchors
ÊÊ +
.
ÊÊ+ ,
Right
ÊÊ, 1
;
ÊÊ1 2
else
ÁÁ 
if
ÁÁ 
(
ÁÁ 
pivot
ÁÁ 
==
ÁÁ 
new
ÁÁ !
Vector2
ÁÁ" )
(
ÁÁ) *
$num
ÁÁ* +
,
ÁÁ+ ,
$num
ÁÁ- .
)
ÁÁ. /
)
ÁÁ/ 0
return
ËË "
TextContainerAnchors
ËË +
.
ËË+ ,

BottomLeft
ËË, 6
;
ËË6 7
else
ÈÈ 
if
ÈÈ 
(
ÈÈ 
pivot
ÈÈ 
==
ÈÈ 
new
ÈÈ !
Vector2
ÈÈ" )
(
ÈÈ) *
$num
ÈÈ* .
,
ÈÈ. /
$num
ÈÈ0 1
)
ÈÈ1 2
)
ÈÈ2 3
return
ÍÍ "
TextContainerAnchors
ÍÍ +
.
ÍÍ+ ,
Bottom
ÍÍ, 2
;
ÍÍ2 3
else
ÎÎ 
if
ÎÎ 
(
ÎÎ 
pivot
ÎÎ 
==
ÎÎ 
new
ÎÎ !
Vector2
ÎÎ" )
(
ÎÎ) *
$num
ÎÎ* +
,
ÎÎ+ ,
$num
ÎÎ- .
)
ÎÎ. /
)
ÎÎ/ 0
return
ÏÏ "
TextContainerAnchors
ÏÏ +
.
ÏÏ+ ,
BottomRight
ÏÏ, 7
;
ÏÏ7 8
else
ÌÌ 
return
ÓÓ "
TextContainerAnchors
ÓÓ +
.
ÓÓ+ ,
Custom
ÓÓ, 2
;
ÓÓ2 3
}
 	
}
ÒÒ 
}ÚÚ ›'
fC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_Compatibility.cs
	namespace 	
TMPro
 
{ 
public 

static 
class 
TMP_Compatibility )
{		 
public

 
enum

 
AnchorPositions

 #
{

$ %
TopLeft

& -
,

- .
Top

/ 2
,

2 3
TopRight

4 <
,

< =
Left

> B
,

B C
Center

D J
,

J K
Right

L Q
,

Q R

BottomLeft

S ]
,

] ^
Bottom

_ e
,

e f
BottomRight

g r
,

r s
BaseLine

t |
,

| }
None	

~ Ç
}


É Ñ
;


Ñ Ö
public 
static  
TextAlignmentOptions **
ConvertTextAlignmentEnumValues+ I
(I J 
TextAlignmentOptionsJ ^
oldValue_ g
)g h
{ 	
switch 
( 
( 
int 
) 
oldValue !
)! "
{ 
case 
$num 
: 
return  
TextAlignmentOptions /
./ 0
TopLeft0 7
;7 8
case 
$num 
: 
return  
TextAlignmentOptions /
./ 0
Top0 3
;3 4
case 
$num 
: 
return  
TextAlignmentOptions /
./ 0
TopRight0 8
;8 9
case 
$num 
: 
return  
TextAlignmentOptions /
./ 0
TopJustified0 <
;< =
case 
$num 
: 
return  
TextAlignmentOptions /
./ 0
Left0 4
;4 5
case 
$num 
: 
return    
TextAlignmentOptions   /
.  / 0
Center  0 6
;  6 7
case!! 
$num!! 
:!! 
return""  
TextAlignmentOptions"" /
.""/ 0
Right""0 5
;""5 6
case## 
$num## 
:## 
return$$  
TextAlignmentOptions$$ /
.$$/ 0
	Justified$$0 9
;$$9 :
case%% 
$num%% 
:%% 
return&&  
TextAlignmentOptions&& /
.&&/ 0

BottomLeft&&0 :
;&&: ;
case'' 
$num'' 
:'' 
return((  
TextAlignmentOptions(( /
.((/ 0
Bottom((0 6
;((6 7
case)) 
$num)) 
:)) 
return**  
TextAlignmentOptions** /
.**/ 0
BottomRight**0 ;
;**; <
case++ 
$num++ 
:++ 
return,,  
TextAlignmentOptions,, /
.,,/ 0
BottomJustified,,0 ?
;,,? @
case-- 
$num-- 
:-- 
return..  
TextAlignmentOptions.. /
.../ 0
BaselineLeft..0 <
;..< =
case// 
$num// 
:// 
return00  
TextAlignmentOptions00 /
.00/ 0
Baseline000 8
;008 9
case11 
$num11 
:11 
return22  
TextAlignmentOptions22 /
.22/ 0
BaselineRight220 =
;22= >
case33 
$num33 
:33 
return44  
TextAlignmentOptions44 /
.44/ 0
BaselineJustified440 A
;44A B
case55 
$num55 
:55 
return66  
TextAlignmentOptions66 /
.66/ 0
MidlineLeft660 ;
;66; <
case77 
$num77 
:77 
return88  
TextAlignmentOptions88 /
.88/ 0
Midline880 7
;887 8
case99 
$num99 
:99 
return::  
TextAlignmentOptions:: /
.::/ 0
MidlineRight::0 <
;::< =
case;; 
$num;; 
:;; 
return<<  
TextAlignmentOptions<< /
.<</ 0
MidlineJustified<<0 @
;<<@ A
case== 
$num== 
:== 
return>>  
TextAlignmentOptions>> /
.>>/ 0
CaplineLeft>>0 ;
;>>; <
case?? 
$num?? 
:?? 
return@@  
TextAlignmentOptions@@ /
.@@/ 0
Capline@@0 7
;@@7 8
caseAA 
$numAA 
:AA 
returnBB  
TextAlignmentOptionsBB /
.BB/ 0
CaplineRightBB0 <
;BB< =
caseCC 
$numCC 
:CC 
returnDD  
TextAlignmentOptionsDD /
.DD/ 0
CaplineJustifiedDD0 @
;DD@ A
}EE 
returnGG  
TextAlignmentOptionsGG '
.GG' (
TopLeftGG( /
;GG/ 0
}HH 	
}II 
}JJ «3
mC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_TextParsingUtilities.cs
	namespace 	
TMPro
 
{ 
public 

class $
TMP_TextParsingUtilities )
{ 
private		 
static		 
readonly		 $
TMP_TextParsingUtilities		  8

s_Instance		9 C
=		D E
new		F I$
TMP_TextParsingUtilities		J b
(		b c
)		c d
;		d e
static $
TMP_TextParsingUtilities '
(' (
)( )
{* +
}, -
public 
static $
TMP_TextParsingUtilities .
instance/ 7
{ 	
get 
{ 
return 

s_Instance #
;# $
}% &
} 	
public 
static 
int 
GetHashCode %
(% &
string& ,
s- .
). /
{ 	
int 
hashCode 
= 
$num 
; 
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!! 
<!! 
s!!  !
.!!! "
Length!!" (
;!!( )
i!!* +
++!!+ -
)!!- .
hashCode"" 
="" 
("" 
("" 
hashCode"" %
<<""& (
$num"") *
)""* +
+"", -
hashCode"". 6
)""6 7
^""8 9
ToUpperASCIIFast"": J
(""J K
s""K L
[""L M
i""M N
]""N O
)""O P
;""P Q
return$$ 
hashCode$$ 
;$$ 
}%% 	
public'' 
static'' 
int'' $
GetHashCodeCaseSensitive'' 2
(''2 3
string''3 9
s'': ;
)''; <
{(( 	
int)) 
hashCode)) 
=)) 
$num)) 
;)) 
for++ 
(++ 
int++ 
i++ 
=++ 
$num++ 
;++ 
i++ 
<++ 
s++  !
.++! "
Length++" (
;++( )
i++* +
+++++ -
)++- .
hashCode,, 
=,, 
(,, 
(,, 
hashCode,, %
<<,,& (
$num,,) *
),,* +
+,,, -
hashCode,,. 6
),,6 7
^,,8 9
s,,: ;
[,,; <
i,,< =
],,= >
;,,> ?
return.. 
hashCode.. 
;.. 
}// 	
const55 
string55 
k_LookupStringL55 $
=55% &
$str	55' ©
;
55© ™
const:: 
string:: 
k_LookupStringU:: $
=::% &
$str	::' ©
;
::© ™
publicAA 
staticAA 
charAA 
ToLowerASCIIFastAA +
(AA+ ,
charAA, 0
cAA1 2
)AA2 3
{BB 	
ifCC 
(CC 
cCC 
>CC 
k_LookupStringLCC #
.CC# $
LengthCC$ *
-CC+ ,
$numCC- .
)CC. /
returnDD 
cDD 
;DD 
returnFF 
k_LookupStringLFF "
[FF" #
cFF# $
]FF$ %
;FF% &
}GG 	
publicNN 
staticNN 
charNN 
ToUpperASCIIFastNN +
(NN+ ,
charNN, 0
cNN1 2
)NN2 3
{OO 	
ifPP 
(PP 
cPP 
>PP 
k_LookupStringUPP #
.PP# $
LengthPP$ *
-PP+ ,
$numPP- .
)PP. /
returnQQ 
cQQ 
;QQ 
returnSS 
k_LookupStringUSS "
[SS" #
cSS# $
]SS$ %
;SS% &
}TT 	
public[[ 
static[[ 
uint[[ 
ToUpperASCIIFast[[ +
([[+ ,
uint[[, 0
c[[1 2
)[[2 3
{\\ 	
if]] 
(]] 
c]] 
>]] 
k_LookupStringU]] #
.]]# $
Length]]$ *
-]]+ ,
$num]]- .
)]]. /
return^^ 
c^^ 
;^^ 
return`` 
k_LookupStringU`` "
[``" #
(``# $
int``$ '
)``' (
c``( )
]``) *
;``* +
}aa 	
publichh 
statichh 
uinthh 
ToLowerASCIIFasthh +
(hh+ ,
uinthh, 0
chh1 2
)hh2 3
{ii 	
ifjj 
(jj 
cjj 
>jj 
k_LookupStringLjj #
.jj# $
Lengthjj$ *
-jj+ ,
$numjj- .
)jj. /
returnkk 
ckk 
;kk 
returnmm 
k_LookupStringLmm "
[mm" #
(mm# $
intmm$ '
)mm' (
cmm( )
]mm) *
;mm* +
}nn 	
publicww 
staticww 
boolww 
IsHighSurrogateww *
(ww* +
uintww+ /
cww0 1
)ww1 2
{xx 	
returnyy 
cyy 
>yy 
$numyy 
&&yy  
cyy! "
<yy# $
$numyy% +
;yy+ ,
}zz 	
public
ÇÇ 
static
ÇÇ 
bool
ÇÇ 
IsLowSurrogate
ÇÇ )
(
ÇÇ) *
uint
ÇÇ* .
c
ÇÇ/ 0
)
ÇÇ0 1
{
ÉÉ 	
return
ÑÑ 
c
ÑÑ 
>
ÑÑ 
$num
ÑÑ 
&&
ÑÑ  
c
ÑÑ! "
<
ÑÑ# $
$num
ÑÑ% +
;
ÑÑ+ ,
}
ÖÖ 	
internal
çç 
static
çç 
uint
çç 
ConvertToUTF32
çç +
(
çç+ ,
uint
çç, 0
highSurrogate
çç1 >
,
çç> ?
uint
çç@ D
lowSurrogate
ççE Q
)
ççQ R
{
éé 	
return
èè 
(
èè 
(
èè 
highSurrogate
èè "
-
èè# $
	CodePoint
èè% .
.
èè. /"
HIGH_SURROGATE_START
èè/ C
)
èèC D
*
èèE F
$num
èèG L
)
èèL M
+
èèN O
(
èèP Q
(
èèQ R
lowSurrogate
èèR ^
-
èè_ `
	CodePoint
èèa j
.
èèj k!
LOW_SURROGATE_START
èèk ~
)
èè~ 
+èèÄ Å
	CodePointèèÇ ã
.èèã å%
UNICODE_PLANE01_STARTèèå °
)èè° ¢
;èè¢ £
}
êê 	
}
ëë 
}íí ›Ñ
hC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_DefaultControls.cs
	namespace

 	
TMPro


 
{ 
public 

static 
class 
TMP_DefaultControls +
{ 
public 
struct 
	Resources 
{ 	
public 
Sprite 
standard "
;" #
public 
Sprite 

background $
;$ %
public 
Sprite 

inputField $
;$ %
public 
Sprite 
knob 
; 
public 
Sprite 
	checkmark #
;# $
public 
Sprite 
dropdown "
;" #
public 
Sprite 
mask 
; 
} 	
private 
const 
float 
kWidth "
=# $
$num% )
;) *
private 
const 
float 
kThickHeight (
=) *
$num+ .
;. /
private 
const 
float 
kThinHeight '
=( )
$num* -
;- .
private 
static 
Vector2 
s_TextElementSize 0
=1 2
new3 6
Vector27 >
(> ?
$num? C
,C D
$numE I
)I J
;J K
private 
static 
Vector2 
s_ThickElementSize 1
=2 3
new4 7
Vector28 ?
(? @
kWidth@ F
,F G
kThickHeightH T
)T U
;U V
private 
static 
Vector2 
s_ThinElementSize 0
=1 2
new3 6
Vector27 >
(> ?
kWidth? E
,E F
kThinHeightG R
)R S
;S T
private!! 
static!! 
Color!! $
s_DefaultSelectableColor!! 5
=!!6 7
new!!8 ;
Color!!< A
(!!A B
$num!!B D
,!!D E
$num!!F H
,!!H I
$num!!J L
,!!L M
$num!!N P
)!!P Q
;!!Q R
private## 
static## 
Color## 
s_TextColor## (
=##) *
new##+ .
Color##/ 4
(##4 5
$num##5 8
/##9 :
$num##; ?
,##? @
$num##A D
/##E F
$num##G K
,##K L
$num##M P
/##Q R
$num##S W
,##W X
$num##Y [
)##[ \
;##\ ]
private&& 
static&& 

GameObject&& !
CreateUIElementRoot&&" 5
(&&5 6
string&&6 <
name&&= A
,&&A B
Vector2&&C J
size&&K O
)&&O P
{'' 	

GameObject(( 
child(( 
=(( 
new(( "

GameObject((# -
(((- .
name((. 2
)((2 3
;((3 4
RectTransform)) 
rectTransform)) '
=))( )
child))* /
.))/ 0
AddComponent))0 <
<))< =
RectTransform))= J
>))J K
())K L
)))L M
;))M N
rectTransform** 
.** 
	sizeDelta** #
=**$ %
size**& *
;*** +
return++ 
child++ 
;++ 
},, 	
static.. 

GameObject.. 
CreateUIObject.. (
(..( )
string..) /
name..0 4
,..4 5

GameObject..6 @
parent..A G
)..G H
{// 	

GameObject00 
go00 
=00 
new00 

GameObject00  *
(00* +
name00+ /
)00/ 0
;000 1
go11 
.11 
AddComponent11 
<11 
RectTransform11 )
>11) *
(11* +
)11+ ,
;11, -
SetParentAndAlign22 
(22 
go22  
,22  !
parent22" (
)22( )
;22) *
return33 
go33 
;33 
}44 	
private66 
static66 
void66  
SetDefaultTextValues66 0
(660 1
TMP_Text661 9
lbl66: =
)66= >
{77 	
lbl;; 
.;; 
color;; 
=;; 
s_TextColor;; #
;;;# $
lbl<< 
.<< 
fontSize<< 
=<< 
$num<< 
;<< 
}== 	
private?? 
static?? 
void?? +
SetDefaultColorTransitionValues?? ;
(??; <

Selectable??< F
slider??G M
)??M N
{@@ 	

ColorBlockAA 
colorsAA 
=AA 
sliderAA  &
.AA& '
colorsAA' -
;AA- .
colorsBB 
.BB 
highlightedColorBB #
=BB$ %
newBB& )
ColorBB* /
(BB/ 0
$numBB0 6
,BB6 7
$numBB8 >
,BB> ?
$numBB@ F
)BBF G
;BBG H
colorsCC 
.CC 
pressedColorCC 
=CC  !
newCC" %
ColorCC& +
(CC+ ,
$numCC, 2
,CC2 3
$numCC4 :
,CC: ;
$numCC< B
)CCB C
;CCC D
colorsDD 
.DD 
disabledColorDD  
=DD! "
newDD# &
ColorDD' ,
(DD, -
$numDD- 3
,DD3 4
$numDD5 ;
,DD; <
$numDD= C
)DDC D
;DDD E
}EE 	
privateGG 
staticGG 
voidGG 
SetParentAndAlignGG -
(GG- .

GameObjectGG. 8
childGG9 >
,GG> ?

GameObjectGG@ J
parentGGK Q
)GGQ R
{HH 	
ifII 
(II 
parentII 
==II 
nullII 
)II 
returnJJ 
;JJ 
childLL 
.LL 
	transformLL 
.LL 
	SetParentLL %
(LL% &
parentLL& ,
.LL, -
	transformLL- 6
,LL6 7
falseLL8 =
)LL= >
;LL> ?
SetLayerRecursivelyMM 
(MM  
childMM  %
,MM% &
parentMM' -
.MM- .
layerMM. 3
)MM3 4
;MM4 5
}NN 	
privatePP 
staticPP 
voidPP 
SetLayerRecursivelyPP /
(PP/ 0

GameObjectPP0 :
goPP; =
,PP= >
intPP? B
layerPPC H
)PPH I
{QQ 	
goRR 
.RR 
layerRR 
=RR 
layerRR 
;RR 
	TransformSS 
tSS 
=SS 
goSS 
.SS 
	transformSS &
;SS& '
forTT 
(TT 
intTT 
iTT 
=TT 
$numTT 
;TT 
iTT 
<TT 
tTT  !
.TT! "

childCountTT" ,
;TT, -
iTT. /
++TT/ 1
)TT1 2
SetLayerRecursivelyUU #
(UU# $
tUU$ %
.UU% &
GetChildUU& .
(UU. /
iUU/ 0
)UU0 1
.UU1 2

gameObjectUU2 <
,UU< =
layerUU> C
)UUC D
;UUD E
}VV 	
publicZZ 
staticZZ 

GameObjectZZ  
CreateScrollbarZZ! 0
(ZZ0 1
	ResourcesZZ1 :
	resourcesZZ; D
)ZZD E
{[[ 	

GameObject]] 
scrollbarRoot]] $
=]]% &
CreateUIElementRoot]]' :
(]]: ;
$str]]; F
,]]F G
s_ThinElementSize]]H Y
)]]Y Z
;]]Z [

GameObject__ 

sliderArea__ !
=__" #
CreateUIObject__$ 2
(__2 3
$str__3 A
,__A B
scrollbarRoot__C P
)__P Q
;__Q R

GameObject`` 
handle`` 
=`` 
CreateUIObject``  .
(``. /
$str``/ 7
,``7 8

sliderArea``9 C
)``C D
;``D E
Imagebb 
bgImagebb 
=bb 
scrollbarRootbb )
.bb) *
AddComponentbb* 6
<bb6 7
Imagebb7 <
>bb< =
(bb= >
)bb> ?
;bb? @
bgImagecc 
.cc 
spritecc 
=cc 
	resourcescc &
.cc& '

backgroundcc' 1
;cc1 2
bgImagedd 
.dd 
typedd 
=dd 
Imagedd  
.dd  !
Typedd! %
.dd% &
Sliceddd& ,
;dd, -
bgImageee 
.ee 
coloree 
=ee $
s_DefaultSelectableColoree 4
;ee4 5
Imagegg 
handleImagegg 
=gg 
handlegg  &
.gg& '
AddComponentgg' 3
<gg3 4
Imagegg4 9
>gg9 :
(gg: ;
)gg; <
;gg< =
handleImagehh 
.hh 
spritehh 
=hh  
	resourceshh! *
.hh* +
standardhh+ 3
;hh3 4
handleImageii 
.ii 
typeii 
=ii 
Imageii $
.ii$ %
Typeii% )
.ii) *
Slicedii* 0
;ii0 1
handleImagejj 
.jj 
colorjj 
=jj $
s_DefaultSelectableColorjj  8
;jj8 9
RectTransformll 
sliderAreaRectll (
=ll) *

sliderAreall+ 5
.ll5 6
GetComponentll6 B
<llB C
RectTransformllC P
>llP Q
(llQ R
)llR S
;llS T
sliderAreaRectmm 
.mm 
	sizeDeltamm $
=mm% &
newmm' *
Vector2mm+ 2
(mm2 3
-mm3 4
$nummm4 6
,mm6 7
-mm8 9
$nummm9 ;
)mm; <
;mm< =
sliderAreaRectnn 
.nn 
	anchorMinnn $
=nn% &
Vector2nn' .
.nn. /
zeronn/ 3
;nn3 4
sliderAreaRectoo 
.oo 
	anchorMaxoo $
=oo% &
Vector2oo' .
.oo. /
oneoo/ 2
;oo2 3
RectTransformqq 

handleRectqq $
=qq% &
handleqq' -
.qq- .
GetComponentqq. :
<qq: ;
RectTransformqq; H
>qqH I
(qqI J
)qqJ K
;qqK L

handleRectrr 
.rr 
	sizeDeltarr  
=rr! "
newrr# &
Vector2rr' .
(rr. /
$numrr/ 1
,rr1 2
$numrr3 5
)rr5 6
;rr6 7
	Scrollbartt 
	scrollbartt 
=tt  !
scrollbarRoottt" /
.tt/ 0
AddComponenttt0 <
<tt< =
	Scrollbartt= F
>ttF G
(ttG H
)ttH I
;ttI J
	scrollbaruu 
.uu 

handleRectuu  
=uu! "

handleRectuu# -
;uu- .
	scrollbarvv 
.vv 
targetGraphicvv #
=vv$ %
handleImagevv& 1
;vv1 2+
SetDefaultColorTransitionValuesww +
(ww+ ,
	scrollbarww, 5
)ww5 6
;ww6 7
returnyy 
scrollbarRootyy  
;yy  !
}zz 	
public|| 
static|| 

GameObject||  
CreateButton||! -
(||- .
	Resources||. 7
	resources||8 A
)||A B
{}} 	

GameObject~~ 

buttonRoot~~ !
=~~" #
CreateUIElementRoot~~$ 7
(~~7 8
$str~~8 @
,~~@ A
s_ThickElementSize~~B T
)~~T U
;~~U V

GameObject
ÄÄ 
	childText
ÄÄ  
=
ÄÄ! "
new
ÄÄ# &

GameObject
ÄÄ' 1
(
ÄÄ1 2
$str
ÄÄ2 >
)
ÄÄ> ?
;
ÄÄ? @
	childText
ÅÅ 
.
ÅÅ 
AddComponent
ÅÅ "
<
ÅÅ" #
RectTransform
ÅÅ# 0
>
ÅÅ0 1
(
ÅÅ1 2
)
ÅÅ2 3
;
ÅÅ3 4
SetParentAndAlign
ÇÇ 
(
ÇÇ 
	childText
ÇÇ '
,
ÇÇ' (

buttonRoot
ÇÇ) 3
)
ÇÇ3 4
;
ÇÇ4 5
Image
ÑÑ 
image
ÑÑ 
=
ÑÑ 

buttonRoot
ÑÑ $
.
ÑÑ$ %
AddComponent
ÑÑ% 1
<
ÑÑ1 2
Image
ÑÑ2 7
>
ÑÑ7 8
(
ÑÑ8 9
)
ÑÑ9 :
;
ÑÑ: ;
image
ÖÖ 
.
ÖÖ 
sprite
ÖÖ 
=
ÖÖ 
	resources
ÖÖ $
.
ÖÖ$ %
standard
ÖÖ% -
;
ÖÖ- .
image
ÜÜ 
.
ÜÜ 
type
ÜÜ 
=
ÜÜ 
Image
ÜÜ 
.
ÜÜ 
Type
ÜÜ #
.
ÜÜ# $
Sliced
ÜÜ$ *
;
ÜÜ* +
image
áá 
.
áá 
color
áá 
=
áá &
s_DefaultSelectableColor
áá 2
;
áá2 3
Button
ââ 
bt
ââ 
=
ââ 

buttonRoot
ââ "
.
ââ" #
AddComponent
ââ# /
<
ââ/ 0
Button
ââ0 6
>
ââ6 7
(
ââ7 8
)
ââ8 9
;
ââ9 :-
SetDefaultColorTransitionValues
ää +
(
ää+ ,
bt
ää, .
)
ää. /
;
ää/ 0
TextMeshProUGUI
åå 
text
åå  
=
åå! "
	childText
åå# ,
.
åå, -
AddComponent
åå- 9
<
åå9 :
TextMeshProUGUI
åå: I
>
ååI J
(
ååJ K
)
ååK L
;
ååL M
text
çç 
.
çç 
text
çç 
=
çç 
$str
çç  
;
çç  !
text
éé 
.
éé 
	alignment
éé 
=
éé "
TextAlignmentOptions
éé 1
.
éé1 2
Center
éé2 8
;
éé8 9"
SetDefaultTextValues
èè  
(
èè  !
text
èè! %
)
èè% &
;
èè& '
RectTransform
ëë 
textRectTransform
ëë +
=
ëë, -
	childText
ëë. 7
.
ëë7 8
GetComponent
ëë8 D
<
ëëD E
RectTransform
ëëE R
>
ëëR S
(
ëëS T
)
ëëT U
;
ëëU V
textRectTransform
íí 
.
íí 
	anchorMin
íí '
=
íí( )
Vector2
íí* 1
.
íí1 2
zero
íí2 6
;
íí6 7
textRectTransform
ìì 
.
ìì 
	anchorMax
ìì '
=
ìì( )
Vector2
ìì* 1
.
ìì1 2
one
ìì2 5
;
ìì5 6
textRectTransform
îî 
.
îî 
	sizeDelta
îî '
=
îî( )
Vector2
îî* 1
.
îî1 2
zero
îî2 6
;
îî6 7
return
ññ 

buttonRoot
ññ 
;
ññ 
}
óó 	
public
ôô 
static
ôô 

GameObject
ôô  

CreateText
ôô! +
(
ôô+ ,
	Resources
ôô, 5
	resources
ôô6 ?
)
ôô? @
{
öö 	

GameObject
õõ 
go
õõ 
=
õõ 
null
õõ  
;
õõ  !
go
ûû 
=
ûû 
ObjectFactory
ûû "
.
ûû" #
CreateGameObject
ûû# 3
(
ûû3 4
$str
ûû4 @
)
ûû@ A
;
ûûA B
ObjectFactory
üü 
.
üü 
AddComponent
üü *
<
üü* +
TextMeshProUGUI
üü+ :
>
üü: ;
(
üü; <
go
üü< >
)
üü> ?
;
üü? @
return
•• 
go
•• 
;
•• 
}
¶¶ 	
public
©© 
static
©© 

GameObject
©©  
CreateInputField
©©! 1
(
©©1 2
	Resources
©©2 ;
	resources
©©< E
)
©©E F
{
™™ 	

GameObject
´´ 
root
´´ 
=
´´ !
CreateUIElementRoot
´´ 1
(
´´1 2
$str
´´2 D
,
´´D E 
s_ThickElementSize
´´F X
)
´´X Y
;
´´Y Z

GameObject
≠≠ 
textArea
≠≠ 
=
≠≠  !
CreateUIObject
≠≠" 0
(
≠≠0 1
$str
≠≠1 <
,
≠≠< =
root
≠≠> B
)
≠≠B C
;
≠≠C D

GameObject
ÆÆ 
childPlaceholder
ÆÆ '
=
ÆÆ( )
CreateUIObject
ÆÆ* 8
(
ÆÆ8 9
$str
ÆÆ9 F
,
ÆÆF G
textArea
ÆÆH P
)
ÆÆP Q
;
ÆÆQ R

GameObject
ØØ 
	childText
ØØ  
=
ØØ! "
CreateUIObject
ØØ# 1
(
ØØ1 2
$str
ØØ2 8
,
ØØ8 9
textArea
ØØ: B
)
ØØB C
;
ØØC D
Image
±± 
image
±± 
=
±± 
root
±± 
.
±± 
AddComponent
±± +
<
±±+ ,
Image
±±, 1
>
±±1 2
(
±±2 3
)
±±3 4
;
±±4 5
image
≤≤ 
.
≤≤ 
sprite
≤≤ 
=
≤≤ 
	resources
≤≤ $
.
≤≤$ %

inputField
≤≤% /
;
≤≤/ 0
image
≥≥ 
.
≥≥ 
type
≥≥ 
=
≥≥ 
Image
≥≥ 
.
≥≥ 
Type
≥≥ #
.
≥≥# $
Sliced
≥≥$ *
;
≥≥* +
image
¥¥ 
.
¥¥ 
color
¥¥ 
=
¥¥ &
s_DefaultSelectableColor
¥¥ 2
;
¥¥2 3
TMP_InputField
∂∂ 

inputField
∂∂ %
=
∂∂& '
root
∂∂( ,
.
∂∂, -
AddComponent
∂∂- 9
<
∂∂9 :
TMP_InputField
∂∂: H
>
∂∂H I
(
∂∂I J
)
∂∂J K
;
∂∂K L-
SetDefaultColorTransitionValues
∑∑ +
(
∑∑+ ,

inputField
∑∑, 6
)
∑∑6 7
;
∑∑7 8

RectMask2D
∫∫ 
rectMask
∫∫ 
=
∫∫  !
textArea
∫∫" *
.
∫∫* +
AddComponent
∫∫+ 7
<
∫∫7 8

RectMask2D
∫∫8 B
>
∫∫B C
(
∫∫C D
)
∫∫D E
;
∫∫E F
rectMask
ºº 
.
ºº 
padding
ºº 
=
ºº 
new
ºº "
Vector4
ºº# *
(
ºº* +
-
ºº+ ,
$num
ºº, -
,
ºº- .
-
ºº/ 0
$num
ºº0 1
,
ºº1 2
-
ºº3 4
$num
ºº4 5
,
ºº5 6
-
ºº7 8
$num
ºº8 9
)
ºº9 :
;
ºº: ;
RectTransform
øø #
textAreaRectTransform
øø /
=
øø0 1
textArea
øø2 :
.
øø: ;
GetComponent
øø; G
<
øøG H
RectTransform
øøH U
>
øøU V
(
øøV W
)
øøW X
;
øøX Y#
textAreaRectTransform
¿¿ !
.
¿¿! "
	anchorMin
¿¿" +
=
¿¿, -
Vector2
¿¿. 5
.
¿¿5 6
zero
¿¿6 :
;
¿¿: ;#
textAreaRectTransform
¡¡ !
.
¡¡! "
	anchorMax
¡¡" +
=
¡¡, -
Vector2
¡¡. 5
.
¡¡5 6
one
¡¡6 9
;
¡¡9 :#
textAreaRectTransform
¬¬ !
.
¬¬! "
	sizeDelta
¬¬" +
=
¬¬, -
Vector2
¬¬. 5
.
¬¬5 6
zero
¬¬6 :
;
¬¬: ;#
textAreaRectTransform
√√ !
.
√√! "
	offsetMin
√√" +
=
√√, -
new
√√. 1
Vector2
√√2 9
(
√√9 :
$num
√√: <
,
√√< =
$num
√√> ?
)
√√? @
;
√√@ A#
textAreaRectTransform
ƒƒ !
.
ƒƒ! "
	offsetMax
ƒƒ" +
=
ƒƒ, -
new
ƒƒ. 1
Vector2
ƒƒ2 9
(
ƒƒ9 :
-
ƒƒ: ;
$num
ƒƒ; =
,
ƒƒ= >
-
ƒƒ? @
$num
ƒƒ@ A
)
ƒƒA B
;
ƒƒB C
TextMeshProUGUI
«« 
text
««  
=
««! "
	childText
««# ,
.
««, -
AddComponent
««- 9
<
««9 :
TextMeshProUGUI
««: I
>
««I J
(
««J K
)
««K L
;
««L M
text
»» 
.
»» 
text
»» 
=
»» 
$str
»» 
;
»» 
text
…… 
.
……  
enableWordWrapping
…… #
=
……$ %
false
……& +
;
……+ ,
text
   
.
   
extraPadding
   
=
   
true
    $
;
  $ %
text
ÀÀ 
.
ÀÀ 
richText
ÀÀ 
=
ÀÀ 
true
ÀÀ  
;
ÀÀ  !"
SetDefaultTextValues
ÃÃ  
(
ÃÃ  !
text
ÃÃ! %
)
ÃÃ% &
;
ÃÃ& '
TextMeshProUGUI
ŒŒ 
placeholder
ŒŒ '
=
ŒŒ( )
childPlaceholder
ŒŒ* :
.
ŒŒ: ;
AddComponent
ŒŒ; G
<
ŒŒG H
TextMeshProUGUI
ŒŒH W
>
ŒŒW X
(
ŒŒX Y
)
ŒŒY Z
;
ŒŒZ [
placeholder
œœ 
.
œœ 
text
œœ 
=
œœ 
$str
œœ .
;
œœ. /
placeholder
–– 
.
–– 
fontSize
––  
=
––! "
$num
––# %
;
––% &
placeholder
—— 
.
—— 
	fontStyle
—— !
=
——" #

FontStyles
——$ .
.
——. /
Italic
——/ 5
;
——5 6
placeholder
““ 
.
““  
enableWordWrapping
““ *
=
““+ ,
false
““- 2
;
““2 3
placeholder
”” 
.
”” 
extraPadding
”” $
=
””% &
true
””' +
;
””+ ,
Color
÷÷ 
placeholderColor
÷÷ "
=
÷÷# $
text
÷÷% )
.
÷÷) *
color
÷÷* /
;
÷÷/ 0
placeholderColor
◊◊ 
.
◊◊ 
a
◊◊ 
*=
◊◊ !
$num
◊◊" &
;
◊◊& '
placeholder
ÿÿ 
.
ÿÿ 
color
ÿÿ 
=
ÿÿ 
placeholderColor
ÿÿ  0
;
ÿÿ0 1
placeholder
€€ 
.
€€ 

gameObject
€€ "
.
€€" #
AddComponent
€€# /
<
€€/ 0
LayoutElement
€€0 =
>
€€= >
(
€€> ?
)
€€? @
.
€€@ A
ignoreLayout
€€A M
=
€€N O
true
€€P T
;
€€T U
RectTransform
›› 
textRectTransform
›› +
=
››, -
	childText
››. 7
.
››7 8
GetComponent
››8 D
<
››D E
RectTransform
››E R
>
››R S
(
››S T
)
››T U
;
››U V
textRectTransform
ﬁﬁ 
.
ﬁﬁ 
	anchorMin
ﬁﬁ '
=
ﬁﬁ( )
Vector2
ﬁﬁ* 1
.
ﬁﬁ1 2
zero
ﬁﬁ2 6
;
ﬁﬁ6 7
textRectTransform
ﬂﬂ 
.
ﬂﬂ 
	anchorMax
ﬂﬂ '
=
ﬂﬂ( )
Vector2
ﬂﬂ* 1
.
ﬂﬂ1 2
one
ﬂﬂ2 5
;
ﬂﬂ5 6
textRectTransform
‡‡ 
.
‡‡ 
	sizeDelta
‡‡ '
=
‡‡( )
Vector2
‡‡* 1
.
‡‡1 2
zero
‡‡2 6
;
‡‡6 7
textRectTransform
·· 
.
·· 
	offsetMin
·· '
=
··( )
new
··* -
Vector2
··. 5
(
··5 6
$num
··6 7
,
··7 8
$num
··9 :
)
··: ;
;
··; <
textRectTransform
‚‚ 
.
‚‚ 
	offsetMax
‚‚ '
=
‚‚( )
new
‚‚* -
Vector2
‚‚. 5
(
‚‚5 6
$num
‚‚6 7
,
‚‚7 8
$num
‚‚9 :
)
‚‚: ;
;
‚‚; <
RectTransform
‰‰ &
placeholderRectTransform
‰‰ 2
=
‰‰3 4
childPlaceholder
‰‰5 E
.
‰‰E F
GetComponent
‰‰F R
<
‰‰R S
RectTransform
‰‰S `
>
‰‰` a
(
‰‰a b
)
‰‰b c
;
‰‰c d&
placeholderRectTransform
ÂÂ $
.
ÂÂ$ %
	anchorMin
ÂÂ% .
=
ÂÂ/ 0
Vector2
ÂÂ1 8
.
ÂÂ8 9
zero
ÂÂ9 =
;
ÂÂ= >&
placeholderRectTransform
ÊÊ $
.
ÊÊ$ %
	anchorMax
ÊÊ% .
=
ÊÊ/ 0
Vector2
ÊÊ1 8
.
ÊÊ8 9
one
ÊÊ9 <
;
ÊÊ< =&
placeholderRectTransform
ÁÁ $
.
ÁÁ$ %
	sizeDelta
ÁÁ% .
=
ÁÁ/ 0
Vector2
ÁÁ1 8
.
ÁÁ8 9
zero
ÁÁ9 =
;
ÁÁ= >&
placeholderRectTransform
ËË $
.
ËË$ %
	offsetMin
ËË% .
=
ËË/ 0
new
ËË1 4
Vector2
ËË5 <
(
ËË< =
$num
ËË= >
,
ËË> ?
$num
ËË@ A
)
ËËA B
;
ËËB C&
placeholderRectTransform
ÈÈ $
.
ÈÈ$ %
	offsetMax
ÈÈ% .
=
ÈÈ/ 0
new
ÈÈ1 4
Vector2
ÈÈ5 <
(
ÈÈ< =
$num
ÈÈ= >
,
ÈÈ> ?
$num
ÈÈ@ A
)
ÈÈA B
;
ÈÈB C

inputField
ÎÎ 
.
ÎÎ 
textViewport
ÎÎ #
=
ÎÎ$ %#
textAreaRectTransform
ÎÎ& ;
;
ÎÎ; <

inputField
ÏÏ 
.
ÏÏ 
textComponent
ÏÏ $
=
ÏÏ% &
text
ÏÏ' +
;
ÏÏ+ ,

inputField
ÌÌ 
.
ÌÌ 
placeholder
ÌÌ "
=
ÌÌ# $
placeholder
ÌÌ% 0
;
ÌÌ0 1

inputField
ÓÓ 
.
ÓÓ 
	fontAsset
ÓÓ  
=
ÓÓ! "
text
ÓÓ# '
.
ÓÓ' (
font
ÓÓ( ,
;
ÓÓ, -
return
 
root
 
;
 
}
ÒÒ 	
public
ÛÛ 
static
ÛÛ 

GameObject
ÛÛ  
CreateDropdown
ÛÛ! /
(
ÛÛ/ 0
	Resources
ÛÛ0 9
	resources
ÛÛ: C
)
ÛÛC D
{
ÙÙ 	

GameObject
ıı 
root
ıı 
=
ıı !
CreateUIElementRoot
ıı 1
(
ıı1 2
$str
ıı2 <
,
ıı< = 
s_ThickElementSize
ıı> P
)
ııP Q
;
ııQ R

GameObject
˜˜ 
label
˜˜ 
=
˜˜ 
CreateUIObject
˜˜ -
(
˜˜- .
$str
˜˜. 5
,
˜˜5 6
root
˜˜7 ;
)
˜˜; <
;
˜˜< =

GameObject
¯¯ 
arrow
¯¯ 
=
¯¯ 
CreateUIObject
¯¯ -
(
¯¯- .
$str
¯¯. 5
,
¯¯5 6
root
¯¯7 ;
)
¯¯; <
;
¯¯< =

GameObject
˘˘ 
template
˘˘ 
=
˘˘  !
CreateUIObject
˘˘" 0
(
˘˘0 1
$str
˘˘1 ;
,
˘˘; <
root
˘˘= A
)
˘˘A B
;
˘˘B C

GameObject
˙˙ 
viewport
˙˙ 
=
˙˙  !
CreateUIObject
˙˙" 0
(
˙˙0 1
$str
˙˙1 ;
,
˙˙; <
template
˙˙= E
)
˙˙E F
;
˙˙F G

GameObject
˚˚ 
content
˚˚ 
=
˚˚  
CreateUIObject
˚˚! /
(
˚˚/ 0
$str
˚˚0 9
,
˚˚9 :
viewport
˚˚; C
)
˚˚C D
;
˚˚D E

GameObject
¸¸ 
item
¸¸ 
=
¸¸ 
CreateUIObject
¸¸ ,
(
¸¸, -
$str
¸¸- 3
,
¸¸3 4
content
¸¸5 <
)
¸¸< =
;
¸¸= >

GameObject
˝˝ 
itemBackground
˝˝ %
=
˝˝& '
CreateUIObject
˝˝( 6
(
˝˝6 7
$str
˝˝7 H
,
˝˝H I
item
˝˝J N
)
˝˝N O
;
˝˝O P

GameObject
˛˛ 
itemCheckmark
˛˛ $
=
˛˛% &
CreateUIObject
˛˛' 5
(
˛˛5 6
$str
˛˛6 F
,
˛˛F G
item
˛˛H L
)
˛˛L M
;
˛˛M N

GameObject
ˇˇ 
	itemLabel
ˇˇ  
=
ˇˇ! "
CreateUIObject
ˇˇ# 1
(
ˇˇ1 2
$str
ˇˇ2 >
,
ˇˇ> ?
item
ˇˇ@ D
)
ˇˇD E
;
ˇˇE F

GameObject
ÉÉ 
	scrollbar
ÉÉ  
=
ÉÉ! "
CreateScrollbar
ÉÉ# 2
(
ÉÉ2 3
	resources
ÉÉ3 <
)
ÉÉ< =
;
ÉÉ= >
	scrollbar
ÑÑ 
.
ÑÑ 
name
ÑÑ 
=
ÑÑ 
$str
ÑÑ (
;
ÑÑ( )
SetParentAndAlign
ÖÖ 
(
ÖÖ 
	scrollbar
ÖÖ '
,
ÖÖ' (
template
ÖÖ) 1
)
ÖÖ1 2
;
ÖÖ2 3
	Scrollbar
áá  
scrollbarScrollbar
áá (
=
áá) *
	scrollbar
áá+ 4
.
áá4 5
GetComponent
áá5 A
<
ááA B
	Scrollbar
ááB K
>
ááK L
(
ááL M
)
ááM N
;
ááN O 
scrollbarScrollbar
àà 
.
àà 
SetDirection
àà +
(
àà+ ,
	Scrollbar
àà, 5
.
àà5 6
	Direction
àà6 ?
.
àà? @
BottomToTop
àà@ K
,
ààK L
true
ààM Q
)
ààQ R
;
ààR S
RectTransform
ää 
vScrollbarRT
ää &
=
ää' (
	scrollbar
ää) 2
.
ää2 3
GetComponent
ää3 ?
<
ää? @
RectTransform
ää@ M
>
ääM N
(
ääN O
)
ääO P
;
ääP Q
vScrollbarRT
ãã 
.
ãã 
	anchorMin
ãã "
=
ãã# $
Vector2
ãã% ,
.
ãã, -
right
ãã- 2
;
ãã2 3
vScrollbarRT
åå 
.
åå 
	anchorMax
åå "
=
åå# $
Vector2
åå% ,
.
åå, -
one
åå- 0
;
åå0 1
vScrollbarRT
çç 
.
çç 
pivot
çç 
=
çç  
Vector2
çç! (
.
çç( )
one
çç) ,
;
çç, -
vScrollbarRT
éé 
.
éé 
	sizeDelta
éé "
=
éé# $
new
éé% (
Vector2
éé) 0
(
éé0 1
vScrollbarRT
éé1 =
.
éé= >
	sizeDelta
éé> G
.
ééG H
x
ééH I
,
ééI J
$num
ééK L
)
ééL M
;
ééM N
TextMeshProUGUI
íí 
itemLabelText
íí )
=
íí* +
	itemLabel
íí, 5
.
íí5 6
AddComponent
íí6 B
<
ííB C
TextMeshProUGUI
ííC R
>
ííR S
(
ííS T
)
ííT U
;
ííU V"
SetDefaultTextValues
ìì  
(
ìì  !
itemLabelText
ìì! .
)
ìì. /
;
ìì/ 0
itemLabelText
îî 
.
îî 
	alignment
îî #
=
îî$ %"
TextAlignmentOptions
îî& :
.
îî: ;
Left
îî; ?
;
îî? @
Image
ññ !
itemBackgroundImage
ññ %
=
ññ& '
itemBackground
ññ( 6
.
ññ6 7
AddComponent
ññ7 C
<
ññC D
Image
ññD I
>
ññI J
(
ññJ K
)
ññK L
;
ññL M!
itemBackgroundImage
óó 
.
óó  
color
óó  %
=
óó& '
new
óó( +
Color32
óó, 3
(
óó3 4
$num
óó4 7
,
óó7 8
$num
óó9 <
,
óó< =
$num
óó> A
,
óóA B
$num
óóC F
)
óóF G
;
óóG H
Image
ôô  
itemCheckmarkImage
ôô $
=
ôô% &
itemCheckmark
ôô' 4
.
ôô4 5
AddComponent
ôô5 A
<
ôôA B
Image
ôôB G
>
ôôG H
(
ôôH I
)
ôôI J
;
ôôJ K 
itemCheckmarkImage
öö 
.
öö 
sprite
öö %
=
öö& '
	resources
öö( 1
.
öö1 2
	checkmark
öö2 ;
;
öö; <
Toggle
úú 

itemToggle
úú 
=
úú 
item
úú  $
.
úú$ %
AddComponent
úú% 1
<
úú1 2
Toggle
úú2 8
>
úú8 9
(
úú9 :
)
úú: ;
;
úú; <

itemToggle
ùù 
.
ùù 
targetGraphic
ùù $
=
ùù% &!
itemBackgroundImage
ùù' :
;
ùù: ;

itemToggle
ûû 
.
ûû 
graphic
ûû 
=
ûû   
itemCheckmarkImage
ûû! 3
;
ûû3 4

itemToggle
üü 
.
üü 
isOn
üü 
=
üü 
true
üü "
;
üü" #
Image
££ 
templateImage
££ 
=
££  !
template
££" *
.
££* +
AddComponent
££+ 7
<
££7 8
Image
££8 =
>
££= >
(
££> ?
)
££? @
;
££@ A
templateImage
§§ 
.
§§ 
sprite
§§  
=
§§! "
	resources
§§# ,
.
§§, -
standard
§§- 5
;
§§5 6
templateImage
•• 
.
•• 
type
•• 
=
••  
Image
••! &
.
••& '
Type
••' +
.
••+ ,
Sliced
••, 2
;
••2 3

ScrollRect
ßß  
templateScrollRect
ßß )
=
ßß* +
template
ßß, 4
.
ßß4 5
AddComponent
ßß5 A
<
ßßA B

ScrollRect
ßßB L
>
ßßL M
(
ßßM N
)
ßßN O
;
ßßO P 
templateScrollRect
®® 
.
®® 
content
®® &
=
®®' (
(
®®) *
RectTransform
®®* 7
)
®®7 8
content
®®8 ?
.
®®? @
	transform
®®@ I
;
®®I J 
templateScrollRect
©© 
.
©© 
viewport
©© '
=
©©( )
(
©©* +
RectTransform
©©+ 8
)
©©8 9
viewport
©©9 A
.
©©A B
	transform
©©B K
;
©©K L 
templateScrollRect
™™ 
.
™™ 

horizontal
™™ )
=
™™* +
false
™™, 1
;
™™1 2 
templateScrollRect
´´ 
.
´´ 
movementType
´´ +
=
´´, -

ScrollRect
´´. 8
.
´´8 9
MovementType
´´9 E
.
´´E F
Clamped
´´F M
;
´´M N 
templateScrollRect
¨¨ 
.
¨¨ 
verticalScrollbar
¨¨ 0
=
¨¨1 2 
scrollbarScrollbar
¨¨3 E
;
¨¨E F 
templateScrollRect
≠≠ 
.
≠≠ )
verticalScrollbarVisibility
≠≠ :
=
≠≠; <

ScrollRect
≠≠= G
.
≠≠G H!
ScrollbarVisibility
≠≠H [
.
≠≠[ \'
AutoHideAndExpandViewport
≠≠\ u
;
≠≠u v 
templateScrollRect
ÆÆ 
.
ÆÆ &
verticalScrollbarSpacing
ÆÆ 7
=
ÆÆ8 9
-
ÆÆ: ;
$num
ÆÆ; <
;
ÆÆ< =
Mask
∞∞ 
scrollRectMask
∞∞ 
=
∞∞  !
viewport
∞∞" *
.
∞∞* +
AddComponent
∞∞+ 7
<
∞∞7 8
Mask
∞∞8 <
>
∞∞< =
(
∞∞= >
)
∞∞> ?
;
∞∞? @
scrollRectMask
±± 
.
±± 
showMaskGraphic
±± *
=
±±+ ,
false
±±- 2
;
±±2 3
Image
≥≥ 
viewportImage
≥≥ 
=
≥≥  !
viewport
≥≥" *
.
≥≥* +
AddComponent
≥≥+ 7
<
≥≥7 8
Image
≥≥8 =
>
≥≥= >
(
≥≥> ?
)
≥≥? @
;
≥≥@ A
viewportImage
¥¥ 
.
¥¥ 
sprite
¥¥  
=
¥¥! "
	resources
¥¥# ,
.
¥¥, -
mask
¥¥- 1
;
¥¥1 2
viewportImage
µµ 
.
µµ 
type
µµ 
=
µµ  
Image
µµ! &
.
µµ& '
Type
µµ' +
.
µµ+ ,
Sliced
µµ, 2
;
µµ2 3
TextMeshProUGUI
ππ 
	labelText
ππ %
=
ππ& '
label
ππ( -
.
ππ- .
AddComponent
ππ. :
<
ππ: ;
TextMeshProUGUI
ππ; J
>
ππJ K
(
ππK L
)
ππL M
;
ππM N"
SetDefaultTextValues
∫∫  
(
∫∫  !
	labelText
∫∫! *
)
∫∫* +
;
∫∫+ ,
	labelText
ªª 
.
ªª 
	alignment
ªª 
=
ªª  !"
TextAlignmentOptions
ªª" 6
.
ªª6 7
Left
ªª7 ;
;
ªª; <
Image
ΩΩ 

arrowImage
ΩΩ 
=
ΩΩ 
arrow
ΩΩ $
.
ΩΩ$ %
AddComponent
ΩΩ% 1
<
ΩΩ1 2
Image
ΩΩ2 7
>
ΩΩ7 8
(
ΩΩ8 9
)
ΩΩ9 :
;
ΩΩ: ;

arrowImage
ææ 
.
ææ 
sprite
ææ 
=
ææ 
	resources
ææ  )
.
ææ) *
dropdown
ææ* 2
;
ææ2 3
Image
¿¿ 
backgroundImage
¿¿ !
=
¿¿" #
root
¿¿$ (
.
¿¿( )
AddComponent
¿¿) 5
<
¿¿5 6
Image
¿¿6 ;
>
¿¿; <
(
¿¿< =
)
¿¿= >
;
¿¿> ?
backgroundImage
¡¡ 
.
¡¡ 
sprite
¡¡ "
=
¡¡# $
	resources
¡¡% .
.
¡¡. /
standard
¡¡/ 7
;
¡¡7 8
backgroundImage
¬¬ 
.
¬¬ 
color
¬¬ !
=
¬¬" #&
s_DefaultSelectableColor
¬¬$ <
;
¬¬< =
backgroundImage
√√ 
.
√√ 
type
√√  
=
√√! "
Image
√√# (
.
√√( )
Type
√√) -
.
√√- .
Sliced
√√. 4
;
√√4 5
TMP_Dropdown
≈≈ 
dropdown
≈≈ !
=
≈≈" #
root
≈≈$ (
.
≈≈( )
AddComponent
≈≈) 5
<
≈≈5 6
TMP_Dropdown
≈≈6 B
>
≈≈B C
(
≈≈C D
)
≈≈D E
;
≈≈E F
dropdown
∆∆ 
.
∆∆ 
targetGraphic
∆∆ "
=
∆∆# $
backgroundImage
∆∆% 4
;
∆∆4 5-
SetDefaultColorTransitionValues
«« +
(
««+ ,
dropdown
««, 4
)
««4 5
;
««5 6
dropdown
»» 
.
»» 
template
»» 
=
»» 
template
»»  (
.
»»( )
GetComponent
»») 5
<
»»5 6
RectTransform
»»6 C
>
»»C D
(
»»D E
)
»»E F
;
»»F G
dropdown
…… 
.
…… 
captionText
……  
=
……! "
	labelText
……# ,
;
……, -
dropdown
   
.
   
itemText
   
=
   
itemLabelText
    -
;
  - .
itemLabelText
ÕÕ 
.
ÕÕ 
text
ÕÕ 
=
ÕÕ  
$str
ÕÕ! +
;
ÕÕ+ ,
dropdown
ŒŒ 
.
ŒŒ 
options
ŒŒ 
.
ŒŒ 
Add
ŒŒ  
(
ŒŒ  !
new
ŒŒ! $
TMP_Dropdown
ŒŒ% 1
.
ŒŒ1 2

OptionData
ŒŒ2 <
{
ŒŒ= >
text
ŒŒ> B
=
ŒŒC D
$str
ŒŒE O
}
ŒŒP Q
)
ŒŒQ R
;
ŒŒR S
dropdown
œœ 
.
œœ 
options
œœ 
.
œœ 
Add
œœ  
(
œœ  !
new
œœ! $
TMP_Dropdown
œœ% 1
.
œœ1 2

OptionData
œœ2 <
{
œœ= >
text
œœ> B
=
œœC D
$str
œœE O
}
œœP Q
)
œœQ R
;
œœR S
dropdown
–– 
.
–– 
options
–– 
.
–– 
Add
––  
(
––  !
new
––! $
TMP_Dropdown
––% 1
.
––1 2

OptionData
––2 <
{
––= >
text
––> B
=
––C D
$str
––E O
}
––P Q
)
––Q R
;
––R S
dropdown
—— 
.
—— 
RefreshShownValue
—— &
(
——& '
)
——' (
;
——( )
RectTransform
’’ 
labelRT
’’ !
=
’’" #
label
’’$ )
.
’’) *
GetComponent
’’* 6
<
’’6 7
RectTransform
’’7 D
>
’’D E
(
’’E F
)
’’F G
;
’’G H
labelRT
÷÷ 
.
÷÷ 
	anchorMin
÷÷ 
=
÷÷ 
Vector2
÷÷  '
.
÷÷' (
zero
÷÷( ,
;
÷÷, -
labelRT
◊◊ 
.
◊◊ 
	anchorMax
◊◊ 
=
◊◊ 
Vector2
◊◊  '
.
◊◊' (
one
◊◊( +
;
◊◊+ ,
labelRT
ÿÿ 
.
ÿÿ 
	offsetMin
ÿÿ 
=
ÿÿ 
new
ÿÿ  #
Vector2
ÿÿ$ +
(
ÿÿ+ ,
$num
ÿÿ, .
,
ÿÿ. /
$num
ÿÿ0 1
)
ÿÿ1 2
;
ÿÿ2 3
labelRT
ŸŸ 
.
ŸŸ 
	offsetMax
ŸŸ 
=
ŸŸ 
new
ŸŸ  #
Vector2
ŸŸ$ +
(
ŸŸ+ ,
-
ŸŸ, -
$num
ŸŸ- /
,
ŸŸ/ 0
-
ŸŸ1 2
$num
ŸŸ2 3
)
ŸŸ3 4
;
ŸŸ4 5
RectTransform
€€ 
arrowRT
€€ !
=
€€" #
arrow
€€$ )
.
€€) *
GetComponent
€€* 6
<
€€6 7
RectTransform
€€7 D
>
€€D E
(
€€E F
)
€€F G
;
€€G H
arrowRT
‹‹ 
.
‹‹ 
	anchorMin
‹‹ 
=
‹‹ 
new
‹‹  #
Vector2
‹‹$ +
(
‹‹+ ,
$num
‹‹, -
,
‹‹- .
$num
‹‹/ 3
)
‹‹3 4
;
‹‹4 5
arrowRT
›› 
.
›› 
	anchorMax
›› 
=
›› 
new
››  #
Vector2
››$ +
(
››+ ,
$num
››, -
,
››- .
$num
››/ 3
)
››3 4
;
››4 5
arrowRT
ﬁﬁ 
.
ﬁﬁ 
	sizeDelta
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ  #
Vector2
ﬁﬁ$ +
(
ﬁﬁ+ ,
$num
ﬁﬁ, .
,
ﬁﬁ. /
$num
ﬁﬁ0 2
)
ﬁﬁ2 3
;
ﬁﬁ3 4
arrowRT
ﬂﬂ 
.
ﬂﬂ 
anchoredPosition
ﬂﬂ $
=
ﬂﬂ% &
new
ﬂﬂ' *
Vector2
ﬂﬂ+ 2
(
ﬂﬂ2 3
-
ﬂﬂ3 4
$num
ﬂﬂ4 6
,
ﬂﬂ6 7
$num
ﬂﬂ8 9
)
ﬂﬂ9 :
;
ﬂﬂ: ;
RectTransform
·· 

templateRT
·· $
=
··% &
template
··' /
.
··/ 0
GetComponent
··0 <
<
··< =
RectTransform
··= J
>
··J K
(
··K L
)
··L M
;
··M N

templateRT
‚‚ 
.
‚‚ 
	anchorMin
‚‚  
=
‚‚! "
new
‚‚# &
Vector2
‚‚' .
(
‚‚. /
$num
‚‚/ 0
,
‚‚0 1
$num
‚‚2 3
)
‚‚3 4
;
‚‚4 5

templateRT
„„ 
.
„„ 
	anchorMax
„„  
=
„„! "
new
„„# &
Vector2
„„' .
(
„„. /
$num
„„/ 0
,
„„0 1
$num
„„2 3
)
„„3 4
;
„„4 5

templateRT
‰‰ 
.
‰‰ 
pivot
‰‰ 
=
‰‰ 
new
‰‰ "
Vector2
‰‰# *
(
‰‰* +
$num
‰‰+ /
,
‰‰/ 0
$num
‰‰1 2
)
‰‰2 3
;
‰‰3 4

templateRT
ÂÂ 
.
ÂÂ 
anchoredPosition
ÂÂ '
=
ÂÂ( )
new
ÂÂ* -
Vector2
ÂÂ. 5
(
ÂÂ5 6
$num
ÂÂ6 7
,
ÂÂ7 8
$num
ÂÂ9 :
)
ÂÂ: ;
;
ÂÂ; <

templateRT
ÊÊ 
.
ÊÊ 
	sizeDelta
ÊÊ  
=
ÊÊ! "
new
ÊÊ# &
Vector2
ÊÊ' .
(
ÊÊ. /
$num
ÊÊ/ 0
,
ÊÊ0 1
$num
ÊÊ2 5
)
ÊÊ5 6
;
ÊÊ6 7
RectTransform
ËË 

viewportRT
ËË $
=
ËË% &
viewport
ËË' /
.
ËË/ 0
GetComponent
ËË0 <
<
ËË< =
RectTransform
ËË= J
>
ËËJ K
(
ËËK L
)
ËËL M
;
ËËM N

viewportRT
ÈÈ 
.
ÈÈ 
	anchorMin
ÈÈ  
=
ÈÈ! "
new
ÈÈ# &
Vector2
ÈÈ' .
(
ÈÈ. /
$num
ÈÈ/ 0
,
ÈÈ0 1
$num
ÈÈ2 3
)
ÈÈ3 4
;
ÈÈ4 5

viewportRT
ÍÍ 
.
ÍÍ 
	anchorMax
ÍÍ  
=
ÍÍ! "
new
ÍÍ# &
Vector2
ÍÍ' .
(
ÍÍ. /
$num
ÍÍ/ 0
,
ÍÍ0 1
$num
ÍÍ2 3
)
ÍÍ3 4
;
ÍÍ4 5

viewportRT
ÎÎ 
.
ÎÎ 
	sizeDelta
ÎÎ  
=
ÎÎ! "
new
ÎÎ# &
Vector2
ÎÎ' .
(
ÎÎ. /
-
ÎÎ/ 0
$num
ÎÎ0 2
,
ÎÎ2 3
$num
ÎÎ4 5
)
ÎÎ5 6
;
ÎÎ6 7

viewportRT
ÏÏ 
.
ÏÏ 
pivot
ÏÏ 
=
ÏÏ 
new
ÏÏ "
Vector2
ÏÏ# *
(
ÏÏ* +
$num
ÏÏ+ ,
,
ÏÏ, -
$num
ÏÏ. /
)
ÏÏ/ 0
;
ÏÏ0 1
RectTransform
ÓÓ 
	contentRT
ÓÓ #
=
ÓÓ$ %
content
ÓÓ& -
.
ÓÓ- .
GetComponent
ÓÓ. :
<
ÓÓ: ;
RectTransform
ÓÓ; H
>
ÓÓH I
(
ÓÓI J
)
ÓÓJ K
;
ÓÓK L
	contentRT
ÔÔ 
.
ÔÔ 
	anchorMin
ÔÔ 
=
ÔÔ  !
new
ÔÔ" %
Vector2
ÔÔ& -
(
ÔÔ- .
$num
ÔÔ. 0
,
ÔÔ0 1
$num
ÔÔ2 3
)
ÔÔ3 4
;
ÔÔ4 5
	contentRT
 
.
 
	anchorMax
 
=
  !
new
" %
Vector2
& -
(
- .
$num
. 0
,
0 1
$num
2 3
)
3 4
;
4 5
	contentRT
ÒÒ 
.
ÒÒ 
pivot
ÒÒ 
=
ÒÒ 
new
ÒÒ !
Vector2
ÒÒ" )
(
ÒÒ) *
$num
ÒÒ* .
,
ÒÒ. /
$num
ÒÒ0 1
)
ÒÒ1 2
;
ÒÒ2 3
	contentRT
ÚÚ 
.
ÚÚ 
anchoredPosition
ÚÚ &
=
ÚÚ' (
new
ÚÚ) ,
Vector2
ÚÚ- 4
(
ÚÚ4 5
$num
ÚÚ5 6
,
ÚÚ6 7
$num
ÚÚ8 9
)
ÚÚ9 :
;
ÚÚ: ;
	contentRT
ÛÛ 
.
ÛÛ 
	sizeDelta
ÛÛ 
=
ÛÛ  !
new
ÛÛ" %
Vector2
ÛÛ& -
(
ÛÛ- .
$num
ÛÛ. /
,
ÛÛ/ 0
$num
ÛÛ1 3
)
ÛÛ3 4
;
ÛÛ4 5
RectTransform
ıı 
itemRT
ıı  
=
ıı! "
item
ıı# '
.
ıı' (
GetComponent
ıı( 4
<
ıı4 5
RectTransform
ıı5 B
>
ııB C
(
ııC D
)
ııD E
;
ııE F
itemRT
ˆˆ 
.
ˆˆ 
	anchorMin
ˆˆ 
=
ˆˆ 
new
ˆˆ "
Vector2
ˆˆ# *
(
ˆˆ* +
$num
ˆˆ+ ,
,
ˆˆ, -
$num
ˆˆ. 2
)
ˆˆ2 3
;
ˆˆ3 4
itemRT
˜˜ 
.
˜˜ 
	anchorMax
˜˜ 
=
˜˜ 
new
˜˜ "
Vector2
˜˜# *
(
˜˜* +
$num
˜˜+ ,
,
˜˜, -
$num
˜˜. 2
)
˜˜2 3
;
˜˜3 4
itemRT
¯¯ 
.
¯¯ 
	sizeDelta
¯¯ 
=
¯¯ 
new
¯¯ "
Vector2
¯¯# *
(
¯¯* +
$num
¯¯+ ,
,
¯¯, -
$num
¯¯. 0
)
¯¯0 1
;
¯¯1 2
RectTransform
˙˙ 
itemBackgroundRT
˙˙ *
=
˙˙+ ,
itemBackground
˙˙- ;
.
˙˙; <
GetComponent
˙˙< H
<
˙˙H I
RectTransform
˙˙I V
>
˙˙V W
(
˙˙W X
)
˙˙X Y
;
˙˙Y Z
itemBackgroundRT
˚˚ 
.
˚˚ 
	anchorMin
˚˚ &
=
˚˚' (
Vector2
˚˚) 0
.
˚˚0 1
zero
˚˚1 5
;
˚˚5 6
itemBackgroundRT
¸¸ 
.
¸¸ 
	anchorMax
¸¸ &
=
¸¸' (
Vector2
¸¸) 0
.
¸¸0 1
one
¸¸1 4
;
¸¸4 5
itemBackgroundRT
˝˝ 
.
˝˝ 
	sizeDelta
˝˝ &
=
˝˝' (
Vector2
˝˝) 0
.
˝˝0 1
zero
˝˝1 5
;
˝˝5 6
RectTransform
ˇˇ 
itemCheckmarkRT
ˇˇ )
=
ˇˇ* +
itemCheckmark
ˇˇ, 9
.
ˇˇ9 :
GetComponent
ˇˇ: F
<
ˇˇF G
RectTransform
ˇˇG T
>
ˇˇT U
(
ˇˇU V
)
ˇˇV W
;
ˇˇW X
itemCheckmarkRT
ÄÄ 
.
ÄÄ 
	anchorMin
ÄÄ %
=
ÄÄ& '
new
ÄÄ( +
Vector2
ÄÄ, 3
(
ÄÄ3 4
$num
ÄÄ4 5
,
ÄÄ5 6
$num
ÄÄ7 ;
)
ÄÄ; <
;
ÄÄ< =
itemCheckmarkRT
ÅÅ 
.
ÅÅ 
	anchorMax
ÅÅ %
=
ÅÅ& '
new
ÅÅ( +
Vector2
ÅÅ, 3
(
ÅÅ3 4
$num
ÅÅ4 5
,
ÅÅ5 6
$num
ÅÅ7 ;
)
ÅÅ; <
;
ÅÅ< =
itemCheckmarkRT
ÇÇ 
.
ÇÇ 
	sizeDelta
ÇÇ %
=
ÇÇ& '
new
ÇÇ( +
Vector2
ÇÇ, 3
(
ÇÇ3 4
$num
ÇÇ4 6
,
ÇÇ6 7
$num
ÇÇ8 :
)
ÇÇ: ;
;
ÇÇ; <
itemCheckmarkRT
ÉÉ 
.
ÉÉ 
anchoredPosition
ÉÉ ,
=
ÉÉ- .
new
ÉÉ/ 2
Vector2
ÉÉ3 :
(
ÉÉ: ;
$num
ÉÉ; =
,
ÉÉ= >
$num
ÉÉ? @
)
ÉÉ@ A
;
ÉÉA B
RectTransform
ÖÖ 
itemLabelRT
ÖÖ %
=
ÖÖ& '
	itemLabel
ÖÖ( 1
.
ÖÖ1 2
GetComponent
ÖÖ2 >
<
ÖÖ> ?
RectTransform
ÖÖ? L
>
ÖÖL M
(
ÖÖM N
)
ÖÖN O
;
ÖÖO P
itemLabelRT
ÜÜ 
.
ÜÜ 
	anchorMin
ÜÜ !
=
ÜÜ" #
Vector2
ÜÜ$ +
.
ÜÜ+ ,
zero
ÜÜ, 0
;
ÜÜ0 1
itemLabelRT
áá 
.
áá 
	anchorMax
áá !
=
áá" #
Vector2
áá$ +
.
áá+ ,
one
áá, /
;
áá/ 0
itemLabelRT
àà 
.
àà 
	offsetMin
àà !
=
àà" #
new
àà$ '
Vector2
àà( /
(
àà/ 0
$num
àà0 2
,
àà2 3
$num
àà4 5
)
àà5 6
;
àà6 7
itemLabelRT
ââ 
.
ââ 
	offsetMax
ââ !
=
ââ" #
new
ââ$ '
Vector2
ââ( /
(
ââ/ 0
-
ââ0 1
$num
ââ1 3
,
ââ3 4
-
ââ5 6
$num
ââ6 7
)
ââ7 8
;
ââ8 9
template
ãã 
.
ãã 
	SetActive
ãã 
(
ãã 
false
ãã $
)
ãã$ %
;
ãã% &
return
çç 
root
çç 
;
çç 
}
éé 	
}
èè 
}êê æŒ
bC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMPro_Private.cs
	namespace 	
TMPro
 
{ 
public 

partial 
class 
TextMeshPro $
{ 
[ 	
SerializeField	 
] 
private 
bool !
m_hasFontAssetChanged *
=+ ,
false- 2
;2 3
float !
m_previousLossyScaleY #
=$ %
-& '
$num' (
;( )
[ 	
SerializeField	 
] 
private 
Renderer 

m_renderer #
;# $
private 

MeshFilter 
m_meshFilter '
;' (
private 
bool 
m_isFirstAllocation (
;( )
private 
int 
m_max_characters $
=% &
$num' (
;( )
private 
int 
m_max_numberOfLines '
=( )
$num* +
;+ ,
private 
TMP_SubMesh 
[ 
] 
m_subTextObjects .
=/ 0
new1 4
TMP_SubMesh5 @
[@ A
$numA B
]B C
;C D
["" 	
SerializeField""	 
]"" 
private## 
MaskingTypes## 

m_maskType## '
;##' (
private&& 
	Matrix4x4&& 
m_EnvMapMatrix&& (
=&&) *
new&&+ .
	Matrix4x4&&/ 8
(&&8 9
)&&9 :
;&&: ;
private)) 
Vector3)) 
[)) 
])) "
m_RectTransformCorners)) 0
=))1 2
new))3 6
Vector3))7 >
[))> ?
$num))? @
]))@ A
;))A B
[++ 	
NonSerialized++	 
]++ 
private,, 
bool,, #
m_isRegisteredForEvents,, ,
;,,, -
private// 
static// 
ProfilerMarker// % 
k_GenerateTextMarker//& :
=//; <
new//= @
ProfilerMarker//A O
(//O P
$str//P a
)//a b
;//b c
private00 
static00 
ProfilerMarker00 %!
k_SetArraySizesMarker00& ;
=00< =
new00> A
ProfilerMarker00B P
(00P Q
$str00Q d
)00d e
;00e f
private11 
static11 
ProfilerMarker11 %&
k_GenerateTextPhaseIMarker11& @
=11A B
new11C F
ProfilerMarker11G U
(11U V
$str11V r
)11r s
;11s t
private22 
static22 
ProfilerMarker22 %#
k_ParseMarkupTextMarker22& =
=22> ?
new22@ C
ProfilerMarker22D R
(22R S
$str22S j
)22j k
;22k l
private33 
static33 
ProfilerMarker33 %#
k_CharacterLookupMarker33& =
=33> ?
new33@ C
ProfilerMarker33D R
(33R S
$str33S v
)33v w
;33w x
private44 
static44 
ProfilerMarker44 %&
k_HandleGPOSFeaturesMarker44& @
=44A B
new44C F
ProfilerMarker44G U
(44U V
$str44V p
)44p q
;44q r
private55 
static55 
ProfilerMarker55 %-
!k_CalculateVerticesPositionMarker55& G
=55H I
new55J M
ProfilerMarker55N \
(55\ ]
$str55] ~
)55~ 
;	55 Ä
private66 
static66 
ProfilerMarker66 %&
k_ComputeTextMetricsMarker66& @
=66A B
new66C F
ProfilerMarker66G U
(66U V
$str66V p
)66p q
;66q r
private77 
static77 
ProfilerMarker77 %*
k_HandleVisibleCharacterMarker77& D
=77E F
new77G J
ProfilerMarker77K Y
(77Y Z
$str77Z x
)77x y
;77y z
private88 
static88 
ProfilerMarker88 %%
k_HandleWhiteSpacesMarker88& ?
=88@ A
new88B E
ProfilerMarker88F T
(88T U
$str	88U Å
)
88Å Ç
;
88Ç É
private99 
static99 
ProfilerMarker99 %0
$k_HandleHorizontalLineBreakingMarker99& J
=99K L
new99M P
ProfilerMarker99Q _
(99_ `
$str	99` Ö
)
99Ö Ü
;
99Ü á
private:: 
static:: 
ProfilerMarker:: %.
"k_HandleVerticalLineBreakingMarker::& H
=::I J
new::K N
ProfilerMarker::O ]
(::] ^
$str	::^ Å
)
::Å Ç
;
::Ç É
private;; 
static;; 
ProfilerMarker;; %'
k_SaveGlyphVertexDataMarker;;& A
=;;B C
new;;D G
ProfilerMarker;;H V
(;;V W
$str;;W s
);;s t
;;;t u
private<< 
static<< 
ProfilerMarker<< %+
k_ComputeCharacterAdvanceMarker<<& E
=<<F G
new<<H K
ProfilerMarker<<L Z
(<<Z [
$str<<[ z
)<<z {
;<<{ |
private== 
static== 
ProfilerMarker== %(
k_HandleCarriageReturnMarker==& B
===C D
new==E H
ProfilerMarker==I W
(==W X
$str==X t
)==t u
;==u v
private>> 
static>> 
ProfilerMarker>> %)
k_HandleLineTerminationMarker>>& C
=>>D E
new>>F I
ProfilerMarker>>J X
(>>X Y
$str>>Y v
)>>v w
;>>w x
private?? 
static?? 
ProfilerMarker?? % 
k_SavePageInfoMarker??& :
=??; <
new??= @
ProfilerMarker??A O
(??O P
$str??P r
)??r s
;??s t
private@@ 
static@@ 
ProfilerMarker@@ %(
k_SaveProcessingStatesMarker@@& B
=@@C D
new@@E H
ProfilerMarker@@I W
(@@W X
$str@@X t
)@@t u
;@@u v
privateAA 
staticAA 
ProfilerMarkerAA %'
k_GenerateTextPhaseIIMarkerAA& A
=AAB C
newAAD G
ProfilerMarkerAAH V
(AAV W
$strAAW t
)AAt u
;AAu v
privateBB 
staticBB 
ProfilerMarkerBB %(
k_GenerateTextPhaseIIIMarkerBB& B
=BBC D
newBBE H
ProfilerMarkerBBI W
(BBW X
$strBBX v
)BBv w
;BBw x
	protectedEE 
overrideEE 
voidEE 
AwakeEE  %
(EE% &
)EE& '
{FF 	
ifKK 
(KK 
TMP_SettingsKK 
.KK 
instanceKK %
==KK& (
nullKK) -
)KK- .
{LL 
ifMM 
(MM %
m_isWaitingOnResourceLoadMM -
==MM. 0
falseMM1 6
)MM6 7
TMPro_EventManagerNN &
.NN& '
RESOURCE_LOAD_EVENTNN' :
.NN: ;
AddNN; >
(NN> ?
ON_RESOURCES_LOADEDNN? R
)NNR S
;NNS T%
m_isWaitingOnResourceLoadPP )
=PP* +
truePP, 0
;PP0 1
returnQQ 
;QQ 
}RR 

m_rendererVV 
=VV 
GetComponentVV %
<VV% &
RendererVV& .
>VV. /
(VV/ 0
)VV0 1
;VV1 2
ifWW 
(WW 

m_rendererWW 
==WW 
nullWW "
)WW" #

m_rendererXX 
=XX 

gameObjectXX '
.XX' (
AddComponentXX( 4
<XX4 5
RendererXX5 =
>XX= >
(XX> ?
)XX? @
;XX@ A
m_rectTransform[[ 
=[[ 
this[[ "
.[[" #
rectTransform[[# 0
;[[0 1
m_transform^^ 
=^^ 
this^^ 
.^^ 
	transform^^ (
;^^( )
m_meshFilteraa 
=aa 
GetComponentaa '
<aa' (

MeshFilteraa( 2
>aa2 3
(aa3 4
)aa4 5
;aa5 6
ifbb 
(bb 
m_meshFilterbb 
==bb 
nullbb  $
)bb$ %
m_meshFiltercc 
=cc 

gameObjectcc )
.cc) *
AddComponentcc* 6
<cc6 7

MeshFiltercc7 A
>ccA B
(ccB C
)ccC D
;ccD E
ifff 
(ff 
m_meshff 
==ff 
nullff 
)ff 
{gg 
m_meshhh 
=hh 
newhh 
Meshhh !
(hh! "
)hh" #
;hh# $
m_meshii 
.ii 
	hideFlagsii  
=ii! "
	HideFlagsii# ,
.ii, -
HideAndDontSaveii- <
;ii< =
m_meshkk 
.kk 
namekk 
=kk 
$strkk 0
;kk0 1
m_meshFiltermm 
.mm 

sharedMeshmm '
=mm( )
m_meshmm* 0
;mm0 1

m_textInfopp 
=pp 
newpp  
TMP_TextInfopp! -
(pp- .
thispp. 2
)pp2 3
;pp3 4
}qq 
m_meshFilterrr 
.rr 
	hideFlagsrr "
=rr# $
	HideFlagsrr% .
.rr. /
HideInInspectorrr/ >
|rr? @
	HideFlagsrrA J
.rrJ K
HideAndDontSaverrK Z
;rrZ [
CanvasRenderervv #
canvasRendererComponentvv 2
=vv3 4
GetComponentvv5 A
<vvA B
CanvasRenderervvB P
>vvP Q
(vvQ R
)vvR S
;vvS T
ifww 
(ww #
canvasRendererComponentww '
!=ww( *
nullww+ /
)ww/ 0
{xx 
Debugyy 
.yy 

LogWarningyy  
(yy  !
$stryy! X
+yyY Z
thisyy[ _
.yy_ `
nameyy` d
+yye f
$str	yyg ü
,
yyü †
this
yy° •
)
yy• ¶
;
yy¶ ß#
canvasRendererComponentzz '
.zz' (
	hideFlagszz( 1
=zz2 3
	HideFlagszz4 =
.zz= >
Nonezz> B
;zzB C
}{{ 
LoadDefaultSettings 
(  
)  !
;! "
LoadFontAsset
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
if
ÖÖ 
(
ÖÖ #
m_TextProcessingArray
ÖÖ %
==
ÖÖ& (
null
ÖÖ) -
)
ÖÖ- .#
m_TextProcessingArray
ÜÜ %
=
ÜÜ& '
new
ÜÜ( +
UnicodeChar
ÜÜ, 7
[
ÜÜ7 8
m_max_characters
ÜÜ8 H
]
ÜÜH I
;
ÜÜI J"
m_cached_TextElement
àà  
=
àà! "
new
àà# &
TMP_Character
àà' 4
(
àà4 5
)
àà5 6
;
àà6 7!
m_isFirstAllocation
ââ 
=
ââ  !
true
ââ" &
;
ââ& '
TMP_SubMesh
åå 
[
åå 
]
åå 
subTextObjects
åå (
=
åå) *%
GetComponentsInChildren
åå+ B
<
ååB C
TMP_SubMesh
ååC N
>
ååN O
(
ååO P
)
ååP Q
;
ååQ R
if
çç 
(
çç 
subTextObjects
çç 
.
çç 
Length
çç %
>
çç& '
$num
çç( )
)
çç) *
{
éé 
int
èè  
subTextObjectCount
èè &
=
èè' (
subTextObjects
èè) 7
.
èè7 8
Length
èè8 >
;
èè> ?
if
ëë 
(
ëë  
subTextObjectCount
ëë &
+
ëë' (
$num
ëë) *
>
ëë+ ,
m_subTextObjects
ëë- =
.
ëë= >
Length
ëë> D
)
ëëD E
Array
íí 
.
íí 
Resize
íí  
(
íí  !
ref
íí! $
m_subTextObjects
íí% 5
,
íí5 6 
subTextObjectCount
íí7 I
+
ííJ K
$num
ííL M
)
ííM N
;
ííN O
for
îî 
(
îî 
int
îî 
i
îî 
=
îî 
$num
îî 
;
îî 
i
îî  !
<
îî" # 
subTextObjectCount
îî$ 6
;
îî6 7
i
îî8 9
++
îî9 ;
)
îî; <
m_subTextObjects
ïï $
[
ïï$ %
i
ïï% &
+
ïï' (
$num
ïï) *
]
ïï* +
=
ïï, -
subTextObjects
ïï. <
[
ïï< =
i
ïï= >
]
ïï> ?
;
ïï? @
}
ññ %
m_havePropertiesChanged
ôô #
=
ôô$ %
true
ôô& *
;
ôô* +
	m_isAwake
õõ 
=
õõ 
true
õõ 
;
õõ 
}
úú 	
	protected
üü 
override
üü 
void
üü 
OnEnable
üü  (
(
üü( )
)
üü) *
{
†† 	
if
§§ 
(
§§ 
	m_isAwake
§§ 
==
§§ 
false
§§ "
)
§§" #
return
•• 
;
•• 
if
®® 
(
®® 
!
®® %
m_isRegisteredForEvents
®® (
)
®®( )
{
©©  
TMPro_EventManager
´´ "
.
´´" #%
MATERIAL_PROPERTY_EVENT
´´# :
.
´´: ;
Add
´´; >
(
´´> ?*
ON_MATERIAL_PROPERTY_CHANGED
´´? [
)
´´[ \
;
´´\ ] 
TMPro_EventManager
¨¨ "
.
¨¨" #!
FONT_PROPERTY_EVENT
¨¨# 6
.
¨¨6 7
Add
¨¨7 :
(
¨¨: ;&
ON_FONT_PROPERTY_CHANGED
¨¨; S
)
¨¨S T
;
¨¨T U 
TMPro_EventManager
≠≠ "
.
≠≠" #(
TEXTMESHPRO_PROPERTY_EVENT
≠≠# =
.
≠≠= >
Add
≠≠> A
(
≠≠A B-
ON_TEXTMESHPRO_PROPERTY_CHANGED
≠≠B a
)
≠≠a b
;
≠≠b c 
TMPro_EventManager
ÆÆ "
.
ÆÆ" #*
DRAG_AND_DROP_MATERIAL_EVENT
ÆÆ# ?
.
ÆÆ? @
Add
ÆÆ@ C
(
ÆÆC D'
ON_DRAG_AND_DROP_MATERIAL
ÆÆD ]
)
ÆÆ] ^
;
ÆÆ^ _ 
TMPro_EventManager
ØØ "
.
ØØ" #'
TEXT_STYLE_PROPERTY_EVENT
ØØ# <
.
ØØ< =
Add
ØØ= @
(
ØØ@ A#
ON_TEXT_STYLE_CHANGED
ØØA V
)
ØØV W
;
ØØW X 
TMPro_EventManager
∞∞ "
.
∞∞" #+
COLOR_GRADIENT_PROPERTY_EVENT
∞∞# @
.
∞∞@ A
Add
∞∞A D
(
∞∞D E'
ON_COLOR_GRADIENT_CHANGED
∞∞E ^
)
∞∞^ _
;
∞∞_ ` 
TMPro_EventManager
±± "
.
±±" #)
TMP_SETTINGS_PROPERTY_EVENT
±±# >
.
±±> ?
Add
±±? B
(
±±B C%
ON_TMP_SETTINGS_CHANGED
±±C Z
)
±±Z [
;
±±[ \
UnityEditor
≥≥ 
.
≥≥ 
PrefabUtility
≥≥ )
.
≥≥) *#
prefabInstanceUpdated
≥≥* ?
+=
≥≥@ B$
OnPrefabInstanceUpdate
≥≥C Y
;
≥≥Y Z%
m_isRegisteredForEvents
µµ '
=
µµ( )
true
µµ* .
;
µµ. /
}
∂∂ 
if
ππ 
(
ππ '
m_IsTextObjectScaleStatic
ππ )
==
ππ* ,
false
ππ- 2
)
ππ2 3
TMP_UpdateManager
∫∫ !
.
∫∫! ")
RegisterTextObjectForUpdate
∫∫" =
(
∫∫= >
this
∫∫> B
)
∫∫B C
;
∫∫C D

meshFilter
ºº 
.
ºº 

sharedMesh
ºº !
=
ºº" #
mesh
ºº$ (
;
ºº( ) 
SetActiveSubMeshes
ΩΩ 
(
ΩΩ 
true
ΩΩ #
)
ΩΩ# $
;
ΩΩ$ %
ComputeMarginSize
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿  
SetAllDirty
¬¬ 
(
¬¬ 
)
¬¬ 
;
¬¬ 
}
≈≈ 	
	protected
»» 
override
»» 
void
»» 
	OnDisable
»»  )
(
»») *
)
»»* +
{
…… 	
if
ÕÕ 
(
ÕÕ 
	m_isAwake
ÕÕ 
==
ÕÕ 
false
ÕÕ "
)
ÕÕ" #
return
ŒŒ 
;
ŒŒ 
TMP_UpdateManager
–– 
.
–– -
UnRegisterTextElementForRebuild
–– =
(
––= >
this
––> B
)
––B C
;
––C D
TMP_UpdateManager
—— 
.
—— +
UnRegisterTextObjectForUpdate
—— ;
(
——; <
this
——< @
)
——@ A
;
——A B

meshFilter
”” 
.
”” 

sharedMesh
”” !
=
””" #
null
””$ (
;
””( ) 
SetActiveSubMeshes
‘‘ 
(
‘‘ 
false
‘‘ $
)
‘‘$ %
;
‘‘% &
}
’’ 	
	protected
ÿÿ 
override
ÿÿ 
void
ÿÿ 
	OnDestroy
ÿÿ  )
(
ÿÿ) *
)
ÿÿ* +
{
ŸŸ 	
if
›› 
(
›› 
m_mesh
›› 
!=
›› 
null
›› 
)
›› 
DestroyImmediate
ﬁﬁ  
(
ﬁﬁ  !
m_mesh
ﬁﬁ! '
)
ﬁﬁ' (
;
ﬁﬁ( ) 
TMPro_EventManager
‚‚ 
.
‚‚ %
MATERIAL_PROPERTY_EVENT
‚‚ 6
.
‚‚6 7
Remove
‚‚7 =
(
‚‚= >*
ON_MATERIAL_PROPERTY_CHANGED
‚‚> Z
)
‚‚Z [
;
‚‚[ \ 
TMPro_EventManager
„„ 
.
„„ !
FONT_PROPERTY_EVENT
„„ 2
.
„„2 3
Remove
„„3 9
(
„„9 :&
ON_FONT_PROPERTY_CHANGED
„„: R
)
„„R S
;
„„S T 
TMPro_EventManager
‰‰ 
.
‰‰ (
TEXTMESHPRO_PROPERTY_EVENT
‰‰ 9
.
‰‰9 :
Remove
‰‰: @
(
‰‰@ A-
ON_TEXTMESHPRO_PROPERTY_CHANGED
‰‰A `
)
‰‰` a
;
‰‰a b 
TMPro_EventManager
ÂÂ 
.
ÂÂ *
DRAG_AND_DROP_MATERIAL_EVENT
ÂÂ ;
.
ÂÂ; <
Remove
ÂÂ< B
(
ÂÂB C'
ON_DRAG_AND_DROP_MATERIAL
ÂÂC \
)
ÂÂ\ ]
;
ÂÂ] ^ 
TMPro_EventManager
ÊÊ 
.
ÊÊ '
TEXT_STYLE_PROPERTY_EVENT
ÊÊ 8
.
ÊÊ8 9
Remove
ÊÊ9 ?
(
ÊÊ? @#
ON_TEXT_STYLE_CHANGED
ÊÊ@ U
)
ÊÊU V
;
ÊÊV W 
TMPro_EventManager
ÁÁ 
.
ÁÁ +
COLOR_GRADIENT_PROPERTY_EVENT
ÁÁ <
.
ÁÁ< =
Remove
ÁÁ= C
(
ÁÁC D'
ON_COLOR_GRADIENT_CHANGED
ÁÁD ]
)
ÁÁ] ^
;
ÁÁ^ _ 
TMPro_EventManager
ËË 
.
ËË )
TMP_SETTINGS_PROPERTY_EVENT
ËË :
.
ËË: ;
Remove
ËË; A
(
ËËA B%
ON_TMP_SETTINGS_CHANGED
ËËB Y
)
ËËY Z
;
ËËZ [ 
TMPro_EventManager
ÈÈ 
.
ÈÈ !
RESOURCE_LOAD_EVENT
ÈÈ 2
.
ÈÈ2 3
Remove
ÈÈ3 9
(
ÈÈ9 :!
ON_RESOURCES_LOADED
ÈÈ: M
)
ÈÈM N
;
ÈÈN O
UnityEditor
ÎÎ 
.
ÎÎ 
PrefabUtility
ÎÎ %
.
ÎÎ% &#
prefabInstanceUpdated
ÎÎ& ;
-=
ÎÎ< >$
OnPrefabInstanceUpdate
ÎÎ? U
;
ÎÎU V%
m_isRegisteredForEvents
ÓÓ #
=
ÓÓ$ %
false
ÓÓ& +
;
ÓÓ+ ,
TMP_UpdateManager
ÔÔ 
.
ÔÔ -
UnRegisterTextElementForRebuild
ÔÔ =
(
ÔÔ= >
this
ÔÔ> B
)
ÔÔB C
;
ÔÔC D
TMP_UpdateManager
 
.
 +
UnRegisterTextObjectForUpdate
 ;
(
; <
this
< @
)
@ A
;
A B
}
ÒÒ 	
	protected
ıı 
override
ıı 
void
ıı 
Reset
ıı  %
(
ıı% &
)
ıı& '
{
ˆˆ 	
if
˙˙ 
(
˙˙ 
	m_isAwake
˙˙ 
==
˙˙ 
false
˙˙ "
)
˙˙" #
return
˚˚ 
;
˚˚ 
if
˝˝ 
(
˝˝ 
m_mesh
˝˝ 
!=
˝˝ 
null
˝˝ 
)
˝˝ 
DestroyImmediate
˛˛  
(
˛˛  !
m_mesh
˛˛! '
)
˛˛' (
;
˛˛( )
Awake
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
	protected
ÑÑ 
override
ÑÑ 
void
ÑÑ 

OnValidate
ÑÑ  *
(
ÑÑ* +
)
ÑÑ+ ,
{
ÖÖ 	
if
àà 
(
àà 
	m_isAwake
àà 
==
àà 
false
àà "
)
àà" #
return
ââ 
;
ââ 
if
ãã 
(
ãã 

meshFilter
ãã 
!=
ãã 
null
ãã "
&&
ãã# %
m_meshFilter
ãã& 2
.
ãã2 3
	hideFlags
ãã3 <
!=
ãã= ?
(
ãã@ A
	HideFlags
ããA J
.
ããJ K
HideInInspector
ããK Z
|
ãã[ \
	HideFlags
ãã] f
.
ããf g
HideAndDontSave
ããg v
)
ããv w
)
ããw x
m_meshFilter
åå 
.
åå 
	hideFlags
åå &
=
åå' (
	HideFlags
åå) 2
.
åå2 3
HideInInspector
åå3 B
|
ååC D
	HideFlags
ååE N
.
ååN O
HideAndDontSave
ååO ^
;
åå^ _
if
èè 
(
èè 
m_fontAsset
èè 
==
èè 
null
èè #
||
èè$ &#
m_hasFontAssetChanged
èè' <
)
èè< =
{
êê 
LoadFontAsset
ëë 
(
ëë 
)
ëë 
;
ëë  #
m_hasFontAssetChanged
íí %
=
íí& '
false
íí( -
;
íí- .
}
ìì 
	m_padding
ïï 
=
ïï #
GetPaddingForMaterial
ïï -
(
ïï- .
)
ïï. /
;
ïï/ 0
ComputeMarginSize
ññ 
(
ññ 
)
ññ 
;
ññ  
m_inputSource
òò 
=
òò 
TextInputSources
òò ,
.
òò, -
TextInputBox
òò- 9
;
òò9 :%
m_havePropertiesChanged
ôô #
=
ôô$ %
true
ôô& *
;
ôô* +%
m_isPreferredWidthDirty
öö #
=
öö$ %
true
öö& *
;
öö* +&
m_isPreferredHeightDirty
õõ $
=
õõ% &
true
õõ' +
;
õõ+ ,
SetAllDirty
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 	
private
†† 
void
†† 
OnBecameVisible
†† $
(
††$ %
)
††% &
{
°° 	-
SetActiveSubTextObjectRenderers
££ +
(
££+ ,
true
££, 0
)
££0 1
;
££1 2
}
§§ 	
private
¶¶ 
void
¶¶ 
OnBecameInvisible
¶¶ &
(
¶¶& '
)
¶¶' (
{
ßß 	-
SetActiveSubTextObjectRenderers
©© +
(
©©+ ,
false
©©, 1
)
©©1 2
;
©©2 3
}
™™ 	
void
±± $
OnPrefabInstanceUpdate
±± #
(
±±# $

GameObject
±±$ .
go
±±/ 1
)
±±1 2
{
≤≤ 	
if
¥¥ 
(
¥¥ 
this
¥¥ 
==
¥¥ 
null
¥¥ 
)
¥¥ 
{
µµ 
UnityEditor
∂∂ 
.
∂∂ 
PrefabUtility
∂∂ )
.
∂∂) *#
prefabInstanceUpdated
∂∂* ?
-=
∂∂@ B$
OnPrefabInstanceUpdate
∂∂C Y
;
∂∂Y Z
return
∑∑ 
;
∑∑ 
}
∏∏ 
if
∫∫ 
(
∫∫ 
go
∫∫ 
==
∫∫ 
this
∫∫ 
.
∫∫ 

gameObject
∫∫ %
)
∫∫% &
{
ªª 
TMP_SubMesh
ºº 
[
ºº 
]
ºº 
subTextObjects
ºº ,
=
ºº- .%
GetComponentsInChildren
ºº/ F
<
ººF G
TMP_SubMesh
ººG R
>
ººR S
(
ººS T
)
ººT U
;
ººU V
if
ΩΩ 
(
ΩΩ 
subTextObjects
ΩΩ "
.
ΩΩ" #
Length
ΩΩ# )
>
ΩΩ* +
$num
ΩΩ, -
)
ΩΩ- .
{
ææ 
for
øø 
(
øø 
int
øø 
i
øø 
=
øø  
$num
øø! "
;
øø" #
i
øø$ %
<
øø& '
subTextObjects
øø( 6
.
øø6 7
Length
øø7 =
;
øø= >
i
øø? @
++
øø@ B
)
øøB C
m_subTextObjects
¿¿ (
[
¿¿( )
i
¿¿) *
+
¿¿+ ,
$num
¿¿- .
]
¿¿. /
=
¿¿0 1
subTextObjects
¿¿2 @
[
¿¿@ A
i
¿¿A B
]
¿¿B C
;
¿¿C D
}
¡¡ 
}
¬¬ 
}
√√ 	
void
«« !
ON_RESOURCES_LOADED
««  
(
««  !
)
««! "
{
»» 	 
TMPro_EventManager
…… 
.
…… !
RESOURCE_LOAD_EVENT
…… 2
.
……2 3
Remove
……3 9
(
……9 :!
ON_RESOURCES_LOADED
……: M
)
……M N
;
……N O
if
ÀÀ 
(
ÀÀ 
this
ÀÀ 
==
ÀÀ 
null
ÀÀ 
)
ÀÀ 
return
ÃÃ 
;
ÃÃ '
m_isWaitingOnResourceLoad
ŒŒ %
=
ŒŒ& '
false
ŒŒ( -
;
ŒŒ- .
Awake
–– 
(
–– 
)
–– 
;
–– 
OnEnable
—— 
(
—— 
)
—— 
;
—— 
}
““ 	
void
÷÷ *
ON_MATERIAL_PROPERTY_CHANGED
÷÷ )
(
÷÷) *
bool
÷÷* .
	isChanged
÷÷/ 8
,
÷÷8 9
Material
÷÷: B
mat
÷÷C F
)
÷÷F G
{
◊◊ 	
if
⁄⁄ 
(
⁄⁄ 

m_renderer
⁄⁄ 
.
⁄⁄ 
sharedMaterial
⁄⁄ )
==
⁄⁄* ,
null
⁄⁄- 1
)
⁄⁄1 2
{
€€ 
if
‹‹ 
(
‹‹ 
m_fontAsset
‹‹ 
!=
‹‹  "
null
‹‹# '
)
‹‹' (
{
›› 

m_renderer
ﬁﬁ 
.
ﬁﬁ 
sharedMaterial
ﬁﬁ -
=
ﬁﬁ. /
m_fontAsset
ﬁﬁ0 ;
.
ﬁﬁ; <
material
ﬁﬁ< D
;
ﬁﬁD E
Debug
ﬂﬂ 
.
ﬂﬂ 

LogWarning
ﬂﬂ $
(
ﬂﬂ$ %
$str
ﬂﬂ% C
+
ﬂﬂD E
name
ﬂﬂF J
+
ﬂﬂK L
$str
ﬂﬂM Q
+
ﬂﬂR S
m_fontAsset
ﬂﬂT _
.
ﬂﬂ_ `
material
ﬂﬂ` h
.
ﬂﬂh i
name
ﬂﬂi m
+
ﬂﬂn o
$strﬂﬂp Ä
,ﬂﬂÄ Å
thisﬂﬂÇ Ü
)ﬂﬂÜ á
;ﬂﬂá à
}
‡‡ 
else
·· 
Debug
‚‚ 
.
‚‚ 

LogWarning
‚‚ $
(
‚‚$ %
$str
‚‚% A
+
‚‚B C
name
‚‚D H
+
‚‚I J
$str
‚‚K j
,
‚‚j k
this
‚‚l p
)
‚‚p q
;
‚‚q r
}
„„ 
if
ÏÏ 
(
ÏÏ 

m_renderer
ÏÏ 
.
ÏÏ 
sharedMaterial
ÏÏ )
!=
ÏÏ* ,
m_sharedMaterial
ÏÏ- =
)
ÏÏ= >
{
ÌÌ 
m_sharedMaterial
ÔÔ  
=
ÔÔ! "

m_renderer
ÔÔ# -
.
ÔÔ- .
sharedMaterial
ÔÔ. <
;
ÔÔ< =
}
 
	m_padding
ÚÚ 
=
ÚÚ #
GetPaddingForMaterial
ÚÚ -
(
ÚÚ- .
)
ÚÚ. /
;
ÚÚ/ 0

UpdateMask
ıı 
(
ıı 
)
ıı 
;
ıı  
UpdateEnvMapMatrix
ˆˆ 
(
ˆˆ 
)
ˆˆ  
;
ˆˆ  !%
m_havePropertiesChanged
˜˜ #
=
˜˜$ %
true
˜˜& *
;
˜˜* +
SetVerticesDirty
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
}
˙˙ 	
void
˛˛ &
ON_FONT_PROPERTY_CHANGED
˛˛ %
(
˛˛% &
bool
˛˛& *
	isChanged
˛˛+ 4
,
˛˛4 5
Object
˛˛6 <
	fontAsset
˛˛= F
)
˛˛F G
{
ˇˇ 	
if
ÇÇ 
(
ÇÇ 
MaterialReference
ÇÇ !
.
ÇÇ! "
Contains
ÇÇ" *
(
ÇÇ* +"
m_materialReferences
ÇÇ+ ?
,
ÇÇ? @
(
ÇÇA B
TMP_FontAsset
ÇÇB O
)
ÇÇO P
	fontAsset
ÇÇP Y
)
ÇÇY Z
)
ÇÇZ [
{
ÉÉ %
m_havePropertiesChanged
ÖÖ '
=
ÖÖ( )
true
ÖÖ* .
;
ÖÖ. /
UpdateMeshPadding
áá !
(
áá! "
)
áá" #
;
áá# $
SetMaterialDirty
ââ  
(
ââ  !
)
ââ! "
;
ââ" #
SetVerticesDirty
ää  
(
ää  !
)
ää! "
;
ää" #
}
ãã 
}
åå 	
void
êê -
ON_TEXTMESHPRO_PROPERTY_CHANGED
êê ,
(
êê, -
bool
êê- 1
	isChanged
êê2 ;
,
êê; <
Object
êê= C
textComponent
êêD Q
)
êêQ R
{
ëë 	
if
íí 
(
íí 
textComponent
íí 
==
íí  
this
íí! %
)
íí% &
{
ìì %
m_havePropertiesChanged
ïï '
=
ïï( )
true
ïï* .
;
ïï. /
	m_padding
óó 
=
óó #
GetPaddingForMaterial
óó 1
(
óó1 2
)
óó2 3
;
óó3 4
ComputeMarginSize
òò !
(
òò! "
)
òò" #
;
òò# $
SetVerticesDirty
öö  
(
öö  !
)
öö! "
;
öö" #
}
õõ 
}
úú 	
void
†† '
ON_DRAG_AND_DROP_MATERIAL
†† &
(
††& '

GameObject
††' 1
obj
††2 5
,
††5 6
Material
††7 ?
currentMaterial
††@ O
,
††O P
Material
††Q Y
newMaterial
††Z e
)
††e f
{
°° 	
if
¶¶ 
(
¶¶ 
obj
¶¶ 
==
¶¶ 

gameObject
¶¶ !
||
¶¶" $
UnityEditor
¶¶% 0
.
¶¶0 1
PrefabUtility
¶¶1 >
.
¶¶> ?.
 GetCorrespondingObjectFromSource
¶¶? _
(
¶¶_ `

gameObject
¶¶` j
)
¶¶j k
==
¶¶l n
obj
¶¶o r
)
¶¶r s
{
™™ 
UnityEditor
´´ 
.
´´ 
Undo
´´  
.
´´  !
RecordObject
´´! -
(
´´- .
this
´´. 2
,
´´2 3
$str
´´4 I
)
´´I J
;
´´J K
UnityEditor
¨¨ 
.
¨¨ 
Undo
¨¨  
.
¨¨  !
RecordObject
¨¨! -
(
¨¨- .

m_renderer
¨¨. 8
,
¨¨8 9
$str
¨¨: O
)
¨¨O P
;
¨¨P Q
m_sharedMaterial
ÆÆ  
=
ÆÆ! "
newMaterial
ÆÆ# .
;
ÆÆ. /
	m_padding
∞∞ 
=
∞∞ #
GetPaddingForMaterial
∞∞ 1
(
∞∞1 2
)
∞∞2 3
;
∞∞3 4%
m_havePropertiesChanged
±± '
=
±±( )
true
±±* .
;
±±. /
SetVerticesDirty
≥≥  
(
≥≥  !
)
≥≥! "
;
≥≥" #
SetMaterialDirty
¥¥  
(
¥¥  !
)
¥¥! "
;
¥¥" #
}
µµ 
}
∂∂ 	
void
∫∫ #
ON_TEXT_STYLE_CHANGED
∫∫ "
(
∫∫" #
bool
∫∫# '
	isChanged
∫∫( 1
)
∫∫1 2
{
ªª 	%
m_havePropertiesChanged
ºº #
=
ºº$ %
true
ºº& *
;
ºº* +
SetVerticesDirty
ææ 
(
ææ 
)
ææ 
;
ææ 
}
øø 	
void
∆∆ '
ON_COLOR_GRADIENT_CHANGED
∆∆ &
(
∆∆& '
Object
∆∆' -
gradient
∆∆. 6
)
∆∆6 7
{
«« 	%
m_havePropertiesChanged
»» #
=
»»$ %
true
»»& *
;
»»* +
SetVerticesDirty
   
(
   
)
   
;
   
}
ÀÀ 	
void
—— %
ON_TMP_SETTINGS_CHANGED
—— $
(
——$ %
)
——% &
{
““ 	"
m_defaultSpriteAsset
””  
=
””! "
null
””# '
;
””' (%
m_havePropertiesChanged
‘‘ #
=
‘‘$ %
true
‘‘& *
;
‘‘* +
SetAllDirty
÷÷ 
(
÷÷ 
)
÷÷ 
;
÷÷ 
}
◊◊ 	
	protected
‹‹ 
override
‹‹ 
void
‹‹ 
LoadFontAsset
‹‹  -
(
‹‹- .
)
‹‹. /
{
›› 	
ShaderUtilities
‡‡ 
.
‡‡ "
GetShaderPropertyIDs
‡‡ 0
(
‡‡0 1
)
‡‡1 2
;
‡‡2 3
if
‚‚ 
(
‚‚ 
m_fontAsset
‚‚ 
==
‚‚ 
null
‚‚ #
)
‚‚# $
{
„„ 
if
‰‰ 
(
‰‰ 
TMP_Settings
‰‰  
.
‰‰  !
defaultFontAsset
‰‰! 1
!=
‰‰2 4
null
‰‰5 9
)
‰‰9 :
m_fontAsset
ÂÂ 
=
ÂÂ  !
TMP_Settings
ÂÂ! -
.
ÂÂ- .
defaultFontAsset
ÂÂ. >
;
ÂÂ> ?
else
ÊÊ 
m_fontAsset
ÁÁ 
=
ÁÁ  !
	Resources
ÁÁ" +
.
ÁÁ+ ,
Load
ÁÁ, 0
<
ÁÁ0 1
TMP_FontAsset
ÁÁ1 >
>
ÁÁ> ?
(
ÁÁ? @
$str
ÁÁ@ f
)
ÁÁf g
;
ÁÁg h
if
ÈÈ 
(
ÈÈ 
m_fontAsset
ÈÈ 
==
ÈÈ  "
null
ÈÈ# '
)
ÈÈ' (
{
ÍÍ 
Debug
ÎÎ 
.
ÎÎ 

LogWarning
ÎÎ $
(
ÎÎ$ %
$str
ÎÎ% {
+
ÎÎ| }

gameObjectÎÎ~ à
.ÎÎà â
nameÎÎâ ç
+ÎÎé è
$strÎÎê ì
,ÎÎì î
thisÎÎï ô
)ÎÎô ö
;ÎÎö õ
return
ÏÏ 
;
ÏÏ 
}
ÌÌ 
if
ÔÔ 
(
ÔÔ 
m_fontAsset
ÔÔ 
.
ÔÔ  "
characterLookupTable
ÔÔ  4
==
ÔÔ5 7
null
ÔÔ8 <
)
ÔÔ< =
{
 
Debug
ÒÒ 
.
ÒÒ 
Log
ÒÒ 
(
ÒÒ 
$str
ÒÒ 3
)
ÒÒ3 4
;
ÒÒ4 5
}
ÚÚ 
m_sharedMaterial
ÙÙ  
=
ÙÙ! "
m_fontAsset
ÙÙ# .
.
ÙÙ. /
material
ÙÙ/ 7
;
ÙÙ7 8
m_sharedMaterial
ıı  
.
ıı  !
SetFloat
ıı! )
(
ıı) *
$str
ıı* 5
,
ıı5 6
$num
ıı7 8
)
ıı8 9
;
ıı9 :
m_sharedMaterial
ˆˆ  
.
ˆˆ  !
SetFloat
ˆˆ! )
(
ˆˆ) *
ShaderUtilities
ˆˆ* 9
.
ˆˆ9 :!
ShaderTag_ZTestMode
ˆˆ: M
,
ˆˆM N
$num
ˆˆO P
)
ˆˆP Q
;
ˆˆQ R

m_renderer
¯¯ 
.
¯¯ 
receiveShadows
¯¯ )
=
¯¯* +
false
¯¯, 1
;
¯¯1 2

m_renderer
˘˘ 
.
˘˘ 
shadowCastingMode
˘˘ ,
=
˘˘- .
UnityEngine
˘˘/ :
.
˘˘: ;
	Rendering
˘˘; D
.
˘˘D E
ShadowCastingMode
˘˘E V
.
˘˘V W
Off
˘˘W Z
;
˘˘Z [
}
˙˙ 
else
˚˚ 
{
¸¸ 
if
˝˝ 
(
˝˝ 
m_fontAsset
˝˝ 
.
˝˝  "
characterLookupTable
˝˝  4
==
˝˝5 7
null
˝˝8 <
)
˝˝< =
m_fontAsset
˛˛ 
.
˛˛  %
ReadFontAssetDefinition
˛˛  7
(
˛˛7 8
)
˛˛8 9
;
˛˛9 :
if
ÅÅ 
(
ÅÅ 
m_sharedMaterial
ÅÅ $
==
ÅÅ% '
null
ÅÅ( ,
||
ÅÅ- /
m_sharedMaterial
ÅÅ0 @
.
ÅÅ@ A

GetTexture
ÅÅA K
(
ÅÅK L
ShaderUtilities
ÅÅL [
.
ÅÅ[ \

ID_MainTex
ÅÅ\ f
)
ÅÅf g
==
ÅÅh j
null
ÅÅk o
||
ÅÅp r
m_fontAsset
ÅÅs ~
.
ÅÅ~ 
atlasTextureÅÅ ã
.ÅÅã å
GetInstanceIDÅÅå ô
(ÅÅô ö
)ÅÅö õ
!=ÅÅú û 
m_sharedMaterialÅÅü Ø
.ÅÅØ ∞

GetTextureÅÅ∞ ∫
(ÅÅ∫ ª
ShaderUtilitiesÅÅª  
.ÅÅ  À

ID_MainTexÅÅÀ ’
)ÅÅ’ ÷
.ÅÅ÷ ◊
GetInstanceIDÅÅ◊ ‰
(ÅÅ‰ Â
)ÅÅÂ Ê
)ÅÅÊ Á
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
m_fontAsset
ÉÉ #
.
ÉÉ# $
material
ÉÉ$ ,
==
ÉÉ- /
null
ÉÉ0 4
)
ÉÉ4 5
Debug
ÑÑ 
.
ÑÑ 

LogWarning
ÑÑ (
(
ÑÑ( )
$str
ÑÑ) T
+
ÑÑU V
m_fontAsset
ÑÑW b
.
ÑÑb c
name
ÑÑc g
+
ÑÑh i
$str
ÑÑj y
+
ÑÑz {

gameObjectÑÑ| Ü
.ÑÑÜ á
nameÑÑá ã
+ÑÑå ç
$strÑÑé ú
,ÑÑú ù
thisÑÑû ¢
)ÑÑ¢ £
;ÑÑ£ §
else
ÖÖ 
m_sharedMaterial
ÜÜ (
=
ÜÜ) *
m_fontAsset
ÜÜ+ 6
.
ÜÜ6 7
material
ÜÜ7 ?
;
ÜÜ? @
}
áá 
m_sharedMaterial
ââ  
.
ââ  !
SetFloat
ââ! )
(
ââ) *
ShaderUtilities
ââ* 9
.
ââ9 :!
ShaderTag_ZTestMode
ââ: M
,
ââM N
$num
ââO P
)
ââP Q
;
ââQ R
if
åå 
(
åå 
m_sharedMaterial
åå $
.
åå$ %
	passCount
åå% .
==
åå/ 1
$num
åå2 3
)
åå3 4
{
çç 

m_renderer
éé 
.
éé 
receiveShadows
éé -
=
éé. /
false
éé0 5
;
éé5 6

m_renderer
èè 
.
èè 
shadowCastingMode
èè 0
=
èè1 2
UnityEngine
èè3 >
.
èè> ?
	Rendering
èè? H
.
èèH I
ShadowCastingMode
èèI Z
.
èèZ [
Off
èè[ ^
;
èè^ _
}
êê 
}
íí 
	m_padding
îî 
=
îî #
GetPaddingForMaterial
îî -
(
îî- .
)
îî. /
;
îî/ 0 
m_isMaskingEnabled
ïï 
=
ïï  
ShaderUtilities
ïï! 0
.
ïï0 1
IsMaskingEnabled
ïï1 A
(
ïïA B
m_sharedMaterial
ïïB R
)
ïïR S
;
ïïS T"
GetSpecialCharacters
òò  
(
òò  !
m_fontAsset
òò! ,
)
òò, -
;
òò- .
SetMaterialDirty
öö 
(
öö 
)
öö 
;
öö 
}
õõ 	
void
ûû  
UpdateEnvMapMatrix
ûû 
(
ûû  
)
ûû  !
{
üü 	
if
†† 
(
†† 
!
†† 
m_sharedMaterial
†† !
.
††! "
HasProperty
††" -
(
††- .
ShaderUtilities
††. =
.
††= >
	ID_EnvMap
††> G
)
††G H
||
††I K
m_sharedMaterial
††L \
.
††\ ]

GetTexture
††] g
(
††g h
ShaderUtilities
††h w
.
††w x
	ID_EnvMap††x Å
)††Å Ç
==††É Ö
null††Ü ä
)††ä ã
return
°° 
;
°° 
Vector3
§§ 
rotation
§§ 
=
§§ 
m_sharedMaterial
§§ /
.
§§/ 0
	GetVector
§§0 9
(
§§9 :
ShaderUtilities
§§: I
.
§§I J"
ID_EnvMatrixRotation
§§J ^
)
§§^ _
;
§§_ `
m_EnvMapMatrix
•• 
=
•• 
	Matrix4x4
•• &
.
••& '
TRS
••' *
(
••* +
Vector3
••+ 2
.
••2 3
zero
••3 7
,
••7 8

Quaternion
••9 C
.
••C D
Euler
••D I
(
••I J
rotation
••J R
)
••R S
,
••S T
Vector3
••U \
.
••\ ]
one
••] `
)
••` a
;
••a b
m_sharedMaterial
ßß 
.
ßß 
	SetMatrix
ßß &
(
ßß& '
ShaderUtilities
ßß' 6
.
ßß6 7
ID_EnvMatrix
ßß7 C
,
ßßC D
m_EnvMapMatrix
ßßE S
)
ßßS T
;
ßßT U
}
®® 	
void
¨¨ 
SetMask
¨¨ 
(
¨¨ 
MaskingTypes
¨¨ !
maskType
¨¨" *
)
¨¨* +
{
≠≠ 	
switch
ÆÆ 
(
ÆÆ 
maskType
ÆÆ 
)
ÆÆ 
{
ØØ 
case
∞∞ 
MaskingTypes
∞∞ !
.
∞∞! "
MaskOff
∞∞" )
:
∞∞) *
m_sharedMaterial
±± $
.
±±$ %
DisableKeyword
±±% 3
(
±±3 4
ShaderUtilities
±±4 C
.
±±C D
Keyword_MASK_SOFT
±±D U
)
±±U V
;
±±V W
m_sharedMaterial
≤≤ $
.
≤≤$ %
DisableKeyword
≤≤% 3
(
≤≤3 4
ShaderUtilities
≤≤4 C
.
≤≤C D
Keyword_MASK_HARD
≤≤D U
)
≤≤U V
;
≤≤V W
m_sharedMaterial
≥≥ $
.
≥≥$ %
DisableKeyword
≥≥% 3
(
≥≥3 4
ShaderUtilities
≥≥4 C
.
≥≥C D
Keyword_MASK_TEX
≥≥D T
)
≥≥T U
;
≥≥U V
break
¥¥ 
;
¥¥ 
case
µµ 
MaskingTypes
µµ !
.
µµ! "
MaskSoft
µµ" *
:
µµ* +
m_sharedMaterial
∂∂ $
.
∂∂$ %
EnableKeyword
∂∂% 2
(
∂∂2 3
ShaderUtilities
∂∂3 B
.
∂∂B C
Keyword_MASK_SOFT
∂∂C T
)
∂∂T U
;
∂∂U V
m_sharedMaterial
∑∑ $
.
∑∑$ %
DisableKeyword
∑∑% 3
(
∑∑3 4
ShaderUtilities
∑∑4 C
.
∑∑C D
Keyword_MASK_HARD
∑∑D U
)
∑∑U V
;
∑∑V W
m_sharedMaterial
∏∏ $
.
∏∏$ %
DisableKeyword
∏∏% 3
(
∏∏3 4
ShaderUtilities
∏∏4 C
.
∏∏C D
Keyword_MASK_TEX
∏∏D T
)
∏∏T U
;
∏∏U V
break
ππ 
;
ππ 
case
∫∫ 
MaskingTypes
∫∫ !
.
∫∫! "
MaskHard
∫∫" *
:
∫∫* +
m_sharedMaterial
ªª $
.
ªª$ %
EnableKeyword
ªª% 2
(
ªª2 3
ShaderUtilities
ªª3 B
.
ªªB C
Keyword_MASK_HARD
ªªC T
)
ªªT U
;
ªªU V
m_sharedMaterial
ºº $
.
ºº$ %
DisableKeyword
ºº% 3
(
ºº3 4
ShaderUtilities
ºº4 C
.
ººC D
Keyword_MASK_SOFT
ººD U
)
ººU V
;
ººV W
m_sharedMaterial
ΩΩ $
.
ΩΩ$ %
DisableKeyword
ΩΩ% 3
(
ΩΩ3 4
ShaderUtilities
ΩΩ4 C
.
ΩΩC D
Keyword_MASK_TEX
ΩΩD T
)
ΩΩT U
;
ΩΩU V
break
ææ 
;
ææ 
}
ƒƒ 
}
≈≈ 	
void
……  
SetMaskCoordinates
…… 
(
……  
Vector4
……  '
coords
……( .
)
……. /
{
   	
m_sharedMaterial
ÀÀ 
.
ÀÀ 
	SetVector
ÀÀ &
(
ÀÀ& '
ShaderUtilities
ÀÀ' 6
.
ÀÀ6 7
ID_ClipRect
ÀÀ7 B
,
ÀÀB C
coords
ÀÀD J
)
ÀÀJ K
;
ÀÀK L
}
ÃÃ 	
void
œœ  
SetMaskCoordinates
œœ 
(
œœ  
Vector4
œœ  '
coords
œœ( .
,
œœ. /
float
œœ0 5
softX
œœ6 ;
,
œœ; <
float
œœ= B
softY
œœC H
)
œœH I
{
–– 	
m_sharedMaterial
—— 
.
—— 
	SetVector
—— &
(
——& '
ShaderUtilities
——' 6
.
——6 7
ID_ClipRect
——7 B
,
——B C
coords
——D J
)
——J K
;
——K L
m_sharedMaterial
““ 
.
““ 
SetFloat
““ %
(
““% &
ShaderUtilities
““& 5
.
““5 6
ID_MaskSoftnessX
““6 F
,
““F G
softX
““H M
)
““M N
;
““N O
m_sharedMaterial
”” 
.
”” 
SetFloat
”” %
(
””% &
ShaderUtilities
””& 5
.
””5 6
ID_MaskSoftnessY
””6 F
,
””F G
softY
””H M
)
””M N
;
””N O
}
‘‘ 	
void
ŸŸ 
EnableMasking
ŸŸ 
(
ŸŸ 
)
ŸŸ 
{
⁄⁄ 	
if
€€ 
(
€€ 
m_sharedMaterial
€€  
.
€€  !
HasProperty
€€! ,
(
€€, -
ShaderUtilities
€€- <
.
€€< =
ID_ClipRect
€€= H
)
€€H I
)
€€I J
{
‹‹ 
m_sharedMaterial
››  
.
››  !
EnableKeyword
››! .
(
››. /
ShaderUtilities
››/ >
.
››> ?
Keyword_MASK_SOFT
››? P
)
››P Q
;
››Q R
m_sharedMaterial
ﬁﬁ  
.
ﬁﬁ  !
DisableKeyword
ﬁﬁ! /
(
ﬁﬁ/ 0
ShaderUtilities
ﬁﬁ0 ?
.
ﬁﬁ? @
Keyword_MASK_HARD
ﬁﬁ@ Q
)
ﬁﬁQ R
;
ﬁﬁR S
m_sharedMaterial
ﬂﬂ  
.
ﬂﬂ  !
DisableKeyword
ﬂﬂ! /
(
ﬂﬂ/ 0
ShaderUtilities
ﬂﬂ0 ?
.
ﬂﬂ? @
Keyword_MASK_TEX
ﬂﬂ@ P
)
ﬂﬂP Q
;
ﬂﬂQ R 
m_isMaskingEnabled
·· "
=
··# $
true
··% )
;
··) *

UpdateMask
‚‚ 
(
‚‚ 
)
‚‚ 
;
‚‚ 
}
„„ 
}
‰‰ 	
void
ËË 
DisableMasking
ËË 
(
ËË 
)
ËË 
{
ÈÈ 	
if
ÍÍ 
(
ÍÍ 
m_sharedMaterial
ÍÍ  
.
ÍÍ  !
HasProperty
ÍÍ! ,
(
ÍÍ, -
ShaderUtilities
ÍÍ- <
.
ÍÍ< =
ID_ClipRect
ÍÍ= H
)
ÍÍH I
)
ÍÍI J
{
ÎÎ 
m_sharedMaterial
ÏÏ  
.
ÏÏ  !
DisableKeyword
ÏÏ! /
(
ÏÏ/ 0
ShaderUtilities
ÏÏ0 ?
.
ÏÏ? @
Keyword_MASK_SOFT
ÏÏ@ Q
)
ÏÏQ R
;
ÏÏR S
m_sharedMaterial
ÌÌ  
.
ÌÌ  !
DisableKeyword
ÌÌ! /
(
ÌÌ/ 0
ShaderUtilities
ÌÌ0 ?
.
ÌÌ? @
Keyword_MASK_HARD
ÌÌ@ Q
)
ÌÌQ R
;
ÌÌR S
m_sharedMaterial
ÓÓ  
.
ÓÓ  !
DisableKeyword
ÓÓ! /
(
ÓÓ/ 0
ShaderUtilities
ÓÓ0 ?
.
ÓÓ? @
Keyword_MASK_TEX
ÓÓ@ P
)
ÓÓP Q
;
ÓÓQ R 
m_isMaskingEnabled
 "
=
# $
false
% *
;
* +

UpdateMask
ÒÒ 
(
ÒÒ 
)
ÒÒ 
;
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
void
ˆˆ 

UpdateMask
ˆˆ 
(
ˆˆ 
)
ˆˆ 
{
˜˜ 	
if
˙˙ 
(
˙˙ 
!
˙˙  
m_isMaskingEnabled
˙˙ #
)
˙˙# $
{
˚˚ 
return
ÄÄ 
;
ÄÄ 
}
ÅÅ 
if
ÉÉ 
(
ÉÉ  
m_isMaskingEnabled
ÉÉ "
&&
ÉÉ# %
m_fontMaterial
ÉÉ& 4
==
ÉÉ5 7
null
ÉÉ8 <
)
ÉÉ< =
{
ÑÑ $
CreateMaterialInstance
ÖÖ &
(
ÖÖ& '
)
ÖÖ' (
;
ÖÖ( )
}
ÜÜ 
}
ΩΩ 	
	protected
¡¡ 
override
¡¡ 
Material
¡¡ #
GetMaterial
¡¡$ /
(
¡¡/ 0
Material
¡¡0 8
mat
¡¡9 <
)
¡¡< =
{
¬¬ 	
if
…… 
(
…… 
m_fontMaterial
…… 
==
…… !
null
……" &
||
……' )
m_fontMaterial
……* 8
.
……8 9
GetInstanceID
……9 F
(
……F G
)
……G H
!=
……I K
mat
……L O
.
……O P
GetInstanceID
……P ]
(
……] ^
)
……^ _
)
……_ `
m_fontMaterial
   
=
    $
CreateMaterialInstance
  ! 7
(
  7 8
mat
  8 ;
)
  ; <
;
  < =
m_sharedMaterial
ÃÃ 
=
ÃÃ 
m_fontMaterial
ÃÃ -
;
ÃÃ- .
	m_padding
ŒŒ 
=
ŒŒ #
GetPaddingForMaterial
ŒŒ -
(
ŒŒ- .
)
ŒŒ. /
;
ŒŒ/ 0
SetVerticesDirty
–– 
(
–– 
)
–– 
;
–– 
SetMaterialDirty
—— 
(
—— 
)
—— 
;
—— 
return
”” 
m_sharedMaterial
”” #
;
””# $
}
‘‘ 	
	protected
€€ 
override
€€ 
Material
€€ #
[
€€# $
]
€€$ %
GetMaterials
€€& 2
(
€€2 3
Material
€€3 ;
[
€€; <
]
€€< =
mats
€€> B
)
€€B C
{
‹‹ 	
int
›› 
materialCount
›› 
=
›› 

m_textInfo
››  *
.
››* +
materialCount
››+ 8
;
››8 9
if
ﬂﬂ 
(
ﬂﬂ 
m_fontMaterials
ﬂﬂ 
==
ﬂﬂ  "
null
ﬂﬂ# '
)
ﬂﬂ' (
m_fontMaterials
‡‡ 
=
‡‡  !
new
‡‡" %
Material
‡‡& .
[
‡‡. /
materialCount
‡‡/ <
]
‡‡< =
;
‡‡= >
else
·· 
if
·· 
(
·· 
m_fontMaterials
·· $
.
··$ %
Length
··% +
!=
··, .
materialCount
··/ <
)
··< =
TMP_TextInfo
‚‚ 
.
‚‚ 
Resize
‚‚ #
(
‚‚# $
ref
‚‚$ '
m_fontMaterials
‚‚( 7
,
‚‚7 8
materialCount
‚‚9 F
,
‚‚F G
false
‚‚H M
)
‚‚M N
;
‚‚N O
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
i
ÂÂ 
<
ÂÂ 
materialCount
ÂÂ  -
;
ÂÂ- .
i
ÂÂ/ 0
++
ÂÂ0 2
)
ÂÂ2 3
{
ÊÊ 
if
ÁÁ 
(
ÁÁ 
i
ÁÁ 
==
ÁÁ 
$num
ÁÁ 
)
ÁÁ 
m_fontMaterials
ËË #
[
ËË# $
i
ËË$ %
]
ËË% &
=
ËË' (
fontMaterial
ËË) 5
;
ËË5 6
else
ÈÈ 
m_fontMaterials
ÍÍ #
[
ÍÍ# $
i
ÍÍ$ %
]
ÍÍ% &
=
ÍÍ' (
m_subTextObjects
ÍÍ) 9
[
ÍÍ9 :
i
ÍÍ: ;
]
ÍÍ; <
.
ÍÍ< =
material
ÍÍ= E
;
ÍÍE F
}
ÎÎ #
m_fontSharedMaterials
ÌÌ !
=
ÌÌ" #
m_fontMaterials
ÌÌ$ 3
;
ÌÌ3 4
return
ÔÔ 
m_fontMaterials
ÔÔ "
;
ÔÔ" #
}
 	
	protected
ÙÙ 
override
ÙÙ 
void
ÙÙ 
SetSharedMaterial
ÙÙ  1
(
ÙÙ1 2
Material
ÙÙ2 :
mat
ÙÙ; >
)
ÙÙ> ?
{
ıı 	
m_sharedMaterial
˚˚ 
=
˚˚ 
mat
˚˚ "
;
˚˚" #
	m_padding
˝˝ 
=
˝˝ #
GetPaddingForMaterial
˝˝ -
(
˝˝- .
)
˝˝. /
;
˝˝/ 0
SetMaterialDirty
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
	protected
áá 
override
áá 
Material
áá #
[
áá# $
]
áá$ % 
GetSharedMaterials
áá& 8
(
áá8 9
)
áá9 :
{
àà 	
int
ââ 
materialCount
ââ 
=
ââ 

m_textInfo
ââ  *
.
ââ* +
materialCount
ââ+ 8
;
ââ8 9
if
ãã 
(
ãã #
m_fontSharedMaterials
ãã %
==
ãã& (
null
ãã) -
)
ãã- .#
m_fontSharedMaterials
åå %
=
åå& '
new
åå( +
Material
åå, 4
[
åå4 5
materialCount
åå5 B
]
ååB C
;
ååC D
else
çç 
if
çç 
(
çç #
m_fontSharedMaterials
çç *
.
çç* +
Length
çç+ 1
!=
çç2 4
materialCount
çç5 B
)
ççB C
TMP_TextInfo
éé 
.
éé 
Resize
éé #
(
éé# $
ref
éé$ '#
m_fontSharedMaterials
éé( =
,
éé= >
materialCount
éé? L
,
ééL M
false
ééN S
)
ééS T
;
ééT U
for
êê 
(
êê 
int
êê 
i
êê 
=
êê 
$num
êê 
;
êê 
i
êê 
<
êê 
materialCount
êê  -
;
êê- .
i
êê/ 0
++
êê0 2
)
êê2 3
{
ëë 
if
íí 
(
íí 
i
íí 
==
íí 
$num
íí 
)
íí #
m_fontSharedMaterials
ìì )
[
ìì) *
i
ìì* +
]
ìì+ ,
=
ìì- .
m_sharedMaterial
ìì/ ?
;
ìì? @
else
îî #
m_fontSharedMaterials
ïï )
[
ïï) *
i
ïï* +
]
ïï+ ,
=
ïï- .
m_subTextObjects
ïï/ ?
[
ïï? @
i
ïï@ A
]
ïïA B
.
ïïB C
sharedMaterial
ïïC Q
;
ïïQ R
}
ññ 
return
òò #
m_fontSharedMaterials
òò (
;
òò( )
}
ôô 	
	protected
üü 
override
üü 
void
üü  
SetSharedMaterials
üü  2
(
üü2 3
Material
üü3 ;
[
üü; <
]
üü< =
	materials
üü> G
)
üüG H
{
†† 	
int
°° 
materialCount
°° 
=
°° 

m_textInfo
°°  *
.
°°* +
materialCount
°°+ 8
;
°°8 9
if
§§ 
(
§§ #
m_fontSharedMaterials
§§ %
==
§§& (
null
§§) -
)
§§- .#
m_fontSharedMaterials
•• %
=
••& '
new
••( +
Material
••, 4
[
••4 5
materialCount
••5 B
]
••B C
;
••C D
else
¶¶ 
if
¶¶ 
(
¶¶ #
m_fontSharedMaterials
¶¶ *
.
¶¶* +
Length
¶¶+ 1
!=
¶¶2 4
materialCount
¶¶5 B
)
¶¶B C
TMP_TextInfo
ßß 
.
ßß 
Resize
ßß #
(
ßß# $
ref
ßß$ '#
m_fontSharedMaterials
ßß( =
,
ßß= >
materialCount
ßß? L
,
ßßL M
false
ßßN S
)
ßßS T
;
ßßT U
for
™™ 
(
™™ 
int
™™ 
i
™™ 
=
™™ 
$num
™™ 
;
™™ 
i
™™ 
<
™™ 
materialCount
™™  -
;
™™- .
i
™™/ 0
++
™™0 2
)
™™2 3
{
´´ 
Texture
¨¨ 
mat_MainTex
¨¨ #
=
¨¨$ %
	materials
¨¨& /
[
¨¨/ 0
i
¨¨0 1
]
¨¨1 2
.
¨¨2 3

GetTexture
¨¨3 =
(
¨¨= >
ShaderUtilities
¨¨> M
.
¨¨M N

ID_MainTex
¨¨N X
)
¨¨X Y
;
¨¨Y Z
if
ÆÆ 
(
ÆÆ 
i
ÆÆ 
==
ÆÆ 
$num
ÆÆ 
)
ÆÆ 
{
ØØ 
if
±± 
(
±± 
mat_MainTex
±± $
==
±±% '
null
±±( ,
||
±±- /
mat_MainTex
±±0 ;
.
±±; <
GetInstanceID
±±< I
(
±±I J
)
±±J K
!=
±±L N
m_sharedMaterial
±±O _
.
±±_ `

GetTexture
±±` j
(
±±j k
ShaderUtilities
±±k z
.
±±z {

ID_MainTex±±{ Ö
)±±Ö Ü
.±±Ü á
GetInstanceID±±á î
(±±î ï
)±±ï ñ
)±±ñ ó
continue
≤≤  
;
≤≤  !
m_sharedMaterial
¥¥ $
=
¥¥% &#
m_fontSharedMaterials
¥¥' <
[
¥¥< =
i
¥¥= >
]
¥¥> ?
=
¥¥@ A
	materials
¥¥B K
[
¥¥K L
i
¥¥L M
]
¥¥M N
;
¥¥N O
	m_padding
µµ 
=
µµ #
GetPaddingForMaterial
µµ  5
(
µµ5 6
m_sharedMaterial
µµ6 F
)
µµF G
;
µµG H
}
∂∂ 
else
∑∑ 
{
∏∏ 
if
∫∫ 
(
∫∫ 
mat_MainTex
∫∫ #
==
∫∫$ &
null
∫∫' +
||
∫∫, .
mat_MainTex
∫∫/ :
.
∫∫: ;
GetInstanceID
∫∫; H
(
∫∫H I
)
∫∫I J
!=
∫∫K M
m_subTextObjects
∫∫N ^
[
∫∫^ _
i
∫∫_ `
]
∫∫` a
.
∫∫a b
sharedMaterial
∫∫b p
.
∫∫p q

GetTexture
∫∫q {
(
∫∫{ |
ShaderUtilities∫∫| ã
.∫∫ã å

ID_MainTex∫∫å ñ
)∫∫ñ ó
.∫∫ó ò
GetInstanceID∫∫ò •
(∫∫• ¶
)∫∫¶ ß
)∫∫ß ®
continue
ªª  
;
ªª  !
if
ææ 
(
ææ 
m_subTextObjects
ææ (
[
ææ( )
i
ææ) *
]
ææ* +
.
ææ+ ,
isDefaultMaterial
ææ, =
)
ææ= >
m_subTextObjects
øø (
[
øø( )
i
øø) *
]
øø* +
.
øø+ ,
sharedMaterial
øø, :
=
øø; <#
m_fontSharedMaterials
øø= R
[
øøR S
i
øøS T
]
øøT U
=
øøV W
	materials
øøX a
[
øøa b
i
øøb c
]
øøc d
;
øød e
}
¿¿ 
}
¡¡ 
}
¬¬ 	
	protected
∆∆ 
override
∆∆ 
void
∆∆ !
SetOutlineThickness
∆∆  3
(
∆∆3 4
float
∆∆4 9
	thickness
∆∆: C
)
∆∆C D
{
«« 	
	thickness
»» 
=
»» 
Mathf
»» 
.
»» 
Clamp01
»» %
(
»»% &
	thickness
»»& /
)
»»/ 0
;
»»0 1

m_renderer
…… 
.
…… 
material
…… 
.
……  
SetFloat
……  (
(
……( )
ShaderUtilities
……) 8
.
……8 9
ID_OutlineWidth
……9 H
,
……H I
	thickness
……J S
)
……S T
;
……T U
if
ÀÀ 
(
ÀÀ 
m_fontMaterial
ÀÀ 
==
ÀÀ !
null
ÀÀ" &
)
ÀÀ& '
m_fontMaterial
ÃÃ 
=
ÃÃ  

m_renderer
ÃÃ! +
.
ÃÃ+ ,
material
ÃÃ, 4
;
ÃÃ4 5
m_fontMaterial
ŒŒ 
=
ŒŒ 

m_renderer
ŒŒ '
.
ŒŒ' (
material
ŒŒ( 0
;
ŒŒ0 1
m_sharedMaterial
œœ 
=
œœ 
m_fontMaterial
œœ -
;
œœ- .
	m_padding
–– 
=
–– #
GetPaddingForMaterial
–– -
(
––- .
)
––. /
;
––/ 0
}
—— 	
	protected
’’ 
override
’’ 
void
’’ 
SetFaceColor
’’  ,
(
’’, -
Color32
’’- 4
color
’’5 :
)
’’: ;
{
÷÷ 	

m_renderer
◊◊ 
.
◊◊ 
material
◊◊ 
.
◊◊  
SetColor
◊◊  (
(
◊◊( )
ShaderUtilities
◊◊) 8
.
◊◊8 9
ID_FaceColor
◊◊9 E
,
◊◊E F
color
◊◊G L
)
◊◊L M
;
◊◊M N
if
ŸŸ 
(
ŸŸ 
m_fontMaterial
ŸŸ 
==
ŸŸ !
null
ŸŸ" &
)
ŸŸ& '
m_fontMaterial
⁄⁄ 
=
⁄⁄  

m_renderer
⁄⁄! +
.
⁄⁄+ ,
material
⁄⁄, 4
;
⁄⁄4 5
m_sharedMaterial
‹‹ 
=
‹‹ 
m_fontMaterial
‹‹ -
;
‹‹- .
}
›› 	
	protected
·· 
override
·· 
void
·· 
SetOutlineColor
··  /
(
··/ 0
Color32
··0 7
color
··8 =
)
··= >
{
‚‚ 	

m_renderer
„„ 
.
„„ 
material
„„ 
.
„„  
SetColor
„„  (
(
„„( )
ShaderUtilities
„„) 8
.
„„8 9
ID_OutlineColor
„„9 H
,
„„H I
color
„„J O
)
„„O P
;
„„P Q
if
ÂÂ 
(
ÂÂ 
m_fontMaterial
ÂÂ 
==
ÂÂ !
null
ÂÂ" &
)
ÂÂ& '
m_fontMaterial
ÊÊ 
=
ÊÊ  

m_renderer
ÊÊ! +
.
ÊÊ+ ,
material
ÊÊ, 4
;
ÊÊ4 5
m_sharedMaterial
ÈÈ 
=
ÈÈ 
m_fontMaterial
ÈÈ -
;
ÈÈ- .
}
ÍÍ 	
void
ÓÓ $
CreateMaterialInstance
ÓÓ #
(
ÓÓ# $
)
ÓÓ$ %
{
ÔÔ 	
Material
 
mat
 
=
 
new
 
Material
 '
(
' (
m_sharedMaterial
( 8
)
8 9
;
9 :
mat
ÒÒ 
.
ÒÒ 
shaderKeywords
ÒÒ 
=
ÒÒ  
m_sharedMaterial
ÒÒ! 1
.
ÒÒ1 2
shaderKeywords
ÒÒ2 @
;
ÒÒ@ A
mat
ÙÙ 
.
ÙÙ 
name
ÙÙ 
+=
ÙÙ 
$str
ÙÙ #
;
ÙÙ# $
m_fontMaterial
ˆˆ 
=
ˆˆ 
mat
ˆˆ  
;
ˆˆ  !
}
˜˜ 	
	protected
˚˚ 
override
˚˚ 
void
˚˚ 
SetShaderDepth
˚˚  .
(
˚˚. /
)
˚˚/ 0
{
¸¸ 	
if
˝˝ 
(
˝˝ 
m_isOverlay
˝˝ 
)
˝˝ 
{
˛˛ 
m_sharedMaterial
ÄÄ  
.
ÄÄ  !
SetFloat
ÄÄ! )
(
ÄÄ) *
ShaderUtilities
ÄÄ* 9
.
ÄÄ9 :!
ShaderTag_ZTestMode
ÄÄ: M
,
ÄÄM N
$num
ÄÄO P
)
ÄÄP Q
;
ÄÄQ R

m_renderer
ÇÇ 
.
ÇÇ 
material
ÇÇ #
.
ÇÇ# $
renderQueue
ÇÇ$ /
=
ÇÇ0 1
$num
ÇÇ2 6
;
ÇÇ6 7
m_sharedMaterial
ÑÑ  
=
ÑÑ! "

m_renderer
ÑÑ# -
.
ÑÑ- .
material
ÑÑ. 6
;
ÑÑ6 7
}
ÜÜ 
else
áá 
{
àà 
m_sharedMaterial
ää  
.
ää  !
SetFloat
ää! )
(
ää) *
ShaderUtilities
ää* 9
.
ää9 :!
ShaderTag_ZTestMode
ää: M
,
ääM N
$num
ääO P
)
ääP Q
;
ääQ R

m_renderer
ãã 
.
ãã 
material
ãã #
.
ãã# $
renderQueue
ãã$ /
=
ãã0 1
-
ãã2 3
$num
ãã3 4
;
ãã4 5
m_sharedMaterial
çç  
=
çç! "

m_renderer
çç# -
.
çç- .
material
çç. 6
;
çç6 7
}
èè 
}
êê 	
	protected
îî 
override
îî 
void
îî 

SetCulling
îî  *
(
îî* +
)
îî+ ,
{
ïï 	
if
ññ 
(
ññ  
m_isCullingEnabled
ññ "
)
ññ" #
{
óó 

m_renderer
òò 
.
òò 
material
òò #
.
òò# $
SetFloat
òò$ ,
(
òò, -
$str
òò- 8
,
òò8 9
$num
òò: ;
)
òò; <
;
òò< =
for
öö 
(
öö 
int
öö 
i
öö 
=
öö 
$num
öö 
;
öö 
i
öö  !
<
öö" #
m_subTextObjects
öö$ 4
.
öö4 5
Length
öö5 ;
&&
öö< >
m_subTextObjects
öö? O
[
ööO P
i
ööP Q
]
ööQ R
!=
ööS U
null
ööV Z
;
ööZ [
i
öö\ ]
++
öö] _
)
öö_ `
{
õõ 
Renderer
úú 
renderer
úú %
=
úú& '
m_subTextObjects
úú( 8
[
úú8 9
i
úú9 :
]
úú: ;
.
úú; <
renderer
úú< D
;
úúD E
if
ûû 
(
ûû 
renderer
ûû  
!=
ûû! #
null
ûû$ (
)
ûû( )
{
üü 
renderer
††  
.
††  !
material
††! )
.
††) *
SetFloat
††* 2
(
††2 3
ShaderUtilities
††3 B
.
††B C 
ShaderTag_CullMode
††C U
,
††U V
$num
††W X
)
††X Y
;
††Y Z
}
°° 
}
¢¢ 
}
££ 
else
§§ 
{
•• 

m_renderer
¶¶ 
.
¶¶ 
material
¶¶ #
.
¶¶# $
SetFloat
¶¶$ ,
(
¶¶, -
$str
¶¶- 8
,
¶¶8 9
$num
¶¶: ;
)
¶¶; <
;
¶¶< =
for
®® 
(
®® 
int
®® 
i
®® 
=
®® 
$num
®® 
;
®® 
i
®®  !
<
®®" #
m_subTextObjects
®®$ 4
.
®®4 5
Length
®®5 ;
&&
®®< >
m_subTextObjects
®®? O
[
®®O P
i
®®P Q
]
®®Q R
!=
®®S U
null
®®V Z
;
®®Z [
i
®®\ ]
++
®®] _
)
®®_ `
{
©© 
Renderer
™™ 
renderer
™™ %
=
™™& '
m_subTextObjects
™™( 8
[
™™8 9
i
™™9 :
]
™™: ;
.
™™; <
renderer
™™< D
;
™™D E
if
¨¨ 
(
¨¨ 
renderer
¨¨  
!=
¨¨! #
null
¨¨$ (
)
¨¨( )
{
≠≠ 
renderer
ÆÆ  
.
ÆÆ  !
material
ÆÆ! )
.
ÆÆ) *
SetFloat
ÆÆ* 2
(
ÆÆ2 3
ShaderUtilities
ÆÆ3 B
.
ÆÆB C 
ShaderTag_CullMode
ÆÆC U
,
ÆÆU V
$num
ÆÆW X
)
ÆÆX Y
;
ÆÆY Z
}
ØØ 
}
∞∞ 
}
±± 
}
≤≤ 	
void
∂∂ &
SetPerspectiveCorrection
∂∂ %
(
∂∂% &
)
∂∂& '
{
∑∑ 	
if
∏∏ 
(
∏∏ 
m_isOrthographic
∏∏  
)
∏∏  !
m_sharedMaterial
ππ  
.
ππ  !
SetFloat
ππ! )
(
ππ) *
ShaderUtilities
ππ* 9
.
ππ9 :"
ID_PerspectiveFilter
ππ: N
,
ππN O
$num
ππP T
)
ππT U
;
ππU V
else
∫∫ 
m_sharedMaterial
ªª  
.
ªª  !
SetFloat
ªª! )
(
ªª) *
ShaderUtilities
ªª* 9
.
ªª9 :"
ID_PerspectiveFilter
ªª: N
,
ªªN O
$num
ªªP V
)
ªªV W
;
ªªW X
}
ºº 	
internal
¿¿ 
override
¿¿ 
int
¿¿ 
SetArraySizes
¿¿ +
(
¿¿+ ,
UnicodeChar
¿¿, 7
[
¿¿7 8
]
¿¿8 9
unicodeChars
¿¿: F
)
¿¿F G
{
¡¡ 	#
k_SetArraySizesMarker
¬¬ !
.
¬¬! "
Begin
¬¬" '
(
¬¬' (
)
¬¬( )
;
¬¬) *
int
ƒƒ 
spriteCount
ƒƒ 
=
ƒƒ 
$num
ƒƒ 
;
ƒƒ  #
m_totalCharacterCount
∆∆ !
=
∆∆" #
$num
∆∆$ %
;
∆∆% &
m_isUsingBold
«« 
=
«« 
false
«« !
;
««! "
m_isParsingText
»» 
=
»» 
false
»» #
;
»»# $
tag_NoParsing
…… 
=
…… 
false
…… !
;
……! "!
m_FontStyleInternal
   
=
    !
m_fontStyle
  " -
;
  - .
m_fontStyleStack
ÀÀ 
.
ÀÀ 
Clear
ÀÀ "
(
ÀÀ" #
)
ÀÀ# $
;
ÀÀ$ %"
m_FontWeightInternal
ÕÕ  
=
ÕÕ! "
(
ÕÕ# $!
m_FontStyleInternal
ÕÕ$ 7
&
ÕÕ8 9

FontStyles
ÕÕ: D
.
ÕÕD E
Bold
ÕÕE I
)
ÕÕI J
==
ÕÕK M

FontStyles
ÕÕN X
.
ÕÕX Y
Bold
ÕÕY ]
?
ÕÕ^ _

FontWeight
ÕÕ` j
.
ÕÕj k
Bold
ÕÕk o
:
ÕÕp q
m_fontWeight
ÕÕr ~
;
ÕÕ~ 
m_FontWeightStack
ŒŒ 
.
ŒŒ 

SetDefault
ŒŒ (
(
ŒŒ( )"
m_FontWeightInternal
ŒŒ) =
)
ŒŒ= >
;
ŒŒ> ? 
m_currentFontAsset
–– 
=
––  
m_fontAsset
––! ,
;
––, -
m_currentMaterial
—— 
=
—— 
m_sharedMaterial
——  0
;
——0 1$
m_currentMaterialIndex
““ "
=
““# $
$num
““% &
;
““& '&
m_materialReferenceStack
‘‘ $
.
‘‘$ %

SetDefault
‘‘% /
(
‘‘/ 0
new
‘‘0 3
MaterialReference
‘‘4 E
(
‘‘E F$
m_currentMaterialIndex
‘‘F \
,
‘‘\ ] 
m_currentFontAsset
‘‘^ p
,
‘‘p q
null
‘‘r v
,
‘‘v w 
m_currentMaterial‘‘x â
,‘‘â ä
	m_padding‘‘ã î
)‘‘î ï
)‘‘ï ñ
;‘‘ñ ó,
m_materialReferenceIndexLookup
÷÷ *
.
÷÷* +
Clear
÷÷+ 0
(
÷÷0 1
)
÷÷1 2
;
÷÷2 3
MaterialReference
◊◊ 
.
◊◊ "
AddMaterialReference
◊◊ 2
(
◊◊2 3
m_currentMaterial
◊◊3 D
,
◊◊D E 
m_currentFontAsset
◊◊F X
,
◊◊X Y
ref
◊◊Z ]"
m_materialReferences
◊◊^ r
,
◊◊r s-
m_materialReferenceIndexLookup◊◊t í
)◊◊í ì
;◊◊ì î
if
⁄⁄ 
(
⁄⁄ 

m_textInfo
⁄⁄ 
==
⁄⁄ 
null
⁄⁄ "
)
⁄⁄" #

m_textInfo
€€ 
=
€€ 
new
€€  
TMP_TextInfo
€€! -
(
€€- ./
!m_InternalTextProcessingArraySize
€€. O
)
€€O P
;
€€P Q
else
‹‹ 
if
‹‹ 
(
‹‹ 

m_textInfo
‹‹ 
.
‹‹  
characterInfo
‹‹  -
.
‹‹- .
Length
‹‹. 4
<
‹‹5 6/
!m_InternalTextProcessingArraySize
‹‹7 X
)
‹‹X Y
TMP_TextInfo
›› 
.
›› 
Resize
›› #
(
››# $
ref
››$ '

m_textInfo
››( 2
.
››2 3
characterInfo
››3 @
,
››@ A/
!m_InternalTextProcessingArraySize
››B c
,
››c d
false
››e j
)
››j k
;
››k l
m_textElementType
ﬂﬂ 
=
ﬂﬂ !
TMP_TextElementType
ﬂﬂ  3
.
ﬂﬂ3 4
	Character
ﬂﬂ4 =
;
ﬂﬂ= >
if
¯¯ 
(
¯¯ 
m_overflowMode
¯¯ 
==
¯¯ !
TextOverflowModes
¯¯" 3
.
¯¯3 4
Ellipsis
¯¯4 <
)
¯¯< =
{
˘˘ )
GetEllipsisSpecialCharacter
˙˙ +
(
˙˙+ , 
m_currentFontAsset
˙˙, >
)
˙˙> ?
;
˙˙? @
if
¸¸ 
(
¸¸ 

m_Ellipsis
¸¸ 
.
¸¸ 
	character
¸¸ (
!=
¸¸) +
null
¸¸, 0
)
¸¸0 1
{
˝˝ 
if
˛˛ 
(
˛˛ 

m_Ellipsis
˛˛ "
.
˛˛" #
	fontAsset
˛˛# ,
.
˛˛, -
GetInstanceID
˛˛- :
(
˛˛: ;
)
˛˛; <
!=
˛˛= ? 
m_currentFontAsset
˛˛@ R
.
˛˛R S
GetInstanceID
˛˛S `
(
˛˛` a
)
˛˛a b
)
˛˛b c
{
ˇˇ 
if
ÄÄ 
(
ÄÄ 
TMP_Settings
ÄÄ (
.
ÄÄ( )!
matchMaterialPreset
ÄÄ) <
&&
ÄÄ= ?
m_currentMaterial
ÄÄ@ Q
.
ÄÄQ R
GetInstanceID
ÄÄR _
(
ÄÄ_ `
)
ÄÄ` a
!=
ÄÄb d

m_Ellipsis
ÄÄe o
.
ÄÄo p
	fontAsset
ÄÄp y
.
ÄÄy z
materialÄÄz Ç
.ÄÄÇ É
GetInstanceIDÄÄÉ ê
(ÄÄê ë
)ÄÄë í
)ÄÄí ì

m_Ellipsis
ÅÅ &
.
ÅÅ& '
material
ÅÅ' /
=
ÅÅ0 1!
TMP_MaterialManager
ÅÅ2 E
.
ÅÅE F!
GetFallbackMaterial
ÅÅF Y
(
ÅÅY Z
m_currentMaterial
ÅÅZ k
,
ÅÅk l

m_Ellipsis
ÅÅm w
.
ÅÅw x
	fontAssetÅÅx Å
.ÅÅÅ Ç
materialÅÅÇ ä
)ÅÅä ã
;ÅÅã å
else
ÇÇ 

m_Ellipsis
ÉÉ &
.
ÉÉ& '
material
ÉÉ' /
=
ÉÉ0 1

m_Ellipsis
ÉÉ2 <
.
ÉÉ< =
	fontAsset
ÉÉ= F
.
ÉÉF G
material
ÉÉG O
;
ÉÉO P

m_Ellipsis
ÖÖ "
.
ÖÖ" #
materialIndex
ÖÖ# 0
=
ÖÖ1 2
MaterialReference
ÖÖ3 D
.
ÖÖD E"
AddMaterialReference
ÖÖE Y
(
ÖÖY Z

m_Ellipsis
ÖÖZ d
.
ÖÖd e
material
ÖÖe m
,
ÖÖm n

m_Ellipsis
ÖÖo y
.
ÖÖy z
	fontAssetÖÖz É
,ÖÖÉ Ñ
refÖÖÖ à$
m_materialReferencesÖÖâ ù
,ÖÖù û.
m_materialReferenceIndexLookupÖÖü Ω
)ÖÖΩ æ
;ÖÖæ ø"
m_materialReferences
ÜÜ ,
[
ÜÜ, -

m_Ellipsis
ÜÜ- 7
.
ÜÜ7 8
materialIndex
ÜÜ8 E
]
ÜÜE F
.
ÜÜF G
referenceCount
ÜÜG U
=
ÜÜV W
$num
ÜÜX Y
;
ÜÜY Z
}
áá 
}
àà 
else
ââ 
{
ää 
m_overflowMode
ãã "
=
ãã# $
TextOverflowModes
ãã% 6
.
ãã6 7
Truncate
ãã7 ?
;
ãã? @
if
çç 
(
çç 
!
çç 
TMP_Settings
çç %
.
çç% &
warningsDisabled
çç& 6
)
çç6 7
Debug
éé 
.
éé 

LogWarning
éé (
(
éé( )
$str
éé) k
+
éél m!
m_currentFontAssetéén Ä
.ééÄ Å
nameééÅ Ö
+ééÜ á
$strééà —
,éé— “
thiséé” ◊
)éé◊ ÿ
;ééÿ Ÿ
}
èè 
}
êê 
if
ïï 
(
ïï 
m_overflowMode
ïï 
==
ïï !
TextOverflowModes
ïï" 3
.
ïï3 4
Linked
ïï4 :
&&
ïï; =#
m_linkedTextComponent
ïï> S
!=
ïïT V
null
ïïW [
&&
ïï\ ^
!
ïï_ `,
m_isCalculatingPreferredValues
ïï` ~
)
ïï~ #
m_linkedTextComponent
ññ %
.
ññ% &
text
ññ& *
=
ññ+ ,
string
ññ- 3
.
ññ3 4
Empty
ññ4 9
;
ññ9 :
for
ôô 
(
ôô 
int
ôô 
i
ôô 
=
ôô 
$num
ôô 
;
ôô 
i
ôô 
<
ôô 
unicodeChars
ôô  ,
.
ôô, -
Length
ôô- 3
&&
ôô4 6
unicodeChars
ôô7 C
[
ôôC D
i
ôôD E
]
ôôE F
.
ôôF G
unicode
ôôG N
!=
ôôO Q
$num
ôôR S
;
ôôS T
i
ôôU V
++
ôôV X
)
ôôX Y
{
öö 
if
úú 
(
úú 

m_textInfo
úú 
.
úú 
characterInfo
úú ,
==
úú- /
null
úú0 4
||
úú5 7#
m_totalCharacterCount
úú8 M
>=
úúN P

m_textInfo
úúQ [
.
úú[ \
characterInfo
úú\ i
.
úúi j
Length
úúj p
)
úúp q
TMP_TextInfo
ùù  
.
ùù  !
Resize
ùù! '
(
ùù' (
ref
ùù( +

m_textInfo
ùù, 6
.
ùù6 7
characterInfo
ùù7 D
,
ùùD E#
m_totalCharacterCount
ùùF [
+
ùù\ ]
$num
ùù^ _
,
ùù_ `
true
ùùa e
)
ùùe f
;
ùùf g
int
üü 
unicode
üü 
=
üü 
unicodeChars
üü *
[
üü* +
i
üü+ ,
]
üü, -
.
üü- .
unicode
üü. 5
;
üü5 6
if
££ 
(
££ 
m_isRichText
££  
&&
££! #
unicode
££$ +
==
££, .
$num
££/ 1
)
££1 2
{
§§ 
int
••  
prev_MaterialIndex
•• *
=
••+ ,$
m_currentMaterialIndex
••- C
;
••C D
int
¶¶ 
endTagIndex
¶¶ #
;
¶¶# $
if
©© 
(
©© 
ValidateHtmlTag
©© '
(
©©' (
unicodeChars
©©( 4
,
©©4 5
i
©©6 7
+
©©8 9
$num
©©: ;
,
©©; <
out
©©= @
endTagIndex
©©A L
)
©©L M
)
©©M N
{
™™ 
int
´´ 
tagStartIndex
´´ )
=
´´* +
unicodeChars
´´, 8
[
´´8 9
i
´´9 :
]
´´: ;
.
´´; <
stringIndex
´´< G
;
´´G H
i
¨¨ 
=
¨¨ 
endTagIndex
¨¨ '
;
¨¨' (
if
ÆÆ 
(
ÆÆ 
(
ÆÆ !
m_FontStyleInternal
ÆÆ 0
&
ÆÆ1 2

FontStyles
ÆÆ3 =
.
ÆÆ= >
Bold
ÆÆ> B
)
ÆÆB C
==
ÆÆD F

FontStyles
ÆÆG Q
.
ÆÆQ R
Bold
ÆÆR V
)
ÆÆV W
m_isUsingBold
ØØ )
=
ØØ* +
true
ØØ, 0
;
ØØ0 1
if
±± 
(
±± 
m_textElementType
±± -
==
±±. 0!
TMP_TextElementType
±±1 D
.
±±D E
Sprite
±±E K
)
±±K L
{
≤≤ "
m_materialReferences
≥≥ 0
[
≥≥0 1$
m_currentMaterialIndex
≥≥1 G
]
≥≥G H
.
≥≥H I
referenceCount
≥≥I W
+=
≥≥X Z
$num
≥≥[ \
;
≥≥\ ]

m_textInfo
µµ &
.
µµ& '
characterInfo
µµ' 4
[
µµ4 5#
m_totalCharacterCount
µµ5 J
]
µµJ K
.
µµK L
	character
µµL U
=
µµV W
(
µµX Y
char
µµY ]
)
µµ] ^
(
µµ^ _
$num
µµ_ d
+
µµe f
m_spriteIndex
µµg t
)
µµt u
;
µµu v

m_textInfo
∂∂ &
.
∂∂& '
characterInfo
∂∂' 4
[
∂∂4 5#
m_totalCharacterCount
∂∂5 J
]
∂∂J K
.
∂∂K L
spriteIndex
∂∂L W
=
∂∂X Y
m_spriteIndex
∂∂Z g
;
∂∂g h

m_textInfo
∑∑ &
.
∑∑& '
characterInfo
∑∑' 4
[
∑∑4 5#
m_totalCharacterCount
∑∑5 J
]
∑∑J K
.
∑∑K L
	fontAsset
∑∑L U
=
∑∑V W 
m_currentFontAsset
∑∑X j
;
∑∑j k

m_textInfo
∏∏ &
.
∏∏& '
characterInfo
∏∏' 4
[
∏∏4 5#
m_totalCharacterCount
∏∏5 J
]
∏∏J K
.
∏∏K L
spriteAsset
∏∏L W
=
∏∏X Y"
m_currentSpriteAsset
∏∏Z n
;
∏∏n o

m_textInfo
ππ &
.
ππ& '
characterInfo
ππ' 4
[
ππ4 5#
m_totalCharacterCount
ππ5 J
]
ππJ K
.
ππK L$
materialReferenceIndex
ππL b
=
ππc d$
m_currentMaterialIndex
ππe {
;
ππ{ |

m_textInfo
∫∫ &
.
∫∫& '
characterInfo
∫∫' 4
[
∫∫4 5#
m_totalCharacterCount
∫∫5 J
]
∫∫J K
.
∫∫K L
textElement
∫∫L W
=
∫∫X Y"
m_currentSpriteAsset
∫∫Z n
.
∫∫n o#
spriteCharacterTable∫∫o É
[∫∫É Ñ
m_spriteIndex∫∫Ñ ë
]∫∫ë í
;∫∫í ì

m_textInfo
ªª &
.
ªª& '
characterInfo
ªª' 4
[
ªª4 5#
m_totalCharacterCount
ªª5 J
]
ªªJ K
.
ªªK L
elementType
ªªL W
=
ªªX Y
m_textElementType
ªªZ k
;
ªªk l

m_textInfo
ºº &
.
ºº& '
characterInfo
ºº' 4
[
ºº4 5#
m_totalCharacterCount
ºº5 J
]
ººJ K
.
ººK L
index
ººL Q
=
ººR S
tagStartIndex
ººT a
;
ººa b

m_textInfo
ΩΩ &
.
ΩΩ& '
characterInfo
ΩΩ' 4
[
ΩΩ4 5#
m_totalCharacterCount
ΩΩ5 J
]
ΩΩJ K
.
ΩΩK L
stringLength
ΩΩL X
=
ΩΩY Z
unicodeChars
ΩΩ[ g
[
ΩΩg h
i
ΩΩh i
]
ΩΩi j
.
ΩΩj k
stringIndex
ΩΩk v
-
ΩΩw x
tagStartIndexΩΩy Ü
+ΩΩá à
$numΩΩâ ä
;ΩΩä ã
m_textElementType
¿¿ -
=
¿¿. /!
TMP_TextElementType
¿¿0 C
.
¿¿C D
	Character
¿¿D M
;
¿¿M N$
m_currentMaterialIndex
¡¡ 2
=
¡¡3 4 
prev_MaterialIndex
¡¡5 G
;
¡¡G H
spriteCount
√√ '
+=
√√( *
$num
√√+ ,
;
√√, -#
m_totalCharacterCount
ƒƒ 1
+=
ƒƒ2 4
$num
ƒƒ5 6
;
ƒƒ6 7
}
≈≈ 
continue
««  
;
««  !
}
»» 
}
…… 
bool
ÃÃ (
isUsingAlternativeTypeface
ÃÃ /
;
ÃÃ/ 0
bool
ÕÕ 2
$isUsingFallbackOrAlternativeTypeface
ÕÕ 9
=
ÕÕ: ;
false
ÕÕ< A
;
ÕÕA B
TMP_FontAsset
œœ 
prev_fontAsset
œœ ,
=
œœ- . 
m_currentFontAsset
œœ/ A
;
œœA B
Material
–– 
prev_material
–– &
=
––' (
m_currentMaterial
––) :
;
––: ;
int
——  
prev_materialIndex
—— &
=
——' ($
m_currentMaterialIndex
——) ?
;
——? @
if
’’ 
(
’’ 
m_textElementType
’’ %
==
’’& (!
TMP_TextElementType
’’) <
.
’’< =
	Character
’’= F
)
’’F G
{
÷÷ 
if
◊◊ 
(
◊◊ 
(
◊◊ !
m_FontStyleInternal
◊◊ ,
&
◊◊- .

FontStyles
◊◊/ 9
.
◊◊9 :
	UpperCase
◊◊: C
)
◊◊C D
==
◊◊E G

FontStyles
◊◊H R
.
◊◊R S
	UpperCase
◊◊S \
)
◊◊\ ]
{
ÿÿ 
if
⁄⁄ 
(
⁄⁄ 
char
⁄⁄  
.
⁄⁄  !
IsLower
⁄⁄! (
(
⁄⁄( )
(
⁄⁄) *
char
⁄⁄* .
)
⁄⁄. /
unicode
⁄⁄/ 6
)
⁄⁄6 7
)
⁄⁄7 8
unicode
€€ #
=
€€$ %
char
€€& *
.
€€* +
ToUpper
€€+ 2
(
€€2 3
(
€€3 4
char
€€4 8
)
€€8 9
unicode
€€9 @
)
€€@ A
;
€€A B
}
›› 
else
ﬁﬁ 
if
ﬁﬁ 
(
ﬁﬁ 
(
ﬁﬁ !
m_FontStyleInternal
ﬁﬁ 1
&
ﬁﬁ2 3

FontStyles
ﬁﬁ4 >
.
ﬁﬁ> ?
	LowerCase
ﬁﬁ? H
)
ﬁﬁH I
==
ﬁﬁJ L

FontStyles
ﬁﬁM W
.
ﬁﬁW X
	LowerCase
ﬁﬁX a
)
ﬁﬁa b
{
ﬂﬂ 
if
·· 
(
·· 
char
··  
.
··  !
IsUpper
··! (
(
··( )
(
··) *
char
··* .
)
··. /
unicode
··/ 6
)
··6 7
)
··7 8
unicode
‚‚ #
=
‚‚$ %
char
‚‚& *
.
‚‚* +
ToLower
‚‚+ 2
(
‚‚2 3
(
‚‚3 4
char
‚‚4 8
)
‚‚8 9
unicode
‚‚9 @
)
‚‚@ A
;
‚‚A B
}
„„ 
else
‰‰ 
if
‰‰ 
(
‰‰ 
(
‰‰ !
m_FontStyleInternal
‰‰ 1
&
‰‰2 3

FontStyles
‰‰4 >
.
‰‰> ?
	SmallCaps
‰‰? H
)
‰‰H I
==
‰‰J L

FontStyles
‰‰M W
.
‰‰W X
	SmallCaps
‰‰X a
)
‰‰a b
{
ÂÂ 
if
ÁÁ 
(
ÁÁ 
char
ÁÁ  
.
ÁÁ  !
IsLower
ÁÁ! (
(
ÁÁ( )
(
ÁÁ) *
char
ÁÁ* .
)
ÁÁ. /
unicode
ÁÁ/ 6
)
ÁÁ6 7
)
ÁÁ7 8
unicode
ËË #
=
ËË$ %
char
ËË& *
.
ËË* +
ToUpper
ËË+ 2
(
ËË2 3
(
ËË3 4
char
ËË4 8
)
ËË8 9
unicode
ËË9 @
)
ËË@ A
;
ËËA B
}
ÈÈ 
}
ÍÍ 
TMP_TextElement
ÔÔ 
	character
ÔÔ  )
=
ÔÔ* +
GetTextElement
ÔÔ, :
(
ÔÔ: ;
(
ÔÔ; <
uint
ÔÔ< @
)
ÔÔ@ A
unicode
ÔÔA H
,
ÔÔH I 
m_currentFontAsset
ÔÔJ \
,
ÔÔ\ ]!
m_FontStyleInternal
ÔÔ^ q
,
ÔÔq r#
m_FontWeightInternalÔÔs á
,ÔÔá à
outÔÔâ å*
isUsingAlternativeTypefaceÔÔç ß
)ÔÔß ®
;ÔÔ® ©
if
É	É	 
(
É	É	 
	character
É	É	 
==
É	É	  
null
É	É	! %
)
É	É	% &
{
Ñ	Ñ	 
int
Ü	Ü	 
srcGlyph
Ü	Ü	  
=
Ü	Ü	! "
unicode
Ü	Ü	# *
;
Ü	Ü	* +
unicode
â	â	 
=
â	â	 
unicodeChars
â	â	 *
[
â	â	* +
i
â	â	+ ,
]
â	â	, -
.
â	â	- .
unicode
â	â	. 5
=
â	â	6 7
TMP_Settings
â	â	8 D
.
â	â	D E#
missingGlyphCharacter
â	â	E Z
==
â	â	[ ]
$num
â	â	^ _
?
â	â	` a
$num
â	â	b f
:
â	â	g h
TMP_Settings
â	â	i u
.
â	â	u v$
missingGlyphCharacterâ	â	v ã
;â	â	ã å
	character
å	å	 
=
å	å	 $
TMP_FontAssetUtilities
å	å	  6
.
å	å	6 7'
GetCharacterFromFontAsset
å	å	7 P
(
å	å	P Q
(
å	å	Q R
uint
å	å	R V
)
å	å	V W
unicode
å	å	W ^
,
å	å	^ _ 
m_currentFontAsset
å	å	` r
,
å	å	r s
true
å	å	t x
,
å	å	x y"
m_FontStyleInternalå	å	z ç
,å	å	ç é$
m_FontWeightInternalå	å	è £
,å	å	£ §
outå	å	• ®*
isUsingAlternativeTypefaceå	å	© √
)å	å	√ ƒ
;å	å	ƒ ≈
if
é	é	 
(
é	é	 
	character
é	é	 !
==
é	é	" $
null
é	é	% )
)
é	é	) *
{
è	è	 
if
ë	ë	 
(
ë	ë	 
TMP_Settings
ë	ë	 (
.
ë	ë	( ) 
fallbackFontAssets
ë	ë	) ;
!=
ë	ë	< >
null
ë	ë	? C
&&
ë	ë	D F
TMP_Settings
ë	ë	G S
.
ë	ë	S T 
fallbackFontAssets
ë	ë	T f
.
ë	ë	f g
Count
ë	ë	g l
>
ë	ë	m n
$num
ë	ë	o p
)
ë	ë	p q
	character
í	í	 %
=
í	í	& '$
TMP_FontAssetUtilities
í	í	( >
.
í	í	> ?(
GetCharacterFromFontAssets
í	í	? Y
(
í	í	Y Z
(
í	í	Z [
uint
í	í	[ _
)
í	í	_ `
unicode
í	í	` g
,
í	í	g h 
m_currentFontAsset
í	í	i {
,
í	í	{ |
TMP_Settingsí	í	} â
.í	í	â ä"
fallbackFontAssetsí	í	ä ú
,í	í	ú ù
trueí	í	û ¢
,í	í	¢ £#
m_FontStyleInternalí	í	§ ∑
,í	í	∑ ∏$
m_FontWeightInternalí	í	π Õ
,í	í	Õ Œ
outí	í	œ “*
isUsingAlternativeTypefaceí	í	” Ì
)í	í	Ì Ó
;í	í	Ó Ô
}
ì	ì	 
if
ï	ï	 
(
ï	ï	 
	character
ï	ï	 !
==
ï	ï	" $
null
ï	ï	% )
)
ï	ï	) *
{
ñ	ñ	 
if
ò	ò	 
(
ò	ò	 
TMP_Settings
ò	ò	 (
.
ò	ò	( )
defaultFontAsset
ò	ò	) 9
!=
ò	ò	: <
null
ò	ò	= A
)
ò	ò	A B
	character
ô	ô	 %
=
ô	ô	& '$
TMP_FontAssetUtilities
ô	ô	( >
.
ô	ô	> ?'
GetCharacterFromFontAsset
ô	ô	? X
(
ô	ô	X Y
(
ô	ô	Y Z
uint
ô	ô	Z ^
)
ô	ô	^ _
unicode
ô	ô	_ f
,
ô	ô	f g
TMP_Settings
ô	ô	h t
.
ô	ô	t u
defaultFontAssetô	ô	u Ö
,ô	ô	Ö Ü
trueô	ô	á ã
,ô	ô	ã å#
m_FontStyleInternalô	ô	ç †
,ô	ô	† °$
m_FontWeightInternalô	ô	¢ ∂
,ô	ô	∂ ∑
outô	ô	∏ ª*
isUsingAlternativeTypefaceô	ô	º ÷
)ô	ô	÷ ◊
;ô	ô	◊ ÿ
}
ö	ö	 
if
ú	ú	 
(
ú	ú	 
	character
ú	ú	 !
==
ú	ú	" $
null
ú	ú	% )
)
ú	ú	) *
{
ù	ù	 
unicode
ü	ü	 
=
ü	ü	  !
unicodeChars
ü	ü	" .
[
ü	ü	. /
i
ü	ü	/ 0
]
ü	ü	0 1
.
ü	ü	1 2
unicode
ü	ü	2 9
=
ü	ü	: ;
$num
ü	ü	< >
;
ü	ü	> ?
	character
†	†	 !
=
†	†	" #$
TMP_FontAssetUtilities
†	†	$ :
.
†	†	: ;'
GetCharacterFromFontAsset
†	†	; T
(
†	†	T U
(
†	†	U V
uint
†	†	V Z
)
†	†	Z [
unicode
†	†	[ b
,
†	†	b c 
m_currentFontAsset
†	†	d v
,
†	†	v w
true
†	†	x |
,
†	†	| }"
m_FontStyleInternal†	†	~ ë
,†	†	ë í$
m_FontWeightInternal†	†	ì ß
,†	†	ß ®
out†	†	© ¨*
isUsingAlternativeTypeface†	†	≠ «
)†	†	« »
;†	†	» …
}
°	°	 
if
£	£	 
(
£	£	 
	character
£	£	 !
==
£	£	" $
null
£	£	% )
)
£	£	) *
{
§	§	 
unicode
¶	¶	 
=
¶	¶	  !
unicodeChars
¶	¶	" .
[
¶	¶	. /
i
¶	¶	/ 0
]
¶	¶	0 1
.
¶	¶	1 2
unicode
¶	¶	2 9
=
¶	¶	: ;
$num
¶	¶	< @
;
¶	¶	@ A
	character
ß	ß	 !
=
ß	ß	" #$
TMP_FontAssetUtilities
ß	ß	$ :
.
ß	ß	: ;'
GetCharacterFromFontAsset
ß	ß	; T
(
ß	ß	T U
(
ß	ß	U V
uint
ß	ß	V Z
)
ß	ß	Z [
unicode
ß	ß	[ b
,
ß	ß	b c 
m_currentFontAsset
ß	ß	d v
,
ß	ß	v w
true
ß	ß	x |
,
ß	ß	| }"
m_FontStyleInternalß	ß	~ ë
,ß	ß	ë í$
m_FontWeightInternalß	ß	ì ß
,ß	ß	ß ®
outß	ß	© ¨*
isUsingAlternativeTypefaceß	ß	≠ «
)ß	ß	« »
;ß	ß	» …
}
®	®	 
if
™	™	 
(
™	™	 
!
™	™	 
TMP_Settings
™	™	 %
.
™	™	% &
warningsDisabled
™	™	& 6
)
™	™	6 7
{
´	´	 
string
¨	¨	 
formattedWarning
¨	¨	 /
=
¨	¨	0 1
srcGlyph
¨	¨	2 :
>
¨	¨	; <
$num
¨	¨	= C
?
≠	≠	 
string
≠	≠	 $
.
≠	≠	$ %
Format
≠	≠	% +
(
≠	≠	+ ,
$str≠	≠	, ﬂ
,≠	≠	ﬂ ‡
srcGlyph≠	≠	· È
,≠	≠	È Í
m_fontAsset≠	≠	Î ˆ
.≠	≠	ˆ ˜
name≠	≠	˜ ˚
,≠	≠	˚ ¸
	character≠	≠	˝ Ü
.≠	≠	Ü á
unicode≠	≠	á é
,≠	≠	é è
this≠	≠	ê î
.≠	≠	î ï
name≠	≠	ï ô
)≠	≠	ô ö
:
Æ	Æ	 
string
Æ	Æ	 $
.
Æ	Æ	$ %
Format
Æ	Æ	% +
(
Æ	Æ	+ ,
$strÆ	Æ	, ﬂ
,Æ	Æ	ﬂ ‡
srcGlyphÆ	Æ	· È
,Æ	Æ	È Í
m_fontAssetÆ	Æ	Î ˆ
.Æ	Æ	ˆ ˜
nameÆ	Æ	˜ ˚
,Æ	Æ	˚ ¸
	characterÆ	Æ	˝ Ü
.Æ	Æ	Ü á
unicodeÆ	Æ	á é
,Æ	Æ	é è
thisÆ	Æ	ê î
.Æ	Æ	î ï
nameÆ	Æ	ï ô
)Æ	Æ	ô ö
;Æ	Æ	ö õ
Debug
∞	∞	 
.
∞	∞	 

LogWarning
∞	∞	 (
(
∞	∞	( )
formattedWarning
∞	∞	) 9
,
∞	∞	9 :
this
∞	∞	; ?
)
∞	∞	? @
;
∞	∞	@ A
}
±	±	 
}
≤	≤	 
if
¥	¥	 
(
¥	¥	 
	character
¥	¥	 
.
¥	¥	 
elementType
¥	¥	 )
==
¥	¥	* ,
TextElementType
¥	¥	- <
.
¥	¥	< =
	Character
¥	¥	= F
)
¥	¥	F G
{
µ	µ	 
if
∂	∂	 
(
∂	∂	 
	character
∂	∂	 !
.
∂	∂	! "
	textAsset
∂	∂	" +
.
∂	∂	+ ,

instanceID
∂	∂	, 6
!=
∂	∂	7 9 
m_currentFontAsset
∂	∂	: L
.
∂	∂	L M

instanceID
∂	∂	M W
)
∂	∂	W X
{
∑	∑	 2
$isUsingFallbackOrAlternativeTypeface
∏	∏	 <
=
∏	∏	= >
true
∏	∏	? C
;
∏	∏	C D 
m_currentFontAsset
π	π	 *
=
π	π	+ ,
	character
π	π	- 6
.
π	π	6 7
	textAsset
π	π	7 @
as
π	π	A C
TMP_FontAsset
π	π	D Q
;
π	π	Q R
}
ª	ª	 
}
º	º	 

m_textInfo
¿	¿	 
.
¿	¿	 
characterInfo
¿	¿	 (
[
¿	¿	( )#
m_totalCharacterCount
¿	¿	) >
]
¿	¿	> ?
.
¿	¿	? @
elementType
¿	¿	@ K
=
¿	¿	L M!
TMP_TextElementType
¿	¿	N a
.
¿	¿	a b
	Character
¿	¿	b k
;
¿	¿	k l

m_textInfo
¡	¡	 
.
¡	¡	 
characterInfo
¡	¡	 (
[
¡	¡	( )#
m_totalCharacterCount
¡	¡	) >
]
¡	¡	> ?
.
¡	¡	? @
textElement
¡	¡	@ K
=
¡	¡	L M
	character
¡	¡	N W
;
¡	¡	W X

m_textInfo
¬	¬	 
.
¬	¬	 
characterInfo
¬	¬	 (
[
¬	¬	( )#
m_totalCharacterCount
¬	¬	) >
]
¬	¬	> ?
.
¬	¬	? @&
isUsingAlternateTypeface
¬	¬	@ X
=
¬	¬	Y Z(
isUsingAlternativeTypeface
¬	¬	[ u
;
¬	¬	u v

m_textInfo
√	√	 
.
√	√	 
characterInfo
√	√	 (
[
√	√	( )#
m_totalCharacterCount
√	√	) >
]
√	√	> ?
.
√	√	? @
	character
√	√	@ I
=
√	√	J K
(
√	√	L M
char
√	√	M Q
)
√	√	Q R
unicode
√	√	R Y
;
√	√	Y Z

m_textInfo
ƒ	ƒ	 
.
ƒ	ƒ	 
characterInfo
ƒ	ƒ	 (
[
ƒ	ƒ	( )#
m_totalCharacterCount
ƒ	ƒ	) >
]
ƒ	ƒ	> ?
.
ƒ	ƒ	? @
index
ƒ	ƒ	@ E
=
ƒ	ƒ	F G
unicodeChars
ƒ	ƒ	H T
[
ƒ	ƒ	T U
i
ƒ	ƒ	U V
]
ƒ	ƒ	V W
.
ƒ	ƒ	W X
stringIndex
ƒ	ƒ	X c
;
ƒ	ƒ	c d

m_textInfo
≈	≈	 
.
≈	≈	 
characterInfo
≈	≈	 (
[
≈	≈	( )#
m_totalCharacterCount
≈	≈	) >
]
≈	≈	> ?
.
≈	≈	? @
stringLength
≈	≈	@ L
=
≈	≈	M N
unicodeChars
≈	≈	O [
[
≈	≈	[ \
i
≈	≈	\ ]
]
≈	≈	] ^
.
≈	≈	^ _
length
≈	≈	_ e
;
≈	≈	e f

m_textInfo
∆	∆	 
.
∆	∆	 
characterInfo
∆	∆	 (
[
∆	∆	( )#
m_totalCharacterCount
∆	∆	) >
]
∆	∆	> ?
.
∆	∆	? @
	fontAsset
∆	∆	@ I
=
∆	∆	J K 
m_currentFontAsset
∆	∆	L ^
;
∆	∆	^ _
if
…	…	 
(
…	…	 
	character
…	…	 
.
…	…	 
elementType
…	…	 )
==
…	…	* ,
TextElementType
…	…	- <
.
…	…	< =
Sprite
…	…	= C
)
…	…	C D
{
 	 	 
TMP_SpriteAsset
À	À	 #
spriteAssetRef
À	À	$ 2
=
À	À	3 4
	character
À	À	5 >
.
À	À	> ?
	textAsset
À	À	? H
as
À	À	I K
TMP_SpriteAsset
À	À	L [
;
À	À	[ \$
m_currentMaterialIndex
Ã	Ã	 *
=
Ã	Ã	+ ,
MaterialReference
Ã	Ã	- >
.
Ã	Ã	> ?"
AddMaterialReference
Ã	Ã	? S
(
Ã	Ã	S T
spriteAssetRef
Ã	Ã	T b
.
Ã	Ã	b c
material
Ã	Ã	c k
,
Ã	Ã	k l
spriteAssetRef
Ã	Ã	m {
,
Ã	Ã	{ |
refÃ	Ã	} Ä$
m_materialReferencesÃ	Ã	Å ï
,Ã	Ã	ï ñ.
m_materialReferenceIndexLookupÃ	Ã	ó µ
)Ã	Ã	µ ∂
;Ã	Ã	∂ ∑"
m_materialReferences
Õ	Õ	 (
[
Õ	Õ	( )$
m_currentMaterialIndex
Õ	Õ	) ?
]
Õ	Õ	? @
.
Õ	Õ	@ A
referenceCount
Õ	Õ	A O
+=
Õ	Õ	P R
$num
Õ	Õ	S T
;
Õ	Õ	T U

m_textInfo
œ	œ	 
.
œ	œ	 
characterInfo
œ	œ	 ,
[
œ	œ	, -#
m_totalCharacterCount
œ	œ	- B
]
œ	œ	B C
.
œ	œ	C D
elementType
œ	œ	D O
=
œ	œ	P Q!
TMP_TextElementType
œ	œ	R e
.
œ	œ	e f
Sprite
œ	œ	f l
;
œ	œ	l m

m_textInfo
–	–	 
.
–	–	 
characterInfo
–	–	 ,
[
–	–	, -#
m_totalCharacterCount
–	–	- B
]
–	–	B C
.
–	–	C D$
materialReferenceIndex
–	–	D Z
=
–	–	[ \$
m_currentMaterialIndex
–	–	] s
;
–	–	s t

m_textInfo
—	—	 
.
—	—	 
characterInfo
—	—	 ,
[
—	—	, -#
m_totalCharacterCount
—	—	- B
]
—	—	B C
.
—	—	C D
spriteAsset
—	—	D O
=
—	—	P Q
spriteAssetRef
—	—	R `
;
—	—	` a

m_textInfo
“	“	 
.
“	“	 
characterInfo
“	“	 ,
[
“	“	, -#
m_totalCharacterCount
“	“	- B
]
“	“	B C
.
“	“	C D
spriteIndex
“	“	D O
=
“	“	P Q
(
“	“	R S
int
“	“	S V
)
“	“	V W
	character
“	“	W `
.
“	“	` a

glyphIndex
“	“	a k
;
“	“	k l
m_textElementType
’	’	 %
=
’	’	& '!
TMP_TextElementType
’	’	( ;
.
’	’	; <
	Character
’	’	< E
;
’	’	E F$
m_currentMaterialIndex
÷	÷	 *
=
÷	÷	+ , 
prev_materialIndex
÷	÷	- ?
;
÷	÷	? @
spriteCount
ÿ	ÿ	 
+=
ÿ	ÿ	  "
$num
ÿ	ÿ	# $
;
ÿ	ÿ	$ %#
m_totalCharacterCount
Ÿ	Ÿ	 )
+=
Ÿ	Ÿ	* ,
$num
Ÿ	Ÿ	- .
;
Ÿ	Ÿ	. /
continue
€	€	 
;
€	€	 
}
‹	‹	 
if
ﬁ	ﬁ	 
(
ﬁ	ﬁ	 2
$isUsingFallbackOrAlternativeTypeface
ﬁ	ﬁ	 8
&&
ﬁ	ﬁ	9 ; 
m_currentFontAsset
ﬁ	ﬁ	< N
.
ﬁ	ﬁ	N O

instanceID
ﬁ	ﬁ	O Y
!=
ﬁ	ﬁ	Z \
m_fontAsset
ﬁ	ﬁ	] h
.
ﬁ	ﬁ	h i

instanceID
ﬁ	ﬁ	i s
)
ﬁ	ﬁ	s t
{
ﬂ	ﬂ	 
if
·	·	 
(
·	·	 
TMP_Settings
·	·	 $
.
·	·	$ %!
matchMaterialPreset
·	·	% 8
)
·	·	8 9
m_currentMaterial
‚	‚	 )
=
‚	‚	* +!
TMP_MaterialManager
‚	‚	, ?
.
‚	‚	? @!
GetFallbackMaterial
‚	‚	@ S
(
‚	‚	S T
m_currentMaterial
‚	‚	T e
,
‚	‚	e f 
m_currentFontAsset
‚	‚	g y
.
‚	‚	y z
material‚	‚	z Ç
)‚	‚	Ç É
;‚	‚	É Ñ
else
„	„	 
m_currentMaterial
‰	‰	 )
=
‰	‰	* + 
m_currentFontAsset
‰	‰	, >
.
‰	‰	> ?
material
‰	‰	? G
;
‰	‰	G H$
m_currentMaterialIndex
Ê	Ê	 *
=
Ê	Ê	+ ,
MaterialReference
Ê	Ê	- >
.
Ê	Ê	> ?"
AddMaterialReference
Ê	Ê	? S
(
Ê	Ê	S T
m_currentMaterial
Ê	Ê	T e
,
Ê	Ê	e f 
m_currentFontAsset
Ê	Ê	g y
,
Ê	Ê	y z
ref
Ê	Ê	{ ~#
m_materialReferencesÊ	Ê	 ì
,Ê	Ê	ì î.
m_materialReferenceIndexLookupÊ	Ê	ï ≥
)Ê	Ê	≥ ¥
;Ê	Ê	¥ µ
}
Á	Á	 
if
Í	Í	 
(
Í	Í	 
	character
Í	Í	 
!=
Í	Í	  
null
Í	Í	! %
&&
Í	Í	& (
	character
Í	Í	) 2
.
Í	Í	2 3
glyph
Í	Í	3 8
.
Í	Í	8 9

atlasIndex
Í	Í	9 C
>
Í	Í	D E
$num
Í	Í	F G
)
Í	Í	G H
{
Î	Î	 
m_currentMaterial
Ï	Ï	 %
=
Ï	Ï	& '!
TMP_MaterialManager
Ï	Ï	( ;
.
Ï	Ï	; <!
GetFallbackMaterial
Ï	Ï	< O
(
Ï	Ï	O P 
m_currentFontAsset
Ï	Ï	P b
,
Ï	Ï	b c
m_currentMaterial
Ï	Ï	d u
,
Ï	Ï	u v
	characterÏ	Ï	w Ä
.Ï	Ï	Ä Å
glyphÏ	Ï	Å Ü
.Ï	Ï	Ü á

atlasIndexÏ	Ï	á ë
)Ï	Ï	ë í
;Ï	Ï	í ì$
m_currentMaterialIndex
Ó	Ó	 *
=
Ó	Ó	+ ,
MaterialReference
Ó	Ó	- >
.
Ó	Ó	> ?"
AddMaterialReference
Ó	Ó	? S
(
Ó	Ó	S T
m_currentMaterial
Ó	Ó	T e
,
Ó	Ó	e f 
m_currentFontAsset
Ó	Ó	g y
,
Ó	Ó	y z
ref
Ó	Ó	{ ~#
m_materialReferencesÓ	Ó	 ì
,Ó	Ó	ì î.
m_materialReferenceIndexLookupÓ	Ó	ï ≥
)Ó	Ó	≥ ¥
;Ó	Ó	¥ µ2
$isUsingFallbackOrAlternativeTypeface
		 8
=
		9 :
true
		; ?
;
		? @
}
Ò	Ò	 
if
Û	Û	 
(
Û	Û	 
!
Û	Û	 
char
Û	Û	 
.
Û	Û	 
IsWhiteSpace
Û	Û	 &
(
Û	Û	& '
(
Û	Û	' (
char
Û	Û	( ,
)
Û	Û	, -
unicode
Û	Û	- 4
)
Û	Û	4 5
&&
Û	Û	6 8
unicode
Û	Û	9 @
!=
Û	Û	A C
$num
Û	Û	D J
)
Û	Û	J K
{
Ù	Ù	 
if
ˆ	ˆ	 
(
ˆ	ˆ	 "
m_materialReferences
ˆ	ˆ	 ,
[
ˆ	ˆ	, -$
m_currentMaterialIndex
ˆ	ˆ	- C
]
ˆ	ˆ	C D
.
ˆ	ˆ	D E
referenceCount
ˆ	ˆ	E S
<
ˆ	ˆ	T U
$num
ˆ	ˆ	V [
)
ˆ	ˆ	[ \"
m_materialReferences
˜	˜	 ,
[
˜	˜	, -$
m_currentMaterialIndex
˜	˜	- C
]
˜	˜	C D
.
˜	˜	D E
referenceCount
˜	˜	E S
+=
˜	˜	T V
$num
˜	˜	W X
;
˜	˜	X Y
else
¯	¯	 
{
˘	˘	 $
m_currentMaterialIndex
˙	˙	 .
=
˙	˙	/ 0
MaterialReference
˙	˙	1 B
.
˙	˙	B C"
AddMaterialReference
˙	˙	C W
(
˙	˙	W X
new
˙	˙	X [
Material
˙	˙	\ d
(
˙	˙	d e
m_currentMaterial
˙	˙	e v
)
˙	˙	v w
,
˙	˙	w x!
m_currentFontAsset˙	˙	y ã
,˙	˙	ã å
ref˙	˙	ç ê$
m_materialReferences˙	˙	ë •
,˙	˙	• ¶.
m_materialReferenceIndexLookup˙	˙	ß ≈
)˙	˙	≈ ∆
;˙	˙	∆ «"
m_materialReferences
˚	˚	 ,
[
˚	˚	, -$
m_currentMaterialIndex
˚	˚	- C
]
˚	˚	C D
.
˚	˚	D E
referenceCount
˚	˚	E S
+=
˚	˚	T V
$num
˚	˚	W X
;
˚	˚	X Y
}
¸	¸	 
}
˝	˝	 

m_textInfo
ˇ	ˇ	 
.
ˇ	ˇ	 
characterInfo
ˇ	ˇ	 (
[
ˇ	ˇ	( )#
m_totalCharacterCount
ˇ	ˇ	) >
]
ˇ	ˇ	> ?
.
ˇ	ˇ	? @
material
ˇ	ˇ	@ H
=
ˇ	ˇ	I J
m_currentMaterial
ˇ	ˇ	K \
;
ˇ	ˇ	\ ]

m_textInfo
Ä
Ä
 
.
Ä
Ä
 
characterInfo
Ä
Ä
 (
[
Ä
Ä
( )#
m_totalCharacterCount
Ä
Ä
) >
]
Ä
Ä
> ?
.
Ä
Ä
? @$
materialReferenceIndex
Ä
Ä
@ V
=
Ä
Ä
W X$
m_currentMaterialIndex
Ä
Ä
Y o
;
Ä
Ä
o p"
m_materialReferences
Å
Å
 $
[
Å
Å
$ %$
m_currentMaterialIndex
Å
Å
% ;
]
Å
Å
; <
.
Å
Å
< = 
isFallbackMaterial
Å
Å
= O
=
Å
Å
P Q2
$isUsingFallbackOrAlternativeTypeface
Å
Å
R v
;
Å
Å
v w
if
Ñ
Ñ
 
(
Ñ
Ñ
 2
$isUsingFallbackOrAlternativeTypeface
Ñ
Ñ
 8
)
Ñ
Ñ
8 9
{
Ö
Ö
 "
m_materialReferences
Ü
Ü
 (
[
Ü
Ü
( )$
m_currentMaterialIndex
Ü
Ü
) ?
]
Ü
Ü
? @
.
Ü
Ü
@ A
fallbackMaterial
Ü
Ü
A Q
=
Ü
Ü
R S
prev_material
Ü
Ü
T a
;
Ü
Ü
a b 
m_currentFontAsset
á
á
 &
=
á
á
' (
prev_fontAsset
á
á
) 7
;
á
á
7 8
m_currentMaterial
à
à
 %
=
à
à
& '
prev_material
à
à
( 5
;
à
à
5 6$
m_currentMaterialIndex
â
â
 *
=
â
â
+ , 
prev_materialIndex
â
â
- ?
;
â
â
? @
}
ä
ä
 #
m_totalCharacterCount
å
å
 %
+=
å
å
& (
$num
å
å
) *
;
å
å
* +
}
ç
ç
 
if
ê
ê
 
(
ê
ê
 ,
m_isCalculatingPreferredValues
ê
ê
 .
)
ê
ê
. /
{
ë
ë
 ,
m_isCalculatingPreferredValues
í
í
 .
=
í
í
/ 0
false
í
í
1 6
;
í
í
6 7#
k_SetArraySizesMarker
î
î
 %
.
î
î
% &
End
î
î
& )
(
î
î
) *
)
î
î
* +
;
î
î
+ ,
return
ï
ï
 #
m_totalCharacterCount
ï
ï
 ,
;
ï
ï
, -
}
ñ
ñ
 

m_textInfo
ô
ô
 
.
ô
ô
 
spriteCount
ô
ô
 "
=
ô
ô
# $
spriteCount
ô
ô
% 0
;
ô
ô
0 1
int
ö
ö
 
materialCount
ö
ö
 
=
ö
ö
 

m_textInfo
ö
ö
  *
.
ö
ö
* +
materialCount
ö
ö
+ 8
=
ö
ö
9 :,
m_materialReferenceIndexLookup
ö
ö
; Y
.
ö
ö
Y Z
Count
ö
ö
Z _
;
ö
ö
_ `
if
ù
ù
 
(
ù
ù
 
materialCount
ù
ù
 
>
ù
ù
 

m_textInfo
ù
ù
  *
.
ù
ù
* +
meshInfo
ù
ù
+ 3
.
ù
ù
3 4
Length
ù
ù
4 :
)
ù
ù
: ;
TMP_TextInfo
û
û
 
.
û
û
 
Resize
û
û
 #
(
û
û
# $
ref
û
û
$ '

m_textInfo
û
û
( 2
.
û
û
2 3
meshInfo
û
û
3 ;
,
û
û
; <
materialCount
û
û
= J
,
û
û
J K
false
û
û
L Q
)
û
û
Q R
;
û
û
R S
if
°
°
 
(
°
°
 
materialCount
°
°
 
>
°
°
 
m_subTextObjects
°
°
  0
.
°
°
0 1
Length
°
°
1 7
)
°
°
7 8
TMP_TextInfo
¢
¢
 
.
¢
¢
 
Resize
¢
¢
 #
(
¢
¢
# $
ref
¢
¢
$ '
m_subTextObjects
¢
¢
( 8
,
¢
¢
8 9
Mathf
¢
¢
: ?
.
¢
¢
? @
NextPowerOfTwo
¢
¢
@ N
(
¢
¢
N O
materialCount
¢
¢
O \
+
¢
¢
] ^
$num
¢
¢
_ `
)
¢
¢
` a
)
¢
¢
a b
;
¢
¢
b c
if
•
•
 
(
•
•
 -
m_VertexBufferAutoSizeReduction
•
•
 /
&&
•
•
0 2

m_textInfo
•
•
3 =
.
•
•
= >
characterInfo
•
•
> K
.
•
•
K L
Length
•
•
L R
-
•
•
S T#
m_totalCharacterCount
•
•
U j
>
•
•
k l
$num
•
•
m p
)
•
•
p q
TMP_TextInfo
¶
¶
 
.
¶
¶
 
Resize
¶
¶
 #
(
¶
¶
# $
ref
¶
¶
$ '

m_textInfo
¶
¶
( 2
.
¶
¶
2 3
characterInfo
¶
¶
3 @
,
¶
¶
@ A
Mathf
¶
¶
B G
.
¶
¶
G H
Max
¶
¶
H K
(
¶
¶
K L#
m_totalCharacterCount
¶
¶
L a
+
¶
¶
b c
$num
¶
¶
d e
,
¶
¶
e f
$num
¶
¶
g j
)
¶
¶
j k
,
¶
¶
k l
true
¶
¶
m q
)
¶
¶
q r
;
¶
¶
r s
for
™
™
 
(
™
™
 
int
™
™
 
i
™
™
 
=
™
™
 
$num
™
™
 
;
™
™
 
i
™
™
 
<
™
™
 
materialCount
™
™
  -
;
™
™
- .
i
™
™
/ 0
++
™
™
0 2
)
™
™
2 3
{
´
´
 
if
≠
≠
 
(
≠
≠
 
i
≠
≠
 
>
≠
≠
 
$num
≠
≠
 
)
≠
≠
 
{
Æ
Æ
 
if
Ø
Ø
 
(
Ø
Ø
 
m_subTextObjects
Ø
Ø
 (
[
Ø
Ø
( )
i
Ø
Ø
) *
]
Ø
Ø
* +
==
Ø
Ø
, .
null
Ø
Ø
/ 3
)
Ø
Ø
3 4
{
∞
∞
 
m_subTextObjects
±
±
 (
[
±
±
( )
i
±
±
) *
]
±
±
* +
=
±
±
, -
TMP_SubMesh
±
±
. 9
.
±
±
9 :
AddSubTextObject
±
±
: J
(
±
±
J K
this
±
±
K O
,
±
±
O P"
m_materialReferences
±
±
Q e
[
±
±
e f
i
±
±
f g
]
±
±
g h
)
±
±
h i
;
±
±
i j

m_textInfo
¥
¥
 "
.
¥
¥
" #
meshInfo
¥
¥
# +
[
¥
¥
+ ,
i
¥
¥
, -
]
¥
¥
- .
.
¥
¥
. /
vertices
¥
¥
/ 7
=
¥
¥
8 9
null
¥
¥
: >
;
¥
¥
> ?
}
µ
µ
 
if
∫
∫
 
(
∫
∫
 
m_subTextObjects
∫
∫
 (
[
∫
∫
( )
i
∫
∫
) *
]
∫
∫
* +
.
∫
∫
+ ,
sharedMaterial
∫
∫
, :
==
∫
∫
; =
null
∫
∫
> B
||
∫
∫
C E
m_subTextObjects
∫
∫
F V
[
∫
∫
V W
i
∫
∫
W X
]
∫
∫
X Y
.
∫
∫
Y Z
sharedMaterial
∫
∫
Z h
.
∫
∫
h i
GetInstanceID
∫
∫
i v
(
∫
∫
v w
)
∫
∫
w x
!=
∫
∫
y {#
m_materialReferences∫
∫
| ê
[∫
∫
ê ë
i∫
∫
ë í
]∫
∫
í ì
.∫
∫
ì î
material∫
∫
î ú
.∫
∫
ú ù
GetInstanceID∫
∫
ù ™
(∫
∫
™ ´
)∫
∫
´ ¨
)∫
∫
¨ ≠
{
ª
ª
 
m_subTextObjects
º
º
 (
[
º
º
( )
i
º
º
) *
]
º
º
* +
.
º
º
+ ,
sharedMaterial
º
º
, :
=
º
º
; <"
m_materialReferences
º
º
= Q
[
º
º
Q R
i
º
º
R S
]
º
º
S T
.
º
º
T U
material
º
º
U ]
;
º
º
] ^
m_subTextObjects
Ω
Ω
 (
[
Ω
Ω
( )
i
Ω
Ω
) *
]
Ω
Ω
* +
.
Ω
Ω
+ ,
	fontAsset
Ω
Ω
, 5
=
Ω
Ω
6 7"
m_materialReferences
Ω
Ω
8 L
[
Ω
Ω
L M
i
Ω
Ω
M N
]
Ω
Ω
N O
.
Ω
Ω
O P
	fontAsset
Ω
Ω
P Y
;
Ω
Ω
Y Z
m_subTextObjects
æ
æ
 (
[
æ
æ
( )
i
æ
æ
) *
]
æ
æ
* +
.
æ
æ
+ ,
spriteAsset
æ
æ
, 7
=
æ
æ
8 9"
m_materialReferences
æ
æ
: N
[
æ
æ
N O
i
æ
æ
O P
]
æ
æ
P Q
.
æ
æ
Q R
spriteAsset
æ
æ
R ]
;
æ
æ
] ^
}
ø
ø
 
if
¬
¬
 
(
¬
¬
 "
m_materialReferences
¬
¬
 ,
[
¬
¬
, -
i
¬
¬
- .
]
¬
¬
. /
.
¬
¬
/ 0 
isFallbackMaterial
¬
¬
0 B
)
¬
¬
B C
{
√
√
 
m_subTextObjects
ƒ
ƒ
 (
[
ƒ
ƒ
( )
i
ƒ
ƒ
) *
]
ƒ
ƒ
* +
.
ƒ
ƒ
+ ,
fallbackMaterial
ƒ
ƒ
, <
=
ƒ
ƒ
= >"
m_materialReferences
ƒ
ƒ
? S
[
ƒ
ƒ
S T
i
ƒ
ƒ
T U
]
ƒ
ƒ
U V
.
ƒ
ƒ
V W
material
ƒ
ƒ
W _
;
ƒ
ƒ
_ `
m_subTextObjects
≈
≈
 (
[
≈
≈
( )
i
≈
≈
) *
]
≈
≈
* +
.
≈
≈
+ ,$
fallbackSourceMaterial
≈
≈
, B
=
≈
≈
C D"
m_materialReferences
≈
≈
E Y
[
≈
≈
Y Z
i
≈
≈
Z [
]
≈
≈
[ \
.
≈
≈
\ ]
fallbackMaterial
≈
≈
] m
;
≈
≈
m n
}
∆
∆
 
}
«
«
 
int
…
…
 
referenceCount
…
…
 "
=
…
…
# $"
m_materialReferences
…
…
% 9
[
…
…
9 :
i
…
…
: ;
]
…
…
; <
.
…
…
< =
referenceCount
…
…
= K
;
…
…
K L
if
Ã
Ã
 
(
Ã
Ã
 

m_textInfo
Ã
Ã
 
.
Ã
Ã
 
meshInfo
Ã
Ã
 '
[
Ã
Ã
' (
i
Ã
Ã
( )
]
Ã
Ã
) *
.
Ã
Ã
* +
vertices
Ã
Ã
+ 3
==
Ã
Ã
4 6
null
Ã
Ã
7 ;
||
Ã
Ã
< >

m_textInfo
Ã
Ã
? I
.
Ã
Ã
I J
meshInfo
Ã
Ã
J R
[
Ã
Ã
R S
i
Ã
Ã
S T
]
Ã
Ã
T U
.
Ã
Ã
U V
vertices
Ã
Ã
V ^
.
Ã
Ã
^ _
Length
Ã
Ã
_ e
<
Ã
Ã
f g
referenceCount
Ã
Ã
h v
*
Ã
Ã
w x
$num
Ã
Ã
y z
)
Ã
Ã
z {
{
Õ
Õ
 
if
Œ
Œ
 
(
Œ
Œ
 

m_textInfo
Œ
Œ
 "
.
Œ
Œ
" #
meshInfo
Œ
Œ
# +
[
Œ
Œ
+ ,
i
Œ
Œ
, -
]
Œ
Œ
- .
.
Œ
Œ
. /
vertices
Œ
Œ
/ 7
==
Œ
Œ
8 :
null
Œ
Œ
; ?
)
Œ
Œ
? @
{
œ
œ
 
if
–
–
 
(
–
–
 
i
–
–
 
==
–
–
  
$num
–
–
! "
)
–
–
" #

m_textInfo
—
—
 &
.
—
—
& '
meshInfo
—
—
' /
[
—
—
/ 0
i
—
—
0 1
]
—
—
1 2
=
—
—
3 4
new
—
—
5 8
TMP_MeshInfo
—
—
9 E
(
—
—
E F
m_mesh
—
—
F L
,
—
—
L M
referenceCount
—
—
N \
+
—
—
] ^
$num
—
—
_ `
)
—
—
` a
;
—
—
a b
else
“
“
 

m_textInfo
”
”
 &
.
”
”
& '
meshInfo
”
”
' /
[
”
”
/ 0
i
”
”
0 1
]
”
”
1 2
=
”
”
3 4
new
”
”
5 8
TMP_MeshInfo
”
”
9 E
(
”
”
E F
m_subTextObjects
”
”
F V
[
”
”
V W
i
”
”
W X
]
”
”
X Y
.
”
”
Y Z
mesh
”
”
Z ^
,
”
”
^ _
referenceCount
”
”
` n
+
”
”
o p
$num
”
”
q r
)
”
”
r s
;
”
”
s t
}
‘
‘
 
else
’
’
 

m_textInfo
÷
÷
 "
.
÷
÷
" #
meshInfo
÷
÷
# +
[
÷
÷
+ ,
i
÷
÷
, -
]
÷
÷
- .
.
÷
÷
. /
ResizeMeshInfo
÷
÷
/ =
(
÷
÷
= >
referenceCount
÷
÷
> L
>
÷
÷
M N
$num
÷
÷
O S
?
÷
÷
T U
referenceCount
÷
÷
V d
+
÷
÷
e f
$num
÷
÷
g j
:
÷
÷
k l
Mathf
÷
÷
m r
.
÷
÷
r s
NextPowerOfTwo÷
÷
s Å
(÷
÷
Å Ç
referenceCount÷
÷
Ç ê
+÷
÷
ë í
$num÷
÷
ì î
)÷
÷
î ï
)÷
÷
ï ñ
;÷
÷
ñ ó
}
◊
◊
 
else
ÿ
ÿ
 
if
ÿ
ÿ
 
(
ÿ
ÿ
 -
m_VertexBufferAutoSizeReduction
ÿ
ÿ
 8
&&
ÿ
ÿ
9 ;
referenceCount
ÿ
ÿ
< J
>
ÿ
ÿ
K L
$num
ÿ
ÿ
M N
&&
ÿ
ÿ
O Q

m_textInfo
ÿ
ÿ
R \
.
ÿ
ÿ
\ ]
meshInfo
ÿ
ÿ
] e
[
ÿ
ÿ
e f
i
ÿ
ÿ
f g
]
ÿ
ÿ
g h
.
ÿ
ÿ
h i
vertices
ÿ
ÿ
i q
.
ÿ
ÿ
q r
Length
ÿ
ÿ
r x
/
ÿ
ÿ
y z
$num
ÿ
ÿ
{ |
-
ÿ
ÿ
} ~
referenceCountÿ
ÿ
 ç
>ÿ
ÿ
é è
$numÿ
ÿ
ê ì
)ÿ
ÿ
ì î
{
Ÿ
Ÿ
 

m_textInfo
‹
‹
 
.
‹
‹
 
meshInfo
‹
‹
 '
[
‹
‹
' (
i
‹
‹
( )
]
‹
‹
) *
.
‹
‹
* +
ResizeMeshInfo
‹
‹
+ 9
(
‹
‹
9 :
referenceCount
‹
‹
: H
>
‹
‹
I J
$num
‹
‹
K O
?
‹
‹
P Q
referenceCount
‹
‹
R `
+
‹
‹
a b
$num
‹
‹
c f
:
‹
‹
g h
Mathf
‹
‹
i n
.
‹
‹
n o
NextPowerOfTwo
‹
‹
o }
(
‹
‹
} ~
referenceCount‹
‹
~ å
+‹
‹
ç é
$num‹
‹
è ê
)‹
‹
ê ë
)‹
‹
ë í
;‹
‹
í ì
}
›
›
 

m_textInfo
‡
‡
 
.
‡
‡
 
meshInfo
‡
‡
 #
[
‡
‡
# $
i
‡
‡
$ %
]
‡
‡
% &
.
‡
‡
& '
material
‡
‡
' /
=
‡
‡
0 1"
m_materialReferences
‡
‡
2 F
[
‡
‡
F G
i
‡
‡
G H
]
‡
‡
H I
.
‡
‡
I J
material
‡
‡
J R
;
‡
‡
R S
}
·
·
 
for
Ê
Ê
 
(
Ê
Ê
 
int
Ê
Ê
 
i
Ê
Ê
 
=
Ê
Ê
 
materialCount
Ê
Ê
 &
;
Ê
Ê
& '
i
Ê
Ê
( )
<
Ê
Ê
* +
m_subTextObjects
Ê
Ê
, <
.
Ê
Ê
< =
Length
Ê
Ê
= C
&&
Ê
Ê
D F
m_subTextObjects
Ê
Ê
G W
[
Ê
Ê
W X
i
Ê
Ê
X Y
]
Ê
Ê
Y Z
!=
Ê
Ê
[ ]
null
Ê
Ê
^ b
;
Ê
Ê
b c
i
Ê
Ê
d e
++
Ê
Ê
e g
)
Ê
Ê
g h
{
Á
Á
 
if
Ë
Ë
 
(
Ë
Ë
 
i
Ë
Ë
 
<
Ë
Ë
 

m_textInfo
Ë
Ë
 "
.
Ë
Ë
" #
meshInfo
Ë
Ë
# +
.
Ë
Ë
+ ,
Length
Ë
Ë
, 2
)
Ë
Ë
2 3

m_textInfo
È
È
 
.
È
È
 
meshInfo
È
È
 '
[
È
È
' (
i
È
È
( )
]
È
È
) *
.
È
È
* +!
ClearUnusedVertices
È
È
+ >
(
È
È
> ?
$num
È
È
? @
,
È
È
@ A
true
È
È
B F
)
È
È
F G
;
È
È
G H
}
Ï
Ï
 #
k_SetArraySizesMarker
Ó
Ó
 !
.
Ó
Ó
! "
End
Ó
Ó
" %
(
Ó
Ó
% &
)
Ó
Ó
& '
;
Ó
Ó
' (
return
Ô
Ô
 #
m_totalCharacterCount
Ô
Ô
 (
;
Ô
Ô
( )
}


 	
public
˛
˛
 
override
˛
˛
 
void
˛
˛
 
ComputeMarginSize
˛
˛
 .
(
˛
˛
. /
)
˛
˛
/ 0
{
ˇ
ˇ
 	
if
ÄÄ 
(
ÄÄ 
this
ÄÄ 
.
ÄÄ 
rectTransform
ÄÄ "
!=
ÄÄ# %
null
ÄÄ& *
)
ÄÄ* +
{
ÅÅ 
Rect
ÉÉ 
rect
ÉÉ 
=
ÉÉ 
m_rectTransform
ÉÉ +
.
ÉÉ+ ,
rect
ÉÉ, 0
;
ÉÉ0 1
m_marginWidth
ÖÖ 
=
ÖÖ 
rect
ÖÖ  $
.
ÖÖ$ %
width
ÖÖ% *
-
ÖÖ+ ,
m_margin
ÖÖ- 5
.
ÖÖ5 6
x
ÖÖ6 7
-
ÖÖ8 9
m_margin
ÖÖ: B
.
ÖÖB C
z
ÖÖC D
;
ÖÖD E
m_marginHeight
ÜÜ 
=
ÜÜ  
rect
ÜÜ! %
.
ÜÜ% &
height
ÜÜ& ,
-
ÜÜ- .
m_margin
ÜÜ/ 7
.
ÜÜ7 8
y
ÜÜ8 9
-
ÜÜ: ;
m_margin
ÜÜ< D
.
ÜÜD E
w
ÜÜE F
;
ÜÜF G)
m_PreviousRectTransformSize
ââ +
=
ââ, -
rect
ââ. 2
.
ââ2 3
size
ââ3 7
;
ââ7 8%
m_PreviousPivotPosition
ää '
=
ää( )
m_rectTransform
ää* 9
.
ää9 :
pivot
ää: ?
;
ää? @$
m_RectTransformCorners
çç &
=
çç' (*
GetTextContainerLocalCorners
çç) E
(
ççE F
)
ççF G
;
ççG H
}
éé 
}
èè 	
	protected
ïï 
override
ïï 
void
ïï +
OnDidApplyAnimationProperties
ïï  =
(
ïï= >
)
ïï> ?
{
ññ 	%
m_havePropertiesChanged
òò #
=
òò$ %
true
òò& *
;
òò* +"
isMaskUpdateRequired
ôô  
=
ôô! "
true
ôô# '
;
ôô' (
SetVerticesDirty
õõ 
(
õõ 
)
õõ 
;
õõ 
}
úú 	
	protected
üü 
override
üü 
void
üü &
OnTransformParentChanged
üü  8
(
üü8 9
)
üü9 :
{
†† 	
SetVerticesDirty
§§ 
(
§§ 
)
§§ 
;
§§ 
SetLayoutDirty
•• 
(
•• 
)
•• 
;
•• 
}
¶¶ 	
	protected
©© 
override
©© 
void
©© -
OnRectTransformDimensionsChange
©©  ?
(
©©? @
)
©©@ A
{
™™ 	
if
ÆÆ 
(
ÆÆ 
rectTransform
ÆÆ 
!=
ÆÆ  
null
ÆÆ! %
&&
ÆÆ& (
Mathf
ØØ 
.
ØØ 
Abs
ØØ 
(
ØØ 
m_rectTransform
ØØ )
.
ØØ) *
rect
ØØ* .
.
ØØ. /
width
ØØ/ 4
-
ØØ5 6)
m_PreviousRectTransformSize
ØØ7 R
.
ØØR S
x
ØØS T
)
ØØT U
<
ØØV W
$num
ØØX _
&&
ØØ` b
Mathf
ØØc h
.
ØØh i
Abs
ØØi l
(
ØØl m
m_rectTransform
ØØm |
.
ØØ| }
rectØØ} Å
.ØØÅ Ç
heightØØÇ à
-ØØâ ä+
m_PreviousRectTransformSizeØØã ¶
.ØØ¶ ß
yØØß ®
)ØØ® ©
<ØØ™ ´
$numØØ¨ ≥
&&ØØ¥ ∂
Mathf
∞∞ 
.
∞∞ 
Abs
∞∞ 
(
∞∞ 
m_rectTransform
∞∞ )
.
∞∞) *
pivot
∞∞* /
.
∞∞/ 0
x
∞∞0 1
-
∞∞2 3%
m_PreviousPivotPosition
∞∞4 K
.
∞∞K L
x
∞∞L M
)
∞∞M N
<
∞∞O P
$num
∞∞Q X
&&
∞∞Y [
Mathf
∞∞\ a
.
∞∞a b
Abs
∞∞b e
(
∞∞e f
m_rectTransform
∞∞f u
.
∞∞u v
pivot
∞∞v {
.
∞∞{ |
y
∞∞| }
-
∞∞~ '
m_PreviousPivotPosition∞∞Ä ó
.∞∞ó ò
y∞∞ò ô
)∞∞ô ö
<∞∞õ ú
$num∞∞ù §
)∞∞§ •
{
±± 
return
≤≤ 
;
≤≤ 
}
≥≥ 
ComputeMarginSize
µµ 
(
µµ 
)
µµ 
;
µµ  
SetVerticesDirty
∑∑ 
(
∑∑ 
)
∑∑ 
;
∑∑ 
SetLayoutDirty
∏∏ 
(
∏∏ 
)
∏∏ 
;
∏∏ 
}
ππ 	
internal
øø 
override
øø 
void
øø 
InternalUpdate
øø -
(
øø- .
)
øø. /
{
¿¿ 	
if
¬¬ 
(
¬¬ %
m_havePropertiesChanged
¬¬ '
==
¬¬( *
false
¬¬+ 0
)
¬¬0 1
{
√√ 
float
ƒƒ 
lossyScaleY
ƒƒ !
=
ƒƒ" #
m_rectTransform
ƒƒ$ 3
.
ƒƒ3 4

lossyScale
ƒƒ4 >
.
ƒƒ> ?
y
ƒƒ? @
;
ƒƒ@ A
if
»» 
(
»» 
Mathf
»» 
.
»» 
Abs
»» 
(
»» 
lossyScaleY
»» )
-
»»* +#
m_previousLossyScaleY
»», A
)
»»A B
>
»»C D
$num
»»E L
&&
»»M O#
m_TextProcessingArray
»»P e
[
»»e f
$num
»»f g
]
»»g h
.
»»h i
unicode
»»i p
!=
»»q s
$num
»»t u
)
»»u v
{
…… 
float
   

scaleDelta
   $
=
  % &
lossyScaleY
  ' 2
/
  3 4#
m_previousLossyScaleY
  5 J
;
  J K
UpdateSDFScale
ÃÃ "
(
ÃÃ" #

scaleDelta
ÃÃ# -
)
ÃÃ- .
;
ÃÃ. /#
m_previousLossyScaleY
ŒŒ )
=
ŒŒ* +
lossyScaleY
ŒŒ, 7
;
ŒŒ7 8
}
œœ 
}
–– 
if
”” 
(
”” /
!m_isUsingLegacyAnimationComponent
”” 1
)
””1 2
{
‘‘ %
m_havePropertiesChanged
÷÷ '
=
÷÷( )
true
÷÷* .
;
÷÷. /
OnPreRenderObject
◊◊ !
(
◊◊! "
)
◊◊" #
;
◊◊# $
}
ÿÿ 
}
ŸŸ 	
void
ﬂﬂ 
OnPreRenderObject
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ  
{
‡‡ 	
if
‰‰ 
(
‰‰ 
!
‰‰ 
	m_isAwake
‰‰ 
||
‰‰ 
(
‰‰ 
this
‰‰ #
.
‰‰# $
IsActive
‰‰$ ,
(
‰‰, -
)
‰‰- .
==
‰‰/ 1
false
‰‰2 7
&&
‰‰8 :!
m_ignoreActiveState
‰‰; N
==
‰‰O Q
false
‰‰R W
)
‰‰W X
)
‰‰X Y
return
ÂÂ 
;
ÂÂ 
if
ËË 
(
ËË 
m_fontAsset
ËË 
==
ËË 
null
ËË #
)
ËË# $
{
ÈÈ 
Debug
ÍÍ 
.
ÍÍ 

LogWarning
ÍÍ  
(
ÍÍ  !
$str
ÍÍ! F
+
ÍÍG H
	transform
ÍÍI R
.
ÍÍR S
name
ÍÍS W
+
ÍÍX Y
$str
ÍÍZ h
,
ÍÍh i
this
ÍÍj n
)
ÍÍn o
;
ÍÍo p
return
ÎÎ 
;
ÎÎ 
}
ÏÏ 
if
ÓÓ 
(
ÓÓ %
m_havePropertiesChanged
ÓÓ '
||
ÓÓ( *
m_isLayoutDirty
ÓÓ+ :
)
ÓÓ: ;
{
ÔÔ 
if
ÚÚ 
(
ÚÚ "
isMaskUpdateRequired
ÚÚ (
)
ÚÚ( )
{
ÛÛ 

UpdateMask
ÙÙ 
(
ÙÙ 
)
ÙÙ  
;
ÙÙ  !"
isMaskUpdateRequired
ıı (
=
ıı) *
false
ıı+ 0
;
ıı0 1
}
ˆˆ 
if
˘˘ 
(
˘˘ "
checkPaddingRequired
˘˘ (
)
˘˘( )
UpdateMeshPadding
˙˙ %
(
˙˙% &
)
˙˙& '
;
˙˙' (
ParseInputText
˝˝ 
(
˝˝ 
)
˝˝  
;
˝˝  !
TMP_FontAsset
˛˛ 
.
˛˛ 4
&UpdateFontFeaturesForFontAssetsInQueue
˛˛ D
(
˛˛D E
)
˛˛E F
;
˛˛F G
if
ÅÅ 
(
ÅÅ  
m_enableAutoSizing
ÅÅ &
)
ÅÅ& '

m_fontSize
ÇÇ 
=
ÇÇ  
Mathf
ÇÇ! &
.
ÇÇ& '
Clamp
ÇÇ' ,
(
ÇÇ, -
m_fontSizeBase
ÇÇ- ;
,
ÇÇ; <
m_fontSizeMin
ÇÇ= J
,
ÇÇJ K
m_fontSizeMax
ÇÇL Y
)
ÇÇY Z
;
ÇÇZ [
m_maxFontSize
ÑÑ 
=
ÑÑ 
m_fontSizeMax
ÑÑ  -
;
ÑÑ- .
m_minFontSize
ÖÖ 
=
ÖÖ 
m_fontSizeMin
ÖÖ  -
;
ÖÖ- . 
m_lineSpacingDelta
ÜÜ "
=
ÜÜ# $
$num
ÜÜ% &
;
ÜÜ& '!
m_charWidthAdjDelta
áá #
=
áá$ %
$num
áá& '
;
áá' (
m_isTextTruncated
ââ !
=
ââ" #
false
ââ$ )
;
ââ) *%
m_havePropertiesChanged
ãã '
=
ãã( )
false
ãã* /
;
ãã/ 0
m_isLayoutDirty
åå 
=
åå  !
false
åå" '
;
åå' (!
m_ignoreActiveState
çç #
=
çç$ %
false
çç& +
;
çç+ ,&
m_IsAutoSizePointSizeSet
êê (
=
êê) *
false
êê+ 0
;
êê0 1&
m_AutoSizeIterationCount
ëë (
=
ëë) *
$num
ëë+ ,
;
ëë, --
SetActiveSubTextObjectRenderers
îî /
(
îî/ 0

m_renderer
îî0 :
.
îî: ;
enabled
îî; B
)
îîB C
;
îîC D
while
òò 
(
òò &
m_IsAutoSizePointSizeSet
òò /
==
òò0 2
false
òò3 8
)
òò8 9
{
ôô 
GenerateTextMesh
öö $
(
öö$ %
)
öö% &
;
öö& '&
m_AutoSizeIterationCount
õõ ,
+=
õõ- /
$num
õõ0 1
;
õõ1 2
}
úú 
}
ùù 
}
ûû 	
	protected
§§ 
virtual
§§ 
void
§§ 
GenerateTextMesh
§§ /
(
§§/ 0
)
§§0 1
{
•• 	"
k_GenerateTextMarker
¶¶  
.
¶¶  !
Begin
¶¶! &
(
¶¶& '
)
¶¶' (
;
¶¶( )
if
©© 
(
©© 
m_fontAsset
©© 
==
©© 
null
©© #
||
©©$ &
m_fontAsset
©©' 2
.
©©2 3"
characterLookupTable
©©3 G
==
©©H J
null
©©K O
)
©©O P
{
™™ 
Debug
´´ 
.
´´ 

LogWarning
´´  
(
´´  !
$str
´´! f
+
´´g h
this
´´i m
.
´´m n
GetInstanceID
´´n {
(
´´{ |
)
´´| }
)
´´} ~
;
´´~ &
m_IsAutoSizePointSizeSet
¨¨ (
=
¨¨) *
true
¨¨+ /
;
¨¨/ 0"
k_GenerateTextMarker
≠≠ $
.
≠≠$ %
End
≠≠% (
(
≠≠( )
)
≠≠) *
;
≠≠* +
return
ÆÆ 
;
ÆÆ 
}
ØØ 
if
≤≤ 
(
≤≤ 

m_textInfo
≤≤ 
!=
≤≤ 
null
≤≤ "
)
≤≤" #

m_textInfo
≥≥ 
.
≥≥ 
Clear
≥≥  
(
≥≥  !
)
≥≥! "
;
≥≥" #
if
∂∂ 
(
∂∂ #
m_TextProcessingArray
∂∂ %
==
∂∂& (
null
∂∂) -
||
∂∂. 0#
m_TextProcessingArray
∂∂1 F
.
∂∂F G
Length
∂∂G M
==
∂∂N P
$num
∂∂Q R
||
∂∂S U#
m_TextProcessingArray
∂∂V k
[
∂∂k l
$num
∂∂l m
]
∂∂m n
.
∂∂n o
unicode
∂∂o v
==
∂∂w y
$num
∂∂z {
)
∂∂{ |
{
∑∑ 
	ClearMesh
ππ 
(
ππ 
true
ππ 
)
ππ 
;
ππ  
m_preferredWidth
ªª  
=
ªª! "
$num
ªª# $
;
ªª$ %
m_preferredHeight
ºº !
=
ºº" #
$num
ºº$ %
;
ºº% & 
TMPro_EventManager
øø "
.
øø" #
ON_TEXT_CHANGED
øø# 2
(
øø2 3
this
øø3 7
)
øø7 8
;
øø8 9&
m_IsAutoSizePointSizeSet
¿¿ (
=
¿¿) *
true
¿¿+ /
;
¿¿/ 0"
k_GenerateTextMarker
¡¡ $
.
¡¡$ %
End
¡¡% (
(
¡¡( )
)
¡¡) *
;
¡¡* +
return
¬¬ 
;
¬¬ 
}
√√  
m_currentFontAsset
≈≈ 
=
≈≈  
m_fontAsset
≈≈! ,
;
≈≈, -
m_currentMaterial
∆∆ 
=
∆∆ 
m_sharedMaterial
∆∆  0
;
∆∆0 1$
m_currentMaterialIndex
«« "
=
««# $
$num
««% &
;
««& '&
m_materialReferenceStack
»» $
.
»»$ %

SetDefault
»»% /
(
»»/ 0
new
»»0 3
MaterialReference
»»4 E
(
»»E F$
m_currentMaterialIndex
»»F \
,
»»\ ] 
m_currentFontAsset
»»^ p
,
»»p q
null
»»r v
,
»»v w 
m_currentMaterial»»x â
,»»â ä
	m_padding»»ã î
)»»î ï
)»»ï ñ
;»»ñ ó"
m_currentSpriteAsset
    
=
  ! "
m_spriteAsset
  # 0
;
  0 1
if
ÕÕ 
(
ÕÕ 
m_spriteAnimator
ÕÕ  
!=
ÕÕ! #
null
ÕÕ$ (
)
ÕÕ( )
m_spriteAnimator
ŒŒ  
.
ŒŒ  !
StopAllAnimations
ŒŒ! 2
(
ŒŒ2 3
)
ŒŒ3 4
;
ŒŒ4 5
int
—— !
totalCharacterCount
—— #
=
——$ %#
m_totalCharacterCount
——& ;
;
——; <
float
’’ 
	baseScale
’’ 
=
’’ 
(
’’ 

m_fontSize
’’ )
/
’’* +
m_fontAsset
’’, 7
.
’’7 8

m_FaceInfo
’’8 B
.
’’B C
	pointSize
’’C L
*
’’M N
m_fontAsset
’’O Z
.
’’Z [

m_FaceInfo
’’[ e
.
’’e f
scale
’’f k
*
’’l m
(
’’n o
m_isOrthographic
’’o 
?’’Ä Å
$num’’Ç É
:’’Ñ Ö
$num’’Ü ä
)’’ä ã
)’’ã å
;’’å ç
float
÷÷ !
currentElementScale
÷÷ %
=
÷÷& '
	baseScale
÷÷( 1
;
÷÷1 2
float
◊◊ 
currentEmScale
◊◊  
=
◊◊! "

m_fontSize
◊◊# -
*
◊◊. /
$num
◊◊0 5
*
◊◊6 7
(
◊◊8 9
m_isOrthographic
◊◊9 I
?
◊◊J K
$num
◊◊L M
:
◊◊N O
$num
◊◊P T
)
◊◊T U
;
◊◊U V#
m_fontScaleMultiplier
ÿÿ !
=
ÿÿ" #
$num
ÿÿ$ %
;
ÿÿ% &
m_currentFontSize
⁄⁄ 
=
⁄⁄ 

m_fontSize
⁄⁄  *
;
⁄⁄* +
m_sizeStack
€€ 
.
€€ 

SetDefault
€€ "
(
€€" #
m_currentFontSize
€€# 4
)
€€4 5
;
€€5 6
float
‹‹ 
fontSizeDelta
‹‹ 
=
‹‹  !
$num
‹‹" #
;
‹‹# $
int
ﬁﬁ 
charCode
ﬁﬁ 
=
ﬁﬁ 
$num
ﬁﬁ 
;
ﬁﬁ !
m_FontStyleInternal
‡‡ 
=
‡‡  !
m_fontStyle
‡‡" -
;
‡‡- ."
m_FontWeightInternal
··  
=
··! "
(
··# $!
m_FontStyleInternal
··$ 7
&
··8 9

FontStyles
··: D
.
··D E
Bold
··E I
)
··I J
==
··K M

FontStyles
··N X
.
··X Y
Bold
··Y ]
?
··^ _

FontWeight
··` j
.
··j k
Bold
··k o
:
··p q
m_fontWeight
··r ~
;
··~ 
m_FontWeightStack
‚‚ 
.
‚‚ 

SetDefault
‚‚ (
(
‚‚( )"
m_FontWeightInternal
‚‚) =
)
‚‚= >
;
‚‚> ?
m_fontStyleStack
„„ 
.
„„ 
Clear
„„ "
(
„„" #
)
„„# $
;
„„$ %!
m_lineJustification
ÂÂ 
=
ÂÂ  !#
m_HorizontalAlignment
ÂÂ" 7
;
ÂÂ7 8&
m_lineJustificationStack
ÊÊ $
.
ÊÊ$ %

SetDefault
ÊÊ% /
(
ÊÊ/ 0!
m_lineJustification
ÊÊ0 C
)
ÊÊC D
;
ÊÊD E
float
ËË 
padding
ËË 
=
ËË 
$num
ËË 
;
ËË 
float
ÈÈ 
style_padding
ÈÈ 
=
ÈÈ  !
$num
ÈÈ" #
;
ÈÈ# $
float
ÍÍ #
boldSpacingAdjustment
ÍÍ '
=
ÍÍ( )
$num
ÍÍ* +
;
ÍÍ+ ,
m_baselineOffset
ÌÌ 
=
ÌÌ 
$num
ÌÌ  
;
ÌÌ  !#
m_baselineOffsetStack
ÓÓ !
.
ÓÓ! "
Clear
ÓÓ" '
(
ÓÓ' (
)
ÓÓ( )
;
ÓÓ) *
bool
ÒÒ 
beginUnderline
ÒÒ 
=
ÒÒ  !
false
ÒÒ" '
;
ÒÒ' (
Vector3
ÚÚ 
underline_start
ÚÚ #
=
ÚÚ$ %
Vector3
ÚÚ& -
.
ÚÚ- .
zero
ÚÚ. 2
;
ÚÚ2 3
Vector3
ÛÛ 
underline_end
ÛÛ !
=
ÛÛ" #
Vector3
ÛÛ$ +
.
ÛÛ+ ,
zero
ÛÛ, 0
;
ÛÛ0 1
bool
ˆˆ  
beginStrikethrough
ˆˆ #
=
ˆˆ$ %
false
ˆˆ& +
;
ˆˆ+ ,
Vector3
˜˜ !
strikethrough_start
˜˜ '
=
˜˜( )
Vector3
˜˜* 1
.
˜˜1 2
zero
˜˜2 6
;
˜˜6 7
Vector3
¯¯ 
strikethrough_end
¯¯ %
=
¯¯& '
Vector3
¯¯( /
.
¯¯/ 0
zero
¯¯0 4
;
¯¯4 5
bool
˚˚ 
beginHighlight
˚˚ 
=
˚˚  !
false
˚˚" '
;
˚˚' (
Vector3
¸¸ 
highlight_start
¸¸ #
=
¸¸$ %
Vector3
¸¸& -
.
¸¸- .
zero
¸¸. 2
;
¸¸2 3
Vector3
˝˝ 
highlight_end
˝˝ !
=
˝˝" #
Vector3
˝˝$ +
.
˝˝+ ,
zero
˝˝, 0
;
˝˝0 1
m_fontColor32
ˇˇ 
=
ˇˇ 
m_fontColor
ˇˇ '
;
ˇˇ' (
Color32
ÄÄ 
vertexColor
ÄÄ 
;
ÄÄ  
m_htmlColor
ÅÅ 
=
ÅÅ 
m_fontColor32
ÅÅ '
;
ÅÅ' (
m_underlineColor
ÇÇ 
=
ÇÇ 
m_htmlColor
ÇÇ *
;
ÇÇ* +"
m_strikethroughColor
ÉÉ  
=
ÉÉ! "
m_htmlColor
ÉÉ# .
;
ÉÉ. /
m_colorStack
ÖÖ 
.
ÖÖ 

SetDefault
ÖÖ #
(
ÖÖ# $
m_htmlColor
ÖÖ$ /
)
ÖÖ/ 0
;
ÖÖ0 1#
m_underlineColorStack
ÜÜ !
.
ÜÜ! "

SetDefault
ÜÜ" ,
(
ÜÜ, -
m_htmlColor
ÜÜ- 8
)
ÜÜ8 9
;
ÜÜ9 :'
m_strikethroughColorStack
áá %
.
áá% &

SetDefault
áá& 0
(
áá0 1
m_htmlColor
áá1 <
)
áá< =
;
áá= >#
m_HighlightStateStack
àà !
.
àà! "

SetDefault
àà" ,
(
àà, -
new
àà- 0
HighlightState
àà1 ?
(
àà? @
m_htmlColor
àà@ K
,
ààK L

TMP_Offset
ààM W
.
ààW X
zero
ààX \
)
àà\ ]
)
àà] ^
;
àà^ _#
m_colorGradientPreset
ää !
=
ää" #
null
ää$ (
;
ää( )"
m_colorGradientStack
ãã  
.
ãã  !

SetDefault
ãã! +
(
ãã+ ,
null
ãã, 0
)
ãã0 1
;
ãã1 2
m_ItalicAngle
çç 
=
çç  
m_currentFontAsset
çç .
.
çç. /
italicStyle
çç/ :
;
çç: ; 
m_ItalicAngleStack
éé 
.
éé 

SetDefault
éé )
(
éé) *
m_ItalicAngle
éé* 7
)
éé7 8
;
éé8 9
m_actionStack
îî 
.
îî 
Clear
îî 
(
îî  
)
îî  !
;
îî! "
m_isFXMatrixSet
ññ 
=
ññ 
false
ññ #
;
ññ# $
m_lineOffset
òò 
=
òò 
$num
òò 
;
òò 
m_lineHeight
ôô 
=
ôô 
TMP_Math
ôô #
.
ôô# $
FLOAT_UNSET
ôô$ /
;
ôô/ 0
float
öö 
lineGap
öö 
=
öö  
m_currentFontAsset
öö .
.
öö. /

m_FaceInfo
öö/ 9
.
öö9 :

lineHeight
öö: D
-
ööE F
(
ööG H 
m_currentFontAsset
ööH Z
.
ööZ [

m_FaceInfo
öö[ e
.
ööe f

ascentLine
ööf p
-
ööq r!
m_currentFontAssetöös Ö
.ööÖ Ü

m_FaceInfoööÜ ê
.ööê ë
descentLineööë ú
)ööú ù
;ööù û

m_cSpacing
úú 
=
úú 
$num
úú 
;
úú 
m_monoSpacing
ùù 
=
ùù 
$num
ùù 
;
ùù 

m_xAdvance
ûû 
=
ûû 
$num
ûû 
;
ûû 
tag_LineIndent
†† 
=
†† 
$num
†† 
;
†† 

tag_Indent
°° 
=
°° 
$num
°° 
;
°° 
m_indentStack
¢¢ 
.
¢¢ 

SetDefault
¢¢ $
(
¢¢$ %
$num
¢¢% &
)
¢¢& '
;
¢¢' (
tag_NoParsing
££ 
=
££ 
false
££ !
;
££! "
m_characterCount
¶¶ 
=
¶¶ 
$num
¶¶  
;
¶¶  !$
m_firstCharacterOfLine
©© "
=
©©# $%
m_firstVisibleCharacter
©©% <
;
©©< =#
m_lastCharacterOfLine
™™ !
=
™™" #
$num
™™$ %
;
™™% &+
m_firstVisibleCharacterOfLine
´´ )
=
´´* +
$num
´´, -
;
´´- .*
m_lastVisibleCharacterOfLine
¨¨ (
=
¨¨) *
$num
¨¨+ ,
;
¨¨, -
m_maxLineAscender
≠≠ 
=
≠≠ "
k_LargeNegativeFloat
≠≠  4
;
≠≠4 5 
m_maxLineDescender
ÆÆ 
=
ÆÆ  "
k_LargePositiveFloat
ÆÆ! 5
;
ÆÆ5 6
m_lineNumber
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ #
m_startOfLineAscender
∞∞ !
=
∞∞" #
$num
∞∞$ %
;
∞∞% &$
m_startOfLineDescender
±± "
=
±±# $
$num
±±% &
;
±±& ')
m_lineVisibleCharacterCount
≤≤ '
=
≤≤( )
$num
≤≤* +
;
≤≤+ ,
bool
≥≥ 
isStartOfNewLine
≥≥ !
=
≥≥" #
true
≥≥$ (
;
≥≥( )#
m_IsDrivenLineSpacing
¥¥ !
=
¥¥" #
false
¥¥$ )
;
¥¥) *+
m_firstOverflowCharacterIndex
µµ )
=
µµ* +
-
µµ, -
$num
µµ- .
;
µµ. /
m_pageNumber
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
int
∏∏ 
pageToDisplay
∏∏ 
=
∏∏ 
Mathf
∏∏  %
.
∏∏% &
Clamp
∏∏& +
(
∏∏+ ,
m_pageToDisplay
∏∏, ;
-
∏∏< =
$num
∏∏> ?
,
∏∏? @
$num
∏∏A B
,
∏∏B C

m_textInfo
∏∏D N
.
∏∏N O
pageInfo
∏∏O W
.
∏∏W X
Length
∏∏X ^
-
∏∏_ `
$num
∏∏a b
)
∏∏b c
;
∏∏c d

m_textInfo
ππ 
.
ππ 
ClearPageInfo
ππ $
(
ππ$ %
)
ππ% &
;
ππ& '
Vector4
ªª 
margins
ªª 
=
ªª 
m_margin
ªª &
;
ªª& '
float
ºº 
marginWidth
ºº 
=
ºº 
m_marginWidth
ºº  -
>
ºº. /
$num
ºº0 1
?
ºº2 3
m_marginWidth
ºº4 A
:
ººB C
$num
ººD E
;
ººE F
float
ΩΩ 
marginHeight
ΩΩ 
=
ΩΩ  
m_marginHeight
ΩΩ! /
>
ΩΩ0 1
$num
ΩΩ2 3
?
ΩΩ4 5
m_marginHeight
ΩΩ6 D
:
ΩΩE F
$num
ΩΩG H
;
ΩΩH I
m_marginLeft
ææ 
=
ææ 
$num
ææ 
;
ææ 
m_marginRight
øø 
=
øø 
$num
øø 
;
øø 
m_width
¿¿ 
=
¿¿ 
-
¿¿ 
$num
¿¿ 
;
¿¿ 
float
¡¡ 
widthOfTextArea
¡¡ !
=
¡¡" #
marginWidth
¡¡$ /
+
¡¡0 1
$num
¡¡2 9
-
¡¡: ;
m_marginLeft
¡¡< H
-
¡¡I J
m_marginRight
¡¡K X
;
¡¡X Y
m_meshExtents
ƒƒ 
.
ƒƒ 
min
ƒƒ 
=
ƒƒ $
k_LargePositiveVector2
ƒƒ  6
;
ƒƒ6 7
m_meshExtents
≈≈ 
.
≈≈ 
max
≈≈ 
=
≈≈ $
k_LargeNegativeVector2
≈≈  6
;
≈≈6 7

m_textInfo
»» 
.
»» 
ClearLineInfo
»» $
(
»»$ %
)
»»% &
;
»»& '
m_maxCapHeight
ÀÀ 
=
ÀÀ 
$num
ÀÀ 
;
ÀÀ 
m_maxTextAscender
ÃÃ 
=
ÃÃ 
$num
ÃÃ  !
;
ÃÃ! " 
m_ElementDescender
ÕÕ 
=
ÕÕ  
$num
ÕÕ! "
;
ÕÕ" #
m_PageAscender
ŒŒ 
=
ŒŒ 
$num
ŒŒ 
;
ŒŒ 
float
œœ !
maxVisibleDescender
œœ %
=
œœ& '
$num
œœ( )
;
œœ) *
bool
–– &
isMaxVisibleDescenderSet
–– )
=
––* +
false
––, 1
;
––1 2
m_isNewPage
—— 
=
—— 
false
—— 
;
——  
bool
‘‘ 
isFirstWordOfLine
‘‘ "
=
‘‘# $
true
‘‘% )
;
‘‘) *"
m_isNonBreakingSpace
’’  
=
’’! "
false
’’# (
;
’’( )
bool
÷÷ $
ignoreNonBreakingSpace
÷÷ '
=
÷÷( )
false
÷÷* /
;
÷÷/ 0
int
ÿÿ 
lastSoftLineBreak
ÿÿ !
=
ÿÿ" #
$num
ÿÿ$ %
;
ÿÿ% &#
CharacterSubstitution
⁄⁄ !#
characterToSubstitute
⁄⁄" 7
=
⁄⁄8 9
new
⁄⁄: =#
CharacterSubstitution
⁄⁄> S
(
⁄⁄S T
-
⁄⁄T U
$num
⁄⁄U V
,
⁄⁄V W
$num
⁄⁄X Y
)
⁄⁄Y Z
;
⁄⁄Z [
bool
€€ !
isSoftHyphenIgnored
€€ $
=
€€% &
false
€€' ,
;
€€, -#
SaveWordWrappingState
ﬁﬁ !
(
ﬁﬁ! "
ref
ﬁﬁ" %"
m_SavedWordWrapState
ﬁﬁ& :
,
ﬁﬁ: ;
-
ﬁﬁ< =
$num
ﬁﬁ= >
,
ﬁﬁ> ?
-
ﬁﬁ@ A
$num
ﬁﬁA B
)
ﬁﬁB C
;
ﬁﬁC D#
SaveWordWrappingState
ﬂﬂ !
(
ﬂﬂ! "
ref
ﬂﬂ" %
m_SavedLineState
ﬂﬂ& 6
,
ﬂﬂ6 7
-
ﬂﬂ8 9
$num
ﬂﬂ9 :
,
ﬂﬂ: ;
-
ﬂﬂ< =
$num
ﬂﬂ= >
)
ﬂﬂ> ?
;
ﬂﬂ? @#
SaveWordWrappingState
‡‡ !
(
‡‡! "
ref
‡‡" %"
m_SavedEllipsisState
‡‡& :
,
‡‡: ;
-
‡‡< =
$num
‡‡= >
,
‡‡> ?
-
‡‡@ A
$num
‡‡A B
)
‡‡B C
;
‡‡C D#
SaveWordWrappingState
·· !
(
··! "
ref
··" %#
m_SavedLastValidState
··& ;
,
··; <
-
··= >
$num
··> ?
,
··? @
-
··A B
$num
··B C
)
··C D
;
··D E#
SaveWordWrappingState
‚‚ !
(
‚‚! "
ref
‚‚" %'
m_SavedSoftLineBreakState
‚‚& ?
,
‚‚? @
-
‚‚A B
$num
‚‚B C
,
‚‚C D
-
‚‚E F
$num
‚‚F G
)
‚‚G H
;
‚‚H I/
!m_EllipsisInsertionCandidateStack
‰‰ -
.
‰‰- .
Clear
‰‰. 3
(
‰‰3 4
)
‰‰4 5
;
‰‰5 6
int
ÁÁ 
restoreCount
ÁÁ 
=
ÁÁ 
$num
ÁÁ  
;
ÁÁ  !(
k_GenerateTextPhaseIMarker
ÈÈ &
.
ÈÈ& '
Begin
ÈÈ' ,
(
ÈÈ, -
)
ÈÈ- .
;
ÈÈ. /
for
ÏÏ 
(
ÏÏ 
int
ÏÏ 
i
ÏÏ 
=
ÏÏ 
$num
ÏÏ 
;
ÏÏ 
i
ÏÏ 
<
ÏÏ #
m_TextProcessingArray
ÏÏ  5
.
ÏÏ5 6
Length
ÏÏ6 <
&&
ÏÏ= ?#
m_TextProcessingArray
ÏÏ@ U
[
ÏÏU V
i
ÏÏV W
]
ÏÏW X
.
ÏÏX Y
unicode
ÏÏY `
!=
ÏÏa c
$num
ÏÏd e
;
ÏÏe f
i
ÏÏg h
++
ÏÏh j
)
ÏÏj k
{
ÌÌ 
charCode
ÓÓ 
=
ÓÓ #
m_TextProcessingArray
ÓÓ 0
[
ÓÓ0 1
i
ÓÓ1 2
]
ÓÓ2 3
.
ÓÓ3 4
unicode
ÓÓ4 ;
;
ÓÓ; <
if
 
(
 
restoreCount
  
>
! "
$num
# $
)
$ %
{
ÒÒ 
Debug
ÚÚ 
.
ÚÚ 
LogError
ÚÚ "
(
ÚÚ" #
$str
ÚÚ# ]
+
ÚÚ^ _
charCode
ÚÚ` h
+
ÚÚi j
$str
ÚÚk v
+
ÚÚw x
i
ÚÚy z
)
ÚÚz {
;
ÚÚ{ |#
characterToSubstitute
ÛÛ )
.
ÛÛ) *
index
ÛÛ* /
=
ÛÛ0 1
m_characterCount
ÛÛ2 B
;
ÛÛB C#
characterToSubstitute
ÙÙ )
.
ÙÙ) *
unicode
ÙÙ* 1
=
ÙÙ2 3
$num
ÙÙ4 8
;
ÙÙ8 9
}
ıı 
if
˘˘ 
(
˘˘ 
m_isRichText
˘˘  
&&
˘˘! #
charCode
˘˘$ ,
==
˘˘- /
$num
˘˘0 2
)
˘˘2 3
{
˙˙ %
k_ParseMarkupTextMarker
˚˚ +
.
˚˚+ ,
Begin
˚˚, 1
(
˚˚1 2
)
˚˚2 3
;
˚˚3 4
m_isParsingText
˝˝ #
=
˝˝$ %
true
˝˝& *
;
˝˝* +
m_textElementType
˛˛ %
=
˛˛& '!
TMP_TextElementType
˛˛( ;
.
˛˛; <
	Character
˛˛< E
;
˛˛E F
int
ˇˇ 
endTagIndex
ˇˇ #
;
ˇˇ# $
if
ÇÇ 
(
ÇÇ 
ValidateHtmlTag
ÇÇ '
(
ÇÇ' (#
m_TextProcessingArray
ÇÇ( =
,
ÇÇ= >
i
ÇÇ? @
+
ÇÇA B
$num
ÇÇC D
,
ÇÇD E
out
ÇÇF I
endTagIndex
ÇÇJ U
)
ÇÇU V
)
ÇÇV W
{
ÉÉ 
i
ÑÑ 
=
ÑÑ 
endTagIndex
ÑÑ '
;
ÑÑ' (
if
áá 
(
áá 
m_textElementType
áá -
==
áá. 0!
TMP_TextElementType
áá1 D
.
ááD E
	Character
ááE N
)
ááN O
{
àà %
k_ParseMarkupTextMarker
ââ 3
.
ââ3 4
End
ââ4 7
(
ââ7 8
)
ââ8 9
;
ââ9 :
continue
ää $
;
ää$ %
}
ãã 
}
åå %
k_ParseMarkupTextMarker
çç +
.
çç+ ,
End
çç, /
(
çç/ 0
)
çç0 1
;
çç1 2
}
éé 
else
èè 
{
êê 
m_textElementType
ëë %
=
ëë& '

m_textInfo
ëë( 2
.
ëë2 3
characterInfo
ëë3 @
[
ëë@ A
m_characterCount
ëëA Q
]
ëëQ R
.
ëëR S
elementType
ëëS ^
;
ëë^ _$
m_currentMaterialIndex
íí *
=
íí+ ,

m_textInfo
íí- 7
.
íí7 8
characterInfo
íí8 E
[
ííE F
m_characterCount
ííF V
]
ííV W
.
ííW X$
materialReferenceIndex
ííX n
;
íín o 
m_currentFontAsset
ìì &
=
ìì' (

m_textInfo
ìì) 3
.
ìì3 4
characterInfo
ìì4 A
[
ììA B
m_characterCount
ììB R
]
ììR S
.
ììS T
	fontAsset
ììT ]
;
ìì] ^
}
îî 
int
óó #
previousMaterialIndex
óó )
=
óó* +$
m_currentMaterialIndex
óó, B
;
óóB C
bool
òò  
isUsingAltTypeface
òò '
=
òò( )

m_textInfo
òò* 4
.
òò4 5
characterInfo
òò5 B
[
òòB C
m_characterCount
òòC S
]
òòS T
.
òòT U&
isUsingAlternateTypeface
òòU m
;
òòm n
m_isParsingText
öö 
=
öö  !
false
öö" '
;
öö' (
bool
ûû "
isInjectingCharacter
ûû )
=
ûû* +
false
ûû, 1
;
ûû1 2
if
†† 
(
†† #
characterToSubstitute
†† )
.
††) *
index
††* /
==
††0 2
m_characterCount
††3 C
)
††C D
{
°° 
charCode
¢¢ 
=
¢¢ 
(
¢¢  
int
¢¢  #
)
¢¢# $#
characterToSubstitute
¢¢$ 9
.
¢¢9 :
unicode
¢¢: A
;
¢¢A B
m_textElementType
££ %
=
££& '!
TMP_TextElementType
££( ;
.
££; <
	Character
££< E
;
££E F"
isInjectingCharacter
§§ (
=
§§) *
true
§§+ /
;
§§/ 0
switch
¶¶ 
(
¶¶ 
charCode
¶¶ $
)
¶¶$ %
{
ßß 
case
®® 
$num
®® !
:
®®! "

m_textInfo
©© &
.
©©& '
characterInfo
©©' 4
[
©©4 5
m_characterCount
©©5 E
]
©©E F
.
©©F G
textElement
©©G R
=
©©S T 
m_currentFontAsset
©©U g
.
©©g h"
characterLookupTable
©©h |
[
©©| }
$num©©} Å
]©©Å Ç
;©©Ç É
m_isTextTruncated
™™ -
=
™™. /
true
™™0 4
;
™™4 5
break
´´ !
;
´´! "
case
¨¨ 
$num
¨¨ !
:
¨¨! "
break
ÆÆ !
;
ÆÆ! "
case
ØØ 
$num
ØØ #
:
ØØ# $

m_textInfo
∞∞ &
.
∞∞& '
characterInfo
∞∞' 4
[
∞∞4 5
m_characterCount
∞∞5 E
]
∞∞E F
.
∞∞F G
textElement
∞∞G R
=
∞∞S T

m_Ellipsis
∞∞U _
.
∞∞_ `
	character
∞∞` i
;
∞∞i j

m_textInfo
±± &
.
±±& '
characterInfo
±±' 4
[
±±4 5
m_characterCount
±±5 E
]
±±E F
.
±±F G
elementType
±±G R
=
±±S T!
TMP_TextElementType
±±U h
.
±±h i
	Character
±±i r
;
±±r s

m_textInfo
≤≤ &
.
≤≤& '
characterInfo
≤≤' 4
[
≤≤4 5
m_characterCount
≤≤5 E
]
≤≤E F
.
≤≤F G
	fontAsset
≤≤G P
=
≤≤Q R

m_Ellipsis
≤≤S ]
.
≤≤] ^
	fontAsset
≤≤^ g
;
≤≤g h

m_textInfo
≥≥ &
.
≥≥& '
characterInfo
≥≥' 4
[
≥≥4 5
m_characterCount
≥≥5 E
]
≥≥E F
.
≥≥F G
material
≥≥G O
=
≥≥P Q

m_Ellipsis
≥≥R \
.
≥≥\ ]
material
≥≥] e
;
≥≥e f

m_textInfo
¥¥ &
.
¥¥& '
characterInfo
¥¥' 4
[
¥¥4 5
m_characterCount
¥¥5 E
]
¥¥E F
.
¥¥F G$
materialReferenceIndex
¥¥G ]
=
¥¥^ _

m_Ellipsis
¥¥` j
.
¥¥j k
materialIndex
¥¥k x
;
¥¥x y
m_isTextTruncated
∑∑ -
=
∑∑. /
true
∑∑0 4
;
∑∑4 5#
characterToSubstitute
∫∫ 1
.
∫∫1 2
index
∫∫2 7
=
∫∫8 9
m_characterCount
∫∫: J
+
∫∫K L
$num
∫∫M N
;
∫∫N O#
characterToSubstitute
ªª 1
.
ªª1 2
unicode
ªª2 9
=
ªª: ;
$num
ªª< @
;
ªª@ A
break
ºº !
;
ºº! "
}
ΩΩ 
}
ææ 
if
ƒƒ 
(
ƒƒ 
m_characterCount
ƒƒ $
<
ƒƒ% &%
m_firstVisibleCharacter
ƒƒ' >
&&
ƒƒ? A
charCode
ƒƒB J
!=
ƒƒK M
$num
ƒƒN R
)
ƒƒR S
{
≈≈ 

m_textInfo
∆∆ 
.
∆∆ 
characterInfo
∆∆ ,
[
∆∆, -
m_characterCount
∆∆- =
]
∆∆= >
.
∆∆> ?
	isVisible
∆∆? H
=
∆∆I J
false
∆∆K P
;
∆∆P Q

m_textInfo
«« 
.
«« 
characterInfo
«« ,
[
««, -
m_characterCount
««- =
]
««= >
.
««> ?
	character
««? H
=
««I J
(
««K L
char
««L P
)
««P Q
$num
««Q W
;
««W X

m_textInfo
»» 
.
»» 
characterInfo
»» ,
[
»», -
m_characterCount
»»- =
]
»»= >
.
»»> ?

lineNumber
»»? I
=
»»J K
$num
»»L M
;
»»M N
m_characterCount
…… $
+=
……% '
$num
……( )
;
……) *
continue
   
;
   
}
ÀÀ 
float
““ !
smallCapsMultiplier
““ )
=
““* +
$num
““, 0
;
““0 1
if
‘‘ 
(
‘‘ 
m_textElementType
‘‘ %
==
‘‘& (!
TMP_TextElementType
‘‘) <
.
‘‘< =
	Character
‘‘= F
)
‘‘F G
{
’’ 
if
÷÷ 
(
÷÷ 
(
÷÷ !
m_FontStyleInternal
÷÷ ,
&
÷÷- .

FontStyles
÷÷/ 9
.
÷÷9 :
	UpperCase
÷÷: C
)
÷÷C D
==
÷÷E G

FontStyles
÷÷H R
.
÷÷R S
	UpperCase
÷÷S \
)
÷÷\ ]
{
◊◊ 
if
ŸŸ 
(
ŸŸ 
char
ŸŸ  
.
ŸŸ  !
IsLower
ŸŸ! (
(
ŸŸ( )
(
ŸŸ) *
char
ŸŸ* .
)
ŸŸ. /
charCode
ŸŸ/ 7
)
ŸŸ7 8
)
ŸŸ8 9
charCode
⁄⁄ $
=
⁄⁄% &
char
⁄⁄' +
.
⁄⁄+ ,
ToUpper
⁄⁄, 3
(
⁄⁄3 4
(
⁄⁄4 5
char
⁄⁄5 9
)
⁄⁄9 :
charCode
⁄⁄: B
)
⁄⁄B C
;
⁄⁄C D
}
‹‹ 
else
›› 
if
›› 
(
›› 
(
›› !
m_FontStyleInternal
›› 1
&
››2 3

FontStyles
››4 >
.
››> ?
	LowerCase
››? H
)
››H I
==
››J L

FontStyles
››M W
.
››W X
	LowerCase
››X a
)
››a b
{
ﬁﬁ 
if
‡‡ 
(
‡‡ 
char
‡‡  
.
‡‡  !
IsUpper
‡‡! (
(
‡‡( )
(
‡‡) *
char
‡‡* .
)
‡‡. /
charCode
‡‡/ 7
)
‡‡7 8
)
‡‡8 9
charCode
·· $
=
··% &
char
··' +
.
··+ ,
ToLower
··, 3
(
··3 4
(
··4 5
char
··5 9
)
··9 :
charCode
··: B
)
··B C
;
··C D
}
‚‚ 
else
„„ 
if
„„ 
(
„„ 
(
„„ !
m_FontStyleInternal
„„ 1
&
„„2 3

FontStyles
„„4 >
.
„„> ?
	SmallCaps
„„? H
)
„„H I
==
„„J L

FontStyles
„„M W
.
„„W X
	SmallCaps
„„X a
)
„„a b
{
‰‰ 
if
ÂÂ 
(
ÂÂ 
char
ÂÂ  
.
ÂÂ  !
IsLower
ÂÂ! (
(
ÂÂ( )
(
ÂÂ) *
char
ÂÂ* .
)
ÂÂ. /
charCode
ÂÂ/ 7
)
ÂÂ7 8
)
ÂÂ8 9
{
ÊÊ !
smallCapsMultiplier
ÁÁ /
=
ÁÁ0 1
$num
ÁÁ2 6
;
ÁÁ6 7
charCode
ËË $
=
ËË% &
char
ËË' +
.
ËË+ ,
ToUpper
ËË, 3
(
ËË3 4
(
ËË4 5
char
ËË5 9
)
ËË9 :
charCode
ËË: B
)
ËËB C
;
ËËC D
}
ÈÈ 
}
ÍÍ 
}
ÎÎ %
k_CharacterLookupMarker
ÒÒ '
.
ÒÒ' (
Begin
ÒÒ( -
(
ÒÒ- .
)
ÒÒ. /
;
ÒÒ/ 0
float
ÛÛ 
baselineOffset
ÛÛ $
=
ÛÛ% &
$num
ÛÛ' (
;
ÛÛ( )
float
ÙÙ 
elementAscentLine
ÙÙ '
=
ÙÙ( )
$num
ÙÙ* +
;
ÙÙ+ ,
float
ıı  
elementDescentLine
ıı (
=
ıı) *
$num
ıı+ ,
;
ıı, -
if
ˆˆ 
(
ˆˆ 
m_textElementType
ˆˆ %
==
ˆˆ& (!
TMP_TextElementType
ˆˆ) <
.
ˆˆ< =
Sprite
ˆˆ= C
)
ˆˆC D
{
˜˜ "
m_currentSpriteAsset
˘˘ (
=
˘˘) *

m_textInfo
˘˘+ 5
.
˘˘5 6
characterInfo
˘˘6 C
[
˘˘C D
m_characterCount
˘˘D T
]
˘˘T U
.
˘˘U V
spriteAsset
˘˘V a
;
˘˘a b
m_spriteIndex
˙˙ !
=
˙˙" #

m_textInfo
˙˙$ .
.
˙˙. /
characterInfo
˙˙/ <
[
˙˙< =
m_characterCount
˙˙= M
]
˙˙M N
.
˙˙N O
spriteIndex
˙˙O Z
;
˙˙Z [!
TMP_SpriteCharacter
¸¸ '
sprite
¸¸( .
=
¸¸/ 0"
m_currentSpriteAsset
¸¸1 E
.
¸¸E F"
spriteCharacterTable
¸¸F Z
[
¸¸Z [
m_spriteIndex
¸¸[ h
]
¸¸h i
;
¸¸i j
if
˝˝ 
(
˝˝ 
sprite
˝˝ 
==
˝˝ !
null
˝˝" &
)
˝˝& '
{
˛˛ %
k_CharacterLookupMarker
ˇˇ /
.
ˇˇ/ 0
End
ˇˇ0 3
(
ˇˇ3 4
)
ˇˇ4 5
;
ˇˇ5 6
continue
ÄÄ  
;
ÄÄ  !
}
ÅÅ 
if
ÑÑ 
(
ÑÑ 
charCode
ÑÑ  
==
ÑÑ! #
$num
ÑÑ$ &
)
ÑÑ& '
charCode
ÖÖ  
=
ÖÖ! "
$num
ÖÖ# (
+
ÖÖ) *
m_spriteIndex
ÖÖ+ 8
;
ÖÖ8 9
else
ÜÜ 
m_spriteColor
áá %
=
áá& '
s_colorWhite
áá( 4
;
áá4 5
float
ââ 
	fontScale
ââ #
=
ââ$ %
(
ââ& '
m_currentFontSize
ââ' 8
/
ââ9 : 
m_currentFontAsset
ââ; M
.
ââM N
faceInfo
ââN V
.
ââV W
	pointSize
ââW `
*
ââa b 
m_currentFontAsset
ââc u
.
ââu v
faceInfo
ââv ~
.
ââ~ 
scaleââ Ñ
*ââÖ Ü
(ââá à 
m_isOrthographicââà ò
?ââô ö
$numââõ ú
:ââù û
$numââü £
)ââ£ §
)ââ§ •
;ââ• ¶
if
åå 
(
åå "
m_currentSpriteAsset
åå ,
.
åå, -

m_FaceInfo
åå- 7
.
åå7 8
	pointSize
åå8 A
>
ååB C
$num
ååD E
)
ååE F
{
çç 
float
éé 
spriteScale
éé )
=
éé* +
m_currentFontSize
éé, =
/
éé> ?"
m_currentSpriteAsset
éé@ T
.
ééT U

m_FaceInfo
ééU _
.
éé_ `
	pointSize
éé` i
*
ééj k#
m_currentSpriteAssetéél Ä
.ééÄ Å

m_FaceInfoééÅ ã
.ééã å
scaleééå ë
*ééí ì
(ééî ï 
m_isOrthographicééï •
?éé¶ ß
$numéé® ©
:éé™ ´
$numéé¨ ∞
)éé∞ ±
;éé± ≤!
currentElementScale
èè +
=
èè, -
sprite
èè. 4
.
èè4 5
m_Scale
èè5 <
*
èè= >
sprite
èè? E
.
èèE F
m_Glyph
èèF M
.
èèM N
scale
èèN S
*
èèT U
spriteScale
èèV a
;
èèa b
elementAscentLine
êê )
=
êê* +"
m_currentSpriteAsset
êê, @
.
êê@ A

m_FaceInfo
êêA K
.
êêK L

ascentLine
êêL V
;
êêV W
baselineOffset
ëë &
=
ëë' ("
m_currentSpriteAsset
ëë) =
.
ëë= >

m_FaceInfo
ëë> H
.
ëëH I
baseline
ëëI Q
*
ëëR S
	fontScale
ëëT ]
*
ëë^ _#
m_fontScaleMultiplier
ëë` u
*
ëëv w#
m_currentSpriteAssetëëx å
.ëëå ç

m_FaceInfoëëç ó
.ëëó ò
scaleëëò ù
;ëëù û 
elementDescentLine
íí *
=
íí+ ,"
m_currentSpriteAsset
íí- A
.
ííA B

m_FaceInfo
ííB L
.
ííL M
descentLine
ííM X
;
ííX Y
}
ìì 
else
îî 
{
ïï 
float
ññ 
spriteScale
ññ )
=
ññ* +
m_currentFontSize
ññ, =
/
ññ> ? 
m_currentFontAsset
ññ@ R
.
ññR S

m_FaceInfo
ññS ]
.
ññ] ^
	pointSize
ññ^ g
*
ññh i 
m_currentFontAsset
ññj |
.
ññ| }

m_FaceInfoññ} á
.ññá à
scaleññà ç
*ññé è
(ññê ë 
m_isOrthographicññë °
?ññ¢ £
$numññ§ •
:ññ¶ ß
$numññ® ¨
)ññ¨ ≠
;ññ≠ Æ!
currentElementScale
óó +
=
óó, - 
m_currentFontAsset
óó. @
.
óó@ A

m_FaceInfo
óóA K
.
óóK L

ascentLine
óóL V
/
óóW X
sprite
óóY _
.
óó_ `
m_Glyph
óó` g
.
óóg h
metrics
óóh o
.
óóo p
height
óóp v
*
óów x
sprite
óóy 
.óó Ä
m_ScaleóóÄ á
*óóà â
spriteóóä ê
.óóê ë
m_Glyphóóë ò
.óóò ô
scaleóóô û
*óóü †
spriteScaleóó° ¨
;óó¨ ≠
float
òò 

scaleDelta
òò (
=
òò) *
spriteScale
òò+ 6
/
òò7 8!
currentElementScale
òò9 L
;
òòL M
elementAscentLine
ôô )
=
ôô* + 
m_currentFontAsset
ôô, >
.
ôô> ?

m_FaceInfo
ôô? I
.
ôôI J

ascentLine
ôôJ T
*
ôôU V

scaleDelta
ôôW a
;
ôôa b
baselineOffset
öö &
=
öö' ( 
m_currentFontAsset
öö) ;
.
öö; <

m_FaceInfo
öö< F
.
ööF G
baseline
ööG O
*
ööP Q
	fontScale
ööR [
*
öö\ ]#
m_fontScaleMultiplier
öö^ s
*
ööt u!
m_currentFontAssetööv à
.ööà â

m_FaceInfoööâ ì
.ööì î
scaleööî ô
;ööô ö 
elementDescentLine
õõ *
=
õõ+ , 
m_currentFontAsset
õõ- ?
.
õõ? @

m_FaceInfo
õõ@ J
.
õõJ K
descentLine
õõK V
*
õõW X

scaleDelta
õõY c
;
õõc d
}
úú "
m_cached_TextElement
ûû (
=
ûû) *
sprite
ûû+ 1
;
ûû1 2

m_textInfo
†† 
.
†† 
characterInfo
†† ,
[
††, -
m_characterCount
††- =
]
††= >
.
††> ?
elementType
††? J
=
††K L!
TMP_TextElementType
††M `
.
††` a
Sprite
††a g
;
††g h

m_textInfo
°° 
.
°° 
characterInfo
°° ,
[
°°, -
m_characterCount
°°- =
]
°°= >
.
°°> ?
scale
°°? D
=
°°E F!
currentElementScale
°°G Z
;
°°Z [

m_textInfo
¢¢ 
.
¢¢ 
characterInfo
¢¢ ,
[
¢¢, -
m_characterCount
¢¢- =
]
¢¢= >
.
¢¢> ?
spriteAsset
¢¢? J
=
¢¢K L"
m_currentSpriteAsset
¢¢M a
;
¢¢a b

m_textInfo
££ 
.
££ 
characterInfo
££ ,
[
££, -
m_characterCount
££- =
]
££= >
.
££> ?
	fontAsset
££? H
=
££I J 
m_currentFontAsset
££K ]
;
££] ^

m_textInfo
§§ 
.
§§ 
characterInfo
§§ ,
[
§§, -
m_characterCount
§§- =
]
§§= >
.
§§> ?$
materialReferenceIndex
§§? U
=
§§V W$
m_currentMaterialIndex
§§X n
;
§§n o$
m_currentMaterialIndex
¶¶ *
=
¶¶+ ,#
previousMaterialIndex
¶¶- B
;
¶¶B C
padding
®® 
=
®® 
$num
®® 
;
®®  
}
©© 
else
™™ 
if
™™ 
(
™™ 
m_textElementType
™™ *
==
™™+ -!
TMP_TextElementType
™™. A
.
™™A B
	Character
™™B K
)
™™K L
{
´´ "
m_cached_TextElement
¨¨ (
=
¨¨) *

m_textInfo
¨¨+ 5
.
¨¨5 6
characterInfo
¨¨6 C
[
¨¨C D
m_characterCount
¨¨D T
]
¨¨T U
.
¨¨U V
textElement
¨¨V a
;
¨¨a b
if
≠≠ 
(
≠≠ "
m_cached_TextElement
≠≠ ,
==
≠≠- /
null
≠≠0 4
)
≠≠4 5
{
ÆÆ %
k_CharacterLookupMarker
ØØ /
.
ØØ/ 0
End
ØØ0 3
(
ØØ3 4
)
ØØ4 5
;
ØØ5 6
continue
∞∞  
;
∞∞  !
}
±±  
m_currentFontAsset
≥≥ &
=
≥≥' (

m_textInfo
≥≥) 3
.
≥≥3 4
characterInfo
≥≥4 A
[
≥≥A B
m_characterCount
≥≥B R
]
≥≥R S
.
≥≥S T
	fontAsset
≥≥T ]
;
≥≥] ^
m_currentMaterial
¥¥ %
=
¥¥& '

m_textInfo
¥¥( 2
.
¥¥2 3
characterInfo
¥¥3 @
[
¥¥@ A
m_characterCount
¥¥A Q
]
¥¥Q R
.
¥¥R S
material
¥¥S [
;
¥¥[ \$
m_currentMaterialIndex
µµ *
=
µµ+ ,

m_textInfo
µµ- 7
.
µµ7 8
characterInfo
µµ8 E
[
µµE F
m_characterCount
µµF V
]
µµV W
.
µµW X$
materialReferenceIndex
µµX n
;
µµn o
float
∏∏ 
adjustedScale
∏∏ '
;
∏∏' (
if
ππ 
(
ππ "
isInjectingCharacter
ππ ,
&&
ππ- /#
m_TextProcessingArray
ππ0 E
[
ππE F
i
ππF G
]
ππG H
.
ππH I
unicode
ππI P
==
ππQ S
$num
ππT X
&&
ππY [
m_characterCount
ππ\ l
!=
ππm o%
m_firstCharacterOfLineππp Ü
)ππÜ á
adjustedScale
∫∫ %
=
∫∫& '

m_textInfo
∫∫( 2
.
∫∫2 3
characterInfo
∫∫3 @
[
∫∫@ A
m_characterCount
∫∫A Q
-
∫∫R S
$num
∫∫T U
]
∫∫U V
.
∫∫V W
	pointSize
∫∫W `
*
∫∫a b!
smallCapsMultiplier
∫∫c v
/
∫∫w x!
m_currentFontAsset∫∫y ã
.∫∫ã å

m_FaceInfo∫∫å ñ
.∫∫ñ ó
	pointSize∫∫ó †
*∫∫° ¢"
m_currentFontAsset∫∫£ µ
.∫∫µ ∂

m_FaceInfo∫∫∂ ¿
.∫∫¿ ¡
scale∫∫¡ ∆
*∫∫« »
(∫∫…   
m_isOrthographic∫∫  ⁄
?∫∫€ ‹
$num∫∫› ﬁ
:∫∫ﬂ ‡
$num∫∫· Â
)∫∫Â Ê
;∫∫Ê Á
else
ªª 
adjustedScale
ºº %
=
ºº& '
m_currentFontSize
ºº( 9
*
ºº: ;!
smallCapsMultiplier
ºº< O
/
ººP Q 
m_currentFontAsset
ººR d
.
ººd e

m_FaceInfo
ººe o
.
ººo p
	pointSize
ººp y
*
ººz {!
m_currentFontAssetºº| é
.ººé è

m_FaceInfoººè ô
.ººô ö
scaleººö ü
*ºº† °
(ºº¢ £ 
m_isOrthographicºº£ ≥
?ºº¥ µ
$numºº∂ ∑
:ºº∏ π
$numºº∫ æ
)ººæ ø
;ººø ¿
if
øø 
(
øø "
isInjectingCharacter
øø ,
&&
øø- /
charCode
øø0 8
==
øø9 ;
$num
øø< B
)
øøB C
{
¿¿ 
elementAscentLine
¡¡ )
=
¡¡* +
$num
¡¡, -
;
¡¡- . 
elementDescentLine
¬¬ *
=
¬¬+ ,
$num
¬¬- .
;
¬¬. /
}
√√ 
else
ƒƒ 
{
≈≈ 
elementAscentLine
∆∆ )
=
∆∆* + 
m_currentFontAsset
∆∆, >
.
∆∆> ?

m_FaceInfo
∆∆? I
.
∆∆I J

ascentLine
∆∆J T
;
∆∆T U 
elementDescentLine
«« *
=
««+ , 
m_currentFontAsset
««- ?
.
««? @

m_FaceInfo
««@ J
.
««J K
descentLine
««K V
;
««V W
}
»» !
currentElementScale
   '
=
  ( )
adjustedScale
  * 7
*
  8 9#
m_fontScaleMultiplier
  : O
*
  P Q"
m_cached_TextElement
  R f
.
  f g
m_Scale
  g n
*
  o p#
m_cached_TextElement  q Ö
.  Ö Ü
m_Glyph  Ü ç
.  ç é
scale  é ì
;  ì î
baselineOffset
ÀÀ "
=
ÀÀ# $ 
m_currentFontAsset
ÀÀ% 7
.
ÀÀ7 8

m_FaceInfo
ÀÀ8 B
.
ÀÀB C
baseline
ÀÀC K
*
ÀÀL M
adjustedScale
ÀÀN [
*
ÀÀ\ ]#
m_fontScaleMultiplier
ÀÀ^ s
*
ÀÀt u!
m_currentFontAssetÀÀv à
.ÀÀà â

m_FaceInfoÀÀâ ì
.ÀÀì î
scaleÀÀî ô
;ÀÀô ö

m_textInfo
ÕÕ 
.
ÕÕ 
characterInfo
ÕÕ ,
[
ÕÕ, -
m_characterCount
ÕÕ- =
]
ÕÕ= >
.
ÕÕ> ?
elementType
ÕÕ? J
=
ÕÕK L!
TMP_TextElementType
ÕÕM `
.
ÕÕ` a
	Character
ÕÕa j
;
ÕÕj k

m_textInfo
ŒŒ 
.
ŒŒ 
characterInfo
ŒŒ ,
[
ŒŒ, -
m_characterCount
ŒŒ- =
]
ŒŒ= >
.
ŒŒ> ?
scale
ŒŒ? D
=
ŒŒE F!
currentElementScale
ŒŒG Z
;
ŒŒZ [
padding
–– 
=
–– $
m_currentMaterialIndex
–– 4
==
––5 7
$num
––8 9
?
––: ;
	m_padding
––< E
:
––F G
m_subTextObjects
––H X
[
––X Y$
m_currentMaterialIndex
––Y o
]
––o p
.
––p q
padding
––q x
;
––x y
}
—— %
k_CharacterLookupMarker
““ '
.
““' (
End
““( +
(
““+ ,
)
““, -
;
““- .
float
ÿÿ +
currentElementUnmodifiedScale
ÿÿ 3
=
ÿÿ4 5!
currentElementScale
ÿÿ6 I
;
ÿÿI J
if
ŸŸ 
(
ŸŸ 
charCode
ŸŸ 
==
ŸŸ 
$num
ŸŸ  $
||
ŸŸ% '
charCode
ŸŸ( 0
==
ŸŸ1 3
$num
ŸŸ4 8
)
ŸŸ8 9!
currentElementScale
⁄⁄ '
=
⁄⁄( )
$num
⁄⁄* +
;
⁄⁄+ ,

m_textInfo
ﬂﬂ 
.
ﬂﬂ 
characterInfo
ﬂﬂ (
[
ﬂﬂ( )
m_characterCount
ﬂﬂ) 9
]
ﬂﬂ9 :
.
ﬂﬂ: ;
	character
ﬂﬂ; D
=
ﬂﬂE F
(
ﬂﬂG H
char
ﬂﬂH L
)
ﬂﬂL M
charCode
ﬂﬂM U
;
ﬂﬂU V

m_textInfo
‡‡ 
.
‡‡ 
characterInfo
‡‡ (
[
‡‡( )
m_characterCount
‡‡) 9
]
‡‡9 :
.
‡‡: ;
	pointSize
‡‡; D
=
‡‡E F
m_currentFontSize
‡‡G X
;
‡‡X Y

m_textInfo
·· 
.
·· 
characterInfo
·· (
[
··( )
m_characterCount
··) 9
]
··9 :
.
··: ;
color
··; @
=
··A B
m_htmlColor
··C N
;
··N O

m_textInfo
‚‚ 
.
‚‚ 
characterInfo
‚‚ (
[
‚‚( )
m_characterCount
‚‚) 9
]
‚‚9 :
.
‚‚: ;
underlineColor
‚‚; I
=
‚‚J K
m_underlineColor
‚‚L \
;
‚‚\ ]

m_textInfo
„„ 
.
„„ 
characterInfo
„„ (
[
„„( )
m_characterCount
„„) 9
]
„„9 :
.
„„: ; 
strikethroughColor
„„; M
=
„„N O"
m_strikethroughColor
„„P d
;
„„d e

m_textInfo
‰‰ 
.
‰‰ 
characterInfo
‰‰ (
[
‰‰( )
m_characterCount
‰‰) 9
]
‰‰9 :
.
‰‰: ;
highlightState
‰‰; I
=
‰‰J K#
m_HighlightStateStack
‰‰L a
.
‰‰a b
current
‰‰b i
;
‰‰i j

m_textInfo
ÂÂ 
.
ÂÂ 
characterInfo
ÂÂ (
[
ÂÂ( )
m_characterCount
ÂÂ) 9
]
ÂÂ9 :
.
ÂÂ: ;
style
ÂÂ; @
=
ÂÂA B!
m_FontStyleInternal
ÂÂC V
;
ÂÂV W
GlyphMetrics
ËË !
currentGlyphMetrics
ËË 0
=
ËË1 2"
m_cached_TextElement
ËË3 G
.
ËËG H
m_Glyph
ËËH O
.
ËËO P
metrics
ËËP W
;
ËËW X
bool
ÎÎ 
isWhiteSpace
ÎÎ !
=
ÎÎ" #
charCode
ÎÎ$ ,
<=
ÎÎ- /
$num
ÎÎ0 6
&&
ÎÎ7 9
char
ÎÎ: >
.
ÎÎ> ?
IsWhiteSpace
ÎÎ? K
(
ÎÎK L
(
ÎÎL M
char
ÎÎM Q
)
ÎÎQ R
charCode
ÎÎR Z
)
ÎÎZ [
;
ÎÎ[ \"
TMP_GlyphValueRecord
ÔÔ $
glyphAdjustments
ÔÔ% 5
=
ÔÔ6 7
new
ÔÔ8 ;"
TMP_GlyphValueRecord
ÔÔ< P
(
ÔÔP Q
)
ÔÔQ R
;
ÔÔR S
float
 (
characterSpacingAdjustment
 0
=
1 2 
m_characterSpacing
3 E
;
E F0
"m_GlyphHorizontalAdvanceAdjustment
ÒÒ 2
=
ÒÒ3 4
$num
ÒÒ5 6
;
ÒÒ6 7
if
ÚÚ 
(
ÚÚ 
m_enableKerning
ÚÚ #
)
ÚÚ# $
{
ÛÛ (
k_HandleGPOSFeaturesMarker
ÙÙ .
.
ÙÙ. /
Begin
ÙÙ/ 4
(
ÙÙ4 5
)
ÙÙ5 6
;
ÙÙ6 7+
TMP_GlyphPairAdjustmentRecord
ˆˆ 1
adjustmentPair
ˆˆ2 @
;
ˆˆ@ A
uint
˜˜ 
baseGlyphIndex
˜˜ '
=
˜˜( )"
m_cached_TextElement
˜˜* >
.
˜˜> ?
m_GlyphIndex
˜˜? K
;
˜˜K L
if
˘˘ 
(
˘˘ 
m_characterCount
˘˘ (
<
˘˘) *!
totalCharacterCount
˘˘+ >
-
˘˘? @
$num
˘˘A B
)
˘˘B C
{
˙˙ 
uint
˚˚ 
nextGlyphIndex
˚˚ +
=
˚˚, -

m_textInfo
˚˚. 8
.
˚˚8 9
characterInfo
˚˚9 F
[
˚˚F G
m_characterCount
˚˚G W
+
˚˚X Y
$num
˚˚Z [
]
˚˚[ \
.
˚˚\ ]
textElement
˚˚] h
.
˚˚h i
m_GlyphIndex
˚˚i u
;
˚˚u v
uint
¸¸ 
key
¸¸  
=
¸¸! "
nextGlyphIndex
¸¸# 1
<<
¸¸2 4
$num
¸¸5 7
|
¸¸8 9
baseGlyphIndex
¸¸: H
;
¸¸H I
if
˛˛ 
(
˛˛  
m_currentFontAsset
˛˛ .
.
˛˛. / 
m_FontFeatureTable
˛˛/ A
.
˛˛A B9
+m_GlyphPairAdjustmentRecordLookupDictionary
˛˛B m
.
˛˛m n
TryGetValue
˛˛n y
(
˛˛y z
key
˛˛z }
,
˛˛} ~
out˛˛ Ç
adjustmentPair˛˛É ë
)˛˛ë í
)˛˛í ì
{
ˇˇ 
glyphAdjustments
ÄÄ ,
=
ÄÄ- .
adjustmentPair
ÄÄ/ =
.
ÄÄ= >%
m_FirstAdjustmentRecord
ÄÄ> U
.
ÄÄU V 
m_GlyphValueRecord
ÄÄV h
;
ÄÄh i(
characterSpacingAdjustment
ÅÅ 6
=
ÅÅ7 8
(
ÅÅ9 :
adjustmentPair
ÅÅ: H
.
ÅÅH I"
m_FeatureLookupFlags
ÅÅI ]
&
ÅÅ^ _$
FontFeatureLookupFlags
ÅÅ` v
.
ÅÅv w'
IgnoreSpacingAdjustmentsÅÅw è
)ÅÅè ê
==ÅÅë ì&
FontFeatureLookupFlagsÅÅî ™
.ÅÅ™ ´(
IgnoreSpacingAdjustmentsÅÅ´ √
?ÅÅƒ ≈
$numÅÅ∆ «
:ÅÅ» …*
characterSpacingAdjustmentÅÅ  ‰
;ÅÅ‰ Â
}
ÇÇ 
}
ÉÉ 
if
ÖÖ 
(
ÖÖ 
m_characterCount
ÖÖ (
>=
ÖÖ) +
$num
ÖÖ, -
)
ÖÖ- .
{
ÜÜ 
uint
áá  
previousGlyphIndex
áá /
=
áá0 1

m_textInfo
áá2 <
.
áá< =
characterInfo
áá= J
[
ááJ K
m_characterCount
ááK [
-
áá\ ]
$num
áá^ _
]
áá_ `
.
áá` a
textElement
ááa l
.
áál m
m_GlyphIndex
áám y
;
ááy z
uint
àà 
key
àà  
=
àà! "
baseGlyphIndex
àà# 1
<<
àà2 4
$num
àà5 7
|
àà8 9 
previousGlyphIndex
àà: L
;
ààL M
if
ää 
(
ää  
m_currentFontAsset
ää .
.
ää. / 
m_FontFeatureTable
ää/ A
.
ääA B9
+m_GlyphPairAdjustmentRecordLookupDictionary
ääB m
.
ääm n
TryGetValue
ään y
(
ääy z
key
ääz }
,
ää} ~
outää Ç
adjustmentPairääÉ ë
)ääë í
)ääí ì
{
ãã 
glyphAdjustments
åå ,
+=
åå- /
adjustmentPair
åå0 >
.
åå> ?&
m_SecondAdjustmentRecord
åå? W
.
ååW X 
m_GlyphValueRecord
ååX j
;
ååj k(
characterSpacingAdjustment
çç 6
=
çç7 8
(
çç9 :
adjustmentPair
çç: H
.
ççH I"
m_FeatureLookupFlags
ççI ]
&
çç^ _$
FontFeatureLookupFlags
çç` v
.
ççv w'
IgnoreSpacingAdjustmentsççw è
)ççè ê
==ççë ì&
FontFeatureLookupFlagsççî ™
.çç™ ´(
IgnoreSpacingAdjustmentsçç´ √
?ççƒ ≈
$numçç∆ «
:çç» …*
characterSpacingAdjustmentçç  ‰
;çç‰ Â
}
éé 
}
èè 0
"m_GlyphHorizontalAdvanceAdjustment
ëë 6
=
ëë7 8
glyphAdjustments
ëë9 I
.
ëëI J
xAdvance
ëëJ R
;
ëëR S(
k_HandleGPOSFeaturesMarker
íí .
.
íí. /
End
íí/ 2
(
íí2 3
)
íí3 4
;
íí4 5
}
ìì 
if
ôô 
(
ôô 
m_isRightToLeft
ôô #
)
ôô# $
{
öö 

m_xAdvance
õõ 
-=
õõ !!
currentGlyphMetrics
õõ" 5
.
õõ5 6
horizontalAdvance
õõ6 G
*
õõH I
(
õõJ K
$num
õõK L
-
õõM N!
m_charWidthAdjDelta
õõO b
)
õõb c
*
õõd e!
currentElementScale
õõf y
;
õõy z
if
ùù 
(
ùù 
isWhiteSpace
ùù $
||
ùù% '
charCode
ùù( 0
==
ùù1 3
$num
ùù4 :
)
ùù: ;

m_xAdvance
ûû "
-=
ûû# %
m_wordSpacing
ûû& 3
*
ûû4 5
currentEmScale
ûû6 D
;
ûûD E
}
üü 
float
•• 
monoAdvance
•• !
=
••" #
$num
••$ %
;
••% &
if
¶¶ 
(
¶¶ 
m_monoSpacing
¶¶ !
!=
¶¶" $
$num
¶¶% &
)
¶¶& '
{
ßß 
monoAdvance
®® 
=
®®  !
(
®®" #
m_monoSpacing
®®# 0
/
®®1 2
$num
®®3 4
-
®®5 6
(
®®7 8!
currentGlyphMetrics
®®8 K
.
®®K L
width
®®L Q
/
®®R S
$num
®®T U
+
®®V W!
currentGlyphMetrics
®®X k
.
®®k l 
horizontalBearingX
®®l ~
)
®®~ 
*®®Ä Å#
currentElementScale®®Ç ï
)®®ï ñ
*®®ó ò
(®®ô ö
$num®®ö õ
-®®ú ù#
m_charWidthAdjDelta®®û ±
)®®± ≤
;®®≤ ≥

m_xAdvance
©© 
+=
©© !
monoAdvance
©©" -
;
©©- .
}
™™ 
if
∞∞ 
(
∞∞ 
m_textElementType
∞∞ %
==
∞∞& (!
TMP_TextElementType
∞∞) <
.
∞∞< =
	Character
∞∞= F
&&
∞∞G I
!
∞∞J K 
isUsingAltTypeface
∞∞K ]
&&
∞∞^ `
(
∞∞a b
(
∞∞b c!
m_FontStyleInternal
∞∞c v
&
∞∞w x

FontStyles∞∞y É
.∞∞É Ñ
Bold∞∞Ñ à
)∞∞à â
==∞∞ä å

FontStyles∞∞ç ó
.∞∞ó ò
Bold∞∞ò ú
)∞∞ú ù
)∞∞ù û
{
±± 
if
≤≤ 
(
≤≤ 
m_currentMaterial
≤≤ )
!=
≤≤* ,
null
≤≤- 1
&&
≤≤2 4
m_currentMaterial
≤≤5 F
.
≤≤F G
HasProperty
≤≤G R
(
≤≤R S
ShaderUtilities
≤≤S b
.
≤≤b c
ID_GradientScale
≤≤c s
)
≤≤s t
)
≤≤t u
{
≥≥ 
float
¥¥ 
gradientScale
¥¥ +
=
¥¥, -
m_currentMaterial
¥¥. ?
.
¥¥? @
GetFloat
¥¥@ H
(
¥¥H I
ShaderUtilities
¥¥I X
.
¥¥X Y
ID_GradientScale
¥¥Y i
)
¥¥i j
;
¥¥j k
style_padding
µµ %
=
µµ& ' 
m_currentFontAsset
µµ( :
.
µµ: ;
	boldStyle
µµ; D
/
µµE F
$num
µµG K
*
µµL M
gradientScale
µµN [
*
µµ\ ]
m_currentMaterial
µµ^ o
.
µµo p
GetFloat
µµp x
(
µµx y
ShaderUtilitiesµµy à
.µµà â
ID_ScaleRatio_Aµµâ ò
)µµò ô
;µµô ö
if
∏∏ 
(
∏∏ 
style_padding
∏∏ )
+
∏∏* +
padding
∏∏, 3
>
∏∏4 5
gradientScale
∏∏6 C
)
∏∏C D
padding
ππ #
=
ππ$ %
gradientScale
ππ& 3
-
ππ4 5
style_padding
ππ6 C
;
ππC D
}
∫∫ 
else
ªª 
style_padding
ºº %
=
ºº& '
$num
ºº( )
;
ºº) *#
boldSpacingAdjustment
ææ )
=
ææ* + 
m_currentFontAsset
ææ, >
.
ææ> ?
boldSpacing
ææ? J
;
ææJ K
}
øø 
else
¿¿ 
{
¡¡ 
if
¬¬ 
(
¬¬ 
m_currentMaterial
¬¬ )
!=
¬¬* ,
null
¬¬- 1
&&
¬¬2 4
m_currentMaterial
¬¬5 F
.
¬¬F G
HasProperty
¬¬G R
(
¬¬R S
ShaderUtilities
¬¬S b
.
¬¬b c
ID_GradientScale
¬¬c s
)
¬¬s t
&&
¬¬u w 
m_currentMaterial¬¬x â
.¬¬â ä
HasProperty¬¬ä ï
(¬¬ï ñ
ShaderUtilities¬¬ñ •
.¬¬• ¶
ID_ScaleRatio_A¬¬¶ µ
)¬¬µ ∂
)¬¬∂ ∑
{
√√ 
float
ƒƒ 
gradientScale
ƒƒ +
=
ƒƒ, -
m_currentMaterial
ƒƒ. ?
.
ƒƒ? @
GetFloat
ƒƒ@ H
(
ƒƒH I
ShaderUtilities
ƒƒI X
.
ƒƒX Y
ID_GradientScale
ƒƒY i
)
ƒƒi j
;
ƒƒj k
style_padding
≈≈ %
=
≈≈& ' 
m_currentFontAsset
≈≈( :
.
≈≈: ;
normalStyle
≈≈; F
/
≈≈G H
$num
≈≈I M
*
≈≈N O
gradientScale
≈≈P ]
*
≈≈^ _
m_currentMaterial
≈≈` q
.
≈≈q r
GetFloat
≈≈r z
(
≈≈z {
ShaderUtilities≈≈{ ä
.≈≈ä ã
ID_ScaleRatio_A≈≈ã ö
)≈≈ö õ
;≈≈õ ú
if
»» 
(
»» 
style_padding
»» )
+
»»* +
padding
»», 3
>
»»4 5
gradientScale
»»6 C
)
»»C D
padding
…… #
=
……$ %
gradientScale
……& 3
-
……4 5
style_padding
……6 C
;
……C D
}
   
else
ÀÀ 
style_padding
ÃÃ %
=
ÃÃ& '
$num
ÃÃ( )
;
ÃÃ) *#
boldSpacingAdjustment
ŒŒ )
=
ŒŒ* +
$num
ŒŒ, -
;
ŒŒ- .
}
œœ /
!k_CalculateVerticesPositionMarker
’’ 1
.
’’1 2
Begin
’’2 7
(
’’7 8
)
’’8 9
;
’’9 :
Vector3
÷÷ 
top_left
÷÷  
;
÷÷  !
top_left
◊◊ 
.
◊◊ 
x
◊◊ 
=
◊◊ 

m_xAdvance
◊◊ '
+
◊◊( )
(
◊◊* +
(
◊◊+ ,!
currentGlyphMetrics
◊◊, ?
.
◊◊? @ 
horizontalBearingX
◊◊@ R
-
◊◊S T
padding
◊◊U \
-
◊◊] ^
style_padding
◊◊_ l
+
◊◊m n
glyphAdjustments
◊◊o 
.◊◊ Ä
m_XPlacement◊◊Ä å
)◊◊å ç
*◊◊é è#
currentElementScale◊◊ê £
*◊◊§ •
(◊◊¶ ß
$num◊◊ß ®
-◊◊© ™#
m_charWidthAdjDelta◊◊´ æ
)◊◊æ ø
)◊◊ø ¿
;◊◊¿ ¡
top_left
ÿÿ 
.
ÿÿ 
y
ÿÿ 
=
ÿÿ 
baselineOffset
ÿÿ +
+
ÿÿ, -
(
ÿÿ. /!
currentGlyphMetrics
ÿÿ/ B
.
ÿÿB C 
horizontalBearingY
ÿÿC U
+
ÿÿV W
padding
ÿÿX _
+
ÿÿ` a
glyphAdjustments
ÿÿb r
.
ÿÿr s
m_YPlacement
ÿÿs 
)ÿÿ Ä
*ÿÿÅ Ç#
currentElementScaleÿÿÉ ñ
-ÿÿó ò
m_lineOffsetÿÿô •
+ÿÿ¶ ß 
m_baselineOffsetÿÿ® ∏
;ÿÿ∏ π
top_left
ŸŸ 
.
ŸŸ 
z
ŸŸ 
=
ŸŸ 
$num
ŸŸ 
;
ŸŸ 
Vector3
€€ 
bottom_left
€€ #
;
€€# $
bottom_left
‹‹ 
.
‹‹ 
x
‹‹ 
=
‹‹ 
top_left
‹‹  (
.
‹‹( )
x
‹‹) *
;
‹‹* +
bottom_left
›› 
.
›› 
y
›› 
=
›› 
top_left
››  (
.
››( )
y
››) *
-
››+ ,
(
››- .
(
››. /!
currentGlyphMetrics
››/ B
.
››B C
height
››C I
+
››J K
padding
››L S
*
››T U
$num
››V W
)
››W X
*
››Y Z!
currentElementScale
››[ n
)
››n o
;
››o p
bottom_left
ﬁﬁ 
.
ﬁﬁ 
z
ﬁﬁ 
=
ﬁﬁ 
$num
ﬁﬁ  !
;
ﬁﬁ! "
Vector3
‡‡ 
	top_right
‡‡ !
;
‡‡! "
	top_right
·· 
.
·· 
x
·· 
=
·· 
bottom_left
·· )
.
··) *
x
··* +
+
··, -
(
··. /
(
··/ 0!
currentGlyphMetrics
··0 C
.
··C D
width
··D I
+
··J K
padding
··L S
*
··T U
$num
··V W
+
··X Y
style_padding
··Z g
*
··h i
$num
··j k
)
··k l
*
··m n"
currentElementScale··o Ç
*··É Ñ
(··Ö Ü
$num··Ü á
-··à â#
m_charWidthAdjDelta··ä ù
)··ù û
)··û ü
;··ü †
	top_right
‚‚ 
.
‚‚ 
y
‚‚ 
=
‚‚ 
top_left
‚‚ &
.
‚‚& '
y
‚‚' (
;
‚‚( )
	top_right
„„ 
.
„„ 
z
„„ 
=
„„ 
$num
„„ 
;
„„  
Vector3
ÂÂ 
bottom_right
ÂÂ $
;
ÂÂ$ %
bottom_right
ÊÊ 
.
ÊÊ 
x
ÊÊ 
=
ÊÊ  
	top_right
ÊÊ! *
.
ÊÊ* +
x
ÊÊ+ ,
;
ÊÊ, -
bottom_right
ÁÁ 
.
ÁÁ 
y
ÁÁ 
=
ÁÁ  
bottom_left
ÁÁ! ,
.
ÁÁ, -
y
ÁÁ- .
;
ÁÁ. /
bottom_right
ËË 
.
ËË 
z
ËË 
=
ËË  
$num
ËË! "
;
ËË" #/
!k_CalculateVerticesPositionMarker
ÍÍ 1
.
ÍÍ1 2
End
ÍÍ2 5
(
ÍÍ5 6
)
ÍÍ6 7
;
ÍÍ7 8
if
 
(
 
m_textElementType
 %
==
& (!
TMP_TextElementType
) <
.
< =
	Character
= F
&&
G I
!
J K 
isUsingAltTypeface
K ]
&&
^ `
(
a b
(
b c!
m_FontStyleInternal
c v
&
w x

FontStylesy É
.É Ñ
ItalicÑ ä
)ä ã
==å é

FontStylesè ô
.ô ö
Italicö †
)† °
)° ¢
{
ÒÒ 
float
ÛÛ 
shear_value
ÛÛ %
=
ÛÛ& '
m_ItalicAngle
ÛÛ( 5
*
ÛÛ6 7
$num
ÛÛ8 =
;
ÛÛ= >
Vector3
ÙÙ 
topShear
ÙÙ $
=
ÙÙ% &
new
ÙÙ' *
Vector3
ÙÙ+ 2
(
ÙÙ2 3
shear_value
ÙÙ3 >
*
ÙÙ? @
(
ÙÙA B
(
ÙÙB C!
currentGlyphMetrics
ÙÙC V
.
ÙÙV W 
horizontalBearingY
ÙÙW i
+
ÙÙj k
padding
ÙÙl s
+
ÙÙt u
style_paddingÙÙv É
)ÙÙÉ Ñ
*ÙÙÖ Ü#
currentElementScaleÙÙá ö
)ÙÙö õ
,ÙÙõ ú
$numÙÙù û
,ÙÙû ü
$numÙÙ† °
)ÙÙ° ¢
;ÙÙ¢ £
Vector3
ıı 
bottomShear
ıı '
=
ıı( )
new
ıı* -
Vector3
ıı. 5
(
ıı5 6
shear_value
ıı6 A
*
ııB C
(
ııD E
(
ııE F
(
ııF G!
currentGlyphMetrics
ııG Z
.
ııZ [ 
horizontalBearingY
ıı[ m
-
ıın o"
currentGlyphMetricsııp É
.ııÉ Ñ
heightııÑ ä
-ııã å
paddingııç î
-ııï ñ
style_paddingııó §
)ıı§ •
)ıı• ¶
*ııß ®#
currentElementScaleıı© º
)ııº Ω
,ııΩ æ
$numııø ¿
,ıı¿ ¡
$numıı¬ √
)ıı√ ƒ
;ııƒ ≈
Vector3
˜˜ 
shearAdjustment
˜˜ +
=
˜˜, -
new
˜˜. 1
Vector3
˜˜2 9
(
˜˜9 :
(
˜˜: ;
topShear
˜˜; C
.
˜˜C D
x
˜˜D E
-
˜˜F G
bottomShear
˜˜H S
.
˜˜S T
x
˜˜T U
)
˜˜U V
/
˜˜W X
$num
˜˜Y Z
,
˜˜Z [
$num
˜˜\ ]
,
˜˜] ^
$num
˜˜_ `
)
˜˜` a
;
˜˜a b
top_left
˘˘ 
=
˘˘ 
top_left
˘˘ '
+
˘˘( )
topShear
˘˘* 2
-
˘˘3 4
shearAdjustment
˘˘5 D
;
˘˘D E
bottom_left
˙˙ 
=
˙˙  !
bottom_left
˙˙" -
+
˙˙. /
bottomShear
˙˙0 ;
-
˙˙< =
shearAdjustment
˙˙> M
;
˙˙M N
	top_right
˚˚ 
=
˚˚ 
	top_right
˚˚  )
+
˚˚* +
topShear
˚˚, 4
-
˚˚5 6
shearAdjustment
˚˚7 F
;
˚˚F G
bottom_right
¸¸  
=
¸¸! "
bottom_right
¸¸# /
+
¸¸0 1
bottomShear
¸¸2 =
-
¸¸> ?
shearAdjustment
¸¸@ O
;
¸¸O P
}
˝˝ 
if
ÉÉ 
(
ÉÉ 
m_isFXMatrixSet
ÉÉ #
)
ÉÉ# $
{
ÑÑ 
if
ÜÜ 
(
ÜÜ 

m_FXMatrix
ÜÜ "
.
ÜÜ" #

lossyScale
ÜÜ# -
.
ÜÜ- .
x
ÜÜ. /
!=
ÜÜ0 2
$num
ÜÜ3 4
)
ÜÜ4 5
{
áá 
}
åå 
Vector3
éé 
positionOffset
éé *
=
éé+ ,
(
éé- .
	top_right
éé. 7
+
éé8 9
bottom_left
éé: E
)
ééE F
/
ééG H
$num
ééI J
;
ééJ K
top_left
êê 
=
êê 

m_FXMatrix
êê )
.
êê) *
MultiplyPoint3x4
êê* :
(
êê: ;
top_left
êê; C
-
êêD E
positionOffset
êêF T
)
êêT U
+
êêV W
positionOffset
êêX f
;
êêf g
bottom_left
ëë 
=
ëë  !

m_FXMatrix
ëë" ,
.
ëë, -
MultiplyPoint3x4
ëë- =
(
ëë= >
bottom_left
ëë> I
-
ëëJ K
positionOffset
ëëL Z
)
ëëZ [
+
ëë\ ]
positionOffset
ëë^ l
;
ëël m
	top_right
íí 
=
íí 

m_FXMatrix
íí  *
.
íí* +
MultiplyPoint3x4
íí+ ;
(
íí; <
	top_right
íí< E
-
ííF G
positionOffset
ííH V
)
ííV W
+
ííX Y
positionOffset
ííZ h
;
ííh i
bottom_right
ìì  
=
ìì! "

m_FXMatrix
ìì# -
.
ìì- .
MultiplyPoint3x4
ìì. >
(
ìì> ?
bottom_right
ìì? K
-
ììL M
positionOffset
ììN \
)
ìì\ ]
+
ìì^ _
positionOffset
ìì` n
;
ììn o
}
îî 

m_textInfo
ôô 
.
ôô 
characterInfo
ôô (
[
ôô( )
m_characterCount
ôô) 9
]
ôô9 :
.
ôô: ;

bottomLeft
ôô; E
=
ôôF G
bottom_left
ôôH S
;
ôôS T

m_textInfo
öö 
.
öö 
characterInfo
öö (
[
öö( )
m_characterCount
öö) 9
]
öö9 :
.
öö: ;
topLeft
öö; B
=
ööC D
top_left
ööE M
;
ööM N

m_textInfo
õõ 
.
õõ 
characterInfo
õõ (
[
õõ( )
m_characterCount
õõ) 9
]
õõ9 :
.
õõ: ;
topRight
õõ; C
=
õõD E
	top_right
õõF O
;
õõO P

m_textInfo
úú 
.
úú 
characterInfo
úú (
[
úú( )
m_characterCount
úú) 9
]
úú9 :
.
úú: ;
bottomRight
úú; F
=
úúG H
bottom_right
úúI U
;
úúU V

m_textInfo
ûû 
.
ûû 
characterInfo
ûû (
[
ûû( )
m_characterCount
ûû) 9
]
ûû9 :
.
ûû: ;
origin
ûû; A
=
ûûB C

m_xAdvance
ûûD N
;
ûûN O

m_textInfo
üü 
.
üü 
characterInfo
üü (
[
üü( )
m_characterCount
üü) 9
]
üü9 :
.
üü: ;
baseLine
üü; C
=
üüD E
baselineOffset
üüF T
-
üüU V
m_lineOffset
üüW c
+
üüd e
m_baselineOffset
üüf v
;
üüv w

m_textInfo
†† 
.
†† 
characterInfo
†† (
[
††( )
m_characterCount
††) 9
]
††9 :
.
††: ;
aspectRatio
††; F
=
††G H
(
††I J
	top_right
††J S
.
††S T
x
††T U
-
††V W
bottom_left
††X c
.
††c d
x
††d e
)
††e f
/
††g h
(
††i j
top_left
††j r
.
††r s
y
††s t
-
††u v
bottom_left††w Ç
.††Ç É
y††É Ñ
)††Ñ Ö
;††Ö Ü(
k_ComputeTextMetricsMarker
•• *
.
••* +
Begin
••+ 0
(
••0 1
)
••1 2
;
••2 3
float
ßß 
elementAscender
ßß %
=
ßß& '
m_textElementType
ßß( 9
==
ßß: <!
TMP_TextElementType
ßß= P
.
ßßP Q
	Character
ßßQ Z
?
®® 
elementAscentLine
®® '
*
®®( )!
currentElementScale
®®* =
/
®®> ?!
smallCapsMultiplier
®®@ S
+
®®T U
m_baselineOffset
®®V f
:
©© 
elementAscentLine
©© '
*
©©( )!
currentElementScale
©©* =
+
©©> ?
m_baselineOffset
©©@ P
;
©©P Q
float
¨¨ 
elementDescender
¨¨ &
=
¨¨' (
m_textElementType
¨¨) :
==
¨¨; =!
TMP_TextElementType
¨¨> Q
.
¨¨Q R
	Character
¨¨R [
?
≠≠  
elementDescentLine
≠≠ (
*
≠≠) *!
currentElementScale
≠≠+ >
/
≠≠? @!
smallCapsMultiplier
≠≠A T
+
≠≠U V
m_baselineOffset
≠≠W g
:
ÆÆ  
elementDescentLine
ÆÆ (
*
ÆÆ) *!
currentElementScale
ÆÆ+ >
+
ÆÆ? @
m_baselineOffset
ÆÆA Q
;
ÆÆQ R
float
∞∞ 
adjustedAscender
∞∞ &
=
∞∞' (
elementAscender
∞∞) 8
;
∞∞8 9
float
±± 
adjustedDescender
±± '
=
±±( )
elementDescender
±±* :
;
±±: ;
bool
≥≥ $
isFirstCharacterOfLine
≥≥ +
=
≥≥, -
m_characterCount
≥≥. >
==
≥≥? A$
m_firstCharacterOfLine
≥≥B X
;
≥≥X Y
if
µµ 
(
µµ $
isFirstCharacterOfLine
µµ *
||
µµ+ -
isWhiteSpace
µµ. :
==
µµ; =
false
µµ> C
)
µµC D
{
∂∂ 
if
∏∏ 
(
∏∏ 
m_baselineOffset
∏∏ (
!=
∏∏) +
$num
∏∏, -
)
∏∏- .
{
ππ 
adjustedAscender
∫∫ (
=
∫∫) *
Mathf
∫∫+ 0
.
∫∫0 1
Max
∫∫1 4
(
∫∫4 5
(
∫∫5 6
elementAscender
∫∫6 E
-
∫∫F G
m_baselineOffset
∫∫H X
)
∫∫X Y
/
∫∫Z [#
m_fontScaleMultiplier
∫∫\ q
,
∫∫q r
adjustedAscender∫∫s É
)∫∫É Ñ
;∫∫Ñ Ö
adjustedDescender
ªª )
=
ªª* +
Mathf
ªª, 1
.
ªª1 2
Min
ªª2 5
(
ªª5 6
(
ªª6 7
elementDescender
ªª7 G
-
ªªH I
m_baselineOffset
ªªJ Z
)
ªªZ [
/
ªª\ ]#
m_fontScaleMultiplier
ªª^ s
,
ªªs t 
adjustedDescenderªªu Ü
)ªªÜ á
;ªªá à
}
ºº 
m_maxLineAscender
ææ %
=
ææ& '
Mathf
ææ( -
.
ææ- .
Max
ææ. 1
(
ææ1 2
adjustedAscender
ææ2 B
,
ææB C
m_maxLineAscender
ææD U
)
ææU V
;
ææV W 
m_maxLineDescender
øø &
=
øø' (
Mathf
øø) .
.
øø. /
Min
øø/ 2
(
øø2 3
adjustedDescender
øø3 D
,
øøD E 
m_maxLineDescender
øøF X
)
øøX Y
;
øøY Z
}
¿¿ 
if
√√ 
(
√√ $
isFirstCharacterOfLine
√√ *
||
√√+ -
isWhiteSpace
√√. :
==
√√; =
false
√√> C
)
√√C D
{
ƒƒ 

m_textInfo
≈≈ 
.
≈≈ 
characterInfo
≈≈ ,
[
≈≈, -
m_characterCount
≈≈- =
]
≈≈= >
.
≈≈> ?
adjustedAscender
≈≈? O
=
≈≈P Q
adjustedAscender
≈≈R b
;
≈≈b c

m_textInfo
∆∆ 
.
∆∆ 
characterInfo
∆∆ ,
[
∆∆, -
m_characterCount
∆∆- =
]
∆∆= >
.
∆∆> ?
adjustedDescender
∆∆? P
=
∆∆Q R
adjustedDescender
∆∆S d
;
∆∆d e
m_ElementAscender
»» %
=
»»& '

m_textInfo
»»( 2
.
»»2 3
characterInfo
»»3 @
[
»»@ A
m_characterCount
»»A Q
]
»»Q R
.
»»R S
ascender
»»S [
=
»»\ ]
elementAscender
»»^ m
-
»»n o
m_lineOffset
»»p |
;
»»| } 
m_ElementDescender
…… &
=
……' (

m_textInfo
……) 3
.
……3 4
characterInfo
……4 A
[
……A B
m_characterCount
……B R
]
……R S
.
……S T
	descender
……T ]
=
……^ _
elementDescender
……` p
-
……q r
m_lineOffset
……s 
;…… Ä
}
   
else
ÀÀ 
{
ÃÃ 

m_textInfo
ÕÕ 
.
ÕÕ 
characterInfo
ÕÕ ,
[
ÕÕ, -
m_characterCount
ÕÕ- =
]
ÕÕ= >
.
ÕÕ> ?
adjustedAscender
ÕÕ? O
=
ÕÕP Q
m_maxLineAscender
ÕÕR c
;
ÕÕc d

m_textInfo
ŒŒ 
.
ŒŒ 
characterInfo
ŒŒ ,
[
ŒŒ, -
m_characterCount
ŒŒ- =
]
ŒŒ= >
.
ŒŒ> ?
adjustedDescender
ŒŒ? P
=
ŒŒQ R 
m_maxLineDescender
ŒŒS e
;
ŒŒe f
m_ElementAscender
–– %
=
––& '

m_textInfo
––( 2
.
––2 3
characterInfo
––3 @
[
––@ A
m_characterCount
––A Q
]
––Q R
.
––R S
ascender
––S [
=
––\ ]
m_maxLineAscender
––^ o
-
––p q
m_lineOffset
––r ~
;
––~  
m_ElementDescender
—— &
=
——' (

m_textInfo
——) 3
.
——3 4
characterInfo
——4 A
[
——A B
m_characterCount
——B R
]
——R S
.
——S T
	descender
——T ]
=
——^ _ 
m_maxLineDescender
——` r
-
——s t
m_lineOffset——u Å
;——Å Ç
}
““ 
if
’’ 
(
’’ 
m_lineNumber
’’  
==
’’! #
$num
’’$ %
||
’’& (
m_isNewPage
’’) 4
)
’’4 5
{
÷÷ 
if
◊◊ 
(
◊◊ $
isFirstCharacterOfLine
◊◊ .
||
◊◊/ 1
isWhiteSpace
◊◊2 >
==
◊◊? A
false
◊◊B G
)
◊◊G H
{
ÿÿ 
m_maxTextAscender
ŸŸ )
=
ŸŸ* +
m_maxLineAscender
ŸŸ, =
;
ŸŸ= >
m_maxCapHeight
⁄⁄ &
=
⁄⁄' (
Mathf
⁄⁄) .
.
⁄⁄. /
Max
⁄⁄/ 2
(
⁄⁄2 3
m_maxCapHeight
⁄⁄3 A
,
⁄⁄A B 
m_currentFontAsset
⁄⁄C U
.
⁄⁄U V

m_FaceInfo
⁄⁄V `
.
⁄⁄` a
capLine
⁄⁄a h
*
⁄⁄i j!
currentElementScale
⁄⁄k ~
/⁄⁄ Ä#
smallCapsMultiplier⁄⁄Å î
)⁄⁄î ï
;⁄⁄ï ñ
}
€€ 
}
‹‹ 
if
ﬂﬂ 
(
ﬂﬂ 
m_lineOffset
ﬂﬂ  
==
ﬂﬂ! #
$num
ﬂﬂ$ %
)
ﬂﬂ% &
{
‡‡ 
if
·· 
(
·· $
isFirstCharacterOfLine
·· .
||
··/ 1
isWhiteSpace
··2 >
==
··? A
false
··B G
)
··G H
m_PageAscender
‚‚ &
=
‚‚' (
m_PageAscender
‚‚) 7
>
‚‚8 9
elementAscender
‚‚: I
?
‚‚J K
m_PageAscender
‚‚L Z
:
‚‚[ \
elementAscender
‚‚] l
;
‚‚l m
}
„„ (
k_ComputeTextMetricsMarker
‰‰ *
.
‰‰* +
End
‰‰+ .
(
‰‰. /
)
‰‰/ 0
;
‰‰0 1

m_textInfo
ÈÈ 
.
ÈÈ 
characterInfo
ÈÈ (
[
ÈÈ( )
m_characterCount
ÈÈ) 9
]
ÈÈ9 :
.
ÈÈ: ;
	isVisible
ÈÈ; D
=
ÈÈE F
false
ÈÈG L
;
ÈÈL M
bool
ÎÎ  
isJustifiedOrFlush
ÎÎ '
=
ÎÎ( )
(
ÎÎ* +!
m_lineJustification
ÎÎ+ >
&
ÎÎ? @(
HorizontalAlignmentOptions
ÎÎA [
.
ÎÎ[ \
Flush
ÎÎ\ a
)
ÎÎa b
==
ÎÎc e)
HorizontalAlignmentOptionsÎÎf Ä
.ÎÎÄ Å
FlushÎÎÅ Ü
||ÎÎá â
(ÎÎä ã#
m_lineJustificationÎÎã û
&ÎÎü †*
HorizontalAlignmentOptionsÎÎ° ª
.ÎÎª º
	JustifiedÎÎº ≈
)ÎÎ≈ ∆
==ÎÎ« …*
HorizontalAlignmentOptionsÎÎ  ‰
.ÎÎ‰ Â
	JustifiedÎÎÂ Ó
;ÎÎÓ Ô
if
ÔÔ 
(
ÔÔ 
charCode
ÔÔ 
==
ÔÔ 
$num
ÔÔ  !
||
ÔÔ" $
(
ÔÔ% &
isWhiteSpace
ÔÔ& 2
==
ÔÔ3 5
false
ÔÔ6 ;
&&
ÔÔ< >
charCode
ÔÔ? G
!=
ÔÔH J
$num
ÔÔK Q
&&
ÔÔR T
charCode
ÔÔU ]
!=
ÔÔ^ `
$num
ÔÔa e
&&
ÔÔf h
charCode
ÔÔi q
!=
ÔÔr t
$num
ÔÔu y
)
ÔÔy z
||
ÔÔ{ }
(
ÔÔ~ 
charCodeÔÔ á
==ÔÔà ä
$numÔÔã è
&&ÔÔê í#
isSoftHyphenIgnoredÔÔì ¶
==ÔÔß ©
falseÔÔ™ Ø
)ÔÔØ ∞
||ÔÔ± ≥!
m_textElementTypeÔÔ¥ ≈
==ÔÔ∆ »#
TMP_TextElementTypeÔÔ… ‹
.ÔÔ‹ ›
SpriteÔÔ› „
)ÔÔ„ ‰
{
 ,
k_HandleVisibleCharacterMarker
ÒÒ 2
.
ÒÒ2 3
Begin
ÒÒ3 8
(
ÒÒ8 9
)
ÒÒ9 :
;
ÒÒ: ;

m_textInfo
ÛÛ 
.
ÛÛ 
characterInfo
ÛÛ ,
[
ÛÛ, -
m_characterCount
ÛÛ- =
]
ÛÛ= >
.
ÛÛ> ?
	isVisible
ÛÛ? H
=
ÛÛI J
true
ÛÛK O
;
ÛÛO P
float
òò 

marginLeft
òò $
=
òò% &
m_marginLeft
òò' 3
;
òò3 4
float
ôô 
marginRight
ôô %
=
ôô& '
m_marginRight
ôô( 5
;
ôô5 6
if
úú 
(
úú "
isInjectingCharacter
úú ,
)
úú, -
{
ùù 

marginLeft
ûû "
=
ûû# $

m_textInfo
ûû% /
.
ûû/ 0
lineInfo
ûû0 8
[
ûû8 9
m_lineNumber
ûû9 E
]
ûûE F
.
ûûF G

marginLeft
ûûG Q
;
ûûQ R
marginRight
üü #
=
üü$ %

m_textInfo
üü& 0
.
üü0 1
lineInfo
üü1 9
[
üü9 :
m_lineNumber
üü: F
]
üüF G
.
üüG H
marginRight
üüH S
;
üüS T
}
†† 
widthOfTextArea
¢¢ #
=
¢¢$ %
m_width
¢¢& -
!=
¢¢. 0
-
¢¢1 2
$num
¢¢2 3
?
¢¢4 5
Mathf
¢¢6 ;
.
¢¢; <
Min
¢¢< ?
(
¢¢? @
marginWidth
¢¢@ K
+
¢¢L M
$num
¢¢N U
-
¢¢V W

marginLeft
¢¢X b
-
¢¢c d
marginRight
¢¢e p
,
¢¢p q
m_width
¢¢r y
)
¢¢y z
:
¢¢{ |
marginWidth¢¢} à
+¢¢â ä
$num¢¢ã í
-¢¢ì î

marginLeft¢¢ï ü
-¢¢† °
marginRight¢¢¢ ≠
;¢¢≠ Æ
float
•• 
	textWidth
•• #
=
••$ %
Mathf
••& +
.
••+ ,
Abs
••, /
(
••/ 0

m_xAdvance
••0 :
)
••: ;
+
••< =
(
••> ?
!
••? @
m_isRightToLeft
••@ O
?
••P Q!
currentGlyphMetrics
••R e
.
••e f
horizontalAdvance
••f w
:
••x y
$num
••z {
)
••{ |
*
••} ~
(•• Ä
$num••Ä Å
-••Ç É#
m_charWidthAdjDelta••Ñ ó
)••ó ò
*••ô ö
(••õ ú
charCode••ú §
==••• ß
$num••® ¨
?••≠ Æ-
currentElementUnmodifiedScale••Ø Ã
:••Õ Œ#
currentElementScale••œ ‚
)••‚ „
;••„ ‰
float
¶¶ 

textHeight
¶¶ $
=
¶¶% &
m_maxTextAscender
¶¶' 8
-
¶¶9 :
(
¶¶; < 
m_maxLineDescender
¶¶< N
-
¶¶O P
m_lineOffset
¶¶Q ]
)
¶¶] ^
+
¶¶_ `
(
¶¶a b
m_lineOffset
¶¶b n
>
¶¶o p
$num
¶¶q r
&&
¶¶s u$
m_IsDrivenLineSpacing¶¶v ã
==¶¶å é
false¶¶è î
?¶¶ï ñ!
m_maxLineAscender¶¶ó ®
-¶¶© ™%
m_startOfLineAscender¶¶´ ¿
:¶¶¡ ¬
$num¶¶√ ƒ
)¶¶ƒ ≈
;¶¶≈ ∆
int
®® "
testedCharacterCount
®® ,
=
®®- .
m_characterCount
®®/ ?
;
®®? @
if
¨¨ 
(
¨¨ 

textHeight
¨¨ "
>
¨¨# $
marginHeight
¨¨% 1
+
¨¨2 3
$num
¨¨4 ;
)
¨¨; <
{
≠≠ 0
"k_HandleVerticalLineBreakingMarker
ÆÆ :
.
ÆÆ: ;
Begin
ÆÆ; @
(
ÆÆ@ A
)
ÆÆA B
;
ÆÆB C
if
±± 
(
±± +
m_firstOverflowCharacterIndex
±± 9
==
±±: <
-
±±= >
$num
±±> ?
)
±±? @+
m_firstOverflowCharacterIndex
≤≤ 9
=
≤≤: ;
m_characterCount
≤≤< L
;
≤≤L M
if
µµ 
(
µµ  
m_enableAutoSizing
µµ .
)
µµ. /
{
∂∂ 
if
ππ 
(
ππ   
m_lineSpacingDelta
ππ  2
>
ππ3 4
m_lineSpacingMax
ππ5 E
&&
ππF H
m_lineOffset
ππI U
>
ππV W
$num
ππX Y
&&
ππZ \&
m_AutoSizeIterationCount
ππ] u
<
ππv w*
m_AutoSizeMaxIterationCountππx ì
)ππì î
{
∫∫ 
float
ªª  %
adjustmentDelta
ªª& 5
=
ªª6 7
(
ªª8 9
marginHeight
ªª9 E
-
ªªF G

textHeight
ªªH R
)
ªªR S
/
ªªT U
m_lineNumber
ªªV b
;
ªªb c 
m_lineSpacingDelta
ΩΩ  2
=
ΩΩ3 4
Mathf
ΩΩ5 :
.
ΩΩ: ;
Max
ΩΩ; >
(
ΩΩ> ? 
m_lineSpacingDelta
ΩΩ? Q
+
ΩΩR S
adjustmentDelta
ΩΩT c
/
ΩΩd e
	baseScale
ΩΩf o
,
ΩΩo p
m_lineSpacingMaxΩΩq Å
)ΩΩÅ Ç
;ΩΩÇ É0
"k_HandleVerticalLineBreakingMarker
¿¿  B
.
¿¿B C
End
¿¿C F
(
¿¿F G
)
¿¿G H
;
¿¿H I,
k_HandleVisibleCharacterMarker
¡¡  >
.
¡¡> ?
End
¡¡? B
(
¡¡B C
)
¡¡C D
;
¡¡D E(
k_GenerateTextPhaseIMarker
¬¬  :
.
¬¬: ;
End
¬¬; >
(
¬¬> ?
)
¬¬? @
;
¬¬@ A"
k_GenerateTextMarker
√√  4
.
√√4 5
End
√√5 8
(
√√8 9
)
√√9 :
;
√√: ;
return
ƒƒ  &
;
ƒƒ& '
}
≈≈ 
if
ÀÀ 
(
ÀÀ  

m_fontSize
ÀÀ  *
>
ÀÀ+ ,
m_fontSizeMin
ÀÀ- :
&&
ÀÀ; =&
m_AutoSizeIterationCount
ÀÀ> V
<
ÀÀW X)
m_AutoSizeMaxIterationCount
ÀÀY t
)
ÀÀt u
{
ÃÃ 
m_maxFontSize
ÕÕ  -
=
ÕÕ. /

m_fontSize
ÕÕ0 :
;
ÕÕ: ;
float
œœ  %
	sizeDelta
œœ& /
=
œœ0 1
Mathf
œœ2 7
.
œœ7 8
Max
œœ8 ;
(
œœ; <
(
œœ< =

m_fontSize
œœ= G
-
œœH I
m_minFontSize
œœJ W
)
œœW X
/
œœY Z
$num
œœ[ \
,
œœ\ ]
$num
œœ^ c
)
œœc d
;
œœd e

m_fontSize
––  *
-=
––+ -
	sizeDelta
––. 7
;
––7 8

m_fontSize
——  *
=
——+ ,
Mathf
——- 2
.
——2 3
Max
——3 6
(
——6 7
(
——7 8
int
——8 ;
)
——; <
(
——< =

m_fontSize
——= G
*
——H I
$num
——J L
+
——M N
$num
——O S
)
——S T
/
——U V
$num
——W Z
,
——Z [
m_fontSizeMin
——\ i
)
——i j
;
——j k0
"k_HandleVerticalLineBreakingMarker
‘‘  B
.
‘‘B C
End
‘‘C F
(
‘‘F G
)
‘‘G H
;
‘‘H I,
k_HandleVisibleCharacterMarker
’’  >
.
’’> ?
End
’’? B
(
’’B C
)
’’C D
;
’’D E(
k_GenerateTextPhaseIMarker
÷÷  :
.
÷÷: ;
End
÷÷; >
(
÷÷> ?
)
÷÷? @
;
÷÷@ A"
k_GenerateTextMarker
◊◊  4
.
◊◊4 5
End
◊◊5 8
(
◊◊8 9
)
◊◊9 :
;
◊◊: ;
return
ÿÿ  &
;
ÿÿ& '
}
ŸŸ 
}
€€ 
switch
ﬁﬁ 
(
ﬁﬁ  
m_overflowMode
ﬁﬁ  .
)
ﬁﬁ. /
{
ﬂﬂ 
case
‡‡  
TextOverflowModes
‡‡! 2
.
‡‡2 3
Overflow
‡‡3 ;
:
‡‡; <
case
··  
TextOverflowModes
··! 2
.
··2 3

ScrollRect
··3 =
:
··= >
case
‚‚  
TextOverflowModes
‚‚! 2
.
‚‚2 3
Masking
‚‚3 :
:
‚‚: ;
break
‰‰  %
;
‰‰% &
case
ÊÊ  
TextOverflowModes
ÊÊ! 2
.
ÊÊ2 3
Truncate
ÊÊ3 ;
:
ÊÊ; <
i
ÁÁ  !
=
ÁÁ" #&
RestoreWordWrappingState
ÁÁ$ <
(
ÁÁ< =
ref
ÁÁ= @#
m_SavedLastValidState
ÁÁA V
)
ÁÁV W
;
ÁÁW X#
characterToSubstitute
ÈÈ  5
.
ÈÈ5 6
index
ÈÈ6 ;
=
ÈÈ< ="
testedCharacterCount
ÈÈ> R
;
ÈÈR S#
characterToSubstitute
ÍÍ  5
.
ÍÍ5 6
unicode
ÍÍ6 =
=
ÍÍ> ?
$num
ÍÍ@ D
;
ÍÍD E0
"k_HandleVerticalLineBreakingMarker
ÎÎ  B
.
ÎÎB C
End
ÎÎC F
(
ÎÎF G
)
ÎÎG H
;
ÎÎH I,
k_HandleVisibleCharacterMarker
ÏÏ  >
.
ÏÏ> ?
End
ÏÏ? B
(
ÏÏB C
)
ÏÏC D
;
ÏÏD E
continue
ÌÌ  (
;
ÌÌ( )
case
ÔÔ  
TextOverflowModes
ÔÔ! 2
.
ÔÔ2 3
Ellipsis
ÔÔ3 ;
:
ÔÔ; <
if
  "
(
# $/
!m_EllipsisInsertionCandidateStack
$ E
.
E F
Count
F K
==
L N
$num
O P
)
P Q
{
ÒÒ  !
i
ÚÚ$ %
=
ÚÚ& '
-
ÚÚ( )
$num
ÚÚ) *
;
ÚÚ* +
m_characterCount
ÛÛ$ 4
=
ÛÛ5 6
$num
ÛÛ7 8
;
ÛÛ8 9#
characterToSubstitute
ÙÙ$ 9
.
ÙÙ9 :
index
ÙÙ: ?
=
ÙÙ@ A
$num
ÙÙB C
;
ÙÙC D#
characterToSubstitute
ıı$ 9
.
ıı9 :
unicode
ıı: A
=
ııB C
$num
ııD H
;
ııH I$
m_firstCharacterOfLine
ˆˆ$ :
=
ˆˆ; <
$num
ˆˆ= >
;
ˆˆ> ?0
"k_HandleVerticalLineBreakingMarker
˜˜$ F
.
˜˜F G
End
˜˜G J
(
˜˜J K
)
˜˜K L
;
˜˜L M,
k_HandleVisibleCharacterMarker
¯¯$ B
.
¯¯B C
End
¯¯C F
(
¯¯F G
)
¯¯G H
;
¯¯H I
continue
˘˘$ ,
;
˘˘, -
}
˙˙  !
var
¸¸  #
ellipsisState
¸¸$ 1
=
¸¸2 3/
!m_EllipsisInsertionCandidateStack
¸¸4 U
.
¸¸U V
Pop
¸¸V Y
(
¸¸Y Z
)
¸¸Z [
;
¸¸[ \
i
˝˝  !
=
˝˝" #&
RestoreWordWrappingState
˝˝$ <
(
˝˝< =
ref
˝˝= @
ellipsisState
˝˝A N
)
˝˝N O
;
˝˝O P
i
ˇˇ  !
-=
ˇˇ" $
$num
ˇˇ% &
;
ˇˇ& '
m_characterCount
ÄÄ  0
-=
ÄÄ1 3
$num
ÄÄ4 5
;
ÄÄ5 6#
characterToSubstitute
ÅÅ  5
.
ÅÅ5 6
index
ÅÅ6 ;
=
ÅÅ< =
m_characterCount
ÅÅ> N
;
ÅÅN O#
characterToSubstitute
ÇÇ  5
.
ÇÇ5 6
unicode
ÇÇ6 =
=
ÇÇ> ?
$num
ÇÇ@ F
;
ÇÇF G
restoreCount
ÑÑ  ,
+=
ÑÑ- /
$num
ÑÑ0 1
;
ÑÑ1 20
"k_HandleVerticalLineBreakingMarker
ÖÖ  B
.
ÖÖB C
End
ÖÖC F
(
ÖÖF G
)
ÖÖG H
;
ÖÖH I,
k_HandleVisibleCharacterMarker
ÜÜ  >
.
ÜÜ> ?
End
ÜÜ? B
(
ÜÜB C
)
ÜÜC D
;
ÜÜD E
continue
áá  (
;
áá( )
case
ââ  
TextOverflowModes
ââ! 2
.
ââ2 3
Linked
ââ3 9
:
ââ9 :
i
ää  !
=
ää" #&
RestoreWordWrappingState
ää$ <
(
ää< =
ref
ää= @#
m_SavedLastValidState
ääA V
)
ääV W
;
ääW X
if
åå  "
(
åå# $#
m_linkedTextComponent
åå$ 9
!=
åå: <
null
åå= A
)
ååA B
{
çç  !#
m_linkedTextComponent
éé$ 9
.
éé9 :
text
éé: >
=
éé? @
text
ééA E
;
ééE F#
m_linkedTextComponent
èè$ 9
.
èè9 :
m_inputSource
èè: G
=
èèH I
m_inputSource
èèJ W
;
èèW X#
m_linkedTextComponent
êê$ 9
.
êê9 :#
firstVisibleCharacter
êê: O
=
êêP Q
m_characterCount
êêR b
;
êêb c#
m_linkedTextComponent
ëë$ 9
.
ëë9 :
ForceMeshUpdate
ëë: I
(
ëëI J
)
ëëJ K
;
ëëK L
m_isTextTruncated
ìì$ 5
=
ìì6 7
true
ìì8 <
;
ìì< =
}
îî  !#
characterToSubstitute
óó  5
.
óó5 6
index
óó6 ;
=
óó< ="
testedCharacterCount
óó> R
;
óóR S#
characterToSubstitute
òò  5
.
òò5 6
unicode
òò6 =
=
òò> ?
$num
òò@ D
;
òòD E0
"k_HandleVerticalLineBreakingMarker
ôô  B
.
ôôB C
End
ôôC F
(
ôôF G
)
ôôG H
;
ôôH I,
k_HandleVisibleCharacterMarker
öö  >
.
öö> ?
End
öö? B
(
ööB C
)
ööC D
;
ööD E
continue
õõ  (
;
õõ( )
case
ùù  
TextOverflowModes
ùù! 2
.
ùù2 3
Page
ùù3 7
:
ùù7 8
if
üü  "
(
üü# $
i
üü$ %
<
üü& '
$num
üü( )
||
üü* ,"
testedCharacterCount
üü- A
==
üüB D
$num
üüE F
)
üüF G
{
††  !
i
°°$ %
=
°°& '
-
°°( )
$num
°°) *
;
°°* +
m_characterCount
¢¢$ 4
=
¢¢5 6
$num
¢¢7 8
;
¢¢8 9#
characterToSubstitute
££$ 9
.
££9 :
index
££: ?
=
££@ A
$num
££B C
;
££C D#
characterToSubstitute
§§$ 9
.
§§9 :
unicode
§§: A
=
§§B C
$num
§§D H
;
§§H I0
"k_HandleVerticalLineBreakingMarker
••$ F
.
••F G
End
••G J
(
••J K
)
••K L
;
••L M,
k_HandleVisibleCharacterMarker
¶¶$ B
.
¶¶B C
End
¶¶C F
(
¶¶F G
)
¶¶G H
;
¶¶H I
continue
ßß$ ,
;
ßß, -
}
®®  !
else
©©  $
if
©©% '
(
©©( )
m_maxLineAscender
©©) :
-
©©; < 
m_maxLineDescender
©©= O
>
©©P Q
marginHeight
©©R ^
+
©©_ `
$num
©©a h
)
©©h i
{
™™  !
i
≠≠$ %
=
≠≠& '&
RestoreWordWrappingState
≠≠( @
(
≠≠@ A
ref
≠≠A D
m_SavedLineState
≠≠E U
)
≠≠U V
;
≠≠V W#
characterToSubstitute
ØØ$ 9
.
ØØ9 :
index
ØØ: ?
=
ØØ@ A"
testedCharacterCount
ØØB V
;
ØØV W#
characterToSubstitute
∞∞$ 9
.
∞∞9 :
unicode
∞∞: A
=
∞∞B C
$num
∞∞D H
;
∞∞H I0
"k_HandleVerticalLineBreakingMarker
±±$ F
.
±±F G
End
±±G J
(
±±J K
)
±±K L
;
±±L M,
k_HandleVisibleCharacterMarker
≤≤$ B
.
≤≤B C
End
≤≤C F
(
≤≤F G
)
≤≤G H
;
≤≤H I
continue
≥≥$ ,
;
≥≥, -
}
¥¥  !
i
∑∑  !
=
∑∑" #&
RestoreWordWrappingState
∑∑$ <
(
∑∑< =
ref
∑∑= @
m_SavedLineState
∑∑A Q
)
∑∑Q R
;
∑∑R S
m_isNewPage
ππ  +
=
ππ, -
true
ππ. 2
;
ππ2 3$
m_firstCharacterOfLine
∫∫  6
=
∫∫7 8
m_characterCount
∫∫9 I
;
∫∫I J
m_maxLineAscender
ªª  1
=
ªª2 3"
k_LargeNegativeFloat
ªª4 H
;
ªªH I 
m_maxLineDescender
ºº  2
=
ºº3 4"
k_LargePositiveFloat
ºº5 I
;
ººI J#
m_startOfLineAscender
ΩΩ  5
=
ΩΩ6 7
$num
ΩΩ8 9
;
ΩΩ9 :

m_xAdvance
øø  *
=
øø+ ,
$num
øø- .
+
øø/ 0

tag_Indent
øø1 ;
;
øø; <
m_lineOffset
¿¿  ,
=
¿¿- .
$num
¿¿/ 0
;
¿¿0 1
m_maxTextAscender
¡¡  1
=
¡¡2 3
$num
¡¡4 5
;
¡¡5 6
m_PageAscender
¬¬  .
=
¬¬/ 0
$num
¬¬1 2
;
¬¬2 3
m_lineNumber
√√  ,
+=
√√- /
$num
√√0 1
;
√√1 2
m_pageNumber
ƒƒ  ,
+=
ƒƒ- /
$num
ƒƒ0 1
;
ƒƒ1 20
"k_HandleVerticalLineBreakingMarker
««  B
.
««B C
End
««C F
(
««F G
)
««G H
;
««H I,
k_HandleVisibleCharacterMarker
»»  >
.
»»> ?
End
»»? B
(
»»B C
)
»»C D
;
»»D E
continue
……  (
;
……( )
}
   0
"k_HandleVerticalLineBreakingMarker
ÃÃ :
.
ÃÃ: ;
End
ÃÃ; >
(
ÃÃ> ?
)
ÃÃ? @
;
ÃÃ@ A
}
ÕÕ 
if
”” 
(
”” 
	textWidth
”” !
>
””" #
widthOfTextArea
””$ 3
*
””4 5
(
””6 7 
isJustifiedOrFlush
””7 I
?
””J K
$num
””L Q
:
””R S
$num
””T X
)
””X Y
)
””Y Z
{
‘‘ 2
$k_HandleHorizontalLineBreakingMarker
’’ <
.
’’< =
Begin
’’= B
(
’’B C
)
’’C D
;
’’D E
if
ÿÿ 
(
ÿÿ "
m_enableWordWrapping
ÿÿ 0
&&
ÿÿ1 3
m_characterCount
ÿÿ4 D
!=
ÿÿE G$
m_firstCharacterOfLine
ÿÿH ^
)
ÿÿ^ _
{
ŸŸ 
i
€€ 
=
€€ &
RestoreWordWrappingState
€€  8
(
€€8 9
ref
€€9 <"
m_SavedWordWrapState
€€= Q
)
€€Q R
;
€€R S
float
ﬁﬁ !
lineOffsetDelta
ﬁﬁ" 1
=
ﬁﬁ2 3
$num
ﬁﬁ4 5
;
ﬁﬁ5 6
if
ﬂﬂ 
(
ﬂﬂ  
m_lineHeight
ﬂﬂ  ,
==
ﬂﬂ- /
TMP_Math
ﬂﬂ0 8
.
ﬂﬂ8 9
FLOAT_UNSET
ﬂﬂ9 D
)
ﬂﬂD E
{
‡‡ 
float
··  %
ascender
··& .
=
··/ 0

m_textInfo
··1 ;
.
··; <
characterInfo
··< I
[
··I J
m_characterCount
··J Z
]
··Z [
.
··[ \
adjustedAscender
··\ l
;
··l m
lineOffsetDelta
‚‚  /
=
‚‚0 1
(
‚‚2 3
m_lineOffset
‚‚3 ?
>
‚‚@ A
$num
‚‚B C
&&
‚‚D F#
m_IsDrivenLineSpacing
‚‚G \
==
‚‚] _
false
‚‚` e
?
‚‚f g
m_maxLineAscender
‚‚h y
-
‚‚z {$
m_startOfLineAscender‚‚| ë
:‚‚í ì
$num‚‚î ï
)‚‚ï ñ
-‚‚ó ò"
m_maxLineDescender‚‚ô ´
+‚‚¨ ≠
ascender‚‚Æ ∂
+‚‚∑ ∏
(‚‚π ∫
lineGap‚‚∫ ¡
+‚‚¬ √"
m_lineSpacingDelta‚‚ƒ ÷
)‚‚÷ ◊
*‚‚ÿ Ÿ
	baseScale‚‚⁄ „
+‚‚‰ Â
m_lineSpacing‚‚Ê Û
*‚‚Ù ı
currentEmScale‚‚ˆ Ñ
;‚‚Ñ Ö
}
„„ 
else
‰‰  
{
ÂÂ 
lineOffsetDelta
ÊÊ  /
=
ÊÊ0 1
m_lineHeight
ÊÊ2 >
+
ÊÊ? @
m_lineSpacing
ÊÊA N
*
ÊÊO P
currentEmScale
ÊÊQ _
;
ÊÊ_ `#
m_IsDrivenLineSpacing
ÁÁ  5
=
ÁÁ6 7
true
ÁÁ8 <
;
ÁÁ< =
}
ËË 
float
ÎÎ !
newTextHeight
ÎÎ" /
=
ÎÎ0 1
m_maxTextAscender
ÎÎ2 C
+
ÎÎD E
lineOffsetDelta
ÎÎF U
+
ÎÎV W
m_lineOffset
ÎÎX d
-
ÎÎe f

m_textInfo
ÎÎg q
.
ÎÎq r
characterInfo
ÎÎr 
[ÎÎ Ä 
m_characterCountÎÎÄ ê
]ÎÎê ë
.ÎÎë í!
adjustedDescenderÎÎí £
;ÎÎ£ §
if
ÔÔ 
(
ÔÔ  

m_textInfo
ÔÔ  *
.
ÔÔ* +
characterInfo
ÔÔ+ 8
[
ÔÔ8 9
m_characterCount
ÔÔ9 I
-
ÔÔJ K
$num
ÔÔL M
]
ÔÔM N
.
ÔÔN O
	character
ÔÔO X
==
ÔÔY [
$num
ÔÔ\ `
&&
ÔÔa c!
isSoftHyphenIgnored
ÔÔd w
==
ÔÔx z
falseÔÔ{ Ä
)ÔÔÄ Å
{
 
if
ÚÚ  "
(
ÚÚ# $
m_overflowMode
ÚÚ$ 2
==
ÚÚ3 5
TextOverflowModes
ÚÚ6 G
.
ÚÚG H
Overflow
ÚÚH P
||
ÚÚQ S
newTextHeight
ÚÚT a
<
ÚÚb c
marginHeight
ÚÚd p
+
ÚÚq r
$num
ÚÚs z
)
ÚÚz {
{
ÛÛ  !#
characterToSubstitute
ÙÙ$ 9
.
ÙÙ9 :
index
ÙÙ: ?
=
ÙÙ@ A
m_characterCount
ÙÙB R
-
ÙÙS T
$num
ÙÙU V
;
ÙÙV W#
characterToSubstitute
ıı$ 9
.
ıı9 :
unicode
ıı: A
=
ııB C
$num
ııD H
;
ııH I
i
˜˜$ %
-=
˜˜& (
$num
˜˜) *
;
˜˜* +
m_characterCount
¯¯$ 4
-=
¯¯5 7
$num
¯¯8 9
;
¯¯9 :2
$k_HandleHorizontalLineBreakingMarker
˘˘$ H
.
˘˘H I
End
˘˘I L
(
˘˘L M
)
˘˘M N
;
˘˘N O,
k_HandleVisibleCharacterMarker
˙˙$ B
.
˙˙B C
End
˙˙C F
(
˙˙F G
)
˙˙G H
;
˙˙H I
continue
˚˚$ ,
;
˚˚, -
}
¸¸  !
}
˝˝ !
isSoftHyphenIgnored
ˇˇ /
=
ˇˇ0 1
false
ˇˇ2 7
;
ˇˇ7 8
if
ÇÇ 
(
ÇÇ  

m_textInfo
ÇÇ  *
.
ÇÇ* +
characterInfo
ÇÇ+ 8
[
ÇÇ8 9
m_characterCount
ÇÇ9 I
]
ÇÇI J
.
ÇÇJ K
	character
ÇÇK T
==
ÇÇU W
$num
ÇÇX \
)
ÇÇ\ ]
{
ÉÉ !
isSoftHyphenIgnored
ÑÑ  3
=
ÑÑ4 5
true
ÑÑ6 :
;
ÑÑ: ;2
$k_HandleHorizontalLineBreakingMarker
ÖÖ  D
.
ÖÖD E
End
ÖÖE H
(
ÖÖH I
)
ÖÖI J
;
ÖÖJ K,
k_HandleVisibleCharacterMarker
ÜÜ  >
.
ÜÜ> ?
End
ÜÜ? B
(
ÜÜB C
)
ÜÜC D
;
ÜÜD E
continue
áá  (
;
áá( )
}
àà 
if
åå 
(
åå   
m_enableAutoSizing
åå  2
&&
åå3 5
isFirstWordOfLine
åå6 G
)
ååG H
{
çç 
if
êê  "
(
êê# $!
m_charWidthAdjDelta
êê$ 7
<
êê8 9
m_charWidthMaxAdj
êê: K
/
êêL M
$num
êêN Q
&&
êêR T&
m_AutoSizeIterationCount
êêU m
<
êên o*
m_AutoSizeMaxIterationCountêêp ã
)êêã å
{
ëë  !
float
íí$ )
adjustedTextWidth
íí* ;
=
íí< =
	textWidth
íí> G
;
ííG H
if
ïï$ &
(
ïï' (!
m_charWidthAdjDelta
ïï( ;
>
ïï< =
$num
ïï> ?
)
ïï? @
adjustedTextWidth
ññ( 9
/=
ññ: <
$num
ññ= ?
-
ññ@ A!
m_charWidthAdjDelta
ññB U
;
ññU V
float
òò$ )
adjustmentDelta
òò* 9
=
òò: ;
	textWidth
òò< E
-
òòF G
(
òòH I
widthOfTextArea
òòI X
-
òòY Z
$num
òò[ b
)
òòb c
*
òòd e
(
òòf g 
isJustifiedOrFlush
òòg y
?
òòz {
$numòò| Å
:òòÇ É
$numòòÑ à
)òòà â
;òòâ ä!
m_charWidthAdjDelta
ôô$ 7
+=
ôô8 :
adjustmentDelta
ôô; J
/
ôôK L
adjustedTextWidth
ôôM ^
;
ôô^ _!
m_charWidthAdjDelta
öö$ 7
=
öö8 9
Mathf
öö: ?
.
öö? @
Min
öö@ C
(
ööC D!
m_charWidthAdjDelta
ööD W
,
ööW X
m_charWidthMaxAdj
ööY j
/
öök l
$num
ööm p
)
ööp q
;
ööq r2
$k_HandleHorizontalLineBreakingMarker
ùù$ H
.
ùùH I
End
ùùI L
(
ùùL M
)
ùùM N
;
ùùN O,
k_HandleVisibleCharacterMarker
ûû$ B
.
ûûB C
End
ûûC F
(
ûûF G
)
ûûG H
;
ûûH I(
k_GenerateTextPhaseIMarker
üü$ >
.
üü> ?
End
üü? B
(
üüB C
)
üüC D
;
üüD E"
k_GenerateTextMarker
††$ 8
.
††8 9
End
††9 <
(
††< =
)
††= >
;
††> ?
return
°°$ *
;
°°* +
}
¢¢  !
if
ßß  "
(
ßß# $

m_fontSize
ßß$ .
>
ßß/ 0
m_fontSizeMin
ßß1 >
&&
ßß? A&
m_AutoSizeIterationCount
ßßB Z
<
ßß[ \)
m_AutoSizeMaxIterationCount
ßß] x
)
ßßx y
{
®®  !
m_maxFontSize
©©$ 1
=
©©2 3

m_fontSize
©©4 >
;
©©> ?
float
´´$ )
	sizeDelta
´´* 3
=
´´4 5
Mathf
´´6 ;
.
´´; <
Max
´´< ?
(
´´? @
(
´´@ A

m_fontSize
´´A K
-
´´L M
m_minFontSize
´´N [
)
´´[ \
/
´´] ^
$num
´´_ `
,
´´` a
$num
´´b g
)
´´g h
;
´´h i

m_fontSize
¨¨$ .
-=
¨¨/ 1
	sizeDelta
¨¨2 ;
;
¨¨; <

m_fontSize
≠≠$ .
=
≠≠/ 0
Mathf
≠≠1 6
.
≠≠6 7
Max
≠≠7 :
(
≠≠: ;
(
≠≠; <
int
≠≠< ?
)
≠≠? @
(
≠≠@ A

m_fontSize
≠≠A K
*
≠≠L M
$num
≠≠N P
+
≠≠Q R
$num
≠≠S W
)
≠≠W X
/
≠≠Y Z
$num
≠≠[ ^
,
≠≠^ _
m_fontSizeMin
≠≠` m
)
≠≠m n
;
≠≠n o2
$k_HandleHorizontalLineBreakingMarker
∞∞$ H
.
∞∞H I
End
∞∞I L
(
∞∞L M
)
∞∞M N
;
∞∞N O,
k_HandleVisibleCharacterMarker
±±$ B
.
±±B C
End
±±C F
(
±±F G
)
±±G H
;
±±H I(
k_GenerateTextPhaseIMarker
≤≤$ >
.
≤≤> ?
End
≤≤? B
(
≤≤B C
)
≤≤C D
;
≤≤D E"
k_GenerateTextMarker
≥≥$ 8
.
≥≥8 9
End
≥≥9 <
(
≥≥< =
)
≥≥= >
;
≥≥> ?
return
¥¥$ *
;
¥¥* +
}
µµ  !
}
∑∑ 
int
ªª (
savedSoftLineBreakingSpace
ªª  :
=
ªª; <'
m_SavedSoftLineBreakState
ªª= V
.
ªªV W 
previous_WordBreak
ªªW i
;
ªªi j
if
ºº 
(
ºº  
isFirstWordOfLine
ºº  1
&&
ºº2 4(
savedSoftLineBreakingSpace
ºº5 O
!=
ººP R
-
ººS T
$num
ººT U
)
ººU V
{
ΩΩ 
if
ææ  "
(
ææ# $(
savedSoftLineBreakingSpace
ææ$ >
!=
ææ? A
lastSoftLineBreak
ææB S
)
ææS T
{
øø  !
i
¿¿$ %
=
¿¿& '&
RestoreWordWrappingState
¿¿( @
(
¿¿@ A
ref
¿¿A D'
m_SavedSoftLineBreakState
¿¿E ^
)
¿¿^ _
;
¿¿_ `
lastSoftLineBreak
¡¡$ 5
=
¡¡6 7(
savedSoftLineBreakingSpace
¡¡8 R
;
¡¡R S
if
ƒƒ$ &
(
ƒƒ' (

m_textInfo
ƒƒ( 2
.
ƒƒ2 3
characterInfo
ƒƒ3 @
[
ƒƒ@ A
m_characterCount
ƒƒA Q
-
ƒƒR S
$num
ƒƒT U
]
ƒƒU V
.
ƒƒV W
	character
ƒƒW `
==
ƒƒa c
$num
ƒƒd h
)
ƒƒh i
{
≈≈$ %#
characterToSubstitute
∆∆( =
.
∆∆= >
index
∆∆> C
=
∆∆D E
m_characterCount
∆∆F V
-
∆∆W X
$num
∆∆Y Z
;
∆∆Z [#
characterToSubstitute
««( =
.
««= >
unicode
««> E
=
««F G
$num
««H L
;
««L M
i
……( )
-=
……* ,
$num
……- .
;
……. /
m_characterCount
  ( 8
-=
  9 ;
$num
  < =
;
  = >2
$k_HandleHorizontalLineBreakingMarker
ÀÀ( L
.
ÀÀL M
End
ÀÀM P
(
ÀÀP Q
)
ÀÀQ R
;
ÀÀR S,
k_HandleVisibleCharacterMarker
ÃÃ( F
.
ÃÃF G
End
ÃÃG J
(
ÃÃJ K
)
ÃÃK L
;
ÃÃL M
continue
ÕÕ( 0
;
ÕÕ0 1
}
ŒŒ$ %
}
œœ  !
}
–– 
if
”” 
(
””  
newTextHeight
””  -
>
””. /
marginHeight
””0 <
+
””= >
$num
””? F
)
””F G
{
‘‘ 0
"k_HandleVerticalLineBreakingMarker
’’  B
.
’’B C
Begin
’’C H
(
’’H I
)
’’I J
;
’’J K
if
ÿÿ  "
(
ÿÿ# $+
m_firstOverflowCharacterIndex
ÿÿ$ A
==
ÿÿB D
-
ÿÿE F
$num
ÿÿF G
)
ÿÿG H+
m_firstOverflowCharacterIndex
ŸŸ$ A
=
ŸŸB C
m_characterCount
ŸŸD T
;
ŸŸT U
if
‹‹  "
(
‹‹# $ 
m_enableAutoSizing
‹‹$ 6
)
‹‹6 7
{
››  !
if
‡‡$ &
(
‡‡' ( 
m_lineSpacingDelta
‡‡( :
>
‡‡; <
m_lineSpacingMax
‡‡= M
&&
‡‡N P&
m_AutoSizeIterationCount
‡‡Q i
<
‡‡j k*
m_AutoSizeMaxIterationCount‡‡l á
)‡‡á à
{
··$ %
float
‚‚( -
adjustmentDelta
‚‚. =
=
‚‚> ?
(
‚‚@ A
marginHeight
‚‚A M
-
‚‚N O
newTextHeight
‚‚P ]
)
‚‚] ^
/
‚‚_ `
(
‚‚a b
m_lineNumber
‚‚b n
+
‚‚o p
$num
‚‚q r
)
‚‚r s
;
‚‚s t 
m_lineSpacingDelta
‰‰( :
=
‰‰; <
Mathf
‰‰= B
.
‰‰B C
Max
‰‰C F
(
‰‰F G 
m_lineSpacingDelta
‰‰G Y
+
‰‰Z [
adjustmentDelta
‰‰\ k
/
‰‰l m
	baseScale
‰‰n w
,
‰‰w x
m_lineSpacingMax‰‰y â
)‰‰â ä
;‰‰ä ã0
"k_HandleVerticalLineBreakingMarker
ÁÁ( J
.
ÁÁJ K
End
ÁÁK N
(
ÁÁN O
)
ÁÁO P
;
ÁÁP Q2
$k_HandleHorizontalLineBreakingMarker
ËË( L
.
ËËL M
End
ËËM P
(
ËËP Q
)
ËËQ R
;
ËËR S,
k_HandleVisibleCharacterMarker
ÈÈ( F
.
ÈÈF G
End
ÈÈG J
(
ÈÈJ K
)
ÈÈK L
;
ÈÈL M(
k_GenerateTextPhaseIMarker
ÍÍ( B
.
ÍÍB C
End
ÍÍC F
(
ÍÍF G
)
ÍÍG H
;
ÍÍH I"
k_GenerateTextMarker
ÎÎ( <
.
ÎÎ< =
End
ÎÎ= @
(
ÎÎ@ A
)
ÎÎA B
;
ÎÎB C
return
ÏÏ( .
;
ÏÏ. /
}
ÌÌ$ %
if
ÚÚ$ &
(
ÚÚ' (!
m_charWidthAdjDelta
ÚÚ( ;
<
ÚÚ< =
m_charWidthMaxAdj
ÚÚ> O
/
ÚÚP Q
$num
ÚÚR U
&&
ÚÚV X&
m_AutoSizeIterationCount
ÚÚY q
<
ÚÚr s*
m_AutoSizeMaxIterationCountÚÚt è
)ÚÚè ê
{
ÛÛ$ %
float
ÙÙ( -
adjustedTextWidth
ÙÙ. ?
=
ÙÙ@ A
	textWidth
ÙÙB K
;
ÙÙK L
if
˜˜( *
(
˜˜+ ,!
m_charWidthAdjDelta
˜˜, ?
>
˜˜@ A
$num
˜˜B C
)
˜˜C D
adjustedTextWidth
¯¯, =
/=
¯¯> @
$num
¯¯A C
-
¯¯D E!
m_charWidthAdjDelta
¯¯F Y
;
¯¯Y Z
float
˙˙( -
adjustmentDelta
˙˙. =
=
˙˙> ?
	textWidth
˙˙@ I
-
˙˙J K
(
˙˙L M
widthOfTextArea
˙˙M \
-
˙˙] ^
$num
˙˙_ f
)
˙˙f g
*
˙˙h i
(
˙˙j k 
isJustifiedOrFlush
˙˙k }
?
˙˙~ 
$num˙˙Ä Ö
:˙˙Ü á
$num˙˙à å
)˙˙å ç
;˙˙ç é!
m_charWidthAdjDelta
˚˚( ;
+=
˚˚< >
adjustmentDelta
˚˚? N
/
˚˚O P
adjustedTextWidth
˚˚Q b
;
˚˚b c!
m_charWidthAdjDelta
¸¸( ;
=
¸¸< =
Mathf
¸¸> C
.
¸¸C D
Min
¸¸D G
(
¸¸G H!
m_charWidthAdjDelta
¸¸H [
,
¸¸[ \
m_charWidthMaxAdj
¸¸] n
/
¸¸o p
$num
¸¸q t
)
¸¸t u
;
¸¸u v0
"k_HandleVerticalLineBreakingMarker
ˇˇ( J
.
ˇˇJ K
End
ˇˇK N
(
ˇˇN O
)
ˇˇO P
;
ˇˇP Q2
$k_HandleHorizontalLineBreakingMarker
ÄÄ( L
.
ÄÄL M
End
ÄÄM P
(
ÄÄP Q
)
ÄÄQ R
;
ÄÄR S,
k_HandleVisibleCharacterMarker
ÅÅ( F
.
ÅÅF G
End
ÅÅG J
(
ÅÅJ K
)
ÅÅK L
;
ÅÅL M(
k_GenerateTextPhaseIMarker
ÇÇ( B
.
ÇÇB C
End
ÇÇC F
(
ÇÇF G
)
ÇÇG H
;
ÇÇH I"
k_GenerateTextMarker
ÉÉ( <
.
ÉÉ< =
End
ÉÉ= @
(
ÉÉ@ A
)
ÉÉA B
;
ÉÉB C
return
ÑÑ( .
;
ÑÑ. /
}
ÖÖ$ %
if
ää$ &
(
ää' (

m_fontSize
ää( 2
>
ää3 4
m_fontSizeMin
ää5 B
&&
ääC E&
m_AutoSizeIterationCount
ääF ^
<
ää_ `)
m_AutoSizeMaxIterationCount
ääa |
)
ää| }
{
ãã$ %
m_maxFontSize
åå( 5
=
åå6 7

m_fontSize
åå8 B
;
ååB C
float
éé( -
	sizeDelta
éé. 7
=
éé8 9
Mathf
éé: ?
.
éé? @
Max
éé@ C
(
ééC D
(
ééD E

m_fontSize
ééE O
-
ééP Q
m_minFontSize
ééR _
)
éé_ `
/
ééa b
$num
ééc d
,
ééd e
$num
ééf k
)
éék l
;
éél m

m_fontSize
èè( 2
-=
èè3 5
	sizeDelta
èè6 ?
;
èè? @

m_fontSize
êê( 2
=
êê3 4
Mathf
êê5 :
.
êê: ;
Max
êê; >
(
êê> ?
(
êê? @
int
êê@ C
)
êêC D
(
êêD E

m_fontSize
êêE O
*
êêP Q
$num
êêR T
+
êêU V
$num
êêW [
)
êê[ \
/
êê] ^
$num
êê_ b
,
êêb c
m_fontSizeMin
êêd q
)
êêq r
;
êêr s0
"k_HandleVerticalLineBreakingMarker
ìì( J
.
ììJ K
End
ììK N
(
ììN O
)
ììO P
;
ììP Q2
$k_HandleHorizontalLineBreakingMarker
îî( L
.
îîL M
End
îîM P
(
îîP Q
)
îîQ R
;
îîR S,
k_HandleVisibleCharacterMarker
ïï( F
.
ïïF G
End
ïïG J
(
ïïJ K
)
ïïK L
;
ïïL M(
k_GenerateTextPhaseIMarker
ññ( B
.
ññB C
End
ññC F
(
ññF G
)
ññG H
;
ññH I"
k_GenerateTextMarker
óó( <
.
óó< =
End
óó= @
(
óó@ A
)
óóA B
;
óóB C
return
òò( .
;
òò. /
}
ôô$ %
}
õõ  !
switch
ûû  &
(
ûû' (
m_overflowMode
ûû( 6
)
ûû6 7
{
üü  !
case
††$ (
TextOverflowModes
††) :
.
††: ;
Overflow
††; C
:
††C D
case
°°$ (
TextOverflowModes
°°) :
.
°°: ;

ScrollRect
°°; E
:
°°E F
case
¢¢$ (
TextOverflowModes
¢¢) :
.
¢¢: ;
Masking
¢¢; B
:
¢¢B C
InsertNewLine
££( 5
(
££5 6
i
££6 7
,
££7 8
	baseScale
££9 B
,
££B C!
currentElementScale
££D W
,
££W X
currentEmScale
££Y g
,
££g h1
"m_GlyphHorizontalAdvanceAdjustment££i ã
,££ã å%
boldSpacingAdjustment££ç ¢
,££¢ £*
characterSpacingAdjustment££§ æ
,££æ ø
widthOfTextArea££¿ œ
,££œ –
lineGap££— ÿ
,££ÿ Ÿ
ref££⁄ ›(
isMaxVisibleDescenderSet££ﬁ ˆ
,££ˆ ˜
ref££¯ ˚#
maxVisibleDescender££¸ è
)££è ê
;££ê ë
isStartOfNewLine
§§( 8
=
§§9 :
true
§§; ?
;
§§? @
isFirstWordOfLine
••( 9
=
••: ;
true
••< @
;
••@ A0
"k_HandleVerticalLineBreakingMarker
¶¶( J
.
¶¶J K
End
¶¶K N
(
¶¶N O
)
¶¶O P
;
¶¶P Q2
$k_HandleHorizontalLineBreakingMarker
ßß( L
.
ßßL M
End
ßßM P
(
ßßP Q
)
ßßQ R
;
ßßR S,
k_HandleVisibleCharacterMarker
®®( F
.
®®F G
End
®®G J
(
®®J K
)
®®K L
;
®®L M
continue
©©( 0
;
©©0 1
case
´´$ (
TextOverflowModes
´´) :
.
´´: ;
Truncate
´´; C
:
´´C D
i
¨¨( )
=
¨¨* +&
RestoreWordWrappingState
¨¨, D
(
¨¨D E
ref
¨¨E H#
m_SavedLastValidState
¨¨I ^
)
¨¨^ _
;
¨¨_ `#
characterToSubstitute
ÆÆ( =
.
ÆÆ= >
index
ÆÆ> C
=
ÆÆD E"
testedCharacterCount
ÆÆF Z
;
ÆÆZ [#
characterToSubstitute
ØØ( =
.
ØØ= >
unicode
ØØ> E
=
ØØF G
$num
ØØH L
;
ØØL M0
"k_HandleVerticalLineBreakingMarker
∞∞( J
.
∞∞J K
End
∞∞K N
(
∞∞N O
)
∞∞O P
;
∞∞P Q2
$k_HandleHorizontalLineBreakingMarker
±±( L
.
±±L M
End
±±M P
(
±±P Q
)
±±Q R
;
±±R S,
k_HandleVisibleCharacterMarker
≤≤( F
.
≤≤F G
End
≤≤G J
(
≤≤J K
)
≤≤K L
;
≤≤L M
continue
≥≥( 0
;
≥≥0 1
case
µµ$ (
TextOverflowModes
µµ) :
.
µµ: ;
Ellipsis
µµ; C
:
µµC D
if
∂∂( *
(
∂∂+ ,/
!m_EllipsisInsertionCandidateStack
∂∂, M
.
∂∂M N
Count
∂∂N S
==
∂∂T V
$num
∂∂W X
)
∂∂X Y
{
∑∑( )
i
∏∏, -
=
∏∏. /
-
∏∏0 1
$num
∏∏1 2
;
∏∏2 3
m_characterCount
ππ, <
=
ππ= >
$num
ππ? @
;
ππ@ A#
characterToSubstitute
∫∫, A
.
∫∫A B
index
∫∫B G
=
∫∫H I
$num
∫∫J K
;
∫∫K L#
characterToSubstitute
ªª, A
.
ªªA B
unicode
ªªB I
=
ªªJ K
$num
ªªL P
;
ªªP Q$
m_firstCharacterOfLine
ºº, B
=
ººC D
$num
ººE F
;
ººF G0
"k_HandleVerticalLineBreakingMarker
ΩΩ, N
.
ΩΩN O
End
ΩΩO R
(
ΩΩR S
)
ΩΩS T
;
ΩΩT U2
$k_HandleHorizontalLineBreakingMarker
ææ, P
.
ææP Q
End
ææQ T
(
ææT U
)
ææU V
;
ææV W,
k_HandleVisibleCharacterMarker
øø, J
.
øøJ K
End
øøK N
(
øøN O
)
øøO P
;
øøP Q
continue
¿¿, 4
;
¿¿4 5
}
¡¡( )
var
√√( +
ellipsisState
√√, 9
=
√√: ;/
!m_EllipsisInsertionCandidateStack
√√< ]
.
√√] ^
Pop
√√^ a
(
√√a b
)
√√b c
;
√√c d
i
ƒƒ( )
=
ƒƒ* +&
RestoreWordWrappingState
ƒƒ, D
(
ƒƒD E
ref
ƒƒE H
ellipsisState
ƒƒI V
)
ƒƒV W
;
ƒƒW X
i
∆∆( )
-=
∆∆* ,
$num
∆∆- .
;
∆∆. /
m_characterCount
««( 8
-=
««9 ;
$num
««< =
;
««= >#
characterToSubstitute
»»( =
.
»»= >
index
»»> C
=
»»D E
m_characterCount
»»F V
;
»»V W#
characterToSubstitute
……( =
.
……= >
unicode
……> E
=
……F G
$num
……H N
;
……N O
restoreCount
ÀÀ( 4
+=
ÀÀ5 7
$num
ÀÀ8 9
;
ÀÀ9 :0
"k_HandleVerticalLineBreakingMarker
ÃÃ( J
.
ÃÃJ K
End
ÃÃK N
(
ÃÃN O
)
ÃÃO P
;
ÃÃP Q2
$k_HandleHorizontalLineBreakingMarker
ÕÕ( L
.
ÕÕL M
End
ÕÕM P
(
ÕÕP Q
)
ÕÕQ R
;
ÕÕR S,
k_HandleVisibleCharacterMarker
ŒŒ( F
.
ŒŒF G
End
ŒŒG J
(
ŒŒJ K
)
ŒŒK L
;
ŒŒL M
continue
œœ( 0
;
œœ0 1
case
——$ (
TextOverflowModes
——) :
.
——: ;
Linked
——; A
:
——A B
if
““( *
(
““+ ,#
m_linkedTextComponent
““, A
!=
““B D
null
““E I
)
““I J
{
””( )#
m_linkedTextComponent
‘‘, A
.
‘‘A B
text
‘‘B F
=
‘‘G H
text
‘‘I M
;
‘‘M N#
m_linkedTextComponent
’’, A
.
’’A B
m_inputSource
’’B O
=
’’P Q
m_inputSource
’’R _
;
’’_ `#
m_linkedTextComponent
÷÷, A
.
÷÷A B#
firstVisibleCharacter
÷÷B W
=
÷÷X Y
m_characterCount
÷÷Z j
;
÷÷j k#
m_linkedTextComponent
◊◊, A
.
◊◊A B
ForceMeshUpdate
◊◊B Q
(
◊◊Q R
)
◊◊R S
;
◊◊S T
m_isTextTruncated
ŸŸ, =
=
ŸŸ> ?
true
ŸŸ@ D
;
ŸŸD E
}
⁄⁄( )#
characterToSubstitute
››( =
.
››= >
index
››> C
=
››D E
m_characterCount
››F V
;
››V W#
characterToSubstitute
ﬁﬁ( =
.
ﬁﬁ= >
unicode
ﬁﬁ> E
=
ﬁﬁF G
$num
ﬁﬁH L
;
ﬁﬁL M0
"k_HandleVerticalLineBreakingMarker
ﬂﬂ( J
.
ﬂﬂJ K
End
ﬂﬂK N
(
ﬂﬂN O
)
ﬂﬂO P
;
ﬂﬂP Q2
$k_HandleHorizontalLineBreakingMarker
‡‡( L
.
‡‡L M
End
‡‡M P
(
‡‡P Q
)
‡‡Q R
;
‡‡R S,
k_HandleVisibleCharacterMarker
··( F
.
··F G
End
··G J
(
··J K
)
··K L
;
··L M
continue
‚‚( 0
;
‚‚0 1
case
‰‰$ (
TextOverflowModes
‰‰) :
.
‰‰: ;
Page
‰‰; ?
:
‰‰? @
m_isNewPage
ÊÊ( 3
=
ÊÊ4 5
true
ÊÊ6 :
;
ÊÊ: ;
InsertNewLine
ËË( 5
(
ËË5 6
i
ËË6 7
,
ËË7 8
	baseScale
ËË9 B
,
ËËB C!
currentElementScale
ËËD W
,
ËËW X
currentEmScale
ËËY g
,
ËËg h1
"m_GlyphHorizontalAdvanceAdjustmentËËi ã
,ËËã å%
boldSpacingAdjustmentËËç ¢
,ËË¢ £*
characterSpacingAdjustmentËË§ æ
,ËËæ ø
widthOfTextAreaËË¿ œ
,ËËœ –
lineGapËË— ÿ
,ËËÿ Ÿ
refËË⁄ ›(
isMaxVisibleDescenderSetËËﬁ ˆ
,ËËˆ ˜
refËË¯ ˚#
maxVisibleDescenderËË¸ è
)ËËè ê
;ËËê ë#
m_startOfLineAscender
ÍÍ( =
=
ÍÍ> ?
$num
ÍÍ@ A
;
ÍÍA B
m_lineOffset
ÎÎ( 4
=
ÎÎ5 6
$num
ÎÎ7 8
;
ÎÎ8 9
m_maxTextAscender
ÏÏ( 9
=
ÏÏ: ;
$num
ÏÏ< =
;
ÏÏ= >
m_PageAscender
ÌÌ( 6
=
ÌÌ7 8
$num
ÌÌ9 :
;
ÌÌ: ;
m_pageNumber
ÓÓ( 4
+=
ÓÓ5 7
$num
ÓÓ8 9
;
ÓÓ9 :
isStartOfNewLine
( 8
=
9 :
true
; ?
;
? @
isFirstWordOfLine
ÒÒ( 9
=
ÒÒ: ;
true
ÒÒ< @
;
ÒÒ@ A0
"k_HandleVerticalLineBreakingMarker
ÚÚ( J
.
ÚÚJ K
End
ÚÚK N
(
ÚÚN O
)
ÚÚO P
;
ÚÚP Q2
$k_HandleHorizontalLineBreakingMarker
ÛÛ( L
.
ÛÛL M
End
ÛÛM P
(
ÛÛP Q
)
ÛÛQ R
;
ÛÛR S,
k_HandleVisibleCharacterMarker
ÙÙ( F
.
ÙÙF G
End
ÙÙG J
(
ÙÙJ K
)
ÙÙK L
;
ÙÙL M
continue
ıı( 0
;
ıı0 1
}
ˆˆ  !
}
˜˜ 
else
¯¯  
{
˘˘ 
InsertNewLine
îî  -
(
îî- .
i
îî. /
,
îî/ 0
	baseScale
îî1 :
,
îî: ;!
currentElementScale
îî< O
,
îîO P
currentEmScale
îîQ _
,
îî_ `1
"m_GlyphHorizontalAdvanceAdjustmentîîa É
,îîÉ Ñ%
boldSpacingAdjustmentîîÖ ö
,îîö õ*
characterSpacingAdjustmentîîú ∂
,îî∂ ∑
widthOfTextAreaîî∏ «
,îî« »
lineGapîî… –
,îî– —
refîî“ ’(
isMaxVisibleDescenderSetîî÷ Ó
,îîÓ Ô
refîî Û#
maxVisibleDescenderîîÙ á
)îîá à
;îîà â
isStartOfNewLine
ïï  0
=
ïï1 2
true
ïï3 7
;
ïï7 8
isFirstWordOfLine
ññ  1
=
ññ2 3
true
ññ4 8
;
ññ8 92
$k_HandleHorizontalLineBreakingMarker
óó  D
.
óóD E
End
óóE H
(
óóH I
)
óóI J
;
óóJ K,
k_HandleVisibleCharacterMarker
òò  >
.
òò> ?
End
òò? B
(
òòB C
)
òòC D
;
òòD E
continue
ôô  (
;
ôô( )
}
öö 
}
õõ 
else
úú 
{
ùù 
if
ûû 
(
ûû   
m_enableAutoSizing
ûû  2
&&
ûû3 5&
m_AutoSizeIterationCount
ûû6 N
<
ûûO P)
m_AutoSizeMaxIterationCount
ûûQ l
)
ûûl m
{
üü 
if
¢¢  "
(
¢¢# $!
m_charWidthAdjDelta
¢¢$ 7
<
¢¢8 9
m_charWidthMaxAdj
¢¢: K
/
¢¢L M
$num
¢¢N Q
)
¢¢Q R
{
££  !
float
§§$ )
adjustedTextWidth
§§* ;
=
§§< =
	textWidth
§§> G
;
§§G H
if
ßß$ &
(
ßß' (!
m_charWidthAdjDelta
ßß( ;
>
ßß< =
$num
ßß> ?
)
ßß? @
adjustedTextWidth
®®( 9
/=
®®: <
$num
®®= ?
-
®®@ A!
m_charWidthAdjDelta
®®B U
;
®®U V
float
™™$ )
adjustmentDelta
™™* 9
=
™™: ;
	textWidth
™™< E
-
™™F G
(
™™H I
widthOfTextArea
™™I X
-
™™Y Z
$num
™™[ b
)
™™b c
*
™™d e
(
™™f g 
isJustifiedOrFlush
™™g y
?
™™z {
$num™™| Å
:™™Ç É
$num™™Ñ à
)™™à â
;™™â ä!
m_charWidthAdjDelta
´´$ 7
+=
´´8 :
adjustmentDelta
´´; J
/
´´K L
adjustedTextWidth
´´M ^
;
´´^ _!
m_charWidthAdjDelta
¨¨$ 7
=
¨¨8 9
Mathf
¨¨: ?
.
¨¨? @
Min
¨¨@ C
(
¨¨C D!
m_charWidthAdjDelta
¨¨D W
,
¨¨W X
m_charWidthMaxAdj
¨¨Y j
/
¨¨k l
$num
¨¨m p
)
¨¨p q
;
¨¨q r2
$k_HandleHorizontalLineBreakingMarker
ØØ$ H
.
ØØH I
End
ØØI L
(
ØØL M
)
ØØM N
;
ØØN O,
k_HandleVisibleCharacterMarker
∞∞$ B
.
∞∞B C
End
∞∞C F
(
∞∞F G
)
∞∞G H
;
∞∞H I(
k_GenerateTextPhaseIMarker
±±$ >
.
±±> ?
End
±±? B
(
±±B C
)
±±C D
;
±±D E"
k_GenerateTextMarker
≤≤$ 8
.
≤≤8 9
End
≤≤9 <
(
≤≤< =
)
≤≤= >
;
≤≤> ?
return
≥≥$ *
;
≥≥* +
}
¥¥  !
if
ππ  "
(
ππ# $

m_fontSize
ππ$ .
>
ππ/ 0
m_fontSizeMin
ππ1 >
)
ππ> ?
{
∫∫  !
m_maxFontSize
øø$ 1
=
øø2 3

m_fontSize
øø4 >
;
øø> ?
float
¡¡$ )
	sizeDelta
¡¡* 3
=
¡¡4 5
Mathf
¡¡6 ;
.
¡¡; <
Max
¡¡< ?
(
¡¡? @
(
¡¡@ A

m_fontSize
¡¡A K
-
¡¡L M
m_minFontSize
¡¡N [
)
¡¡[ \
/
¡¡] ^
$num
¡¡_ `
,
¡¡` a
$num
¡¡b g
)
¡¡g h
;
¡¡h i

m_fontSize
¬¬$ .
-=
¬¬/ 1
	sizeDelta
¬¬2 ;
;
¬¬; <

m_fontSize
√√$ .
=
√√/ 0
Mathf
√√1 6
.
√√6 7
Max
√√7 :
(
√√: ;
(
√√; <
int
√√< ?
)
√√? @
(
√√@ A

m_fontSize
√√A K
*
√√L M
$num
√√N P
+
√√Q R
$num
√√S W
)
√√W X
/
√√Y Z
$num
√√[ ^
,
√√^ _
m_fontSizeMin
√√` m
)
√√m n
;
√√n o2
$k_HandleHorizontalLineBreakingMarker
∆∆$ H
.
∆∆H I
End
∆∆I L
(
∆∆L M
)
∆∆M N
;
∆∆N O,
k_HandleVisibleCharacterMarker
««$ B
.
««B C
End
««C F
(
««F G
)
««G H
;
««H I(
k_GenerateTextPhaseIMarker
»»$ >
.
»»> ?
End
»»? B
(
»»B C
)
»»C D
;
»»D E"
k_GenerateTextMarker
……$ 8
.
……8 9
End
……9 <
(
……< =
)
……= >
;
……> ?
return
  $ *
;
  * +
}
ÀÀ  !
}
ŒŒ 
switch
—— "
(
——# $
m_overflowMode
——$ 2
)
——2 3
{
““ 
case
””  $
TextOverflowModes
””% 6
.
””6 7
Overflow
””7 ?
:
””? @
case
‘‘  $
TextOverflowModes
‘‘% 6
.
‘‘6 7

ScrollRect
‘‘7 A
:
‘‘A B
case
’’  $
TextOverflowModes
’’% 6
.
’’6 7
Masking
’’7 >
:
’’> ?
break
◊◊$ )
;
◊◊) *
case
ŸŸ  $
TextOverflowModes
ŸŸ% 6
.
ŸŸ6 7
Truncate
ŸŸ7 ?
:
ŸŸ? @
i
⁄⁄$ %
=
⁄⁄& '&
RestoreWordWrappingState
⁄⁄( @
(
⁄⁄@ A
ref
⁄⁄A D"
m_SavedWordWrapState
⁄⁄E Y
)
⁄⁄Y Z
;
⁄⁄Z [#
characterToSubstitute
‹‹$ 9
.
‹‹9 :
index
‹‹: ?
=
‹‹@ A"
testedCharacterCount
‹‹B V
;
‹‹V W#
characterToSubstitute
››$ 9
.
››9 :
unicode
››: A
=
››B C
$num
››D H
;
››H I2
$k_HandleHorizontalLineBreakingMarker
ﬁﬁ$ H
.
ﬁﬁH I
End
ﬁﬁI L
(
ﬁﬁL M
)
ﬁﬁM N
;
ﬁﬁN O,
k_HandleVisibleCharacterMarker
ﬂﬂ$ B
.
ﬂﬂB C
End
ﬂﬂC F
(
ﬂﬂF G
)
ﬂﬂG H
;
ﬂﬂH I
continue
‡‡$ ,
;
‡‡, -
case
‚‚  $
TextOverflowModes
‚‚% 6
.
‚‚6 7
Ellipsis
‚‚7 ?
:
‚‚? @
if
„„$ &
(
„„' (/
!m_EllipsisInsertionCandidateStack
„„( I
.
„„I J
Count
„„J O
==
„„P R
$num
„„S T
)
„„T U
{
‰‰$ %
i
ÂÂ( )
=
ÂÂ* +
-
ÂÂ, -
$num
ÂÂ- .
;
ÂÂ. /
m_characterCount
ÊÊ( 8
=
ÊÊ9 :
$num
ÊÊ; <
;
ÊÊ< =#
characterToSubstitute
ÁÁ( =
.
ÁÁ= >
index
ÁÁ> C
=
ÁÁD E
$num
ÁÁF G
;
ÁÁG H#
characterToSubstitute
ËË( =
.
ËË= >
unicode
ËË> E
=
ËËF G
$num
ËËH L
;
ËËL M$
m_firstCharacterOfLine
ÈÈ( >
=
ÈÈ? @
$num
ÈÈA B
;
ÈÈB C2
$k_HandleHorizontalLineBreakingMarker
ÍÍ( L
.
ÍÍL M
End
ÍÍM P
(
ÍÍP Q
)
ÍÍQ R
;
ÍÍR S,
k_HandleVisibleCharacterMarker
ÎÎ( F
.
ÎÎF G
End
ÎÎG J
(
ÎÎJ K
)
ÎÎK L
;
ÎÎL M
continue
ÏÏ( 0
;
ÏÏ0 1
}
ÌÌ$ %
var
ÔÔ$ '
ellipsisState
ÔÔ( 5
=
ÔÔ6 7/
!m_EllipsisInsertionCandidateStack
ÔÔ8 Y
.
ÔÔY Z
Pop
ÔÔZ ]
(
ÔÔ] ^
)
ÔÔ^ _
;
ÔÔ_ `
i
$ %
=
& '&
RestoreWordWrappingState
( @
(
@ A
ref
A D
ellipsisState
E R
)
R S
;
S T
i
ÚÚ$ %
-=
ÚÚ& (
$num
ÚÚ) *
;
ÚÚ* +
m_characterCount
ÛÛ$ 4
-=
ÛÛ5 7
$num
ÛÛ8 9
;
ÛÛ9 :#
characterToSubstitute
ÙÙ$ 9
.
ÙÙ9 :
index
ÙÙ: ?
=
ÙÙ@ A
m_characterCount
ÙÙB R
;
ÙÙR S#
characterToSubstitute
ıı$ 9
.
ıı9 :
unicode
ıı: A
=
ııB C
$num
ııD J
;
ııJ K
restoreCount
˜˜$ 0
+=
˜˜1 3
$num
˜˜4 5
;
˜˜5 62
$k_HandleHorizontalLineBreakingMarker
¯¯$ H
.
¯¯H I
End
¯¯I L
(
¯¯L M
)
¯¯M N
;
¯¯N O,
k_HandleVisibleCharacterMarker
˘˘$ B
.
˘˘B C
End
˘˘C F
(
˘˘F G
)
˘˘G H
;
˘˘H I
continue
˙˙$ ,
;
˙˙, -
case
¸¸  $
TextOverflowModes
¸¸% 6
.
¸¸6 7
Linked
¸¸7 =
:
¸¸= >
i
˝˝$ %
=
˝˝& '&
RestoreWordWrappingState
˝˝( @
(
˝˝@ A
ref
˝˝A D"
m_SavedWordWrapState
˝˝E Y
)
˝˝Y Z
;
˝˝Z [
if
ˇˇ$ &
(
ˇˇ' (#
m_linkedTextComponent
ˇˇ( =
!=
ˇˇ> @
null
ˇˇA E
)
ˇˇE F
{
ÄÄ$ %#
m_linkedTextComponent
ÅÅ( =
.
ÅÅ= >
text
ÅÅ> B
=
ÅÅC D
text
ÅÅE I
;
ÅÅI J#
m_linkedTextComponent
ÇÇ( =
.
ÇÇ= >
m_inputSource
ÇÇ> K
=
ÇÇL M
m_inputSource
ÇÇN [
;
ÇÇ[ \#
m_linkedTextComponent
ÉÉ( =
.
ÉÉ= >#
firstVisibleCharacter
ÉÉ> S
=
ÉÉT U
m_characterCount
ÉÉV f
;
ÉÉf g#
m_linkedTextComponent
ÑÑ( =
.
ÑÑ= >
ForceMeshUpdate
ÑÑ> M
(
ÑÑM N
)
ÑÑN O
;
ÑÑO P
m_isTextTruncated
ÜÜ( 9
=
ÜÜ: ;
true
ÜÜ< @
;
ÜÜ@ A
}
áá$ %#
characterToSubstitute
ää$ 9
.
ää9 :
index
ää: ?
=
ää@ A
m_characterCount
ääB R
;
ääR S#
characterToSubstitute
ãã$ 9
.
ãã9 :
unicode
ãã: A
=
ããB C
$num
ããD H
;
ããH I2
$k_HandleHorizontalLineBreakingMarker
åå$ H
.
ååH I
End
ååI L
(
ååL M
)
ååM N
;
ååN O,
k_HandleVisibleCharacterMarker
çç$ B
.
ççB C
End
ççC F
(
ççF G
)
ççG H
;
ççH I
continue
éé$ ,
;
éé, -
}
èè 
}
ëë 2
$k_HandleHorizontalLineBreakingMarker
ìì <
.
ìì< =
End
ìì= @
(
ìì@ A
)
ììA B
;
ììB C
}
îî 
if
ôô 
(
ôô 
charCode
ôô  
==
ôô! #
$num
ôô$ %
)
ôô% &
{
öö 

m_textInfo
õõ "
.
õõ" #
characterInfo
õõ# 0
[
õõ0 1
m_characterCount
õõ1 A
]
õõA B
.
õõB C
	isVisible
õõC L
=
õõM N
false
õõO T
;
õõT U*
m_lastVisibleCharacterOfLine
úú 4
=
úú5 6
m_characterCount
úú7 G
;
úúG H

m_textInfo
ùù "
.
ùù" #
lineInfo
ùù# +
[
ùù+ ,
m_lineNumber
ùù, 8
]
ùù8 9
.
ùù9 :

spaceCount
ùù: D
+=
ùùE G
$num
ùùH I
;
ùùI J

m_textInfo
ûû "
.
ûû" #

spaceCount
ûû# -
+=
ûû. 0
$num
ûû1 2
;
ûû2 3
}
üü 
else
†† 
if
†† 
(
†† 
charCode
†† %
==
††& (
$num
††) -
)
††- .
{
°° 

m_textInfo
¢¢ "
.
¢¢" #
characterInfo
¢¢# 0
[
¢¢0 1
m_characterCount
¢¢1 A
]
¢¢A B
.
¢¢B C
	isVisible
¢¢C L
=
¢¢M N
false
¢¢O T
;
¢¢T U
}
££ 
else
§§ 
{
•• 
if
ßß 
(
ßß "
m_overrideHtmlColors
ßß 0
)
ßß0 1
vertexColor
®® '
=
®®( )
m_fontColor32
®®* 7
;
®®7 8
else
©© 
vertexColor
™™ '
=
™™( )
m_htmlColor
™™* 5
;
™™5 6)
k_SaveGlyphVertexDataMarker
¨¨ 3
.
¨¨3 4
Begin
¨¨4 9
(
¨¨9 :
)
¨¨: ;
;
¨¨; <
if
ÆÆ 
(
ÆÆ 
m_textElementType
ÆÆ -
==
ÆÆ. 0!
TMP_TextElementType
ÆÆ1 D
.
ÆÆD E
	Character
ÆÆE N
)
ÆÆN O
{
ØØ !
SaveGlyphVertexInfo
±± /
(
±±/ 0
padding
±±0 7
,
±±7 8
style_padding
±±9 F
,
±±F G
vertexColor
±±H S
)
±±S T
;
±±T U
}
≤≤ 
else
≥≥ 
if
≥≥ 
(
≥≥  !
m_textElementType
≥≥! 2
==
≥≥3 5!
TMP_TextElementType
≥≥6 I
.
≥≥I J
Sprite
≥≥J P
)
≥≥P Q
{
¥¥ "
SaveSpriteVertexInfo
µµ 0
(
µµ0 1
vertexColor
µµ1 <
)
µµ< =
;
µµ= >
}
∂∂ )
k_SaveGlyphVertexDataMarker
∑∑ 3
.
∑∑3 4
End
∑∑4 7
(
∑∑7 8
)
∑∑8 9
;
∑∑9 :
if
ππ 
(
ππ 
isStartOfNewLine
ππ ,
)
ππ, -
{
∫∫ 
isStartOfNewLine
ªª ,
=
ªª- .
false
ªª/ 4
;
ªª4 5+
m_firstVisibleCharacterOfLine
ºº 9
=
ºº: ;
m_characterCount
ºº< L
;
ººL M
}
ΩΩ )
m_lineVisibleCharacterCount
øø 3
+=
øø4 6
$num
øø7 8
;
øø8 9*
m_lastVisibleCharacterOfLine
¿¿ 4
=
¿¿5 6
m_characterCount
¿¿7 G
;
¿¿G H

m_textInfo
¡¡ "
.
¡¡" #
lineInfo
¡¡# +
[
¡¡+ ,
m_lineNumber
¡¡, 8
]
¡¡8 9
.
¡¡9 :

marginLeft
¡¡: D
=
¡¡E F

marginLeft
¡¡G Q
;
¡¡Q R

m_textInfo
¬¬ "
.
¬¬" #
lineInfo
¬¬# +
[
¬¬+ ,
m_lineNumber
¬¬, 8
]
¬¬8 9
.
¬¬9 :
marginRight
¬¬: E
=
¬¬F G
marginRight
¬¬H S
;
¬¬S T
}
√√ ,
k_HandleVisibleCharacterMarker
≈≈ 2
.
≈≈2 3
End
≈≈3 6
(
≈≈6 7
)
≈≈7 8
;
≈≈8 9
}
∆∆ 
else
«« 
{
»» '
k_HandleWhiteSpacesMarker
…… -
.
……- .
Begin
……. 3
(
……3 4
)
……4 5
;
……5 6
if
ÕÕ 
(
ÕÕ 
m_overflowMode
ÕÕ &
==
ÕÕ' )
TextOverflowModes
ÕÕ* ;
.
ÕÕ; <
Linked
ÕÕ< B
&&
ÕÕC E
(
ÕÕF G
charCode
ÕÕG O
==
ÕÕP R
$num
ÕÕS U
||
ÕÕV X
charCode
ÕÕY a
==
ÕÕb d
$num
ÕÕe g
)
ÕÕg h
)
ÕÕh i
{
ŒŒ 
float
œœ 

textHeight
œœ (
=
œœ) *
m_maxTextAscender
œœ+ <
-
œœ= >
(
œœ? @ 
m_maxLineDescender
œœ@ R
-
œœS T
m_lineOffset
œœU a
)
œœa b
+
œœc d
(
œœe f
m_lineOffset
œœf r
>
œœs t
$num
œœu v
&&
œœw y$
m_IsDrivenLineSpacingœœz è
==œœê í
falseœœì ò
?œœô ö!
m_maxLineAscenderœœõ ¨
-œœ≠ Æ%
m_startOfLineAscenderœœØ ƒ
:œœ≈ ∆
$numœœ« »
)œœ» …
;œœ…  
int
—— "
testedCharacterCount
—— 0
=
——1 2
m_characterCount
——3 C
;
——C D
if
”” 
(
”” 

textHeight
”” &
>
””' (
marginHeight
””) 5
+
””6 7
$num
””8 ?
)
””? @
{
‘‘ 
if
÷÷ 
(
÷÷  +
m_firstOverflowCharacterIndex
÷÷  =
==
÷÷> @
-
÷÷A B
$num
÷÷B C
)
÷÷C D+
m_firstOverflowCharacterIndex
◊◊  =
=
◊◊> ?
m_characterCount
◊◊@ P
;
◊◊P Q
i
ŸŸ 
=
ŸŸ &
RestoreWordWrappingState
ŸŸ  8
(
ŸŸ8 9
ref
ŸŸ9 <#
m_SavedLastValidState
ŸŸ= R
)
ŸŸR S
;
ŸŸS T
if
€€ 
(
€€  #
m_linkedTextComponent
€€  5
!=
€€6 8
null
€€9 =
)
€€= >
{
‹‹ #
m_linkedTextComponent
››  5
.
››5 6
text
››6 :
=
››; <
text
››= A
;
››A B#
m_linkedTextComponent
ﬁﬁ  5
.
ﬁﬁ5 6
m_inputSource
ﬁﬁ6 C
=
ﬁﬁD E
m_inputSource
ﬁﬁF S
;
ﬁﬁS T#
m_linkedTextComponent
ﬂﬂ  5
.
ﬂﬂ5 6#
firstVisibleCharacter
ﬂﬂ6 K
=
ﬂﬂL M
m_characterCount
ﬂﬂN ^
;
ﬂﬂ^ _#
m_linkedTextComponent
‡‡  5
.
‡‡5 6
ForceMeshUpdate
‡‡6 E
(
‡‡E F
)
‡‡F G
;
‡‡G H
m_isTextTruncated
‚‚  1
=
‚‚2 3
true
‚‚4 8
;
‚‚8 9
}
„„ #
characterToSubstitute
ÊÊ 1
.
ÊÊ1 2
index
ÊÊ2 7
=
ÊÊ8 9"
testedCharacterCount
ÊÊ: N
;
ÊÊN O#
characterToSubstitute
ÁÁ 1
.
ÁÁ1 2
unicode
ÁÁ2 9
=
ÁÁ: ;
$num
ÁÁ< @
;
ÁÁ@ A'
k_HandleWhiteSpacesMarker
ËË 5
.
ËË5 6
End
ËË6 9
(
ËË9 :
)
ËË: ;
;
ËË; <
continue
ÈÈ $
;
ÈÈ$ %
}
ÍÍ 
}
ÎÎ 
if
ÔÔ 
(
ÔÔ 
(
ÔÔ 
charCode
ÔÔ !
==
ÔÔ" $
$num
ÔÔ% '
||
ÔÔ( *
charCode
ÔÔ+ 3
==
ÔÔ4 6
$num
ÔÔ7 9
||
ÔÔ: <
charCode
ÔÔ= E
==
ÔÔF H
$num
ÔÔI M
||
ÔÔN P
charCode
ÔÔQ Y
==
ÔÔZ \
$num
ÔÔ] c
||
ÔÔd f
charCode
ÔÔg o
==
ÔÔp r
$num
ÔÔs y
||
ÔÔz |
charCodeÔÔ} Ö
==ÔÔÜ à
$numÔÔâ è
||ÔÔê í
charÔÔì ó
.ÔÔó ò
IsSeparatorÔÔò £
(ÔÔ£ §
(ÔÔ§ •
charÔÔ• ©
)ÔÔ© ™
charCodeÔÔ™ ≤
)ÔÔ≤ ≥
)ÔÔ≥ ¥
&&ÔÔµ ∑
charCodeÔÔ∏ ¿
!=ÔÔ¡ √
$numÔÔƒ »
&&ÔÔ… À
charCodeÔÔÃ ‘
!=ÔÔ’ ◊
$numÔÔÿ ﬁ
&&ÔÔﬂ ·
charCodeÔÔ‚ Í
!=ÔÔÎ Ì
$numÔÔÓ Ù
)ÔÔÙ ı
{
 

m_textInfo
ÒÒ "
.
ÒÒ" #
lineInfo
ÒÒ# +
[
ÒÒ+ ,
m_lineNumber
ÒÒ, 8
]
ÒÒ8 9
.
ÒÒ9 :

spaceCount
ÒÒ: D
+=
ÒÒE G
$num
ÒÒH I
;
ÒÒI J

m_textInfo
ÚÚ "
.
ÚÚ" #

spaceCount
ÚÚ# -
+=
ÚÚ. 0
$num
ÚÚ1 2
;
ÚÚ2 3
}
ÛÛ 
if
ıı 
(
ıı 
charCode
ıı  
==
ıı! #
$num
ıı$ (
)
ıı( )

m_textInfo
ˆˆ "
.
ˆˆ" #
lineInfo
ˆˆ# +
[
ˆˆ+ ,
m_lineNumber
ˆˆ, 8
]
ˆˆ8 9
.
ˆˆ9 :#
controlCharacterCount
ˆˆ: O
+=
ˆˆP R
$num
ˆˆS T
;
ˆˆT U'
k_HandleWhiteSpacesMarker
¯¯ -
.
¯¯- .
End
¯¯. 1
(
¯¯1 2
)
¯¯2 3
;
¯¯3 4
}
˘˘ 
if
ˇˇ 
(
ˇˇ 
m_overflowMode
ˇˇ "
==
ˇˇ# %
TextOverflowModes
ˇˇ& 7
.
ˇˇ7 8
Ellipsis
ˇˇ8 @
&&
ˇˇA C
(
ˇˇD E"
isInjectingCharacter
ˇˇE Y
==
ˇˇZ \
false
ˇˇ] b
||
ˇˇc e
charCode
ˇˇf n
==
ˇˇo q
$num
ˇˇr v
)
ˇˇv w
)
ˇˇw x
{
ÄÄ 
float
ÅÅ 
	fontScale
ÅÅ #
=
ÅÅ$ %
m_currentFontSize
ÅÅ& 7
/
ÅÅ8 9

m_Ellipsis
ÅÅ: D
.
ÅÅD E
	fontAsset
ÅÅE N
.
ÅÅN O

m_FaceInfo
ÅÅO Y
.
ÅÅY Z
	pointSize
ÅÅZ c
*
ÅÅd e

m_Ellipsis
ÅÅf p
.
ÅÅp q
	fontAsset
ÅÅq z
.
ÅÅz {

m_FaceInfoÅÅ{ Ö
.ÅÅÖ Ü
scaleÅÅÜ ã
*ÅÅå ç
(ÅÅé è 
m_isOrthographicÅÅè ü
?ÅÅ† °
$numÅÅ¢ £
:ÅÅ§ •
$numÅÅ¶ ™
)ÅÅ™ ´
;ÅÅ´ ¨
float
ÇÇ 
scale
ÇÇ 
=
ÇÇ  !
	fontScale
ÇÇ" +
*
ÇÇ, -#
m_fontScaleMultiplier
ÇÇ. C
*
ÇÇD E

m_Ellipsis
ÇÇF P
.
ÇÇP Q
	character
ÇÇQ Z
.
ÇÇZ [
m_Scale
ÇÇ[ b
*
ÇÇc d

m_Ellipsis
ÇÇe o
.
ÇÇo p
	character
ÇÇp y
.
ÇÇy z
m_GlyphÇÇz Å
.ÇÇÅ Ç
scaleÇÇÇ á
;ÇÇá à
float
ÉÉ 

marginLeft
ÉÉ $
=
ÉÉ% &
m_marginLeft
ÉÉ' 3
;
ÉÉ3 4
float
ÑÑ 
marginRight
ÑÑ %
=
ÑÑ& '
m_marginRight
ÑÑ( 5
;
ÑÑ5 6
if
áá 
(
áá 
charCode
áá  
==
áá! #
$num
áá$ (
&&
áá) +
m_characterCount
áá, <
!=
áá= ?$
m_firstCharacterOfLine
áá@ V
)
ááV W
{
àà 
	fontScale
ââ !
=
ââ" #

m_textInfo
ââ$ .
.
ââ. /
characterInfo
ââ/ <
[
ââ< =
m_characterCount
ââ= M
-
ââN O
$num
ââP Q
]
ââQ R
.
ââR S
	pointSize
ââS \
/
ââ] ^

m_Ellipsis
ââ_ i
.
ââi j
	fontAsset
ââj s
.
ââs t

m_FaceInfo
âât ~
.
ââ~ 
	pointSizeââ à
*âââ ä

m_Ellipsisââã ï
.ââï ñ
	fontAssetââñ ü
.ââü †

m_FaceInfoââ† ™
.ââ™ ´
scaleââ´ ∞
*ââ± ≤
(ââ≥ ¥ 
m_isOrthographicââ¥ ƒ
?ââ≈ ∆
$numââ« »
:ââ…  
$numââÀ œ
)ââœ –
;ââ– —
scale
ää 
=
ää 
	fontScale
ää  )
*
ää* +#
m_fontScaleMultiplier
ää, A
*
ääB C

m_Ellipsis
ääD N
.
ääN O
	character
ääO X
.
ääX Y
m_Scale
ääY `
*
ääa b

m_Ellipsis
ääc m
.
ääm n
	character
ään w
.
ääw x
m_Glyph
ääx 
.ää Ä
scaleääÄ Ö
;ääÖ Ü

marginLeft
ãã "
=
ãã# $

m_textInfo
ãã% /
.
ãã/ 0
lineInfo
ãã0 8
[
ãã8 9
m_lineNumber
ãã9 E
]
ããE F
.
ããF G

marginLeft
ããG Q
;
ããQ R
marginRight
åå #
=
åå$ %

m_textInfo
åå& 0
.
åå0 1
lineInfo
åå1 9
[
åå9 :
m_lineNumber
åå: F
]
ååF G
.
ååG H
marginRight
ååH S
;
ååS T
}
çç 
float
èè 

textHeight
èè $
=
èè% &
m_maxTextAscender
èè' 8
-
èè9 :
(
èè; < 
m_maxLineDescender
èè< N
-
èèO P
m_lineOffset
èèQ ]
)
èè] ^
+
èè_ `
(
èèa b
m_lineOffset
èèb n
>
èèo p
$num
èèq r
&&
èès u$
m_IsDrivenLineSpacingèèv ã
==èèå é
falseèèè î
?èèï ñ!
m_maxLineAscenderèèó ®
-èè© ™%
m_startOfLineAscenderèè´ ¿
:èè¡ ¬
$numèè√ ƒ
)èèƒ ≈
;èè≈ ∆
float
êê 
	textWidth
êê #
=
êê$ %
Mathf
êê& +
.
êê+ ,
Abs
êê, /
(
êê/ 0

m_xAdvance
êê0 :
)
êê: ;
+
êê< =
(
êê> ?
!
êê? @
m_isRightToLeft
êê@ O
?
êêP Q

m_Ellipsis
êêR \
.
êê\ ]
	character
êê] f
.
êêf g
m_Glyph
êêg n
.
êên o
metrics
êêo v
.
êêv w 
horizontalAdvanceêêw à
:êêâ ä
$numêêã å
)êêå ç
*êêé è
(êêê ë
$numêêë í
-êêì î#
m_charWidthAdjDeltaêêï ®
)êê® ©
*êê™ ´
scaleêê¨ ±
;êê± ≤
float
ëë (
widthOfTextAreaForEllipsis
ëë 4
=
ëë5 6
m_width
ëë7 >
!=
ëë? A
-
ëëB C
$num
ëëC D
?
ëëE F
Mathf
ëëG L
.
ëëL M
Min
ëëM P
(
ëëP Q
marginWidth
ëëQ \
+
ëë] ^
$num
ëë_ f
-
ëëg h

marginLeft
ëëi s
-
ëët u
marginRightëëv Å
,ëëÅ Ç
m_widthëëÉ ä
)ëëä ã
:ëëå ç
marginWidthëëé ô
+ëëö õ
$numëëú £
-ëë§ •

marginLeftëë¶ ∞
-ëë± ≤
marginRightëë≥ æ
;ëëæ ø
if
ìì 
(
ìì 
	textWidth
ìì !
<
ìì" #(
widthOfTextAreaForEllipsis
ìì$ >
*
ìì? @
(
ììA B 
isJustifiedOrFlush
ììB T
?
ììU V
$num
ììW \
:
ìì] ^
$num
ìì_ c
)
ììc d
&&
ììe g

textHeight
ììh r
<
ììs t
marginHeightììu Å
+ììÇ É
$numììÑ ã
)ììã å
{
îî #
SaveWordWrappingState
ïï -
(
ïï- .
ref
ïï. 1"
m_SavedEllipsisState
ïï2 F
,
ïïF G
i
ïïH I
,
ïïI J
m_characterCount
ïïK [
)
ïï[ \
;
ïï\ ]/
!m_EllipsisInsertionCandidateStack
ññ 9
.
ññ9 :
Push
ññ: >
(
ññ> ?"
m_SavedEllipsisState
ññ? S
)
ññS T
;
ññT U
}
óó 
}
òò 

m_textInfo
ûû 
.
ûû 
characterInfo
ûû (
[
ûû( )
m_characterCount
ûû) 9
]
ûû9 :
.
ûû: ;

lineNumber
ûû; E
=
ûûF G
m_lineNumber
ûûH T
;
ûûT U

m_textInfo
üü 
.
üü 
characterInfo
üü (
[
üü( )
m_characterCount
üü) 9
]
üü9 :
.
üü: ;

pageNumber
üü; E
=
üüF G
m_pageNumber
üüH T
;
üüT U
if
°° 
(
°° 
charCode
°° 
!=
°° 
$num
°°  "
&&
°°# %
charCode
°°& .
!=
°°/ 1
$num
°°2 4
&&
°°5 7
charCode
°°8 @
!=
°°A C
$num
°°D F
&&
°°G I"
isInjectingCharacter
°°J ^
==
°°_ a
false
°°b g
||°°Ç Ñ

m_textInfo°°Ö è
.°°è ê
lineInfo°°ê ò
[°°ò ô
m_lineNumber°°ô •
]°°• ¶
.°°¶ ß
characterCount°°ß µ
==°°∂ ∏
$num°°π ∫
)°°∫ ª

m_textInfo
¢¢ 
.
¢¢ 
lineInfo
¢¢ '
[
¢¢' (
m_lineNumber
¢¢( 4
]
¢¢4 5
.
¢¢5 6
	alignment
¢¢6 ?
=
¢¢@ A!
m_lineJustification
¢¢B U
;
¢¢U V-
k_ComputeCharacterAdvanceMarker
®® /
.
®®/ 0
Begin
®®0 5
(
®®5 6
)
®®6 7
;
®®7 8
if
©© 
(
©© 
charCode
©© 
==
©© 
$num
©©  !
)
©©! "
{
™™ 
float
´´ 
tabSize
´´ !
=
´´" # 
m_currentFontAsset
´´$ 6
.
´´6 7

m_FaceInfo
´´7 A
.
´´A B
tabWidth
´´B J
*
´´K L 
m_currentFontAsset
´´M _
.
´´_ `
tabSize
´´` g
*
´´h i!
currentElementScale
´´j }
;
´´} ~
float
¨¨ 
tabs
¨¨ 
=
¨¨  
Mathf
¨¨! &
.
¨¨& '
Ceil
¨¨' +
(
¨¨+ ,

m_xAdvance
¨¨, 6
/
¨¨7 8
tabSize
¨¨9 @
)
¨¨@ A
*
¨¨B C
tabSize
¨¨D K
;
¨¨K L

m_xAdvance
≠≠ 
=
≠≠  
tabs
≠≠! %
>
≠≠& '

m_xAdvance
≠≠( 2
?
≠≠3 4
tabs
≠≠5 9
:
≠≠: ;

m_xAdvance
≠≠< F
+
≠≠G H
tabSize
≠≠I P
;
≠≠P Q
}
ÆÆ 
else
ØØ 
if
ØØ 
(
ØØ 
m_monoSpacing
ØØ &
!=
ØØ' )
$num
ØØ* +
)
ØØ+ ,
{
∞∞ 

m_xAdvance
±± 
+=
±± !
(
±±" #
m_monoSpacing
±±# 0
-
±±1 2
monoAdvance
±±3 >
+
±±? @
(
±±A B
(
±±B C 
m_currentFontAsset
±±C U
.
±±U V!
normalSpacingOffset
±±V i
+
±±j k)
characterSpacingAdjustment±±l Ü
)±±Ü á
*±±à â
currentEmScale±±ä ò
)±±ò ô
+±±ö õ

m_cSpacing±±ú ¶
)±±¶ ß
*±±® ©
(±±™ ´
$num±±´ ¨
-±±≠ Æ#
m_charWidthAdjDelta±±Ø ¬
)±±¬ √
;±±√ ƒ
if
≥≥ 
(
≥≥ 
isWhiteSpace
≥≥ $
||
≥≥% '
charCode
≥≥( 0
==
≥≥1 3
$num
≥≥4 :
)
≥≥: ;

m_xAdvance
¥¥ "
+=
¥¥# %
m_wordSpacing
¥¥& 3
*
¥¥4 5
currentEmScale
¥¥6 D
;
¥¥D E
}
µµ 
else
∂∂ 
if
∂∂ 
(
∂∂ 
m_isRightToLeft
∂∂ (
)
∂∂( )
{
∑∑ 

m_xAdvance
∏∏ 
-=
∏∏ !
(
∏∏" #
(
∏∏# $
glyphAdjustments
∏∏$ 4
.
∏∏4 5

m_XAdvance
∏∏5 ?
*
∏∏@ A!
currentElementScale
∏∏B U
+
∏∏V W
(
∏∏X Y 
m_currentFontAsset
∏∏Y k
.
∏∏k l!
normalSpacingOffset
∏∏l 
+∏∏Ä Å*
characterSpacingAdjustment∏∏Ç ú
+∏∏ù û%
boldSpacingAdjustment∏∏ü ¥
)∏∏¥ µ
*∏∏∂ ∑
currentEmScale∏∏∏ ∆
+∏∏« »

m_cSpacing∏∏… ”
)∏∏” ‘
*∏∏’ ÷
(∏∏◊ ÿ
$num∏∏ÿ Ÿ
-∏∏⁄ €#
m_charWidthAdjDelta∏∏‹ Ô
)∏∏Ô 
)∏∏ Ò
;∏∏Ò Ú
if
∫∫ 
(
∫∫ 
isWhiteSpace
∫∫ $
||
∫∫% '
charCode
∫∫( 0
==
∫∫1 3
$num
∫∫4 :
)
∫∫: ;

m_xAdvance
ªª "
-=
ªª# %
m_wordSpacing
ªª& 3
*
ªª4 5
currentEmScale
ªª6 D
;
ªªD E
}
ºº 
else
ΩΩ 
{
ææ 
float
øø 
scaleFXMultiplier
øø +
=
øø, -
$num
øø. /
;
øø/ 0
if
¿¿ 
(
¿¿ 
m_isFXMatrixSet
¿¿ '
)
¿¿' (
scaleFXMultiplier
¿¿) :
=
¿¿; <

m_FXMatrix
¿¿= G
.
¿¿G H

lossyScale
¿¿H R
.
¿¿R S
x
¿¿S T
;
¿¿T U

m_xAdvance
¬¬ 
+=
¬¬ !
(
¬¬" #
(
¬¬# $!
currentGlyphMetrics
¬¬$ 7
.
¬¬7 8
horizontalAdvance
¬¬8 I
*
¬¬J K
scaleFXMultiplier
¬¬L ]
+
¬¬^ _
glyphAdjustments
¬¬` p
.
¬¬p q

m_XAdvance
¬¬q {
)
¬¬{ |
*
¬¬} ~"
currentElementScale¬¬ í
+¬¬ì î
(¬¬ï ñ"
m_currentFontAsset¬¬ñ ®
.¬¬® ©#
normalSpacingOffset¬¬© º
+¬¬Ω æ*
characterSpacingAdjustment¬¬ø Ÿ
+¬¬⁄ €%
boldSpacingAdjustment¬¬‹ Ò
)¬¬Ò Ú
*¬¬Û Ù
currentEmScale¬¬ı É
+¬¬Ñ Ö

m_cSpacing¬¬Ü ê
)¬¬ê ë
*¬¬í ì
(¬¬î ï
$num¬¬ï ñ
-¬¬ó ò#
m_charWidthAdjDelta¬¬ô ¨
)¬¬¨ ≠
;¬¬≠ Æ
if
ƒƒ 
(
ƒƒ 
isWhiteSpace
ƒƒ $
||
ƒƒ% '
charCode
ƒƒ( 0
==
ƒƒ1 3
$num
ƒƒ4 :
)
ƒƒ: ;

m_xAdvance
≈≈ "
+=
≈≈# %
m_wordSpacing
≈≈& 3
*
≈≈4 5
currentEmScale
≈≈6 D
;
≈≈D E
}
∆∆ 

m_textInfo
…… 
.
…… 
characterInfo
…… (
[
……( )
m_characterCount
……) 9
]
……9 :
.
……: ;
xAdvance
……; C
=
……D E

m_xAdvance
……F P
;
……P Q-
k_ComputeCharacterAdvanceMarker
   /
.
  / 0
End
  0 3
(
  3 4
)
  4 5
;
  5 6
if
–– 
(
–– 
charCode
–– 
==
–– 
$num
––  "
)
––" #
{
—— *
k_HandleCarriageReturnMarker
““ 0
.
““0 1
Begin
““1 6
(
““6 7
)
““7 8
;
““8 9

m_xAdvance
”” 
=
””  
$num
””! "
+
””# $

tag_Indent
””% /
;
””/ 0*
k_HandleCarriageReturnMarker
‘‘ 0
.
‘‘0 1
End
‘‘1 4
(
‘‘4 5
)
‘‘5 6
;
‘‘6 7
}
’’ 
if
€€ 
(
€€ 
charCode
€€ 
==
€€ 
$num
€€  "
||
€€# %
charCode
€€& .
==
€€/ 1
$num
€€2 4
||
€€5 7
charCode
€€8 @
==
€€A C
$num
€€D H
||
€€I K
charCode
€€L T
==
€€U W
$num
€€X ^
||
€€_ a
charCode
€€b j
==
€€k m
$num
€€n t
||
€€u w
(
€€x y
charCode€€y Å
==€€Ç Ñ
$num€€Ö â
&&€€ä å$
isInjectingCharacter€€ç °
)€€° ¢
||€€£ • 
m_characterCount€€¶ ∂
==€€∑ π#
totalCharacterCount€€∫ Õ
-€€Œ œ
$num€€– —
)€€— “
{
‹‹ +
k_HandleLineTerminationMarker
›› 1
.
››1 2
Begin
››2 7
(
››7 8
)
››8 9
;
››9 :
float
‡‡ %
baselineAdjustmentDelta
‡‡ 1
=
‡‡2 3
m_maxLineAscender
‡‡4 E
-
‡‡F G#
m_startOfLineAscender
‡‡H ]
;
‡‡] ^
if
·· 
(
·· 
m_lineOffset
·· $
>
··% &
$num
··' (
&&
··) +
Math
··, 0
.
··0 1
Abs
··1 4
(
··4 5%
baselineAdjustmentDelta
··5 L
)
··L M
>
··N O
$num
··P U
&&
··V X#
m_IsDrivenLineSpacing
··Y n
==
··o q
false
··r w
&&
··x z
!
··{ |
m_isNewPage··| á
)··á à
{
‚‚ 
AdjustLineOffset
‰‰ (
(
‰‰( )$
m_firstCharacterOfLine
‰‰) ?
,
‰‰? @
m_characterCount
‰‰A Q
,
‰‰Q R%
baselineAdjustmentDelta
‰‰S j
)
‰‰j k
;
‰‰k l 
m_ElementDescender
ÂÂ *
-=
ÂÂ+ -%
baselineAdjustmentDelta
ÂÂ. E
;
ÂÂE F
m_lineOffset
ÊÊ $
+=
ÊÊ% '%
baselineAdjustmentDelta
ÊÊ( ?
;
ÊÊ? @
if
ÈÈ 
(
ÈÈ "
m_SavedEllipsisState
ÈÈ 0
.
ÈÈ0 1

lineNumber
ÈÈ1 ;
==
ÈÈ< >
m_lineNumber
ÈÈ? K
)
ÈÈK L
{
ÍÍ "
m_SavedEllipsisState
ÎÎ 0
=
ÎÎ1 2/
!m_EllipsisInsertionCandidateStack
ÎÎ3 T
.
ÎÎT U
Pop
ÎÎU X
(
ÎÎX Y
)
ÎÎY Z
;
ÎÎZ ["
m_SavedEllipsisState
ÏÏ 0
.
ÏÏ0 1!
startOfLineAscender
ÏÏ1 D
+=
ÏÏE G%
baselineAdjustmentDelta
ÏÏH _
;
ÏÏ_ `"
m_SavedEllipsisState
ÌÌ 0
.
ÌÌ0 1

lineOffset
ÌÌ1 ;
+=
ÌÌ< >%
baselineAdjustmentDelta
ÌÌ? V
;
ÌÌV W/
!m_EllipsisInsertionCandidateStack
ÓÓ =
.
ÓÓ= >
Push
ÓÓ> B
(
ÓÓB C"
m_SavedEllipsisState
ÓÓC W
)
ÓÓW X
;
ÓÓX Y
}
ÔÔ 
}
 
m_isNewPage
ÒÒ 
=
ÒÒ  !
false
ÒÒ" '
;
ÒÒ' (
float
ÙÙ 
lineAscender
ÙÙ &
=
ÙÙ' (
m_maxLineAscender
ÙÙ) :
-
ÙÙ; <
m_lineOffset
ÙÙ= I
;
ÙÙI J
float
ıı 
lineDescender
ıı '
=
ıı( ) 
m_maxLineDescender
ıı* <
-
ıı= >
m_lineOffset
ıı? K
;
ııK L 
m_ElementDescender
¯¯ &
=
¯¯' ( 
m_ElementDescender
¯¯) ;
<
¯¯< =
lineDescender
¯¯> K
?
¯¯L M 
m_ElementDescender
¯¯N `
:
¯¯a b
lineDescender
¯¯c p
;
¯¯p q
if
˘˘ 
(
˘˘ 
!
˘˘ &
isMaxVisibleDescenderSet
˘˘ 1
)
˘˘1 2!
maxVisibleDescender
˙˙ +
=
˙˙, - 
m_ElementDescender
˙˙. @
;
˙˙@ A
if
¸¸ 
(
¸¸ &
m_useMaxVisibleDescender
¸¸ 0
&&
¸¸1 3
(
¸¸4 5
m_characterCount
¸¸5 E
>=
¸¸F H$
m_maxVisibleCharacters
¸¸I _
||
¸¸` b
m_lineNumber
¸¸c o
>=
¸¸p r 
m_maxVisibleLines¸¸s Ñ
)¸¸Ñ Ö
)¸¸Ö Ü&
isMaxVisibleDescenderSet
˝˝ 0
=
˝˝1 2
true
˝˝3 7
;
˝˝7 8

m_textInfo
ÄÄ 
.
ÄÄ 
lineInfo
ÄÄ '
[
ÄÄ' (
m_lineNumber
ÄÄ( 4
]
ÄÄ4 5
.
ÄÄ5 6!
firstCharacterIndex
ÄÄ6 I
=
ÄÄJ K$
m_firstCharacterOfLine
ÄÄL b
;
ÄÄb c

m_textInfo
ÅÅ 
.
ÅÅ 
lineInfo
ÅÅ '
[
ÅÅ' (
m_lineNumber
ÅÅ( 4
]
ÅÅ4 5
.
ÅÅ5 6(
firstVisibleCharacterIndex
ÅÅ6 P
=
ÅÅQ R+
m_firstVisibleCharacterOfLine
ÅÅS p
=
ÅÅq r%
m_firstCharacterOfLineÅÅs â
>ÅÅä ã-
m_firstVisibleCharacterOfLineÅÅå ©
?ÅÅ™ ´&
m_firstCharacterOfLineÅÅ¨ ¬
:ÅÅ√ ƒ-
m_firstVisibleCharacterOfLineÅÅ≈ ‚
;ÅÅ‚ „

m_textInfo
ÇÇ 
.
ÇÇ 
lineInfo
ÇÇ '
[
ÇÇ' (
m_lineNumber
ÇÇ( 4
]
ÇÇ4 5
.
ÇÇ5 6 
lastCharacterIndex
ÇÇ6 H
=
ÇÇI J#
m_lastCharacterOfLine
ÇÇK `
=
ÇÇa b
m_characterCount
ÇÇc s
;
ÇÇs t

m_textInfo
ÉÉ 
.
ÉÉ 
lineInfo
ÉÉ '
[
ÉÉ' (
m_lineNumber
ÉÉ( 4
]
ÉÉ4 5
.
ÉÉ5 6'
lastVisibleCharacterIndex
ÉÉ6 O
=
ÉÉP Q*
m_lastVisibleCharacterOfLine
ÉÉR n
=
ÉÉo p+
m_lastVisibleCharacterOfLineÉÉq ç
<ÉÉé è-
m_firstVisibleCharacterOfLineÉÉê ≠
?ÉÉÆ Ø-
m_firstVisibleCharacterOfLineÉÉ∞ Õ
:ÉÉŒ œ,
m_lastVisibleCharacterOfLineÉÉ– Ï
;ÉÉÏ Ì

m_textInfo
ÖÖ 
.
ÖÖ 
lineInfo
ÖÖ '
[
ÖÖ' (
m_lineNumber
ÖÖ( 4
]
ÖÖ4 5
.
ÖÖ5 6
characterCount
ÖÖ6 D
=
ÖÖE F

m_textInfo
ÖÖG Q
.
ÖÖQ R
lineInfo
ÖÖR Z
[
ÖÖZ [
m_lineNumber
ÖÖ[ g
]
ÖÖg h
.
ÖÖh i 
lastCharacterIndex
ÖÖi {
-
ÖÖ| }

m_textInfoÖÖ~ à
.ÖÖà â
lineInfoÖÖâ ë
[ÖÖë í
m_lineNumberÖÖí û
]ÖÖû ü
.ÖÖü †#
firstCharacterIndexÖÖ† ≥
+ÖÖ¥ µ
$numÖÖ∂ ∑
;ÖÖ∑ ∏

m_textInfo
ÜÜ 
.
ÜÜ 
lineInfo
ÜÜ '
[
ÜÜ' (
m_lineNumber
ÜÜ( 4
]
ÜÜ4 5
.
ÜÜ5 6#
visibleCharacterCount
ÜÜ6 K
=
ÜÜL M)
m_lineVisibleCharacterCount
ÜÜN i
;
ÜÜi j

m_textInfo
áá 
.
áá 
lineInfo
áá '
[
áá' (
m_lineNumber
áá( 4
]
áá4 5
.
áá5 6
lineExtents
áá6 A
.
ááA B
min
ááB E
=
ááF G
new
ááH K
Vector2
ááL S
(
ááS T

m_textInfo
ááT ^
.
áá^ _
characterInfo
áá_ l
[
áál m,
m_firstVisibleCharacterOfLineáám ä
]ááä ã
.ááã å

bottomLeftááå ñ
.ááñ ó
xááó ò
,ááò ô
lineDescenderááö ß
)ááß ®
;áá® ©

m_textInfo
àà 
.
àà 
lineInfo
àà '
[
àà' (
m_lineNumber
àà( 4
]
àà4 5
.
àà5 6
lineExtents
àà6 A
.
ààA B
max
ààB E
=
ààF G
new
ààH K
Vector2
ààL S
(
ààS T

m_textInfo
ààT ^
.
àà^ _
characterInfo
àà_ l
[
ààl m+
m_lastVisibleCharacterOfLineààm â
]ààâ ä
.ààä ã
topRightààã ì
.ààì î
xààî ï
,ààï ñ
lineAscenderààó £
)àà£ §
;àà§ •

m_textInfo
ââ 
.
ââ 
lineInfo
ââ '
[
ââ' (
m_lineNumber
ââ( 4
]
ââ4 5
.
ââ5 6
length
ââ6 <
=
ââ= >

m_textInfo
ââ? I
.
ââI J
lineInfo
ââJ R
[
ââR S
m_lineNumber
ââS _
]
ââ_ `
.
ââ` a
lineExtents
ââa l
.
ââl m
max
ââm p
.
ââp q
x
ââq r
-
ââs t
(
ââu v
padding
ââv }
*
ââ~ #
currentElementScaleââÄ ì
)ââì î
;ââî ï

m_textInfo
ää 
.
ää 
lineInfo
ää '
[
ää' (
m_lineNumber
ää( 4
]
ää4 5
.
ää5 6
width
ää6 ;
=
ää< =
widthOfTextArea
ää> M
;
ääM N
if
åå 
(
åå 

m_textInfo
åå "
.
åå" #
lineInfo
åå# +
[
åå+ ,
m_lineNumber
åå, 8
]
åå8 9
.
åå9 :
characterCount
åå: H
==
ååI K
$num
ååL M
)
ååM N

m_textInfo
çç "
.
çç" #
lineInfo
çç# +
[
çç+ ,
m_lineNumber
çç, 8
]
çç8 9
.
çç9 :
	alignment
çç: C
=
ççD E!
m_lineJustification
ççF Y
;
ççY Z
float
èè 
maxAdvanceOffset
èè *
=
èè+ ,
(
èè- .
(
èè. / 
m_currentFontAsset
èè/ A
.
èèA B!
normalSpacingOffset
èèB U
+
èèV W(
characterSpacingAdjustment
èèX r
+
èès t$
boldSpacingAdjustmentèèu ä
)èèä ã
*èèå ç
currentEmScaleèèé ú
-èèù û

m_cSpacingèèü ©
)èè© ™
*èè´ ¨
(èè≠ Æ
$numèèÆ Ø
-èè∞ ±#
m_charWidthAdjDeltaèè≤ ≈
)èè≈ ∆
;èè∆ «
if
êê 
(
êê 

m_textInfo
êê "
.
êê" #
characterInfo
êê# 0
[
êê0 1*
m_lastVisibleCharacterOfLine
êê1 M
]
êêM N
.
êêN O
	isVisible
êêO X
)
êêX Y

m_textInfo
ëë "
.
ëë" #
lineInfo
ëë# +
[
ëë+ ,
m_lineNumber
ëë, 8
]
ëë8 9
.
ëë9 :

maxAdvance
ëë: D
=
ëëE F

m_textInfo
ëëG Q
.
ëëQ R
characterInfo
ëëR _
[
ëë_ `*
m_lastVisibleCharacterOfLine
ëë` |
]
ëë| }
.
ëë} ~
xAdvanceëë~ Ü
+ëëá à
(ëëâ ä
m_isRightToLeftëëä ô
?ëëö õ 
maxAdvanceOffsetëëú ¨
:ëë≠ Æ
-ëëØ ∞ 
maxAdvanceOffsetëë± ¡
)ëë¡ ¬
;ëë¬ √
else
íí 

m_textInfo
ìì "
.
ìì" #
lineInfo
ìì# +
[
ìì+ ,
m_lineNumber
ìì, 8
]
ìì8 9
.
ìì9 :

maxAdvance
ìì: D
=
ììE F

m_textInfo
ììG Q
.
ììQ R
characterInfo
ììR _
[
ìì_ `#
m_lastCharacterOfLine
ìì` u
]
ììu v
.
ììv w
xAdvance
ììw 
+ììÄ Å
(ììÇ É
m_isRightToLeftììÉ í
?ììì î 
maxAdvanceOffsetììï •
:ìì¶ ß
-ìì® © 
maxAdvanceOffsetìì™ ∫
)ìì∫ ª
;ììª º

m_textInfo
ïï 
.
ïï 
lineInfo
ïï '
[
ïï' (
m_lineNumber
ïï( 4
]
ïï4 5
.
ïï5 6
baseline
ïï6 >
=
ïï? @
$num
ïïA B
-
ïïC D
m_lineOffset
ïïE Q
;
ïïQ R

m_textInfo
ññ 
.
ññ 
lineInfo
ññ '
[
ññ' (
m_lineNumber
ññ( 4
]
ññ4 5
.
ññ5 6
ascender
ññ6 >
=
ññ? @
lineAscender
ññA M
;
ññM N

m_textInfo
óó 
.
óó 
lineInfo
óó '
[
óó' (
m_lineNumber
óó( 4
]
óó4 5
.
óó5 6
	descender
óó6 ?
=
óó@ A
lineDescender
óóB O
;
óóO P

m_textInfo
òò 
.
òò 
lineInfo
òò '
[
òò' (
m_lineNumber
òò( 4
]
òò4 5
.
òò5 6

lineHeight
òò6 @
=
òòA B
lineAscender
òòC O
-
òòP Q
lineDescender
òòR _
+
òò` a
lineGap
òòb i
*
òòj k
	baseScale
òòl u
;
òòu v
if
õõ 
(
õõ 
charCode
õõ  
==
õõ! #
$num
õõ$ &
||
õõ' )
charCode
õõ* 2
==
õõ3 5
$num
õõ6 8
||
õõ9 ;
charCode
õõ< D
==
õõE G
$num
õõH L
||
õõM O
charCode
õõP X
==
õõY [
$num
õõ\ b
||
õõc e
charCode
õõf n
==
õõo q
$num
õõr x
)
õõx y
{
úú #
SaveWordWrappingState
ûû -
(
ûû- .
ref
ûû. 1
m_SavedLineState
ûû2 B
,
ûûB C
i
ûûD E
,
ûûE F
m_characterCount
ûûG W
)
ûûW X
;
ûûX Y
m_lineNumber
†† $
+=
††% '
$num
††( )
;
††) *
isStartOfNewLine
°° (
=
°°) *
true
°°+ /
;
°°/ 0$
ignoreNonBreakingSpace
¢¢ .
=
¢¢/ 0
false
¢¢1 6
;
¢¢6 7
isFirstWordOfLine
££ )
=
££* +
true
££, 0
;
££0 1$
m_firstCharacterOfLine
•• .
=
••/ 0
m_characterCount
••1 A
+
••B C
$num
••D E
;
••E F)
m_lineVisibleCharacterCount
¶¶ 3
=
¶¶4 5
$num
¶¶6 7
;
¶¶7 8
if
©© 
(
©© 
m_lineNumber
©© (
>=
©©) +

m_textInfo
©©, 6
.
©©6 7
lineInfo
©©7 ?
.
©©? @
Length
©©@ F
)
©©F G
ResizeLineExtents
™™ -
(
™™- .
m_lineNumber
™™. :
)
™™: ;
;
™™; <
float
¨¨ !
lastVisibleAscender
¨¨ 1
=
¨¨2 3

m_textInfo
¨¨4 >
.
¨¨> ?
characterInfo
¨¨? L
[
¨¨L M
m_characterCount
¨¨M ]
]
¨¨] ^
.
¨¨^ _
adjustedAscender
¨¨_ o
;
¨¨o p
if
ØØ 
(
ØØ 
m_lineHeight
ØØ (
==
ØØ) +
TMP_Math
ØØ, 4
.
ØØ4 5
FLOAT_UNSET
ØØ5 @
)
ØØ@ A
{
∞∞ 
float
±± !
lineOffsetDelta
±±" 1
=
±±2 3
$num
±±4 5
-
±±6 7 
m_maxLineDescender
±±8 J
+
±±K L!
lastVisibleAscender
±±M `
+
±±a b
(
±±c d
lineGap
±±d k
+
±±l m!
m_lineSpacingDelta±±n Ä
)±±Ä Å
*±±Ç É
	baseScale±±Ñ ç
+±±é è
(±±ê ë
m_lineSpacing±±ë û
+±±ü †
(±±° ¢
charCode±±¢ ™
==±±´ ≠
$num±±Æ ∞
||±±± ≥
charCode±±¥ º
==±±Ω ø
$num±±¿ ∆
?±±« »"
m_paragraphSpacing±±… €
:±±‹ ›
$num±±ﬁ ﬂ
)±±ﬂ ‡
)±±‡ ·
*±±‚ „
currentEmScale±±‰ Ú
;±±Ú Û
m_lineOffset
≤≤ (
+=
≤≤) +
lineOffsetDelta
≤≤, ;
;
≤≤; <#
m_IsDrivenLineSpacing
≥≥ 1
=
≥≥2 3
false
≥≥4 9
;
≥≥9 :
}
¥¥ 
else
µµ 
{
∂∂ 
m_lineOffset
∑∑ (
+=
∑∑) +
m_lineHeight
∑∑, 8
+
∑∑9 :
(
∑∑; <
m_lineSpacing
∑∑< I
+
∑∑J K
(
∑∑L M
charCode
∑∑M U
==
∑∑V X
$num
∑∑Y [
||
∑∑\ ^
charCode
∑∑_ g
==
∑∑h j
$num
∑∑k q
?
∑∑r s!
m_paragraphSpacing∑∑t Ü
:∑∑á à
$num∑∑â ä
)∑∑ä ã
)∑∑ã å
*∑∑ç é
currentEmScale∑∑è ù
;∑∑ù û#
m_IsDrivenLineSpacing
∏∏ 1
=
∏∏2 3
true
∏∏4 8
;
∏∏8 9
}
ππ 
m_maxLineAscender
ªª )
=
ªª* +"
k_LargeNegativeFloat
ªª, @
;
ªª@ A 
m_maxLineDescender
ºº *
=
ºº+ ,"
k_LargePositiveFloat
ºº- A
;
ººA B#
m_startOfLineAscender
ΩΩ -
=
ΩΩ. /!
lastVisibleAscender
ΩΩ0 C
;
ΩΩC D

m_xAdvance
øø "
=
øø# $
$num
øø% &
+
øø' (
tag_LineIndent
øø) 7
+
øø8 9

tag_Indent
øø: D
;
øøD E#
SaveWordWrappingState
¡¡ -
(
¡¡- .
ref
¡¡. 1"
m_SavedWordWrapState
¡¡2 F
,
¡¡F G
i
¡¡H I
,
¡¡I J
m_characterCount
¡¡K [
)
¡¡[ \
;
¡¡\ ]#
SaveWordWrappingState
¬¬ -
(
¬¬- .
ref
¬¬. 1#
m_SavedLastValidState
¬¬2 G
,
¬¬G H
i
¬¬I J
,
¬¬J K
m_characterCount
¬¬L \
)
¬¬\ ]
;
¬¬] ^
m_characterCount
ƒƒ (
+=
ƒƒ) +
$num
ƒƒ, -
;
ƒƒ- .+
k_HandleLineTerminationMarker
∆∆ 5
.
∆∆5 6
End
∆∆6 9
(
∆∆9 :
)
∆∆: ;
;
∆∆; <
continue
»»  
;
»»  !
}
…… 
if
ÃÃ 
(
ÃÃ 
charCode
ÃÃ  
==
ÃÃ! #
$num
ÃÃ$ (
)
ÃÃ( )
i
ÕÕ 
=
ÕÕ #
m_TextProcessingArray
ÕÕ 1
.
ÕÕ1 2
Length
ÕÕ2 8
;
ÕÕ8 9+
k_HandleLineTerminationMarker
œœ 1
.
œœ1 2
End
œœ2 5
(
œœ5 6
)
œœ6 7
;
œœ7 8
}
–– "
k_SavePageInfoMarker
÷÷ $
.
÷÷$ %
Begin
÷÷% *
(
÷÷* +
)
÷÷+ ,
;
÷÷, -
if
ÿÿ 
(
ÿÿ 

m_textInfo
ÿÿ 
.
ÿÿ 
characterInfo
ÿÿ ,
[
ÿÿ, -
m_characterCount
ÿÿ- =
]
ÿÿ= >
.
ÿÿ> ?
	isVisible
ÿÿ? H
)
ÿÿH I
{
ŸŸ 
m_meshExtents
⁄⁄ !
.
⁄⁄! "
min
⁄⁄" %
.
⁄⁄% &
x
⁄⁄& '
=
⁄⁄( )
Mathf
⁄⁄* /
.
⁄⁄/ 0
Min
⁄⁄0 3
(
⁄⁄3 4
m_meshExtents
⁄⁄4 A
.
⁄⁄A B
min
⁄⁄B E
.
⁄⁄E F
x
⁄⁄F G
,
⁄⁄G H

m_textInfo
⁄⁄I S
.
⁄⁄S T
characterInfo
⁄⁄T a
[
⁄⁄a b
m_characterCount
⁄⁄b r
]
⁄⁄r s
.
⁄⁄s t

bottomLeft
⁄⁄t ~
.
⁄⁄~ 
x⁄⁄ Ä
)⁄⁄Ä Å
;⁄⁄Å Ç
m_meshExtents
€€ !
.
€€! "
min
€€" %
.
€€% &
y
€€& '
=
€€( )
Mathf
€€* /
.
€€/ 0
Min
€€0 3
(
€€3 4
m_meshExtents
€€4 A
.
€€A B
min
€€B E
.
€€E F
y
€€F G
,
€€G H

m_textInfo
€€I S
.
€€S T
characterInfo
€€T a
[
€€a b
m_characterCount
€€b r
]
€€r s
.
€€s t

bottomLeft
€€t ~
.
€€~ 
y€€ Ä
)€€Ä Å
;€€Å Ç
m_meshExtents
›› !
.
››! "
max
››" %
.
››% &
x
››& '
=
››( )
Mathf
››* /
.
››/ 0
Max
››0 3
(
››3 4
m_meshExtents
››4 A
.
››A B
max
››B E
.
››E F
x
››F G
,
››G H

m_textInfo
››I S
.
››S T
characterInfo
››T a
[
››a b
m_characterCount
››b r
]
››r s
.
››s t
topRight
››t |
.
››| }
x
››} ~
)
››~ 
;›› Ä
m_meshExtents
ﬁﬁ !
.
ﬁﬁ! "
max
ﬁﬁ" %
.
ﬁﬁ% &
y
ﬁﬁ& '
=
ﬁﬁ( )
Mathf
ﬁﬁ* /
.
ﬁﬁ/ 0
Max
ﬁﬁ0 3
(
ﬁﬁ3 4
m_meshExtents
ﬁﬁ4 A
.
ﬁﬁA B
max
ﬁﬁB E
.
ﬁﬁE F
y
ﬁﬁF G
,
ﬁﬁG H

m_textInfo
ﬁﬁI S
.
ﬁﬁS T
characterInfo
ﬁﬁT a
[
ﬁﬁa b
m_characterCount
ﬁﬁb r
]
ﬁﬁr s
.
ﬁﬁs t
topRight
ﬁﬁt |
.
ﬁﬁ| }
y
ﬁﬁ} ~
)
ﬁﬁ~ 
;ﬁﬁ Ä
}
‚‚ 
if
ÊÊ 
(
ÊÊ 
m_overflowMode
ÊÊ "
==
ÊÊ# %
TextOverflowModes
ÊÊ& 7
.
ÊÊ7 8
Page
ÊÊ8 <
&&
ÊÊ= ?
charCode
ÊÊ@ H
!=
ÊÊI K
$num
ÊÊL N
&&
ÊÊO Q
charCode
ÊÊR Z
!=
ÊÊ[ ]
$num
ÊÊ^ `
&&
ÊÊa c
charCode
ÊÊd l
!=
ÊÊm o
$num
ÊÊp r
&&
ÊÊs u
charCode
ÊÊv ~
!=ÊÊ Å
$numÊÊÇ à
&&ÊÊâ ã
charCodeÊÊå î
!=ÊÊï ó
$numÊÊò û
)ÊÊû ü
{
ÁÁ 
if
ÈÈ 
(
ÈÈ 
m_pageNumber
ÈÈ $
+
ÈÈ% &
$num
ÈÈ' (
>
ÈÈ) *

m_textInfo
ÈÈ+ 5
.
ÈÈ5 6
pageInfo
ÈÈ6 >
.
ÈÈ> ?
Length
ÈÈ? E
)
ÈÈE F
TMP_TextInfo
ÍÍ $
.
ÍÍ$ %
Resize
ÍÍ% +
(
ÍÍ+ ,
ref
ÍÍ, /

m_textInfo
ÍÍ0 :
.
ÍÍ: ;
pageInfo
ÍÍ; C
,
ÍÍC D
m_pageNumber
ÍÍE Q
+
ÍÍR S
$num
ÍÍT U
,
ÍÍU V
true
ÍÍW [
)
ÍÍ[ \
;
ÍÍ\ ]

m_textInfo
ÏÏ 
.
ÏÏ 
pageInfo
ÏÏ '
[
ÏÏ' (
m_pageNumber
ÏÏ( 4
]
ÏÏ4 5
.
ÏÏ5 6
ascender
ÏÏ6 >
=
ÏÏ? @
m_PageAscender
ÏÏA O
;
ÏÏO P

m_textInfo
ÌÌ 
.
ÌÌ 
pageInfo
ÌÌ '
[
ÌÌ' (
m_pageNumber
ÌÌ( 4
]
ÌÌ4 5
.
ÌÌ5 6
	descender
ÌÌ6 ?
=
ÌÌ@ A 
m_ElementDescender
ÌÌB T
<
ÌÌU V

m_textInfo
ÌÌW a
.
ÌÌa b
pageInfo
ÌÌb j
[
ÌÌj k
m_pageNumber
ÌÌk w
]
ÌÌw x
.
ÌÌx y
	descenderÌÌy Ç
?
ÓÓ  
m_ElementDescender
ÓÓ ,
:
ÔÔ 

m_textInfo
ÔÔ $
.
ÔÔ$ %
pageInfo
ÔÔ% -
[
ÔÔ- .
m_pageNumber
ÔÔ. :
]
ÔÔ: ;
.
ÔÔ; <
	descender
ÔÔ< E
;
ÔÔE F
if
ÒÒ 
(
ÒÒ 
m_pageNumber
ÒÒ $
==
ÒÒ% '
$num
ÒÒ( )
&&
ÒÒ* ,
m_characterCount
ÒÒ- =
==
ÒÒ> @
$num
ÒÒA B
)
ÒÒB C

m_textInfo
ÚÚ "
.
ÚÚ" #
pageInfo
ÚÚ# +
[
ÚÚ+ ,
m_pageNumber
ÚÚ, 8
]
ÚÚ8 9
.
ÚÚ9 :!
firstCharacterIndex
ÚÚ: M
=
ÚÚN O
m_characterCount
ÚÚP `
;
ÚÚ` a
else
ÛÛ 
if
ÛÛ 
(
ÛÛ 
m_characterCount
ÛÛ -
>
ÛÛ. /
$num
ÛÛ0 1
&&
ÛÛ2 4
m_pageNumber
ÛÛ5 A
!=
ÛÛB D

m_textInfo
ÛÛE O
.
ÛÛO P
characterInfo
ÛÛP ]
[
ÛÛ] ^
m_characterCount
ÛÛ^ n
-
ÛÛo p
$num
ÛÛq r
]
ÛÛr s
.
ÛÛs t

pageNumber
ÛÛt ~
)
ÛÛ~ 
{
ÙÙ 

m_textInfo
ıı "
.
ıı" #
pageInfo
ıı# +
[
ıı+ ,
m_pageNumber
ıı, 8
-
ıı9 :
$num
ıı; <
]
ıı< =
.
ıı= > 
lastCharacterIndex
ıı> P
=
ııQ R
m_characterCount
ııS c
-
ııd e
$num
ııf g
;
ııg h

m_textInfo
ˆˆ "
.
ˆˆ" #
pageInfo
ˆˆ# +
[
ˆˆ+ ,
m_pageNumber
ˆˆ, 8
]
ˆˆ8 9
.
ˆˆ9 :!
firstCharacterIndex
ˆˆ: M
=
ˆˆN O
m_characterCount
ˆˆP `
;
ˆˆ` a
}
˜˜ 
else
¯¯ 
if
¯¯ 
(
¯¯ 
m_characterCount
¯¯ -
==
¯¯. 0!
totalCharacterCount
¯¯1 D
-
¯¯E F
$num
¯¯G H
)
¯¯H I

m_textInfo
˘˘ "
.
˘˘" #
pageInfo
˘˘# +
[
˘˘+ ,
m_pageNumber
˘˘, 8
]
˘˘8 9
.
˘˘9 : 
lastCharacterIndex
˘˘: L
=
˘˘M N
m_characterCount
˘˘O _
;
˘˘_ `
}
˙˙ "
k_SavePageInfoMarker
˚˚ $
.
˚˚$ %
End
˚˚% (
(
˚˚( )
)
˚˚) *
;
˚˚* +
if
ÅÅ 
(
ÅÅ "
m_enableWordWrapping
ÅÅ (
||
ÅÅ) +
m_overflowMode
ÅÅ, :
==
ÅÅ; =
TextOverflowModes
ÅÅ> O
.
ÅÅO P
Truncate
ÅÅP X
||
ÅÅY [
m_overflowMode
ÅÅ\ j
==
ÅÅk m
TextOverflowModes
ÅÅn 
.ÅÅ Ä
EllipsisÅÅÄ à
||ÅÅâ ã
m_overflowModeÅÅå ö
==ÅÅõ ù!
TextOverflowModesÅÅû Ø
.ÅÅØ ∞
LinkedÅÅ∞ ∂
)ÅÅ∂ ∑
{
ÇÇ *
k_SaveProcessingStatesMarker
ÉÉ 0
.
ÉÉ0 1
Begin
ÉÉ1 6
(
ÉÉ6 7
)
ÉÉ7 8
;
ÉÉ8 9
if
ÖÖ 
(
ÖÖ 
(
ÖÖ 
isWhiteSpace
ÖÖ %
||
ÖÖ& (
charCode
ÖÖ) 1
==
ÖÖ2 4
$num
ÖÖ5 ;
||
ÖÖ< >
charCode
ÖÖ? G
==
ÖÖH J
$num
ÖÖK O
||
ÖÖP R
charCode
ÖÖS [
==
ÖÖ\ ^
$num
ÖÖ_ c
)
ÖÖc d
&&
ÖÖe g
(
ÖÖh i
!
ÖÖi j"
m_isNonBreakingSpace
ÖÖj ~
||ÖÖ Å&
ignoreNonBreakingSpaceÖÖÇ ò
)ÖÖò ô
&&ÖÖö ú
charCodeÖÖù •
!=ÖÖ¶ ®
$numÖÖ© ≠
&&ÖÖÆ ∞
charCodeÖÖ± π
!=ÖÖ∫ º
$numÖÖΩ √
&&ÖÖƒ ∆
charCodeÖÖ« œ
!=ÖÖ– “
$numÖÖ” Ÿ
&&ÖÖ⁄ ‹
charCodeÖÖ› Â
!=ÖÖÊ Ë
$numÖÖÈ Ô
&&ÖÖ Ú
charCodeÖÖÛ ˚
!=ÖÖ¸ ˛
$numÖÖˇ Ö
)ÖÖÖ Ü
{
ÜÜ #
SaveWordWrappingState
ââ -
(
ââ- .
ref
ââ. 1"
m_SavedWordWrapState
ââ2 F
,
ââF G
i
ââH I
,
ââI J
m_characterCount
ââK [
)
ââ[ \
;
ââ\ ]
isFirstWordOfLine
ää )
=
ää* +
false
ää, 1
;
ää1 2'
m_SavedSoftLineBreakState
éé 1
.
éé1 2 
previous_WordBreak
éé2 D
=
ééE F
-
ééG H
$num
ééH I
;
ééI J
}
èè 
else
ëë 
if
ëë 
(
ëë "
m_isNonBreakingSpace
ëë 1
==
ëë2 4
false
ëë5 :
&&
ëë; =
(
íí 
(
íí 
charCode
íí '
>
íí( )
$num
íí* 0
&&
íí1 3
charCode
íí4 <
<
íí= >
$num
íí? E
||
ííF H
charCode
ìì '
>
ìì( )
$num
ìì* 0
&&
ìì1 3
charCode
ìì4 <
<
ìì= >
$num
ìì? E
||
ììF H
charCode
îî '
>
îî( )
$num
îî* 0
&&
îî1 3
charCode
îî4 <
<
îî= >
$num
îî? E
)
îîE F
&&
îîF H
TMP_Settings
ïï *
.
ïï* +.
 useModernHangulLineBreakingRules
ïï+ K
==
ïïL N
false
ïïO T
||
ïïU W
(
óó 
charCode
óó '
>
óó( )
$num
óó* 0
&&
óó1 3
charCode
óó4 <
<
óó= >
$num
óó? E
||
óóF H
charCode
òò '
>
òò( )
$num
òò* 0
&&
òò1 3
charCode
òò4 <
<
òò= >
$num
òò? E
||
òòF H
charCode
ôô '
>
ôô( )
$num
ôô* 0
&&
ôô1 3
charCode
ôô4 <
<
ôô= >
$num
ôô? E
||
ôôF H
charCode
öö '
>
öö( )
$num
öö* 0
&&
öö1 3
charCode
öö4 <
<
öö= >
$num
öö? E
)
ööE F
)
ööF G
)
ööG H
{
õõ 
bool
úú '
isCurrentLeadingCharacter
úú 6
=
úú7 8
TMP_Settings
úú9 E
.
úúE F
linebreakingRules
úúF W
.
úúW X
leadingCharacters
úúX i
.
úúi j
ContainsKey
úúj u
(
úúu v
charCode
úúv ~
)
úú~ 
;úú Ä
bool
ùù &
isNextFollowingCharacter
ùù 5
=
ùù6 7
m_characterCount
ùù8 H
<
ùùI J!
totalCharacterCount
ùùK ^
-
ùù_ `
$num
ùùa b
&&
ùùc e
TMP_Settings
ùùf r
.
ùùr s 
linebreakingRulesùùs Ñ
.ùùÑ Ö#
followingCharactersùùÖ ò
.ùùò ô
ContainsKeyùùô §
(ùù§ •

m_textInfoùù• Ø
.ùùØ ∞
characterInfoùù∞ Ω
[ùùΩ æ 
m_characterCountùùæ Œ
+ùùœ –
$numùù— “
]ùù“ ”
.ùù” ‘
	characterùù‘ ›
)ùù› ﬁ
;ùùﬁ ﬂ
if
üü 
(
üü '
isCurrentLeadingCharacter
üü 5
==
üü6 8
false
üü9 >
)
üü> ?
{
†† 
if
°° 
(
°°  &
isNextFollowingCharacter
°°  8
==
°°9 ;
false
°°< A
)
°°A B
{
¢¢ #
SaveWordWrappingState
££  5
(
££5 6
ref
££6 9"
m_SavedWordWrapState
££: N
,
££N O
i
££P Q
,
££Q R
m_characterCount
££S c
)
££c d
;
££d e
isFirstWordOfLine
§§  1
=
§§2 3
false
§§4 9
;
§§9 :
}
•• 
if
ßß 
(
ßß  
isFirstWordOfLine
ßß  1
)
ßß1 2
{
®® 
if
™™  "
(
™™# $
isWhiteSpace
™™$ 0
)
™™0 1#
SaveWordWrappingState
´´$ 9
(
´´9 :
ref
´´: ='
m_SavedSoftLineBreakState
´´> W
,
´´W X
i
´´Y Z
,
´´Z [
m_characterCount
´´\ l
)
´´l m
;
´´m n#
SaveWordWrappingState
≠≠  5
(
≠≠5 6
ref
≠≠6 9"
m_SavedWordWrapState
≠≠: N
,
≠≠N O
i
≠≠P Q
,
≠≠Q R
m_characterCount
≠≠S c
)
≠≠c d
;
≠≠d e
}
ÆÆ 
}
ØØ 
else
∞∞ 
{
±± 
if
≤≤ 
(
≤≤  
isFirstWordOfLine
≤≤  1
&&
≤≤2 4$
isFirstCharacterOfLine
≤≤5 K
)
≤≤K L
{
≥≥ 
if
µµ  "
(
µµ# $
isWhiteSpace
µµ$ 0
)
µµ0 1#
SaveWordWrappingState
∂∂$ 9
(
∂∂9 :
ref
∂∂: ='
m_SavedSoftLineBreakState
∂∂> W
,
∂∂W X
i
∂∂Y Z
,
∂∂Z [
m_characterCount
∂∂\ l
)
∂∂l m
;
∂∂m n#
SaveWordWrappingState
∏∏  5
(
∏∏5 6
ref
∏∏6 9"
m_SavedWordWrapState
∏∏: N
,
∏∏N O
i
∏∏P Q
,
∏∏Q R
m_characterCount
∏∏S c
)
∏∏c d
;
∏∏d e
}
ππ 
}
∫∫ 
}
ΩΩ 
else
ææ 
if
ææ 
(
ææ 
isFirstWordOfLine
ææ .
)
ææ. /
{
øø 
if
¡¡ 
(
¡¡ 
isWhiteSpace
¡¡ (
||
¡¡) +
(
¡¡, -
charCode
¡¡- 5
==
¡¡6 8
$num
¡¡9 =
&&
¡¡> @!
isSoftHyphenIgnored
¡¡A T
==
¡¡U W
false
¡¡X ]
)
¡¡] ^
)
¡¡^ _#
SaveWordWrappingState
¬¬ 1
(
¬¬1 2
ref
¬¬2 5'
m_SavedSoftLineBreakState
¬¬6 O
,
¬¬O P
i
¬¬Q R
,
¬¬R S
m_characterCount
¬¬T d
)
¬¬d e
;
¬¬e f#
SaveWordWrappingState
ƒƒ -
(
ƒƒ- .
ref
ƒƒ. 1"
m_SavedWordWrapState
ƒƒ2 F
,
ƒƒF G
i
ƒƒH I
,
ƒƒI J
m_characterCount
ƒƒK [
)
ƒƒ[ \
;
ƒƒ\ ]
}
∆∆ *
k_SaveProcessingStatesMarker
»» 0
.
»»0 1
End
»»1 4
(
»»4 5
)
»»5 6
;
»»6 7
}
…… #
SaveWordWrappingState
ÃÃ %
(
ÃÃ% &
ref
ÃÃ& )#
m_SavedLastValidState
ÃÃ* ?
,
ÃÃ? @
i
ÃÃA B
,
ÃÃB C
m_characterCount
ÃÃD T
)
ÃÃT U
;
ÃÃU V
m_characterCount
ŒŒ  
+=
ŒŒ! #
$num
ŒŒ$ %
;
ŒŒ% &
}
œœ 
fontSizeDelta
”” 
=
”” 
m_maxFontSize
”” )
-
””* +
m_minFontSize
””, 9
;
””9 :
if
‘‘ 
(
‘‘  
m_enableAutoSizing
‘‘7 I
&&
‘‘J L
fontSizeDelta
‘‘M Z
>
‘‘[ \
$num
‘‘] c
&&
‘‘d f

m_fontSize
‘‘g q
<
‘‘r s
m_fontSizeMax‘‘t Å
&&‘‘Ç Ñ(
m_AutoSizeIterationCount‘‘Ö ù
<‘‘û ü+
m_AutoSizeMaxIterationCount‘‘† ª
)‘‘ª º
{
’’ 
if
◊◊ 
(
◊◊ !
m_charWidthAdjDelta
◊◊ '
<
◊◊( )
m_charWidthMaxAdj
◊◊* ;
/
◊◊< =
$num
◊◊> A
)
◊◊A B!
m_charWidthAdjDelta
ÿÿ '
=
ÿÿ( )
$num
ÿÿ* +
;
ÿÿ+ ,
m_minFontSize
⁄⁄ 
=
⁄⁄ 

m_fontSize
⁄⁄  *
;
⁄⁄* +
float
‹‹ 
	sizeDelta
‹‹ 
=
‹‹  !
Mathf
‹‹" '
.
‹‹' (
Max
‹‹( +
(
‹‹+ ,
(
‹‹, -
m_maxFontSize
‹‹- :
-
‹‹; <

m_fontSize
‹‹= G
)
‹‹G H
/
‹‹I J
$num
‹‹K L
,
‹‹L M
$num
‹‹N S
)
‹‹S T
;
‹‹T U

m_fontSize
›› 
+=
›› 
	sizeDelta
›› '
;
››' (

m_fontSize
ﬁﬁ 
=
ﬁﬁ 
Mathf
ﬁﬁ "
.
ﬁﬁ" #
Min
ﬁﬁ# &
(
ﬁﬁ& '
(
ﬁﬁ' (
int
ﬁﬁ( +
)
ﬁﬁ+ ,
(
ﬁﬁ, -

m_fontSize
ﬁﬁ- 7
*
ﬁﬁ8 9
$num
ﬁﬁ: <
+
ﬁﬁ= >
$num
ﬁﬁ? C
)
ﬁﬁC D
/
ﬁﬁE F
$num
ﬁﬁG J
,
ﬁﬁJ K
m_fontSizeMax
ﬁﬁL Y
)
ﬁﬁY Z
;
ﬁﬁZ [(
k_GenerateTextPhaseIMarker
·· *
.
··* +
End
··+ .
(
··. /
)
··/ 0
;
··0 1"
k_GenerateTextMarker
‚‚ $
.
‚‚$ %
End
‚‚% (
(
‚‚( )
)
‚‚) *
;
‚‚* +
return
„„ 
;
„„ 
}
‰‰ &
m_IsAutoSizePointSizeSet
ÁÁ $
=
ÁÁ% &
true
ÁÁ' +
;
ÁÁ+ ,
if
ÈÈ 
(
ÈÈ &
m_AutoSizeIterationCount
ÈÈ (
>=
ÈÈ) +)
m_AutoSizeMaxIterationCount
ÈÈ, G
)
ÈÈG H
Debug
ÍÍ 
.
ÍÍ 
Log
ÍÍ 
(
ÍÍ 
$str
ÍÍ 7
+
ÍÍ8 9&
m_AutoSizeIterationCount
ÍÍ: R
+
ÍÍS T
$str
ÍÍU k
+
ÍÍl m

m_fontSize
ÍÍn x
)
ÍÍx y
;
ÍÍy z
if
ÌÌ 
(
ÌÌ 
m_characterCount
ÌÌ  
==
ÌÌ! #
$num
ÌÌ$ %
||
ÌÌ& (
(
ÌÌ) *
m_characterCount
ÌÌ* :
==
ÌÌ; =
$num
ÌÌ> ?
&&
ÌÌ@ B
charCode
ÌÌC K
==
ÌÌL N
$num
ÌÌO S
)
ÌÌS T
)
ÌÌT U
{
ÓÓ 
	ClearMesh
ÔÔ 
(
ÔÔ 
true
ÔÔ 
)
ÔÔ 
;
ÔÔ   
TMPro_EventManager
ÚÚ "
.
ÚÚ" #
ON_TEXT_CHANGED
ÚÚ# 2
(
ÚÚ2 3
this
ÚÚ3 7
)
ÚÚ7 8
;
ÚÚ8 9(
k_GenerateTextPhaseIMarker
ÛÛ *
.
ÛÛ* +
End
ÛÛ+ .
(
ÛÛ. /
)
ÛÛ/ 0
;
ÛÛ0 1"
k_GenerateTextMarker
ÙÙ $
.
ÙÙ$ %
End
ÙÙ% (
(
ÙÙ( )
)
ÙÙ) *
;
ÙÙ* +
return
ıı 
;
ıı 
}
ˆˆ (
k_GenerateTextPhaseIMarker
˘˘ &
.
˘˘& '
End
˘˘' *
(
˘˘* +
)
˘˘+ ,
;
˘˘, -)
k_GenerateTextPhaseIIMarker
¸¸ '
.
¸¸' (
Begin
¸¸( -
(
¸¸- .
)
¸¸. /
;
¸¸/ 0
int
˝˝ 
last_vert_index
˝˝ 
=
˝˝  !"
m_materialReferences
˝˝" 6
[
˝˝6 7
m_Underline
˝˝7 B
.
˝˝B C
materialIndex
˝˝C P
]
˝˝P Q
.
˝˝Q R
referenceCount
˝˝R `
*
˝˝a b
$num
˝˝c d
;
˝˝d e

m_textInfo
ÄÄ 
.
ÄÄ 
meshInfo
ÄÄ 
[
ÄÄ  
$num
ÄÄ  !
]
ÄÄ! "
.
ÄÄ" #
Clear
ÄÄ# (
(
ÄÄ( )
false
ÄÄ) .
)
ÄÄ. /
;
ÄÄ/ 0
Vector3
ÑÑ 
anchorOffset
ÑÑ  
=
ÑÑ! "
Vector3
ÑÑ# *
.
ÑÑ* +
zero
ÑÑ+ /
;
ÑÑ/ 0
Vector3
ÖÖ 
[
ÖÖ 
]
ÖÖ 
corners
ÖÖ 
=
ÖÖ $
m_RectTransformCorners
ÖÖ  6
;
ÖÖ6 7
switch
àà 
(
àà !
m_VerticalAlignment
àà '
)
àà' (
{
ââ 
case
ãã &
VerticalAlignmentOptions
ãã -
.
ãã- .
Top
ãã. 1
:
ãã1 2
if
åå 
(
åå 
m_overflowMode
åå &
!=
åå' )
TextOverflowModes
åå* ;
.
åå; <
Page
åå< @
)
åå@ A
anchorOffset
çç $
=
çç% &
corners
çç' .
[
çç. /
$num
çç/ 0
]
çç0 1
+
çç2 3
new
çç4 7
Vector3
çç8 ?
(
çç? @
$num
çç@ A
+
ççB C
margins
ççD K
.
ççK L
x
ççL M
,
ççM N
$num
ççO P
-
ççQ R
m_maxTextAscender
ççS d
-
ççe f
margins
ççg n
.
ççn o
y
çço p
,
ççp q
$num
ççr s
)
ççs t
;
ççt u
else
éé 
anchorOffset
èè $
=
èè% &
corners
èè' .
[
èè. /
$num
èè/ 0
]
èè0 1
+
èè2 3
new
èè4 7
Vector3
èè8 ?
(
èè? @
$num
èè@ A
+
èèB C
margins
èèD K
.
èèK L
x
èèL M
,
èèM N
$num
èèO P
-
èèQ R

m_textInfo
èèS ]
.
èè] ^
pageInfo
èè^ f
[
èèf g
pageToDisplay
èèg t
]
èèt u
.
èèu v
ascender
èèv ~
-èè Ä
marginsèèÅ à
.èèà â
yèèâ ä
,èèä ã
$numèèå ç
)èèç é
;èèé è
break
êê 
;
êê 
case
ìì &
VerticalAlignmentOptions
ìì -
.
ìì- .
Middle
ìì. 4
:
ìì4 5
if
îî 
(
îî 
m_overflowMode
îî &
!=
îî' )
TextOverflowModes
îî* ;
.
îî; <
Page
îî< @
)
îî@ A
anchorOffset
ïï $
=
ïï% &
(
ïï' (
corners
ïï( /
[
ïï/ 0
$num
ïï0 1
]
ïï1 2
+
ïï3 4
corners
ïï5 <
[
ïï< =
$num
ïï= >
]
ïï> ?
)
ïï? @
/
ïïA B
$num
ïïC D
+
ïïE F
new
ïïG J
Vector3
ïïK R
(
ïïR S
$num
ïïS T
+
ïïU V
margins
ïïW ^
.
ïï^ _
x
ïï_ `
,
ïï` a
$num
ïïb c
-
ïïd e
(
ïïf g
m_maxTextAscender
ïïg x
+
ïïy z
marginsïï{ Ç
.ïïÇ É
yïïÉ Ñ
+ïïÖ Ü#
maxVisibleDescenderïïá ö
-ïïõ ú
marginsïïù §
.ïï§ •
wïï• ¶
)ïï¶ ß
/ïï® ©
$numïï™ ´
,ïï´ ¨
$numïï≠ Æ
)ïïÆ Ø
;ïïØ ∞
else
ññ 
anchorOffset
óó $
=
óó% &
(
óó' (
corners
óó( /
[
óó/ 0
$num
óó0 1
]
óó1 2
+
óó3 4
corners
óó5 <
[
óó< =
$num
óó= >
]
óó> ?
)
óó? @
/
óóA B
$num
óóC D
+
óóE F
new
óóG J
Vector3
óóK R
(
óóR S
$num
óóS T
+
óóU V
margins
óóW ^
.
óó^ _
x
óó_ `
,
óó` a
$num
óób c
-
óód e
(
óóf g

m_textInfo
óóg q
.
óóq r
pageInfo
óór z
[
óóz {
pageToDisplayóó{ à
]óóà â
.óóâ ä
ascenderóóä í
+óóì î
marginsóóï ú
.óóú ù
yóóù û
+óóü †

m_textInfoóó° ´
.óó´ ¨
pageInfoóó¨ ¥
[óó¥ µ
pageToDisplayóóµ ¬
]óó¬ √
.óó√ ƒ
	descenderóóƒ Õ
-óóŒ œ
marginsóó– ◊
.óó◊ ÿ
wóóÿ Ÿ
)óóŸ ⁄
/óó€ ‹
$numóó› ﬁ
,óóﬁ ﬂ
$numóó‡ ·
)óó· ‚
;óó‚ „
break
òò 
;
òò 
case
õõ &
VerticalAlignmentOptions
õõ -
.
õõ- .
Bottom
õõ. 4
:
õõ4 5
if
úú 
(
úú 
m_overflowMode
úú &
!=
úú' )
TextOverflowModes
úú* ;
.
úú; <
Page
úú< @
)
úú@ A
anchorOffset
ùù $
=
ùù% &
corners
ùù' .
[
ùù. /
$num
ùù/ 0
]
ùù0 1
+
ùù2 3
new
ùù4 7
Vector3
ùù8 ?
(
ùù? @
$num
ùù@ A
+
ùùB C
margins
ùùD K
.
ùùK L
x
ùùL M
,
ùùM N
$num
ùùO P
-
ùùQ R!
maxVisibleDescender
ùùS f
+
ùùg h
margins
ùùi p
.
ùùp q
w
ùùq r
,
ùùr s
$num
ùùt u
)
ùùu v
;
ùùv w
else
ûû 
anchorOffset
üü $
=
üü% &
corners
üü' .
[
üü. /
$num
üü/ 0
]
üü0 1
+
üü2 3
new
üü4 7
Vector3
üü8 ?
(
üü? @
$num
üü@ A
+
üüB C
margins
üüD K
.
üüK L
x
üüL M
,
üüM N
$num
üüO P
-
üüQ R

m_textInfo
üüS ]
.
üü] ^
pageInfo
üü^ f
[
üüf g
pageToDisplay
üüg t
]
üüt u
.
üüu v
	descender
üüv 
+üüÄ Å
marginsüüÇ â
.üüâ ä
wüüä ã
,üüã å
$numüüç é
)üüé è
;üüè ê
break
†† 
;
†† 
case
££ &
VerticalAlignmentOptions
££ -
.
££- .
Baseline
££. 6
:
££6 7
anchorOffset
§§  
=
§§! "
(
§§# $
corners
§§$ +
[
§§+ ,
$num
§§, -
]
§§- .
+
§§/ 0
corners
§§1 8
[
§§8 9
$num
§§9 :
]
§§: ;
)
§§; <
/
§§= >
$num
§§? @
+
§§A B
new
§§C F
Vector3
§§G N
(
§§N O
$num
§§O P
+
§§Q R
margins
§§S Z
.
§§Z [
x
§§[ \
,
§§\ ]
$num
§§^ _
,
§§_ `
$num
§§a b
)
§§b c
;
§§c d
break
•• 
;
•• 
case
®® &
VerticalAlignmentOptions
®® -
.
®®- .
Geometry
®®. 6
:
®®6 7
anchorOffset
©©  
=
©©! "
(
©©# $
corners
©©$ +
[
©©+ ,
$num
©©, -
]
©©- .
+
©©/ 0
corners
©©1 8
[
©©8 9
$num
©©9 :
]
©©: ;
)
©©; <
/
©©= >
$num
©©? @
+
©©A B
new
©©C F
Vector3
©©G N
(
©©N O
$num
©©O P
+
©©Q R
margins
©©S Z
.
©©Z [
x
©©[ \
,
©©\ ]
$num
©©^ _
-
©©` a
(
©©b c
m_meshExtents
©©c p
.
©©p q
max
©©q t
.
©©t u
y
©©u v
+
©©w x
margins©©y Ä
.©©Ä Å
y©©Å Ç
+©©É Ñ
m_meshExtents©©Ö í
.©©í ì
min©©ì ñ
.©©ñ ó
y©©ó ò
-©©ô ö
margins©©õ ¢
.©©¢ £
w©©£ §
)©©§ •
/©©¶ ß
$num©©® ©
,©©© ™
$num©©´ ¨
)©©¨ ≠
;©©≠ Æ
break
™™ 
;
™™ 
case
≠≠ &
VerticalAlignmentOptions
≠≠ -
.
≠≠- .
Capline
≠≠. 5
:
≠≠5 6
anchorOffset
ÆÆ  
=
ÆÆ! "
(
ÆÆ# $
corners
ÆÆ$ +
[
ÆÆ+ ,
$num
ÆÆ, -
]
ÆÆ- .
+
ÆÆ/ 0
corners
ÆÆ1 8
[
ÆÆ8 9
$num
ÆÆ9 :
]
ÆÆ: ;
)
ÆÆ; <
/
ÆÆ= >
$num
ÆÆ? @
+
ÆÆA B
new
ÆÆC F
Vector3
ÆÆG N
(
ÆÆN O
$num
ÆÆO P
+
ÆÆQ R
margins
ÆÆS Z
.
ÆÆZ [
x
ÆÆ[ \
,
ÆÆ\ ]
$num
ÆÆ^ _
-
ÆÆ` a
(
ÆÆb c
m_maxCapHeight
ÆÆc q
-
ÆÆr s
margins
ÆÆt {
.
ÆÆ{ |
y
ÆÆ| }
-
ÆÆ~ 
marginsÆÆÄ á
.ÆÆá à
wÆÆà â
)ÆÆâ ä
/ÆÆã å
$numÆÆç é
,ÆÆé è
$numÆÆê ë
)ÆÆë í
;ÆÆí ì
break
ØØ 
;
ØØ 
}
∞∞ 
Vector3
µµ !
justificationOffset
µµ '
=
µµ( )
Vector3
µµ* 1
.
µµ1 2
zero
µµ2 6
;
µµ6 7
Vector3
∂∂ 
offset
∂∂ 
=
∂∂ 
Vector3
∂∂ $
.
∂∂$ %
zero
∂∂% )
;
∂∂) *
int
∑∑ 
vert_index_X4
∑∑ 
=
∑∑ 
$num
∑∑  !
;
∑∑! "
int
∏∏ 
sprite_index_X4
∏∏ 
=
∏∏  !
$num
∏∏" #
;
∏∏# $
int
∫∫ 
	wordCount
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫ 
int
ªª 
	lineCount
ªª 
=
ªª 
$num
ªª 
;
ªª 
int
ºº 
lastLine
ºº 
=
ºº 
$num
ºº 
;
ºº 
bool
ΩΩ 
isFirstSeperator
ΩΩ !
=
ΩΩ" #
false
ΩΩ$ )
;
ΩΩ) *
bool
øø 
isStartOfWord
øø 
=
øø  
false
øø! &
;
øø& '
int
¿¿ 
wordFirstChar
¿¿ 
=
¿¿ 
$num
¿¿  !
;
¿¿! "
int
¡¡ 
wordLastChar
¡¡ 
=
¡¡ 
$num
¡¡  
;
¡¡  !
float
ƒƒ 

lossyScale
ƒƒ 
=
ƒƒ #
m_previousLossyScaleY
ƒƒ 4
=
ƒƒ5 6
this
ƒƒ7 ;
.
ƒƒ; <
	transform
ƒƒ< E
.
ƒƒE F

lossyScale
ƒƒF P
.
ƒƒP Q
y
ƒƒQ R
;
ƒƒR S
Color32
∆∆ 
underlineColor
∆∆ "
=
∆∆# $
Color
∆∆% *
.
∆∆* +
white
∆∆+ 0
;
∆∆0 1
Color32
««  
strikethroughColor
«« &
=
««' (
Color
««) .
.
««. /
white
««/ 4
;
««4 5
HighlightState
»» 
highlightState
»» )
=
»»* +
new
»», /
HighlightState
»»0 >
(
»»> ?
new
»»? B
Color32
»»C J
(
»»J K
$num
»»K N
,
»»N O
$num
»»P S
,
»»S T
$num
»»U V
,
»»V W
$num
»»X Z
)
»»Z [
,
»»[ \

TMP_Offset
»»] g
.
»»g h
zero
»»h l
)
»»l m
;
»»m n
float
…… 
xScale
…… 
=
…… 
$num
…… 
;
…… 
float
   
	xScaleMax
   
=
   
$num
   
;
    
float
ÀÀ !
underlineStartScale
ÀÀ %
=
ÀÀ& '
$num
ÀÀ( )
;
ÀÀ) *
float
ÃÃ 
underlineEndScale
ÃÃ #
=
ÃÃ$ %
$num
ÃÃ& '
;
ÃÃ' (
float
ÕÕ 
underlineMaxScale
ÕÕ #
=
ÕÕ$ %
$num
ÕÕ& '
;
ÕÕ' (
float
ŒŒ 
underlineBaseLine
ŒŒ #
=
ŒŒ$ %"
k_LargePositiveFloat
ŒŒ& :
;
ŒŒ: ;
int
œœ 
lastPage
œœ 
=
œœ 
$num
œœ 
;
œœ 
float
—— $
strikethroughPointSize
—— (
=
——) *
$num
——+ ,
;
——, -
float
““  
strikethroughScale
““ $
=
““% &
$num
““' (
;
““( )
float
”” #
strikethroughBaseline
”” '
=
””( )
$num
””* +
;
””+ ,
TMP_CharacterInfo
’’ 
[
’’ 
]
’’ 
characterInfos
’’  .
=
’’/ 0

m_textInfo
’’1 ;
.
’’; <
characterInfo
’’< I
;
’’I J
for
◊◊ 
(
◊◊ 
int
◊◊ 
i
◊◊ 
=
◊◊ 
$num
◊◊ 
;
◊◊ 
i
◊◊ 
<
◊◊ 
m_characterCount
◊◊  0
;
◊◊0 1
i
◊◊2 3
++
◊◊3 5
)
◊◊5 6
{
ÿÿ 
TMP_FontAsset
ŸŸ 
currentFontAsset
ŸŸ .
=
ŸŸ/ 0
characterInfos
ŸŸ1 ?
[
ŸŸ? @
i
ŸŸ@ A
]
ŸŸA B
.
ŸŸB C
	fontAsset
ŸŸC L
;
ŸŸL M
char
€€ 
unicode
€€ 
=
€€ 
characterInfos
€€ -
[
€€- .
i
€€. /
]
€€/ 0
.
€€0 1
	character
€€1 :
;
€€: ;
int
›› 
currentLine
›› 
=
››  !
characterInfos
››" 0
[
››0 1
i
››1 2
]
››2 3
.
››3 4

lineNumber
››4 >
;
››> ?
TMP_LineInfo
ﬁﬁ 
lineInfo
ﬁﬁ %
=
ﬁﬁ& '

m_textInfo
ﬁﬁ( 2
.
ﬁﬁ2 3
lineInfo
ﬁﬁ3 ;
[
ﬁﬁ; <
currentLine
ﬁﬁ< G
]
ﬁﬁG H
;
ﬁﬁH I
	lineCount
ﬂﬂ 
=
ﬂﬂ 
currentLine
ﬂﬂ '
+
ﬂﬂ( )
$num
ﬂﬂ* +
;
ﬂﬂ+ ,(
HorizontalAlignmentOptions
·· *
lineAlignment
··+ 8
=
··9 :
lineInfo
··; C
.
··C D
	alignment
··D M
;
··M N
switch
ÂÂ 
(
ÂÂ 
lineAlignment
ÂÂ %
)
ÂÂ% &
{
ÊÊ 
case
ÁÁ (
HorizontalAlignmentOptions
ÁÁ 3
.
ÁÁ3 4
Left
ÁÁ4 8
:
ÁÁ8 9
if
ËË 
(
ËË 
!
ËË 
m_isRightToLeft
ËË ,
)
ËË, -!
justificationOffset
ÈÈ /
=
ÈÈ0 1
new
ÈÈ2 5
Vector3
ÈÈ6 =
(
ÈÈ= >
$num
ÈÈ> ?
+
ÈÈ@ A
lineInfo
ÈÈB J
.
ÈÈJ K

marginLeft
ÈÈK U
,
ÈÈU V
$num
ÈÈW X
,
ÈÈX Y
$num
ÈÈZ [
)
ÈÈ[ \
;
ÈÈ\ ]
else
ÍÍ !
justificationOffset
ÎÎ /
=
ÎÎ0 1
new
ÎÎ2 5
Vector3
ÎÎ6 =
(
ÎÎ= >
$num
ÎÎ> ?
-
ÎÎ@ A
lineInfo
ÎÎB J
.
ÎÎJ K

maxAdvance
ÎÎK U
,
ÎÎU V
$num
ÎÎW X
,
ÎÎX Y
$num
ÎÎZ [
)
ÎÎ[ \
;
ÎÎ\ ]
break
ÏÏ 
;
ÏÏ 
case
ÓÓ (
HorizontalAlignmentOptions
ÓÓ 3
.
ÓÓ3 4
Center
ÓÓ4 :
:
ÓÓ: ;!
justificationOffset
ÔÔ +
=
ÔÔ, -
new
ÔÔ. 1
Vector3
ÔÔ2 9
(
ÔÔ9 :
lineInfo
ÔÔ: B
.
ÔÔB C

marginLeft
ÔÔC M
+
ÔÔN O
lineInfo
ÔÔP X
.
ÔÔX Y
width
ÔÔY ^
/
ÔÔ_ `
$num
ÔÔa b
-
ÔÔc d
lineInfo
ÔÔe m
.
ÔÔm n

maxAdvance
ÔÔn x
/
ÔÔy z
$num
ÔÔ{ |
,
ÔÔ| }
$num
ÔÔ~ 
,ÔÔ Ä
$numÔÔÅ Ç
)ÔÔÇ É
;ÔÔÉ Ñ
break
 
;
 
case
ÚÚ (
HorizontalAlignmentOptions
ÚÚ 3
.
ÚÚ3 4
Geometry
ÚÚ4 <
:
ÚÚ< =!
justificationOffset
ÛÛ +
=
ÛÛ, -
new
ÛÛ. 1
Vector3
ÛÛ2 9
(
ÛÛ9 :
lineInfo
ÛÛ: B
.
ÛÛB C

marginLeft
ÛÛC M
+
ÛÛN O
lineInfo
ÛÛP X
.
ÛÛX Y
width
ÛÛY ^
/
ÛÛ_ `
$num
ÛÛa b
-
ÛÛc d
(
ÛÛe f
lineInfo
ÛÛf n
.
ÛÛn o
lineExtents
ÛÛo z
.
ÛÛz {
min
ÛÛ{ ~
.
ÛÛ~ 
xÛÛ Ä
+ÛÛÅ Ç
lineInfoÛÛÉ ã
.ÛÛã å
lineExtentsÛÛå ó
.ÛÛó ò
maxÛÛò õ
.ÛÛõ ú
xÛÛú ù
)ÛÛù û
/ÛÛü †
$numÛÛ° ¢
,ÛÛ¢ £
$numÛÛ§ •
,ÛÛ• ¶
$numÛÛß ®
)ÛÛ® ©
;ÛÛ© ™
break
ÙÙ 
;
ÙÙ 
case
ˆˆ (
HorizontalAlignmentOptions
ˆˆ 3
.
ˆˆ3 4
Right
ˆˆ4 9
:
ˆˆ9 :
if
˜˜ 
(
˜˜ 
!
˜˜ 
m_isRightToLeft
˜˜ ,
)
˜˜, -!
justificationOffset
¯¯ /
=
¯¯0 1
new
¯¯2 5
Vector3
¯¯6 =
(
¯¯= >
lineInfo
¯¯> F
.
¯¯F G

marginLeft
¯¯G Q
+
¯¯R S
lineInfo
¯¯T \
.
¯¯\ ]
width
¯¯] b
-
¯¯c d
lineInfo
¯¯e m
.
¯¯m n

maxAdvance
¯¯n x
,
¯¯x y
$num
¯¯z {
,
¯¯{ |
$num
¯¯} ~
)
¯¯~ 
;¯¯ Ä
else
˘˘ !
justificationOffset
˙˙ /
=
˙˙0 1
new
˙˙2 5
Vector3
˙˙6 =
(
˙˙= >
lineInfo
˙˙> F
.
˙˙F G

marginLeft
˙˙G Q
+
˙˙R S
lineInfo
˙˙T \
.
˙˙\ ]
width
˙˙] b
,
˙˙b c
$num
˙˙d e
,
˙˙e f
$num
˙˙g h
)
˙˙h i
;
˙˙i j
break
˚˚ 
;
˚˚ 
case
˝˝ (
HorizontalAlignmentOptions
˝˝ 3
.
˝˝3 4
	Justified
˝˝4 =
:
˝˝= >
case
˛˛ (
HorizontalAlignmentOptions
˛˛ 3
.
˛˛3 4
Flush
˛˛4 9
:
˛˛9 :
if
ÄÄ 
(
ÄÄ 
unicode
ÄÄ #
==
ÄÄ$ &
$num
ÄÄ' +
||
ÄÄ, .
unicode
ÄÄ/ 6
==
ÄÄ7 9
$num
ÄÄ: >
||
ÄÄ? A
unicode
ÄÄB I
==
ÄÄJ L
$num
ÄÄM S
||
ÄÄT V
unicode
ÄÄW ^
==
ÄÄ_ a
$num
ÄÄb h
||
ÄÄi k
unicode
ÄÄl s
==
ÄÄt v
$num
ÄÄw {
)
ÄÄ{ |
breakÄÄ} Ç
;ÄÄÇ É
char
ÇÇ #
lastCharOfCurrentLine
ÇÇ 2
=
ÇÇ3 4
characterInfos
ÇÇ5 C
[
ÇÇC D
lineInfo
ÇÇD L
.
ÇÇL M 
lastCharacterIndex
ÇÇM _
]
ÇÇ_ `
.
ÇÇ` a
	character
ÇÇa j
;
ÇÇj k
bool
ÑÑ 
isFlush
ÑÑ $
=
ÑÑ% &
(
ÑÑ' (
lineAlignment
ÑÑ( 5
&
ÑÑ6 7(
HorizontalAlignmentOptions
ÑÑ8 R
.
ÑÑR S
Flush
ÑÑS X
)
ÑÑX Y
==
ÑÑZ \(
HorizontalAlignmentOptions
ÑÑ] w
.
ÑÑw x
Flush
ÑÑx }
;
ÑÑ} ~
if
àà 
(
àà 
char
àà  
.
àà  !
	IsControl
àà! *
(
àà* +#
lastCharOfCurrentLine
àà+ @
)
àà@ A
==
ààB D
false
ààE J
&&
ààK M
currentLine
ààN Y
<
ààZ [
m_lineNumber
àà\ h
||
àài k
isFlush
ààl s
||
ààt v
lineInfo
ààw 
.àà Ä

maxAdvanceààÄ ä
>ààã å
lineInfoààç ï
.ààï ñ
widthààñ õ
)ààõ ú
{
ââ 
if
ãã 
(
ãã  
currentLine
ãã  +
!=
ãã, .
lastLine
ãã/ 7
||
ãã8 :
i
ãã; <
==
ãã= ?
$num
ãã@ A
||
ããB D
i
ããE F
==
ããG I%
m_firstVisibleCharacter
ããJ a
)
ããa b
{
åå 
if
çç  "
(
çç# $
!
çç$ %
m_isRightToLeft
çç% 4
)
çç4 5!
justificationOffset
éé$ 7
=
éé8 9
new
éé: =
Vector3
éé> E
(
ééE F
lineInfo
ééF N
.
ééN O

marginLeft
ééO Y
,
ééY Z
$num
éé[ \
,
éé\ ]
$num
éé^ _
)
éé_ `
;
éé` a
else
èè  $!
justificationOffset
êê$ 7
=
êê8 9
new
êê: =
Vector3
êê> E
(
êêE F
lineInfo
êêF N
.
êêN O

marginLeft
êêO Y
+
êêZ [
lineInfo
êê\ d
.
êêd e
width
êêe j
,
êêj k
$num
êêl m
,
êêm n
$num
êêo p
)
êêp q
;
êêq r
if
íí  "
(
íí# $
char
íí$ (
.
íí( )
IsSeparator
íí) 4
(
íí4 5
unicode
íí5 <
)
íí< =
)
íí= >
isFirstSeperator
ìì$ 4
=
ìì5 6
true
ìì7 ;
;
ìì; <
else
îî  $
isFirstSeperator
ïï$ 4
=
ïï5 6
false
ïï7 <
;
ïï< =
}
ññ 
else
óó  
{
òò 
float
ôô  %
gap
ôô& )
=
ôô* +
!
ôô, -
m_isRightToLeft
ôô- <
?
ôô= >
lineInfo
ôô? G
.
ôôG H
width
ôôH M
-
ôôN O
lineInfo
ôôP X
.
ôôX Y

maxAdvance
ôôY c
:
ôôd e
lineInfo
ôôf n
.
ôôn o
width
ôôo t
+
ôôu v
lineInfo
ôôw 
.ôô Ä

maxAdvanceôôÄ ä
;ôôä ã
int
õõ  #
visibleCount
õõ$ 0
=
õõ1 2
lineInfo
õõ3 ;
.
õõ; <#
visibleCharacterCount
õõ< Q
-
õõR S
$num
õõT U
+
õõV W
lineInfo
õõX `
.
õõ` a#
controlCharacterCount
õõa v
;
õõv w
int
ûû  #
spaces
ûû$ *
=
ûû+ ,
(
ûû- .
characterInfos
ûû. <
[
ûû< =
lineInfo
ûû= E
.
ûûE F 
lastCharacterIndex
ûûF X
]
ûûX Y
.
ûûY Z
	isVisible
ûûZ c
?
ûûd e
lineInfo
ûûf n
.
ûûn o

spaceCount
ûûo y
:
ûûz {
lineInfoûû| Ñ
.ûûÑ Ö

spaceCountûûÖ è
-ûûê ë
$numûûí ì
)ûûì î
-ûûï ñ
lineInfoûûó ü
.ûûü †%
controlCharacterCountûû† µ
;ûûµ ∂
if
††  "
(
††# $
isFirstSeperator
††$ 4
)
††4 5
{
††6 7
spaces
††8 >
-=
††? A
$num
††B C
;
††C D
visibleCount
††E Q
+=
††R T
$num
††U V
;
††V W
}
††X Y
float
¢¢  %
ratio
¢¢& +
=
¢¢, -
spaces
¢¢. 4
>
¢¢5 6
$num
¢¢7 8
?
¢¢9 :"
m_wordWrappingRatios
¢¢; O
:
¢¢P Q
$num
¢¢R S
;
¢¢S T
if
§§  "
(
§§# $
spaces
§§$ *
<
§§+ ,
$num
§§- .
)
§§. /
spaces
§§0 6
=
§§7 8
$num
§§9 :
;
§§: ;
if
¶¶  "
(
¶¶# $
unicode
¶¶$ +
!=
¶¶, .
$num
¶¶/ 3
&&
¶¶4 6
(
¶¶7 8
unicode
¶¶8 ?
==
¶¶@ B
$num
¶¶C D
||
¶¶E G
char
¶¶H L
.
¶¶L M
IsSeparator
¶¶M X
(
¶¶X Y
(
¶¶Y Z
char
¶¶Z ^
)
¶¶^ _
unicode
¶¶_ f
)
¶¶f g
)
¶¶g h
)
¶¶h i
{
ßß  !
if
®®$ &
(
®®' (
!
®®( )
m_isRightToLeft
®®) 8
)
®®8 9!
justificationOffset
©©( ;
+=
©©< >
new
©©? B
Vector3
©©C J
(
©©J K
gap
©©K N
*
©©O P
(
©©Q R
$num
©©R S
-
©©T U
ratio
©©V [
)
©©[ \
/
©©] ^
spaces
©©_ e
,
©©e f
$num
©©g h
,
©©h i
$num
©©j k
)
©©k l
;
©©l m
else
™™$ (!
justificationOffset
´´( ;
-=
´´< >
new
´´? B
Vector3
´´C J
(
´´J K
gap
´´K N
*
´´O P
(
´´Q R
$num
´´R S
-
´´T U
ratio
´´V [
)
´´[ \
/
´´] ^
spaces
´´_ e
,
´´e f
$num
´´g h
,
´´h i
$num
´´j k
)
´´k l
;
´´l m
}
¨¨  !
else
≠≠  $
{
ÆÆ  !
if
ØØ$ &
(
ØØ' (
!
ØØ( )
m_isRightToLeft
ØØ) 8
)
ØØ8 9!
justificationOffset
∞∞( ;
+=
∞∞< >
new
∞∞? B
Vector3
∞∞C J
(
∞∞J K
gap
∞∞K N
*
∞∞O P
ratio
∞∞Q V
/
∞∞W X
visibleCount
∞∞Y e
,
∞∞e f
$num
∞∞g h
,
∞∞h i
$num
∞∞j k
)
∞∞k l
;
∞∞l m
else
±±$ (!
justificationOffset
≤≤( ;
-=
≤≤< >
new
≤≤? B
Vector3
≤≤C J
(
≤≤J K
gap
≤≤K N
*
≤≤O P
ratio
≤≤Q V
/
≤≤W X
visibleCount
≤≤Y e
,
≤≤e f
$num
≤≤g h
,
≤≤h i
$num
≤≤j k
)
≤≤k l
;
≤≤l m
}
≥≥  !
}
¥¥ 
}
µµ 
else
∂∂ 
{
∑∑ 
if
∏∏ 
(
∏∏  
!
∏∏  !
m_isRightToLeft
∏∏! 0
)
∏∏0 1!
justificationOffset
ππ  3
=
ππ4 5
new
ππ6 9
Vector3
ππ: A
(
ππA B
lineInfo
ππB J
.
ππJ K

marginLeft
ππK U
,
ππU V
$num
ππW X
,
ππX Y
$num
ππZ [
)
ππ[ \
;
ππ\ ]
else
∫∫  !
justificationOffset
ªª  3
=
ªª4 5
new
ªª6 9
Vector3
ªª: A
(
ªªA B
lineInfo
ªªB J
.
ªªJ K

marginLeft
ªªK U
+
ªªV W
lineInfo
ªªX `
.
ªª` a
width
ªªa f
,
ªªf g
$num
ªªh i
,
ªªi j
$num
ªªk l
)
ªªl m
;
ªªm n
}
ºº 
break
ææ 
;
ææ 
}
øø 
offset
¬¬ 
=
¬¬ 
anchorOffset
¬¬ %
+
¬¬& '!
justificationOffset
¬¬( ;
;
¬¬; <
bool
∆∆  
isCharacterVisible
∆∆ '
=
∆∆( )
characterInfos
∆∆* 8
[
∆∆8 9
i
∆∆9 :
]
∆∆: ;
.
∆∆; <
	isVisible
∆∆< E
;
∆∆E F
if
«« 
(
««  
isCharacterVisible
«« &
)
««& '
{
»» !
TMP_TextElementType
…… '
elementType
……( 3
=
……4 5
characterInfos
……6 D
[
……D E
i
……E F
]
……F G
.
……G H
elementType
……H S
;
……S T
switch
   
(
   
elementType
   '
)
  ' (
{
ÀÀ 
case
ÕÕ !
TMP_TextElementType
ÕÕ 0
.
ÕÕ0 1
	Character
ÕÕ1 :
:
ÕÕ: ;
Extents
ŒŒ #
lineExtents
ŒŒ$ /
=
ŒŒ0 1
lineInfo
ŒŒ2 :
.
ŒŒ: ;
lineExtents
ŒŒ; F
;
ŒŒF G
float
œœ !
uvOffset
œœ" *
=
œœ+ ,
(
œœ- .
m_uvLineOffset
œœ. <
*
œœ= >
currentLine
œœ? J
)
œœJ K
%
œœL M
$num
œœN O
;
œœO P
switch
”” "
(
””# $!
m_horizontalMapping
””$ 7
)
””7 8
{
‘‘ 
case
’’  $#
TextureMappingOptions
’’% :
.
’’: ;
	Character
’’; D
:
’’D E
characterInfos
÷÷$ 2
[
÷÷2 3
i
÷÷3 4
]
÷÷4 5
.
÷÷5 6
	vertex_BL
÷÷6 ?
.
÷÷? @
uv2
÷÷@ C
.
÷÷C D
x
÷÷D E
=
÷÷F G
$num
÷÷H I
;
÷÷I J
characterInfos
◊◊$ 2
[
◊◊2 3
i
◊◊3 4
]
◊◊4 5
.
◊◊5 6
	vertex_TL
◊◊6 ?
.
◊◊? @
uv2
◊◊@ C
.
◊◊C D
x
◊◊D E
=
◊◊F G
$num
◊◊H I
;
◊◊I J
characterInfos
ÿÿ$ 2
[
ÿÿ2 3
i
ÿÿ3 4
]
ÿÿ4 5
.
ÿÿ5 6
	vertex_TR
ÿÿ6 ?
.
ÿÿ? @
uv2
ÿÿ@ C
.
ÿÿC D
x
ÿÿD E
=
ÿÿF G
$num
ÿÿH I
;
ÿÿI J
characterInfos
ŸŸ$ 2
[
ŸŸ2 3
i
ŸŸ3 4
]
ŸŸ4 5
.
ŸŸ5 6
	vertex_BR
ŸŸ6 ?
.
ŸŸ? @
uv2
ŸŸ@ C
.
ŸŸC D
x
ŸŸD E
=
ŸŸF G
$num
ŸŸH I
;
ŸŸI J
break
⁄⁄$ )
;
⁄⁄) *
case
‹‹  $#
TextureMappingOptions
‹‹% :
.
‹‹: ;
Line
‹‹; ?
:
‹‹? @
if
››$ &
(
››' (
m_textAlignment
››( 7
!=
››8 :"
TextAlignmentOptions
››; O
.
››O P
	Justified
››P Y
)
››Y Z
{
ﬁﬁ$ %
characterInfos
ﬂﬂ( 6
[
ﬂﬂ6 7
i
ﬂﬂ7 8
]
ﬂﬂ8 9
.
ﬂﬂ9 :
	vertex_BL
ﬂﬂ: C
.
ﬂﬂC D
uv2
ﬂﬂD G
.
ﬂﬂG H
x
ﬂﬂH I
=
ﬂﬂJ K
(
ﬂﬂL M
characterInfos
ﬂﬂM [
[
ﬂﬂ[ \
i
ﬂﬂ\ ]
]
ﬂﬂ] ^
.
ﬂﬂ^ _
	vertex_BL
ﬂﬂ_ h
.
ﬂﬂh i
position
ﬂﬂi q
.
ﬂﬂq r
x
ﬂﬂr s
-
ﬂﬂt u
lineExtentsﬂﬂv Å
.ﬂﬂÅ Ç
minﬂﬂÇ Ö
.ﬂﬂÖ Ü
xﬂﬂÜ á
)ﬂﬂá à
/ﬂﬂâ ä
(ﬂﬂã å
lineExtentsﬂﬂå ó
.ﬂﬂó ò
maxﬂﬂò õ
.ﬂﬂõ ú
xﬂﬂú ù
-ﬂﬂû ü
lineExtentsﬂﬂ† ´
.ﬂﬂ´ ¨
minﬂﬂ¨ Ø
.ﬂﬂØ ∞
xﬂﬂ∞ ±
)ﬂﬂ± ≤
+ﬂﬂ≥ ¥
uvOffsetﬂﬂµ Ω
;ﬂﬂΩ æ
characterInfos
‡‡( 6
[
‡‡6 7
i
‡‡7 8
]
‡‡8 9
.
‡‡9 :
	vertex_TL
‡‡: C
.
‡‡C D
uv2
‡‡D G
.
‡‡G H
x
‡‡H I
=
‡‡J K
(
‡‡L M
characterInfos
‡‡M [
[
‡‡[ \
i
‡‡\ ]
]
‡‡] ^
.
‡‡^ _
	vertex_TL
‡‡_ h
.
‡‡h i
position
‡‡i q
.
‡‡q r
x
‡‡r s
-
‡‡t u
lineExtents‡‡v Å
.‡‡Å Ç
min‡‡Ç Ö
.‡‡Ö Ü
x‡‡Ü á
)‡‡á à
/‡‡â ä
(‡‡ã å
lineExtents‡‡å ó
.‡‡ó ò
max‡‡ò õ
.‡‡õ ú
x‡‡ú ù
-‡‡û ü
lineExtents‡‡† ´
.‡‡´ ¨
min‡‡¨ Ø
.‡‡Ø ∞
x‡‡∞ ±
)‡‡± ≤
+‡‡≥ ¥
uvOffset‡‡µ Ω
;‡‡Ω æ
characterInfos
··( 6
[
··6 7
i
··7 8
]
··8 9
.
··9 :
	vertex_TR
··: C
.
··C D
uv2
··D G
.
··G H
x
··H I
=
··J K
(
··L M
characterInfos
··M [
[
··[ \
i
··\ ]
]
··] ^
.
··^ _
	vertex_TR
··_ h
.
··h i
position
··i q
.
··q r
x
··r s
-
··t u
lineExtents··v Å
.··Å Ç
min··Ç Ö
.··Ö Ü
x··Ü á
)··á à
/··â ä
(··ã å
lineExtents··å ó
.··ó ò
max··ò õ
.··õ ú
x··ú ù
-··û ü
lineExtents··† ´
.··´ ¨
min··¨ Ø
.··Ø ∞
x··∞ ±
)··± ≤
+··≥ ¥
uvOffset··µ Ω
;··Ω æ
characterInfos
‚‚( 6
[
‚‚6 7
i
‚‚7 8
]
‚‚8 9
.
‚‚9 :
	vertex_BR
‚‚: C
.
‚‚C D
uv2
‚‚D G
.
‚‚G H
x
‚‚H I
=
‚‚J K
(
‚‚L M
characterInfos
‚‚M [
[
‚‚[ \
i
‚‚\ ]
]
‚‚] ^
.
‚‚^ _
	vertex_BR
‚‚_ h
.
‚‚h i
position
‚‚i q
.
‚‚q r
x
‚‚r s
-
‚‚t u
lineExtents‚‚v Å
.‚‚Å Ç
min‚‚Ç Ö
.‚‚Ö Ü
x‚‚Ü á
)‚‚á à
/‚‚â ä
(‚‚ã å
lineExtents‚‚å ó
.‚‚ó ò
max‚‚ò õ
.‚‚õ ú
x‚‚ú ù
-‚‚û ü
lineExtents‚‚† ´
.‚‚´ ¨
min‚‚¨ Ø
.‚‚Ø ∞
x‚‚∞ ±
)‚‚± ≤
+‚‚≥ ¥
uvOffset‚‚µ Ω
;‚‚Ω æ
break
„„( -
;
„„- .
}
‰‰$ %
else
ÂÂ$ (
{
ÊÊ$ %
characterInfos
ÁÁ( 6
[
ÁÁ6 7
i
ÁÁ7 8
]
ÁÁ8 9
.
ÁÁ9 :
	vertex_BL
ÁÁ: C
.
ÁÁC D
uv2
ÁÁD G
.
ÁÁG H
x
ÁÁH I
=
ÁÁJ K
(
ÁÁL M
characterInfos
ÁÁM [
[
ÁÁ[ \
i
ÁÁ\ ]
]
ÁÁ] ^
.
ÁÁ^ _
	vertex_BL
ÁÁ_ h
.
ÁÁh i
position
ÁÁi q
.
ÁÁq r
x
ÁÁr s
+
ÁÁt u"
justificationOffsetÁÁv â
.ÁÁâ ä
xÁÁä ã
-ÁÁå ç
m_meshExtentsÁÁé õ
.ÁÁõ ú
minÁÁú ü
.ÁÁü †
xÁÁ† °
)ÁÁ° ¢
/ÁÁ£ §
(ÁÁ• ¶
m_meshExtentsÁÁ¶ ≥
.ÁÁ≥ ¥
maxÁÁ¥ ∑
.ÁÁ∑ ∏
xÁÁ∏ π
-ÁÁ∫ ª
m_meshExtentsÁÁº …
.ÁÁ…  
minÁÁ  Õ
.ÁÁÕ Œ
xÁÁŒ œ
)ÁÁœ –
+ÁÁ— “
uvOffsetÁÁ” €
;ÁÁ€ ‹
characterInfos
ËË( 6
[
ËË6 7
i
ËË7 8
]
ËË8 9
.
ËË9 :
	vertex_TL
ËË: C
.
ËËC D
uv2
ËËD G
.
ËËG H
x
ËËH I
=
ËËJ K
(
ËËL M
characterInfos
ËËM [
[
ËË[ \
i
ËË\ ]
]
ËË] ^
.
ËË^ _
	vertex_TL
ËË_ h
.
ËËh i
position
ËËi q
.
ËËq r
x
ËËr s
+
ËËt u"
justificationOffsetËËv â
.ËËâ ä
xËËä ã
-ËËå ç
m_meshExtentsËËé õ
.ËËõ ú
minËËú ü
.ËËü †
xËË† °
)ËË° ¢
/ËË£ §
(ËË• ¶
m_meshExtentsËË¶ ≥
.ËË≥ ¥
maxËË¥ ∑
.ËË∑ ∏
xËË∏ π
-ËË∫ ª
m_meshExtentsËËº …
.ËË…  
minËË  Õ
.ËËÕ Œ
xËËŒ œ
)ËËœ –
+ËË— “
uvOffsetËË” €
;ËË€ ‹
characterInfos
ÈÈ( 6
[
ÈÈ6 7
i
ÈÈ7 8
]
ÈÈ8 9
.
ÈÈ9 :
	vertex_TR
ÈÈ: C
.
ÈÈC D
uv2
ÈÈD G
.
ÈÈG H
x
ÈÈH I
=
ÈÈJ K
(
ÈÈL M
characterInfos
ÈÈM [
[
ÈÈ[ \
i
ÈÈ\ ]
]
ÈÈ] ^
.
ÈÈ^ _
	vertex_TR
ÈÈ_ h
.
ÈÈh i
position
ÈÈi q
.
ÈÈq r
x
ÈÈr s
+
ÈÈt u"
justificationOffsetÈÈv â
.ÈÈâ ä
xÈÈä ã
-ÈÈå ç
m_meshExtentsÈÈé õ
.ÈÈõ ú
minÈÈú ü
.ÈÈü †
xÈÈ† °
)ÈÈ° ¢
/ÈÈ£ §
(ÈÈ• ¶
m_meshExtentsÈÈ¶ ≥
.ÈÈ≥ ¥
maxÈÈ¥ ∑
.ÈÈ∑ ∏
xÈÈ∏ π
-ÈÈ∫ ª
m_meshExtentsÈÈº …
.ÈÈ…  
minÈÈ  Õ
.ÈÈÕ Œ
xÈÈŒ œ
)ÈÈœ –
+ÈÈ— “
uvOffsetÈÈ” €
;ÈÈ€ ‹
characterInfos
ÍÍ( 6
[
ÍÍ6 7
i
ÍÍ7 8
]
ÍÍ8 9
.
ÍÍ9 :
	vertex_BR
ÍÍ: C
.
ÍÍC D
uv2
ÍÍD G
.
ÍÍG H
x
ÍÍH I
=
ÍÍJ K
(
ÍÍL M
characterInfos
ÍÍM [
[
ÍÍ[ \
i
ÍÍ\ ]
]
ÍÍ] ^
.
ÍÍ^ _
	vertex_BR
ÍÍ_ h
.
ÍÍh i
position
ÍÍi q
.
ÍÍq r
x
ÍÍr s
+
ÍÍt u"
justificationOffsetÍÍv â
.ÍÍâ ä
xÍÍä ã
-ÍÍå ç
m_meshExtentsÍÍé õ
.ÍÍõ ú
minÍÍú ü
.ÍÍü †
xÍÍ† °
)ÍÍ° ¢
/ÍÍ£ §
(ÍÍ• ¶
m_meshExtentsÍÍ¶ ≥
.ÍÍ≥ ¥
maxÍÍ¥ ∑
.ÍÍ∑ ∏
xÍÍ∏ π
-ÍÍ∫ ª
m_meshExtentsÍÍº …
.ÍÍ…  
minÍÍ  Õ
.ÍÍÕ Œ
xÍÍŒ œ
)ÍÍœ –
+ÍÍ— “
uvOffsetÍÍ” €
;ÍÍ€ ‹
break
ÎÎ( -
;
ÎÎ- .
}
ÏÏ$ %
case
ÓÓ  $#
TextureMappingOptions
ÓÓ% :
.
ÓÓ: ;
	Paragraph
ÓÓ; D
:
ÓÓD E
characterInfos
ÔÔ$ 2
[
ÔÔ2 3
i
ÔÔ3 4
]
ÔÔ4 5
.
ÔÔ5 6
	vertex_BL
ÔÔ6 ?
.
ÔÔ? @
uv2
ÔÔ@ C
.
ÔÔC D
x
ÔÔD E
=
ÔÔF G
(
ÔÔH I
characterInfos
ÔÔI W
[
ÔÔW X
i
ÔÔX Y
]
ÔÔY Z
.
ÔÔZ [
	vertex_BL
ÔÔ[ d
.
ÔÔd e
position
ÔÔe m
.
ÔÔm n
x
ÔÔn o
+
ÔÔp q"
justificationOffsetÔÔr Ö
.ÔÔÖ Ü
xÔÔÜ á
-ÔÔà â
m_meshExtentsÔÔä ó
.ÔÔó ò
minÔÔò õ
.ÔÔõ ú
xÔÔú ù
)ÔÔù û
/ÔÔü †
(ÔÔ° ¢
m_meshExtentsÔÔ¢ Ø
.ÔÔØ ∞
maxÔÔ∞ ≥
.ÔÔ≥ ¥
xÔÔ¥ µ
-ÔÔ∂ ∑
m_meshExtentsÔÔ∏ ≈
.ÔÔ≈ ∆
minÔÔ∆ …
.ÔÔ…  
xÔÔ  À
)ÔÔÀ Ã
+ÔÔÕ Œ
uvOffsetÔÔœ ◊
;ÔÔ◊ ÿ
characterInfos
$ 2
[
2 3
i
3 4
]
4 5
.
5 6
	vertex_TL
6 ?
.
? @
uv2
@ C
.
C D
x
D E
=
F G
(
H I
characterInfos
I W
[
W X
i
X Y
]
Y Z
.
Z [
	vertex_TL
[ d
.
d e
position
e m
.
m n
x
n o
+
p q"
justificationOffsetr Ö
.Ö Ü
xÜ á
-à â
m_meshExtentsä ó
.ó ò
minò õ
.õ ú
xú ù
)ù û
/ü †
(° ¢
m_meshExtents¢ Ø
.Ø ∞
max∞ ≥
.≥ ¥
x¥ µ
-∂ ∑
m_meshExtents∏ ≈
.≈ ∆
min∆ …
.…  
x  À
)À Ã
+Õ Œ
uvOffsetœ ◊
;◊ ÿ
characterInfos
ÒÒ$ 2
[
ÒÒ2 3
i
ÒÒ3 4
]
ÒÒ4 5
.
ÒÒ5 6
	vertex_TR
ÒÒ6 ?
.
ÒÒ? @
uv2
ÒÒ@ C
.
ÒÒC D
x
ÒÒD E
=
ÒÒF G
(
ÒÒH I
characterInfos
ÒÒI W
[
ÒÒW X
i
ÒÒX Y
]
ÒÒY Z
.
ÒÒZ [
	vertex_TR
ÒÒ[ d
.
ÒÒd e
position
ÒÒe m
.
ÒÒm n
x
ÒÒn o
+
ÒÒp q"
justificationOffsetÒÒr Ö
.ÒÒÖ Ü
xÒÒÜ á
-ÒÒà â
m_meshExtentsÒÒä ó
.ÒÒó ò
minÒÒò õ
.ÒÒõ ú
xÒÒú ù
)ÒÒù û
/ÒÒü †
(ÒÒ° ¢
m_meshExtentsÒÒ¢ Ø
.ÒÒØ ∞
maxÒÒ∞ ≥
.ÒÒ≥ ¥
xÒÒ¥ µ
-ÒÒ∂ ∑
m_meshExtentsÒÒ∏ ≈
.ÒÒ≈ ∆
minÒÒ∆ …
.ÒÒ…  
xÒÒ  À
)ÒÒÀ Ã
+ÒÒÕ Œ
uvOffsetÒÒœ ◊
;ÒÒ◊ ÿ
characterInfos
ÚÚ$ 2
[
ÚÚ2 3
i
ÚÚ3 4
]
ÚÚ4 5
.
ÚÚ5 6
	vertex_BR
ÚÚ6 ?
.
ÚÚ? @
uv2
ÚÚ@ C
.
ÚÚC D
x
ÚÚD E
=
ÚÚF G
(
ÚÚH I
characterInfos
ÚÚI W
[
ÚÚW X
i
ÚÚX Y
]
ÚÚY Z
.
ÚÚZ [
	vertex_BR
ÚÚ[ d
.
ÚÚd e
position
ÚÚe m
.
ÚÚm n
x
ÚÚn o
+
ÚÚp q"
justificationOffsetÚÚr Ö
.ÚÚÖ Ü
xÚÚÜ á
-ÚÚà â
m_meshExtentsÚÚä ó
.ÚÚó ò
minÚÚò õ
.ÚÚõ ú
xÚÚú ù
)ÚÚù û
/ÚÚü †
(ÚÚ° ¢
m_meshExtentsÚÚ¢ Ø
.ÚÚØ ∞
maxÚÚ∞ ≥
.ÚÚ≥ ¥
xÚÚ¥ µ
-ÚÚ∂ ∑
m_meshExtentsÚÚ∏ ≈
.ÚÚ≈ ∆
minÚÚ∆ …
.ÚÚ…  
xÚÚ  À
)ÚÚÀ Ã
+ÚÚÕ Œ
uvOffsetÚÚœ ◊
;ÚÚ◊ ÿ
break
ÛÛ$ )
;
ÛÛ) *
case
ıı  $#
TextureMappingOptions
ıı% :
.
ıı: ;
MatchAspect
ıı; F
:
ııF G
switch
˜˜$ *
(
˜˜+ ,
m_verticalMapping
˜˜, =
)
˜˜= >
{
¯¯$ %
case
˘˘( ,#
TextureMappingOptions
˘˘- B
.
˘˘B C
	Character
˘˘C L
:
˘˘L M
characterInfos
˙˙, :
[
˙˙: ;
i
˙˙; <
]
˙˙< =
.
˙˙= >
	vertex_BL
˙˙> G
.
˙˙G H
uv2
˙˙H K
.
˙˙K L
y
˙˙L M
=
˙˙N O
$num
˙˙P Q
;
˙˙Q R
characterInfos
˚˚, :
[
˚˚: ;
i
˚˚; <
]
˚˚< =
.
˚˚= >
	vertex_TL
˚˚> G
.
˚˚G H
uv2
˚˚H K
.
˚˚K L
y
˚˚L M
=
˚˚N O
$num
˚˚P Q
;
˚˚Q R
characterInfos
¸¸, :
[
¸¸: ;
i
¸¸; <
]
¸¸< =
.
¸¸= >
	vertex_TR
¸¸> G
.
¸¸G H
uv2
¸¸H K
.
¸¸K L
y
¸¸L M
=
¸¸N O
$num
¸¸P Q
;
¸¸Q R
characterInfos
˝˝, :
[
˝˝: ;
i
˝˝; <
]
˝˝< =
.
˝˝= >
	vertex_BR
˝˝> G
.
˝˝G H
uv2
˝˝H K
.
˝˝K L
y
˝˝L M
=
˝˝N O
$num
˝˝P Q
;
˝˝Q R
break
˛˛, 1
;
˛˛1 2
case
ÄÄ( ,#
TextureMappingOptions
ÄÄ- B
.
ÄÄB C
Line
ÄÄC G
:
ÄÄG H
characterInfos
ÅÅ, :
[
ÅÅ: ;
i
ÅÅ; <
]
ÅÅ< =
.
ÅÅ= >
	vertex_BL
ÅÅ> G
.
ÅÅG H
uv2
ÅÅH K
.
ÅÅK L
y
ÅÅL M
=
ÅÅN O
(
ÅÅP Q
characterInfos
ÅÅQ _
[
ÅÅ_ `
i
ÅÅ` a
]
ÅÅa b
.
ÅÅb c
	vertex_BL
ÅÅc l
.
ÅÅl m
position
ÅÅm u
.
ÅÅu v
y
ÅÅv w
-
ÅÅx y
lineExtentsÅÅz Ö
.ÅÅÖ Ü
minÅÅÜ â
.ÅÅâ ä
yÅÅä ã
)ÅÅã å
/ÅÅç é
(ÅÅè ê
lineExtentsÅÅê õ
.ÅÅõ ú
maxÅÅú ü
.ÅÅü †
yÅÅ† °
-ÅÅ¢ £
lineExtentsÅÅ§ Ø
.ÅÅØ ∞
minÅÅ∞ ≥
.ÅÅ≥ ¥
yÅÅ¥ µ
)ÅÅµ ∂
+ÅÅ∑ ∏
uvOffsetÅÅπ ¡
;ÅÅ¡ ¬
characterInfos
ÇÇ, :
[
ÇÇ: ;
i
ÇÇ; <
]
ÇÇ< =
.
ÇÇ= >
	vertex_TL
ÇÇ> G
.
ÇÇG H
uv2
ÇÇH K
.
ÇÇK L
y
ÇÇL M
=
ÇÇN O
(
ÇÇP Q
characterInfos
ÇÇQ _
[
ÇÇ_ `
i
ÇÇ` a
]
ÇÇa b
.
ÇÇb c
	vertex_TL
ÇÇc l
.
ÇÇl m
position
ÇÇm u
.
ÇÇu v
y
ÇÇv w
-
ÇÇx y
lineExtentsÇÇz Ö
.ÇÇÖ Ü
minÇÇÜ â
.ÇÇâ ä
yÇÇä ã
)ÇÇã å
/ÇÇç é
(ÇÇè ê
lineExtentsÇÇê õ
.ÇÇõ ú
maxÇÇú ü
.ÇÇü †
yÇÇ† °
-ÇÇ¢ £
lineExtentsÇÇ§ Ø
.ÇÇØ ∞
minÇÇ∞ ≥
.ÇÇ≥ ¥
yÇÇ¥ µ
)ÇÇµ ∂
+ÇÇ∑ ∏
uvOffsetÇÇπ ¡
;ÇÇ¡ ¬
characterInfos
ÉÉ, :
[
ÉÉ: ;
i
ÉÉ; <
]
ÉÉ< =
.
ÉÉ= >
	vertex_TR
ÉÉ> G
.
ÉÉG H
uv2
ÉÉH K
.
ÉÉK L
y
ÉÉL M
=
ÉÉN O
characterInfos
ÉÉP ^
[
ÉÉ^ _
i
ÉÉ_ `
]
ÉÉ` a
.
ÉÉa b
	vertex_BL
ÉÉb k
.
ÉÉk l
uv2
ÉÉl o
.
ÉÉo p
y
ÉÉp q
;
ÉÉq r
characterInfos
ÑÑ, :
[
ÑÑ: ;
i
ÑÑ; <
]
ÑÑ< =
.
ÑÑ= >
	vertex_BR
ÑÑ> G
.
ÑÑG H
uv2
ÑÑH K
.
ÑÑK L
y
ÑÑL M
=
ÑÑN O
characterInfos
ÑÑP ^
[
ÑÑ^ _
i
ÑÑ_ `
]
ÑÑ` a
.
ÑÑa b
	vertex_TL
ÑÑb k
.
ÑÑk l
uv2
ÑÑl o
.
ÑÑo p
y
ÑÑp q
;
ÑÑq r
break
ÖÖ, 1
;
ÖÖ1 2
case
áá( ,#
TextureMappingOptions
áá- B
.
ááB C
	Paragraph
ááC L
:
ááL M
characterInfos
àà, :
[
àà: ;
i
àà; <
]
àà< =
.
àà= >
	vertex_BL
àà> G
.
ààG H
uv2
ààH K
.
ààK L
y
ààL M
=
ààN O
(
ààP Q
characterInfos
ààQ _
[
àà_ `
i
àà` a
]
ààa b
.
ààb c
	vertex_BL
ààc l
.
ààl m
position
ààm u
.
ààu v
y
ààv w
-
ààx y
m_meshExtentsààz á
.ààá à
minààà ã
.ààã å
yààå ç
)ààç é
/ààè ê
(ààë í
m_meshExtentsààí ü
.ààü †
maxàà† £
.àà£ §
yàà§ •
-àà¶ ß
m_meshExtentsàà® µ
.ààµ ∂
minàà∂ π
.ààπ ∫
yàà∫ ª
)ààª º
+ààΩ æ
uvOffsetààø «
;àà« »
characterInfos
ââ, :
[
ââ: ;
i
ââ; <
]
ââ< =
.
ââ= >
	vertex_TL
ââ> G
.
ââG H
uv2
ââH K
.
ââK L
y
ââL M
=
ââN O
(
ââP Q
characterInfos
ââQ _
[
ââ_ `
i
ââ` a
]
ââa b
.
ââb c
	vertex_TL
ââc l
.
ââl m
position
ââm u
.
ââu v
y
ââv w
-
ââx y
m_meshExtentsââz á
.ââá à
minââà ã
.ââã å
yââå ç
)ââç é
/ââè ê
(ââë í
m_meshExtentsââí ü
.ââü †
maxââ† £
.ââ£ §
yââ§ •
-ââ¶ ß
m_meshExtentsââ® µ
.ââµ ∂
minââ∂ π
.ââπ ∫
yââ∫ ª
)ââª º
+ââΩ æ
uvOffsetââø «
;ââ« »
characterInfos
ää, :
[
ää: ;
i
ää; <
]
ää< =
.
ää= >
	vertex_TR
ää> G
.
ääG H
uv2
ääH K
.
ääK L
y
ääL M
=
ääN O
characterInfos
ääP ^
[
ää^ _
i
ää_ `
]
ää` a
.
ääa b
	vertex_BL
ääb k
.
ääk l
uv2
ääl o
.
ääo p
y
ääp q
;
ääq r
characterInfos
ãã, :
[
ãã: ;
i
ãã; <
]
ãã< =
.
ãã= >
	vertex_BR
ãã> G
.
ããG H
uv2
ããH K
.
ããK L
y
ããL M
=
ããN O
characterInfos
ããP ^
[
ãã^ _
i
ãã_ `
]
ãã` a
.
ããa b
	vertex_TL
ããb k
.
ããk l
uv2
ããl o
.
ãão p
y
ããp q
;
ããq r
break
åå, 1
;
åå1 2
case
éé( ,#
TextureMappingOptions
éé- B
.
ééB C
MatchAspect
ééC N
:
ééN O
Debug
èè, 1
.
èè1 2
Log
èè2 5
(
èè5 6
$str
èè6 g
)
èèg h
;
èèh i
break
êê, 1
;
êê1 2
}
ëë$ %
float
îî$ )
xDelta
îî* 0
=
îî1 2
(
îî3 4
$num
îî4 5
-
îî6 7
(
îî8 9
(
îî9 :
characterInfos
îî: H
[
îîH I
i
îîI J
]
îîJ K
.
îîK L
	vertex_BL
îîL U
.
îîU V
uv2
îîV Y
.
îîY Z
y
îîZ [
+
îî\ ]
characterInfos
îî^ l
[
îîl m
i
îîm n
]
îîn o
.
îîo p
	vertex_TL
îîp y
.
îîy z
uv2
îîz }
.
îî} ~
y
îî~ 
)îî Ä
*îîÅ Ç
characterInfosîîÉ ë
[îîë í
iîîí ì
]îîì î
.îîî ï
aspectRatioîîï †
)îî† °
)îî° ¢
/îî£ §
$numîî• ¶
;îî¶ ß
characterInfos
ññ$ 2
[
ññ2 3
i
ññ3 4
]
ññ4 5
.
ññ5 6
	vertex_BL
ññ6 ?
.
ññ? @
uv2
ññ@ C
.
ññC D
x
ññD E
=
ññF G
(
ññH I
characterInfos
ññI W
[
ññW X
i
ññX Y
]
ññY Z
.
ññZ [
	vertex_BL
ññ[ d
.
ññd e
uv2
ññe h
.
ññh i
y
ññi j
*
ññk l
characterInfos
ññm {
[
ññ{ |
i
ññ| }
]
ññ} ~
.
ññ~ 
aspectRatioññ ä
)ññä ã
+ññå ç
xDeltaññé î
+ññï ñ
uvOffsetññó ü
;ññü †
characterInfos
óó$ 2
[
óó2 3
i
óó3 4
]
óó4 5
.
óó5 6
	vertex_TL
óó6 ?
.
óó? @
uv2
óó@ C
.
óóC D
x
óóD E
=
óóF G
characterInfos
óóH V
[
óóV W
i
óóW X
]
óóX Y
.
óóY Z
	vertex_BL
óóZ c
.
óóc d
uv2
óód g
.
óóg h
x
óóh i
;
óói j
characterInfos
òò$ 2
[
òò2 3
i
òò3 4
]
òò4 5
.
òò5 6
	vertex_TR
òò6 ?
.
òò? @
uv2
òò@ C
.
òòC D
x
òòD E
=
òòF G
(
òòH I
characterInfos
òòI W
[
òòW X
i
òòX Y
]
òòY Z
.
òòZ [
	vertex_TL
òò[ d
.
òòd e
uv2
òòe h
.
òòh i
y
òòi j
*
òòk l
characterInfos
òòm {
[
òò{ |
i
òò| }
]
òò} ~
.
òò~ 
aspectRatioòò ä
)òòä ã
+òòå ç
xDeltaòòé î
+òòï ñ
uvOffsetòòó ü
;òòü †
characterInfos
ôô$ 2
[
ôô2 3
i
ôô3 4
]
ôô4 5
.
ôô5 6
	vertex_BR
ôô6 ?
.
ôô? @
uv2
ôô@ C
.
ôôC D
x
ôôD E
=
ôôF G
characterInfos
ôôH V
[
ôôV W
i
ôôW X
]
ôôX Y
.
ôôY Z
	vertex_TR
ôôZ c
.
ôôc d
uv2
ôôd g
.
ôôg h
x
ôôh i
;
ôôi j
break
öö$ )
;
öö) *
}
õõ 
switch
ùù "
(
ùù# $
m_verticalMapping
ùù$ 5
)
ùù5 6
{
ûû 
case
üü  $#
TextureMappingOptions
üü% :
.
üü: ;
	Character
üü; D
:
üüD E
characterInfos
††$ 2
[
††2 3
i
††3 4
]
††4 5
.
††5 6
	vertex_BL
††6 ?
.
††? @
uv2
††@ C
.
††C D
y
††D E
=
††F G
$num
††H I
;
††I J
characterInfos
°°$ 2
[
°°2 3
i
°°3 4
]
°°4 5
.
°°5 6
	vertex_TL
°°6 ?
.
°°? @
uv2
°°@ C
.
°°C D
y
°°D E
=
°°F G
$num
°°H I
;
°°I J
characterInfos
¢¢$ 2
[
¢¢2 3
i
¢¢3 4
]
¢¢4 5
.
¢¢5 6
	vertex_TR
¢¢6 ?
.
¢¢? @
uv2
¢¢@ C
.
¢¢C D
y
¢¢D E
=
¢¢F G
$num
¢¢H I
;
¢¢I J
characterInfos
££$ 2
[
££2 3
i
££3 4
]
££4 5
.
££5 6
	vertex_BR
££6 ?
.
££? @
uv2
££@ C
.
££C D
y
££D E
=
££F G
$num
££H I
;
££I J
break
§§$ )
;
§§) *
case
¶¶  $#
TextureMappingOptions
¶¶% :
.
¶¶: ;
Line
¶¶; ?
:
¶¶? @
characterInfos
ßß$ 2
[
ßß2 3
i
ßß3 4
]
ßß4 5
.
ßß5 6
	vertex_BL
ßß6 ?
.
ßß? @
uv2
ßß@ C
.
ßßC D
y
ßßD E
=
ßßF G
(
ßßH I
characterInfos
ßßI W
[
ßßW X
i
ßßX Y
]
ßßY Z
.
ßßZ [
	vertex_BL
ßß[ d
.
ßßd e
position
ßße m
.
ßßm n
y
ßßn o
-
ßßp q
lineInfo
ßßr z
.
ßßz {
	descenderßß{ Ñ
)ßßÑ Ö
/ßßÜ á
(ßßà â
lineInfoßßâ ë
.ßßë í
ascenderßßí ö
-ßßõ ú
lineInfoßßù •
.ßß• ¶
	descenderßß¶ Ø
)ßßØ ∞
;ßß∞ ±
characterInfos
®®$ 2
[
®®2 3
i
®®3 4
]
®®4 5
.
®®5 6
	vertex_TL
®®6 ?
.
®®? @
uv2
®®@ C
.
®®C D
y
®®D E
=
®®F G
(
®®H I
characterInfos
®®I W
[
®®W X
i
®®X Y
]
®®Y Z
.
®®Z [
	vertex_TL
®®[ d
.
®®d e
position
®®e m
.
®®m n
y
®®n o
-
®®p q
lineInfo
®®r z
.
®®z {
	descender®®{ Ñ
)®®Ñ Ö
/®®Ü á
(®®à â
lineInfo®®â ë
.®®ë í
ascender®®í ö
-®®õ ú
lineInfo®®ù •
.®®• ¶
	descender®®¶ Ø
)®®Ø ∞
;®®∞ ±
characterInfos
©©$ 2
[
©©2 3
i
©©3 4
]
©©4 5
.
©©5 6
	vertex_TR
©©6 ?
.
©©? @
uv2
©©@ C
.
©©C D
y
©©D E
=
©©F G
characterInfos
©©H V
[
©©V W
i
©©W X
]
©©X Y
.
©©Y Z
	vertex_TL
©©Z c
.
©©c d
uv2
©©d g
.
©©g h
y
©©h i
;
©©i j
characterInfos
™™$ 2
[
™™2 3
i
™™3 4
]
™™4 5
.
™™5 6
	vertex_BR
™™6 ?
.
™™? @
uv2
™™@ C
.
™™C D
y
™™D E
=
™™F G
characterInfos
™™H V
[
™™V W
i
™™W X
]
™™X Y
.
™™Y Z
	vertex_BL
™™Z c
.
™™c d
uv2
™™d g
.
™™g h
y
™™h i
;
™™i j
break
´´$ )
;
´´) *
case
≠≠  $#
TextureMappingOptions
≠≠% :
.
≠≠: ;
	Paragraph
≠≠; D
:
≠≠D E
characterInfos
ÆÆ$ 2
[
ÆÆ2 3
i
ÆÆ3 4
]
ÆÆ4 5
.
ÆÆ5 6
	vertex_BL
ÆÆ6 ?
.
ÆÆ? @
uv2
ÆÆ@ C
.
ÆÆC D
y
ÆÆD E
=
ÆÆF G
(
ÆÆH I
characterInfos
ÆÆI W
[
ÆÆW X
i
ÆÆX Y
]
ÆÆY Z
.
ÆÆZ [
	vertex_BL
ÆÆ[ d
.
ÆÆd e
position
ÆÆe m
.
ÆÆm n
y
ÆÆn o
-
ÆÆp q
m_meshExtents
ÆÆr 
.ÆÆ Ä
minÆÆÄ É
.ÆÆÉ Ñ
yÆÆÑ Ö
)ÆÆÖ Ü
/ÆÆá à
(ÆÆâ ä
m_meshExtentsÆÆä ó
.ÆÆó ò
maxÆÆò õ
.ÆÆõ ú
yÆÆú ù
-ÆÆû ü
m_meshExtentsÆÆ† ≠
.ÆÆ≠ Æ
minÆÆÆ ±
.ÆÆ± ≤
yÆÆ≤ ≥
)ÆÆ≥ ¥
;ÆÆ¥ µ
characterInfos
ØØ$ 2
[
ØØ2 3
i
ØØ3 4
]
ØØ4 5
.
ØØ5 6
	vertex_TL
ØØ6 ?
.
ØØ? @
uv2
ØØ@ C
.
ØØC D
y
ØØD E
=
ØØF G
(
ØØH I
characterInfos
ØØI W
[
ØØW X
i
ØØX Y
]
ØØY Z
.
ØØZ [
	vertex_TL
ØØ[ d
.
ØØd e
position
ØØe m
.
ØØm n
y
ØØn o
-
ØØp q
m_meshExtents
ØØr 
.ØØ Ä
minØØÄ É
.ØØÉ Ñ
yØØÑ Ö
)ØØÖ Ü
/ØØá à
(ØØâ ä
m_meshExtentsØØä ó
.ØØó ò
maxØØò õ
.ØØõ ú
yØØú ù
-ØØû ü
m_meshExtentsØØ† ≠
.ØØ≠ Æ
minØØÆ ±
.ØØ± ≤
yØØ≤ ≥
)ØØ≥ ¥
;ØØ¥ µ
characterInfos
∞∞$ 2
[
∞∞2 3
i
∞∞3 4
]
∞∞4 5
.
∞∞5 6
	vertex_TR
∞∞6 ?
.
∞∞? @
uv2
∞∞@ C
.
∞∞C D
y
∞∞D E
=
∞∞F G
characterInfos
∞∞H V
[
∞∞V W
i
∞∞W X
]
∞∞X Y
.
∞∞Y Z
	vertex_TL
∞∞Z c
.
∞∞c d
uv2
∞∞d g
.
∞∞g h
y
∞∞h i
;
∞∞i j
characterInfos
±±$ 2
[
±±2 3
i
±±3 4
]
±±4 5
.
±±5 6
	vertex_BR
±±6 ?
.
±±? @
uv2
±±@ C
.
±±C D
y
±±D E
=
±±F G
characterInfos
±±H V
[
±±V W
i
±±W X
]
±±X Y
.
±±Y Z
	vertex_BL
±±Z c
.
±±c d
uv2
±±d g
.
±±g h
y
±±h i
;
±±i j
break
≤≤$ )
;
≤≤) *
case
¥¥  $#
TextureMappingOptions
¥¥% :
.
¥¥: ;
MatchAspect
¥¥; F
:
¥¥F G
float
µµ$ )
yDelta
µµ* 0
=
µµ1 2
(
µµ3 4
$num
µµ4 5
-
µµ6 7
(
µµ8 9
(
µµ9 :
characterInfos
µµ: H
[
µµH I
i
µµI J
]
µµJ K
.
µµK L
	vertex_BL
µµL U
.
µµU V
uv2
µµV Y
.
µµY Z
x
µµZ [
+
µµ\ ]
characterInfos
µµ^ l
[
µµl m
i
µµm n
]
µµn o
.
µµo p
	vertex_TR
µµp y
.
µµy z
uv2
µµz }
.
µµ} ~
x
µµ~ 
)µµ Ä
/µµÅ Ç
characterInfosµµÉ ë
[µµë í
iµµí ì
]µµì î
.µµî ï
aspectRatioµµï †
)µµ† °
)µµ° ¢
/µµ£ §
$numµµ• ¶
;µµ¶ ß
characterInfos
∑∑$ 2
[
∑∑2 3
i
∑∑3 4
]
∑∑4 5
.
∑∑5 6
	vertex_BL
∑∑6 ?
.
∑∑? @
uv2
∑∑@ C
.
∑∑C D
y
∑∑D E
=
∑∑F G
yDelta
∑∑H N
+
∑∑O P
(
∑∑Q R
characterInfos
∑∑R `
[
∑∑` a
i
∑∑a b
]
∑∑b c
.
∑∑c d
	vertex_BL
∑∑d m
.
∑∑m n
uv2
∑∑n q
.
∑∑q r
x
∑∑r s
/
∑∑t u
characterInfos∑∑v Ñ
[∑∑Ñ Ö
i∑∑Ö Ü
]∑∑Ü á
.∑∑á à
aspectRatio∑∑à ì
)∑∑ì î
;∑∑î ï
characterInfos
∏∏$ 2
[
∏∏2 3
i
∏∏3 4
]
∏∏4 5
.
∏∏5 6
	vertex_TL
∏∏6 ?
.
∏∏? @
uv2
∏∏@ C
.
∏∏C D
y
∏∏D E
=
∏∏F G
yDelta
∏∏H N
+
∏∏O P
(
∏∏Q R
characterInfos
∏∏R `
[
∏∏` a
i
∏∏a b
]
∏∏b c
.
∏∏c d
	vertex_TR
∏∏d m
.
∏∏m n
uv2
∏∏n q
.
∏∏q r
x
∏∏r s
/
∏∏t u
characterInfos∏∏v Ñ
[∏∏Ñ Ö
i∏∏Ö Ü
]∏∏Ü á
.∏∏á à
aspectRatio∏∏à ì
)∏∏ì î
;∏∏î ï
characterInfos
ππ$ 2
[
ππ2 3
i
ππ3 4
]
ππ4 5
.
ππ5 6
	vertex_BR
ππ6 ?
.
ππ? @
uv2
ππ@ C
.
ππC D
y
ππD E
=
ππF G
characterInfos
ππH V
[
ππV W
i
ππW X
]
ππX Y
.
ππY Z
	vertex_BL
ππZ c
.
ππc d
uv2
ππd g
.
ππg h
y
ππh i
;
ππi j
characterInfos
∫∫$ 2
[
∫∫2 3
i
∫∫3 4
]
∫∫4 5
.
∫∫5 6
	vertex_TR
∫∫6 ?
.
∫∫? @
uv2
∫∫@ C
.
∫∫C D
y
∫∫D E
=
∫∫F G
characterInfos
∫∫H V
[
∫∫V W
i
∫∫W X
]
∫∫X Y
.
∫∫Y Z
	vertex_TL
∫∫Z c
.
∫∫c d
uv2
∫∫d g
.
∫∫g h
y
∫∫h i
;
∫∫i j
break
ªª$ )
;
ªª) *
}
ºº 
xScale
¡¡ "
=
¡¡# $
characterInfos
¡¡% 3
[
¡¡3 4
i
¡¡4 5
]
¡¡5 6
.
¡¡6 7
scale
¡¡7 <
*
¡¡= >
Mathf
¡¡? D
.
¡¡D E
Abs
¡¡E H
(
¡¡H I

lossyScale
¡¡I S
)
¡¡S T
*
¡¡U V
(
¡¡W X
$num
¡¡X Y
-
¡¡Z [!
m_charWidthAdjDelta
¡¡\ o
)
¡¡o p
;
¡¡p q
if
¬¬ 
(
¬¬  
!
¬¬  !
characterInfos
¬¬! /
[
¬¬/ 0
i
¬¬0 1
]
¬¬1 2
.
¬¬2 3&
isUsingAlternateTypeface
¬¬3 K
&&
¬¬L N
(
¬¬O P
characterInfos
¬¬P ^
[
¬¬^ _
i
¬¬_ `
]
¬¬` a
.
¬¬a b
style
¬¬b g
&
¬¬h i

FontStyles
¬¬j t
.
¬¬t u
Bold
¬¬u y
)
¬¬y z
==
¬¬{ }

FontStyles¬¬~ à
.¬¬à â
Bold¬¬â ç
)¬¬ç é
xScale¬¬è ï
*=¬¬ñ ò
-¬¬ô ö
$num¬¬ö õ
;¬¬õ ú
float
ÀÀ !
x0
ÀÀ" $
=
ÀÀ% &
characterInfos
ÀÀ' 5
[
ÀÀ5 6
i
ÀÀ6 7
]
ÀÀ7 8
.
ÀÀ8 9
	vertex_BL
ÀÀ9 B
.
ÀÀB C
uv2
ÀÀC F
.
ÀÀF G
x
ÀÀG H
;
ÀÀH I
float
ÃÃ !
y0
ÃÃ" $
=
ÃÃ% &
characterInfos
ÃÃ' 5
[
ÃÃ5 6
i
ÃÃ6 7
]
ÃÃ7 8
.
ÃÃ8 9
	vertex_BL
ÃÃ9 B
.
ÃÃB C
uv2
ÃÃC F
.
ÃÃF G
y
ÃÃG H
;
ÃÃH I
float
ÕÕ !
x1
ÕÕ" $
=
ÕÕ% &
characterInfos
ÕÕ' 5
[
ÕÕ5 6
i
ÕÕ6 7
]
ÕÕ7 8
.
ÕÕ8 9
	vertex_TR
ÕÕ9 B
.
ÕÕB C
uv2
ÕÕC F
.
ÕÕF G
x
ÕÕG H
;
ÕÕH I
float
ŒŒ !
y1
ŒŒ" $
=
ŒŒ% &
characterInfos
ŒŒ' 5
[
ŒŒ5 6
i
ŒŒ6 7
]
ŒŒ7 8
.
ŒŒ8 9
	vertex_TR
ŒŒ9 B
.
ŒŒB C
uv2
ŒŒC F
.
ŒŒF G
y
ŒŒG H
;
ŒŒH I
float
–– !
dx
––" $
=
––% &
(
––' (
int
––( +
)
––+ ,
x0
––, .
;
––. /
float
—— !
dy
——" $
=
——% &
(
——' (
int
——( +
)
——+ ,
y0
——, .
;
——. /
x0
”” 
=
””  
x0
””! #
-
””$ %
dx
””& (
;
””( )
x1
‘‘ 
=
‘‘  
x1
‘‘! #
-
‘‘$ %
dx
‘‘& (
;
‘‘( )
y0
’’ 
=
’’  
y0
’’! #
-
’’$ %
dy
’’& (
;
’’( )
y1
÷÷ 
=
÷÷  
y1
÷÷! #
-
÷÷$ %
dy
÷÷& (
;
÷÷( )
characterInfos
ŸŸ *
[
ŸŸ* +
i
ŸŸ+ ,
]
ŸŸ, -
.
ŸŸ- .
	vertex_BL
ŸŸ. 7
.
ŸŸ7 8
uv2
ŸŸ8 ;
.
ŸŸ; <
x
ŸŸ< =
=
ŸŸ> ?
PackUV
ŸŸ@ F
(
ŸŸF G
x0
ŸŸG I
,
ŸŸI J
y0
ŸŸK M
)
ŸŸM N
;
ŸŸN O
characterInfos
ŸŸP ^
[
ŸŸ^ _
i
ŸŸ_ `
]
ŸŸ` a
.
ŸŸa b
	vertex_BL
ŸŸb k
.
ŸŸk l
uv2
ŸŸl o
.
ŸŸo p
y
ŸŸp q
=
ŸŸr s
xScale
ŸŸt z
;
ŸŸz {
characterInfos
⁄⁄ *
[
⁄⁄* +
i
⁄⁄+ ,
]
⁄⁄, -
.
⁄⁄- .
	vertex_TL
⁄⁄. 7
.
⁄⁄7 8
uv2
⁄⁄8 ;
.
⁄⁄; <
x
⁄⁄< =
=
⁄⁄> ?
PackUV
⁄⁄@ F
(
⁄⁄F G
x0
⁄⁄G I
,
⁄⁄I J
y1
⁄⁄K M
)
⁄⁄M N
;
⁄⁄N O
characterInfos
⁄⁄P ^
[
⁄⁄^ _
i
⁄⁄_ `
]
⁄⁄` a
.
⁄⁄a b
	vertex_TL
⁄⁄b k
.
⁄⁄k l
uv2
⁄⁄l o
.
⁄⁄o p
y
⁄⁄p q
=
⁄⁄r s
xScale
⁄⁄t z
;
⁄⁄z {
characterInfos
€€ *
[
€€* +
i
€€+ ,
]
€€, -
.
€€- .
	vertex_TR
€€. 7
.
€€7 8
uv2
€€8 ;
.
€€; <
x
€€< =
=
€€> ?
PackUV
€€@ F
(
€€F G
x1
€€G I
,
€€I J
y1
€€K M
)
€€M N
;
€€N O
characterInfos
€€P ^
[
€€^ _
i
€€_ `
]
€€` a
.
€€a b
	vertex_TR
€€b k
.
€€k l
uv2
€€l o
.
€€o p
y
€€p q
=
€€r s
xScale
€€t z
;
€€z {
characterInfos
‹‹ *
[
‹‹* +
i
‹‹+ ,
]
‹‹, -
.
‹‹- .
	vertex_BR
‹‹. 7
.
‹‹7 8
uv2
‹‹8 ;
.
‹‹; <
x
‹‹< =
=
‹‹> ?
PackUV
‹‹@ F
(
‹‹F G
x1
‹‹G I
,
‹‹I J
y0
‹‹K M
)
‹‹M N
;
‹‹N O
characterInfos
‹‹P ^
[
‹‹^ _
i
‹‹_ `
]
‹‹` a
.
‹‹a b
	vertex_BR
‹‹b k
.
‹‹k l
uv2
‹‹l o
.
‹‹o p
y
‹‹p q
=
‹‹r s
xScale
‹‹t z
;
‹‹z {
break
ﬁﬁ !
;
ﬁﬁ! "
case
·· !
TMP_TextElementType
·· 0
.
··0 1
Sprite
··1 7
:
··7 8
break
„„ !
;
„„! "
}
‰‰ 
if
ËË 
(
ËË 
i
ËË 
<
ËË $
m_maxVisibleCharacters
ËË 2
&&
ËË3 5
	wordCount
ËË6 ?
<
ËË@ A
m_maxVisibleWords
ËËB S
&&
ËËT V
currentLine
ËËW b
<
ËËc d
m_maxVisibleLines
ËËe v
&&
ËËw y
m_overflowModeËËz à
!=ËËâ ã!
TextOverflowModesËËå ù
.ËËù û
PageËËû ¢
)ËË¢ £
{
ÈÈ 
characterInfos
ÍÍ &
[
ÍÍ& '
i
ÍÍ' (
]
ÍÍ( )
.
ÍÍ) *
	vertex_BL
ÍÍ* 3
.
ÍÍ3 4
position
ÍÍ4 <
+=
ÍÍ= ?
offset
ÍÍ@ F
;
ÍÍF G
characterInfos
ÎÎ &
[
ÎÎ& '
i
ÎÎ' (
]
ÎÎ( )
.
ÎÎ) *
	vertex_TL
ÎÎ* 3
.
ÎÎ3 4
position
ÎÎ4 <
+=
ÎÎ= ?
offset
ÎÎ@ F
;
ÎÎF G
characterInfos
ÏÏ &
[
ÏÏ& '
i
ÏÏ' (
]
ÏÏ( )
.
ÏÏ) *
	vertex_TR
ÏÏ* 3
.
ÏÏ3 4
position
ÏÏ4 <
+=
ÏÏ= ?
offset
ÏÏ@ F
;
ÏÏF G
characterInfos
ÌÌ &
[
ÌÌ& '
i
ÌÌ' (
]
ÌÌ( )
.
ÌÌ) *
	vertex_BR
ÌÌ* 3
.
ÌÌ3 4
position
ÌÌ4 <
+=
ÌÌ= ?
offset
ÌÌ@ F
;
ÌÌF G
}
ÓÓ 
else
ÔÔ 
if
ÔÔ 
(
ÔÔ 
i
ÔÔ 
<
ÔÔ  $
m_maxVisibleCharacters
ÔÔ! 7
&&
ÔÔ8 :
	wordCount
ÔÔ; D
<
ÔÔE F
m_maxVisibleWords
ÔÔG X
&&
ÔÔY [
currentLine
ÔÔ\ g
<
ÔÔh i
m_maxVisibleLines
ÔÔj {
&&
ÔÔ| ~
m_overflowModeÔÔ ç
==ÔÔé ê!
TextOverflowModesÔÔë ¢
.ÔÔ¢ £
PageÔÔ£ ß
&&ÔÔ® ™
characterInfosÔÔ´ π
[ÔÔπ ∫
iÔÔ∫ ª
]ÔÔª º
.ÔÔº Ω

pageNumberÔÔΩ «
==ÔÔ»  
pageToDisplayÔÔÀ ÿ
)ÔÔÿ Ÿ
{
 
characterInfos
ÒÒ &
[
ÒÒ& '
i
ÒÒ' (
]
ÒÒ( )
.
ÒÒ) *
	vertex_BL
ÒÒ* 3
.
ÒÒ3 4
position
ÒÒ4 <
+=
ÒÒ= ?
offset
ÒÒ@ F
;
ÒÒF G
characterInfos
ÚÚ &
[
ÚÚ& '
i
ÚÚ' (
]
ÚÚ( )
.
ÚÚ) *
	vertex_TL
ÚÚ* 3
.
ÚÚ3 4
position
ÚÚ4 <
+=
ÚÚ= ?
offset
ÚÚ@ F
;
ÚÚF G
characterInfos
ÛÛ &
[
ÛÛ& '
i
ÛÛ' (
]
ÛÛ( )
.
ÛÛ) *
	vertex_TR
ÛÛ* 3
.
ÛÛ3 4
position
ÛÛ4 <
+=
ÛÛ= ?
offset
ÛÛ@ F
;
ÛÛF G
characterInfos
ÙÙ &
[
ÙÙ& '
i
ÙÙ' (
]
ÙÙ( )
.
ÙÙ) *
	vertex_BR
ÙÙ* 3
.
ÙÙ3 4
position
ÙÙ4 <
+=
ÙÙ= ?
offset
ÙÙ@ F
;
ÙÙF G
}
ıı 
else
ˆˆ 
{
˜˜ 
characterInfos
¯¯ &
[
¯¯& '
i
¯¯' (
]
¯¯( )
.
¯¯) *
	vertex_BL
¯¯* 3
.
¯¯3 4
position
¯¯4 <
=
¯¯= >
Vector3
¯¯? F
.
¯¯F G
zero
¯¯G K
;
¯¯K L
characterInfos
˘˘ &
[
˘˘& '
i
˘˘' (
]
˘˘( )
.
˘˘) *
	vertex_TL
˘˘* 3
.
˘˘3 4
position
˘˘4 <
=
˘˘= >
Vector3
˘˘? F
.
˘˘F G
zero
˘˘G K
;
˘˘K L
characterInfos
˙˙ &
[
˙˙& '
i
˙˙' (
]
˙˙( )
.
˙˙) *
	vertex_TR
˙˙* 3
.
˙˙3 4
position
˙˙4 <
=
˙˙= >
Vector3
˙˙? F
.
˙˙F G
zero
˙˙G K
;
˙˙K L
characterInfos
˚˚ &
[
˚˚& '
i
˚˚' (
]
˚˚( )
.
˚˚) *
	vertex_BR
˚˚* 3
.
˚˚3 4
position
˚˚4 <
=
˚˚= >
Vector3
˚˚? F
.
˚˚F G
zero
˚˚G K
;
˚˚K L
characterInfos
¸¸ &
[
¸¸& '
i
¸¸' (
]
¸¸( )
.
¸¸) *
	isVisible
¸¸* 3
=
¸¸4 5
false
¸¸6 ;
;
¸¸; <
}
˝˝ 
if
ÇÇ 
(
ÇÇ 
elementType
ÇÇ #
==
ÇÇ$ &!
TMP_TextElementType
ÇÇ' :
.
ÇÇ: ;
	Character
ÇÇ; D
)
ÇÇD E
{
ÉÉ (
FillCharacterVertexBuffers
ÑÑ 2
(
ÑÑ2 3
i
ÑÑ3 4
,
ÑÑ4 5
vert_index_X4
ÑÑ6 C
)
ÑÑC D
;
ÑÑD E
}
ÖÖ 
else
ÜÜ 
if
ÜÜ 
(
ÜÜ 
elementType
ÜÜ (
==
ÜÜ) +!
TMP_TextElementType
ÜÜ, ?
.
ÜÜ? @
Sprite
ÜÜ@ F
)
ÜÜF G
{
áá %
FillSpriteVertexBuffers
àà /
(
àà/ 0
i
àà0 1
,
àà1 2
sprite_index_X4
àà3 B
)
ààB C
;
ààC D
}
ââ 
}
ää 

m_textInfo
éé 
.
éé 
characterInfo
éé (
[
éé( )
i
éé) *
]
éé* +
.
éé+ ,

bottomLeft
éé, 6
+=
éé7 9
offset
éé: @
;
éé@ A

m_textInfo
èè 
.
èè 
characterInfo
èè (
[
èè( )
i
èè) *
]
èè* +
.
èè+ ,
topLeft
èè, 3
+=
èè4 6
offset
èè7 =
;
èè= >

m_textInfo
êê 
.
êê 
characterInfo
êê (
[
êê( )
i
êê) *
]
êê* +
.
êê+ ,
topRight
êê, 4
+=
êê5 7
offset
êê8 >
;
êê> ?

m_textInfo
ëë 
.
ëë 
characterInfo
ëë (
[
ëë( )
i
ëë) *
]
ëë* +
.
ëë+ ,
bottomRight
ëë, 7
+=
ëë8 :
offset
ëë; A
;
ëëA B

m_textInfo
ìì 
.
ìì 
characterInfo
ìì (
[
ìì( )
i
ìì) *
]
ìì* +
.
ìì+ ,
origin
ìì, 2
+=
ìì3 5
offset
ìì6 <
.
ìì< =
x
ìì= >
;
ìì> ?

m_textInfo
îî 
.
îî 
characterInfo
îî (
[
îî( )
i
îî) *
]
îî* +
.
îî+ ,
xAdvance
îî, 4
+=
îî5 7
offset
îî8 >
.
îî> ?
x
îî? @
;
îî@ A

m_textInfo
ññ 
.
ññ 
characterInfo
ññ (
[
ññ( )
i
ññ) *
]
ññ* +
.
ññ+ ,
ascender
ññ, 4
+=
ññ5 7
offset
ññ8 >
.
ññ> ?
y
ññ? @
;
ññ@ A

m_textInfo
óó 
.
óó 
characterInfo
óó (
[
óó( )
i
óó) *
]
óó* +
.
óó+ ,
	descender
óó, 5
+=
óó6 8
offset
óó9 ?
.
óó? @
y
óó@ A
;
óóA B

m_textInfo
òò 
.
òò 
characterInfo
òò (
[
òò( )
i
òò) *
]
òò* +
.
òò+ ,
baseLine
òò, 4
+=
òò5 7
offset
òò8 >
.
òò> ?
y
òò? @
;
òò@ A
if
õõ 
(
õõ  
isCharacterVisible
õõ &
)
õõ& '
{
úú 
}
üü 
if
££ 
(
££ 
currentLine
££ 
!=
££  "
lastLine
££# +
||
££, .
i
££/ 0
==
££1 3
m_characterCount
££4 D
-
££E F
$num
££G H
)
££H I
{
§§ 
if
¶¶ 
(
¶¶ 
currentLine
¶¶ #
!=
¶¶$ &
lastLine
¶¶' /
)
¶¶/ 0
{
ßß 

m_textInfo
®® "
.
®®" #
lineInfo
®®# +
[
®®+ ,
lastLine
®®, 4
]
®®4 5
.
®®5 6
baseline
®®6 >
+=
®®? A
offset
®®B H
.
®®H I
y
®®I J
;
®®J K

m_textInfo
©© "
.
©©" #
lineInfo
©©# +
[
©©+ ,
lastLine
©©, 4
]
©©4 5
.
©©5 6
ascender
©©6 >
+=
©©? A
offset
©©B H
.
©©H I
y
©©I J
;
©©J K

m_textInfo
™™ "
.
™™" #
lineInfo
™™# +
[
™™+ ,
lastLine
™™, 4
]
™™4 5
.
™™5 6
	descender
™™6 ?
+=
™™@ B
offset
™™C I
.
™™I J
y
™™J K
;
™™K L

m_textInfo
¨¨ "
.
¨¨" #
lineInfo
¨¨# +
[
¨¨+ ,
lastLine
¨¨, 4
]
¨¨4 5
.
¨¨5 6

maxAdvance
¨¨6 @
+=
¨¨A C
offset
¨¨D J
.
¨¨J K
x
¨¨K L
;
¨¨L M

m_textInfo
ÆÆ "
.
ÆÆ" #
lineInfo
ÆÆ# +
[
ÆÆ+ ,
lastLine
ÆÆ, 4
]
ÆÆ4 5
.
ÆÆ5 6
lineExtents
ÆÆ6 A
.
ÆÆA B
min
ÆÆB E
=
ÆÆF G
new
ÆÆH K
Vector2
ÆÆL S
(
ÆÆS T

m_textInfo
ÆÆT ^
.
ÆÆ^ _
characterInfo
ÆÆ_ l
[
ÆÆl m

m_textInfo
ÆÆm w
.
ÆÆw x
lineInfoÆÆx Ä
[ÆÆÄ Å
lastLineÆÆÅ â
]ÆÆâ ä
.ÆÆä ã#
firstCharacterIndexÆÆã û
]ÆÆû ü
.ÆÆü †

bottomLeftÆÆ† ™
.ÆÆ™ ´
xÆÆ´ ¨
,ÆÆ¨ ≠

m_textInfoÆÆÆ ∏
.ÆÆ∏ π
lineInfoÆÆπ ¡
[ÆÆ¡ ¬
lastLineÆÆ¬  
]ÆÆ  À
.ÆÆÀ Ã
	descenderÆÆÃ ’
)ÆÆ’ ÷
;ÆÆ÷ ◊

m_textInfo
ØØ "
.
ØØ" #
lineInfo
ØØ# +
[
ØØ+ ,
lastLine
ØØ, 4
]
ØØ4 5
.
ØØ5 6
lineExtents
ØØ6 A
.
ØØA B
max
ØØB E
=
ØØF G
new
ØØH K
Vector2
ØØL S
(
ØØS T

m_textInfo
ØØT ^
.
ØØ^ _
characterInfo
ØØ_ l
[
ØØl m

m_textInfo
ØØm w
.
ØØw x
lineInfoØØx Ä
[ØØÄ Å
lastLineØØÅ â
]ØØâ ä
.ØØä ã)
lastVisibleCharacterIndexØØã §
]ØØ§ •
.ØØ• ¶
topRightØØ¶ Æ
.ØØÆ Ø
xØØØ ∞
,ØØ∞ ±

m_textInfoØØ≤ º
.ØØº Ω
lineInfoØØΩ ≈
[ØØ≈ ∆
lastLineØØ∆ Œ
]ØØŒ œ
.ØØœ –
ascenderØØ– ÿ
)ØØÿ Ÿ
;ØØŸ ⁄
}
∞∞ 
if
≥≥ 
(
≥≥ 
i
≥≥ 
==
≥≥ 
m_characterCount
≥≥ -
-
≥≥. /
$num
≥≥0 1
)
≥≥1 2
{
¥¥ 

m_textInfo
µµ "
.
µµ" #
lineInfo
µµ# +
[
µµ+ ,
currentLine
µµ, 7
]
µµ7 8
.
µµ8 9
baseline
µµ9 A
+=
µµB D
offset
µµE K
.
µµK L
y
µµL M
;
µµM N

m_textInfo
∂∂ "
.
∂∂" #
lineInfo
∂∂# +
[
∂∂+ ,
currentLine
∂∂, 7
]
∂∂7 8
.
∂∂8 9
ascender
∂∂9 A
+=
∂∂B D
offset
∂∂E K
.
∂∂K L
y
∂∂L M
;
∂∂M N

m_textInfo
∑∑ "
.
∑∑" #
lineInfo
∑∑# +
[
∑∑+ ,
currentLine
∑∑, 7
]
∑∑7 8
.
∑∑8 9
	descender
∑∑9 B
+=
∑∑C E
offset
∑∑F L
.
∑∑L M
y
∑∑M N
;
∑∑N O

m_textInfo
ππ "
.
ππ" #
lineInfo
ππ# +
[
ππ+ ,
currentLine
ππ, 7
]
ππ7 8
.
ππ8 9

maxAdvance
ππ9 C
+=
ππD F
offset
ππG M
.
ππM N
x
ππN O
;
ππO P

m_textInfo
ªª "
.
ªª" #
lineInfo
ªª# +
[
ªª+ ,
currentLine
ªª, 7
]
ªª7 8
.
ªª8 9
lineExtents
ªª9 D
.
ªªD E
min
ªªE H
=
ªªI J
new
ªªK N
Vector2
ªªO V
(
ªªV W

m_textInfo
ªªW a
.
ªªa b
characterInfo
ªªb o
[
ªªo p

m_textInfo
ªªp z
.
ªªz {
lineInfoªª{ É
[ªªÉ Ñ
currentLineªªÑ è
]ªªè ê
.ªªê ë#
firstCharacterIndexªªë §
]ªª§ •
.ªª• ¶

bottomLeftªª¶ ∞
.ªª∞ ±
xªª± ≤
,ªª≤ ≥

m_textInfoªª¥ æ
.ªªæ ø
lineInfoªªø «
[ªª« »
currentLineªª» ”
]ªª” ‘
.ªª‘ ’
	descenderªª’ ﬁ
)ªªﬁ ﬂ
;ªªﬂ ‡

m_textInfo
ºº "
.
ºº" #
lineInfo
ºº# +
[
ºº+ ,
currentLine
ºº, 7
]
ºº7 8
.
ºº8 9
lineExtents
ºº9 D
.
ººD E
max
ººE H
=
ººI J
new
ººK N
Vector2
ººO V
(
ººV W

m_textInfo
ººW a
.
ººa b
characterInfo
ººb o
[
ººo p

m_textInfo
ººp z
.
ººz {
lineInfoºº{ É
[ººÉ Ñ
currentLineººÑ è
]ººè ê
.ººê ë)
lastVisibleCharacterIndexººë ™
]ºº™ ´
.ºº´ ¨
topRightºº¨ ¥
.ºº¥ µ
xººµ ∂
,ºº∂ ∑

m_textInfoºº∏ ¬
.ºº¬ √
lineInfoºº√ À
[ººÀ Ã
currentLineººÃ ◊
]ºº◊ ÿ
.ººÿ Ÿ
ascenderººŸ ·
)ºº· ‚
;ºº‚ „
}
ΩΩ 
}
ææ 
if
ƒƒ 
(
ƒƒ 
char
ƒƒ 
.
ƒƒ 
IsLetterOrDigit
ƒƒ (
(
ƒƒ( )
unicode
ƒƒ) 0
)
ƒƒ0 1
||
ƒƒ2 4
unicode
ƒƒ5 <
==
ƒƒ= ?
$num
ƒƒ@ D
||
ƒƒE G
unicode
ƒƒH O
==
ƒƒP R
$num
ƒƒS W
||
ƒƒX Z
unicode
ƒƒ[ b
==
ƒƒc e
$num
ƒƒf l
||
ƒƒm o
unicode
ƒƒp w
==
ƒƒx z
$numƒƒ{ Å
)ƒƒÅ Ç
{
≈≈ 
if
∆∆ 
(
∆∆ 
isStartOfWord
∆∆ %
==
∆∆& (
false
∆∆) .
)
∆∆. /
{
«« 
isStartOfWord
»» %
=
»»& '
true
»»( ,
;
»», -
wordFirstChar
…… %
=
……& '
i
……( )
;
……) *
}
   
if
ÕÕ 
(
ÕÕ 
isStartOfWord
ÕÕ %
&&
ÕÕ& (
i
ÕÕ) *
==
ÕÕ+ -
m_characterCount
ÕÕ. >
-
ÕÕ? @
$num
ÕÕA B
)
ÕÕB C
{
ŒŒ 
int
œœ 
size
œœ  
=
œœ! "

m_textInfo
œœ# -
.
œœ- .
wordInfo
œœ. 6
.
œœ6 7
Length
œœ7 =
;
œœ= >
int
–– 
index
–– !
=
––" #

m_textInfo
––$ .
.
––. /
	wordCount
––/ 8
;
––8 9
if
““ 
(
““ 

m_textInfo
““ &
.
““& '
	wordCount
““' 0
+
““1 2
$num
““3 4
>
““5 6
size
““7 ;
)
““; <
TMP_TextInfo
”” (
.
””( )
Resize
””) /
(
””/ 0
ref
””0 3

m_textInfo
””4 >
.
””> ?
wordInfo
””? G
,
””G H
size
””I M
+
””N O
$num
””P Q
)
””Q R
;
””R S
wordLastChar
’’ $
=
’’% &
i
’’' (
;
’’( )

m_textInfo
◊◊ "
.
◊◊" #
wordInfo
◊◊# +
[
◊◊+ ,
index
◊◊, 1
]
◊◊1 2
.
◊◊2 3!
firstCharacterIndex
◊◊3 F
=
◊◊G H
wordFirstChar
◊◊I V
;
◊◊V W

m_textInfo
ÿÿ "
.
ÿÿ" #
wordInfo
ÿÿ# +
[
ÿÿ+ ,
index
ÿÿ, 1
]
ÿÿ1 2
.
ÿÿ2 3 
lastCharacterIndex
ÿÿ3 E
=
ÿÿF G
wordLastChar
ÿÿH T
;
ÿÿT U

m_textInfo
ŸŸ "
.
ŸŸ" #
wordInfo
ŸŸ# +
[
ŸŸ+ ,
index
ŸŸ, 1
]
ŸŸ1 2
.
ŸŸ2 3
characterCount
ŸŸ3 A
=
ŸŸB C
wordLastChar
ŸŸD P
-
ŸŸQ R
wordFirstChar
ŸŸS `
+
ŸŸa b
$num
ŸŸc d
;
ŸŸd e

m_textInfo
⁄⁄ "
.
⁄⁄" #
wordInfo
⁄⁄# +
[
⁄⁄+ ,
index
⁄⁄, 1
]
⁄⁄1 2
.
⁄⁄2 3
textComponent
⁄⁄3 @
=
⁄⁄A B
this
⁄⁄C G
;
⁄⁄G H
	wordCount
‹‹ !
+=
‹‹" $
$num
‹‹% &
;
‹‹& '

m_textInfo
›› "
.
››" #
	wordCount
››# ,
+=
››- /
$num
››0 1
;
››1 2

m_textInfo
ﬁﬁ "
.
ﬁﬁ" #
lineInfo
ﬁﬁ# +
[
ﬁﬁ+ ,
currentLine
ﬁﬁ, 7
]
ﬁﬁ7 8
.
ﬁﬁ8 9
	wordCount
ﬁﬁ9 B
+=
ﬁﬁC E
$num
ﬁﬁF G
;
ﬁﬁG H
}
ﬂﬂ 
}
‡‡ 
else
·· 
if
·· 
(
·· 
isStartOfWord
·· &
||
··' )
i
··* +
==
··, .
$num
··/ 0
&&
··1 3
(
··4 5
!
··5 6
char
··6 :
.
··: ;
IsPunctuation
··; H
(
··H I
unicode
··I P
)
··P Q
||
··R T
char
··U Y
.
··Y Z
IsWhiteSpace
··Z f
(
··f g
unicode
··g n
)
··n o
||
··p r
unicode
··s z
==
··{ }
$num··~ Ñ
||··Ö á
i··à â
==··ä å 
m_characterCount··ç ù
-··û ü
$num··† °
)··° ¢
)··¢ £
{
‚‚ 
if
„„ 
(
„„ 
i
„„ 
>
„„ 
$num
„„ 
&&
„„  
i
„„! "
<
„„# $
characterInfos
„„% 3
.
„„3 4
Length
„„4 :
-
„„; <
$num
„„= >
&&
„„? A
i
„„B C
<
„„D E
m_characterCount
„„F V
&&
„„W Y
(
„„Z [
unicode
„„[ b
==
„„c e
$num
„„f h
||
„„i k
unicode
„„l s
==
„„t v
$num
„„w {
)
„„{ |
&&
„„} 
char„„Ä Ñ
.„„Ñ Ö
IsLetterOrDigit„„Ö î
(„„î ï
characterInfos„„ï £
[„„£ §
i„„§ •
-„„¶ ß
$num„„® ©
]„„© ™
.„„™ ´
	character„„´ ¥
)„„¥ µ
&&„„∂ ∏
char„„π Ω
.„„Ω æ
IsLetterOrDigit„„æ Õ
(„„Õ Œ
characterInfos„„Œ ‹
[„„‹ ›
i„„› ﬁ
+„„ﬂ ‡
$num„„· ‚
]„„‚ „
.„„„ ‰
	character„„‰ Ì
)„„Ì Ó
)„„Ó Ô
{
‰‰ 
}
ÊÊ 
else
ÁÁ 
{
ËË 
wordLastChar
ÈÈ $
=
ÈÈ% &
i
ÈÈ' (
==
ÈÈ) +
m_characterCount
ÈÈ, <
-
ÈÈ= >
$num
ÈÈ? @
&&
ÈÈA C
char
ÈÈD H
.
ÈÈH I
IsLetterOrDigit
ÈÈI X
(
ÈÈX Y
unicode
ÈÈY `
)
ÈÈ` a
?
ÈÈb c
i
ÈÈd e
:
ÈÈf g
i
ÈÈh i
-
ÈÈj k
$num
ÈÈl m
;
ÈÈm n
isStartOfWord
ÍÍ %
=
ÍÍ& '
false
ÍÍ( -
;
ÍÍ- .
int
ÏÏ 
size
ÏÏ  
=
ÏÏ! "

m_textInfo
ÏÏ# -
.
ÏÏ- .
wordInfo
ÏÏ. 6
.
ÏÏ6 7
Length
ÏÏ7 =
;
ÏÏ= >
int
ÌÌ 
index
ÌÌ !
=
ÌÌ" #

m_textInfo
ÌÌ$ .
.
ÌÌ. /
	wordCount
ÌÌ/ 8
;
ÌÌ8 9
if
ÔÔ 
(
ÔÔ 

m_textInfo
ÔÔ &
.
ÔÔ& '
	wordCount
ÔÔ' 0
+
ÔÔ1 2
$num
ÔÔ3 4
>
ÔÔ5 6
size
ÔÔ7 ;
)
ÔÔ; <
TMP_TextInfo
 (
.
( )
Resize
) /
(
/ 0
ref
0 3

m_textInfo
4 >
.
> ?
wordInfo
? G
,
G H
size
I M
+
N O
$num
P Q
)
Q R
;
R S

m_textInfo
ÚÚ "
.
ÚÚ" #
wordInfo
ÚÚ# +
[
ÚÚ+ ,
index
ÚÚ, 1
]
ÚÚ1 2
.
ÚÚ2 3!
firstCharacterIndex
ÚÚ3 F
=
ÚÚG H
wordFirstChar
ÚÚI V
;
ÚÚV W

m_textInfo
ÛÛ "
.
ÛÛ" #
wordInfo
ÛÛ# +
[
ÛÛ+ ,
index
ÛÛ, 1
]
ÛÛ1 2
.
ÛÛ2 3 
lastCharacterIndex
ÛÛ3 E
=
ÛÛF G
wordLastChar
ÛÛH T
;
ÛÛT U

m_textInfo
ÙÙ "
.
ÙÙ" #
wordInfo
ÙÙ# +
[
ÙÙ+ ,
index
ÙÙ, 1
]
ÙÙ1 2
.
ÙÙ2 3
characterCount
ÙÙ3 A
=
ÙÙB C
wordLastChar
ÙÙD P
-
ÙÙQ R
wordFirstChar
ÙÙS `
+
ÙÙa b
$num
ÙÙc d
;
ÙÙd e

m_textInfo
ıı "
.
ıı" #
wordInfo
ıı# +
[
ıı+ ,
index
ıı, 1
]
ıı1 2
.
ıı2 3
textComponent
ıı3 @
=
ııA B
this
ııC G
;
ııG H
	wordCount
˜˜ !
+=
˜˜" $
$num
˜˜% &
;
˜˜& '

m_textInfo
¯¯ "
.
¯¯" #
	wordCount
¯¯# ,
+=
¯¯- /
$num
¯¯0 1
;
¯¯1 2

m_textInfo
˘˘ "
.
˘˘" #
lineInfo
˘˘# +
[
˘˘+ ,
currentLine
˘˘, 7
]
˘˘7 8
.
˘˘8 9
	wordCount
˘˘9 B
+=
˘˘C E
$num
˘˘F G
;
˘˘G H
}
˙˙ 
}
˚˚ 
bool
ÇÇ 
isUnderline
ÇÇ  
=
ÇÇ! "
(
ÇÇ# $

m_textInfo
ÇÇ$ .
.
ÇÇ. /
characterInfo
ÇÇ/ <
[
ÇÇ< =
i
ÇÇ= >
]
ÇÇ> ?
.
ÇÇ? @
style
ÇÇ@ E
&
ÇÇF G

FontStyles
ÇÇH R
.
ÇÇR S
	Underline
ÇÇS \
)
ÇÇ\ ]
==
ÇÇ^ `

FontStyles
ÇÇa k
.
ÇÇk l
	Underline
ÇÇl u
;
ÇÇu v
if
ÉÉ 
(
ÉÉ 
isUnderline
ÉÉ 
)
ÉÉ  
{
ÑÑ 
bool
ÖÖ  
isUnderlineVisible
ÖÖ +
=
ÖÖ, -
true
ÖÖ. 2
;
ÖÖ2 3
int
ÜÜ 
currentPage
ÜÜ #
=
ÜÜ$ %

m_textInfo
ÜÜ& 0
.
ÜÜ0 1
characterInfo
ÜÜ1 >
[
ÜÜ> ?
i
ÜÜ? @
]
ÜÜ@ A
.
ÜÜA B

pageNumber
ÜÜB L
;
ÜÜL M

m_textInfo
áá 
.
áá 
characterInfo
áá ,
[
áá, -
i
áá- .
]
áá. /
.
áá/ 0"
underlineVertexIndex
áá0 D
=
ááE F
last_vert_index
ááG V
;
ááV W
if
ââ 
(
ââ 
i
ââ 
>
ââ $
m_maxVisibleCharacters
ââ 2
||
ââ3 5
currentLine
ââ6 A
>
ââB C
m_maxVisibleLines
ââD U
||
ââV X
(
ââY Z
m_overflowMode
ââZ h
==
ââi k
TextOverflowModes
ââl }
.
ââ} ~
Pageââ~ Ç
&&ââÉ Ö
currentPageââÜ ë
+ââí ì
$numââî ï
!=ââñ ò
m_pageToDisplayââô ®
)ââ® ©
)ââ© ™ 
isUnderlineVisible
ää *
=
ää+ ,
false
ää- 2
;
ää2 3
if
çç 
(
çç 
!
çç 
char
çç 
.
çç 
IsWhiteSpace
çç *
(
çç* +
unicode
çç+ 2
)
çç2 3
&&
çç4 6
unicode
çç7 >
!=
çç? A
$num
ççB H
)
ççH I
{
éé 
underlineMaxScale
èè )
=
èè* +
Mathf
èè, 1
.
èè1 2
Max
èè2 5
(
èè5 6
underlineMaxScale
èè6 G
,
èèG H

m_textInfo
èèI S
.
èèS T
characterInfo
èèT a
[
èèa b
i
èèb c
]
èèc d
.
èèd e
scale
èèe j
)
èèj k
;
èèk l
	xScaleMax
êê !
=
êê" #
Mathf
êê$ )
.
êê) *
Max
êê* -
(
êê- .
	xScaleMax
êê. 7
,
êê7 8
Mathf
êê9 >
.
êê> ?
Abs
êê? B
(
êêB C
xScale
êêC I
)
êêI J
)
êêJ K
;
êêK L
underlineBaseLine
ëë )
=
ëë* +
Mathf
ëë, 1
.
ëë1 2
Min
ëë2 5
(
ëë5 6
currentPage
ëë6 A
==
ëëB D
lastPage
ëëE M
?
ëëN O
underlineBaseLine
ëëP a
:
ëëb c"
k_LargePositiveFloat
ëëd x
,
ëëx y

m_textInfoëëz Ñ
.ëëÑ Ö
characterInfoëëÖ í
[ëëí ì
iëëì î
]ëëî ï
.ëëï ñ
baseLineëëñ û
+ëëü †
fontëë° •
.ëë• ¶

m_FaceInfoëë¶ ∞
.ëë∞ ±
underlineOffsetëë± ¿
*ëë¡ ¬!
underlineMaxScaleëë√ ‘
)ëë‘ ’
;ëë’ ÷
lastPage
íí  
=
íí! "
currentPage
íí# .
;
íí. /
}
ìì 
if
ïï 
(
ïï 
beginUnderline
ïï &
==
ïï' )
false
ïï* /
&&
ïï0 2 
isUnderlineVisible
ïï3 E
==
ïïF H
true
ïïI M
&&
ïïN P
i
ïïQ R
<=
ïïS U
lineInfo
ïïV ^
.
ïï^ _'
lastVisibleCharacterIndex
ïï_ x
&&
ïïy {
unicodeïï| É
!=ïïÑ Ü
$numïïá â
&&ïïä å
unicodeïïç î
!=ïïï ó
$numïïò ö
&&ïïõ ù
unicodeïïû •
!=ïï¶ ®
$numïï© ´
)ïï´ ¨
{
ññ 
if
óó 
(
óó 
i
óó 
==
óó  
lineInfo
óó! )
.
óó) *'
lastVisibleCharacterIndex
óó* C
&&
óóD F
char
óóG K
.
óóK L
IsSeparator
óóL W
(
óóW X
unicode
óóX _
)
óó_ `
)
óó` a
{
òò 
}
òò 
else
ôô 
{
öö 
beginUnderline
õõ *
=
õõ+ ,
true
õõ- 1
;
õõ1 2!
underlineStartScale
úú /
=
úú0 1

m_textInfo
úú2 <
.
úú< =
characterInfo
úú= J
[
úúJ K
i
úúK L
]
úúL M
.
úúM N
scale
úúN S
;
úúS T
if
ùù 
(
ùù  
underlineMaxScale
ùù  1
==
ùù2 4
$num
ùù5 6
)
ùù6 7
{
ûû 
underlineMaxScale
üü  1
=
üü2 3!
underlineStartScale
üü4 G
;
üüG H
	xScaleMax
††  )
=
††* +
xScale
††, 2
;
††2 3
}
°° 
underline_start
¢¢ +
=
¢¢, -
new
¢¢. 1
Vector3
¢¢2 9
(
¢¢9 :

m_textInfo
¢¢: D
.
¢¢D E
characterInfo
¢¢E R
[
¢¢R S
i
¢¢S T
]
¢¢T U
.
¢¢U V

bottomLeft
¢¢V `
.
¢¢` a
x
¢¢a b
,
¢¢b c
underlineBaseLine
¢¢d u
,
¢¢u v
$num
¢¢w x
)
¢¢x y
;
¢¢y z
underlineColor
££ *
=
££+ ,

m_textInfo
££- 7
.
££7 8
characterInfo
££8 E
[
££E F
i
££F G
]
££G H
.
££H I
underlineColor
££I W
;
££W X
}
§§ 
}
•• 
if
®® 
(
®® 
beginUnderline
®® &
&&
®®' )
m_characterCount
®®* :
==
®®; =
$num
®®> ?
)
®®? @
{
©© 
beginUnderline
™™ &
=
™™' (
false
™™) .
;
™™. /
underline_end
´´ %
=
´´& '
new
´´( +
Vector3
´´, 3
(
´´3 4

m_textInfo
´´4 >
.
´´> ?
characterInfo
´´? L
[
´´L M
i
´´M N
]
´´N O
.
´´O P
topRight
´´P X
.
´´X Y
x
´´Y Z
,
´´Z [
underlineBaseLine
´´\ m
,
´´m n
$num
´´o p
)
´´p q
;
´´q r
underlineEndScale
¨¨ )
=
¨¨* +

m_textInfo
¨¨, 6
.
¨¨6 7
characterInfo
¨¨7 D
[
¨¨D E
i
¨¨E F
]
¨¨F G
.
¨¨G H
scale
¨¨H M
;
¨¨M N
DrawUnderlineMesh
ÆÆ )
(
ÆÆ) *
underline_start
ÆÆ* 9
,
ÆÆ9 :
underline_end
ÆÆ; H
,
ÆÆH I
ref
ÆÆJ M
last_vert_index
ÆÆN ]
,
ÆÆ] ^!
underlineStartScale
ÆÆ_ r
,
ÆÆr s 
underlineEndScaleÆÆt Ö
,ÆÆÖ Ü!
underlineMaxScaleÆÆá ò
,ÆÆò ô
	xScaleMaxÆÆö £
,ÆÆ£ §
underlineColorÆÆ• ≥
)ÆÆ≥ ¥
;ÆÆ¥ µ
underlineMaxScale
ØØ )
=
ØØ* +
$num
ØØ, -
;
ØØ- .
	xScaleMax
∞∞ !
=
∞∞" #
$num
∞∞$ %
;
∞∞% &
underlineBaseLine
±± )
=
±±* +"
k_LargePositiveFloat
±±, @
;
±±@ A
}
≤≤ 
else
≥≥ 
if
≥≥ 
(
≥≥ 
beginUnderline
≥≥ +
&&
≥≥, .
(
≥≥/ 0
i
≥≥0 1
==
≥≥2 4
lineInfo
≥≥5 =
.
≥≥= > 
lastCharacterIndex
≥≥> P
||
≥≥Q S
i
≥≥T U
>=
≥≥V X
lineInfo
≥≥Y a
.
≥≥a b'
lastVisibleCharacterIndex
≥≥b {
)
≥≥{ |
)
≥≥| }
{
¥¥ 
if
∂∂ 
(
∂∂ 
char
∂∂  
.
∂∂  !
IsWhiteSpace
∂∂! -
(
∂∂- .
unicode
∂∂. 5
)
∂∂5 6
||
∂∂7 9
unicode
∂∂: A
==
∂∂B D
$num
∂∂E K
)
∂∂K L
{
∑∑ 
int
∏∏ '
lastVisibleCharacterIndex
∏∏  9
=
∏∏: ;
lineInfo
∏∏< D
.
∏∏D E'
lastVisibleCharacterIndex
∏∏E ^
;
∏∏^ _
underline_end
ππ )
=
ππ* +
new
ππ, /
Vector3
ππ0 7
(
ππ7 8

m_textInfo
ππ8 B
.
ππB C
characterInfo
ππC P
[
ππP Q'
lastVisibleCharacterIndex
ππQ j
]
ππj k
.
ππk l
topRight
ππl t
.
ππt u
x
ππu v
,
ππv w 
underlineBaseLineππx â
,ππâ ä
$numππã å
)ππå ç
;ππç é
underlineEndScale
∫∫ -
=
∫∫. /

m_textInfo
∫∫0 :
.
∫∫: ;
characterInfo
∫∫; H
[
∫∫H I'
lastVisibleCharacterIndex
∫∫I b
]
∫∫b c
.
∫∫c d
scale
∫∫d i
;
∫∫i j
}
ªª 
else
ºº 
{
ΩΩ 
underline_end
ææ )
=
ææ* +
new
ææ, /
Vector3
ææ0 7
(
ææ7 8

m_textInfo
ææ8 B
.
ææB C
characterInfo
ææC P
[
ææP Q
i
ææQ R
]
ææR S
.
ææS T
topRight
ææT \
.
ææ\ ]
x
ææ] ^
,
ææ^ _
underlineBaseLine
ææ` q
,
ææq r
$num
ææs t
)
ææt u
;
ææu v
underlineEndScale
øø -
=
øø. /

m_textInfo
øø0 :
.
øø: ;
characterInfo
øø; H
[
øøH I
i
øøI J
]
øøJ K
.
øøK L
scale
øøL Q
;
øøQ R
}
¿¿ 
beginUnderline
¬¬ &
=
¬¬' (
false
¬¬) .
;
¬¬. /
DrawUnderlineMesh
√√ )
(
√√) *
underline_start
√√* 9
,
√√9 :
underline_end
√√; H
,
√√H I
ref
√√J M
last_vert_index
√√N ]
,
√√] ^!
underlineStartScale
√√_ r
,
√√r s 
underlineEndScale√√t Ö
,√√Ö Ü!
underlineMaxScale√√á ò
,√√ò ô
	xScaleMax√√ö £
,√√£ §
underlineColor√√• ≥
)√√≥ ¥
;√√¥ µ
underlineMaxScale
ƒƒ )
=
ƒƒ* +
$num
ƒƒ, -
;
ƒƒ- .
	xScaleMax
≈≈ !
=
≈≈" #
$num
≈≈$ %
;
≈≈% &
underlineBaseLine
∆∆ )
=
∆∆* +"
k_LargePositiveFloat
∆∆, @
;
∆∆@ A
}
«« 
else
»» 
if
»» 
(
»» 
beginUnderline
»» +
&&
»», .
!
»»/ 0 
isUnderlineVisible
»»0 B
)
»»B C
{
…… 
beginUnderline
   &
=
  ' (
false
  ) .
;
  . /
underline_end
ÀÀ %
=
ÀÀ& '
new
ÀÀ( +
Vector3
ÀÀ, 3
(
ÀÀ3 4

m_textInfo
ÀÀ4 >
.
ÀÀ> ?
characterInfo
ÀÀ? L
[
ÀÀL M
i
ÀÀM N
-
ÀÀO P
$num
ÀÀQ R
]
ÀÀR S
.
ÀÀS T
topRight
ÀÀT \
.
ÀÀ\ ]
x
ÀÀ] ^
,
ÀÀ^ _
underlineBaseLine
ÀÀ` q
,
ÀÀq r
$num
ÀÀs t
)
ÀÀt u
;
ÀÀu v
underlineEndScale
ÃÃ )
=
ÃÃ* +

m_textInfo
ÃÃ, 6
.
ÃÃ6 7
characterInfo
ÃÃ7 D
[
ÃÃD E
i
ÃÃE F
-
ÃÃG H
$num
ÃÃI J
]
ÃÃJ K
.
ÃÃK L
scale
ÃÃL Q
;
ÃÃQ R
DrawUnderlineMesh
ŒŒ )
(
ŒŒ) *
underline_start
ŒŒ* 9
,
ŒŒ9 :
underline_end
ŒŒ; H
,
ŒŒH I
ref
ŒŒJ M
last_vert_index
ŒŒN ]
,
ŒŒ] ^!
underlineStartScale
ŒŒ_ r
,
ŒŒr s 
underlineEndScaleŒŒt Ö
,ŒŒÖ Ü!
underlineMaxScaleŒŒá ò
,ŒŒò ô
	xScaleMaxŒŒö £
,ŒŒ£ §
underlineColorŒŒ• ≥
)ŒŒ≥ ¥
;ŒŒ¥ µ
underlineMaxScale
œœ )
=
œœ* +
$num
œœ, -
;
œœ- .
	xScaleMax
–– !
=
––" #
$num
––$ %
;
––% &
underlineBaseLine
—— )
=
——* +"
k_LargePositiveFloat
——, @
;
——@ A
}
““ 
else
”” 
if
”” 
(
”” 
beginUnderline
”” +
&&
””, .
i
””/ 0
<
””1 2
m_characterCount
””3 C
-
””D E
$num
””F G
&&
””H J
!
””K L
underlineColor
””L Z
.
””Z [
Compare
””[ b
(
””b c

m_textInfo
””c m
.
””m n
characterInfo
””n {
[
””{ |
i
””| }
+
””~ 
$num””Ä Å
]””Å Ç
.””Ç É
underlineColor””É ë
)””ë í
)””í ì
{
‘‘ 
beginUnderline
÷÷ &
=
÷÷' (
false
÷÷) .
;
÷÷. /
underline_end
◊◊ %
=
◊◊& '
new
◊◊( +
Vector3
◊◊, 3
(
◊◊3 4

m_textInfo
◊◊4 >
.
◊◊> ?
characterInfo
◊◊? L
[
◊◊L M
i
◊◊M N
]
◊◊N O
.
◊◊O P
topRight
◊◊P X
.
◊◊X Y
x
◊◊Y Z
,
◊◊Z [
underlineBaseLine
◊◊\ m
,
◊◊m n
$num
◊◊o p
)
◊◊p q
;
◊◊q r
underlineEndScale
ÿÿ )
=
ÿÿ* +

m_textInfo
ÿÿ, 6
.
ÿÿ6 7
characterInfo
ÿÿ7 D
[
ÿÿD E
i
ÿÿE F
]
ÿÿF G
.
ÿÿG H
scale
ÿÿH M
;
ÿÿM N
DrawUnderlineMesh
⁄⁄ )
(
⁄⁄) *
underline_start
⁄⁄* 9
,
⁄⁄9 :
underline_end
⁄⁄; H
,
⁄⁄H I
ref
⁄⁄J M
last_vert_index
⁄⁄N ]
,
⁄⁄] ^!
underlineStartScale
⁄⁄_ r
,
⁄⁄r s 
underlineEndScale⁄⁄t Ö
,⁄⁄Ö Ü!
underlineMaxScale⁄⁄á ò
,⁄⁄ò ô
	xScaleMax⁄⁄ö £
,⁄⁄£ §
underlineColor⁄⁄• ≥
)⁄⁄≥ ¥
;⁄⁄¥ µ
underlineMaxScale
€€ )
=
€€* +
$num
€€, -
;
€€- .
	xScaleMax
‹‹ !
=
‹‹" #
$num
‹‹$ %
;
‹‹% &
underlineBaseLine
›› )
=
››* +"
k_LargePositiveFloat
››, @
;
››@ A
}
ﬁﬁ 
}
ﬂﬂ 
else
‡‡ 
{
·· 
if
„„ 
(
„„ 
beginUnderline
„„ &
==
„„' )
true
„„* .
)
„„. /
{
‰‰ 
beginUnderline
ÂÂ &
=
ÂÂ' (
false
ÂÂ) .
;
ÂÂ. /
underline_end
ÊÊ %
=
ÊÊ& '
new
ÊÊ( +
Vector3
ÊÊ, 3
(
ÊÊ3 4

m_textInfo
ÊÊ4 >
.
ÊÊ> ?
characterInfo
ÊÊ? L
[
ÊÊL M
i
ÊÊM N
-
ÊÊO P
$num
ÊÊQ R
]
ÊÊR S
.
ÊÊS T
topRight
ÊÊT \
.
ÊÊ\ ]
x
ÊÊ] ^
,
ÊÊ^ _
underlineBaseLine
ÊÊ` q
,
ÊÊq r
$num
ÊÊs t
)
ÊÊt u
;
ÊÊu v
underlineEndScale
ÁÁ )
=
ÁÁ* +

m_textInfo
ÁÁ, 6
.
ÁÁ6 7
characterInfo
ÁÁ7 D
[
ÁÁD E
i
ÁÁE F
-
ÁÁG H
$num
ÁÁI J
]
ÁÁJ K
.
ÁÁK L
scale
ÁÁL Q
;
ÁÁQ R
DrawUnderlineMesh
ÈÈ )
(
ÈÈ) *
underline_start
ÈÈ* 9
,
ÈÈ9 :
underline_end
ÈÈ; H
,
ÈÈH I
ref
ÈÈJ M
last_vert_index
ÈÈN ]
,
ÈÈ] ^!
underlineStartScale
ÈÈ_ r
,
ÈÈr s 
underlineEndScaleÈÈt Ö
,ÈÈÖ Ü!
underlineMaxScaleÈÈá ò
,ÈÈò ô
	xScaleMaxÈÈö £
,ÈÈ£ §
underlineColorÈÈ• ≥
)ÈÈ≥ ¥
;ÈÈ¥ µ
underlineMaxScale
ÍÍ )
=
ÍÍ* +
$num
ÍÍ, -
;
ÍÍ- .
	xScaleMax
ÎÎ !
=
ÎÎ" #
$num
ÎÎ$ %
;
ÎÎ% &
underlineBaseLine
ÏÏ )
=
ÏÏ* +"
k_LargePositiveFloat
ÏÏ, @
;
ÏÏ@ A
}
ÌÌ 
}
ÓÓ 
bool
ıı 
isStrikethrough
ıı $
=
ıı% &
(
ıı' (

m_textInfo
ıı( 2
.
ıı2 3
characterInfo
ıı3 @
[
ıı@ A
i
ııA B
]
ııB C
.
ııC D
style
ııD I
&
ııJ K

FontStyles
ııL V
.
ııV W
Strikethrough
ııW d
)
ııd e
==
ııf h

FontStyles
ııi s
.
ııs t
Strikethroughııt Å
;ııÅ Ç
float
ˆˆ !
strikethroughOffset
ˆˆ )
=
ˆˆ* +
currentFontAsset
ˆˆ, <
.
ˆˆ< =

m_FaceInfo
ˆˆ= G
.
ˆˆG H!
strikethroughOffset
ˆˆH [
;
ˆˆ[ \
if
¯¯ 
(
¯¯ 
isStrikethrough
¯¯ #
)
¯¯# $
{
˘˘ 
bool
˙˙ $
isStrikeThroughVisible
˙˙ /
=
˙˙0 1
true
˙˙2 6
;
˙˙6 7

m_textInfo
˚˚ 
.
˚˚ 
characterInfo
˚˚ ,
[
˚˚, -
i
˚˚- .
]
˚˚. /
.
˚˚/ 0&
strikethroughVertexIndex
˚˚0 H
=
˚˚I J
last_vert_index
˚˚K Z
;
˚˚Z [
if
˝˝ 
(
˝˝ 
i
˝˝ 
>
˝˝ $
m_maxVisibleCharacters
˝˝ 2
||
˝˝3 5
currentLine
˝˝6 A
>
˝˝B C
m_maxVisibleLines
˝˝D U
||
˝˝V X
(
˝˝Y Z
m_overflowMode
˝˝Z h
==
˝˝i k
TextOverflowModes
˝˝l }
.
˝˝} ~
Page˝˝~ Ç
&&˝˝É Ö

m_textInfo˝˝Ü ê
.˝˝ê ë
characterInfo˝˝ë û
[˝˝û ü
i˝˝ü †
]˝˝† °
.˝˝° ¢

pageNumber˝˝¢ ¨
+˝˝≠ Æ
$num˝˝Ø ∞
!=˝˝± ≥
m_pageToDisplay˝˝¥ √
)˝˝√ ƒ
)˝˝ƒ ≈$
isStrikeThroughVisible
˛˛ .
=
˛˛/ 0
false
˛˛1 6
;
˛˛6 7
if
Ä Ä  
(
Ä Ä   
beginStrikethrough
Ä Ä  *
==
Ä Ä + -
false
Ä Ä . 3
&&
Ä Ä 4 6$
isStrikeThroughVisible
Ä Ä 7 M
&&
Ä Ä N P
i
Ä Ä Q R
<=
Ä Ä S U
lineInfo
Ä Ä V ^
.
Ä Ä ^ _'
lastVisibleCharacterIndex
Ä Ä _ x
&&
Ä Ä y {
unicodeÄ Ä | É
!=Ä Ä Ñ Ü
$numÄ Ä á â
&&Ä Ä ä å
unicodeÄ Ä ç î
!=Ä Ä ï ó
$numÄ Ä ò ö
&&Ä Ä õ ù
unicodeÄ Ä û •
!=Ä Ä ¶ ®
$numÄ Ä © ´
)Ä Ä ´ ¨
{
Å Å  
if
Ç Ç  
(
Ç Ç  
i
Ç Ç  
==
Ç Ç   
lineInfo
Ç Ç ! )
.
Ç Ç ) *'
lastVisibleCharacterIndex
Ç Ç * C
&&
Ç Ç D F
char
Ç Ç G K
.
Ç Ç K L
IsSeparator
Ç Ç L W
(
Ç Ç W X
unicode
Ç Ç X _
)
Ç Ç _ `
)
Ç Ç ` a
{
É É  
}
É É  
else
Ñ Ñ  
{
Ö Ö   
beginStrikethrough
Ü Ü  .
=
Ü Ü / 0
true
Ü Ü 1 5
;
Ü Ü 5 6$
strikethroughPointSize
á á  2
=
á á 3 4

m_textInfo
á á 5 ?
.
á á ? @
characterInfo
á á @ M
[
á á M N
i
á á N O
]
á á O P
.
á á P Q
	pointSize
á á Q Z
;
á á Z [ 
strikethroughScale
à à  .
=
à à / 0

m_textInfo
à à 1 ;
.
à à ; <
characterInfo
à à < I
[
à à I J
i
à à J K
]
à à K L
.
à à L M
scale
à à M R
;
à à R S!
strikethrough_start
â â  /
=
â â 0 1
new
â â 2 5
Vector3
â â 6 =
(
â â = >

m_textInfo
â â > H
.
â â H I
characterInfo
â â I V
[
â â V W
i
â â W X
]
â â X Y
.
â â Y Z

bottomLeft
â â Z d
.
â â d e
x
â â e f
,
â â f g

m_textInfo
â â h r
.
â â r s
characterInfoâ â s Ä
[â â Ä Å
iâ â Å Ç
]â â Ç É
.â â É Ñ
baseLineâ â Ñ å
+â â ç é#
strikethroughOffsetâ â è ¢
*â â £ §"
strikethroughScaleâ â • ∑
,â â ∑ ∏
$numâ â π ∫
)â â ∫ ª
;â â ª º 
strikethroughColor
ä ä  .
=
ä ä / 0

m_textInfo
ä ä 1 ;
.
ä ä ; <
characterInfo
ä ä < I
[
ä ä I J
i
ä ä J K
]
ä ä K L
.
ä ä L M 
strikethroughColor
ä ä M _
;
ä ä _ `#
strikethroughBaseline
ã ã  1
=
ã ã 2 3

m_textInfo
ã ã 4 >
.
ã ã > ?
characterInfo
ã ã ? L
[
ã ã L M
i
ã ã M N
]
ã ã N O
.
ã ã O P
baseLine
ã ã P X
;
ã ã X Y
}
ç ç  
}
é é  
if
ë ë  
(
ë ë   
beginStrikethrough
ë ë  *
&&
ë ë + -
m_characterCount
ë ë . >
==
ë ë ? A
$num
ë ë B C
)
ë ë C D
{
í í   
beginStrikethrough
ì ì  *
=
ì ì + ,
false
ì ì - 2
;
ì ì 2 3
strikethrough_end
î î  )
=
î î * +
new
î î , /
Vector3
î î 0 7
(
î î 7 8

m_textInfo
î î 8 B
.
î î B C
characterInfo
î î C P
[
î î P Q
i
î î Q R
]
î î R S
.
î î S T
topRight
î î T \
.
î î \ ]
x
î î ] ^
,
î î ^ _

m_textInfo
î î ` j
.
î î j k
characterInfo
î î k x
[
î î x y
i
î î y z
]
î î z {
.
î î { |
baseLineî î | Ñ
+î î Ö Ü#
strikethroughOffsetî î á ö
*î î õ ú"
strikethroughScaleî î ù Ø
,î î Ø ∞
$numî î ± ≤
)î î ≤ ≥
;î î ≥ ¥
DrawUnderlineMesh
ñ ñ  )
(
ñ ñ ) *!
strikethrough_start
ñ ñ * =
,
ñ ñ = >
strikethrough_end
ñ ñ ? P
,
ñ ñ P Q
ref
ñ ñ R U
last_vert_index
ñ ñ V e
,
ñ ñ e f 
strikethroughScale
ñ ñ g y
,
ñ ñ y z!
strikethroughScaleñ ñ { ç
,ñ ñ ç é"
strikethroughScaleñ ñ è °
,ñ ñ ° ¢
xScaleñ ñ £ ©
,ñ ñ © ™"
strikethroughColorñ ñ ´ Ω
)ñ ñ Ω æ
;ñ ñ æ ø
}
ó ó  
else
ò ò  
if
ò ò  
(
ò ò   
beginStrikethrough
ò ò  /
&&
ò ò 0 2
i
ò ò 3 4
==
ò ò 5 7
lineInfo
ò ò 8 @
.
ò ò @ A 
lastCharacterIndex
ò ò A S
)
ò ò S T
{
ô ô  
if
õ õ  
(
õ õ  
char
õ õ   
.
õ õ   !
IsWhiteSpace
õ õ ! -
(
õ õ - .
unicode
õ õ . 5
)
õ õ 5 6
||
õ õ 7 9
unicode
õ õ : A
==
õ õ B D
$num
õ õ E K
)
õ õ K L
{
ú ú  
int
ù ù  '
lastVisibleCharacterIndex
ù ù   9
=
ù ù : ;
lineInfo
ù ù < D
.
ù ù D E'
lastVisibleCharacterIndex
ù ù E ^
;
ù ù ^ _
strikethrough_end
û û  -
=
û û . /
new
û û 0 3
Vector3
û û 4 ;
(
û û ; <

m_textInfo
û û < F
.
û û F G
characterInfo
û û G T
[
û û T U'
lastVisibleCharacterIndex
û û U n
]
û û n o
.
û û o p
topRight
û û p x
.
û û x y
x
û û y z
,
û û z {

m_textInfoû û | Ü
.û û Ü á
characterInfoû û á î
[û û î ï)
lastVisibleCharacterIndexû û ï Æ
]û û Æ Ø
.û û Ø ∞
baseLineû û ∞ ∏
+û û π ∫#
strikethroughOffsetû û ª Œ
*û û œ –"
strikethroughScaleû û — „
,û û „ ‰
$numû û Â Ê
)û û Ê Á
;û û Á Ë
}
ü ü  
else
† †  
{
° °  
strikethrough_end
£ £  -
=
£ £ . /
new
£ £ 0 3
Vector3
£ £ 4 ;
(
£ £ ; <

m_textInfo
£ £ < F
.
£ £ F G
characterInfo
£ £ G T
[
£ £ T U
i
£ £ U V
]
£ £ V W
.
£ £ W X
topRight
£ £ X `
.
£ £ ` a
x
£ £ a b
,
£ £ b c

m_textInfo
£ £ d n
.
£ £ n o
characterInfo
£ £ o |
[
£ £ | }
i
£ £ } ~
]
£ £ ~ 
.£ £  Ä
baseLine£ £ Ä à
+£ £ â ä#
strikethroughOffset£ £ ã û
*£ £ ü †"
strikethroughScale£ £ ° ≥
,£ £ ≥ ¥
$num£ £ µ ∂
)£ £ ∂ ∑
;£ £ ∑ ∏
}
§ §   
beginStrikethrough
¶ ¶  *
=
¶ ¶ + ,
false
¶ ¶ - 2
;
¶ ¶ 2 3
DrawUnderlineMesh
ß ß  )
(
ß ß ) *!
strikethrough_start
ß ß * =
,
ß ß = >
strikethrough_end
ß ß ? P
,
ß ß P Q
ref
ß ß R U
last_vert_index
ß ß V e
,
ß ß e f 
strikethroughScale
ß ß g y
,
ß ß y z!
strikethroughScaleß ß { ç
,ß ß ç é"
strikethroughScaleß ß è °
,ß ß ° ¢
xScaleß ß £ ©
,ß ß © ™"
strikethroughColorß ß ´ Ω
)ß ß Ω æ
;ß ß æ ø
}
® ®  
else
© ©  
if
© ©  
(
© ©   
beginStrikethrough
© ©  /
&&
© © 0 2
i
© © 3 4
<
© © 5 6
m_characterCount
© © 7 G
&&
© © H J
(
© © K L

m_textInfo
© © L V
.
© © V W
characterInfo
© © W d
[
© © d e
i
© © e f
+
© © g h
$num
© © i j
]
© © j k
.
© © k l
	pointSize
© © l u
!=
© © v x%
strikethroughPointSize© © y è
||© © ê í
!© © ì î
TMP_Math© © î ú
.© © ú ù
Approximately© © ù ™
(© © ™ ´

m_textInfo© © ´ µ
.© © µ ∂
characterInfo© © ∂ √
[© © √ ƒ
i© © ƒ ≈
+© © ∆ «
$num© © » …
]© © …  
.© ©   À
baseLine© © À ”
+© © ‘ ’
offset© © ÷ ‹
.© © ‹ ›
y© © › ﬁ
,© © ﬁ ﬂ%
strikethroughBaseline© © ‡ ı
)© © ı ˆ
)© © ˆ ˜
)© © ˜ ¯
{
™ ™   
beginStrikethrough
¨ ¨  *
=
¨ ¨ + ,
false
¨ ¨ - 2
;
¨ ¨ 2 3
int
Æ Æ  '
lastVisibleCharacterIndex
Æ Æ  5
=
Æ Æ 6 7
lineInfo
Æ Æ 8 @
.
Æ Æ @ A'
lastVisibleCharacterIndex
Æ Æ A Z
;
Æ Æ Z [
if
Ø Ø  
(
Ø Ø  
i
Ø Ø  
>
Ø Ø  '
lastVisibleCharacterIndex
Ø Ø   9
)
Ø Ø 9 :
strikethrough_end
∞ ∞  -
=
∞ ∞ . /
new
∞ ∞ 0 3
Vector3
∞ ∞ 4 ;
(
∞ ∞ ; <

m_textInfo
∞ ∞ < F
.
∞ ∞ F G
characterInfo
∞ ∞ G T
[
∞ ∞ T U'
lastVisibleCharacterIndex
∞ ∞ U n
]
∞ ∞ n o
.
∞ ∞ o p
topRight
∞ ∞ p x
.
∞ ∞ x y
x
∞ ∞ y z
,
∞ ∞ z {

m_textInfo∞ ∞ | Ü
.∞ ∞ Ü á
characterInfo∞ ∞ á î
[∞ ∞ î ï)
lastVisibleCharacterIndex∞ ∞ ï Æ
]∞ ∞ Æ Ø
.∞ ∞ Ø ∞
baseLine∞ ∞ ∞ ∏
+∞ ∞ π ∫#
strikethroughOffset∞ ∞ ª Œ
*∞ ∞ œ –"
strikethroughScale∞ ∞ — „
,∞ ∞ „ ‰
$num∞ ∞ Â Ê
)∞ ∞ Ê Á
;∞ ∞ Á Ë
else
± ±  
strikethrough_end
≤ ≤  -
=
≤ ≤ . /
new
≤ ≤ 0 3
Vector3
≤ ≤ 4 ;
(
≤ ≤ ; <

m_textInfo
≤ ≤ < F
.
≤ ≤ F G
characterInfo
≤ ≤ G T
[
≤ ≤ T U
i
≤ ≤ U V
]
≤ ≤ V W
.
≤ ≤ W X
topRight
≤ ≤ X `
.
≤ ≤ ` a
x
≤ ≤ a b
,
≤ ≤ b c

m_textInfo
≤ ≤ d n
.
≤ ≤ n o
characterInfo
≤ ≤ o |
[
≤ ≤ | }
i
≤ ≤ } ~
]
≤ ≤ ~ 
.≤ ≤  Ä
baseLine≤ ≤ Ä à
+≤ ≤ â ä#
strikethroughOffset≤ ≤ ã û
*≤ ≤ ü †"
strikethroughScale≤ ≤ ° ≥
,≤ ≤ ≥ ¥
$num≤ ≤ µ ∂
)≤ ≤ ∂ ∑
;≤ ≤ ∑ ∏
DrawUnderlineMesh
¥ ¥  )
(
¥ ¥ ) *!
strikethrough_start
¥ ¥ * =
,
¥ ¥ = >
strikethrough_end
¥ ¥ ? P
,
¥ ¥ P Q
ref
¥ ¥ R U
last_vert_index
¥ ¥ V e
,
¥ ¥ e f 
strikethroughScale
¥ ¥ g y
,
¥ ¥ y z!
strikethroughScale¥ ¥ { ç
,¥ ¥ ç é"
strikethroughScale¥ ¥ è °
,¥ ¥ ° ¢
xScale¥ ¥ £ ©
,¥ ¥ © ™"
strikethroughColor¥ ¥ ´ Ω
)¥ ¥ Ω æ
;¥ ¥ æ ø
}
∂ ∂  
else
∑ ∑  
if
∑ ∑  
(
∑ ∑   
beginStrikethrough
∑ ∑  /
&&
∑ ∑ 0 2
i
∑ ∑ 3 4
<
∑ ∑ 5 6
m_characterCount
∑ ∑ 7 G
&&
∑ ∑ H J
currentFontAsset
∑ ∑ K [
.
∑ ∑ [ \
GetInstanceID
∑ ∑ \ i
(
∑ ∑ i j
)
∑ ∑ j k
!=
∑ ∑ l n
characterInfos
∑ ∑ o }
[
∑ ∑ } ~
i
∑ ∑ ~ 
+∑ ∑ Ä Å
$num∑ ∑ Ç É
]∑ ∑ É Ñ
.∑ ∑ Ñ Ö
	fontAsset∑ ∑ Ö é
.∑ ∑ é è
GetInstanceID∑ ∑ è ú
(∑ ∑ ú ù
)∑ ∑ ù û
)∑ ∑ û ü
{
∏ ∏   
beginStrikethrough
∫ ∫  *
=
∫ ∫ + ,
false
∫ ∫ - 2
;
∫ ∫ 2 3
strikethrough_end
ª ª  )
=
ª ª * +
new
ª ª , /
Vector3
ª ª 0 7
(
ª ª 7 8

m_textInfo
ª ª 8 B
.
ª ª B C
characterInfo
ª ª C P
[
ª ª P Q
i
ª ª Q R
]
ª ª R S
.
ª ª S T
topRight
ª ª T \
.
ª ª \ ]
x
ª ª ] ^
,
ª ª ^ _

m_textInfo
ª ª ` j
.
ª ª j k
characterInfo
ª ª k x
[
ª ª x y
i
ª ª y z
]
ª ª z {
.
ª ª { |
baseLineª ª | Ñ
+ª ª Ö Ü#
strikethroughOffsetª ª á ö
*ª ª õ ú"
strikethroughScaleª ª ù Ø
,ª ª Ø ∞
$numª ª ± ≤
)ª ª ≤ ≥
;ª ª ≥ ¥
DrawUnderlineMesh
Ω Ω  )
(
Ω Ω ) *!
strikethrough_start
Ω Ω * =
,
Ω Ω = >
strikethrough_end
Ω Ω ? P
,
Ω Ω P Q
ref
Ω Ω R U
last_vert_index
Ω Ω V e
,
Ω Ω e f 
strikethroughScale
Ω Ω g y
,
Ω Ω y z!
strikethroughScaleΩ Ω { ç
,Ω Ω ç é"
strikethroughScaleΩ Ω è °
,Ω Ω ° ¢
xScaleΩ Ω £ ©
,Ω Ω © ™"
strikethroughColorΩ Ω ´ Ω
)Ω Ω Ω æ
;Ω Ω æ ø
}
æ æ  
else
ø ø  
if
ø ø  
(
ø ø   
beginStrikethrough
ø ø  /
&&
ø ø 0 2
!
ø ø 3 4$
isStrikeThroughVisible
ø ø 4 J
)
ø ø J K
{
¿ ¿   
beginStrikethrough
¬ ¬  *
=
¬ ¬ + ,
false
¬ ¬ - 2
;
¬ ¬ 2 3
strikethrough_end
√ √  )
=
√ √ * +
new
√ √ , /
Vector3
√ √ 0 7
(
√ √ 7 8

m_textInfo
√ √ 8 B
.
√ √ B C
characterInfo
√ √ C P
[
√ √ P Q
i
√ √ Q R
-
√ √ S T
$num
√ √ U V
]
√ √ V W
.
√ √ W X
topRight
√ √ X `
.
√ √ ` a
x
√ √ a b
,
√ √ b c

m_textInfo
√ √ d n
.
√ √ n o
characterInfo
√ √ o |
[
√ √ | }
i
√ √ } ~
-√ √  Ä
$num√ √ Å Ç
]√ √ Ç É
.√ √ É Ñ
baseLine√ √ Ñ å
+√ √ ç é#
strikethroughOffset√ √ è ¢
*√ √ £ §"
strikethroughScale√ √ • ∑
,√ √ ∑ ∏
$num√ √ π ∫
)√ √ ∫ ª
;√ √ ª º
DrawUnderlineMesh
≈ ≈  )
(
≈ ≈ ) *!
strikethrough_start
≈ ≈ * =
,
≈ ≈ = >
strikethrough_end
≈ ≈ ? P
,
≈ ≈ P Q
ref
≈ ≈ R U
last_vert_index
≈ ≈ V e
,
≈ ≈ e f 
strikethroughScale
≈ ≈ g y
,
≈ ≈ y z!
strikethroughScale≈ ≈ { ç
,≈ ≈ ç é"
strikethroughScale≈ ≈ è °
,≈ ≈ ° ¢
xScale≈ ≈ £ ©
,≈ ≈ © ™"
strikethroughColor≈ ≈ ´ Ω
)≈ ≈ Ω æ
;≈ ≈ æ ø
}
∆ ∆  
}
« «  
else
» »  
{
… …  
if
À À  
(
À À   
beginStrikethrough
À À  *
==
À À + -
true
À À . 2
)
À À 2 3
{
Ã Ã   
beginStrikethrough
Õ Õ  *
=
Õ Õ + ,
false
Õ Õ - 2
;
Õ Õ 2 3
strikethrough_end
Œ Œ  )
=
Œ Œ * +
new
Œ Œ , /
Vector3
Œ Œ 0 7
(
Œ Œ 7 8

m_textInfo
Œ Œ 8 B
.
Œ Œ B C
characterInfo
Œ Œ C P
[
Œ Œ P Q
i
Œ Œ Q R
-
Œ Œ S T
$num
Œ Œ U V
]
Œ Œ V W
.
Œ Œ W X
topRight
Œ Œ X `
.
Œ Œ ` a
x
Œ Œ a b
,
Œ Œ b c

m_textInfo
Œ Œ d n
.
Œ Œ n o
characterInfo
Œ Œ o |
[
Œ Œ | }
i
Œ Œ } ~
-Œ Œ  Ä
$numŒ Œ Å Ç
]Œ Œ Ç É
.Œ Œ É Ñ
baseLineŒ Œ Ñ å
+Œ Œ ç é#
strikethroughOffsetŒ Œ è ¢
*Œ Œ £ §"
strikethroughScaleŒ Œ • ∑
,Œ Œ ∑ ∏
$numŒ Œ π ∫
)Œ Œ ∫ ª
;Œ Œ ª º
DrawUnderlineMesh
– –  )
(
– – ) *!
strikethrough_start
– – * =
,
– – = >
strikethrough_end
– – ? P
,
– – P Q
ref
– – R U
last_vert_index
– – V e
,
– – e f 
strikethroughScale
– – g y
,
– – y z!
strikethroughScale– – { ç
,– – ç é"
strikethroughScale– – è °
,– – ° ¢
xScale– – £ ©
,– – © ™"
strikethroughColor– – ´ Ω
)– – Ω æ
;– – æ ø
}
— —  
}
“ “  
bool
ÿ ÿ  
isHighlight
ÿ ÿ   
=
ÿ ÿ ! "
(
ÿ ÿ # $

m_textInfo
ÿ ÿ $ .
.
ÿ ÿ . /
characterInfo
ÿ ÿ / <
[
ÿ ÿ < =
i
ÿ ÿ = >
]
ÿ ÿ > ?
.
ÿ ÿ ? @
style
ÿ ÿ @ E
&
ÿ ÿ F G

FontStyles
ÿ ÿ H R
.
ÿ ÿ R S
	Highlight
ÿ ÿ S \
)
ÿ ÿ \ ]
==
ÿ ÿ ^ `

FontStyles
ÿ ÿ a k
.
ÿ ÿ k l
	Highlight
ÿ ÿ l u
;
ÿ ÿ u v
if
Ÿ Ÿ  
(
Ÿ Ÿ  
isHighlight
Ÿ Ÿ  
)
Ÿ Ÿ   
{
⁄ ⁄  
bool
€ €   
isHighlightVisible
€ €  +
=
€ € , -
true
€ € . 2
;
€ € 2 3
int
‹ ‹  
currentPage
‹ ‹  #
=
‹ ‹ $ %

m_textInfo
‹ ‹ & 0
.
‹ ‹ 0 1
characterInfo
‹ ‹ 1 >
[
‹ ‹ > ?
i
‹ ‹ ? @
]
‹ ‹ @ A
.
‹ ‹ A B

pageNumber
‹ ‹ B L
;
‹ ‹ L M
if
ﬁ ﬁ  
(
ﬁ ﬁ  
i
ﬁ ﬁ  
>
ﬁ ﬁ  $
m_maxVisibleCharacters
ﬁ ﬁ  2
||
ﬁ ﬁ 3 5
currentLine
ﬁ ﬁ 6 A
>
ﬁ ﬁ B C
m_maxVisibleLines
ﬁ ﬁ D U
||
ﬁ ﬁ V X
(
ﬁ ﬁ Y Z
m_overflowMode
ﬁ ﬁ Z h
==
ﬁ ﬁ i k
TextOverflowModes
ﬁ ﬁ l }
.
ﬁ ﬁ } ~
Pageﬁ ﬁ ~ Ç
&&ﬁ ﬁ É Ö
currentPageﬁ ﬁ Ü ë
+ﬁ ﬁ í ì
$numﬁ ﬁ î ï
!=ﬁ ﬁ ñ ò
m_pageToDisplayﬁ ﬁ ô ®
)ﬁ ﬁ ® ©
)ﬁ ﬁ © ™ 
isHighlightVisible
ﬂ ﬂ  *
=
ﬂ ﬂ + ,
false
ﬂ ﬂ - 2
;
ﬂ ﬂ 2 3
if
· ·  
(
· ·  
beginHighlight
· ·  &
==
· · ' )
false
· · * /
&&
· · 0 2 
isHighlightVisible
· · 3 E
==
· · F H
true
· · I M
&&
· · N P
i
· · Q R
<=
· · S U
lineInfo
· · V ^
.
· · ^ _'
lastVisibleCharacterIndex
· · _ x
&&
· · y {
unicode· · | É
!=· · Ñ Ü
$num· · á â
&&· · ä å
unicode· · ç î
!=· · ï ó
$num· · ò ö
&&· · õ ù
unicode· · û •
!=· · ¶ ®
$num· · © ´
)· · ´ ¨
{
‚ ‚  
if
„ „  
(
„ „  
i
„ „  
==
„ „   
lineInfo
„ „ ! )
.
„ „ ) *'
lastVisibleCharacterIndex
„ „ * C
&&
„ „ D F
char
„ „ G K
.
„ „ K L
IsSeparator
„ „ L W
(
„ „ W X
unicode
„ „ X _
)
„ „ _ `
)
„ „ ` a
{
‰ ‰  
}
‰ ‰  
else
Â Â  
{
Ê Ê  
beginHighlight
Á Á  *
=
Á Á + ,
true
Á Á - 1
;
Á Á 1 2
highlight_start
Ë Ë  +
=
Ë Ë , -$
k_LargePositiveVector2
Ë Ë . D
;
Ë Ë D E
highlight_end
È È  )
=
È È * +$
k_LargeNegativeVector2
È È , B
;
È È B C
highlightState
Í Í  *
=
Í Í + ,

m_textInfo
Í Í - 7
.
Í Í 7 8
characterInfo
Í Í 8 E
[
Í Í E F
i
Í Í F G
]
Í Í G H
.
Í Í H I
highlightState
Í Í I W
;
Í Í W X
}
Î Î  
}
Ï Ï  
if
Ó Ó  
(
Ó Ó  
beginHighlight
Ó Ó  &
)
Ó Ó & '
{
Ô Ô  
TMP_CharacterInfo
   )
currentCharacter
  * :
=
  ; <

m_textInfo
  = G
.
  G H
characterInfo
  H U
[
  U V
i
  V W
]
  W X
;
  X Y
HighlightState
Ò Ò  &
currentState
Ò Ò ' 3
=
Ò Ò 4 5
currentCharacter
Ò Ò 6 F
.
Ò Ò F G
highlightState
Ò Ò G U
;
Ò Ò U V
bool
Û Û  
isColorTransition
Û Û  .
=
Û Û / 0
false
Û Û 1 6
;
Û Û 6 7
if
ˆ ˆ  
(
ˆ ˆ  
highlightState
ˆ ˆ  *
!=
ˆ ˆ + -
currentCharacter
ˆ ˆ . >
.
ˆ ˆ > ?
highlightState
ˆ ˆ ? M
)
ˆ ˆ M N
{
˜ ˜  
highlight_end
˘ ˘  )
.
˘ ˘ ) *
x
˘ ˘ * +
=
˘ ˘ , -
(
˘ ˘ . /
highlight_end
˘ ˘ / <
.
˘ ˘ < =
x
˘ ˘ = >
-
˘ ˘ ? @
highlightState
˘ ˘ A O
.
˘ ˘ O P
padding
˘ ˘ P W
.
˘ ˘ W X
right
˘ ˘ X ]
+
˘ ˘ ^ _
currentCharacter
˘ ˘ ` p
.
˘ ˘ p q

bottomLeft
˘ ˘ q {
.
˘ ˘ { |
x
˘ ˘ | }
)
˘ ˘ } ~
/˘ ˘  Ä
$num˘ ˘ Å Ç
;˘ ˘ Ç É
highlight_start
˚ ˚  +
.
˚ ˚ + ,
y
˚ ˚ , -
=
˚ ˚ . /
Mathf
˚ ˚ 0 5
.
˚ ˚ 5 6
Min
˚ ˚ 6 9
(
˚ ˚ 9 :
highlight_start
˚ ˚ : I
.
˚ ˚ I J
y
˚ ˚ J K
,
˚ ˚ K L
currentCharacter
˚ ˚ M ]
.
˚ ˚ ] ^
	descender
˚ ˚ ^ g
)
˚ ˚ g h
;
˚ ˚ h i
highlight_end
¸ ¸  )
.
¸ ¸ ) *
y
¸ ¸ * +
=
¸ ¸ , -
Mathf
¸ ¸ . 3
.
¸ ¸ 3 4
Max
¸ ¸ 4 7
(
¸ ¸ 7 8
highlight_end
¸ ¸ 8 E
.
¸ ¸ E F
y
¸ ¸ F G
,
¸ ¸ G H
currentCharacter
¸ ¸ I Y
.
¸ ¸ Y Z
ascender
¸ ¸ Z b
)
¸ ¸ b c
;
¸ ¸ c d
DrawTextHighlight
˛ ˛  -
(
˛ ˛ - .
highlight_start
˛ ˛ . =
,
˛ ˛ = >
highlight_end
˛ ˛ ? L
,
˛ ˛ L M
ref
˛ ˛ N Q
last_vert_index
˛ ˛ R a
,
˛ ˛ a b
highlightState
˛ ˛ c q
.
˛ ˛ q r
color
˛ ˛ r w
)
˛ ˛ w x
;
˛ ˛ x y
beginHighlight
Ä!Ä! *
=
Ä!Ä!+ ,
true
Ä!Ä!- 1
;
Ä!Ä!1 2
highlight_start
Å!Å! +
=
Å!Å!, -
new
Å!Å!. 1
Vector2
Å!Å!2 9
(
Å!Å!9 :
highlight_end
Å!Å!: G
.
Å!Å!G H
x
Å!Å!H I
,
Å!Å!I J
currentCharacter
Å!Å!K [
.
Å!Å![ \
	descender
Å!Å!\ e
-
Å!Å!f g
currentState
Å!Å!h t
.
Å!Å!t u
padding
Å!Å!u |
.
Å!Å!| }
bottomÅ!Å!} É
)Å!Å!É Ñ
;Å!Å!Ñ Ö
highlight_end
Ç!Ç! )
=
Ç!Ç!* +
new
Ç!Ç!, /
Vector2
Ç!Ç!0 7
(
Ç!Ç!7 8
currentCharacter
Ç!Ç!8 H
.
Ç!Ç!H I
topRight
Ç!Ç!I Q
.
Ç!Ç!Q R
x
Ç!Ç!R S
+
Ç!Ç!T U
currentState
Ç!Ç!V b
.
Ç!Ç!b c
padding
Ç!Ç!c j
.
Ç!Ç!j k
right
Ç!Ç!k p
,
Ç!Ç!p q
currentCharacterÇ!Ç!r Ç
.Ç!Ç!Ç É
ascenderÇ!Ç!É ã
+Ç!Ç!å ç
currentStateÇ!Ç!é ö
.Ç!Ç!ö õ
paddingÇ!Ç!õ ¢
.Ç!Ç!¢ £
topÇ!Ç!£ ¶
)Ç!Ç!¶ ß
;Ç!Ç!ß ®
highlightState
Ñ!Ñ! *
=
Ñ!Ñ!+ ,
currentCharacter
Ñ!Ñ!- =
.
Ñ!Ñ!= >
highlightState
Ñ!Ñ!> L
;
Ñ!Ñ!L M
isColorTransition
Ü!Ü! -
=
Ü!Ü!. /
true
Ü!Ü!0 4
;
Ü!Ü!4 5
}
á!á! 
if
â!â! 
(
â!â! 
!
â!â! 
isColorTransition
â!â! .
)
â!â!. /
{
ä!ä! 
highlight_start
å!å! +
.
å!å!+ ,
x
å!å!, -
=
å!å!. /
Mathf
å!å!0 5
.
å!å!5 6
Min
å!å!6 9
(
å!å!9 :
highlight_start
å!å!: I
.
å!å!I J
x
å!å!J K
,
å!å!K L
currentCharacter
å!å!M ]
.
å!å!] ^

bottomLeft
å!å!^ h
.
å!å!h i
x
å!å!i j
-
å!å!k l
highlightState
å!å!m {
.
å!å!{ |
paddingå!å!| É
.å!å!É Ñ
leftå!å!Ñ à
)å!å!à â
;å!å!â ä
highlight_start
ç!ç! +
.
ç!ç!+ ,
y
ç!ç!, -
=
ç!ç!. /
Mathf
ç!ç!0 5
.
ç!ç!5 6
Min
ç!ç!6 9
(
ç!ç!9 :
highlight_start
ç!ç!: I
.
ç!ç!I J
y
ç!ç!J K
,
ç!ç!K L
currentCharacter
ç!ç!M ]
.
ç!ç!] ^
	descender
ç!ç!^ g
-
ç!ç!h i
highlightState
ç!ç!j x
.
ç!ç!x y
paddingç!ç!y Ä
.ç!ç!Ä Å
bottomç!ç!Å á
)ç!ç!á à
;ç!ç!à â
highlight_end
è!è! )
.
è!è!) *
x
è!è!* +
=
è!è!, -
Mathf
è!è!. 3
.
è!è!3 4
Max
è!è!4 7
(
è!è!7 8
highlight_end
è!è!8 E
.
è!è!E F
x
è!è!F G
,
è!è!G H
currentCharacter
è!è!I Y
.
è!è!Y Z
topRight
è!è!Z b
.
è!è!b c
x
è!è!c d
+
è!è!e f
highlightState
è!è!g u
.
è!è!u v
padding
è!è!v }
.
è!è!} ~
rightè!è!~ É
)è!è!É Ñ
;è!è!Ñ Ö
highlight_end
ê!ê! )
.
ê!ê!) *
y
ê!ê!* +
=
ê!ê!, -
Mathf
ê!ê!. 3
.
ê!ê!3 4
Max
ê!ê!4 7
(
ê!ê!7 8
highlight_end
ê!ê!8 E
.
ê!ê!E F
y
ê!ê!F G
,
ê!ê!G H
currentCharacter
ê!ê!I Y
.
ê!ê!Y Z
ascender
ê!ê!Z b
+
ê!ê!c d
highlightState
ê!ê!e s
.
ê!ê!s t
padding
ê!ê!t {
.
ê!ê!{ |
top
ê!ê!| 
)ê!ê! Ä
;ê!ê!Ä Å
}
ë!ë! 
}
í!í! 
if
ï!ï! 
(
ï!ï! 
beginHighlight
ï!ï! &
&&
ï!ï!' )
m_characterCount
ï!ï!* :
==
ï!ï!; =
$num
ï!ï!> ?
)
ï!ï!? @
{
ñ!ñ! 
beginHighlight
ó!ó! &
=
ó!ó!' (
false
ó!ó!) .
;
ó!ó!. /
DrawTextHighlight
ô!ô! )
(
ô!ô!) *
highlight_start
ô!ô!* 9
,
ô!ô!9 :
highlight_end
ô!ô!; H
,
ô!ô!H I
ref
ô!ô!J M
last_vert_index
ô!ô!N ]
,
ô!ô!] ^
highlightState
ô!ô!_ m
.
ô!ô!m n
color
ô!ô!n s
)
ô!ô!s t
;
ô!ô!t u
}
ö!ö! 
else
õ!õ! 
if
õ!õ! 
(
õ!õ! 
beginHighlight
õ!õ! +
&&
õ!õ!, .
(
õ!õ!/ 0
i
õ!õ!0 1
==
õ!õ!2 4
lineInfo
õ!õ!5 =
.
õ!õ!= > 
lastCharacterIndex
õ!õ!> P
||
õ!õ!Q S
i
õ!õ!T U
>=
õ!õ!V X
lineInfo
õ!õ!Y a
.
õ!õ!a b'
lastVisibleCharacterIndex
õ!õ!b {
)
õ!õ!{ |
)
õ!õ!| }
{
ú!ú! 
beginHighlight
ù!ù! &
=
ù!ù!' (
false
ù!ù!) .
;
ù!ù!. /
DrawTextHighlight
û!û! )
(
û!û!) *
highlight_start
û!û!* 9
,
û!û!9 :
highlight_end
û!û!; H
,
û!û!H I
ref
û!û!J M
last_vert_index
û!û!N ]
,
û!û!] ^
highlightState
û!û!_ m
.
û!û!m n
color
û!û!n s
)
û!û!s t
;
û!û!t u
}
ü!ü! 
else
†!†! 
if
†!†! 
(
†!†! 
beginHighlight
†!†! +
&&
†!†!, .
!
†!†!/ 0 
isHighlightVisible
†!†!0 B
)
†!†!B C
{
°!°! 
beginHighlight
¢!¢! &
=
¢!¢!' (
false
¢!¢!) .
;
¢!¢!. /
DrawTextHighlight
£!£! )
(
£!£!) *
highlight_start
£!£!* 9
,
£!£!9 :
highlight_end
£!£!; H
,
£!£!H I
ref
£!£!J M
last_vert_index
£!£!N ]
,
£!£!] ^
highlightState
£!£!_ m
.
£!£!m n
color
£!£!n s
)
£!£!s t
;
£!£!t u
}
§!§! 
}
•!•! 
else
¶!¶! 
{
ß!ß! 
if
©!©! 
(
©!©! 
beginHighlight
©!©! &
==
©!©!' )
true
©!©!* .
)
©!©!. /
{
™!™! 
beginHighlight
´!´! &
=
´!´!' (
false
´!´!) .
;
´!´!. /
DrawTextHighlight
¨!¨! )
(
¨!¨!) *
highlight_start
¨!¨!* 9
,
¨!¨!9 :
highlight_end
¨!¨!; H
,
¨!¨!H I
ref
¨!¨!J M
last_vert_index
¨!¨!N ]
,
¨!¨!] ^
highlightState
¨!¨!_ m
.
¨!¨!m n
color
¨!¨!n s
)
¨!¨!s t
;
¨!¨!t u
}
≠!≠! 
}
Æ!Æ! 
lastLine
±!±! 
=
±!±! 
currentLine
±!±! &
;
±!±!& '
}
≤!≤! 

m_textInfo
π!π! 
.
π!π! 
characterCount
π!π! %
=
π!π!& '
m_characterCount
π!π!( 8
;
π!π!8 9

m_textInfo
∫!∫! 
.
∫!∫! 
spriteCount
∫!∫! "
=
∫!∫!# $
m_spriteCount
∫!∫!% 2
;
∫!∫!2 3

m_textInfo
ª!ª! 
.
ª!ª! 
	lineCount
ª!ª!  
=
ª!ª!! "
	lineCount
ª!ª!# ,
;
ª!ª!, -

m_textInfo
º!º! 
.
º!º! 
	wordCount
º!º!  
=
º!º!! "
	wordCount
º!º!# ,
!=
º!º!- /
$num
º!º!0 1
&&
º!º!2 4
m_characterCount
º!º!5 E
>
º!º!F G
$num
º!º!H I
?
º!º!J K
	wordCount
º!º!L U
:
º!º!V W
$num
º!º!X Y
;
º!º!Y Z

m_textInfo
Ω!Ω! 
.
Ω!Ω! 
	pageCount
Ω!Ω!  
=
Ω!Ω!! "
m_pageNumber
Ω!Ω!# /
+
Ω!Ω!0 1
$num
Ω!Ω!2 3
;
Ω!Ω!3 4)
k_GenerateTextPhaseIIMarker
¿!¿! '
.
¿!¿!' (
End
¿!¿!( +
(
¿!¿!+ ,
)
¿!¿!, -
;
¿!¿!- .*
k_GenerateTextPhaseIIIMarker
√!√! (
.
√!√!( )
Begin
√!√!) .
(
√!√!. /
)
√!√!/ 0
;
√!√!0 1
if
≈!≈! 
(
≈!≈! 
m_renderMode
≈!≈! 
==
≈!≈! 
TextRenderFlags
≈!≈!  /
.
≈!≈!/ 0
Render
≈!≈!0 6
&&
≈!≈!7 9
IsActive
≈!≈!: B
(
≈!≈!B C
)
≈!≈!C D
)
≈!≈!D E
{
∆!∆! 
OnPreRenderText
»!»! 
?
»!»!  
.
»!»!  !
Invoke
»!»!! '
(
»!»!' (

m_textInfo
»!»!( 2
)
»!»!2 3
;
»!»!3 4
if
À!À! 
(
À!À! $
m_geometrySortingOrder
À!À! *
!=
À!À!+ - 
VertexSortingOrder
À!À!. @
.
À!À!@ A
Normal
À!À!A G
)
À!À!G H

m_textInfo
Ã!Ã! 
.
Ã!Ã! 
meshInfo
Ã!Ã! '
[
Ã!Ã!' (
$num
Ã!Ã!( )
]
Ã!Ã!) *
.
Ã!Ã!* +
SortGeometry
Ã!Ã!+ 7
(
Ã!Ã!7 8 
VertexSortingOrder
Ã!Ã!8 J
.
Ã!Ã!J K
Reverse
Ã!Ã!K R
)
Ã!Ã!R S
;
Ã!Ã!S T
m_mesh
œ!œ! 
.
œ!œ! 
MarkDynamic
œ!œ! "
(
œ!œ!" #
)
œ!œ!# $
;
œ!œ!$ %
m_mesh
–!–! 
.
–!–! 
vertices
–!–! 
=
–!–!  !

m_textInfo
–!–!" ,
.
–!–!, -
meshInfo
–!–!- 5
[
–!–!5 6
$num
–!–!6 7
]
–!–!7 8
.
–!–!8 9
vertices
–!–!9 A
;
–!–!A B
m_mesh
—!—! 
.
—!—! 
uv
—!—! 
=
—!—! 

m_textInfo
—!—! &
.
—!—!& '
meshInfo
—!—!' /
[
—!—!/ 0
$num
—!—!0 1
]
—!—!1 2
.
—!—!2 3
uvs0
—!—!3 7
;
—!—!7 8
m_mesh
“!“! 
.
“!“! 
uv2
“!“! 
=
“!“! 

m_textInfo
“!“! '
.
“!“!' (
meshInfo
“!“!( 0
[
“!“!0 1
$num
“!“!1 2
]
“!“!2 3
.
“!“!3 4
uvs2
“!“!4 8
;
“!“!8 9
m_mesh
‘!‘! 
.
‘!‘! 
colors32
‘!‘! 
=
‘!‘!  !

m_textInfo
‘!‘!" ,
.
‘!‘!, -
meshInfo
‘!‘!- 5
[
‘!‘!5 6
$num
‘!‘!6 7
]
‘!‘!7 8
.
‘!‘!8 9
colors32
‘!‘!9 A
;
‘!‘!A B
m_mesh
◊!◊! 
.
◊!◊! 
RecalculateBounds
◊!◊! (
(
◊!◊!( )
)
◊!◊!) *
;
◊!◊!* +
for
⁄!⁄! 
(
⁄!⁄! 
int
⁄!⁄! 
i
⁄!⁄! 
=
⁄!⁄! 
$num
⁄!⁄! 
;
⁄!⁄! 
i
⁄!⁄!  !
<
⁄!⁄!" #

m_textInfo
⁄!⁄!$ .
.
⁄!⁄!. /
materialCount
⁄!⁄!/ <
;
⁄!⁄!< =
i
⁄!⁄!> ?
++
⁄!⁄!? A
)
⁄!⁄!A B
{
€!€! 

m_textInfo
›!›! 
.
›!›! 
meshInfo
›!›! '
[
›!›!' (
i
›!›!( )
]
›!›!) *
.
›!›!* +!
ClearUnusedVertices
›!›!+ >
(
›!›!> ?
)
›!›!? @
;
›!›!@ A
if
ﬂ!ﬂ! 
(
ﬂ!ﬂ! 
m_subTextObjects
ﬂ!ﬂ! (
[
ﬂ!ﬂ!( )
i
ﬂ!ﬂ!) *
]
ﬂ!ﬂ!* +
==
ﬂ!ﬂ!, .
null
ﬂ!ﬂ!/ 3
)
ﬂ!ﬂ!3 4
continue
ﬂ!ﬂ!5 =
;
ﬂ!ﬂ!= >
if
‚!‚! 
(
‚!‚! $
m_geometrySortingOrder
‚!‚! .
!=
‚!‚!/ 1 
VertexSortingOrder
‚!‚!2 D
.
‚!‚!D E
Normal
‚!‚!E K
)
‚!‚!K L

m_textInfo
„!„! "
.
„!„!" #
meshInfo
„!„!# +
[
„!„!+ ,
i
„!„!, -
]
„!„!- .
.
„!„!. /
SortGeometry
„!„!/ ;
(
„!„!; < 
VertexSortingOrder
„!„!< N
.
„!„!N O
Reverse
„!„!O V
)
„!„!V W
;
„!„!W X
m_subTextObjects
Â!Â! $
[
Â!Â!$ %
i
Â!Â!% &
]
Â!Â!& '
.
Â!Â!' (
mesh
Â!Â!( ,
.
Â!Â!, -
vertices
Â!Â!- 5
=
Â!Â!6 7

m_textInfo
Â!Â!8 B
.
Â!Â!B C
meshInfo
Â!Â!C K
[
Â!Â!K L
i
Â!Â!L M
]
Â!Â!M N
.
Â!Â!N O
vertices
Â!Â!O W
;
Â!Â!W X
m_subTextObjects
Ê!Ê! $
[
Ê!Ê!$ %
i
Ê!Ê!% &
]
Ê!Ê!& '
.
Ê!Ê!' (
mesh
Ê!Ê!( ,
.
Ê!Ê!, -
uv
Ê!Ê!- /
=
Ê!Ê!0 1

m_textInfo
Ê!Ê!2 <
.
Ê!Ê!< =
meshInfo
Ê!Ê!= E
[
Ê!Ê!E F
i
Ê!Ê!F G
]
Ê!Ê!G H
.
Ê!Ê!H I
uvs0
Ê!Ê!I M
;
Ê!Ê!M N
m_subTextObjects
Á!Á! $
[
Á!Á!$ %
i
Á!Á!% &
]
Á!Á!& '
.
Á!Á!' (
mesh
Á!Á!( ,
.
Á!Á!, -
uv2
Á!Á!- 0
=
Á!Á!1 2

m_textInfo
Á!Á!3 =
.
Á!Á!= >
meshInfo
Á!Á!> F
[
Á!Á!F G
i
Á!Á!G H
]
Á!Á!H I
.
Á!Á!I J
uvs2
Á!Á!J N
;
Á!Á!N O
m_subTextObjects
È!È! $
[
È!È!$ %
i
È!È!% &
]
È!È!& '
.
È!È!' (
mesh
È!È!( ,
.
È!È!, -
colors32
È!È!- 5
=
È!È!6 7

m_textInfo
È!È!8 B
.
È!È!B C
meshInfo
È!È!C K
[
È!È!K L
i
È!È!L M
]
È!È!M N
.
È!È!N O
colors32
È!È!O W
;
È!È!W X
m_subTextObjects
Î!Î! $
[
Î!Î!$ %
i
Î!Î!% &
]
Î!Î!& '
.
Î!Î!' (
mesh
Î!Î!( ,
.
Î!Î!, -
RecalculateBounds
Î!Î!- >
(
Î!Î!> ?
)
Î!Î!? @
;
Î!Î!@ A
}
Ô!Ô! 
}
!!  
TMPro_EventManager
Û!Û! 
.
Û!Û! 
ON_TEXT_CHANGED
Û!Û! .
(
Û!Û!. /
this
Û!Û!/ 3
)
Û!Û!3 4
;
Û!Û!4 5*
k_GenerateTextPhaseIIIMarker
ˇ!ˇ! (
.
ˇ!ˇ!( )
End
ˇ!ˇ!) ,
(
ˇ!ˇ!, -
)
ˇ!ˇ!- .
;
ˇ!ˇ!. /"
k_GenerateTextMarker
Ä"Ä"  
.
Ä"Ä"  !
End
Ä"Ä"! $
(
Ä"Ä"$ %
)
Ä"Ä"% &
;
Ä"Ä"& '
}
Å"Å" 	
	protected
à"à" 
override
à"à" 
Vector3
à"à" "
[
à"à"" #
]
à"à"# $*
GetTextContainerLocalCorners
à"à"% A
(
à"à"A B
)
à"à"B C
{
â"â" 	
if
ä"ä" 
(
ä"ä" 
m_rectTransform
ä"ä" 
==
ä"ä"  "
null
ä"ä"# '
)
ä"ä"' (
m_rectTransform
ä"ä") 8
=
ä"ä"9 :
this
ä"ä"; ?
.
ä"ä"? @
rectTransform
ä"ä"@ M
;
ä"ä"M N
m_rectTransform
å"å" 
.
å"å" 
GetLocalCorners
å"å" +
(
å"å"+ ,$
m_RectTransformCorners
å"å", B
)
å"å"B C
;
å"å"C D
return
é"é" $
m_RectTransformCorners
é"é" )
;
é"é") *
}
è"è" 	
void
ï"ï" 
SetMeshFilters
ï"ï" 
(
ï"ï" 
bool
ï"ï"  
state
ï"ï"! &
)
ï"ï"& '
{
ñ"ñ" 	
if
ò"ò" 
(
ò"ò" 
m_meshFilter
ò"ò" 
!=
ò"ò" 
null
ò"ò"  $
)
ò"ò"$ %
{
ô"ô" 
if
ö"ö" 
(
ö"ö" 
state
ö"ö" 
)
ö"ö" 
m_meshFilter
õ"õ"  
.
õ"õ"  !

sharedMesh
õ"õ"! +
=
õ"õ", -
m_mesh
õ"õ". 4
;
õ"õ"4 5
else
ú"ú" 
m_meshFilter
ù"ù"  
.
ù"ù"  !

sharedMesh
ù"ù"! +
=
ù"ù", -
null
ù"ù". 2
;
ù"ù"2 3
}
û"û" 
for
†"†" 
(
†"†" 
int
†"†" 
i
†"†" 
=
†"†" 
$num
†"†" 
;
†"†" 
i
†"†" 
<
†"†" 
m_subTextObjects
†"†"  0
.
†"†"0 1
Length
†"†"1 7
&&
†"†"8 :
m_subTextObjects
†"†"; K
[
†"†"K L
i
†"†"L M
]
†"†"M N
!=
†"†"O Q
null
†"†"R V
;
†"†"V W
i
†"†"X Y
++
†"†"Y [
)
†"†"[ \
{
°"°" 
if
¢"¢" 
(
¢"¢" 
m_subTextObjects
¢"¢" $
[
¢"¢"$ %
i
¢"¢"% &
]
¢"¢"& '
.
¢"¢"' (

meshFilter
¢"¢"( 2
!=
¢"¢"3 5
null
¢"¢"6 :
)
¢"¢": ;
{
£"£" 
if
§"§" 
(
§"§" 
state
§"§" 
)
§"§" 
m_subTextObjects
•"•" (
[
•"•"( )
i
•"•") *
]
•"•"* +
.
•"•"+ ,

meshFilter
•"•", 6
.
•"•"6 7

sharedMesh
•"•"7 A
=
•"•"B C
m_subTextObjects
•"•"D T
[
•"•"T U
i
•"•"U V
]
•"•"V W
.
•"•"W X
mesh
•"•"X \
;
•"•"\ ]
else
¶"¶" 
m_subTextObjects
ß"ß" (
[
ß"ß"( )
i
ß"ß") *
]
ß"ß"* +
.
ß"ß"+ ,

meshFilter
ß"ß", 6
.
ß"ß"6 7

sharedMesh
ß"ß"7 A
=
ß"ß"B C
null
ß"ß"D H
;
ß"ß"H I
}
®"®" 
}
©"©" 
}
™"™" 	
	protected
±"±" 
override
±"±" 
void
±"±"  
SetActiveSubMeshes
±"±"  2
(
±"±"2 3
bool
±"±"3 7
state
±"±"8 =
)
±"±"= >
{
≤"≤" 	
for
≥"≥" 
(
≥"≥" 
int
≥"≥" 
i
≥"≥" 
=
≥"≥" 
$num
≥"≥" 
;
≥"≥" 
i
≥"≥" 
<
≥"≥" 
m_subTextObjects
≥"≥"  0
.
≥"≥"0 1
Length
≥"≥"1 7
&&
≥"≥"8 :
m_subTextObjects
≥"≥"; K
[
≥"≥"K L
i
≥"≥"L M
]
≥"≥"M N
!=
≥"≥"O Q
null
≥"≥"R V
;
≥"≥"V W
i
≥"≥"X Y
++
≥"≥"Y [
)
≥"≥"[ \
{
¥"¥" 
if
µ"µ" 
(
µ"µ" 
m_subTextObjects
µ"µ" $
[
µ"µ"$ %
i
µ"µ"% &
]
µ"µ"& '
.
µ"µ"' (
enabled
µ"µ"( /
!=
µ"µ"0 2
state
µ"µ"3 8
)
µ"µ"8 9
m_subTextObjects
∂"∂" $
[
∂"∂"$ %
i
∂"∂"% &
]
∂"∂"& '
.
∂"∂"' (
enabled
∂"∂"( /
=
∂"∂"0 1
state
∂"∂"2 7
;
∂"∂"7 8
}
∑"∑" 
}
∏"∏" 	
	protected
∫"∫" 
void
∫"∫" -
SetActiveSubTextObjectRenderers
∫"∫" 6
(
∫"∫"6 7
bool
∫"∫"7 ;
state
∫"∫"< A
)
∫"∫"A B
{
ª"ª" 	
for
º"º" 
(
º"º" 
int
º"º" 
i
º"º" 
=
º"º" 
$num
º"º" 
;
º"º" 
i
º"º" 
<
º"º" 
m_subTextObjects
º"º"  0
.
º"º"0 1
Length
º"º"1 7
&&
º"º"8 :
m_subTextObjects
º"º"; K
[
º"º"K L
i
º"º"L M
]
º"º"M N
!=
º"º"O Q
null
º"º"R V
;
º"º"V W
i
º"º"X Y
++
º"º"Y [
)
º"º"[ \
{
Ω"Ω" 
Renderer
æ"æ" 
subMeshRenderer
æ"æ" (
=
æ"æ") *
m_subTextObjects
æ"æ"+ ;
[
æ"æ"; <
i
æ"æ"< =
]
æ"æ"= >
.
æ"æ"> ?
renderer
æ"æ"? G
;
æ"æ"G H
if
¿"¿" 
(
¿"¿" 
subMeshRenderer
¿"¿" #
!=
¿"¿"$ &
null
¿"¿"' +
&&
¿"¿", .
subMeshRenderer
¿"¿"/ >
.
¿"¿"> ?
enabled
¿"¿"? F
!=
¿"¿"G I
state
¿"¿"J O
)
¿"¿"O P
subMeshRenderer
¡"¡" #
.
¡"¡"# $
enabled
¡"¡"$ +
=
¡"¡", -
state
¡"¡". 3
;
¡"¡"3 4
}
¬"¬" 
}
√"√" 	
	protected
…"…" 
override
…"…" 
void
…"…" #
DestroySubMeshObjects
…"…"  5
(
…"…"5 6
)
…"…"6 7
{
 " " 	
for
À"À" 
(
À"À" 
int
À"À" 
i
À"À" 
=
À"À" 
$num
À"À" 
;
À"À" 
i
À"À" 
<
À"À" 
m_subTextObjects
À"À"  0
.
À"À"0 1
Length
À"À"1 7
&&
À"À"8 :
m_subTextObjects
À"À"; K
[
À"À"K L
i
À"À"L M
]
À"À"M N
!=
À"À"O Q
null
À"À"R V
;
À"À"V W
i
À"À"X Y
++
À"À"Y [
)
À"À"[ \
DestroyImmediate
Ã"Ã"  
(
Ã"Ã"  !
m_subTextObjects
Ã"Ã"! 1
[
Ã"Ã"1 2
i
Ã"Ã"2 3
]
Ã"Ã"3 4
)
Ã"Ã"4 5
;
Ã"Ã"5 6
}
Õ"Õ" 	
internal
“"“" 
void
“"“" )
UpdateSubMeshSortingLayerID
“"“" 1
(
“"“"1 2
int
“"“"2 5
id
“"“"6 8
)
“"“"8 9
{
”"”" 	
for
‘"‘" 
(
‘"‘" 
int
‘"‘" 
i
‘"‘" 
=
‘"‘" 
$num
‘"‘" 
;
‘"‘" 
i
‘"‘" 
<
‘"‘" 
m_subTextObjects
‘"‘"  0
.
‘"‘"0 1
Length
‘"‘"1 7
;
‘"‘"7 8
i
‘"‘"9 :
++
‘"‘": <
)
‘"‘"< =
{
’"’" 
TMP_SubMesh
÷"÷" 
subMesh
÷"÷" #
=
÷"÷"$ %
m_subTextObjects
÷"÷"& 6
[
÷"÷"6 7
i
÷"÷"7 8
]
÷"÷"8 9
;
÷"÷"9 :
if
ÿ"ÿ" 
(
ÿ"ÿ" 
subMesh
ÿ"ÿ" 
!=
ÿ"ÿ" 
null
ÿ"ÿ" #
&&
ÿ"ÿ"$ &
subMesh
ÿ"ÿ"' .
.
ÿ"ÿ". /
renderer
ÿ"ÿ"/ 7
!=
ÿ"ÿ"8 :
null
ÿ"ÿ"; ?
)
ÿ"ÿ"? @
{
Ÿ"Ÿ" 
subMesh
⁄"⁄" 
.
⁄"⁄" 
renderer
⁄"⁄" $
.
⁄"⁄"$ %
sortingLayerID
⁄"⁄"% 3
=
⁄"⁄"4 5
id
⁄"⁄"6 8
;
⁄"⁄"8 9
}
€"€" 
}
‹"‹" 
}
›"›" 	
internal
‚"‚" 
void
‚"‚" '
UpdateSubMeshSortingOrder
‚"‚" /
(
‚"‚"/ 0
int
‚"‚"0 3
order
‚"‚"4 9
)
‚"‚"9 :
{
„"„" 	
for
‰"‰" 
(
‰"‰" 
int
‰"‰" 
i
‰"‰" 
=
‰"‰" 
$num
‰"‰" 
;
‰"‰" 
i
‰"‰" 
<
‰"‰" 
m_subTextObjects
‰"‰"  0
.
‰"‰"0 1
Length
‰"‰"1 7
;
‰"‰"7 8
i
‰"‰"9 :
++
‰"‰": <
)
‰"‰"< =
{
Â"Â" 
TMP_SubMesh
Ê"Ê" 
subMesh
Ê"Ê" #
=
Ê"Ê"$ %
m_subTextObjects
Ê"Ê"& 6
[
Ê"Ê"6 7
i
Ê"Ê"7 8
]
Ê"Ê"8 9
;
Ê"Ê"9 :
if
Ë"Ë" 
(
Ë"Ë" 
subMesh
Ë"Ë" 
!=
Ë"Ë" 
null
Ë"Ë" #
&&
Ë"Ë"$ &
subMesh
Ë"Ë"' .
.
Ë"Ë". /
renderer
Ë"Ë"/ 7
!=
Ë"Ë"8 :
null
Ë"Ë"; ?
)
Ë"Ë"? @
{
È"È" 
subMesh
Í"Í" 
.
Í"Í" 
renderer
Í"Í" $
.
Í"Í"$ %
sortingOrder
Í"Í"% 1
=
Í"Í"2 3
order
Í"Í"4 9
;
Í"Í"9 :
}
Î"Î" 
}
Ï"Ï" 
}
Ì"Ì" 	
	protected
Û"Û" 
override
Û"Û" 
Bounds
Û"Û" !
GetCompoundBounds
Û"Û"" 3
(
Û"Û"3 4
)
Û"Û"4 5
{
Ù"Ù" 	
Bounds
ı"ı" 

mainBounds
ı"ı" 
=
ı"ı" 
m_mesh
ı"ı"  &
.
ı"ı"& '
bounds
ı"ı"' -
;
ı"ı"- .
Vector3
ˆ"ˆ" 
min
ˆ"ˆ" 
=
ˆ"ˆ" 

mainBounds
ˆ"ˆ" $
.
ˆ"ˆ"$ %
min
ˆ"ˆ"% (
;
ˆ"ˆ"( )
Vector3
˜"˜" 
max
˜"˜" 
=
˜"˜" 

mainBounds
˜"˜" $
.
˜"˜"$ %
max
˜"˜"% (
;
˜"˜"( )
for
˘"˘" 
(
˘"˘" 
int
˘"˘" 
i
˘"˘" 
=
˘"˘" 
$num
˘"˘" 
;
˘"˘" 
i
˘"˘" 
<
˘"˘" 
m_subTextObjects
˘"˘"  0
.
˘"˘"0 1
Length
˘"˘"1 7
&&
˘"˘"8 :
m_subTextObjects
˘"˘"; K
[
˘"˘"K L
i
˘"˘"L M
]
˘"˘"M N
!=
˘"˘"O Q
null
˘"˘"R V
;
˘"˘"V W
i
˘"˘"X Y
++
˘"˘"Y [
)
˘"˘"[ \
{
˙"˙" 
Bounds
˚"˚" 
	subBounds
˚"˚"  
=
˚"˚"! "
m_subTextObjects
˚"˚"# 3
[
˚"˚"3 4
i
˚"˚"4 5
]
˚"˚"5 6
.
˚"˚"6 7
mesh
˚"˚"7 ;
.
˚"˚"; <
bounds
˚"˚"< B
;
˚"˚"B C
min
¸"¸" 
.
¸"¸" 
x
¸"¸" 
=
¸"¸" 
min
¸"¸" 
.
¸"¸" 
x
¸"¸" 
<
¸"¸" 
	subBounds
¸"¸"  )
.
¸"¸") *
min
¸"¸"* -
.
¸"¸"- .
x
¸"¸". /
?
¸"¸"0 1
min
¸"¸"2 5
.
¸"¸"5 6
x
¸"¸"6 7
:
¸"¸"8 9
	subBounds
¸"¸": C
.
¸"¸"C D
min
¸"¸"D G
.
¸"¸"G H
x
¸"¸"H I
;
¸"¸"I J
min
˝"˝" 
.
˝"˝" 
y
˝"˝" 
=
˝"˝" 
min
˝"˝" 
.
˝"˝" 
y
˝"˝" 
<
˝"˝" 
	subBounds
˝"˝"  )
.
˝"˝") *
min
˝"˝"* -
.
˝"˝"- .
y
˝"˝". /
?
˝"˝"0 1
min
˝"˝"2 5
.
˝"˝"5 6
y
˝"˝"6 7
:
˝"˝"8 9
	subBounds
˝"˝": C
.
˝"˝"C D
min
˝"˝"D G
.
˝"˝"G H
y
˝"˝"H I
;
˝"˝"I J
max
ˇ"ˇ" 
.
ˇ"ˇ" 
x
ˇ"ˇ" 
=
ˇ"ˇ" 
max
ˇ"ˇ" 
.
ˇ"ˇ" 
x
ˇ"ˇ" 
>
ˇ"ˇ" 
	subBounds
ˇ"ˇ"  )
.
ˇ"ˇ") *
max
ˇ"ˇ"* -
.
ˇ"ˇ"- .
x
ˇ"ˇ". /
?
ˇ"ˇ"0 1
max
ˇ"ˇ"2 5
.
ˇ"ˇ"5 6
x
ˇ"ˇ"6 7
:
ˇ"ˇ"8 9
	subBounds
ˇ"ˇ": C
.
ˇ"ˇ"C D
max
ˇ"ˇ"D G
.
ˇ"ˇ"G H
x
ˇ"ˇ"H I
;
ˇ"ˇ"I J
max
Ä#Ä# 
.
Ä#Ä# 
y
Ä#Ä# 
=
Ä#Ä# 
max
Ä#Ä# 
.
Ä#Ä# 
y
Ä#Ä# 
>
Ä#Ä# 
	subBounds
Ä#Ä#  )
.
Ä#Ä#) *
max
Ä#Ä#* -
.
Ä#Ä#- .
y
Ä#Ä#. /
?
Ä#Ä#0 1
max
Ä#Ä#2 5
.
Ä#Ä#5 6
y
Ä#Ä#6 7
:
Ä#Ä#8 9
	subBounds
Ä#Ä#: C
.
Ä#Ä#C D
max
Ä#Ä#D G
.
Ä#Ä#G H
y
Ä#Ä#H I
;
Ä#Ä#I J
}
Å#Å# 
Vector3
É#É# 
center
É#É# 
=
É#É# 
(
É#É# 
min
É#É# !
+
É#É#" #
max
É#É#$ '
)
É#É#' (
/
É#É#) *
$num
É#É#+ ,
;
É#É#, -
Vector2
Ñ#Ñ# 
size
Ñ#Ñ# 
=
Ñ#Ñ# 
max
Ñ#Ñ# 
-
Ñ#Ñ#  
min
Ñ#Ñ#! $
;
Ñ#Ñ#$ %
return
Ö#Ö# 
new
Ö#Ö# 
Bounds
Ö#Ö# 
(
Ö#Ö# 
center
Ö#Ö# $
,
Ö#Ö#$ %
size
Ö#Ö#& *
)
Ö#Ö#* +
;
Ö#Ö#+ ,
}
Ü#Ü# 	
void
≥#≥# 
UpdateSDFScale
≥#≥# 
(
≥#≥# 
float
≥#≥# !

scaleDelta
≥#≥#" ,
)
≥#≥#, -
{
¥#¥# 	
if
µ#µ# 
(
µ#µ# 

scaleDelta
µ#µ# 
==
µ#µ# 
$num
µ#µ# 
||
µ#µ#  "

scaleDelta
µ#µ## -
==
µ#µ#. 0
float
µ#µ#1 6
.
µ#µ#6 7
PositiveInfinity
µ#µ#7 G
||
µ#µ#H J

scaleDelta
µ#µ#K U
==
µ#µ#V X
float
µ#µ#Y ^
.
µ#µ#^ _
NegativeInfinity
µ#µ#_ o
)
µ#µ#o p
{
∂#∂# %
m_havePropertiesChanged
∑#∑# '
=
∑#∑#( )
true
∑#∑#* .
;
∑#∑#. /
OnPreRenderObject
∏#∏# !
(
∏#∏#! "
)
∏#∏#" #
;
∏#∏## $
return
π#π# 
;
π#π# 
}
∫#∫# 
for
º#º# 
(
º#º# 
int
º#º# 
materialIndex
º#º# "
=
º#º## $
$num
º#º#% &
;
º#º#& '
materialIndex
º#º#( 5
<
º#º#6 7

m_textInfo
º#º#8 B
.
º#º#B C
materialCount
º#º#C P
;
º#º#P Q
materialIndex
º#º#R _
++
º#º#_ a
)
º#º#a b
{
Ω#Ω# 
TMP_MeshInfo
æ#æ# 
meshInfo
æ#æ# %
=
æ#æ#& '

m_textInfo
æ#æ#( 2
.
æ#æ#2 3
meshInfo
æ#æ#3 ;
[
æ#æ#; <
materialIndex
æ#æ#< I
]
æ#æ#I J
;
æ#æ#J K
for
¿#¿# 
(
¿#¿# 
int
¿#¿# 
i
¿#¿# 
=
¿#¿# 
$num
¿#¿# 
;
¿#¿# 
i
¿#¿#  !
<
¿#¿#" #
meshInfo
¿#¿#$ ,
.
¿#¿#, -
uvs2
¿#¿#- 1
.
¿#¿#1 2
Length
¿#¿#2 8
;
¿#¿#8 9
i
¿#¿#: ;
++
¿#¿#; =
)
¿#¿#= >
{
¡#¡# 
meshInfo
¬#¬# 
.
¬#¬# 
uvs2
¬#¬# !
[
¬#¬#! "
i
¬#¬#" #
]
¬#¬## $
.
¬#¬#$ %
y
¬#¬#% &
*=
¬#¬#' )
Mathf
¬#¬#* /
.
¬#¬#/ 0
Abs
¬#¬#0 3
(
¬#¬#3 4

scaleDelta
¬#¬#4 >
)
¬#¬#> ?
;
¬#¬#? @
}
√#√# 
}
ƒ#ƒ# 
for
«#«# 
(
«#«# 
int
«#«# 
i
«#«# 
=
«#«# 
$num
«#«# 
;
«#«# 
i
«#«# 
<
«#«# 

m_textInfo
«#«#  *
.
«#«#* +
meshInfo
«#«#+ 3
.
«#«#3 4
Length
«#«#4 :
;
«#«#: ;
i
«#«#< =
++
«#«#= ?
)
«#«#? @
{
»#»# 
if
…#…# 
(
…#…# 
i
…#…# 
==
…#…# 
$num
…#…# 
)
…#…# 
m_mesh
 # # 
.
 # # 
uv2
 # # 
=
 # #  

m_textInfo
 # #! +
.
 # #+ ,
meshInfo
 # #, 4
[
 # #4 5
$num
 # #5 6
]
 # #6 7
.
 # #7 8
uvs2
 # #8 <
;
 # #< =
else
À#À# 
m_subTextObjects
Ã#Ã# $
[
Ã#Ã#$ %
i
Ã#Ã#% &
]
Ã#Ã#& '
.
Ã#Ã#' (
mesh
Ã#Ã#( ,
.
Ã#Ã#, -
uv2
Ã#Ã#- 0
=
Ã#Ã#1 2

m_textInfo
Ã#Ã#3 =
.
Ã#Ã#= >
meshInfo
Ã#Ã#> F
[
Ã#Ã#F G
i
Ã#Ã#G H
]
Ã#Ã#H I
.
Ã#Ã#I J
uvs2
Ã#Ã#J N
;
Ã#Ã#N O
}
Õ#Õ# 
}
Œ#Œ# 	
}
–#–# 
}—#—# ±Í
hC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_ShaderUtilities.cs
	namespace 	
TMPro
 
{ 
public 

static 
class 
ShaderUtilities '
{		 
public 
static 
int 

ID_MainTex $
;$ %
public 
static 
int 

ID_FaceTex $
;$ %
public 
static 
int 
ID_FaceColor &
;& '
public 
static 
int 
ID_FaceDilate '
;' (
public 
static 
int 
ID_Shininess &
;& '
public 
static 
int 
ID_UnderlayColor *
;* +
public 
static 
int 
ID_UnderlayOffsetX ,
;, -
public 
static 
int 
ID_UnderlayOffsetY ,
;, -
public 
static 
int 
ID_UnderlayDilate +
;+ ,
public 
static 
int 
ID_UnderlaySoftness -
;- .
public 
static 
int 
ID_UnderlayOffset +
;+ ,
public   
static   
int   #
ID_UnderlayIsoPerimeter   1
;  1 2
public"" 
static"" 
int"" 
ID_WeightNormal"" )
;"") *
public## 
static## 
int## 
ID_WeightBold## '
;##' (
public%% 
static%% 
int%% 
ID_OutlineTex%% '
;%%' (
public&& 
static&& 
int&& 
ID_OutlineWidth&& )
;&&) *
public'' 
static'' 
int'' 
ID_OutlineSoftness'' ,
;'', -
public(( 
static(( 
int(( 
ID_OutlineColor(( )
;(() *
public** 
static** 
int** 
ID_Outline2Color** *
;*** +
public++ 
static++ 
int++ 
ID_Outline2Width++ *
;++* +
public-- 
static-- 
int-- 

ID_Padding-- $
;--$ %
public.. 
static.. 
int.. 
ID_GradientScale.. *
;..* +
public// 
static// 
int// 
	ID_ScaleX// #
;//# $
public00 
static00 
int00 
	ID_ScaleY00 #
;00# $
public11 
static11 
int11  
ID_PerspectiveFilter11 .
;11. /
public22 
static22 
int22 
ID_Sharpness22 &
;22& '
public44 
static44 
int44 
ID_TextureWidth44 )
;44) *
public55 
static55 
int55 
ID_TextureHeight55 *
;55* +
public77 
static77 
int77 
ID_BevelAmount77 (
;77( )
public99 
static99 
int99 
ID_GlowColor99 &
;99& '
public:: 
static:: 
int:: 
ID_GlowOffset:: '
;::' (
public;; 
static;; 
int;; 
ID_GlowPower;; &
;;;& '
public<< 
static<< 
int<< 
ID_GlowOuter<< &
;<<& '
public== 
static== 
int== 
ID_GlowInner== &
;==& '
public?? 
static?? 
int?? 
ID_LightAngle?? '
;??' (
publicAA 
staticAA 
intAA 
	ID_EnvMapAA #
;AA# $
publicBB 
staticBB 
intBB 
ID_EnvMatrixBB &
;BB& '
publicCC 
staticCC 
intCC  
ID_EnvMatrixRotationCC .
;CC. /
publicFF 
staticFF 
intFF 
ID_MaskCoordFF &
;FF& '
publicGG 
staticGG 
intGG 
ID_ClipRectGG %
;GG% &
publicHH 
staticHH 
intHH 
ID_MaskSoftnessXHH *
;HH* +
publicII 
staticII 
intII 
ID_MaskSoftnessYII *
;II* +
publicJJ 
staticJJ 
intJJ 
ID_VertexOffsetXJJ *
;JJ* +
publicKK 
staticKK 
intKK 
ID_VertexOffsetYKK *
;KK* +
publicLL 
staticLL 
intLL 
ID_UseClipRectLL (
;LL( )
publicNN 
staticNN 
intNN 
ID_StencilIDNN &
;NN& '
publicOO 
staticOO 
intOO 
ID_StencilOpOO &
;OO& '
publicPP 
staticPP 
intPP 
ID_StencilCompPP (
;PP( )
publicQQ 
staticQQ 
intQQ 
ID_StencilReadMaskQQ ,
;QQ, -
publicRR 
staticRR 
intRR 
ID_StencilWriteMaskRR -
;RR- .
publicTT 
staticTT 
intTT 
ID_ShaderFlagsTT (
;TT( )
publicUU 
staticUU 
intUU 
ID_ScaleRatio_AUU )
;UU) *
publicVV 
staticVV 
intVV 
ID_ScaleRatio_BVV )
;VV) *
publicWW 
staticWW 
intWW 
ID_ScaleRatio_CWW )
;WW) *
publicYY 
staticYY 
stringYY 
Keyword_BevelYY *
=YY+ ,
$strYY- 7
;YY7 8
publicZZ 
staticZZ 
stringZZ 
Keyword_GlowZZ )
=ZZ* +
$strZZ, 5
;ZZ5 6
public[[ 
static[[ 
string[[ 
Keyword_Underlay[[ -
=[[. /
$str[[0 =
;[[= >
public\\ 
static\\ 
string\\ 
Keyword_Ratios\\ +
=\\, -
$str\\. :
;\\: ;
public^^ 
static^^ 
string^^ 
Keyword_MASK_SOFT^^ .
=^^/ 0
$str^^1 <
;^^< =
public__ 
static__ 
string__ 
Keyword_MASK_HARD__ .
=__/ 0
$str__1 <
;__< =
public`` 
static`` 
string`` 
Keyword_MASK_TEX`` -
=``. /
$str``0 :
;``: ;
publicaa 
staticaa 
stringaa 
Keyword_Outlineaa ,
=aa- .
$straa/ ;
;aa; <
publiccc 
staticcc 
stringcc 
ShaderTag_ZTestModecc 0
=cc1 2
$strcc3 G
;ccG H
publicdd 
staticdd 
stringdd 
ShaderTag_CullModedd /
=dd0 1
$strdd2 =
;dd= >
privateff 
staticff 
floatff 
m_clampff $
=ff% &
$numff' +
;ff+ ,
publicgg 
staticgg 
boolgg 
isInitializedgg (
=gg) *
falsegg+ 0
;gg0 1
internalmm 
staticmm 
Shadermm 
ShaderRef_MobileSDFmm 2
{nn 	
getoo 
{pp 
ifqq 
(qq !
k_ShaderRef_MobileSDFqq )
==qq* ,
nullqq- 1
)qq1 2!
k_ShaderRef_MobileSDFrr )
=rr* +
Shaderrr, 2
.rr2 3
Findrr3 7
(rr7 8
$strrr8 [
)rr[ \
;rr\ ]
returntt !
k_ShaderRef_MobileSDFtt ,
;tt, -
}uu 
}vv 	
staticww 
Shaderww !
k_ShaderRef_MobileSDFww +
;ww+ ,
internal|| 
static|| 
Shader|| "
ShaderRef_MobileBitmap|| 5
{}} 	
get~~ 
{ 
if
ÄÄ 
(
ÄÄ &
k_ShaderRef_MobileBitmap
ÄÄ ,
==
ÄÄ- /
null
ÄÄ0 4
)
ÄÄ4 5&
k_ShaderRef_MobileBitmap
ÅÅ ,
=
ÅÅ- .
Shader
ÅÅ/ 5
.
ÅÅ5 6
Find
ÅÅ6 :
(
ÅÅ: ;
$str
ÅÅ; V
)
ÅÅV W
;
ÅÅW X
return
ÉÉ &
k_ShaderRef_MobileBitmap
ÉÉ /
;
ÉÉ/ 0
}
ÑÑ 
}
ÖÖ 	
static
ÜÜ 
Shader
ÜÜ &
k_ShaderRef_MobileBitmap
ÜÜ .
;
ÜÜ. /
static
åå 
ShaderUtilities
åå 
(
åå 
)
åå  
{
çç 	"
GetShaderPropertyIDs
éé  
(
éé  !
)
éé! "
;
éé" #
}
èè 	
public
îî 
static
îî 
void
îî "
GetShaderPropertyIDs
îî /
(
îî/ 0
)
îî0 1
{
ïï 	
if
ññ 
(
ññ 
isInitialized
ññ 
==
ññ  
false
ññ! &
)
ññ& '
{
óó 
isInitialized
ôô 
=
ôô 
true
ôô  $
;
ôô$ %

ID_MainTex
õõ 
=
õõ 
Shader
õõ #
.
õõ# $
PropertyToID
õõ$ 0
(
õõ0 1
$str
õõ1 ;
)
õõ; <
;
õõ< =

ID_FaceTex
ùù 
=
ùù 
Shader
ùù #
.
ùù# $
PropertyToID
ùù$ 0
(
ùù0 1
$str
ùù1 ;
)
ùù; <
;
ùù< =
ID_FaceColor
ûû 
=
ûû 
Shader
ûû %
.
ûû% &
PropertyToID
ûû& 2
(
ûû2 3
$str
ûû3 ?
)
ûû? @
;
ûû@ A
ID_FaceDilate
üü 
=
üü 
Shader
üü  &
.
üü& '
PropertyToID
üü' 3
(
üü3 4
$str
üü4 A
)
üüA B
;
üüB C
ID_Shininess
†† 
=
†† 
Shader
†† %
.
††% &
PropertyToID
††& 2
(
††2 3
$str
††3 C
)
††C D
;
††D E
ID_UnderlayColor
¢¢  
=
¢¢! "
Shader
¢¢# )
.
¢¢) *
PropertyToID
¢¢* 6
(
¢¢6 7
$str
¢¢7 G
)
¢¢G H
;
¢¢H I 
ID_UnderlayOffsetX
££ "
=
££# $
Shader
££% +
.
££+ ,
PropertyToID
££, 8
(
££8 9
$str
££9 K
)
££K L
;
££L M 
ID_UnderlayOffsetY
§§ "
=
§§# $
Shader
§§% +
.
§§+ ,
PropertyToID
§§, 8
(
§§8 9
$str
§§9 K
)
§§K L
;
§§L M
ID_UnderlayDilate
•• !
=
••" #
Shader
••$ *
.
••* +
PropertyToID
••+ 7
(
••7 8
$str
••8 I
)
••I J
;
••J K!
ID_UnderlaySoftness
¶¶ #
=
¶¶$ %
Shader
¶¶& ,
.
¶¶, -
PropertyToID
¶¶- 9
(
¶¶9 :
$str
¶¶: M
)
¶¶M N
;
¶¶N O
ID_UnderlayOffset
®® !
=
®®" #
Shader
®®$ *
.
®®* +
PropertyToID
®®+ 7
(
®®7 8
$str
®®8 I
)
®®I J
;
®®J K%
ID_UnderlayIsoPerimeter
©© '
=
©©( )
Shader
©©* 0
.
©©0 1
PropertyToID
©©1 =
(
©©= >
$str
©©> U
)
©©U V
;
©©V W
ID_WeightNormal
´´ 
=
´´  !
Shader
´´" (
.
´´( )
PropertyToID
´´) 5
(
´´5 6
$str
´´6 E
)
´´E F
;
´´F G
ID_WeightBold
¨¨ 
=
¨¨ 
Shader
¨¨  &
.
¨¨& '
PropertyToID
¨¨' 3
(
¨¨3 4
$str
¨¨4 A
)
¨¨A B
;
¨¨B C
ID_OutlineTex
ÆÆ 
=
ÆÆ 
Shader
ÆÆ  &
.
ÆÆ& '
PropertyToID
ÆÆ' 3
(
ÆÆ3 4
$str
ÆÆ4 A
)
ÆÆA B
;
ÆÆB C
ID_OutlineWidth
ØØ 
=
ØØ  !
Shader
ØØ" (
.
ØØ( )
PropertyToID
ØØ) 5
(
ØØ5 6
$str
ØØ6 E
)
ØØE F
;
ØØF G 
ID_OutlineSoftness
∞∞ "
=
∞∞# $
Shader
∞∞% +
.
∞∞+ ,
PropertyToID
∞∞, 8
(
∞∞8 9
$str
∞∞9 K
)
∞∞K L
;
∞∞L M
ID_OutlineColor
±± 
=
±±  !
Shader
±±" (
.
±±( )
PropertyToID
±±) 5
(
±±5 6
$str
±±6 E
)
±±E F
;
±±F G
ID_Outline2Color
≥≥  
=
≥≥! "
Shader
≥≥# )
.
≥≥) *
PropertyToID
≥≥* 6
(
≥≥6 7
$str
≥≥7 G
)
≥≥G H
;
≥≥H I
ID_Outline2Width
¥¥  
=
¥¥! "
Shader
¥¥# )
.
¥¥) *
PropertyToID
¥¥* 6
(
¥¥6 7
$str
¥¥7 G
)
¥¥G H
;
¥¥H I

ID_Padding
∂∂ 
=
∂∂ 
Shader
∂∂ #
.
∂∂# $
PropertyToID
∂∂$ 0
(
∂∂0 1
$str
∂∂1 ;
)
∂∂; <
;
∂∂< =
ID_GradientScale
∑∑  
=
∑∑! "
Shader
∑∑# )
.
∑∑) *
PropertyToID
∑∑* 6
(
∑∑6 7
$str
∑∑7 G
)
∑∑G H
;
∑∑H I
	ID_ScaleX
∏∏ 
=
∏∏ 
Shader
∏∏ "
.
∏∏" #
PropertyToID
∏∏# /
(
∏∏/ 0
$str
∏∏0 9
)
∏∏9 :
;
∏∏: ;
	ID_ScaleY
ππ 
=
ππ 
Shader
ππ "
.
ππ" #
PropertyToID
ππ# /
(
ππ/ 0
$str
ππ0 9
)
ππ9 :
;
ππ: ;"
ID_PerspectiveFilter
∫∫ $
=
∫∫% &
Shader
∫∫' -
.
∫∫- .
PropertyToID
∫∫. :
(
∫∫: ;
$str
∫∫; O
)
∫∫O P
;
∫∫P Q
ID_Sharpness
ªª 
=
ªª 
Shader
ªª %
.
ªª% &
PropertyToID
ªª& 2
(
ªª2 3
$str
ªª3 ?
)
ªª? @
;
ªª@ A
ID_TextureWidth
ΩΩ 
=
ΩΩ  !
Shader
ΩΩ" (
.
ΩΩ( )
PropertyToID
ΩΩ) 5
(
ΩΩ5 6
$str
ΩΩ6 E
)
ΩΩE F
;
ΩΩF G
ID_TextureHeight
ææ  
=
ææ! "
Shader
ææ# )
.
ææ) *
PropertyToID
ææ* 6
(
ææ6 7
$str
ææ7 G
)
ææG H
;
ææH I
ID_BevelAmount
¿¿ 
=
¿¿  
Shader
¿¿! '
.
¿¿' (
PropertyToID
¿¿( 4
(
¿¿4 5
$str
¿¿5 =
)
¿¿= >
;
¿¿> ?
ID_LightAngle
¬¬ 
=
¬¬ 
Shader
¬¬  &
.
¬¬& '
PropertyToID
¬¬' 3
(
¬¬3 4
$str
¬¬4 A
)
¬¬A B
;
¬¬B C
	ID_EnvMap
ƒƒ 
=
ƒƒ 
Shader
ƒƒ "
.
ƒƒ" #
PropertyToID
ƒƒ# /
(
ƒƒ/ 0
$str
ƒƒ0 7
)
ƒƒ7 8
;
ƒƒ8 9
ID_EnvMatrix
≈≈ 
=
≈≈ 
Shader
≈≈ %
.
≈≈% &
PropertyToID
≈≈& 2
(
≈≈2 3
$str
≈≈3 ?
)
≈≈? @
;
≈≈@ A"
ID_EnvMatrixRotation
∆∆ $
=
∆∆% &
Shader
∆∆' -
.
∆∆- .
PropertyToID
∆∆. :
(
∆∆: ;
$str
∆∆; O
)
∆∆O P
;
∆∆P Q
ID_GlowColor
…… 
=
…… 
Shader
…… %
.
……% &
PropertyToID
……& 2
(
……2 3
$str
……3 ?
)
……? @
;
……@ A
ID_GlowOffset
   
=
   
Shader
    &
.
  & '
PropertyToID
  ' 3
(
  3 4
$str
  4 A
)
  A B
;
  B C
ID_GlowPower
ÀÀ 
=
ÀÀ 
Shader
ÀÀ %
.
ÀÀ% &
PropertyToID
ÀÀ& 2
(
ÀÀ2 3
$str
ÀÀ3 ?
)
ÀÀ? @
;
ÀÀ@ A
ID_GlowOuter
ÃÃ 
=
ÃÃ 
Shader
ÃÃ %
.
ÃÃ% &
PropertyToID
ÃÃ& 2
(
ÃÃ2 3
$str
ÃÃ3 ?
)
ÃÃ? @
;
ÃÃ@ A
ID_GlowInner
ÕÕ 
=
ÕÕ 
Shader
ÕÕ %
.
ÕÕ% &
PropertyToID
ÕÕ& 2
(
ÕÕ2 3
$str
ÕÕ3 ?
)
ÕÕ? @
;
ÕÕ@ A
ID_MaskCoord
–– 
=
–– 
Shader
–– %
.
––% &
PropertyToID
––& 2
(
––2 3
$str
––3 ?
)
––? @
;
––@ A
ID_ClipRect
—— 
=
—— 
Shader
—— $
.
——$ %
PropertyToID
——% 1
(
——1 2
$str
——2 =
)
——= >
;
——> ?
ID_UseClipRect
““ 
=
““  
Shader
““! '
.
““' (
PropertyToID
““( 4
(
““4 5
$str
““5 C
)
““C D
;
““D E
ID_MaskSoftnessX
””  
=
””! "
Shader
””# )
.
””) *
PropertyToID
””* 6
(
””6 7
$str
””7 G
)
””G H
;
””H I
ID_MaskSoftnessY
‘‘  
=
‘‘! "
Shader
‘‘# )
.
‘‘) *
PropertyToID
‘‘* 6
(
‘‘6 7
$str
‘‘7 G
)
‘‘G H
;
‘‘H I
ID_VertexOffsetX
’’  
=
’’! "
Shader
’’# )
.
’’) *
PropertyToID
’’* 6
(
’’6 7
$str
’’7 G
)
’’G H
;
’’H I
ID_VertexOffsetY
÷÷  
=
÷÷! "
Shader
÷÷# )
.
÷÷) *
PropertyToID
÷÷* 6
(
÷÷6 7
$str
÷÷7 G
)
÷÷G H
;
÷÷H I
ID_StencilID
ÿÿ 
=
ÿÿ 
Shader
ÿÿ %
.
ÿÿ% &
PropertyToID
ÿÿ& 2
(
ÿÿ2 3
$str
ÿÿ3 =
)
ÿÿ= >
;
ÿÿ> ?
ID_StencilOp
ŸŸ 
=
ŸŸ 
Shader
ŸŸ %
.
ŸŸ% &
PropertyToID
ŸŸ& 2
(
ŸŸ2 3
$str
ŸŸ3 ?
)
ŸŸ? @
;
ŸŸ@ A
ID_StencilComp
⁄⁄ 
=
⁄⁄  
Shader
⁄⁄! '
.
⁄⁄' (
PropertyToID
⁄⁄( 4
(
⁄⁄4 5
$str
⁄⁄5 C
)
⁄⁄C D
;
⁄⁄D E 
ID_StencilReadMask
€€ "
=
€€# $
Shader
€€% +
.
€€+ ,
PropertyToID
€€, 8
(
€€8 9
$str
€€9 K
)
€€K L
;
€€L M!
ID_StencilWriteMask
‹‹ #
=
‹‹$ %
Shader
‹‹& ,
.
‹‹, -
PropertyToID
‹‹- 9
(
‹‹9 :
$str
‹‹: M
)
‹‹M N
;
‹‹N O
ID_ShaderFlags
ﬁﬁ 
=
ﬁﬁ  
Shader
ﬁﬁ! '
.
ﬁﬁ' (
PropertyToID
ﬁﬁ( 4
(
ﬁﬁ4 5
$str
ﬁﬁ5 C
)
ﬁﬁC D
;
ﬁﬁD E
ID_ScaleRatio_A
ﬂﬂ 
=
ﬂﬂ  !
Shader
ﬂﬂ" (
.
ﬂﬂ( )
PropertyToID
ﬂﬂ) 5
(
ﬂﬂ5 6
$str
ﬂﬂ6 D
)
ﬂﬂD E
;
ﬂﬂE F
ID_ScaleRatio_B
‡‡ 
=
‡‡  !
Shader
‡‡" (
.
‡‡( )
PropertyToID
‡‡) 5
(
‡‡5 6
$str
‡‡6 D
)
‡‡D E
;
‡‡E F
ID_ScaleRatio_C
·· 
=
··  !
Shader
··" (
.
··( )
PropertyToID
··) 5
(
··5 6
$str
··6 D
)
··D E
;
··E F
if
‰‰ 
(
‰‰ #
k_ShaderRef_MobileSDF
‰‰ )
==
‰‰* ,
null
‰‰- 1
)
‰‰1 2#
k_ShaderRef_MobileSDF
ÂÂ )
=
ÂÂ* +
Shader
ÂÂ, 2
.
ÂÂ2 3
Find
ÂÂ3 7
(
ÂÂ7 8
$str
ÂÂ8 [
)
ÂÂ[ \
;
ÂÂ\ ]
if
ÁÁ 
(
ÁÁ &
k_ShaderRef_MobileBitmap
ÁÁ ,
==
ÁÁ- /
null
ÁÁ0 4
)
ÁÁ4 5&
k_ShaderRef_MobileBitmap
ËË ,
=
ËË- .
Shader
ËË/ 5
.
ËË5 6
Find
ËË6 :
(
ËË: ;
$str
ËË; V
)
ËËV W
;
ËËW X
}
ÈÈ 
}
ÍÍ 	
public
ÔÔ 
static
ÔÔ 
void
ÔÔ  
UpdateShaderRatios
ÔÔ -
(
ÔÔ- .
Material
ÔÔ. 6
mat
ÔÔ7 :
)
ÔÔ: ;
{
 	
float
ÛÛ 
ratio_A
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
float
ÙÙ 
ratio_B
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
float
ıı 
ratio_C
ıı 
=
ıı 
$num
ıı 
;
ıı 
bool
˜˜ 
isRatioEnabled
˜˜ 
=
˜˜  !
!
˜˜" #
mat
˜˜# &
.
˜˜& '
shaderKeywords
˜˜' 5
.
˜˜5 6
Contains
˜˜6 >
(
˜˜> ?
Keyword_Ratios
˜˜? M
)
˜˜M N
;
˜˜N O
if
˘˘ 
(
˘˘ 
!
˘˘ 
mat
˘˘ 
.
˘˘ 
HasProperty
˘˘  
(
˘˘  !
ID_GradientScale
˘˘! 1
)
˘˘1 2
||
˘˘3 5
!
˘˘6 7
mat
˘˘7 :
.
˘˘: ;
HasProperty
˘˘; F
(
˘˘F G
ID_FaceDilate
˘˘G T
)
˘˘T U
)
˘˘U V
return
˙˙ 
;
˙˙ 
float
˝˝ 
scale
˝˝ 
=
˝˝ 
mat
˝˝ 
.
˝˝ 
GetFloat
˝˝ &
(
˝˝& '
ID_GradientScale
˝˝' 7
)
˝˝7 8
;
˝˝8 9
float
˛˛ 

faceDilate
˛˛ 
=
˛˛ 
mat
˛˛ "
.
˛˛" #
GetFloat
˛˛# +
(
˛˛+ ,
ID_FaceDilate
˛˛, 9
)
˛˛9 :
;
˛˛: ;
float
ˇˇ 
outlineThickness
ˇˇ "
=
ˇˇ# $
mat
ˇˇ% (
.
ˇˇ( )
GetFloat
ˇˇ) 1
(
ˇˇ1 2
ID_OutlineWidth
ˇˇ2 A
)
ˇˇA B
;
ˇˇB C
float
ÄÄ 
outlineSoftness
ÄÄ !
=
ÄÄ" #
mat
ÄÄ$ '
.
ÄÄ' (
GetFloat
ÄÄ( 0
(
ÄÄ0 1 
ID_OutlineSoftness
ÄÄ1 C
)
ÄÄC D
;
ÄÄD E
float
ÇÇ 
weight
ÇÇ 
=
ÇÇ 
Mathf
ÇÇ  
.
ÇÇ  !
Max
ÇÇ! $
(
ÇÇ$ %
mat
ÇÇ% (
.
ÇÇ( )
GetFloat
ÇÇ) 1
(
ÇÇ1 2
ID_WeightNormal
ÇÇ2 A
)
ÇÇA B
,
ÇÇB C
mat
ÇÇD G
.
ÇÇG H
GetFloat
ÇÇH P
(
ÇÇP Q
ID_WeightBold
ÇÇQ ^
)
ÇÇ^ _
)
ÇÇ_ `
/
ÇÇa b
$num
ÇÇc g
;
ÇÇg h
float
ÑÑ 
t
ÑÑ 
=
ÑÑ 
Mathf
ÑÑ 
.
ÑÑ 
Max
ÑÑ 
(
ÑÑ  
$num
ÑÑ  !
,
ÑÑ! "
weight
ÑÑ# )
+
ÑÑ* +

faceDilate
ÑÑ, 6
+
ÑÑ7 8
outlineThickness
ÑÑ9 I
+
ÑÑJ K
outlineSoftness
ÑÑL [
)
ÑÑ[ \
;
ÑÑ\ ]
ratio_A
ÜÜ 
=
ÜÜ 
isRatioEnabled
ÜÜ $
?
ÜÜ% &
(
ÜÜ' (
scale
ÜÜ( -
-
ÜÜ. /
m_clamp
ÜÜ0 7
)
ÜÜ7 8
/
ÜÜ9 :
(
ÜÜ; <
scale
ÜÜ< A
*
ÜÜB C
t
ÜÜD E
)
ÜÜE F
:
ÜÜG H
$num
ÜÜI J
;
ÜÜJ K
mat
åå 
.
åå 
SetFloat
åå 
(
åå 
ID_ScaleRatio_A
åå ,
,
åå, -
ratio_A
åå. 5
)
åå5 6
;
åå6 7
if
èè 
(
èè 
mat
èè 
.
èè 
HasProperty
èè 
(
èè  
ID_GlowOffset
èè  -
)
èè- .
)
èè. /
{
êê 
float
ëë 

glowOffset
ëë  
=
ëë! "
mat
ëë# &
.
ëë& '
GetFloat
ëë' /
(
ëë/ 0
ID_GlowOffset
ëë0 =
)
ëë= >
;
ëë> ?
float
íí 
	glowOuter
íí 
=
íí  !
mat
íí" %
.
íí% &
GetFloat
íí& .
(
íí. /
ID_GlowOuter
íí/ ;
)
íí; <
;
íí< =
float
îî 
range
îî 
=
îî 
(
îî 
weight
îî %
+
îî& '

faceDilate
îî( 2
)
îî2 3
*
îî4 5
(
îî6 7
scale
îî7 <
-
îî= >
m_clamp
îî? F
)
îîF G
;
îîG H
t
ññ 
=
ññ 
Mathf
ññ 
.
ññ 
Max
ññ 
(
ññ 
$num
ññ 
,
ññ  

glowOffset
ññ! +
+
ññ, -
	glowOuter
ññ. 7
)
ññ7 8
;
ññ8 9
ratio_B
òò 
=
òò 
isRatioEnabled
òò (
?
òò) *
Mathf
òò+ 0
.
òò0 1
Max
òò1 4
(
òò4 5
$num
òò5 6
,
òò6 7
scale
òò8 =
-
òò> ?
m_clamp
òò@ G
-
òòH I
range
òòJ O
)
òòO P
/
òòQ R
(
òòS T
scale
òòT Y
*
òòZ [
t
òò\ ]
)
òò] ^
:
òò_ `
$num
òòa b
;
òòb c
mat
ùù 
.
ùù 
SetFloat
ùù  
(
ùù  !
ID_ScaleRatio_B
ùù! 0
,
ùù0 1
ratio_B
ùù2 9
)
ùù9 :
;
ùù: ;
}
ûû 
if
°° 
(
°° 
mat
°° 
.
°° 
HasProperty
°° 
(
°°   
ID_UnderlayOffsetX
°°  2
)
°°2 3
)
°°3 4
{
¢¢ 
float
££ 
underlayOffsetX
££ %
=
££& '
mat
££( +
.
££+ ,
GetFloat
££, 4
(
££4 5 
ID_UnderlayOffsetX
££5 G
)
££G H
;
££H I
float
§§ 
underlayOffsetY
§§ %
=
§§& '
mat
§§( +
.
§§+ ,
GetFloat
§§, 4
(
§§4 5 
ID_UnderlayOffsetY
§§5 G
)
§§G H
;
§§H I
float
•• 
underlayDilate
•• $
=
••% &
mat
••' *
.
••* +
GetFloat
••+ 3
(
••3 4
ID_UnderlayDilate
••4 E
)
••E F
;
••F G
float
¶¶ 
underlaySoftness
¶¶ &
=
¶¶' (
mat
¶¶) ,
.
¶¶, -
GetFloat
¶¶- 5
(
¶¶5 6!
ID_UnderlaySoftness
¶¶6 I
)
¶¶I J
;
¶¶J K
float
®® 
range
®® 
=
®® 
(
®® 
weight
®® %
+
®®& '

faceDilate
®®( 2
)
®®2 3
*
®®4 5
(
®®6 7
scale
®®7 <
-
®®= >
m_clamp
®®? F
)
®®F G
;
®®G H
t
™™ 
=
™™ 
Mathf
™™ 
.
™™ 
Max
™™ 
(
™™ 
$num
™™ 
,
™™  
Mathf
™™! &
.
™™& '
Max
™™' *
(
™™* +
Mathf
™™+ 0
.
™™0 1
Abs
™™1 4
(
™™4 5
underlayOffsetX
™™5 D
)
™™D E
,
™™E F
Mathf
™™G L
.
™™L M
Abs
™™M P
(
™™P Q
underlayOffsetY
™™Q `
)
™™` a
)
™™a b
+
™™c d
underlayDilate
™™e s
+
™™t u
underlaySoftness™™v Ü
)™™Ü á
;™™á à
ratio_C
¨¨ 
=
¨¨ 
isRatioEnabled
¨¨ (
?
¨¨) *
Mathf
¨¨+ 0
.
¨¨0 1
Max
¨¨1 4
(
¨¨4 5
$num
¨¨5 6
,
¨¨6 7
scale
¨¨8 =
-
¨¨> ?
m_clamp
¨¨@ G
-
¨¨H I
range
¨¨J O
)
¨¨O P
/
¨¨Q R
(
¨¨S T
scale
¨¨T Y
*
¨¨Z [
t
¨¨\ ]
)
¨¨] ^
:
¨¨_ `
$num
¨¨a b
;
¨¨b c
mat
±± 
.
±± 
SetFloat
±±  
(
±±  !
ID_ScaleRatio_C
±±! 0
,
±±0 1
ratio_C
±±2 9
)
±±9 :
;
±±: ;
}
≤≤ 
}
≥≥ 	
public
∏∏ 
static
∏∏ 
Vector4
∏∏ 
GetFontExtent
∏∏ +
(
∏∏+ ,
Material
∏∏, 4
material
∏∏5 =
)
∏∏= >
{
ππ 	
return
ªª 
Vector4
ªª 
.
ªª 
zero
ªª 
;
ªª  
}
   	
public
ŒŒ 
static
ŒŒ 
bool
ŒŒ 
IsMaskingEnabled
ŒŒ +
(
ŒŒ+ ,
Material
ŒŒ, 4
material
ŒŒ5 =
)
ŒŒ= >
{
œœ 	
if
–– 
(
–– 
material
–– 
==
–– 
null
––  
||
––! #
!
––$ %
material
––% -
.
––- .
HasProperty
––. 9
(
––9 :
ShaderUtilities
––: I
.
––I J
ID_ClipRect
––J U
)
––U V
)
––V W
return
—— 
false
—— 
;
—— 
if
”” 
(
”” 
material
”” 
.
”” 
shaderKeywords
”” '
.
””' (
Contains
””( 0
(
””0 1
ShaderUtilities
””1 @
.
””@ A
Keyword_MASK_SOFT
””A R
)
””R S
||
””T V
material
””W _
.
””_ `
shaderKeywords
””` n
.
””n o
Contains
””o w
(
””w x
ShaderUtilities””x á
.””á à!
Keyword_MASK_HARD””à ô
)””ô ö
||””õ ù
material””û ¶
.””¶ ß
shaderKeywords””ß µ
.””µ ∂
Contains””∂ æ
(””æ ø
ShaderUtilities””ø Œ
.””Œ œ 
Keyword_MASK_TEX””œ ﬂ
)””ﬂ ‡
)””‡ ·
return
‘‘ 
true
‘‘ 
;
‘‘ 
return
÷÷ 
false
÷÷ 
;
÷÷ 
}
◊◊ 	
public
€€ 
static
€€ 
float
€€ 

GetPadding
€€ &
(
€€& '
Material
€€' /
material
€€0 8
,
€€8 9
bool
€€: > 
enableExtraPadding
€€? Q
,
€€Q R
bool
€€S W
isBold
€€X ^
)
€€^ _
{
‹‹ 	
if
ﬂﬂ 
(
ﬂﬂ 
isInitialized
ﬂﬂ 
==
ﬂﬂ  
false
ﬂﬂ! &
)
ﬂﬂ& '"
GetShaderPropertyIDs
‡‡ $
(
‡‡$ %
)
‡‡% &
;
‡‡& '
if
„„ 
(
„„ 
material
„„ 
==
„„ 
null
„„  
)
„„  !
return
„„" (
$num
„„) *
;
„„* +
int
ÂÂ 
extraPadding
ÂÂ 
=
ÂÂ  
enableExtraPadding
ÂÂ 1
?
ÂÂ2 3
$num
ÂÂ4 5
:
ÂÂ6 7
$num
ÂÂ8 9
;
ÂÂ9 :
if
ËË 
(
ËË 
material
ËË 
.
ËË 
HasProperty
ËË $
(
ËË$ %
ID_GradientScale
ËË% 5
)
ËË5 6
==
ËË7 9
false
ËË: ?
)
ËË? @
{
ÈÈ 
if
ÍÍ 
(
ÍÍ 
material
ÍÍ 
.
ÍÍ 
HasProperty
ÍÍ (
(
ÍÍ( )

ID_Padding
ÍÍ) 3
)
ÍÍ3 4
)
ÍÍ4 5
extraPadding
ÎÎ  
+=
ÎÎ! #
(
ÎÎ$ %
int
ÎÎ% (
)
ÎÎ( )
material
ÎÎ) 1
.
ÎÎ1 2
GetFloat
ÎÎ2 :
(
ÎÎ: ;

ID_Padding
ÎÎ; E
)
ÎÎE F
;
ÎÎF G
return
ÌÌ 
extraPadding
ÌÌ #
+
ÌÌ$ %
$num
ÌÌ& *
;
ÌÌ* +
}
ÓÓ 
Vector4
 
padding
 
=
 
Vector4
 %
.
% &
zero
& *
;
* +
Vector4
ÒÒ 

maxPadding
ÒÒ 
=
ÒÒ  
Vector4
ÒÒ! (
.
ÒÒ( )
zero
ÒÒ) -
;
ÒÒ- .
float
ÙÙ 

faceDilate
ÙÙ 
=
ÙÙ 
$num
ÙÙ  
;
ÙÙ  !
float
ıı 
faceSoftness
ıı 
=
ıı  
$num
ıı! "
;
ıı" #
float
ˆˆ 
outlineThickness
ˆˆ "
=
ˆˆ# $
$num
ˆˆ% &
;
ˆˆ& '
float
˜˜ 
scaleRatio_A
˜˜ 
=
˜˜  
$num
˜˜! "
;
˜˜" #
float
¯¯ 
scaleRatio_B
¯¯ 
=
¯¯  
$num
¯¯! "
;
¯¯" #
float
˘˘ 
scaleRatio_C
˘˘ 
=
˘˘  
$num
˘˘! "
;
˘˘" #
float
˚˚ 

glowOffset
˚˚ 
=
˚˚ 
$num
˚˚  
;
˚˚  !
float
¸¸ 
	glowOuter
¸¸ 
=
¸¸ 
$num
¸¸ 
;
¸¸  
float
˛˛ 
uniformPadding
˛˛  
=
˛˛! "
$num
˛˛# $
;
˛˛$ % 
UpdateShaderRatios
ÇÇ 
(
ÇÇ 
material
ÇÇ '
)
ÇÇ' (
;
ÇÇ( )
string
ÑÑ 
[
ÑÑ 
]
ÑÑ 
shaderKeywords
ÑÑ #
=
ÑÑ$ %
material
ÑÑ& .
.
ÑÑ. /
shaderKeywords
ÑÑ/ =
;
ÑÑ= >
if
ÜÜ 
(
ÜÜ 
material
ÜÜ 
.
ÜÜ 
HasProperty
ÜÜ $
(
ÜÜ$ %
ID_ScaleRatio_A
ÜÜ% 4
)
ÜÜ4 5
)
ÜÜ5 6
scaleRatio_A
áá 
=
áá 
material
áá '
.
áá' (
GetFloat
áá( 0
(
áá0 1
ID_ScaleRatio_A
áá1 @
)
áá@ A
;
ááA B
if
ãã 
(
ãã 
material
ãã 
.
ãã 
HasProperty
ãã $
(
ãã$ %
ID_FaceDilate
ãã% 2
)
ãã2 3
)
ãã3 4

faceDilate
åå 
=
åå 
material
åå %
.
åå% &
GetFloat
åå& .
(
åå. /
ID_FaceDilate
åå/ <
)
åå< =
*
åå> ?
scaleRatio_A
åå@ L
;
ååL M
if
éé 
(
éé 
material
éé 
.
éé 
HasProperty
éé $
(
éé$ % 
ID_OutlineSoftness
éé% 7
)
éé7 8
)
éé8 9
faceSoftness
èè 
=
èè 
material
èè '
.
èè' (
GetFloat
èè( 0
(
èè0 1 
ID_OutlineSoftness
èè1 C
)
èèC D
*
èèE F
scaleRatio_A
èèG S
;
èèS T
if
ëë 
(
ëë 
material
ëë 
.
ëë 
HasProperty
ëë $
(
ëë$ %
ID_OutlineWidth
ëë% 4
)
ëë4 5
)
ëë5 6
outlineThickness
íí  
=
íí! "
material
íí# +
.
íí+ ,
GetFloat
íí, 4
(
íí4 5
ID_OutlineWidth
íí5 D
)
ííD E
*
ííF G
scaleRatio_A
ííH T
;
ííT U
uniformPadding
îî 
=
îî 
outlineThickness
îî -
+
îî. /
faceSoftness
îî0 <
+
îî= >

faceDilate
îî? I
;
îîI J
if
óó 
(
óó 
material
óó 
.
óó 
HasProperty
óó $
(
óó$ %
ID_GlowOffset
óó% 2
)
óó2 3
&&
óó4 6
shaderKeywords
óó7 E
.
óóE F
Contains
óóF N
(
óóN O
Keyword_Glow
óóO [
)
óó[ \
)
óó\ ]
{
òò 
if
ôô 
(
ôô 
material
ôô 
.
ôô 
HasProperty
ôô (
(
ôô( )
ID_ScaleRatio_B
ôô) 8
)
ôô8 9
)
ôô9 :
scaleRatio_B
öö  
=
öö! "
material
öö# +
.
öö+ ,
GetFloat
öö, 4
(
öö4 5
ID_ScaleRatio_B
öö5 D
)
ööD E
;
ööE F

glowOffset
úú 
=
úú 
material
úú %
.
úú% &
GetFloat
úú& .
(
úú. /
ID_GlowOffset
úú/ <
)
úú< =
*
úú> ?
scaleRatio_B
úú@ L
;
úúL M
	glowOuter
ùù 
=
ùù 
material
ùù $
.
ùù$ %
GetFloat
ùù% -
(
ùù- .
ID_GlowOuter
ùù. :
)
ùù: ;
*
ùù< =
scaleRatio_B
ùù> J
;
ùùJ K
}
ûû 
uniformPadding
†† 
=
†† 
Mathf
†† "
.
††" #
Max
††# &
(
††& '
uniformPadding
††' 5
,
††5 6

faceDilate
††7 A
+
††B C

glowOffset
††D N
+
††O P
	glowOuter
††Q Z
)
††Z [
;
††[ \
if
££ 
(
££ 
material
££ 
.
££ 
HasProperty
££ $
(
££$ %!
ID_UnderlaySoftness
££% 8
)
££8 9
&&
££: <
shaderKeywords
££= K
.
££K L
Contains
££L T
(
££T U
Keyword_Underlay
££U e
)
££e f
)
££f g
{
§§ 
if
•• 
(
•• 
material
•• 
.
•• 
HasProperty
•• (
(
••( )
ID_ScaleRatio_C
••) 8
)
••8 9
)
••9 :
scaleRatio_C
¶¶  
=
¶¶! "
material
¶¶# +
.
¶¶+ ,
GetFloat
¶¶, 4
(
¶¶4 5
ID_ScaleRatio_C
¶¶5 D
)
¶¶D E
;
¶¶E F
float
®® 
offsetX
®® 
=
®® 
material
®®  (
.
®®( )
GetFloat
®®) 1
(
®®1 2 
ID_UnderlayOffsetX
®®2 D
)
®®D E
*
®®F G
scaleRatio_C
®®H T
;
®®T U
float
©© 
offsetY
©© 
=
©© 
material
©©  (
.
©©( )
GetFloat
©©) 1
(
©©1 2 
ID_UnderlayOffsetY
©©2 D
)
©©D E
*
©©F G
scaleRatio_C
©©H T
;
©©T U
float
™™ 
dilate
™™ 
=
™™ 
material
™™ '
.
™™' (
GetFloat
™™( 0
(
™™0 1
ID_UnderlayDilate
™™1 B
)
™™B C
*
™™D E
scaleRatio_C
™™F R
;
™™R S
float
´´ 
softness
´´ 
=
´´  
material
´´! )
.
´´) *
GetFloat
´´* 2
(
´´2 3!
ID_UnderlaySoftness
´´3 F
)
´´F G
*
´´H I
scaleRatio_C
´´J V
;
´´V W
padding
≠≠ 
.
≠≠ 
x
≠≠ 
=
≠≠ 
Mathf
≠≠ !
.
≠≠! "
Max
≠≠" %
(
≠≠% &
padding
≠≠& -
.
≠≠- .
x
≠≠. /
,
≠≠/ 0

faceDilate
≠≠1 ;
+
≠≠< =
dilate
≠≠> D
+
≠≠E F
softness
≠≠G O
-
≠≠P Q
offsetX
≠≠R Y
)
≠≠Y Z
;
≠≠Z [
padding
ÆÆ 
.
ÆÆ 
y
ÆÆ 
=
ÆÆ 
Mathf
ÆÆ !
.
ÆÆ! "
Max
ÆÆ" %
(
ÆÆ% &
padding
ÆÆ& -
.
ÆÆ- .
y
ÆÆ. /
,
ÆÆ/ 0

faceDilate
ÆÆ1 ;
+
ÆÆ< =
dilate
ÆÆ> D
+
ÆÆE F
softness
ÆÆG O
-
ÆÆP Q
offsetY
ÆÆR Y
)
ÆÆY Z
;
ÆÆZ [
padding
ØØ 
.
ØØ 
z
ØØ 
=
ØØ 
Mathf
ØØ !
.
ØØ! "
Max
ØØ" %
(
ØØ% &
padding
ØØ& -
.
ØØ- .
z
ØØ. /
,
ØØ/ 0

faceDilate
ØØ1 ;
+
ØØ< =
dilate
ØØ> D
+
ØØE F
softness
ØØG O
+
ØØP Q
offsetX
ØØR Y
)
ØØY Z
;
ØØZ [
padding
∞∞ 
.
∞∞ 
w
∞∞ 
=
∞∞ 
Mathf
∞∞ !
.
∞∞! "
Max
∞∞" %
(
∞∞% &
padding
∞∞& -
.
∞∞- .
w
∞∞. /
,
∞∞/ 0

faceDilate
∞∞1 ;
+
∞∞< =
dilate
∞∞> D
+
∞∞E F
softness
∞∞G O
+
∞∞P Q
offsetY
∞∞R Y
)
∞∞Y Z
;
∞∞Z [
}
±± 
padding
≥≥ 
.
≥≥ 
x
≥≥ 
=
≥≥ 
Mathf
≥≥ 
.
≥≥ 
Max
≥≥ !
(
≥≥! "
padding
≥≥" )
.
≥≥) *
x
≥≥* +
,
≥≥+ ,
uniformPadding
≥≥- ;
)
≥≥; <
;
≥≥< =
padding
¥¥ 
.
¥¥ 
y
¥¥ 
=
¥¥ 
Mathf
¥¥ 
.
¥¥ 
Max
¥¥ !
(
¥¥! "
padding
¥¥" )
.
¥¥) *
y
¥¥* +
,
¥¥+ ,
uniformPadding
¥¥- ;
)
¥¥; <
;
¥¥< =
padding
µµ 
.
µµ 
z
µµ 
=
µµ 
Mathf
µµ 
.
µµ 
Max
µµ !
(
µµ! "
padding
µµ" )
.
µµ) *
z
µµ* +
,
µµ+ ,
uniformPadding
µµ- ;
)
µµ; <
;
µµ< =
padding
∂∂ 
.
∂∂ 
w
∂∂ 
=
∂∂ 
Mathf
∂∂ 
.
∂∂ 
Max
∂∂ !
(
∂∂! "
padding
∂∂" )
.
∂∂) *
w
∂∂* +
,
∂∂+ ,
uniformPadding
∂∂- ;
)
∂∂; <
;
∂∂< =
padding
∏∏ 
.
∏∏ 
x
∏∏ 
+=
∏∏ 
extraPadding
∏∏ %
;
∏∏% &
padding
ππ 
.
ππ 
y
ππ 
+=
ππ 
extraPadding
ππ %
;
ππ% &
padding
∫∫ 
.
∫∫ 
z
∫∫ 
+=
∫∫ 
extraPadding
∫∫ %
;
∫∫% &
padding
ªª 
.
ªª 
w
ªª 
+=
ªª 
extraPadding
ªª %
;
ªª% &
padding
ΩΩ 
.
ΩΩ 
x
ΩΩ 
=
ΩΩ 
Mathf
ΩΩ 
.
ΩΩ 
Min
ΩΩ !
(
ΩΩ! "
padding
ΩΩ" )
.
ΩΩ) *
x
ΩΩ* +
,
ΩΩ+ ,
$num
ΩΩ- .
)
ΩΩ. /
;
ΩΩ/ 0
padding
ææ 
.
ææ 
y
ææ 
=
ææ 
Mathf
ææ 
.
ææ 
Min
ææ !
(
ææ! "
padding
ææ" )
.
ææ) *
y
ææ* +
,
ææ+ ,
$num
ææ- .
)
ææ. /
;
ææ/ 0
padding
øø 
.
øø 
z
øø 
=
øø 
Mathf
øø 
.
øø 
Min
øø !
(
øø! "
padding
øø" )
.
øø) *
z
øø* +
,
øø+ ,
$num
øø- .
)
øø. /
;
øø/ 0
padding
¿¿ 
.
¿¿ 
w
¿¿ 
=
¿¿ 
Mathf
¿¿ 
.
¿¿ 
Min
¿¿ !
(
¿¿! "
padding
¿¿" )
.
¿¿) *
w
¿¿* +
,
¿¿+ ,
$num
¿¿- .
)
¿¿. /
;
¿¿/ 0

maxPadding
¬¬ 
.
¬¬ 
x
¬¬ 
=
¬¬ 

maxPadding
¬¬ %
.
¬¬% &
x
¬¬& '
<
¬¬( )
padding
¬¬* 1
.
¬¬1 2
x
¬¬2 3
?
¬¬4 5
padding
¬¬6 =
.
¬¬= >
x
¬¬> ?
:
¬¬@ A

maxPadding
¬¬B L
.
¬¬L M
x
¬¬M N
;
¬¬N O

maxPadding
√√ 
.
√√ 
y
√√ 
=
√√ 

maxPadding
√√ %
.
√√% &
y
√√& '
<
√√( )
padding
√√* 1
.
√√1 2
y
√√2 3
?
√√4 5
padding
√√6 =
.
√√= >
y
√√> ?
:
√√@ A

maxPadding
√√B L
.
√√L M
y
√√M N
;
√√N O

maxPadding
ƒƒ 
.
ƒƒ 
z
ƒƒ 
=
ƒƒ 

maxPadding
ƒƒ %
.
ƒƒ% &
z
ƒƒ& '
<
ƒƒ( )
padding
ƒƒ* 1
.
ƒƒ1 2
z
ƒƒ2 3
?
ƒƒ4 5
padding
ƒƒ6 =
.
ƒƒ= >
z
ƒƒ> ?
:
ƒƒ@ A

maxPadding
ƒƒB L
.
ƒƒL M
z
ƒƒM N
;
ƒƒN O

maxPadding
≈≈ 
.
≈≈ 
w
≈≈ 
=
≈≈ 

maxPadding
≈≈ %
.
≈≈% &
w
≈≈& '
<
≈≈( )
padding
≈≈* 1
.
≈≈1 2
w
≈≈2 3
?
≈≈4 5
padding
≈≈6 =
.
≈≈= >
w
≈≈> ?
:
≈≈@ A

maxPadding
≈≈B L
.
≈≈L M
w
≈≈M N
;
≈≈N O
float
«« 
gradientScale
«« 
=
««  !
material
««" *
.
««* +
GetFloat
««+ 3
(
««3 4
ID_GradientScale
««4 D
)
««D E
;
««E F
padding
»» 
*=
»» 
gradientScale
»» $
;
»»$ %
uniformPadding
ÀÀ 
=
ÀÀ 
Mathf
ÀÀ "
.
ÀÀ" #
Max
ÀÀ# &
(
ÀÀ& '
padding
ÀÀ' .
.
ÀÀ. /
x
ÀÀ/ 0
,
ÀÀ0 1
padding
ÀÀ2 9
.
ÀÀ9 :
y
ÀÀ: ;
)
ÀÀ; <
;
ÀÀ< =
uniformPadding
ÃÃ 
=
ÃÃ 
Mathf
ÃÃ "
.
ÃÃ" #
Max
ÃÃ# &
(
ÃÃ& '
padding
ÃÃ' .
.
ÃÃ. /
z
ÃÃ/ 0
,
ÃÃ0 1
uniformPadding
ÃÃ2 @
)
ÃÃ@ A
;
ÃÃA B
uniformPadding
ÕÕ 
=
ÕÕ 
Mathf
ÕÕ "
.
ÕÕ" #
Max
ÕÕ# &
(
ÕÕ& '
padding
ÕÕ' .
.
ÕÕ. /
w
ÕÕ/ 0
,
ÕÕ0 1
uniformPadding
ÕÕ2 @
)
ÕÕ@ A
;
ÕÕA B
return
œœ 
uniformPadding
œœ !
+
œœ" #
$num
œœ$ )
;
œœ) *
}
–– 	
public
‘‘ 
static
‘‘ 
float
‘‘ 

GetPadding
‘‘ &
(
‘‘& '
Material
‘‘' /
[
‘‘/ 0
]
‘‘0 1
	materials
‘‘2 ;
,
‘‘; <
bool
‘‘= A 
enableExtraPadding
‘‘B T
,
‘‘T U
bool
‘‘V Z
isBold
‘‘[ a
)
‘‘a b
{
’’ 	
if
ÿÿ 
(
ÿÿ 
isInitialized
ÿÿ 
==
ÿÿ  
false
ÿÿ! &
)
ÿÿ& '"
GetShaderPropertyIDs
ŸŸ $
(
ŸŸ$ %
)
ŸŸ% &
;
ŸŸ& '
if
‹‹ 
(
‹‹ 
	materials
‹‹ 
==
‹‹ 
null
‹‹ !
)
‹‹! "
return
‹‹# )
$num
‹‹* +
;
‹‹+ ,
int
ﬁﬁ 
extraPadding
ﬁﬁ 
=
ﬁﬁ  
enableExtraPadding
ﬁﬁ 1
?
ﬁﬁ2 3
$num
ﬁﬁ4 5
:
ﬁﬁ6 7
$num
ﬁﬁ8 9
;
ﬁﬁ9 :
if
·· 
(
·· 
	materials
·· 
[
·· 
$num
·· 
]
·· 
.
·· 
HasProperty
·· (
(
··( )

ID_Padding
··) 3
)
··3 4
)
··4 5
return
‚‚ 
extraPadding
‚‚ #
+
‚‚$ %
	materials
‚‚& /
[
‚‚/ 0
$num
‚‚0 1
]
‚‚1 2
.
‚‚2 3
GetFloat
‚‚3 ;
(
‚‚; <

ID_Padding
‚‚< F
)
‚‚F G
;
‚‚G H
Vector4
‰‰ 
padding
‰‰ 
=
‰‰ 
Vector4
‰‰ %
.
‰‰% &
zero
‰‰& *
;
‰‰* +
Vector4
ÂÂ 

maxPadding
ÂÂ 
=
ÂÂ  
Vector4
ÂÂ! (
.
ÂÂ( )
zero
ÂÂ) -
;
ÂÂ- .
float
ÁÁ 

faceDilate
ÁÁ 
=
ÁÁ 
$num
ÁÁ  
;
ÁÁ  !
float
ËË 
faceSoftness
ËË 
=
ËË  
$num
ËË! "
;
ËË" #
float
ÈÈ 
outlineThickness
ÈÈ "
=
ÈÈ# $
$num
ÈÈ% &
;
ÈÈ& '
float
ÍÍ 
scaleRatio_A
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
float
ÎÎ 
scaleRatio_B
ÎÎ 
=
ÎÎ  
$num
ÎÎ! "
;
ÎÎ" #
float
ÏÏ 
scaleRatio_C
ÏÏ 
=
ÏÏ  
$num
ÏÏ! "
;
ÏÏ" #
float
ÓÓ 

glowOffset
ÓÓ 
=
ÓÓ 
$num
ÓÓ  
;
ÓÓ  !
float
ÔÔ 
	glowOuter
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ  
float
ÒÒ 
uniformPadding
ÒÒ  
=
ÒÒ! "
$num
ÒÒ# $
;
ÒÒ$ %
for
ÛÛ 
(
ÛÛ 
int
ÛÛ 
i
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
i
ÛÛ 
<
ÛÛ 
	materials
ÛÛ  )
.
ÛÛ) *
Length
ÛÛ* 0
;
ÛÛ0 1
i
ÛÛ2 3
++
ÛÛ3 5
)
ÛÛ5 6
{
ÙÙ 
ShaderUtilities
ˆˆ 
.
ˆˆ   
UpdateShaderRatios
ˆˆ  2
(
ˆˆ2 3
	materials
ˆˆ3 <
[
ˆˆ< =
i
ˆˆ= >
]
ˆˆ> ?
)
ˆˆ? @
;
ˆˆ@ A
string
¯¯ 
[
¯¯ 
]
¯¯ 
shaderKeywords
¯¯ '
=
¯¯( )
	materials
¯¯* 3
[
¯¯3 4
i
¯¯4 5
]
¯¯5 6
.
¯¯6 7
shaderKeywords
¯¯7 E
;
¯¯E F
if
˙˙ 
(
˙˙ 
	materials
˙˙ 
[
˙˙ 
i
˙˙ 
]
˙˙  
.
˙˙  !
HasProperty
˙˙! ,
(
˙˙, -
ShaderUtilities
˙˙- <
.
˙˙< =
ID_ScaleRatio_A
˙˙= L
)
˙˙L M
)
˙˙M N
scaleRatio_A
˚˚  
=
˚˚! "
	materials
˚˚# ,
[
˚˚, -
i
˚˚- .
]
˚˚. /
.
˚˚/ 0
GetFloat
˚˚0 8
(
˚˚8 9
ShaderUtilities
˚˚9 H
.
˚˚H I
ID_ScaleRatio_A
˚˚I X
)
˚˚X Y
;
˚˚Y Z
if
˝˝ 
(
˝˝ 
	materials
˝˝ 
[
˝˝ 
i
˝˝ 
]
˝˝  
.
˝˝  !
HasProperty
˝˝! ,
(
˝˝, -
ShaderUtilities
˝˝- <
.
˝˝< =
ID_FaceDilate
˝˝= J
)
˝˝J K
)
˝˝K L

faceDilate
˛˛ 
=
˛˛  
	materials
˛˛! *
[
˛˛* +
i
˛˛+ ,
]
˛˛, -
.
˛˛- .
GetFloat
˛˛. 6
(
˛˛6 7
ShaderUtilities
˛˛7 F
.
˛˛F G
ID_FaceDilate
˛˛G T
)
˛˛T U
*
˛˛V W
scaleRatio_A
˛˛X d
;
˛˛d e
if
ÄÄ 
(
ÄÄ 
	materials
ÄÄ 
[
ÄÄ 
i
ÄÄ 
]
ÄÄ  
.
ÄÄ  !
HasProperty
ÄÄ! ,
(
ÄÄ, -
ShaderUtilities
ÄÄ- <
.
ÄÄ< = 
ID_OutlineSoftness
ÄÄ= O
)
ÄÄO P
)
ÄÄP Q
faceSoftness
ÅÅ  
=
ÅÅ! "
	materials
ÅÅ# ,
[
ÅÅ, -
i
ÅÅ- .
]
ÅÅ. /
.
ÅÅ/ 0
GetFloat
ÅÅ0 8
(
ÅÅ8 9
ShaderUtilities
ÅÅ9 H
.
ÅÅH I 
ID_OutlineSoftness
ÅÅI [
)
ÅÅ[ \
*
ÅÅ] ^
scaleRatio_A
ÅÅ_ k
;
ÅÅk l
if
ÉÉ 
(
ÉÉ 
	materials
ÉÉ 
[
ÉÉ 
i
ÉÉ 
]
ÉÉ  
.
ÉÉ  !
HasProperty
ÉÉ! ,
(
ÉÉ, -
ShaderUtilities
ÉÉ- <
.
ÉÉ< =
ID_OutlineWidth
ÉÉ= L
)
ÉÉL M
)
ÉÉM N
outlineThickness
ÑÑ $
=
ÑÑ% &
	materials
ÑÑ' 0
[
ÑÑ0 1
i
ÑÑ1 2
]
ÑÑ2 3
.
ÑÑ3 4
GetFloat
ÑÑ4 <
(
ÑÑ< =
ShaderUtilities
ÑÑ= L
.
ÑÑL M
ID_OutlineWidth
ÑÑM \
)
ÑÑ\ ]
*
ÑÑ^ _
scaleRatio_A
ÑÑ` l
;
ÑÑl m
uniformPadding
ÜÜ 
=
ÜÜ  
outlineThickness
ÜÜ! 1
+
ÜÜ2 3
faceSoftness
ÜÜ4 @
+
ÜÜA B

faceDilate
ÜÜC M
;
ÜÜM N
if
ââ 
(
ââ 
	materials
ââ 
[
ââ 
i
ââ 
]
ââ  
.
ââ  !
HasProperty
ââ! ,
(
ââ, -
ShaderUtilities
ââ- <
.
ââ< =
ID_GlowOffset
ââ= J
)
ââJ K
&&
ââL N
shaderKeywords
ââO ]
.
ââ] ^
Contains
ââ^ f
(
ââf g
ShaderUtilities
ââg v
.
ââv w
Keyword_Glowââw É
)ââÉ Ñ
)ââÑ Ö
{
ää 
if
ãã 
(
ãã 
	materials
ãã !
[
ãã! "
i
ãã" #
]
ãã# $
.
ãã$ %
HasProperty
ãã% 0
(
ãã0 1
ShaderUtilities
ãã1 @
.
ãã@ A
ID_ScaleRatio_B
ããA P
)
ããP Q
)
ããQ R
scaleRatio_B
åå $
=
åå% &
	materials
åå' 0
[
åå0 1
i
åå1 2
]
åå2 3
.
åå3 4
GetFloat
åå4 <
(
åå< =
ShaderUtilities
åå= L
.
ååL M
ID_ScaleRatio_B
ååM \
)
åå\ ]
;
åå] ^

glowOffset
éé 
=
éé  
	materials
éé! *
[
éé* +
i
éé+ ,
]
éé, -
.
éé- .
GetFloat
éé. 6
(
éé6 7
ShaderUtilities
éé7 F
.
ééF G
ID_GlowOffset
ééG T
)
ééT U
*
ééV W
scaleRatio_B
ééX d
;
ééd e
	glowOuter
èè 
=
èè 
	materials
èè  )
[
èè) *
i
èè* +
]
èè+ ,
.
èè, -
GetFloat
èè- 5
(
èè5 6
ShaderUtilities
èè6 E
.
èèE F
ID_GlowOuter
èèF R
)
èèR S
*
èèT U
scaleRatio_B
èèV b
;
èèb c
}
êê 
uniformPadding
íí 
=
íí  
Mathf
íí! &
.
íí& '
Max
íí' *
(
íí* +
uniformPadding
íí+ 9
,
íí9 :

faceDilate
íí; E
+
ííF G

glowOffset
ííH R
+
ííS T
	glowOuter
ííU ^
)
íí^ _
;
íí_ `
if
ïï 
(
ïï 
	materials
ïï 
[
ïï 
i
ïï 
]
ïï  
.
ïï  !
HasProperty
ïï! ,
(
ïï, -
ShaderUtilities
ïï- <
.
ïï< =!
ID_UnderlaySoftness
ïï= P
)
ïïP Q
&&
ïïR T
shaderKeywords
ïïU c
.
ïïc d
Contains
ïïd l
(
ïïl m
ShaderUtilities
ïïm |
.
ïï| }
Keyword_Underlayïï} ç
)ïïç é
)ïïé è
{
ññ 
if
óó 
(
óó 
	materials
óó !
[
óó! "
i
óó" #
]
óó# $
.
óó$ %
HasProperty
óó% 0
(
óó0 1
ShaderUtilities
óó1 @
.
óó@ A
ID_ScaleRatio_C
óóA P
)
óóP Q
)
óóQ R
scaleRatio_C
òò $
=
òò% &
	materials
òò' 0
[
òò0 1
i
òò1 2
]
òò2 3
.
òò3 4
GetFloat
òò4 <
(
òò< =
ShaderUtilities
òò= L
.
òòL M
ID_ScaleRatio_C
òòM \
)
òò\ ]
;
òò] ^
float
öö 
offsetX
öö !
=
öö" #
	materials
öö$ -
[
öö- .
i
öö. /
]
öö/ 0
.
öö0 1
GetFloat
öö1 9
(
öö9 :
ShaderUtilities
öö: I
.
ööI J 
ID_UnderlayOffsetX
ööJ \
)
öö\ ]
*
öö^ _
scaleRatio_C
öö` l
;
ööl m
float
õõ 
offsetY
õõ !
=
õõ" #
	materials
õõ$ -
[
õõ- .
i
õõ. /
]
õõ/ 0
.
õõ0 1
GetFloat
õõ1 9
(
õõ9 :
ShaderUtilities
õõ: I
.
õõI J 
ID_UnderlayOffsetY
õõJ \
)
õõ\ ]
*
õõ^ _
scaleRatio_C
õõ` l
;
õõl m
float
úú 
dilate
úú  
=
úú! "
	materials
úú# ,
[
úú, -
i
úú- .
]
úú. /
.
úú/ 0
GetFloat
úú0 8
(
úú8 9
ShaderUtilities
úú9 H
.
úúH I
ID_UnderlayDilate
úúI Z
)
úúZ [
*
úú\ ]
scaleRatio_C
úú^ j
;
úúj k
float
ùù 
softness
ùù "
=
ùù# $
	materials
ùù% .
[
ùù. /
i
ùù/ 0
]
ùù0 1
.
ùù1 2
GetFloat
ùù2 :
(
ùù: ;
ShaderUtilities
ùù; J
.
ùùJ K!
ID_UnderlaySoftness
ùùK ^
)
ùù^ _
*
ùù` a
scaleRatio_C
ùùb n
;
ùùn o
padding
üü 
.
üü 
x
üü 
=
üü 
Mathf
üü  %
.
üü% &
Max
üü& )
(
üü) *
padding
üü* 1
.
üü1 2
x
üü2 3
,
üü3 4

faceDilate
üü5 ?
+
üü@ A
dilate
üüB H
+
üüI J
softness
üüK S
-
üüT U
offsetX
üüV ]
)
üü] ^
;
üü^ _
padding
†† 
.
†† 
y
†† 
=
†† 
Mathf
††  %
.
††% &
Max
††& )
(
††) *
padding
††* 1
.
††1 2
y
††2 3
,
††3 4

faceDilate
††5 ?
+
††@ A
dilate
††B H
+
††I J
softness
††K S
-
††T U
offsetY
††V ]
)
††] ^
;
††^ _
padding
°° 
.
°° 
z
°° 
=
°° 
Mathf
°°  %
.
°°% &
Max
°°& )
(
°°) *
padding
°°* 1
.
°°1 2
z
°°2 3
,
°°3 4

faceDilate
°°5 ?
+
°°@ A
dilate
°°B H
+
°°I J
softness
°°K S
+
°°T U
offsetX
°°V ]
)
°°] ^
;
°°^ _
padding
¢¢ 
.
¢¢ 
w
¢¢ 
=
¢¢ 
Mathf
¢¢  %
.
¢¢% &
Max
¢¢& )
(
¢¢) *
padding
¢¢* 1
.
¢¢1 2
w
¢¢2 3
,
¢¢3 4

faceDilate
¢¢5 ?
+
¢¢@ A
dilate
¢¢B H
+
¢¢I J
softness
¢¢K S
+
¢¢T U
offsetY
¢¢V ]
)
¢¢] ^
;
¢¢^ _
}
££ 
padding
•• 
.
•• 
x
•• 
=
•• 
Mathf
•• !
.
••! "
Max
••" %
(
••% &
padding
••& -
.
••- .
x
••. /
,
••/ 0
uniformPadding
••1 ?
)
••? @
;
••@ A
padding
¶¶ 
.
¶¶ 
y
¶¶ 
=
¶¶ 
Mathf
¶¶ !
.
¶¶! "
Max
¶¶" %
(
¶¶% &
padding
¶¶& -
.
¶¶- .
y
¶¶. /
,
¶¶/ 0
uniformPadding
¶¶1 ?
)
¶¶? @
;
¶¶@ A
padding
ßß 
.
ßß 
z
ßß 
=
ßß 
Mathf
ßß !
.
ßß! "
Max
ßß" %
(
ßß% &
padding
ßß& -
.
ßß- .
z
ßß. /
,
ßß/ 0
uniformPadding
ßß1 ?
)
ßß? @
;
ßß@ A
padding
®® 
.
®® 
w
®® 
=
®® 
Mathf
®® !
.
®®! "
Max
®®" %
(
®®% &
padding
®®& -
.
®®- .
w
®®. /
,
®®/ 0
uniformPadding
®®1 ?
)
®®? @
;
®®@ A
padding
™™ 
.
™™ 
x
™™ 
+=
™™ 
extraPadding
™™ )
;
™™) *
padding
´´ 
.
´´ 
y
´´ 
+=
´´ 
extraPadding
´´ )
;
´´) *
padding
¨¨ 
.
¨¨ 
z
¨¨ 
+=
¨¨ 
extraPadding
¨¨ )
;
¨¨) *
padding
≠≠ 
.
≠≠ 
w
≠≠ 
+=
≠≠ 
extraPadding
≠≠ )
;
≠≠) *
padding
ØØ 
.
ØØ 
x
ØØ 
=
ØØ 
Mathf
ØØ !
.
ØØ! "
Min
ØØ" %
(
ØØ% &
padding
ØØ& -
.
ØØ- .
x
ØØ. /
,
ØØ/ 0
$num
ØØ1 2
)
ØØ2 3
;
ØØ3 4
padding
∞∞ 
.
∞∞ 
y
∞∞ 
=
∞∞ 
Mathf
∞∞ !
.
∞∞! "
Min
∞∞" %
(
∞∞% &
padding
∞∞& -
.
∞∞- .
y
∞∞. /
,
∞∞/ 0
$num
∞∞1 2
)
∞∞2 3
;
∞∞3 4
padding
±± 
.
±± 
z
±± 
=
±± 
Mathf
±± !
.
±±! "
Min
±±" %
(
±±% &
padding
±±& -
.
±±- .
z
±±. /
,
±±/ 0
$num
±±1 2
)
±±2 3
;
±±3 4
padding
≤≤ 
.
≤≤ 
w
≤≤ 
=
≤≤ 
Mathf
≤≤ !
.
≤≤! "
Min
≤≤" %
(
≤≤% &
padding
≤≤& -
.
≤≤- .
w
≤≤. /
,
≤≤/ 0
$num
≤≤1 2
)
≤≤2 3
;
≤≤3 4

maxPadding
¥¥ 
.
¥¥ 
x
¥¥ 
=
¥¥ 

maxPadding
¥¥ )
.
¥¥) *
x
¥¥* +
<
¥¥, -
padding
¥¥. 5
.
¥¥5 6
x
¥¥6 7
?
¥¥8 9
padding
¥¥: A
.
¥¥A B
x
¥¥B C
:
¥¥D E

maxPadding
¥¥F P
.
¥¥P Q
x
¥¥Q R
;
¥¥R S

maxPadding
µµ 
.
µµ 
y
µµ 
=
µµ 

maxPadding
µµ )
.
µµ) *
y
µµ* +
<
µµ, -
padding
µµ. 5
.
µµ5 6
y
µµ6 7
?
µµ8 9
padding
µµ: A
.
µµA B
y
µµB C
:
µµD E

maxPadding
µµF P
.
µµP Q
y
µµQ R
;
µµR S

maxPadding
∂∂ 
.
∂∂ 
z
∂∂ 
=
∂∂ 

maxPadding
∂∂ )
.
∂∂) *
z
∂∂* +
<
∂∂, -
padding
∂∂. 5
.
∂∂5 6
z
∂∂6 7
?
∂∂8 9
padding
∂∂: A
.
∂∂A B
z
∂∂B C
:
∂∂D E

maxPadding
∂∂F P
.
∂∂P Q
z
∂∂Q R
;
∂∂R S

maxPadding
∑∑ 
.
∑∑ 
w
∑∑ 
=
∑∑ 

maxPadding
∑∑ )
.
∑∑) *
w
∑∑* +
<
∑∑, -
padding
∑∑. 5
.
∑∑5 6
w
∑∑6 7
?
∑∑8 9
padding
∑∑: A
.
∑∑A B
w
∑∑B C
:
∑∑D E

maxPadding
∑∑F P
.
∑∑P Q
w
∑∑Q R
;
∑∑R S
}
ππ 
float
ªª 
gradientScale
ªª 
=
ªª  !
	materials
ªª" +
[
ªª+ ,
$num
ªª, -
]
ªª- .
.
ªª. /
GetFloat
ªª/ 7
(
ªª7 8
ShaderUtilities
ªª8 G
.
ªªG H
ID_GradientScale
ªªH X
)
ªªX Y
;
ªªY Z
padding
ºº 
*=
ºº 
gradientScale
ºº $
;
ºº$ %
uniformPadding
øø 
=
øø 
Mathf
øø "
.
øø" #
Max
øø# &
(
øø& '
padding
øø' .
.
øø. /
x
øø/ 0
,
øø0 1
padding
øø2 9
.
øø9 :
y
øø: ;
)
øø; <
;
øø< =
uniformPadding
¿¿ 
=
¿¿ 
Mathf
¿¿ "
.
¿¿" #
Max
¿¿# &
(
¿¿& '
padding
¿¿' .
.
¿¿. /
z
¿¿/ 0
,
¿¿0 1
uniformPadding
¿¿2 @
)
¿¿@ A
;
¿¿A B
uniformPadding
¡¡ 
=
¡¡ 
Mathf
¡¡ "
.
¡¡" #
Max
¡¡# &
(
¡¡& '
padding
¡¡' .
.
¡¡. /
w
¡¡/ 0
,
¡¡0 1
uniformPadding
¡¡2 @
)
¡¡@ A
;
¡¡A B
return
√√ 
uniformPadding
√√ !
+
√√" #
$num
√√$ )
;
√√) *
}
ƒƒ 	
}
«« 
}…… é
nC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_ScrollbarEventHandler.cs
	namespace 	
TMPro
 
{ 
public

 

class

 %
TMP_ScrollbarEventHandler

 *
:

+ ,
MonoBehaviour

- :
,

: ; 
IPointerClickHandler

< P
,

P Q
ISelectHandler

R `
,

` a
IDeselectHandler

b r
{ 
public 
bool 

isSelected 
; 
public 
void 
OnPointerClick "
(" #
PointerEventData# 3
	eventData4 =
)= >
{ 	
Debug 
. 
Log 
( 
$str *
)* +
;+ ,
} 	
public 
void 
OnSelect 
( 
BaseEventData *
	eventData+ 4
)4 5
{ 	
Debug 
. 
Log 
( 
$str *
)* +
;+ ,

isSelected 
= 
true 
; 
} 	
public 
void 

OnDeselect 
( 
BaseEventData ,
	eventData- 6
)6 7
{ 	
Debug 
. 
Log 
( 
$str -
)- .
;. /

isSelected 
= 
false 
; 
} 	
} 
} ¢
iC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_FontFeatureTable.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public 

class  
TMP_FontFeatureTable %
{ 
public 
List 
< )
TMP_GlyphPairAdjustmentRecord 1
>1 2&
glyphPairAdjustmentRecords3 M
{ 	
get 
{ 
return (
m_GlyphPairAdjustmentRecords 5
;5 6
}7 8
set 
{ (
m_GlyphPairAdjustmentRecords .
=/ 0
value1 6
;6 7
}8 9
} 	
[ 	
SerializeField	 
] 
internal 
List 
< )
TMP_GlyphPairAdjustmentRecord 3
>3 4(
m_GlyphPairAdjustmentRecords5 Q
;Q R
internal 

Dictionary 
< 
uint  
,  !)
TMP_GlyphPairAdjustmentRecord" ?
>? @7
+m_GlyphPairAdjustmentRecordLookupDictionaryA l
;l m
public##  
TMP_FontFeatureTable## #
(### $
)##$ %
{$$ 	(
m_GlyphPairAdjustmentRecords%% (
=%%) *
new%%+ .
List%%/ 3
<%%3 4)
TMP_GlyphPairAdjustmentRecord%%4 Q
>%%Q R
(%%R S
)%%S T
;%%T U7
+m_GlyphPairAdjustmentRecordLookupDictionary&& 7
=&&8 9
new&&: =

Dictionary&&> H
<&&H I
uint&&I M
,&&M N)
TMP_GlyphPairAdjustmentRecord&&O l
>&&l m
(&&m n
)&&n o
;&&o p
}'' 	
public00 
void00 *
SortGlyphPairAdjustmentRecords00 2
(002 3
)003 4
{11 	
if33 
(33 (
m_GlyphPairAdjustmentRecords33 ,
.33, -
Count33- 2
>333 4
$num335 6
)336 7(
m_GlyphPairAdjustmentRecords44 ,
=44- .(
m_GlyphPairAdjustmentRecords44/ K
.44K L
OrderBy44L S
(44S T
s44T U
=>44V X
s44Y Z
.44Z [!
firstAdjustmentRecord44[ p
.44p q

glyphIndex44q {
)44{ |
.44| }
ThenBy	44} É
(
44É Ñ
s
44Ñ Ö
=>
44Ü à
s
44â ä
.
44ä ã$
secondAdjustmentRecord
44ã °
.
44° ¢

glyphIndex
44¢ ¨
)
44¨ ≠
.
44≠ Æ
ToList
44Æ ¥
(
44¥ µ
)
44µ ∂
;
44∂ ∑
}55 	
}66 
}77 ¢g
kC:\code\ispclone\Library\PackageCache\com.unity.textmeshpro@3.0.6\Scripts\Runtime\TMP_FontFeaturesCommon.cs
	namespace 	
TMPro
 
{		 
[

 
Flags

 

]


 
public 

enum "
FontFeatureLookupFlags &
{ 
None 
=$ %
$num* -
,- .
IgnoreLigatures 
=$ %
$num( -
,- .$
IgnoreSpacingAdjustments  
=$ %
$num( -
,- .
} 
[ 
Serializable 
] 
public 

struct  
TMP_GlyphValueRecord &
{ 
public 
float 

xPlacement 
{  !
get" %
{& '
return( .
m_XPlacement/ ;
;; <
}= >
set? B
{C D
m_XPlacementE Q
=R S
valueT Y
;Y Z
}[ \
}] ^
public   
float   

yPlacement   
{    !
get  " %
{  & '
return  ( .
m_YPlacement  / ;
;  ; <
}  = >
set  ? B
{  C D
m_YPlacement  E Q
=  R S
value  T Y
;  Y Z
}  [ \
}  ] ^
public%% 
float%% 
xAdvance%% 
{%% 
get%%  #
{%%$ %
return%%& ,

m_XAdvance%%- 7
;%%7 8
}%%9 :
set%%; >
{%%? @

m_XAdvance%%A K
=%%L M
value%%N S
;%%S T
}%%U V
}%%W X
public** 
float** 
yAdvance** 
{** 
get**  #
{**$ %
return**& ,

m_YAdvance**- 7
;**7 8
}**9 :
set**; >
{**? @

m_YAdvance**A K
=**L M
value**N S
;**S T
}**U V
}**W X
[00 	
SerializeField00	 
]00 
internal11 
float11 
m_XPlacement11 #
;11# $
[33 	
SerializeField33	 
]33 
internal44 
float44 
m_YPlacement44 #
;44# $
[66 	
SerializeField66	 
]66 
internal77 
float77 

m_XAdvance77 !
;77! "
[99 	
SerializeField99	 
]99 
internal:: 
float:: 

m_YAdvance:: !
;::! "
publicDD  
TMP_GlyphValueRecordDD #
(DD# $
floatDD$ )

xPlacementDD* 4
,DD4 5
floatDD6 ;

yPlacementDD< F
,DDF G
floatDDH M
xAdvanceDDN V
,DDV W
floatDDX ]
yAdvanceDD^ f
)DDf g
{EE 	
m_XPlacementFF 
=FF 

xPlacementFF %
;FF% &
m_YPlacementGG 
=GG 

yPlacementGG %
;GG% &

m_XAdvanceHH 
=HH 
xAdvanceHH !
;HH! "

m_YAdvanceII 
=II 
yAdvanceII !
;II! "
}JJ 	
internalLL  
TMP_GlyphValueRecordLL %
(LL% &#
GlyphValueRecord_LegacyLL& =
valueRecordLL> I
)LLI J
{MM 	
m_XPlacementNN 
=NN 
valueRecordNN &
.NN& '

xPlacementNN' 1
;NN1 2
m_YPlacementOO 
=OO 
valueRecordOO &
.OO& '

yPlacementOO' 1
;OO1 2

m_XAdvancePP 
=PP 
valueRecordPP $
.PP$ %
xAdvancePP% -
;PP- .

m_YAdvanceQQ 
=QQ 
valueRecordQQ $
.QQ$ %
yAdvanceQQ% -
;QQ- .
}RR 	
internalTT  
TMP_GlyphValueRecordTT %
(TT% &
GlyphValueRecordTT& 6
valueRecordTT7 B
)TTB C
{UU 	
m_XPlacementVV 
=VV 
valueRecordVV &
.VV& '

xPlacementVV' 1
;VV1 2
m_YPlacementWW 
=WW 
valueRecordWW &
.WW& '

yPlacementWW' 1
;WW1 2

m_XAdvanceXX 
=XX 
valueRecordXX $
.XX$ %
xAdvanceXX% -
;XX- .

m_YAdvanceYY 
=YY 
valueRecordYY $
.YY$ %
yAdvanceYY% -
;YY- .
}ZZ 	
public\\ 
static\\  
TMP_GlyphValueRecord\\ *
operator\\+ 3
+\\4 5
(\\5 6 
TMP_GlyphValueRecord\\6 J
a\\K L
,\\L M 
TMP_GlyphValueRecord\\N b
b\\c d
)\\d e
{]] 	 
TMP_GlyphValueRecord^^  
c^^! "
;^^" #
c__ 
.__ 
m_XPlacement__ 
=__ 
a__ 
.__ 

xPlacement__ )
+__* +
b__, -
.__- .

xPlacement__. 8
;__8 9
c`` 
.`` 
m_YPlacement`` 
=`` 
a`` 
.`` 

yPlacement`` )
+``* +
b``, -
.``- .

yPlacement``. 8
;``8 9
caa 
.aa 

m_XAdvanceaa 
=aa 
aaa 
.aa 
xAdvanceaa %
+aa& '
baa( )
.aa) *
xAdvanceaa* 2
;aa2 3
cbb 
.bb 

m_YAdvancebb 
=bb 
abb 
.bb 
yAdvancebb %
+bb& '
bbb( )
.bb) *
yAdvancebb* 2
;bb2 3
returndd 
cdd 
;dd 
}ee 	
}ff 
[kk 
Serializablekk 
]kk 
publicll 

structll %
TMP_GlyphAdjustmentRecordll +
{mm 
publicqq 
uintqq 

glyphIndexqq 
{qq  
getqq! $
{qq% &
returnqq' -
m_GlyphIndexqq. :
;qq: ;
}qq< =
setqq> A
{qqB C
m_GlyphIndexqqD P
=qqQ R
valueqqS X
;qqX Y
}qqZ [
}qq\ ]
publicvv  
TMP_GlyphValueRecordvv #
glyphValueRecordvv$ 4
{vv5 6
getvv7 :
{vv; <
returnvv= C
m_GlyphValueRecordvvD V
;vvV W
}vvX Y
setvvZ ]
{vv^ _
m_GlyphValueRecordvv` r
=vvs t
valuevvu z
;vvz {
}vv| }
}vv~ 
[|| 	
SerializeField||	 
]|| 
internal}} 
uint}} 
m_GlyphIndex}} "
;}}" #
[ 	
SerializeField	 
] 
internal
ÄÄ "
TMP_GlyphValueRecord
ÄÄ % 
m_GlyphValueRecord
ÄÄ& 8
;
ÄÄ8 9
public
áá '
TMP_GlyphAdjustmentRecord
áá (
(
áá( )
uint
áá) -

glyphIndex
áá. 8
,
áá8 9"
TMP_GlyphValueRecord
áá: N
glyphValueRecord
ááO _
)
áá_ `
{
àà 	
m_GlyphIndex
ââ 
=
ââ 

glyphIndex
ââ %
;
ââ% & 
m_GlyphValueRecord
ää 
=
ää  
glyphValueRecord
ää! 1
;
ää1 2
}
ãã 	
internal
çç '
TMP_GlyphAdjustmentRecord
çç *
(
çç* +#
GlyphAdjustmentRecord
çç+ @
adjustmentRecord
ççA Q
)
ççQ R
{
éé 	
m_GlyphIndex
èè 
=
èè 
adjustmentRecord
èè +
.
èè+ ,

glyphIndex
èè, 6
;
èè6 7 
m_GlyphValueRecord
êê 
=
êê  
new
êê! $"
TMP_GlyphValueRecord
êê% 9
(
êê9 :
adjustmentRecord
êê: J
.
êêJ K
glyphValueRecord
êêK [
)
êê[ \
;
êê\ ]
}
ëë 	
}
íí 
[
óó 
Serializable
óó 
]
óó 
public
òò 

class
òò +
TMP_GlyphPairAdjustmentRecord
òò .
{
ôô 
public
ùù '
TMP_GlyphAdjustmentRecord
ùù (#
firstAdjustmentRecord
ùù) >
{
ùù? @
get
ùùA D
{
ùùE F
return
ùùG M%
m_FirstAdjustmentRecord
ùùN e
;
ùùe f
}
ùùg h
set
ùùi l
{
ùùm n&
m_FirstAdjustmentRecordùùo Ü
=ùùá à
valueùùâ é
;ùùé è
}ùùê ë
}ùùí ì
public
¢¢ '
TMP_GlyphAdjustmentRecord
¢¢ ($
secondAdjustmentRecord
¢¢) ?
{
¢¢@ A
get
¢¢B E
{
¢¢F G
return
¢¢H N&
m_SecondAdjustmentRecord
¢¢O g
;
¢¢g h
}
¢¢i j
set
¢¢k n
{
¢¢o p'
m_SecondAdjustmentRecord¢¢q â
=¢¢ä ã
value¢¢å ë
;¢¢ë í
}¢¢ì î
}¢¢ï ñ
public
ßß $
FontFeatureLookupFlags
ßß % 
featureLookupFlags
ßß& 8
{
ßß9 :
get
ßß; >
{
ßß? @
return
ßßA G"
m_FeatureLookupFlags
ßßH \
;
ßß\ ]
}
ßß^ _
set
ßß` c
{
ßßd e"
m_FeatureLookupFlags
ßßf z
=
ßß{ |
valueßß} Ç
;ßßÇ É
}ßßÑ Ö
}ßßÜ á
[
≠≠ 	
SerializeField
≠≠	 
]
≠≠ 
internal
ÆÆ '
TMP_GlyphAdjustmentRecord
ÆÆ *%
m_FirstAdjustmentRecord
ÆÆ+ B
;
ÆÆB C
[
∞∞ 	
SerializeField
∞∞	 
]
∞∞ 
internal
±± '
TMP_GlyphAdjustmentRecord
±± *&
m_SecondAdjustmentRecord
±±+ C
;
±±C D
[
≥≥ 	
SerializeField
≥≥	 
]
≥≥ 
internal
¥¥ $
FontFeatureLookupFlags
¥¥ '"
m_FeatureLookupFlags
¥¥( <
;
¥¥< =
public
ªª +
TMP_GlyphPairAdjustmentRecord
ªª ,
(
ªª, -'
TMP_GlyphAdjustmentRecord
ªª- F#
firstAdjustmentRecord
ªªG \
,
ªª\ ]'
TMP_GlyphAdjustmentRecord
ªª^ w%
secondAdjustmentRecordªªx é
)ªªé è
{
ºº 	%
m_FirstAdjustmentRecord
ΩΩ #
=
ΩΩ$ %#
firstAdjustmentRecord
ΩΩ& ;
;
ΩΩ; <&
m_SecondAdjustmentRecord
ææ $
=
ææ% &$
secondAdjustmentRecord
ææ' =
;
ææ= >"
m_FeatureLookupFlags
øø  
=
øø! "$
FontFeatureLookupFlags
øø# 9
.
øø9 :
None
øø: >
;
øø> ?
}
¿¿ 	
internal
«« +
TMP_GlyphPairAdjustmentRecord
«« .
(
««. /'
GlyphPairAdjustmentRecord
««/ H'
glyphPairAdjustmentRecord
««I b
)
««b c
{
»» 	%
m_FirstAdjustmentRecord
…… #
=
……$ %
new
……& )'
TMP_GlyphAdjustmentRecord
……* C
(
……C D'
glyphPairAdjustmentRecord
……D ]
.
……] ^#
firstAdjustmentRecord
……^ s
)
……s t
;
……t u&
m_SecondAdjustmentRecord
   $
=
  % &
new
  ' *'
TMP_GlyphAdjustmentRecord
  + D
(
  D E'
glyphPairAdjustmentRecord
  E ^
.
  ^ _$
secondAdjustmentRecord
  _ u
)
  u v
;
  v w"
m_FeatureLookupFlags
ÀÀ  
=
ÀÀ! "$
FontFeatureLookupFlags
ÀÀ# 9
.
ÀÀ9 :
None
ÀÀ: >
;
ÀÀ> ?
}
ÃÃ 	
}
ÕÕ 
public
œœ 

struct
œœ 
GlyphPairKey
œœ 
{
–– 
public
—— 
uint
—— 
firstGlyphIndex
—— #
;
——# $
public
““ 
uint
““ 
secondGlyphIndex
““ $
;
““$ %
public
”” 
uint
”” 
key
”” 
;
”” 
public
’’ 
GlyphPairKey
’’ 
(
’’ 
uint
’’  
firstGlyphIndex
’’! 0
,
’’0 1
uint
’’2 6
secondGlyphIndex
’’7 G
)
’’G H
{
÷÷ 	
this
◊◊ 
.
◊◊ 
firstGlyphIndex
◊◊  
=
◊◊! "
firstGlyphIndex
◊◊# 2
;
◊◊2 3
this
ÿÿ 
.
ÿÿ 
secondGlyphIndex
ÿÿ !
=
ÿÿ" #
secondGlyphIndex
ÿÿ$ 4
;
ÿÿ4 5
key
ŸŸ 
=
ŸŸ 
secondGlyphIndex
ŸŸ "
<<
ŸŸ# %
$num
ŸŸ& (
|
ŸŸ) *
firstGlyphIndex
ŸŸ+ :
;
ŸŸ: ;
}
⁄⁄ 	
internal
‹‹ 
GlyphPairKey
‹‹ 
(
‹‹ +
TMP_GlyphPairAdjustmentRecord
‹‹ ;
record
‹‹< B
)
‹‹B C
{
›› 	
firstGlyphIndex
ﬁﬁ 
=
ﬁﬁ 
record
ﬁﬁ $
.
ﬁﬁ$ %#
firstAdjustmentRecord
ﬁﬁ% :
.
ﬁﬁ: ;

glyphIndex
ﬁﬁ; E
;
ﬁﬁE F
secondGlyphIndex
ﬂﬂ 
=
ﬂﬂ 
record
ﬂﬂ %
.
ﬂﬂ% &$
secondAdjustmentRecord
ﬂﬂ& <
.
ﬂﬂ< =

glyphIndex
ﬂﬂ= G
;
ﬂﬂG H
key
‡‡ 
=
‡‡ 
secondGlyphIndex
‡‡ "
<<
‡‡# %
$num
‡‡& (
|
‡‡) *
firstGlyphIndex
‡‡+ :
;
‡‡: ;
}
·· 	
}
‚‚ 
}„„ 